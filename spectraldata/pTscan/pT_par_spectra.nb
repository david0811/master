(* Content-type: application/vnd.wolfram.mathematica *)

(*** Wolfram Notebook File ***)
(* http://www.wolfram.com/nb *)

(* CreatedBy='Mathematica 11.0' *)

(*CacheID: 234*)
(* Internal cache information:
NotebookFileLineBreakTest
NotebookFileLineBreakTest
NotebookDataPosition[       158,          7]
NotebookDataLength[    629996,      12247]
NotebookOptionsPosition[    625279,      12092]
NotebookOutlinePosition[    625660,      12109]
CellTagsIndexPosition[    625617,      12106]
WindowFrame->Normal*)

(* Beginning of Notebook Content *)
Notebook[{
Cell[BoxData[
 RowBox[{
  RowBox[{"SetDirectory", "[", 
   RowBox[{"NotebookDirectory", "[", "]"}], "]"}], ";"}]], "Input",
 CellChangeTimes->{{3.7491538644493732`*^9, 3.749153865833027*^9}, {
  3.749850941905223*^9, 3.749850942924405*^9}}],

Cell[CellGroupData[{

Cell["4 loop running coupling", "Section",
 CellChangeTimes->{{3.733038025331724*^9, 3.733038035264956*^9}, {
  3.7330493983743973`*^9, 3.733049402685856*^9}, {3.73312956042422*^9, 
  3.733129564816101*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", " ", 
   RowBox[{
    RowBox[{
     RowBox[{"form", " ", "hep"}], "-", 
     RowBox[{"ph", " ", "9703284"}]}], ",", " ", "vermaseren", ",", " ", 
    "larin", ",", " ", "Ritbergen"}], " ", "*)"}], "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{"\[CapitalLambda]QCD", "=", "0.2145"}], ";"}], " ", 
   "\[IndentingNewLine]", 
   RowBox[{"(*", " ", 
    RowBox[{
     RowBox[{"so", " ", "that", " ", "for", " ", "nF"}], "=", 
     RowBox[{
      RowBox[{"5", " ", "we", " ", "get", " ", "alpha_s", 
       RowBox[{"(", 
        RowBox[{"mz", "=", "91.188"}], ")"}]}], "=", 
      RowBox[{
       RowBox[{"0.1185", " ", 
        RowBox[{"(", 
         RowBox[{"PDG", " ", "value"}], ")"}], " ", "\[IndentingNewLine]", 
        "note", " ", "that", " ", "pdg", " ", "also", " ", "quotes", " ", 
        "\[Lambda]qcd"}], "=", 
       RowBox[{
        RowBox[{"0.214", " ", "for", " ", "nf"}], "=", 
        RowBox[{
        "5", " ", "everything", " ", "seems", " ", "consistent"}]}]}]}]}], 
    "*)"}], "\[IndentingNewLine]", "\[IndentingNewLine]", 
   RowBox[{"(*", "QCD", "*)"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"Nc", "=", "3."}], ";", 
    RowBox[{"CA", "=", "Nc"}], ";", " ", 
    RowBox[{"nF", "=", "3"}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"CF", "=", 
     RowBox[{
      RowBox[{"(", 
       RowBox[{
        SuperscriptBox["Nc", "2"], "-", "1"}], ")"}], "/", 
      RowBox[{"(", 
       RowBox[{"2", " ", "Nc"}], ")"}]}]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{"(*", 
    RowBox[{
    "coeft", " ", "of", " ", "the", " ", "renormalization", " ", "group", " ",
      "equations"}], "*)"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"\[Beta]0", "[", "Nf_", "]"}], "=", 
     RowBox[{
      RowBox[{"(", 
       RowBox[{
        RowBox[{
         RowBox[{"-", "11"}], "Nc"}], "+", 
        RowBox[{"2", "Nf"}]}], ")"}], "/", "12"}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"\[Beta]1", "[", "Nf_", "]"}], "=", 
     RowBox[{
      RowBox[{"(", 
       RowBox[{
        RowBox[{
         RowBox[{"-", "68"}], 
         SuperscriptBox["Nc", "2"]}], "+", 
        RowBox[{"20", "Nc", " ", "Nf"}], "+", 
        RowBox[{"12", "CF", " ", "Nf"}]}], ")"}], "/", 
      RowBox[{"(", 
       RowBox[{"3", " ", "32"}], ")"}]}]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"\[Beta]2", "[", "Nf_", "]"}], "=", 
     RowBox[{"-", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{"(", 
         RowBox[{"2857", "-", 
          RowBox[{
           RowBox[{"(", 
            RowBox[{"5033", "/", "9"}], ")"}], "Nf"}], "+", 
          RowBox[{
           RowBox[{"(", 
            RowBox[{"325", "/", "27"}], ")"}], " ", 
           SuperscriptBox["Nf", "2"]}]}], ")"}], "/", "128"}], ")"}]}]}], 
    ";"}], " ", 
   RowBox[{"(*", 
    RowBox[{
     RowBox[{"for", " ", "Nc"}], "=", 
     RowBox[{"3", " ", "only"}]}], "*)"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"\[Beta]3", "[", "Nf_", "]"}], "=", 
     RowBox[{
      RowBox[{"(", 
       RowBox[{
        RowBox[{"(", 
         RowBox[{"-", "1"}], ")"}], "/", "256"}], ")"}], 
      RowBox[{"(", 
       RowBox[{
        RowBox[{"(", 
         RowBox[{
          RowBox[{"149753", "/", "6"}], "+", 
          RowBox[{"3564", " ", 
           RowBox[{"Zeta", "[", "3", "]"}]}]}], ")"}], "-", 
        RowBox[{
         RowBox[{"(", 
          RowBox[{
           RowBox[{"1078361", "/", "162"}], "+", 
           RowBox[{
            RowBox[{"(", 
             RowBox[{"6508", "/", "27"}], ")"}], " ", 
            RowBox[{"Zeta", "[", "3", "]"}]}]}], ")"}], "Nf"}], "+", 
        RowBox[{
         RowBox[{"(", 
          RowBox[{
           RowBox[{"50065", "/", "162"}], "+", 
           RowBox[{
            RowBox[{"(", 
             RowBox[{"6472", "/", "81"}], ")"}], 
            RowBox[{"Zeta", "[", "3", "]"}]}]}], ")"}], 
         SuperscriptBox["Nf", "2"]}], "+", 
        RowBox[{
         RowBox[{"(", 
          RowBox[{"1093", "/", "729"}], ")"}], " ", 
         SuperscriptBox["Nf", "3"]}]}], ")"}]}]}], ";"}], 
   RowBox[{"(*", 
    RowBox[{
     RowBox[{"for", " ", "Nc"}], "=", 
     RowBox[{"3", " ", "only"}]}], "*)"}], "\[IndentingNewLine]", 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"\[Gamma]0", "[", "Nf_", "]"}], "=", 
     RowBox[{
      FractionBox["3", "4"], " ", "CF"}]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"\[Gamma]1", "[", "Nf_", "]"}], "=", 
     RowBox[{
      RowBox[{"(", 
       RowBox[{"1", "/", "16"}], ")"}], 
      RowBox[{"(", 
       RowBox[{
        RowBox[{"202", "/", "3"}], "-", 
        RowBox[{
         RowBox[{"(", 
          RowBox[{"20", "/", "9"}], ")"}], "Nf"}]}], ")"}]}]}], ";"}], 
   RowBox[{"(*", 
    RowBox[{
     RowBox[{"for", " ", "Nc"}], "=", 
     RowBox[{"3", " ", "only"}]}], "*)"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"\[Gamma]2", "[", "Nf_", "]"}], "=", 
     RowBox[{
      RowBox[{"(", 
       RowBox[{"1", "/", "64"}], ")"}], 
      RowBox[{"(", 
       RowBox[{"1249", "+", 
        RowBox[{
         RowBox[{"(", 
          RowBox[{
           RowBox[{"-", 
            RowBox[{"(", 
             RowBox[{"2216", "/", "27"}], ")"}]}], "-", 
           RowBox[{
            RowBox[{"(", 
             RowBox[{"160", "/", "3"}], ")"}], " ", 
            RowBox[{"Zeta", "[", "3", "]"}]}]}], ")"}], "Nf"}], "-", 
        RowBox[{
         RowBox[{"(", 
          RowBox[{"140", "/", "81"}], ")"}], " ", 
         SuperscriptBox["Nf", "2"]}]}], ")"}]}]}], ";"}], 
   RowBox[{"(*", 
    RowBox[{
     RowBox[{"for", " ", "Nc"}], "=", 
     RowBox[{"3", " ", "only"}]}], "*)"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"\[Gamma]3", "[", "Nf_", "]"}], "=", 
     RowBox[{
      RowBox[{"(", 
       RowBox[{"1", "/", "256"}], ")"}], 
      RowBox[{"(", 
       RowBox[{
        RowBox[{"4603055", "/", "162"}], "+", 
        RowBox[{
         RowBox[{"(", 
          RowBox[{"135680", "/", "27"}], ")"}], " ", 
         RowBox[{"Zeta", "[", "3", "]"}]}], "-", 
        RowBox[{"8800", 
         RowBox[{"Zeta", "[", "5", "]"}]}], "+", 
        RowBox[{
         RowBox[{"(", 
          RowBox[{
           RowBox[{"-", 
            RowBox[{"(", 
             RowBox[{"91723", "/", "27"}], ")"}]}], "-", 
           RowBox[{
            RowBox[{"(", 
             RowBox[{"34192", "/", "9"}], ")"}], " ", 
            RowBox[{"Zeta", "[", "3", "]"}]}], "+", 
           RowBox[{"880", " ", 
            RowBox[{"Zeta", "[", "4", "]"}]}], "+", 
           RowBox[{
            RowBox[{"(", 
             RowBox[{"18400", "/", "9"}], ")"}], 
            RowBox[{"Zeta", "[", "5", "]"}]}]}], ")"}], "Nf"}], "+", 
        RowBox[{
         RowBox[{"(", 
          RowBox[{
           RowBox[{"5242", "/", "243"}], "+", 
           RowBox[{
            RowBox[{"(", 
             RowBox[{"800", "/", "9"}], ")"}], " ", 
            RowBox[{"Zeta", "[", "3", "]"}]}], "-", 
           RowBox[{
            RowBox[{"(", 
             RowBox[{"160", "/", "3"}], ")"}], 
            RowBox[{"Zeta", "[", "4", "]"}]}]}], ")"}], 
         SuperscriptBox["Nf", "2"]}], "+", 
        RowBox[{
         RowBox[{"(", 
          RowBox[{
           RowBox[{"-", 
            RowBox[{"(", 
             RowBox[{"332", "/", "243"}], ")"}]}], "+", 
           RowBox[{
            RowBox[{"(", 
             RowBox[{"64", "/", "27"}], ")"}], " ", 
            RowBox[{"Zeta", "[", "3", "]"}]}]}], ")"}], 
         SuperscriptBox["Nf", "3"]}]}], ")"}]}]}], ";"}], 
   "\[IndentingNewLine]", "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"b0", "[", "Nf_", "]"}], "=", 
     RowBox[{"-", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{"(", 
         RowBox[{"8", 
          RowBox[{"\[Beta]0", "[", "Nf", "]"}]}], ")"}], "/", 
        RowBox[{"(", 
         RowBox[{"2", 
          SuperscriptBox[
           RowBox[{"(", 
            RowBox[{"4", "\[Pi]"}], ")"}], "2"]}], ")"}]}], ")"}]}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"b1", "[", "Nf_", "]"}], "=", 
     RowBox[{"-", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{"(", 
         RowBox[{"32", " ", 
          RowBox[{"\[Beta]1", "[", "Nf", "]"}]}], ")"}], "/", 
        RowBox[{"(", 
         RowBox[{"2", 
          SuperscriptBox[
           RowBox[{"(", 
            RowBox[{"4", "\[Pi]"}], ")"}], "2"]}], ")"}]}], ")"}]}]}], ";"}], 
   "\[IndentingNewLine]", "\[IndentingNewLine]", 
   RowBox[{"(*", " ", 
    RowBox[{
     RowBox[{
     "Initial", " ", "conditions", " ", "of", " ", "the", " ", "RG", " ", 
      "equations"}], ",", " ", 
     RowBox[{
     "\[Mu]", " ", "in", " ", "units", " ", "of", " ", 
      "\[CapitalLambda]_MSbar"}]}], " ", "*)"}], "\[IndentingNewLine]", 
   "\[IndentingNewLine]", 
   RowBox[{"(*", 
    RowBox[{
     RowBox[{
      RowBox[{"gf", "[", "\[Mu]_", "]"}], "=", 
      RowBox[{"1", "/", 
       RowBox[{"\[Sqrt]", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"2", " ", "b0", " ", 
           RowBox[{"Log", "[", "\[Mu]", "]"}]}], "+", 
          RowBox[{"b1", " ", 
           RowBox[{
            RowBox[{"Log", "[", 
             RowBox[{"2", " ", 
              RowBox[{"Log", "[", "\[Mu]", "]"}]}], "]"}], "/", "b0"}]}]}], 
         ")"}]}]}]}], ";"}], "*)"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"gf", "[", "t_", "]"}], "=", 
     RowBox[{"1", "/", 
      RowBox[{"(", 
       RowBox[{"\[Sqrt]", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{
           RowBox[{"b0", "[", "Nf", "]"}], " ", "t"}], "+", 
          RowBox[{
           RowBox[{"b1", "[", "Nf", "]"}], " ", 
           RowBox[{
            RowBox[{"Log", "[", "t", "]"}], "/", 
            RowBox[{"b0", "[", "Nf", "]"}]}]}]}], ")"}]}], ")"}]}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"asf", "[", 
      RowBox[{"t_", ",", "Nf_"}], "]"}], "=", 
     RowBox[{
      RowBox[{
       RowBox[{"(", 
        RowBox[{"-", "1"}], ")"}], "/", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"\[Beta]0", "[", "Nf", "]"}], " ", "t"}], ")"}]}], "-", 
      RowBox[{
       RowBox[{"(", 
        RowBox[{
         RowBox[{"\[Beta]1", "[", "Nf", "]"}], " ", 
         RowBox[{"Log", "[", "t", "]"}]}], ")"}], "/", 
       RowBox[{"(", 
        RowBox[{
         SuperscriptBox[
          RowBox[{"\[Beta]0", "[", "Nf", "]"}], "3"], " ", 
         SuperscriptBox["t", "2"]}], ")"}]}], "-", 
      RowBox[{
       RowBox[{"(", " ", 
        RowBox[{
         RowBox[{
          SuperscriptBox[
           RowBox[{"\[Beta]1", "[", "Nf", "]"}], "2"], 
          RowBox[{"(", 
           RowBox[{
            SuperscriptBox[
             RowBox[{"Log", "[", "t", "]"}], "2"], "-", 
            RowBox[{"Log", "[", "t", "]"}], "-", "1"}], ")"}]}], "+", 
         RowBox[{
          RowBox[{"\[Beta]2", "[", "Nf", "]"}], " ", 
          RowBox[{"\[Beta]0", "[", "Nf", "]"}]}]}], ")"}], "/", 
       RowBox[{"(", 
        RowBox[{
         SuperscriptBox[
          RowBox[{"\[Beta]0", "[", "Nf", "]"}], "5"], 
         SuperscriptBox["t", "3"]}], ")"}]}], "+", 
      RowBox[{
       RowBox[{"(", 
        RowBox[{"1", "/", 
         RowBox[{"(", 
          RowBox[{
           SuperscriptBox[
            RowBox[{"\[Beta]0", "[", "Nf", "]"}], "7"], 
           SuperscriptBox["t", "4"]}], ")"}]}], ")"}], 
       RowBox[{"(", " ", 
        RowBox[{
         RowBox[{
          SuperscriptBox[
           RowBox[{"\[Beta]1", "[", "Nf", "]"}], "3"], 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"-", 
             SuperscriptBox[
              RowBox[{"Log", "[", "t", "]"}], "3"]}], "+", 
            RowBox[{
             FractionBox["5", "2"], 
             SuperscriptBox[
              RowBox[{"Log", "[", "t", "]"}], "2"]}], "+", 
            RowBox[{"2", 
             RowBox[{"Log", "[", "t", "]"}]}], "-", 
            FractionBox["1", "2"]}], ")"}]}], "-", 
         RowBox[{"3", " ", 
          RowBox[{"\[Beta]1", "[", "Nf", "]"}], " ", 
          RowBox[{"\[Beta]2", "[", "Nf", "]"}], " ", 
          RowBox[{"\[Beta]0", "[", "Nf", "]"}], " ", 
          RowBox[{"Log", "[", "t", "]"}]}], "+", 
         RowBox[{
          FractionBox["1", "2"], 
          RowBox[{"\[Beta]3", "[", "Nf", "]"}], " ", 
          SuperscriptBox[
           RowBox[{"\[Beta]0", "[", "Nf", "]"}], "2"]}]}], ")"}]}]}]}], ";"}],
    "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"\[Mu]0", "=", "2"}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"t0", "=", 
     RowBox[{"Log", "[", 
      SuperscriptBox["\[Mu]0", "2"], "]"}]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"tf", "=", 
     RowBox[{"10000", " ", "t0"}]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{"(*", 
    RowBox[{
    "solution", " ", "of", " ", "the", " ", "RG", " ", "equation", " ", "to", 
     " ", "3", " ", "loop"}], "*)"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"mcharm", "=", "1.275"}], ";"}], 
   RowBox[{"(*", 
    RowBox[{"m", 
     RowBox[{"(", "m", ")"}], " ", "in", " ", "msbar"}], "*)"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"mbottom", "=", "4.18"}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"nf", "[", "t_", "]"}], "=", 
     RowBox[{"If", "[", 
      RowBox[{
       RowBox[{"t", "<", 
        RowBox[{"Log", "[", 
         RowBox[{
          SuperscriptBox["mcharm", "2"], "/", 
          SuperscriptBox["\[CapitalLambda]QCD", "2"]}], "]"}]}], ",", "3", 
       ",", 
       RowBox[{"If", "[", 
        RowBox[{
         RowBox[{"t", "<", 
          RowBox[{"Log", "[", 
           RowBox[{
            SuperscriptBox["mbottom", "2"], "/", 
            SuperscriptBox["\[CapitalLambda]QCD", "2"]}], "]"}]}], ",", "4", 
         ",", "5"}], "]"}]}], "]"}]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"sg4", "=", 
     RowBox[{"Quiet", "[", 
      RowBox[{"NDSolve", "[", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{
          RowBox[{
           RowBox[{"D", "[", 
            RowBox[{
             RowBox[{"as", "[", "t", "]"}], ",", "t"}], "]"}], "\[Equal]", 
           RowBox[{
            RowBox[{
             RowBox[{"+", 
              RowBox[{"\[Beta]0", "[", 
               RowBox[{"nf", "[", "t", "]"}], "]"}]}], " ", 
             SuperscriptBox[
              RowBox[{"as", "[", "t", "]"}], "2"]}], "+", 
            RowBox[{
             RowBox[{"\[Beta]1", "[", 
              RowBox[{"nf", "[", "t", "]"}], "]"}], " ", 
             SuperscriptBox[
              RowBox[{"as", "[", "t", "]"}], "3"]}], "+", " ", 
            RowBox[{
             RowBox[{"\[Beta]2", "[", 
              RowBox[{"nf", "[", "t", "]"}], "]"}], " ", 
             SuperscriptBox[
              RowBox[{"as", "[", "t", "]"}], "4"]}], "+", " ", 
            RowBox[{
             RowBox[{"\[Beta]3", "[", 
              RowBox[{"nf", "[", "t", "]"}], "]"}], " ", 
             SuperscriptBox[
              RowBox[{"as", "[", "t", "]"}], "5"]}]}]}], ",", 
          RowBox[{
           RowBox[{"as", "[", "tf", "]"}], "\[Equal]", 
           RowBox[{"asf", "[", 
            RowBox[{"tf", ",", 
             RowBox[{"nf", "[", "tf", "]"}]}], "]"}]}]}], "}"}], ",", "as", 
        ",", 
        RowBox[{"{", 
         RowBox[{"t", ",", "t0", ",", "tf"}], "}"}], ",", 
        RowBox[{"AccuracyGoal", "\[Rule]", "14"}], ",", 
        RowBox[{"WorkingPrecision", "\[Rule]", "32"}], ",", 
        RowBox[{"MaxSteps", "\[Rule]", "10000000"}]}], "]"}], "]"}]}], ";"}], 
   "\[IndentingNewLine]", "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"a4t", "[", "t_", "]"}], "=", " ", 
     RowBox[{"Part", "[", 
      RowBox[{
       RowBox[{"Evaluate", "[", 
        RowBox[{
         RowBox[{"as", "[", "t", "]"}], "/.", "sg4"}], "]"}], ",", "1"}], 
      "]"}]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"g4", "[", "\[Mu]_", "]"}], "=", 
     RowBox[{"2", " ", "\[Pi]", " ", 
      RowBox[{"\[Sqrt]", 
       RowBox[{"Part", "[", 
        RowBox[{
         RowBox[{"Evaluate", "[", 
          RowBox[{
           RowBox[{"as", "[", 
            RowBox[{"Log", "[", 
             RowBox[{
              SuperscriptBox["\[Mu]", "2"], "/", 
              SuperscriptBox["\[CapitalLambda]QCD", "2"]}], "]"}], "]"}], "/.",
            "sg4"}], "]"}], ",", "1"}], "]"}]}]}]}], ";"}], " "}]}]], "Input",\

 CellChangeTimes->{{3.722603722510141*^9, 3.72260372344028*^9}, {
   3.722604106111541*^9, 3.722604106838868*^9}, {3.722758514249189*^9, 
   3.72275851575694*^9}, {3.722759338268147*^9, 3.7227593794887047`*^9}, 
   3.722941350741787*^9, 3.725272685733177*^9, {3.7257977704878893`*^9, 
   3.725797773117529*^9}, {3.728106253645876*^9, 3.728106267238208*^9}, {
   3.728106981843108*^9, 3.72810698836581*^9}, {3.728107035483563*^9, 
   3.728107083980345*^9}, {3.728107191150432*^9, 3.7281072205275097`*^9}, {
   3.7289260533327723`*^9, 3.728926057125319*^9}, {3.728926987957735*^9, 
   3.728927012966138*^9}, {3.733038068527727*^9, 3.733038137498209*^9}, {
   3.733038320612577*^9, 3.7330383210148697`*^9}, {3.7330540354197693`*^9, 
   3.7330540356914186`*^9}, {3.733129571506283*^9, 3.73312957588968*^9}}]
}, Closed]],

Cell[CellGroupData[{

Cell["Functions", "Section",
 CellChangeTimes->{{3.721037028308626*^9, 3.72103703898452*^9}, {
   3.725797990517199*^9, 3.725797994993998*^9}, {3.746174948979287*^9, 
   3.746174951979061*^9}, 3.7461750131323338`*^9, {3.748450442925918*^9, 
   3.748450454117791*^9}}],

Cell[BoxData[{
 RowBox[{
  RowBox[{"R", "=", "20000"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Mc", "=", "1.4691897661033038`"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Mb", "=", "4.882"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"kfinal", "=", 
    RowBox[{"{", 
     RowBox[{"0.6856700331366409`", ",", 
      RowBox[{"-", "0.31661256911352553`"}]}], "}"}]}], ";"}], 
  RowBox[{"(*", 
   RowBox[{"100", "k", " ", "run"}], "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"kfinalu", "=", 
   RowBox[{"{", 
    RowBox[{"0.9065399936425322`", ",", 
     RowBox[{"-", "0.36858869824209667`"}]}], "}"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"kfinall", "=", 
   RowBox[{"{", 
    RowBox[{"0.4648000726307495`", ",", 
     RowBox[{"-", "0.2646364399849544`"}]}], "}"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"\[Alpha]cont", "=", 
    RowBox[{"{", 
     RowBox[{"0.5129548374487685`", ",", "0.002435119807500435`"}], "}"}]}], 
   ";"}], 
  RowBox[{"(*", 
   RowBox[{"10", "k", " ", "run"}], "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"\[Sigma]cont", "=", 
   RowBox[{"{", 
    RowBox[{"0.16999653850906107`", ",", "0.000838106749908169`"}], "}"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"ccont", "=", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"-", "0.1611740456186636`"}], ",", "0.002474788649682089`"}], 
    "}"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"conv", "=", "0.197327"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"ReVsbVac", "=", 
   RowBox[{"8", "/", "10"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Tlim", "=", 
   RowBox[{"1584", "/", "10000"}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{"w", "=", "0.66"}], ";"}], "\n", 
 RowBox[{
  RowBox[{"Jpsimass", "=", "3.0969"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Psi2smass", "=", "3.6632"}], ";"}]}], "Input",
 CellChangeTimes->{{3.754205518606386*^9, 3.7542055189640083`*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"v", "[", 
    RowBox[{"\[Phi]_", ",", "pT_", ",", "Jpsi_", ",", "Psi2s_"}], "]"}], ":=", 
   SqrtBox[
    RowBox[{"1", "-", 
     FractionBox[
      RowBox[{
       RowBox[{"(", 
        RowBox[{"1", "-", 
         SuperscriptBox["w", "2"]}], ")"}], 
       SuperscriptBox[
        RowBox[{"(", 
         RowBox[{
          RowBox[{"Jpsi", " ", "Jpsimass"}], " ", "+", " ", 
          RowBox[{"Psi2s", " ", "Psi2smass"}]}], ")"}], "2"]}], 
      RowBox[{
       SuperscriptBox[
        RowBox[{"(", 
         RowBox[{
          RowBox[{"Jpsi", " ", "Jpsimass"}], " ", "+", " ", 
          RowBox[{"Psi2s", " ", "Psi2smass"}]}], ")"}], "2"], "-", 
       RowBox[{"2", 
        SqrtBox[
         RowBox[{
          SuperscriptBox[
           RowBox[{"(", 
            RowBox[{
             RowBox[{"Jpsi", " ", "Jpsimass"}], " ", "+", " ", 
             RowBox[{"Psi2s", " ", "Psi2smass"}]}], ")"}], "2"], "+", 
          SuperscriptBox["pT", "2"]}]], "w", " ", "pT", " ", 
        RowBox[{"Cos", "[", "\[Phi]", "]"}]}], "+", 
       RowBox[{
        SuperscriptBox["w", "2"], 
        SuperscriptBox["pT", "2"], 
        SuperscriptBox[
         RowBox[{"Cos", "[", "\[Phi]", "]"}], "2"]}], "+", 
       SuperscriptBox["pT", "2"]}]]}]]}], ";"}]], "Input",
 CellChangeTimes->{{3.7540527382967653`*^9, 3.754052779961562*^9}, {
  3.754052845197363*^9, 3.7540529113806143`*^9}, {3.754052959020022*^9, 
  3.754052959269107*^9}, {3.754053344365959*^9, 3.754053348103874*^9}, {
  3.7541319760677233`*^9, 3.754131988792005*^9}, {3.754132020282806*^9, 
  3.7541320366896677`*^9}, {3.754132066952615*^9, 3.754132069804583*^9}, {
  3.754132163995335*^9, 3.754132169345207*^9}}],

Cell[CellGroupData[{

Cell["Self energies", "Subsection",
 CellChangeTimes->{{3.748450427476173*^9, 3.748450462407011*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"mDcalmu", "[", 
    RowBox[{"T_", ",", "\[Mu]_", ",", "c_", ",", "d_"}], "]"}], ":=", 
   RowBox[{"SetPrecision", "[", 
    RowBox[{
     RowBox[{"Re", "[", 
      RowBox[{
       RowBox[{
        RowBox[{"Sqrt", "[", 
         RowBox[{
          FractionBox["Nc", "3"], "+", 
          FractionBox["nF", "6"], "+", 
          RowBox[{
           FractionBox["nF", 
            RowBox[{"2", 
             SuperscriptBox["\[Pi]", "2"]}]], 
           FractionBox[
            SuperscriptBox[
             RowBox[{"(", 
              RowBox[{"\[Mu]", "/", "3"}], ")"}], "2"], 
            SuperscriptBox["T", "2"]]}]}], "]"}], 
        RowBox[{"g4", "[", 
         RowBox[{"2", "\[Pi]", 
          SqrtBox[
           RowBox[{
            SuperscriptBox["T", "2"], "+", 
            FractionBox[
             SuperscriptBox["\[Mu]", "2"], 
             SuperscriptBox["\[Pi]", "2"]]}]]}], "]"}], "T"}], "+", 
       RowBox[{
        FractionBox["1", 
         RowBox[{"4", "\[Pi]"}]], "Nc", " ", 
        SuperscriptBox[
         RowBox[{"g4", "[", 
          RowBox[{"2", "\[Pi]", 
           SqrtBox[
            RowBox[{
             SuperscriptBox["T", "2"], "+", 
             FractionBox[
              SuperscriptBox["\[Mu]", "2"], 
              SuperscriptBox["\[Pi]", "2"]]}]]}], "]"}], "2"], " ", "T", " ", 
        
        RowBox[{"Log", "[", 
         FractionBox[
          RowBox[{"Sqrt", "[", 
           RowBox[{
            FractionBox["Nc", "3"], "+", 
            FractionBox["nF", "6"]}], "]"}], 
          RowBox[{"g4", "[", 
           RowBox[{"2", "\[Pi]", 
            SqrtBox[
             RowBox[{
              SuperscriptBox["T", "2"], "+", 
              FractionBox[
               SuperscriptBox["\[Mu]", "2"], 
               SuperscriptBox["\[Pi]", "2"]]}]]}], "]"}]], "]"}]}], "+", 
       RowBox[{"c", " ", 
        SuperscriptBox[
         RowBox[{"g4", "[", 
          RowBox[{"2", "\[Pi]", 
           SqrtBox[
            RowBox[{
             SuperscriptBox["T", "2"], "+", 
             FractionBox[
              SuperscriptBox["\[Mu]", "2"], 
              SuperscriptBox["\[Pi]", "2"]]}]]}], "]"}], "2"], " ", "T"}], 
       "+", 
       RowBox[{"d", " ", 
        SuperscriptBox[
         RowBox[{"g4", "[", 
          RowBox[{"2", "\[Pi]", 
           SqrtBox[
            RowBox[{
             SuperscriptBox["T", "2"], "+", 
             FractionBox[
              SuperscriptBox["\[Mu]", "2"], 
              SuperscriptBox["\[Pi]", "2"]]}]]}], "]"}], "3"], "T"}]}], " ", 
      "]"}], ",", "30"}], "]"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.74845188564533*^9, 3.7484518857590313`*^9}, {
  3.749836672252359*^9, 3.749836673028408*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"\[CapitalPi]par", "[", 
    RowBox[{"\[Theta]_", ",", "mD_", ",", "u_"}], "]"}], ":=", 
   RowBox[{"SetPrecision", "[", 
    RowBox[{
     RowBox[{
      FractionBox[
       SuperscriptBox["mD", "2"], "2"], 
      RowBox[{"(", 
       RowBox[{
        FractionBox[
         RowBox[{"2", "-", 
          RowBox[{"2", 
           SuperscriptBox["u", "2"]}], "-", 
          RowBox[{
           SuperscriptBox["u", "4"], 
           SuperscriptBox[
            RowBox[{"Cos", "[", "\[Theta]", "]"}], "2"], 
           SuperscriptBox[
            RowBox[{"Sin", "[", "\[Theta]", "]"}], "2"]}]}], 
         SuperscriptBox[
          RowBox[{"(", 
           RowBox[{"1", "-", 
            RowBox[{
             SuperscriptBox["u", "2"], 
             SuperscriptBox[
              RowBox[{"Sin", "[", "\[Theta]", "]"}], "2"]}]}], ")"}], "2"]], 
        "-", 
        RowBox[{
         FractionBox[
          RowBox[{
           RowBox[{"(", 
            RowBox[{"2", "+", 
             RowBox[{
              SuperscriptBox["u", "2"], 
              SuperscriptBox[
               RowBox[{"Sin", "[", "\[Theta]", "]"}], "2"]}]}], ")"}], 
           RowBox[{"(", 
            RowBox[{"1", "-", 
             SuperscriptBox["u", "2"]}], ")"}], "u", " ", 
           RowBox[{"Cos", "[", "\[Theta]", "]"}]}], 
          RowBox[{"2", 
           SuperscriptBox[
            RowBox[{"(", 
             RowBox[{"1", "-", 
              RowBox[{
               SuperscriptBox["u", "2"], 
               SuperscriptBox[
                RowBox[{"Sin", "[", "\[Theta]", "]"}], "2"]}]}], ")"}], 
            RowBox[{"5", "/", "2"}]]}]], 
         RowBox[{"Log", "[", 
          FractionBox[
           RowBox[{
            RowBox[{"u", " ", 
             RowBox[{"Cos", "[", "\[Theta]", "]"}]}], "+", 
            SqrtBox[
             RowBox[{"1", "-", 
              RowBox[{
               SuperscriptBox["u", "2"], 
               SuperscriptBox[
                RowBox[{"Sin", "[", "\[Theta]", "]"}], "2"]}]}]]}], 
           RowBox[{
            RowBox[{"u", " ", 
             RowBox[{"Cos", "[", "\[Theta]", "]"}]}], "-", 
            SqrtBox[
             RowBox[{"1", "-", 
              RowBox[{
               SuperscriptBox["u", "2"], 
               SuperscriptBox[
                RowBox[{"Sin", "[", "\[Theta]", "]"}], "2"]}]}]]}]], 
          "]"}]}]}], ")"}]}], ",", "30"}], "]"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.7453831005455914`*^9, 3.745383138661728*^9}, {
   3.745383312376183*^9, 3.74538334437337*^9}, {3.7453836903426113`*^9, 
   3.745383700509996*^9}, {3.745383888049996*^9, 3.7453838920497932`*^9}, {
   3.745384456942053*^9, 3.745384462717682*^9}, {3.745385041376384*^9, 
   3.7453850447607927`*^9}, {3.745385110730214*^9, 3.745385155644156*^9}, {
   3.745385388111433*^9, 3.745385411593401*^9}, {3.7453875595914288`*^9, 
   3.745387568075132*^9}, 3.745389177212406*^9, {3.7453901984733753`*^9, 
   3.745390202887982*^9}, {3.745390355427387*^9, 3.745390388219348*^9}, {
   3.7453977096680326`*^9, 3.745397725914731*^9}, {3.745397755948641*^9, 
   3.745397756084126*^9}, {3.7453980995991077`*^9, 3.745398113870977*^9}, {
   3.745399156102378*^9, 3.745399178169222*^9}, {3.745399342881937*^9, 
   3.745399361912752*^9}, {3.745401796965457*^9, 3.7454018195641527`*^9}, {
   3.745401971762494*^9, 3.745401971914714*^9}, {3.745404041771303*^9, 
   3.745404151470154*^9}, {3.745404384229478*^9, 3.745404389436048*^9}, {
   3.7454045122009163`*^9, 3.7454045237036552`*^9}, {3.745404614275045*^9, 
   3.7454046169752293`*^9}, {3.745404890358831*^9, 3.745404914872879*^9}, {
   3.7454740207870693`*^9, 3.745474024498345*^9}, {3.745477052572796*^9, 
   3.745477084925427*^9}, {3.745583208377653*^9, 3.74558321316575*^9}, {
   3.7461777044683733`*^9, 3.746177794182501*^9}, {3.746360152439383*^9, 
   3.746360194120142*^9}, 3.747138517796213*^9, {3.747139364508655*^9, 
   3.7471393719485703`*^9}, {3.747462249636409*^9, 3.747462256108732*^9}}]
}, Closed]],

Cell[CellGroupData[{

Cell["IIT paper", "Subsection",
 CellChangeTimes->{{3.7484504686955633`*^9, 3.7484504994467287`*^9}, {
   3.748450538599163*^9, 3.748450542903339*^9}, 3.7484506025366297`*^9}],

Cell[CellGroupData[{

Cell["Potentials", "Subsubsection",
 CellChangeTimes->{{3.748450854391089*^9, 3.748450864793952*^9}}],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"ReVcpp", "[", 
     RowBox[{"r_", ",", "mD_", ",", "u_", ",", "\[Alpha]_", ",", "c_"}], 
     "]"}], ":=", 
    RowBox[{"Re", "[", 
     RowBox[{"c", "-", 
      FractionBox["\[Alpha]", "r"], "+", 
      RowBox[{"\[Alpha]", " ", " ", 
       RowBox[{"NIntegrate", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"Sin", "[", "\[Theta]", "]"}], 
          SqrtBox[
           RowBox[{"\[CapitalPi]par", "[", 
            RowBox[{"\[Theta]", ",", "mD", ",", "u"}], "]"}]], 
          RowBox[{"Exp", "[", 
           RowBox[{
            RowBox[{"-", 
             SqrtBox[
              RowBox[{"\[CapitalPi]par", "[", 
               RowBox[{"\[Theta]", ",", "mD", ",", "u"}], "]"}]]}], "r", " ", 
            
            RowBox[{"Cos", "[", "\[Theta]", "]"}]}], "]"}]}], ",", 
         RowBox[{"{", 
          RowBox[{"\[Theta]", ",", "0", ",", 
           RowBox[{"\[Pi]", "/", "2"}]}], "}"}], ",", 
         RowBox[{"MaxRecursion", "\[Rule]", "20"}], ",", 
         RowBox[{"WorkingPrecision", "\[Rule]", "20"}]}], "]"}]}]}], "]"}]}], 
   ";"}], 
  RowBox[{"(*", "INCORRECT", "*)"}]}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"ReVspp", "[", 
     RowBox[{"r_", ",", "mD_", ",", "u_", ",", "\[Sigma]_"}], "]"}], ":=", 
    RowBox[{"Re", "[", 
     RowBox[{"\[Sigma]", " ", 
      RowBox[{"NIntegrate", "[", 
       RowBox[{
        RowBox[{
         RowBox[{"Sin", "[", "\[Theta]", "]"}], 
         FractionBox["1", 
          SqrtBox[
           RowBox[{"\[CapitalPi]par", "[", 
            RowBox[{"\[Theta]", ",", "mD", ",", "u"}], "]"}]]], 
         RowBox[{"Exp", "[", 
          RowBox[{
           RowBox[{"-", 
            SqrtBox[
             RowBox[{"\[CapitalPi]par", "[", 
              RowBox[{"\[Theta]", ",", "mD", ",", "u"}], "]"}]]}], "r", " ", 
           RowBox[{"Cos", "[", "\[Theta]", "]"}]}], "]"}]}], ",", 
        RowBox[{"{", 
         RowBox[{"\[Theta]", ",", "0", ",", 
          RowBox[{"\[Pi]", "/", "2"}]}], "}"}], ",", 
        RowBox[{"MaxRecursion", "\[Rule]", "20"}], ",", 
        RowBox[{"WorkingPrecision", "\[Rule]", "20"}]}], "]"}]}], "]"}]}], 
   ";"}], 
  RowBox[{"(*", "INCORRECT", "*)"}]}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"ReVsp", "[", 
     RowBox[{"r_", ",", "mD_", ",", "u_", ",", "\[Sigma]_"}], "]"}], ":=", 
    RowBox[{"\[Sigma]", " ", 
     RowBox[{"NIntegrate", "[", 
      RowBox[{
       RowBox[{
        RowBox[{"Sin", "[", "\[Theta]", "]"}], 
        FractionBox["1", 
         RowBox[{"Re", "[", 
          SqrtBox[
           RowBox[{"\[CapitalPi]par", "[", 
            RowBox[{"\[Theta]", ",", "mD", ",", "u"}], "]"}]], "]"}]], 
        RowBox[{"Exp", "[", 
         RowBox[{
          RowBox[{"-", 
           RowBox[{"Re", "[", 
            SqrtBox[
             RowBox[{"\[CapitalPi]par", "[", 
              RowBox[{"\[Theta]", ",", "mD", ",", "u"}], "]"}]], "]"}]}], "r",
           " ", 
          RowBox[{"Cos", "[", "\[Theta]", "]"}]}], "]"}]}], ",", 
       RowBox[{"{", 
        RowBox[{"\[Theta]", ",", "0", ",", 
         RowBox[{"\[Pi]", "/", "2"}]}], "}"}], ",", 
       RowBox[{"MaxRecursion", "\[Rule]", "20"}], ",", 
       RowBox[{"WorkingPrecision", "\[Rule]", "20"}]}], "]"}]}]}], ";"}], 
  RowBox[{"(*", 
   RowBox[{"OUR", " ", "MODEL", " ", "DIFFERS", " ", "HERE"}], "*)"}]}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"ReVcp", "[", 
     RowBox[{"r_", ",", "mD_", ",", "u_", ",", "\[Alpha]_", ",", "c_"}], 
     "]"}], ":=", 
    RowBox[{"c", "-", 
     RowBox[{"\[Alpha]", " ", "mD"}], "-", 
     FractionBox["\[Alpha]", "r"], "+", 
     RowBox[{"\[Alpha]", " ", 
      RowBox[{"NIntegrate", "[", 
       RowBox[{
        RowBox[{
         RowBox[{"Sin", "[", "\[Theta]", "]"}], 
         RowBox[{"Re", "[", 
          SqrtBox[
           RowBox[{"\[CapitalPi]par", "[", 
            RowBox[{"\[Theta]", ",", "mD", ",", "u"}], "]"}]], "]"}], 
         RowBox[{"Exp", "[", 
          RowBox[{
           RowBox[{"-", 
            RowBox[{"Re", "[", 
             SqrtBox[
              RowBox[{"\[CapitalPi]par", "[", 
               RowBox[{"\[Theta]", ",", "mD", ",", "u"}], "]"}]], "]"}]}], 
           "r", " ", 
           RowBox[{"Cos", "[", "\[Theta]", "]"}]}], "]"}]}], ",", 
        RowBox[{"{", 
         RowBox[{"\[Theta]", ",", "0", ",", 
          RowBox[{"\[Pi]", "/", "2"}]}], "}"}], ",", 
        RowBox[{"MaxRecursion", "\[Rule]", "20"}], ",", 
        RowBox[{"WorkingPrecision", "\[Rule]", "20"}]}], "]"}]}]}]}], ";"}], 
  RowBox[{"(*", 
   RowBox[{"WE", " ", "USE", " ", "THIS", " ", "ONE"}], "*)"}]}]}], "Input",
 CellChangeTimes->{{3.7484505453298197`*^9, 3.748450550153339*^9}, {
  3.748450609967485*^9, 3.748450634795309*^9}, {3.748941399694872*^9, 
  3.748941419583263*^9}, {3.7489414699950314`*^9, 3.748941476587145*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"ImVcp", "[", 
     RowBox[{"r_", ",", "mD_", ",", "u_", ",", "\[Alpha]_", ",", "T_"}], 
     "]"}], ":=", 
    RowBox[{"2", " ", "\[Alpha]", " ", "T", " ", 
     RowBox[{"Quiet", "[", 
      RowBox[{"NIntegrate", "[", 
       RowBox[{
        RowBox[{
         RowBox[{"Sin", "[", "x", "]"}], 
         FractionBox[
          RowBox[{
           RowBox[{"(", 
            RowBox[{"2", "+", 
             RowBox[{
              SuperscriptBox["u", "2"], 
              SuperscriptBox[
               RowBox[{"Sin", "[", "x", "]"}], "2"]}]}], ")"}], 
           SuperscriptBox[
            RowBox[{"(", 
             RowBox[{"1", "-", 
              SuperscriptBox["u", "2"]}], ")"}], 
            RowBox[{"3", "/", "2"}]]}], 
          RowBox[{"2", 
           SuperscriptBox[
            RowBox[{"(", 
             RowBox[{"1", "-", 
              RowBox[{
               SuperscriptBox["u", "2"], 
               SuperscriptBox[
                RowBox[{"Sin", "[", "x", "]"}], "2"]}]}], ")"}], 
            RowBox[{"5", "/", "2"}]]}]], 
         FractionBox[
          SuperscriptBox["mD", "2"], 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"\[CapitalPi]par", "[", 
             RowBox[{"x", ",", "mD", ",", "u"}], "]"}], "-", 
            RowBox[{"Conjugate", "[", 
             RowBox[{"\[CapitalPi]par", "[", 
              RowBox[{"x", ",", "mD", ",", "u"}], "]"}], "]"}]}], ")"}]], 
         RowBox[{"(", 
          RowBox[{
           RowBox[{
            RowBox[{"Sinh", "[", 
             RowBox[{
              SqrtBox[
               RowBox[{"\[CapitalPi]par", "[", 
                RowBox[{"x", ",", "mD", ",", "u"}], "]"}]], "r", " ", 
              RowBox[{"Cos", "[", "x", "]"}]}], "]"}], 
            RowBox[{"SinhIntegral", "[", 
             RowBox[{
              SqrtBox[
               RowBox[{"\[CapitalPi]par", "[", 
                RowBox[{"x", ",", "mD", ",", "u"}], "]"}]], "r", " ", 
              RowBox[{"Cos", "[", "x", "]"}]}], "]"}]}], "-", 
           RowBox[{
            RowBox[{"Cosh", "[", 
             RowBox[{
              SqrtBox[
               RowBox[{"\[CapitalPi]par", "[", 
                RowBox[{"x", ",", "mD", ",", "u"}], "]"}]], "r", " ", 
              RowBox[{"Cos", "[", "x", "]"}]}], "]"}], 
            RowBox[{"CoshIntegral", "[", 
             RowBox[{
              SqrtBox[
               RowBox[{"\[CapitalPi]par", "[", 
                RowBox[{"x", ",", "mD", ",", "u"}], "]"}]], "r", " ", 
              RowBox[{"Cos", "[", "x", "]"}]}], "]"}]}], "-", 
           RowBox[{
            RowBox[{"Sinh", "[", 
             RowBox[{
              SqrtBox[
               RowBox[{"Conjugate", "[", 
                RowBox[{"\[CapitalPi]par", "[", 
                 RowBox[{"x", ",", "mD", ",", "u"}], "]"}], "]"}]], "r", " ", 
              
              RowBox[{"Cos", "[", "x", "]"}]}], "]"}], 
            RowBox[{"SinhIntegral", "[", 
             RowBox[{
              SqrtBox[
               RowBox[{"Conjugate", "[", 
                RowBox[{"\[CapitalPi]par", "[", 
                 RowBox[{"x", ",", "mD", ",", "u"}], "]"}], "]"}]], "r", " ", 
              
              RowBox[{"Cos", "[", "x", "]"}]}], "]"}]}], "+", 
           RowBox[{
            RowBox[{"Cosh", "[", 
             RowBox[{
              SqrtBox[
               RowBox[{"Conjugate", "[", 
                RowBox[{"\[CapitalPi]par", "[", 
                 RowBox[{"x", ",", "mD", ",", "u"}], "]"}], "]"}]], "r", " ", 
              
              RowBox[{"Cos", "[", "x", "]"}]}], "]"}], 
            RowBox[{"CoshIntegral", "[", 
             RowBox[{
              SqrtBox[
               RowBox[{"Conjugate", "[", 
                RowBox[{"\[CapitalPi]par", "[", 
                 RowBox[{"x", ",", "mD", ",", "u"}], "]"}], "]"}]], "r", " ", 
              
              RowBox[{"Cos", "[", "x", "]"}]}], "]"}]}]}], ")"}]}], ",", 
        RowBox[{"{", 
         RowBox[{"x", ",", "0", ",", 
          RowBox[{"\[Pi]", "/", "2"}]}], "}"}], ",", 
        RowBox[{"MaxRecursion", "\[Rule]", "20"}], ",", 
        RowBox[{"WorkingPrecision", "\[Rule]", "20"}]}], "]"}], "]"}]}]}], 
   ";"}], 
  RowBox[{"(*", 
   RowBox[{"WE", " ", "USE", " ", "THIS", " ", "ONE"}], "*)"}]}]], "Input",
 CellChangeTimes->{
  3.749153483191208*^9, {3.749612550086121*^9, 3.749612557069746*^9}, 
   3.749835673861014*^9}]
}, Closed]],

Cell[CellGroupData[{

Cell["Permittivities", "Subsubsection",
 CellChangeTimes->{{3.748450869220883*^9, 3.748450881592766*^9}, {
  3.748450915542739*^9, 3.7484509164068193`*^9}}],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"\[Epsilon]Repp", "[", 
     RowBox[{"r_", ",", "mD_", ",", "u_"}], "]"}], ":=", 
    RowBox[{"Re", "[", 
     RowBox[{
      FractionBox["1", 
       RowBox[{"4", "\[Pi]"}]], 
      RowBox[{"(", 
       RowBox[{
        RowBox[{
         FractionBox["2", "r"], " ", 
         RowBox[{"NIntegrate", "[", 
          RowBox[{
           RowBox[{
            RowBox[{"Cos", "[", "\[Theta]", "]"}], 
            RowBox[{"Sin", "[", "\[Theta]", "]"}], 
            RowBox[{"\[CapitalPi]par", "[", 
             RowBox[{"\[Theta]", ",", "mD", ",", "u"}], "]"}], 
            RowBox[{"Exp", "[", 
             RowBox[{
              RowBox[{"-", 
               SqrtBox[
                RowBox[{"\[CapitalPi]par", "[", 
                 RowBox[{"\[Theta]", ",", "mD", ",", "u"}], "]"}]]}], "r", 
              " ", 
              RowBox[{"Cos", "[", "\[Theta]", "]"}]}], "]"}]}], ",", 
           RowBox[{"{", 
            RowBox[{"\[Theta]", ",", "0", ",", 
             RowBox[{"\[Pi]", "/", "2"}]}], "}"}]}], "]"}]}], "-", 
        RowBox[{"NIntegrate", "[", 
         RowBox[{
          RowBox[{
           SuperscriptBox[
            RowBox[{"Cos", "[", "\[Theta]", "]"}], "2"], 
           RowBox[{"Sin", "[", "\[Theta]", "]"}], 
           SuperscriptBox[
            RowBox[{"\[CapitalPi]par", "[", 
             RowBox[{"\[Theta]", ",", "mD", ",", "u"}], "]"}], 
            RowBox[{"3", "/", "2"}]], 
           RowBox[{"Exp", "[", 
            RowBox[{
             RowBox[{"-", 
              SqrtBox[
               RowBox[{"\[CapitalPi]par", "[", 
                RowBox[{"\[Theta]", ",", "mD", ",", "u"}], "]"}]]}], "r", " ", 
             RowBox[{"Cos", "[", "\[Theta]", "]"}]}], "]"}]}], ",", 
          RowBox[{"{", 
           RowBox[{"\[Theta]", ",", "0", ",", 
            RowBox[{"\[Pi]", "/", "2"}]}], "}"}]}], "]"}]}], ")"}]}], "]"}]}],
    ";"}], 
  RowBox[{"(*", "INCORRECT", "*)"}]}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"\[Epsilon]Rep", "[", 
     RowBox[{"r_", ",", "mD_", ",", "u_"}], "]"}], ":=", 
    RowBox[{
     FractionBox["1", 
      RowBox[{"4", "\[Pi]"}]], 
     RowBox[{"(", 
      RowBox[{
       RowBox[{
        FractionBox["2", "r"], " ", 
        RowBox[{"NIntegrate", "[", 
         RowBox[{
          RowBox[{
           RowBox[{"Cos", "[", "\[Theta]", "]"}], 
           RowBox[{"Sin", "[", "\[Theta]", "]"}], 
           RowBox[{"Re", "[", 
            RowBox[{"\[CapitalPi]par", "[", 
             RowBox[{"\[Theta]", ",", "mD", ",", "u"}], "]"}], "]"}], 
           RowBox[{"Exp", "[", 
            RowBox[{
             RowBox[{"-", 
              RowBox[{"Re", "[", 
               SqrtBox[
                RowBox[{"\[CapitalPi]par", "[", 
                 RowBox[{"\[Theta]", ",", "mD", ",", "u"}], "]"}]], "]"}]}], 
             "r", " ", 
             RowBox[{"Cos", "[", "\[Theta]", "]"}]}], "]"}]}], ",", 
          RowBox[{"{", 
           RowBox[{"\[Theta]", ",", "0", ",", 
            RowBox[{"\[Pi]", "/", "2"}]}], "}"}]}], "]"}]}], "-", 
       RowBox[{"NIntegrate", "[", 
        RowBox[{
         RowBox[{
          SuperscriptBox[
           RowBox[{"Cos", "[", "\[Theta]", "]"}], "2"], 
          RowBox[{"Sin", "[", "\[Theta]", "]"}], 
          RowBox[{"Re", "[", 
           SuperscriptBox[
            RowBox[{"\[CapitalPi]par", "[", 
             RowBox[{"\[Theta]", ",", "mD", ",", "u"}], "]"}], 
            RowBox[{"3", "/", "2"}]], "]"}], 
          RowBox[{"Exp", "[", 
           RowBox[{
            RowBox[{"-", 
             RowBox[{"Re", "[", 
              SqrtBox[
               RowBox[{"\[CapitalPi]par", "[", 
                RowBox[{"\[Theta]", ",", "mD", ",", "u"}], "]"}]], "]"}]}], 
            "r", " ", 
            RowBox[{"Cos", "[", "\[Theta]", "]"}]}], "]"}]}], ",", 
         RowBox[{"{", 
          RowBox[{"\[Theta]", ",", "0", ",", 
           RowBox[{"\[Pi]", "/", "2"}]}], "}"}]}], "]"}]}], ")"}]}]}], ";"}], 
  
  RowBox[{"(*", "OLD", "*)"}]}]}], "Input",
 CellChangeTimes->{{3.7484506390834913`*^9, 3.748450657685565*^9}, {
  3.749153505955608*^9, 3.749153540720212*^9}, {3.749612575133691*^9, 
  3.749612576652499*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"\[Epsilon]Imp", "[", 
     RowBox[{"r_", ",", "mD_", ",", "u_", ",", "T_"}], "]"}], ":=", 
    "\[IndentingNewLine]", 
    RowBox[{
     FractionBox["1", 
      RowBox[{"2", "\[Pi]"}]], 
     RowBox[{"Re", "[", 
      RowBox[{"T", " ", 
       RowBox[{"NIntegrate", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"Sin", "[", "x", "]"}], 
          FractionBox[
           RowBox[{
            RowBox[{"(", 
             RowBox[{"2", "+", 
              RowBox[{
               SuperscriptBox["u", "2"], 
               SuperscriptBox[
                RowBox[{"Sin", "[", "x", "]"}], "2"]}]}], ")"}], 
            SuperscriptBox[
             RowBox[{"(", 
              RowBox[{"1", "-", 
               SuperscriptBox["u", "2"]}], ")"}], 
             RowBox[{"3", "/", "2"}]]}], 
           RowBox[{"2", 
            SuperscriptBox[
             RowBox[{"(", 
              RowBox[{"1", "-", 
               RowBox[{
                SuperscriptBox["u", "2"], 
                SuperscriptBox[
                 RowBox[{"Sin", "[", "x", "]"}], "2"]}]}], ")"}], 
             RowBox[{"5", "/", "2"}]]}]], 
          FractionBox[
           SuperscriptBox["mD", "2"], 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"\[CapitalPi]par", "[", 
              RowBox[{"x", ",", "mD", ",", "u"}], "]"}], "-", 
             RowBox[{"Conjugate", "[", 
              RowBox[{"\[CapitalPi]par", "[", 
               RowBox[{"x", ",", "mD", ",", "u"}], "]"}], "]"}]}], ")"}]], 
          FractionBox["1", "r"], 
          RowBox[{"Cos", "[", "x", "]"}], " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"2", " ", 
             SqrtBox[
              RowBox[{"Conjugate", "[", 
               RowBox[{"\[CapitalPi]par", "[", 
                RowBox[{"x", ",", "mD", ",", "u"}], "]"}], "]"}]], " ", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{
                RowBox[{"CoshIntegral", "[", 
                 RowBox[{"r", " ", 
                  SqrtBox[
                   RowBox[{"Conjugate", "[", 
                    RowBox[{"\[CapitalPi]par", "[", 
                    RowBox[{"x", ",", "mD", ",", "u"}], "]"}], "]"}]], " ", 
                  RowBox[{"Cos", "[", "x", "]"}]}], "]"}], " ", 
                RowBox[{"Sinh", "[", 
                 RowBox[{"r", " ", 
                  SqrtBox[
                   RowBox[{"Conjugate", "[", 
                    RowBox[{"\[CapitalPi]par", "[", 
                    RowBox[{"x", ",", "mD", ",", "u"}], "]"}], "]"}]], " ", 
                  RowBox[{"Cos", "[", "x", "]"}]}], "]"}]}], "-", 
               RowBox[{
                RowBox[{"Cosh", "[", 
                 RowBox[{"r", " ", 
                  SqrtBox[
                   RowBox[{"Conjugate", "[", 
                    RowBox[{"\[CapitalPi]par", "[", 
                    RowBox[{"x", ",", "mD", ",", "u"}], "]"}], "]"}]], " ", 
                  RowBox[{"Cos", "[", "x", "]"}]}], "]"}], " ", 
                RowBox[{"SinhIntegral", "[", 
                 RowBox[{"r", " ", 
                  SqrtBox[
                   RowBox[{"Conjugate", "[", 
                    RowBox[{"\[CapitalPi]par", "[", 
                    RowBox[{"x", ",", "mD", ",", "u"}], "]"}], "]"}]], " ", 
                  RowBox[{"Cos", "[", "x", "]"}]}], "]"}]}]}], ")"}]}], "+", 
            RowBox[{"r", " ", 
             RowBox[{"Conjugate", "[", 
              RowBox[{"\[CapitalPi]par", "[", 
               RowBox[{"x", ",", "mD", ",", "u"}], "]"}], "]"}], " ", 
             RowBox[{"Cos", "[", "x", "]"}], " ", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{
                RowBox[{"Cosh", "[", 
                 RowBox[{"r", " ", 
                  SqrtBox[
                   RowBox[{"Conjugate", "[", 
                    RowBox[{"\[CapitalPi]par", "[", 
                    RowBox[{"x", ",", "mD", ",", "u"}], "]"}], "]"}]], " ", 
                  RowBox[{"Cos", "[", "x", "]"}]}], "]"}], " ", 
                RowBox[{"CoshIntegral", "[", 
                 RowBox[{"r", " ", 
                  SqrtBox[
                   RowBox[{"Conjugate", "[", 
                    RowBox[{"\[CapitalPi]par", "[", 
                    RowBox[{"x", ",", "mD", ",", "u"}], "]"}], "]"}]], " ", 
                  RowBox[{"Cos", "[", "x", "]"}]}], "]"}]}], "-", 
               RowBox[{
                RowBox[{"Sinh", "[", 
                 RowBox[{"r", " ", 
                  SqrtBox[
                   RowBox[{"Conjugate", "[", 
                    RowBox[{"\[CapitalPi]par", "[", 
                    RowBox[{"x", ",", "mD", ",", "u"}], "]"}], "]"}]], " ", 
                  RowBox[{"Cos", "[", "x", "]"}]}], "]"}], " ", 
                RowBox[{"SinhIntegral", "[", 
                 RowBox[{"r", " ", 
                  SqrtBox[
                   RowBox[{"Conjugate", "[", 
                    RowBox[{"\[CapitalPi]par", "[", 
                    RowBox[{"x", ",", "mD", ",", "u"}], "]"}], "]"}]], " ", 
                  RowBox[{"Cos", "[", "x", "]"}]}], "]"}]}]}], ")"}]}], "+", 
            RowBox[{
             SqrtBox[
              RowBox[{"\[CapitalPi]par", "[", 
               RowBox[{"x", ",", "mD", ",", "u"}], "]"}]], " ", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{
                RowBox[{"-", 
                 RowBox[{"CoshIntegral", "[", 
                  RowBox[{"r", " ", 
                   RowBox[{"Cos", "[", "x", "]"}], " ", 
                   SqrtBox[
                    RowBox[{"\[CapitalPi]par", "[", 
                    RowBox[{"x", ",", "mD", ",", "u"}], "]"}]]}], "]"}]}], 
                " ", 
                RowBox[{"(", 
                 RowBox[{
                  RowBox[{"r", " ", 
                   RowBox[{"Cos", "[", "x", "]"}], " ", 
                   RowBox[{"Cosh", "[", 
                    RowBox[{"r", " ", 
                    RowBox[{"Cos", "[", "x", "]"}], " ", 
                    SqrtBox[
                    RowBox[{"\[CapitalPi]par", "[", 
                    RowBox[{"x", ",", "mD", ",", "u"}], "]"}]]}], "]"}], " ", 
                   
                   SqrtBox[
                    RowBox[{"\[CapitalPi]par", "[", 
                    RowBox[{"x", ",", "mD", ",", "u"}], "]"}]]}], "+", 
                  RowBox[{"2", " ", 
                   RowBox[{"Sinh", "[", 
                    RowBox[{"r", " ", 
                    RowBox[{"Cos", "[", "x", "]"}], " ", 
                    SqrtBox[
                    RowBox[{"\[CapitalPi]par", "[", 
                    RowBox[{"x", ",", "mD", ",", "u"}], "]"}]]}], "]"}]}]}], 
                 ")"}]}], "+", 
               RowBox[{
                RowBox[{"(", 
                 RowBox[{
                  RowBox[{"2", " ", 
                   RowBox[{"Cosh", "[", 
                    RowBox[{"r", " ", 
                    RowBox[{"Cos", "[", "x", "]"}], " ", 
                    SqrtBox[
                    RowBox[{"\[CapitalPi]par", "[", 
                    RowBox[{"x", ",", "mD", ",", "u"}], "]"}]]}], "]"}]}], 
                  "+", 
                  RowBox[{"r", " ", 
                   RowBox[{"Cos", "[", "x", "]"}], " ", 
                   SqrtBox[
                    RowBox[{"\[CapitalPi]par", "[", 
                    RowBox[{"x", ",", "mD", ",", "u"}], "]"}]], " ", 
                   RowBox[{"Sinh", "[", 
                    RowBox[{"r", " ", 
                    RowBox[{"Cos", "[", "x", "]"}], " ", 
                    SqrtBox[
                    RowBox[{"\[CapitalPi]par", "[", 
                    RowBox[{"x", ",", "mD", ",", "u"}], "]"}]]}], "]"}]}]}], 
                 ")"}], " ", 
                RowBox[{"SinhIntegral", "[", 
                 RowBox[{"r", " ", 
                  RowBox[{"Cos", "[", "x", "]"}], " ", 
                  SqrtBox[
                   RowBox[{"\[CapitalPi]par", "[", 
                    RowBox[{"x", ",", "mD", ",", "u"}], "]"}]]}], "]"}]}]}], 
              ")"}]}]}], ")"}]}], ",", 
         RowBox[{"{", 
          RowBox[{"x", ",", "0", ",", 
           RowBox[{"\[Pi]", "/", "2"}]}], "}"}], ",", 
         RowBox[{"WorkingPrecision", "\[Rule]", "20"}]}], "]"}]}], "]"}]}]}], 
   ";"}], 
  RowBox[{"(*", "UNREGULATED", "*)"}]}]], "Input",
 CellChangeTimes->{{3.74845092703507*^9, 3.748450937685601*^9}, {
   3.7489433167977753`*^9, 3.748943332355961*^9}, {3.7489433646776752`*^9, 
   3.7489433741412687`*^9}, {3.748943423038916*^9, 3.748943440837915*^9}, 
   3.749188428401885*^9}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"D", "[", 
    RowBox[{
     RowBox[{
      RowBox[{"Sin", "[", "\[Theta]", "]"}], 
      RowBox[{"f", "[", 
       RowBox[{"\[Theta]", ",", "mD", ",", "u"}], "]"}], 
      RowBox[{"Exp", "[", 
       RowBox[{
        RowBox[{"-", 
         RowBox[{"f", "[", 
          RowBox[{"\[Theta]", ",", "mD", ",", "u"}], "]"}]}], "r", " ", 
        RowBox[{"Cos", "[", "\[Theta]", "]"}]}], "]"}]}], ",", 
     RowBox[{"{", 
      RowBox[{"r", ",", "2"}], "}"}]}], "]"}], "+", 
   RowBox[{
    FractionBox["2", "r"], 
    RowBox[{"D", "[", 
     RowBox[{
      RowBox[{
       RowBox[{"Sin", "[", "\[Theta]", "]"}], 
       RowBox[{"f", "[", 
        RowBox[{"\[Theta]", ",", "mD", ",", "u"}], "]"}], 
       RowBox[{"Exp", "[", 
        RowBox[{
         RowBox[{"-", 
          RowBox[{"f", "[", 
           RowBox[{"\[Theta]", ",", "mD", ",", "u"}], "]"}]}], "r", " ", 
         RowBox[{"Cos", "[", "\[Theta]", "]"}]}], "]"}]}], ",", "r"}], 
     "]"}]}]}], "//", "FullSimplify"}]], "Input",
 CellChangeTimes->{{3.7491887080606737`*^9, 3.7491887791180353`*^9}, {
   3.749188853108238*^9, 3.749188865319393*^9}, 3.749202545203722*^9, {
   3.749202631773013*^9, 3.749202663257951*^9}, {3.749202717614155*^9, 
   3.7492027221255093`*^9}, {3.7492027977213593`*^9, 3.749202798502303*^9}, {
   3.749218162223762*^9, 3.749218182439782*^9}}],

Cell[BoxData[
 FractionBox[
  RowBox[{
   SuperscriptBox["\[ExponentialE]", 
    RowBox[{
     RowBox[{"-", "r"}], " ", 
     RowBox[{"Cos", "[", "\[Theta]", "]"}], " ", 
     RowBox[{"f", "[", 
      RowBox[{"\[Theta]", ",", "mD", ",", "u"}], "]"}]}]], " ", 
   RowBox[{"Cos", "[", "\[Theta]", "]"}], " ", 
   SuperscriptBox[
    RowBox[{"f", "[", 
     RowBox[{"\[Theta]", ",", "mD", ",", "u"}], "]"}], "2"], " ", 
   RowBox[{"(", 
    RowBox[{
     RowBox[{"-", "2"}], "+", 
     RowBox[{"r", " ", 
      RowBox[{"Cos", "[", "\[Theta]", "]"}], " ", 
      RowBox[{"f", "[", 
       RowBox[{"\[Theta]", ",", "mD", ",", "u"}], "]"}]}]}], ")"}], " ", 
   RowBox[{"Sin", "[", "\[Theta]", "]"}]}], "r"]], "Output",
 CellChangeTimes->{{3.7491887385473623`*^9, 3.7491887599064903`*^9}, {
   3.749188854699538*^9, 3.7491888664680147`*^9}, 3.749202481958252*^9, 
   3.749202545885826*^9, {3.749202639706296*^9, 3.749202664022654*^9}, {
   3.7492027187612143`*^9, 3.749202722771459*^9}, 3.7492027997176743`*^9, {
   3.7492181797414083`*^9, 3.749218183624193*^9}, 3.74932748207344*^9, 
   3.749368546098016*^9, 3.754128065818787*^9, 3.754205492999542*^9, 
   3.754206535454159*^9, 3.7542066703492613`*^9, 3.75524684821275*^9, 
   3.7552474675132236`*^9, 3.755368580029677*^9, 3.755368709493394*^9, 
   3.755368844180194*^9, 3.755433023302314*^9, 3.757091344221249*^9, 
   3.75744289572548*^9}]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"\[Epsilon]Rep1", "[", 
     RowBox[{"r_", ",", "mD_", ",", "u_"}], "]"}], ":=", 
    RowBox[{"Quiet", "[", 
     RowBox[{"NIntegrate", "[", 
      RowBox[{
       FractionBox[
        RowBox[{
         SuperscriptBox["\[ExponentialE]", 
          RowBox[{
           RowBox[{"-", "r"}], " ", 
           RowBox[{"Cos", "[", "\[Theta]", "]"}], " ", 
           RowBox[{"Re", "[", 
            SqrtBox[
             RowBox[{"\[CapitalPi]par", "[", 
              RowBox[{"\[Theta]", ",", "mD", ",", "u"}], "]"}]], "]"}]}]], 
         " ", 
         RowBox[{"Cos", "[", "\[Theta]", "]"}], " ", 
         SuperscriptBox[
          RowBox[{"Re", "[", 
           SqrtBox[
            RowBox[{"\[CapitalPi]par", "[", 
             RowBox[{"\[Theta]", ",", "mD", ",", "u"}], "]"}]], "]"}], "2"], 
         " ", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{"-", "2"}], "+", 
           RowBox[{"r", " ", 
            RowBox[{"Cos", "[", "\[Theta]", "]"}], " ", 
            RowBox[{"Re", "[", 
             SqrtBox[
              RowBox[{"\[CapitalPi]par", "[", 
               RowBox[{"\[Theta]", ",", "mD", ",", "u"}], "]"}]], "]"}]}]}], 
          ")"}], " ", 
         RowBox[{"Sin", "[", "\[Theta]", "]"}]}], "r"], ",", 
       RowBox[{"{", 
        RowBox[{"\[Theta]", ",", "0", ",", 
         RowBox[{"\[Pi]", "/", "2"}]}], "}"}], ",", 
       RowBox[{"MaxRecursion", "\[Rule]", "20"}], ",", 
       RowBox[{"WorkingPrecision", "\[Rule]", "20"}]}], "]"}], "]"}]}], ";"}], 
  RowBox[{"(*", 
   RowBox[{"WE", " ", "USE", " ", "THIS", " ", "ONE"}], "*)"}]}]], "Input",
 CellChangeTimes->{{3.749327484051489*^9, 3.7493275713487663`*^9}, {
   3.749485052704666*^9, 3.7494850595025578`*^9}, 3.749485216747398*^9, {
   3.749612579357493*^9, 3.749612589237705*^9}}]
}, Closed]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Tabs", "Subsection",
 CellChangeTimes->{{3.74845078759194*^9, 3.748450827213127*^9}, 
   3.748451123843587*^9, 3.748941360059739*^9}],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"ReVsTab", "[", 
    RowBox[{"mD1_", ",", "u1_", ",", "\[Sigma]1_"}], "]"}], ":=", 
   RowBox[{"Block", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{"u", "=", "u1"}], ",", 
       RowBox[{"mD", "=", "mD1"}], ",", 
       RowBox[{"\[Sigma]", "=", "\[Sigma]1"}], ",", "inter0", ",", "inter1", 
       ",", "tab", ",", "inter2", ",", "inter3", ",", "tab1", ",", "tab0"}], 
      "}"}], ",", 
     RowBox[{
      RowBox[{"tab0", "=", 
       RowBox[{"ParallelTable", "[", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"r", ",", 
           RowBox[{"\[Sigma]", " ", 
            SuperscriptBox["r", "2"], 
            RowBox[{"\[Epsilon]Rep1", "[", 
             RowBox[{"r", ",", "mD", ",", "u"}], "]"}]}]}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"r", ",", 
           SuperscriptBox["10", 
            RowBox[{"-", "10"}]], ",", "100", ",", 
           RowBox[{"1", "/", "20"}]}], "}"}]}], "]"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"inter0", "=", 
       RowBox[{"Interpolation", "[", "tab0", "]"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"inter1", "[", "r_", "]"}], ":=", 
       RowBox[{"Quiet", "[", 
        RowBox[{"NIntegrate", "[", 
         RowBox[{
          RowBox[{"inter0", "[", "r1", "]"}], ",", 
          RowBox[{"{", 
           RowBox[{"r1", ",", "0", ",", "r"}], "}"}]}], "]"}], "]"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"tab", "=", 
       RowBox[{"ParallelTable", "[", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"r", ",", 
           RowBox[{
            RowBox[{"inter1", "[", "r", "]"}], "+", "\[Sigma]"}]}], "}"}], 
         ",", 
         RowBox[{"{", 
          RowBox[{"r", ",", "0", ",", "100", ",", 
           RowBox[{"1", "/", "20"}]}], "}"}]}], "]"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"inter2", "=", 
       RowBox[{"Interpolation", "[", "tab", "]"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"inter3", "[", "r_", "]"}], ":=", 
       RowBox[{"Quiet", "[", 
        RowBox[{"NIntegrate", "[", 
         RowBox[{
          RowBox[{"inter2", "[", "r1", "]"}], ",", 
          RowBox[{"{", 
           RowBox[{"r1", ",", "0", ",", "r"}], "}"}]}], "]"}], "]"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"tab1", "=", 
       RowBox[{"ParallelTable", "[", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"r", ",", 
           RowBox[{"inter3", "[", "r", "]"}]}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"r", ",", "0", ",", "100", ",", 
           RowBox[{"1", "/", "20"}]}], "}"}]}], "]"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"Return", "[", "tab1", "]"}]}]}], "]"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.7453831005455914`*^9, 3.745383138661728*^9}, {
   3.745383312376183*^9, 3.74538334437337*^9}, {3.7453836903426113`*^9, 
   3.745383700509996*^9}, {3.745383888049996*^9, 3.7453838920497932`*^9}, {
   3.745384456942053*^9, 3.745384462717682*^9}, {3.745385041376384*^9, 
   3.7453850447607927`*^9}, {3.745385110730214*^9, 3.745385155644156*^9}, {
   3.745385388111433*^9, 3.745385411593401*^9}, {3.7453875595914288`*^9, 
   3.745387568075132*^9}, 3.745389177212406*^9, {3.7453901984733753`*^9, 
   3.745390202887982*^9}, {3.745390355427387*^9, 3.745390388219348*^9}, {
   3.7453977096680326`*^9, 3.745397725914731*^9}, {3.745397755948641*^9, 
   3.745397756084126*^9}, {3.7453980995991077`*^9, 3.745398113870977*^9}, {
   3.745399156102378*^9, 3.745399178169222*^9}, {3.745399342881937*^9, 
   3.745399361912752*^9}, {3.745401796965457*^9, 3.7454018195641527`*^9}, {
   3.745401971762494*^9, 3.745401971914714*^9}, {3.745404041771303*^9, 
   3.745404151470154*^9}, {3.745404384229478*^9, 3.745404389436048*^9}, {
   3.7454045122009163`*^9, 3.7454045237036552`*^9}, {3.745404614275045*^9, 
   3.7454046169752293`*^9}, {3.745404890358831*^9, 3.745404914872879*^9}, {
   3.7454740207870693`*^9, 3.745474024498345*^9}, {3.745477052572796*^9, 
   3.745477084925427*^9}, {3.745583208377653*^9, 3.74558321316575*^9}, {
   3.7461777044683733`*^9, 3.746177794182501*^9}, {3.746360152439383*^9, 
   3.746360194120142*^9}, 3.747138517796213*^9, {3.74714032667677*^9, 
   3.747140489547065*^9}, {3.747141354076187*^9, 3.747141359156494*^9}, {
   3.747141522823501*^9, 3.7471415310553417`*^9}, {3.749153891123*^9, 
   3.749153917106997*^9}, {3.749188604635096*^9, 3.749188604733561*^9}, {
   3.749203474410091*^9, 3.74920347448274*^9}, {3.749327310427429*^9, 
   3.74932731652871*^9}, {3.749327586006402*^9, 3.749327601454776*^9}, {
   3.7493277640253353`*^9, 3.749327852961533*^9}, {3.7493685883698683`*^9, 
   3.749368662570149*^9}, {3.749485109282816*^9, 3.749485111617383*^9}, {
   3.749485235084844*^9, 3.749485244893777*^9}, {3.749485546554497*^9, 
   3.749485566713616*^9}, {3.749485957914177*^9, 3.749485962777535*^9}, {
   3.749486298776033*^9, 3.7494863062313766`*^9}, 3.74948637708932*^9, {
   3.749486433762805*^9, 3.749486436801955*^9}, {3.7494871232714567`*^9, 
   3.749487132335362*^9}, 3.749487430829056*^9, 3.7494874656849194`*^9, 
   3.749487748002528*^9, {3.749489632672646*^9, 3.749489655684531*^9}, {
   3.749556105432901*^9, 3.74955611540036*^9}, {3.749556147985692*^9, 
   3.74955614880967*^9}, {3.74958184621616*^9, 3.749581854013291*^9}, {
   3.749612596013793*^9, 3.749612623366857*^9}, {3.749659261553111*^9, 
   3.749659261874166*^9}, 3.7496593149860153`*^9, {3.754132800057769*^9, 
   3.754132830883422*^9}, {3.7541333178478327`*^9, 3.754133320282439*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"reg", "=", 
   FractionBox["303689", "100000"]}], ";"}]], "Input",
 CellChangeTimes->{{3.749153590227599*^9, 3.74915359347929*^9}, {
  3.7491539252825727`*^9, 3.749153926506277*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"ImVsTab", "[", 
    RowBox[{"mD1_", ",", "u1_", ",", "\[Sigma]1_", ",", "T1_"}], "]"}], ":=", 
   
   RowBox[{"Block", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{"u", "=", "u1"}], ",", 
       RowBox[{"mD", "=", "mD1"}], ",", 
       RowBox[{"\[Sigma]", "=", "\[Sigma]1"}], ",", 
       RowBox[{"T", "=", "T1"}], ",", "tab0", ",", "tab1", ",", "inter0", ",",
        "inter1", ",", "inter2", ",", "temp", ",", "tab2"}], "}"}], ",", 
     RowBox[{
      RowBox[{"tab0", "=", 
       RowBox[{"Table", "[", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"r", ",", 
           RowBox[{"4", "\[Pi]", " ", "\[Sigma]", " ", 
            SuperscriptBox["r", "2"], 
            RowBox[{"\[Epsilon]Imp", "[", 
             RowBox[{"r", ",", "mD", ",", "u", ",", "T"}], "]"}]}]}], "}"}], 
         ",", 
         RowBox[{"{", 
          RowBox[{"r", ",", 
           SuperscriptBox["10", 
            RowBox[{"-", "10"}]], ",", "100", ",", 
           RowBox[{"1", "/", "20"}]}], "}"}]}], "]"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"inter0", "=", 
       RowBox[{"Interpolation", "[", "tab0", "]"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"inter1", "[", "r_", "]"}], ":=", 
       RowBox[{"Quiet", "[", 
        RowBox[{"NIntegrate", "[", 
         RowBox[{
          RowBox[{"inter0", "[", "r1", "]"}], ",", 
          RowBox[{"{", 
           RowBox[{"r1", ",", 
            SuperscriptBox["10", 
             RowBox[{"-", "10"}]], ",", "r"}], "}"}]}], "]"}], "]"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"temp", "=", 
       RowBox[{"inter1", "[", 
        SuperscriptBox["10", 
         RowBox[{"-", "10"}]], "]"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"tab1", "=", 
       RowBox[{"ParallelTable", "[", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"r", ",", 
           RowBox[{
            RowBox[{"inter1", "[", "r", "]"}], "-", "temp"}]}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"r", ",", 
           SuperscriptBox["10", 
            RowBox[{"-", "10"}]], ",", "100", ",", 
           RowBox[{"1", "/", "20"}]}], "}"}]}], "]"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"inter1", "=", 
       RowBox[{"Interpolation", "[", "tab1", "]"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"inter2", "[", "r_", "]"}], ":=", 
       RowBox[{"Quiet", "[", 
        RowBox[{"NIntegrate", "[", 
         RowBox[{
          RowBox[{"inter1", "[", "r1", "]"}], ",", 
          RowBox[{"{", 
           RowBox[{"r1", ",", 
            SuperscriptBox["10", 
             RowBox[{"-", "10"}]], ",", "r"}], "}"}]}], "]"}], "]"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"tab2", "=", 
       RowBox[{"ParallelTable", "[", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"r", ",", 
           RowBox[{"inter2", "[", "r", "]"}]}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"r", ",", 
           SuperscriptBox["10", 
            RowBox[{"-", "10"}]], ",", "100", ",", 
           RowBox[{"1", "/", "20"}]}], "}"}]}], "]"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"Return", "[", "tab2", "]"}]}]}], "]"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.7453831005455914`*^9, 3.745383138661728*^9}, {
   3.745383312376183*^9, 3.74538334437337*^9}, {3.7453836903426113`*^9, 
   3.745383700509996*^9}, {3.745383888049996*^9, 3.7453838920497932`*^9}, {
   3.745384456942053*^9, 3.745384462717682*^9}, {3.745385041376384*^9, 
   3.7453850447607927`*^9}, {3.745385110730214*^9, 3.745385155644156*^9}, {
   3.745385388111433*^9, 3.745385411593401*^9}, {3.7453875595914288`*^9, 
   3.745387568075132*^9}, 3.745389177212406*^9, {3.7453901984733753`*^9, 
   3.745390202887982*^9}, {3.745390355427387*^9, 3.745390388219348*^9}, {
   3.7453977096680326`*^9, 3.745397725914731*^9}, {3.745397755948641*^9, 
   3.745397756084126*^9}, {3.7453980995991077`*^9, 3.745398113870977*^9}, {
   3.745399156102378*^9, 3.745399178169222*^9}, {3.745399342881937*^9, 
   3.745399361912752*^9}, {3.745401796965457*^9, 3.7454018195641527`*^9}, {
   3.745401971762494*^9, 3.745401971914714*^9}, {3.745404041771303*^9, 
   3.745404151470154*^9}, {3.745404384229478*^9, 3.745404389436048*^9}, {
   3.7454045122009163`*^9, 3.7454045237036552`*^9}, {3.745404614275045*^9, 
   3.7454046169752293`*^9}, {3.745404890358831*^9, 3.745404914872879*^9}, {
   3.7454740207870693`*^9, 3.745474024498345*^9}, {3.745477052572796*^9, 
   3.745477084925427*^9}, {3.745583208377653*^9, 3.74558321316575*^9}, {
   3.7461777044683733`*^9, 3.746177794182501*^9}, {3.746360152439383*^9, 
   3.746360194120142*^9}, 3.747138517796213*^9, {3.74714032667677*^9, 
   3.747140456145793*^9}, {3.747142006921813*^9, 3.7471420095970497`*^9}, {
   3.7471420459327374`*^9, 3.747142070011909*^9}, {3.747142963611829*^9, 
   3.7471429679068823`*^9}, {3.747329490809226*^9, 3.7473294977769136`*^9}, {
   3.747458708309948*^9, 3.747458716523738*^9}, {3.747458783591525*^9, 
   3.747458787423175*^9}, {3.747458847768239*^9, 3.747458887920331*^9}, {
   3.747458940561996*^9, 3.747458944633296*^9}, {3.7474592066074753`*^9, 
   3.74745921250218*^9}, {3.747459387579301*^9, 3.747459391009719*^9}, {
   3.748450903768133*^9, 3.748450907542585*^9}, {3.7484510000627728`*^9, 
   3.748451033580184*^9}, {3.748456282411323*^9, 3.7484562828912697`*^9}, {
   3.748456340716448*^9, 3.748456344192161*^9}, {3.748456392965889*^9, 
   3.748456393348927*^9}, {3.748456492880068*^9, 3.748456541864429*^9}, {
   3.748456593905673*^9, 3.748456610377811*^9}, {3.749153597093884*^9, 
   3.749153621958075*^9}, {3.749153935907349*^9, 3.749153941020252*^9}, {
   3.749187135207795*^9, 3.74918713553677*^9}, {3.749581856519682*^9, 
   3.749581857664353*^9}, {3.749612630887063*^9, 3.7496126481429253`*^9}, {
   3.749659264625359*^9, 3.749659265160788*^9}, {3.75413450859312*^9, 
   3.7541345118604507`*^9}, {3.754140304208478*^9, 3.7541403085533447`*^9}}]
}, Closed]],

Cell[CellGroupData[{

Cell["Make potentials for pT=0", "Subsection",
 CellChangeTimes->{{3.745471833598156*^9, 3.745471838992208*^9}, {
  3.747482702323744*^9, 3.747482702739996*^9}, {3.754205546964004*^9, 
  3.754205548851056*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"Export", "[", 
    RowBox[{"\"\<pots/par/ReVspT0.dat\>\"", ",", 
     RowBox[{"ReVsTab", "[", 
      RowBox[{
       RowBox[{"mDcalmu", "[", 
        RowBox[{"Tlim", ",", "0", ",", 
         RowBox[{"kfinal", "[", 
          RowBox[{"[", "1", "]"}], "]"}], ",", 
         RowBox[{"kfinal", "[", 
          RowBox[{"[", "2", "]"}], "]"}]}], "]"}], ",", "w", ",", 
       RowBox[{"\[Sigma]cont", "[", 
        RowBox[{"[", "1", "]"}], "]"}]}], "]"}]}], "]"}], ";"}], "//", 
  "AbsoluteTiming"}]], "Input",
 CellChangeTimes->{{3.754132846598811*^9, 3.754132854011059*^9}, {
  3.754132888585803*^9, 3.754132915394245*^9}, {3.754132974292364*^9, 
  3.754133018639119*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"536.711642`", ",", "Null"}], "}"}]], "Output",
 CellChangeTimes->{3.7541329885216007`*^9, 3.7541332973445063`*^9, 
  3.7541339808117437`*^9, 3.75414087573284*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"Export", "[", 
    RowBox[{"\"\<pots/par/ImVspT0.dat\>\"", ",", 
     RowBox[{"ImVsTab", "[", 
      RowBox[{
       RowBox[{"SetPrecision", "[", 
        RowBox[{
         RowBox[{"mDcalmu", "[", 
          RowBox[{"Tlim", ",", "0", ",", 
           RowBox[{"kfinal", "[", 
            RowBox[{"[", "1", "]"}], "]"}], ",", 
           RowBox[{"kfinal", "[", 
            RowBox[{"[", "2", "]"}], "]"}]}], "]"}], ",", "30"}], "]"}], ",", 
       
       RowBox[{"SetPrecision", "[", 
        RowBox[{"w", ",", "30"}], "]"}], ",", 
       RowBox[{"SetPrecision", "[", 
        RowBox[{
         RowBox[{"\[Sigma]cont", "[", 
          RowBox[{"[", "1", "]"}], "]"}], ",", "30"}], "]"}], ",", "Tlim"}], 
      "]"}]}], "]"}], ";"}], "//", "AbsoluteTiming"}]], "Input",
 CellChangeTimes->{{3.754134524715332*^9, 3.7541345455332413`*^9}, {
  3.7541346019198513`*^9, 3.754134602444612*^9}, {3.754134692801319*^9, 
  3.7541347004534388`*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"2331.569506`", ",", "Null"}], "}"}]], "Output",
 CellChangeTimes->{3.754136034283772*^9, 3.75414320738932*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"Block", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"temp", ",", "temp1"}], "}"}], ",", 
    RowBox[{
     RowBox[{"temp", "=", 
      RowBox[{"ImVcp", "[", 
       RowBox[{
        SuperscriptBox["10", 
         RowBox[{"-", "10"}]], ",", 
        RowBox[{"SetPrecision", "[", 
         RowBox[{
          RowBox[{"mDcalmu", "[", 
           RowBox[{"Tlim", ",", "0", ",", 
            RowBox[{"kfinal", "[", 
             RowBox[{"[", "1", "]"}], "]"}], ",", 
            RowBox[{"kfinal", "[", 
             RowBox[{"[", "2", "]"}], "]"}]}], "]"}], ",", "30"}], "]"}], ",", 
        RowBox[{"SetPrecision", "[", 
         RowBox[{"w", ",", "30"}], "]"}], ",", 
        RowBox[{"SetPrecision", "[", 
         RowBox[{
          RowBox[{"\[Alpha]cont", "[", 
           RowBox[{"[", "1", "]"}], "]"}], ",", "30"}], "]"}], ",", "Tlim"}], 
       "]"}]}], ";", 
     RowBox[{"temp1", "=", 
      RowBox[{"ParallelTable", "[", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"r", ",", 
          RowBox[{
           RowBox[{"ImVcp", "[", 
            RowBox[{"r", ",", 
             RowBox[{"SetPrecision", "[", 
              RowBox[{
               RowBox[{"mDcalmu", "[", 
                RowBox[{"Tlim", ",", "0", ",", 
                 RowBox[{"kfinal", "[", 
                  RowBox[{"[", "1", "]"}], "]"}], ",", 
                 RowBox[{"kfinal", "[", 
                  RowBox[{"[", "2", "]"}], "]"}]}], "]"}], ",", "30"}], "]"}],
              ",", 
             RowBox[{"SetPrecision", "[", 
              RowBox[{"w", ",", "30"}], "]"}], ",", 
             RowBox[{"SetPrecision", "[", 
              RowBox[{
               RowBox[{"\[Alpha]cont", "[", 
                RowBox[{"[", "1", "]"}], "]"}], ",", "30"}], "]"}], ",", 
             "Tlim"}], "]"}], "-", "temp"}]}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"r", ",", 
          RowBox[{"1", "/", "1000"}], ",", "100", ",", 
          RowBox[{"1", "/", "20"}]}], "}"}]}], "]"}]}], ";", "\n", 
     RowBox[{"Export", "[", 
      RowBox[{"\"\<pots/par/ImVcpT0.dat\>\"", ",", "temp1"}], "]"}], ";"}]}], 
   "]"}], "//", "AbsoluteTiming"}]], "Input",
 CellChangeTimes->{{3.749612777504025*^9, 3.749612885682765*^9}, {
   3.749613092055283*^9, 3.749613094167004*^9}, {3.749659333672391*^9, 
   3.7496593429443293`*^9}, 3.749659381104273*^9, {3.754134767940505*^9, 
   3.754134858928797*^9}, {3.754134921800688*^9, 3.754134924568582*^9}, {
   3.7541403237422132`*^9, 3.754140325984097*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"795.082403`", ",", "Null"}], "}"}]], "Output",
 CellChangeTimes->{3.754138049775752*^9, 3.754140329240665*^9, 
  3.754144002558165*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"Block", "[", 
   RowBox[{
    RowBox[{"{", "temp", "}"}], ",", 
    RowBox[{
     RowBox[{"temp", "=", 
      RowBox[{"Join", "[", 
       RowBox[{
        RowBox[{"ParallelTable", "[", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{"r", ",", 
            RowBox[{"ReVcp", "[", 
             RowBox[{"r", ",", 
              RowBox[{"mDcalmu", "[", 
               RowBox[{"Tlim", ",", "0", ",", 
                RowBox[{"kfinal", "[", 
                 RowBox[{"[", "1", "]"}], "]"}], ",", 
                RowBox[{"kfinal", "[", 
                 RowBox[{"[", "2", "]"}], "]"}]}], "]"}], ",", "w", ",", 
              RowBox[{"\[Alpha]cont", "[", 
               RowBox[{"[", "1", "]"}], "]"}], ",", 
              RowBox[{"ccont", "[", 
               RowBox[{"[", "1", "]"}], "]"}]}], "]"}]}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{"r", ",", 
            RowBox[{"1", "/", "1000"}], ",", "100", ",", 
            RowBox[{"1", "/", "20"}]}], "}"}]}], "]"}], ",", 
        RowBox[{"{", 
         RowBox[{"{", 
          RowBox[{"500", ",", 
           RowBox[{"ReVcp", "[", 
            RowBox[{"500", ",", 
             RowBox[{"mDcalmu", "[", 
              RowBox[{"Tlim", ",", "0", ",", 
               RowBox[{"kfinal", "[", 
                RowBox[{"[", "1", "]"}], "]"}], ",", 
               RowBox[{"kfinal", "[", 
                RowBox[{"[", "2", "]"}], "]"}]}], "]"}], ",", "w", ",", 
             RowBox[{"\[Alpha]cont", "[", 
              RowBox[{"[", "1", "]"}], "]"}], ",", 
             RowBox[{"ccont", "[", 
              RowBox[{"[", "1", "]"}], "]"}]}], "]"}]}], "}"}], "}"}]}], 
       "]"}]}], ";", 
     RowBox[{"Export", "[", 
      RowBox[{"\"\<pots/par/ReVcpT0.dat\>\"", ",", "temp"}], "]"}], ";"}]}], 
   "]"}], "//", "AbsoluteTiming"}]], "Input",
 CellChangeTimes->{{3.7496129670279913`*^9, 3.749613117007798*^9}, {
  3.749659400628265*^9, 3.749659413224476*^9}, {3.7541349288792467`*^9, 
  3.754135036051675*^9}, {3.75414033460714*^9, 3.754140334833804*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"35.992766`", ",", "Null"}], "}"}]], "Output",
 CellChangeTimes->{3.7541382318616943`*^9, 3.754144038704768*^9}]
}, Open  ]]
}, Closed]],

Cell[CellGroupData[{

Cell["Make potentials for pT=/=0", "Subsection",
 CellChangeTimes->{{3.745471833598156*^9, 3.745471838992208*^9}, {
  3.747482702323744*^9, 3.747482702739996*^9}, {3.754205546964004*^9, 
  3.754205562236405*^9}, {3.7542057252933807`*^9, 3.754205727407052*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"ang", "=", 
  RowBox[{"Table", "[", 
   RowBox[{"i", ",", 
    RowBox[{"{", 
     RowBox[{"i", ",", "0", ",", "\[Pi]", ",", 
      RowBox[{"\[Pi]", "/", "50"}]}], "}"}]}], "]"}]}]], "Input",
 CellChangeTimes->{{3.754205565159699*^9, 3.7542055836700783`*^9}, {
   3.7542060604339323`*^9, 3.7542060621952*^9}, 3.754206094674316*^9}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"0", ",", 
   FractionBox["\[Pi]", "50"], ",", 
   FractionBox["\[Pi]", "25"], ",", 
   FractionBox[
    RowBox[{"3", " ", "\[Pi]"}], "50"], ",", 
   FractionBox[
    RowBox[{"2", " ", "\[Pi]"}], "25"], ",", 
   FractionBox["\[Pi]", "10"], ",", 
   FractionBox[
    RowBox[{"3", " ", "\[Pi]"}], "25"], ",", 
   FractionBox[
    RowBox[{"7", " ", "\[Pi]"}], "50"], ",", 
   FractionBox[
    RowBox[{"4", " ", "\[Pi]"}], "25"], ",", 
   FractionBox[
    RowBox[{"9", " ", "\[Pi]"}], "50"], ",", 
   FractionBox["\[Pi]", "5"], ",", 
   FractionBox[
    RowBox[{"11", " ", "\[Pi]"}], "50"], ",", 
   FractionBox[
    RowBox[{"6", " ", "\[Pi]"}], "25"], ",", 
   FractionBox[
    RowBox[{"13", " ", "\[Pi]"}], "50"], ",", 
   FractionBox[
    RowBox[{"7", " ", "\[Pi]"}], "25"], ",", 
   FractionBox[
    RowBox[{"3", " ", "\[Pi]"}], "10"], ",", 
   FractionBox[
    RowBox[{"8", " ", "\[Pi]"}], "25"], ",", 
   FractionBox[
    RowBox[{"17", " ", "\[Pi]"}], "50"], ",", 
   FractionBox[
    RowBox[{"9", " ", "\[Pi]"}], "25"], ",", 
   FractionBox[
    RowBox[{"19", " ", "\[Pi]"}], "50"], ",", 
   FractionBox[
    RowBox[{"2", " ", "\[Pi]"}], "5"], ",", 
   FractionBox[
    RowBox[{"21", " ", "\[Pi]"}], "50"], ",", 
   FractionBox[
    RowBox[{"11", " ", "\[Pi]"}], "25"], ",", 
   FractionBox[
    RowBox[{"23", " ", "\[Pi]"}], "50"], ",", 
   FractionBox[
    RowBox[{"12", " ", "\[Pi]"}], "25"], ",", 
   FractionBox["\[Pi]", "2"], ",", 
   FractionBox[
    RowBox[{"13", " ", "\[Pi]"}], "25"], ",", 
   FractionBox[
    RowBox[{"27", " ", "\[Pi]"}], "50"], ",", 
   FractionBox[
    RowBox[{"14", " ", "\[Pi]"}], "25"], ",", 
   FractionBox[
    RowBox[{"29", " ", "\[Pi]"}], "50"], ",", 
   FractionBox[
    RowBox[{"3", " ", "\[Pi]"}], "5"], ",", 
   FractionBox[
    RowBox[{"31", " ", "\[Pi]"}], "50"], ",", 
   FractionBox[
    RowBox[{"16", " ", "\[Pi]"}], "25"], ",", 
   FractionBox[
    RowBox[{"33", " ", "\[Pi]"}], "50"], ",", 
   FractionBox[
    RowBox[{"17", " ", "\[Pi]"}], "25"], ",", 
   FractionBox[
    RowBox[{"7", " ", "\[Pi]"}], "10"], ",", 
   FractionBox[
    RowBox[{"18", " ", "\[Pi]"}], "25"], ",", 
   FractionBox[
    RowBox[{"37", " ", "\[Pi]"}], "50"], ",", 
   FractionBox[
    RowBox[{"19", " ", "\[Pi]"}], "25"], ",", 
   FractionBox[
    RowBox[{"39", " ", "\[Pi]"}], "50"], ",", 
   FractionBox[
    RowBox[{"4", " ", "\[Pi]"}], "5"], ",", 
   FractionBox[
    RowBox[{"41", " ", "\[Pi]"}], "50"], ",", 
   FractionBox[
    RowBox[{"21", " ", "\[Pi]"}], "25"], ",", 
   FractionBox[
    RowBox[{"43", " ", "\[Pi]"}], "50"], ",", 
   FractionBox[
    RowBox[{"22", " ", "\[Pi]"}], "25"], ",", 
   FractionBox[
    RowBox[{"9", " ", "\[Pi]"}], "10"], ",", 
   FractionBox[
    RowBox[{"23", " ", "\[Pi]"}], "25"], ",", 
   FractionBox[
    RowBox[{"47", " ", "\[Pi]"}], "50"], ",", 
   FractionBox[
    RowBox[{"24", " ", "\[Pi]"}], "25"], ",", 
   FractionBox[
    RowBox[{"49", " ", "\[Pi]"}], "50"], ",", "\[Pi]"}], "}"}]], "Output",
 CellChangeTimes->{{3.754205580526496*^9, 3.754205584066511*^9}, 
   3.7542060631688747`*^9, 3.7542060950139923`*^9, 3.7542065417533503`*^9, 
   3.754206675223402*^9, 3.755246612703364*^9, 3.755247474307499*^9, 
   3.7553685836555557`*^9, 3.755368712492278*^9, 3.755368849106421*^9, 
   3.755433031044141*^9, 3.7570913504683867`*^9, 3.7574429034443502`*^9, 
   3.757804641277463*^9, 3.757807658172935*^9, 3.757807839072074*^9}]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{"pT", "=", "25"}], ";"}]], "Input",
 CellChangeTimes->{{3.7552469023018303`*^9, 3.7552469041058073`*^9}, {
  3.7553685865964003`*^9, 3.755368586793284*^9}, {3.755368662836259*^9, 
  3.7553686824026337`*^9}, {3.7553687248118773`*^9, 3.755368725205554*^9}, {
  3.755368851378283*^9, 3.755368851616117*^9}, {3.757091352484736*^9, 
  3.75709135255781*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"Do", "[", 
    RowBox[{
     RowBox[{"Export", "[", 
      RowBox[{
       RowBox[{"\"\<pots/par/pT25/ReVspT\>\"", "<>", 
        RowBox[{"ToString", "[", "pT", "]"}], "<>", "\"\<ang\>\"", "<>", 
        RowBox[{"ToString", "[", "i", "]"}], "<>", "\"\<Jpsi.dat\>\""}], ",", 
       
       RowBox[{"ReVsTab", "[", 
        RowBox[{
         RowBox[{"mDcalmu", "[", 
          RowBox[{"Tlim", ",", "0", ",", 
           RowBox[{"kfinal", "[", 
            RowBox[{"[", "1", "]"}], "]"}], ",", 
           RowBox[{"kfinal", "[", 
            RowBox[{"[", "2", "]"}], "]"}]}], "]"}], ",", 
         RowBox[{"v", "[", 
          RowBox[{
           RowBox[{"ang", "[", 
            RowBox[{"[", "i", "]"}], "]"}], ",", "pT", ",", "1", ",", "0"}], 
          "]"}], ",", 
         RowBox[{"\[Sigma]cont", "[", 
          RowBox[{"[", "1", "]"}], "]"}]}], "]"}]}], "]"}], ",", 
     RowBox[{"{", 
      RowBox[{"i", ",", "1", ",", 
       RowBox[{"Length", "[", "ang", "]"}]}], "}"}]}], "]"}], ";"}], "//", 
  "AbsoluteTiming"}]], "Input",
 CellChangeTimes->{{3.754132846598811*^9, 3.754132854011059*^9}, {
   3.754132888585803*^9, 3.754132915394245*^9}, {3.754132974292364*^9, 
   3.754133018639119*^9}, {3.754205607043694*^9, 3.754205709501533*^9}, {
   3.754205749621861*^9, 3.754205779705003*^9}, {3.755246915127986*^9, 
   3.755246915783338*^9}, 3.7552470567504683`*^9, {3.7553688596728992`*^9, 
   3.755368861635685*^9}, {3.757091355753311*^9, 3.7570913558768387`*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"Do", "[", 
    RowBox[{
     RowBox[{"Export", "[", 
      RowBox[{
       RowBox[{"\"\<pots/par/pT25/ImVspT\>\"", "<>", 
        RowBox[{"ToString", "[", "pT", "]"}], "<>", "\"\<ang\>\"", "<>", 
        RowBox[{"ToString", "[", "i", "]"}], "<>", "\"\<Jpsi.dat\>\""}], ",", 
       
       RowBox[{"ImVsTab", "[", 
        RowBox[{
         RowBox[{"SetPrecision", "[", 
          RowBox[{
           RowBox[{"mDcalmu", "[", 
            RowBox[{"Tlim", ",", "0", ",", 
             RowBox[{"kfinal", "[", 
              RowBox[{"[", "1", "]"}], "]"}], ",", 
             RowBox[{"kfinal", "[", 
              RowBox[{"[", "2", "]"}], "]"}]}], "]"}], ",", "30"}], "]"}], 
         ",", 
         RowBox[{"SetPrecision", "[", 
          RowBox[{
           RowBox[{"v", "[", 
            RowBox[{
             RowBox[{"ang", "[", 
              RowBox[{"[", "i", "]"}], "]"}], ",", "pT", ",", "1", ",", "0"}],
             "]"}], ",", "30"}], "]"}], ",", 
         RowBox[{"SetPrecision", "[", 
          RowBox[{
           RowBox[{"\[Sigma]cont", "[", 
            RowBox[{"[", "1", "]"}], "]"}], ",", "30"}], "]"}], ",", "Tlim"}],
         "]"}]}], "]"}], ",", 
     RowBox[{"{", 
      RowBox[{"i", ",", "39", ",", 
       RowBox[{"Length", "[", "ang", "]"}]}], "}"}]}], "]"}], ";"}], "//", 
  "AbsoluteTiming"}]], "Input",
 CellChangeTimes->{{3.754132846598811*^9, 3.754132854011059*^9}, {
   3.754132888585803*^9, 3.754132915394245*^9}, {3.754132974292364*^9, 
   3.754133018639119*^9}, {3.754205607043694*^9, 3.754205709501533*^9}, {
   3.754205749621861*^9, 3.754205779705003*^9}, {3.754206110259417*^9, 
   3.754206167038912*^9}, {3.755246919354765*^9, 3.755246919847619*^9}, 
   3.755247065296275*^9, {3.755247148460997*^9, 3.75524717634839*^9}, {
   3.7552475150496283`*^9, 3.755247520988991*^9}, {3.755368592330448*^9, 
   3.7553685968951883`*^9}, {3.755368686581056*^9, 3.755368686737338*^9}, {
   3.755368751609913*^9, 3.755368752012121*^9}, {3.7553688837310762`*^9, 
   3.75536889622689*^9}, {3.7554330678827267`*^9, 3.755433092415715*^9}, {
   3.757442910040139*^9, 3.757442921640079*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"Block", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"temp", ",", "temp1"}], "}"}], ",", 
    RowBox[{"Do", "[", 
     RowBox[{
      RowBox[{
       RowBox[{"temp", "=", 
        RowBox[{"ImVcp", "[", 
         RowBox[{
          SuperscriptBox["10", 
           RowBox[{"-", "10"}]], ",", 
          RowBox[{"SetPrecision", "[", 
           RowBox[{
            RowBox[{"mDcalmu", "[", 
             RowBox[{"Tlim", ",", "0", ",", 
              RowBox[{"kfinal", "[", 
               RowBox[{"[", "1", "]"}], "]"}], ",", 
              RowBox[{"kfinal", "[", 
               RowBox[{"[", "2", "]"}], "]"}]}], "]"}], ",", "30"}], "]"}], 
          ",", 
          RowBox[{"SetPrecision", "[", 
           RowBox[{
            RowBox[{"v", "[", 
             RowBox[{
              RowBox[{"ang", "[", 
               RowBox[{"[", "i", "]"}], "]"}], ",", "pT", ",", "1", ",", 
              "0"}], "]"}], ",", "30"}], "]"}], ",", 
          RowBox[{"SetPrecision", "[", 
           RowBox[{
            RowBox[{"\[Alpha]cont", "[", 
             RowBox[{"[", "1", "]"}], "]"}], ",", "30"}], "]"}], ",", 
          "Tlim"}], "]"}]}], ";", 
       RowBox[{"temp1", "=", 
        RowBox[{"ParallelTable", "[", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{"r", ",", 
            RowBox[{
             RowBox[{"ImVcp", "[", 
              RowBox[{"r", ",", 
               RowBox[{"SetPrecision", "[", 
                RowBox[{
                 RowBox[{"mDcalmu", "[", 
                  RowBox[{"Tlim", ",", "0", ",", 
                   RowBox[{"kfinal", "[", 
                    RowBox[{"[", "1", "]"}], "]"}], ",", 
                   RowBox[{"kfinal", "[", 
                    RowBox[{"[", "2", "]"}], "]"}]}], "]"}], ",", "30"}], 
                "]"}], ",", 
               RowBox[{"SetPrecision", "[", 
                RowBox[{
                 RowBox[{"v", "[", 
                  RowBox[{
                   RowBox[{"ang", "[", 
                    RowBox[{"[", "i", "]"}], "]"}], ",", "pT", ",", "1", ",", 
                   "0"}], "]"}], ",", "30"}], "]"}], ",", 
               RowBox[{"SetPrecision", "[", 
                RowBox[{
                 RowBox[{"\[Alpha]cont", "[", 
                  RowBox[{"[", "1", "]"}], "]"}], ",", "30"}], "]"}], ",", 
               "Tlim"}], "]"}], "-", "temp"}]}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{"r", ",", 
            RowBox[{"1", "/", "1000"}], ",", "100", ",", 
            RowBox[{"1", "/", "20"}]}], "}"}]}], "]"}]}], ";", "\n", 
       RowBox[{"Export", "[", 
        RowBox[{
         RowBox[{"\"\<pots/par/pT25/ImVcpT\>\"", "<>", 
          RowBox[{"ToString", "[", "pT", "]"}], "<>", "\"\<ang\>\"", "<>", 
          RowBox[{"ToString", "[", "i", "]"}], "<>", "\"\<Jpsi.dat\>\""}], 
         ",", "temp1"}], "]"}], ";"}], ",", 
      RowBox[{"{", 
       RowBox[{"i", ",", "1", ",", 
        RowBox[{"Length", "[", "ang", "]"}]}], "}"}]}], "]"}]}], "]"}], "//", 
  "AbsoluteTiming"}]], "Input",
 CellChangeTimes->{{3.749612777504025*^9, 3.749612885682765*^9}, {
   3.749613092055283*^9, 3.749613094167004*^9}, {3.749659333672391*^9, 
   3.7496593429443293`*^9}, 3.749659381104273*^9, {3.754134767940505*^9, 
   3.754134858928797*^9}, {3.754134921800688*^9, 3.754134924568582*^9}, {
   3.7541403237422132`*^9, 3.754140325984097*^9}, {3.7542061892053213`*^9, 
   3.754206252962945*^9}, {3.75524692277122*^9, 3.7552469293156977`*^9}, 
   3.7552470710554934`*^9, {3.755247570214356*^9, 3.755247572588718*^9}, 
   3.755368901993477*^9, {3.75709136342693*^9, 3.757091363555436*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"Block", "[", 
   RowBox[{
    RowBox[{"{", "temp", "}"}], ",", 
    RowBox[{"Do", "[", 
     RowBox[{
      RowBox[{
       RowBox[{"temp", "=", 
        RowBox[{"Join", "[", 
         RowBox[{
          RowBox[{"ParallelTable", "[", 
           RowBox[{
            RowBox[{"{", 
             RowBox[{"r", ",", 
              RowBox[{"ReVcp", "[", 
               RowBox[{"r", ",", 
                RowBox[{"mDcalmu", "[", 
                 RowBox[{"Tlim", ",", "0", ",", 
                  RowBox[{"kfinal", "[", 
                   RowBox[{"[", "1", "]"}], "]"}], ",", 
                  RowBox[{"kfinal", "[", 
                   RowBox[{"[", "2", "]"}], "]"}]}], "]"}], ",", 
                RowBox[{"v", "[", 
                 RowBox[{
                  RowBox[{"ang", "[", 
                   RowBox[{"[", "i", "]"}], "]"}], ",", "pT", ",", "1", ",", 
                  "0"}], "]"}], ",", 
                RowBox[{"\[Alpha]cont", "[", 
                 RowBox[{"[", "1", "]"}], "]"}], ",", 
                RowBox[{"ccont", "[", 
                 RowBox[{"[", "1", "]"}], "]"}]}], "]"}]}], "}"}], ",", 
            RowBox[{"{", 
             RowBox[{"r", ",", 
              RowBox[{"1", "/", "1000"}], ",", "100", ",", 
              RowBox[{"1", "/", "20"}]}], "}"}]}], "]"}], ",", 
          RowBox[{"{", 
           RowBox[{"{", 
            RowBox[{"500", ",", 
             RowBox[{"ReVcp", "[", 
              RowBox[{"500", ",", 
               RowBox[{"mDcalmu", "[", 
                RowBox[{"Tlim", ",", "0", ",", 
                 RowBox[{"kfinal", "[", 
                  RowBox[{"[", "1", "]"}], "]"}], ",", 
                 RowBox[{"kfinal", "[", 
                  RowBox[{"[", "2", "]"}], "]"}]}], "]"}], ",", 
               RowBox[{"v", "[", 
                RowBox[{
                 RowBox[{"ang", "[", 
                  RowBox[{"[", "i", "]"}], "]"}], ",", "pT", ",", "1", ",", 
                 "0"}], "]"}], ",", 
               RowBox[{"\[Alpha]cont", "[", 
                RowBox[{"[", "1", "]"}], "]"}], ",", 
               RowBox[{"ccont", "[", 
                RowBox[{"[", "1", "]"}], "]"}]}], "]"}]}], "}"}], "}"}]}], 
         "]"}]}], ";", 
       RowBox[{"Export", "[", 
        RowBox[{
         RowBox[{"\"\<pots/par/pT25/ReVcpT\>\"", "<>", 
          RowBox[{"ToString", "[", "pT", "]"}], "<>", "\"\<ang\>\"", "<>", 
          RowBox[{"ToString", "[", "i", "]"}], "<>", "\"\<Jpsi.dat\>\""}], 
         ",", "temp"}], "]"}], ";"}], ",", 
      RowBox[{"{", 
       RowBox[{"i", ",", "1", ",", 
        RowBox[{"Length", "[", "ang", "]"}]}], "}"}]}], "]"}]}], "]"}], "//", 
  "AbsoluteTiming"}]], "Input",
 CellChangeTimes->{{3.7496129670279913`*^9, 3.749613117007798*^9}, {
   3.749659400628265*^9, 3.749659413224476*^9}, {3.7541349288792467`*^9, 
   3.754135036051675*^9}, {3.75414033460714*^9, 3.754140334833804*^9}, 
   3.7542062256018476`*^9, {3.7542062902572803`*^9, 3.754206310058507*^9}, {
   3.755246944884286*^9, 3.755246948764676*^9}, 3.755247075304429*^9, {
   3.7552476010706167`*^9, 3.755247602662754*^9}, {3.755368730338382*^9, 
   3.7553687406773787`*^9}, {3.755368909653558*^9, 3.755368909806849*^9}, 
   3.755433287347097*^9, {3.757091368435079*^9, 3.7570913685930357`*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"35.992766`", ",", "Null"}], "}"}]], "Output",
 CellChangeTimes->{3.7541382318616943`*^9, 3.754144038704768*^9}]
}, Open  ]]
}, Closed]]
}, Closed]],

Cell[CellGroupData[{

Cell["Spectra", "Section",
 CellChangeTimes->{{3.745472165420155*^9, 3.745472170532083*^9}, {
   3.7578068654594812`*^9, 3.757806877651998*^9}, 3.757807915717453*^9}],

Cell[CellGroupData[{

Cell["pT = 0", "Subsection",
 CellChangeTimes->{{3.7578047134492683`*^9, 3.7578047416705647`*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"Block", "[", 
   RowBox[{
    RowBox[{"{", "data", "}"}], ",", 
    RowBox[{
     RowBox[{"data", "=", 
      RowBox[{"ToExpression", "[", 
       RowBox[{"Import", "[", "\"\<pots/par/pT0/ReVspT0Jpsi.dat\>\"", "]"}], 
       "]"}]}], ";", 
     RowBox[{"data", "=", 
      RowBox[{"Append", "[", 
       RowBox[{"data", ",", 
        RowBox[{"{", 
         RowBox[{"20000", ",", 
          RowBox[{"data", "[", 
           RowBox[{"[", 
            RowBox[{
             RowBox[{"-", "1"}], ",", "2"}], "]"}], "]"}]}], "}"}]}], "]"}]}],
      ";", 
     RowBox[{"ReVs", "=", 
      RowBox[{"Interpolation", "[", 
       RowBox[{"data", ",", 
        RowBox[{"InterpolationOrder", "\[Rule]", "1"}]}], "]"}]}]}]}], "]"}], 
  ";"}]], "Input",
 CellChangeTimes->{{3.746273043134018*^9, 3.7462731014710627`*^9}, {
   3.746273301287758*^9, 3.746273304882516*^9}, {3.746273761020192*^9, 
   3.746273876685227*^9}, {3.7462744640649643`*^9, 3.746274465417224*^9}, {
   3.746349735495809*^9, 3.746349736436407*^9}, 3.746349774584558*^9, {
   3.747480794219287*^9, 3.747480812144912*^9}, {3.747546497327075*^9, 
   3.747546502341762*^9}, {3.7477311702504187`*^9, 3.747731172776266*^9}, {
   3.747933590766211*^9, 3.7479335908605967`*^9}, {3.747933831643701*^9, 
   3.7479338321885357`*^9}, {3.747935743003852*^9, 3.747935745435129*^9}, {
   3.747980226650998*^9, 3.747980227430276*^9}, {3.74819373389242*^9, 
   3.748193736020507*^9}, {3.74955561414298*^9, 3.749555616431025*^9}, {
   3.749555735339233*^9, 3.749555770441473*^9}, {3.749563199290225*^9, 
   3.7495632002283087`*^9}, {3.749582016224145*^9, 3.7495820173360643`*^9}, 
   3.7496465801174393`*^9, 3.749655737246266*^9, {3.749676660140545*^9, 
   3.7496766705804367`*^9}, 3.749707823586372*^9, 3.749831719792158*^9, {
   3.749835469145554*^9, 3.749835470031209*^9}, {3.749835778375493*^9, 
   3.7498357790711718`*^9}, {3.749835993135953*^9, 3.749835993954405*^9}, 
   3.749851496421886*^9, {3.754139882828698*^9, 3.754139908225337*^9}, 
   3.754139940263101*^9, {3.757804680404768*^9, 3.757804683275345*^9}, {
   3.757805059006091*^9, 3.7578050593888407`*^9}, {3.758209979509252*^9, 
   3.7582100351236277`*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"Block", "[", 
   RowBox[{
    RowBox[{"{", "data", "}"}], ",", 
    RowBox[{
     RowBox[{"data", "=", 
      RowBox[{"ToExpression", "[", 
       RowBox[{"Import", "[", "\"\<pots/par/pT0/ReVcpT0Jpsi.dat\>\"", "]"}], 
       "]"}]}], ";", 
     RowBox[{"data", "=", 
      RowBox[{"Append", "[", 
       RowBox[{"data", ",", 
        RowBox[{"{", 
         RowBox[{"20000", ",", 
          RowBox[{"data", "[", 
           RowBox[{"[", 
            RowBox[{
             RowBox[{"-", "1"}], ",", "2"}], "]"}], "]"}]}], "}"}]}], "]"}]}],
      ";", 
     RowBox[{"ReVc", "=", 
      RowBox[{"Interpolation", "[", 
       RowBox[{"data", ",", 
        RowBox[{"InterpolationOrder", "\[Rule]", "1"}]}], "]"}]}]}]}], "]"}], 
  ";"}]], "Input",
 CellChangeTimes->{{3.746273043134018*^9, 3.7462731014710627`*^9}, {
   3.746273301287758*^9, 3.746273304882516*^9}, {3.746273761020192*^9, 
   3.746273876685227*^9}, {3.7462744640649643`*^9, 3.746274465417224*^9}, {
   3.746349735495809*^9, 3.746349736436407*^9}, 3.746349774584558*^9, {
   3.747480794219287*^9, 3.747480812144912*^9}, {3.747546497327075*^9, 
   3.747546502341762*^9}, {3.7477311702504187`*^9, 3.747731172776266*^9}, {
   3.747933590766211*^9, 3.7479335908605967`*^9}, {3.747933831643701*^9, 
   3.7479338321885357`*^9}, {3.747935743003852*^9, 3.747935745435129*^9}, {
   3.747980226650998*^9, 3.747980227430276*^9}, {3.74819373389242*^9, 
   3.748193736020507*^9}, {3.74955561414298*^9, 3.749555616431025*^9}, {
   3.749555735339233*^9, 3.749555770441473*^9}, {3.749563199290225*^9, 
   3.7495632002283087`*^9}, {3.749582016224145*^9, 3.7495820173360643`*^9}, 
   3.7496465801174393`*^9, 3.749655737246266*^9, {3.749676660140545*^9, 
   3.7496766705804367`*^9}, 3.749707823586372*^9, 3.749831719792158*^9, {
   3.749835469145554*^9, 3.749835470031209*^9}, {3.749835778375493*^9, 
   3.7498357790711718`*^9}, {3.749835993135953*^9, 3.749835993954405*^9}, 
   3.749851496421886*^9, {3.754139882828698*^9, 3.754139942863409*^9}, {
   3.757804691721692*^9, 3.757804692636195*^9}, 3.7578050636583776`*^9, {
   3.758210040115294*^9, 3.7582100412726183`*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"Block", "[", 
   RowBox[{
    RowBox[{"{", "data", "}"}], ",", 
    RowBox[{
     RowBox[{"data", "=", 
      RowBox[{"ToExpression", "[", 
       RowBox[{"Import", "[", "\"\<pots/par/pT0/ImVspT0Jpsi.dat\>\"", "]"}], 
       "]"}]}], ";", 
     RowBox[{"data", "=", 
      RowBox[{"Append", "[", 
       RowBox[{"data", ",", 
        RowBox[{"{", 
         RowBox[{"20000", ",", 
          RowBox[{"data", "[", 
           RowBox[{"[", 
            RowBox[{
             RowBox[{"-", "1"}], ",", "2"}], "]"}], "]"}]}], "}"}]}], "]"}]}],
      ";", 
     RowBox[{"ImVs", "=", 
      RowBox[{"Interpolation", "[", 
       RowBox[{"data", ",", 
        RowBox[{"InterpolationOrder", "\[Rule]", "1"}]}], "]"}]}]}]}], "]"}], 
  ";"}]], "Input",
 CellChangeTimes->{{3.746273043134018*^9, 3.7462731014710627`*^9}, {
   3.746273301287758*^9, 3.746273304882516*^9}, {3.746273761020192*^9, 
   3.746273876685227*^9}, {3.7462744640649643`*^9, 3.746274465417224*^9}, {
   3.746349735495809*^9, 3.746349736436407*^9}, 3.746349774584558*^9, {
   3.747480794219287*^9, 3.747480812144912*^9}, {3.747546497327075*^9, 
   3.747546502341762*^9}, {3.7477311702504187`*^9, 3.747731172776266*^9}, {
   3.747933590766211*^9, 3.7479335908605967`*^9}, {3.747933831643701*^9, 
   3.7479338321885357`*^9}, {3.747935743003852*^9, 3.747935745435129*^9}, {
   3.747980226650998*^9, 3.747980227430276*^9}, {3.74819373389242*^9, 
   3.748193736020507*^9}, {3.74955561414298*^9, 3.749555616431025*^9}, {
   3.749555735339233*^9, 3.749555770441473*^9}, {3.749563199290225*^9, 
   3.7495632002283087`*^9}, {3.749582016224145*^9, 3.7495820173360643`*^9}, 
   3.7496465801174393`*^9, 3.749655737246266*^9, {3.749676660140545*^9, 
   3.7496766705804367`*^9}, 3.749707823586372*^9, 3.749831719792158*^9, {
   3.749835469145554*^9, 3.749835470031209*^9}, {3.749835778375493*^9, 
   3.7498357790711718`*^9}, {3.749835993135953*^9, 3.749835993954405*^9}, 
   3.749851496421886*^9, {3.754139882828698*^9, 3.754139908225337*^9}, {
   3.754139946081867*^9, 3.754139952671867*^9}, {3.757804695535633*^9, 
   3.7578046959247437`*^9}, 3.757805065025539*^9, {3.7582100445633097`*^9, 
   3.758210045526239*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"Block", "[", 
   RowBox[{
    RowBox[{"{", "data", "}"}], ",", 
    RowBox[{
     RowBox[{"data", "=", 
      RowBox[{"ToExpression", "[", 
       RowBox[{"Import", "[", "\"\<pots/par/pT0/ImVcpT0Jpsi.dat\>\"", "]"}], 
       "]"}]}], ";", 
     RowBox[{"data", "=", 
      RowBox[{"Append", "[", 
       RowBox[{"data", ",", 
        RowBox[{"{", 
         RowBox[{"20000", ",", 
          RowBox[{"data", "[", 
           RowBox[{"[", 
            RowBox[{
             RowBox[{"-", "1"}], ",", "2"}], "]"}], "]"}]}], "}"}]}], "]"}]}],
      ";", 
     RowBox[{"ImVc", "=", 
      RowBox[{"Interpolation", "[", 
       RowBox[{"data", ",", 
        RowBox[{"InterpolationOrder", "\[Rule]", "1"}]}], "]"}]}]}]}], "]"}], 
  ";"}]], "Input",
 CellChangeTimes->{{3.746273043134018*^9, 3.7462731014710627`*^9}, {
   3.746273301287758*^9, 3.746273304882516*^9}, {3.746273761020192*^9, 
   3.746273876685227*^9}, {3.7462744640649643`*^9, 3.746274465417224*^9}, {
   3.746349735495809*^9, 3.746349736436407*^9}, 3.746349774584558*^9, {
   3.747480794219287*^9, 3.747480812144912*^9}, {3.747546497327075*^9, 
   3.747546502341762*^9}, {3.7477311702504187`*^9, 3.747731172776266*^9}, {
   3.747933590766211*^9, 3.7479335908605967`*^9}, {3.747933831643701*^9, 
   3.7479338321885357`*^9}, {3.747935743003852*^9, 3.747935745435129*^9}, {
   3.747980226650998*^9, 3.747980227430276*^9}, {3.74819373389242*^9, 
   3.748193736020507*^9}, {3.74955561414298*^9, 3.749555616431025*^9}, {
   3.749555735339233*^9, 3.749555770441473*^9}, {3.749563199290225*^9, 
   3.7495632002283087`*^9}, {3.749582016224145*^9, 3.7495820173360643`*^9}, 
   3.7496465801174393`*^9, 3.749655737246266*^9, {3.749676660140545*^9, 
   3.7496766705804367`*^9}, 3.749707823586372*^9, 3.749831719792158*^9, {
   3.749835469145554*^9, 3.749835470031209*^9}, {3.749835778375493*^9, 
   3.7498357790711718`*^9}, {3.749835993135953*^9, 3.749835993954405*^9}, 
   3.749851496421886*^9, {3.754139882828698*^9, 3.754139908225337*^9}, {
   3.75413995558912*^9, 3.754139971121129*^9}, {3.757804698154974*^9, 
   3.757804698504745*^9}, 3.757805066336375*^9, {3.758210049695629*^9, 
   3.758210050646735*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Plot", "[", 
  RowBox[{
   RowBox[{
    RowBox[{"ReVs", "[", 
     FractionBox["r", "0.197"], "]"}], "+", 
    RowBox[{"ReVc", "[", 
     FractionBox["r", "0.197"], "]"}]}], ",", 
   RowBox[{"{", 
    RowBox[{"r", ",", "0", ",", "30"}], "}"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.754139985269348*^9, 3.7541400185617247`*^9}}],

Cell[BoxData[
 GraphicsBox[{{{}, {}, 
    TagBox[
     {RGBColor[0.368417, 0.506779, 0.709798], AbsoluteThickness[1.6], Opacity[
      1.], LineBox[CompressedData["
1:eJwV1nc8lV0cAHDrDjOJUqGFyl4Zod+xKlSoZJRIKIUoWQlJkcqr8nKphBKv
hlVCeJCsjEQRsmXd+5Ctwnv8dT/fz+885zfOcz732eJ44bAzBxsb23Z2NraV
3/cdC9bXlEvAw7O/++hZFnHSeWzLeGIJ3C+mVf+ZYhLneEtuzAaWgpK1lrpl
5Sgh6XQz4HJGGXAZdjH7O4aJ7qJDF6Zby4EhfHPOQGaISBBZ53SJUgG8DTuN
BJ8NEkc9uq0nVT5C20ijnKb+ALGqKu2gl0MlTG6muIot9xG1mzz1J+5WAeMD
3VL9Wy9xw09T48L7ahCrj3Zp/dBDoCY2OXK4BmzFAucmb3UTeaH3RJgGdeB9
XEDGeKKD8Oyw4TnvVQ8fakUqUg+0E7JqW5dHEhugR2D/iFlpG/H5os30VOBn
8AlxLCvs/0ooPCn2yF3TBNwff2mf+6eFuP1py8jFjCYw8Jax2GHSTOyVHP3x
q/ULnNHeojE+/Jl4Zn7IOtujGQxzRtq1HjQS7FdzvnhSWiCw3qGH07WeKPoa
UDWu8hVcJNjunzWtIZTDebNZd1vBRVDTeVVVGRGVe0H2lWQbDCsNZ05TSglm
d3Oq2/s2mJ6PODLwpIh4rvkoYWz4O2TZyQl1cuURYqNyYSMGnUC/UzdbafKU
CFh7bym9vRM8EzN/m39OIFr1Z/zOev2AkE1RoReuRxH3Hxa7DyV2AdsH7oqD
3FchTDrtxWRgD0Q8UeqVX/MfLLRq/DvR2gceTpljm8RKIV+F7pC2sx80taev
C5wsA5+7bTInr/SDJOcH7q6H5TCp71/6SWIAJMSo91/yfoTRV4Vjz50HocXB
m+sMUQOd13X17aaGIJ9xZ9PJvU2Q0MXPL2w0DPq7DCn5dU1grdXVWhs7DLGH
PboLLL7AVzLIXXP3CLC7GvB9sWqGBptSxppro+DPq6dDt/wKpYoG4zUCLOi+
Ujv1Z913CIpcUxjiwIJZneQlv9vfQWewP0wjhwXcTxbMmYvfoSAhbEOqJQk9
R43sy7vbIYdSaRTyaBykb3j7X43rhC/ukoc2ivyC+t16712+d8MHg7RnTSlT
4KNUW361vQ+UojJH5qqnIEnPNXaRox8S294pSIxPgfjD145Ssv3g516df057
GlJ6jEc8AvpBIW6kjrNlGu4s3rSdEx6AhFHZmV2UWYhWDuKU2z0I9F1qu0/I
zsK3Mc4j9naDcDlYJzjUYha8eqUm9UIGwVz4IHfj41loqfpUtvbjIFD2eIif
VZ+DBmG7Pm7Tn+B5L8so4cw82BmFZDjsH4KujvzI0rvz8JubmpfrMgSm0mWN
P3PnIcVs476isCGQft9ko8q2AMLMardxYgg6Bibd6xgLoNJk3TCkMgx7NXfF
LtX8Bv/aQUkP3hF4E6rbITnxG3rMD3eC1AhsqTfabLr2D+4rpbhuzwj8PXUs
I87xDzil2Fqt9xqB7Nu+JUp//kA7Y51x+JcREOsu+Okotwh6AV+s2G6NAtuU
F6PGYhGqrxVz6CWOwgBVxkTJdxF8Blu26ueOwiuFhFeLZYsgl2399VbnKOwJ
CvBmWC3BsfYH86ZyY2Avrs3RELoMbqio7HvpGBgqT+WqpS9Dw2YbeZcvY7DD
6IXzw/plSPxHO7Swfwz88u46qfGxoUd3NQSLKExAXYtV7FZsSOHx+waZfUxo
ku+KesRkQ8K1UQojBBMqNAqHzJbx+l5uI6EGJuTpxSJOIXZEKvb00DqZkGB5
aNJVgx3JfPCotJljguPVEkuNUHb0KjlaMEmWBUfDE16PxrCjYu2bG3ZpsmDv
PR9aYho7ylGS72UYskAmVaGAq54deeld+1t1ggWTdYliX9ZxoM42wwddkSwY
+BZw+YYMB8quLNrL+pcF33qONWjqciBbF42JuiQWFE4LhDxx5EAHjnJpsuWx
4LpYcL/bKw7UxtkmvKeLBcJu9hk0A060z+SPkLo0CTK0p5XmVpxIx1wvc7Mi
CSjlZ1/8eU5UG939qk2DBLc2941yMZzIeZv5jpz9JFQYBt4xH+REk5+YdsJn
SWjvJtLjFzhRw+sy20sXSJgI4PzYx8+FHh+Ssk/xIUEsO3LRW50LnS4mP3mF
keAtHu8RH86Fbn5cY9D9mITI/M7IvodcKKWr43bVUxKSjmxOk83iQu9Mgi6E
/kdC3a207uI2LvTS+oap1xsS+iTH/lBZXKgxzXgwtYCEeUJB1Jydgrok0k68
LiFBcvated9OCtoh/XabTjUJu+8tuMnuoaC7fO5C5XUkmMvp3vI+TEHHDtSJ
iTeREOhYUUa9QkEZaw8SR76TcH+R1mX2DwXtmhKZVvxBQjrD9DfjKQXdtGu5
2tdDQnPDFxXZOgqqPqxW+WmIhGHXtWbePRSkr7J2E+cYCUtctueLpyno2oA7
uxBJgnDS43AqNxXtaIgvmJ/A89bufWomTkWFgRkP3k3heX+TLGUoU1Glv2PH
oVkSjnmd7ew1oiL/TeqdJfMkhKaNC3t7UJHUkP8umUUSGPqqysWhVKRlb7JN
epmE1z98DlLjqOhr9+z0H7ZxqPArdDV7QUW1weemX3CMQ/uapRsMgoqu6Omd
V+cah4nXeim9zVT05VdVykPKOFBNbpTIDFNRKf1vfwd1HMQGq9sv/aUiudu3
fedo46ASwjdXJEhDh8mWVJI+Dvs3mq+hStFQ0t+feWXc43Ay74GimRYN0YtC
Jj15xsHbotWUcZCG8i1XJ/3FjmRuONt7ioaOLr+jOvOOQ1L4yTAZHxqKGjRw
z8DO25qSdCmShhRE1TbUY9cVDxYVJdJQtO+7Iyvus975nZJLQ4FPX9q/wJ6f
cps5VEVDZ8eSr5/BFvgnazWjg4Y2o69cHNiSMtPyveM01CKttuMKzr/7o4aJ
DBcdnXt1XKUZ12vucMXlkigdnXRgnOHBdvlTElokR0fv9X7ybsH9BcZyPKHo
0dHLsgnHdbj/+8p73x+ypCOZfKEsFp6XYofNPt2zdPTUd/BJIZ5nXZh7s+wV
OrLbmafpxjkOrgrX7DdE0dGbvNpMDjx/alvMGD2ZjgTvye8Owufz9Fq671wu
HQnkvOLrXsLnL1vE+bOSjkwedR2Xwud7Jah/4wcmHflF+eqdXiBBdMdcWvYy
HS3Z/oDjcyTkNfGoJQlxo+6Q8UitGXzfJFUOXNXkRiNNN1v+w++X06eQQI0w
brSl6Fu8zU8S2C/H0KXjuFFQet9YeD8JiRLpMcIZ3MgvplU6Eb/PbV6NL381
ciPDH/vEr7eTcFBU4seLjTxo1GzojFo9CaNlyq4JCjyIoyLoZFoNCRHnjWYi
9HgQHX9RcVaSUF7ixu9yhgcZvibi/PH9U3d+r7s5lwf94N12zvY1vi8CjTUC
lTxIvdk7SiyDBM/8PsvFNh40K8f/pCaVhAxeHo/2JR50jfFbe/ARCZtyrBNj
THgRvdHfenskCfTlmSV6Hy/KvlOb99uBhNR07ttz07yohM/JKvg4CfqHxdf9
pPGhnW/EXv7C/9uBqYaKH+T5kPMR4w1JJng+pg/sr/rzoYSlxrgdqiR8ZyiV
/hLkRwGPl4y52UlIaH6xykeKH+0P0s8kF1hgK7Dd/rcWP3IyyrhRNsnC3yPi
Sxyn+dFNx3cHlAZY0OPBoyP8lh+9KSpI0ahkwbDhwDt1GwH07ekpJ5FwFsxP
xGVeSV6F1Od2Th5bZEKB7Jrl5berkODMUWGjaSYEuEQdCqtdhSK1t1hIjzHh
b0cY687UKlTRWFJU3saEkP58kcatgujy3v73Z3KZENaQeqTHWxAdVpH1D3Nh
wu1nwY0c61ejzHe5B/k+joGJmquQyLbVqIu5t6e1cAzoFYctt8uvRhXse90e
Zo1BWL9Uh6neajSy2XaM59EYBG6t+xnjuhq1i9h9jbo4Bh5JokvShavRzeSF
TYYSY2DxKFvO9LgQEvxtWr/daxTWxfTfevB4DZKbecO9n2cEwo8a7/kyK4Iu
8vPfuGH3Ey5pJdvXhIqi4fWb8t7c6QfD8d8BHv0bUJkk7flzsV64pmNxaoOm
OGqjPaepDf6A3a/j3wQRm1CtY2fGicLv4Db/K6SafwtKllZLFbf4Bguygl3y
llvRuqXgJJpoM+i8eJkUG7sN/XWp8rxn+xl+CZk4HCuXRIG9/d8DUR0M3HE4
dpEmjYJOCu6spFWD8biv8aD6djRp7rVPNKYCmKfpl94E70BJtPgD943LYK/k
Oo7w8p0oaXXn9Z29RSBULx2VNS6Dzs4rdupJ5YNYRKa5uroc8rML17p4JxcY
slqCa87II8ZV6bbr9plQu0Fv19Q9BXw/KUJSQemwW6w8WvGbIhrelBOUl5MM
Apwp3qdClVDprHwRoyEOJK5t0rGRVkalA4To1+gI4JY6kXe4ShmxfaKbJaue
BAXd9Zm+diqoVOf8rUqrQOJil9AHEzZVlKT/5LSFRDRRXXmiOINDFZVmqPNU
7okmJDKfv+OhqKIer1YtZftoojZ498tablWEeN5WM59EE1u3OP5rsgbHL/AJ
Lmy+RzSdzj5jIq2KHAZK0ly33CeURsz4TA7g9RIvTxRvjCFuNsVTMw7h/f0b
U9ZrxxCdBf1sPBaqSElKwM3dNoaIiPSdqbFURdFGUTv+MGKIHtknXcb2qmhC
mIOeJfIvEe1BZhlfVEWCJ9aMhfPHEj+Pab74zxs/P8wbbCcXS+hAaCq3L+7H
90iDjGksMbxqbULNFVW02dfz9cuIWAJl6143voHrGV3fZ8oZR4xP3bE0ZuD9
/n69xDEXR3S2JR97nICf96xYVyTMIGqL86x+PVJFbLYFXB4qDOJZeI9NfDKO
/3umstCdQdx3m7FlPcX18e4St7zNIIIteE7oPcf9XW97OJTOIGw3qp0cyVBF
WeXe6TP9DGI/m7G97itVZN5K0fZijyd2Ddo53MvE+bOvKw5KxBNbay+eGszG
85PaftVcJ54QzAx31HqD86HDlOoD8cTig0en7+bhfEuVqise9ct26s3H/RRr
O674o36Hy61ifB5aUsSKc7ZPnPlB4PnMx7NWnMRHcVUuV0WeeQJiNdgB3xTO
f6/E+VXn/VasdC70ws7PuD65Tyq12A/v7fSr6cP9SHg9/4Qd4bPHX3wQr/8x
2LJin+NHAryGcL0PbTnrsM2lrgauZ+J5iRo6rJha8DnEdQbnX71uQz22V4/v
LW66GkriLL7bgL1PsTLBWF4NRQ/TLzdhW1P3H/2sqIay3nulrfjcjxp+KxU1
1BPV/n3FUbfrQ5w01BDa9XLPF+xvQy0uwXo4fs2M3oztlNSv8tYSxzfGPmzB
Dl3N/mlzkBqaOLitvBW7ZEr7z1yDGnLI1V3Vhe0hp9Le5LwL9fxj1TSCrUs6
tdhwq6Ospz7Rs9hGkqIH+VPUkWBNgC/HwXhiR0ikX7mGBsriq9gqgC3jrEVI
tWug6HChTxuwnUvOhr3x0kSbhfc+lMYmklqcfolooZ7WoLOq2NPpy3OK77AL
/i4A9mmpF9wJB3ejkFf2uabYv2QeqOdM7EaebVWu1tj5z/70zkRoIzYRkf1O
2LaG25C2hA4qvZA2egF7o3t4gUIpNjtEBmKL8LhlH7TSRZ6p7y0isJ8ZXA2Y
sNFFyOXozRWrXI0yeHBCFwluZxWu+NBE1te2U7qoNF1C8hb2zW8zC6fdcPzl
tdkVz6cE6wdcw/GcfQ9vY7drP2h+/gLHS5sHorDPXn72yPi1LuoJcVv/D/bs
67fOzCy8Xo9yaMVCW9vmlPN0kcMH9XcrNqWLixWX6qKsyvhb0dhFLc+dmr/i
eL29wn1sE4F8eZ82XaQUNe+44rZ9NbOiHTif2b24FU8XjkWc7MHPfy5ne4At
n6z0amQUx1ukmldc1K7nc4eF64kpocWs7Cd8BBQn8HpLK50Vu4RfbvKewfla
I1JXPF16M2HdPM7H2NK+4tDfcacLf+P9bAoF/sUWVPtPzm4R77f+iMGKE90L
Z5aX8X7tY74r/h+PSOiK
       "]]},
     Annotation[#, "Charting`Private`Tag$1143#1"]& ]}, {}, {}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{0, 0},
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  ImagePadding->All,
  Method->{
   "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
    AbsolutePointSize[6], "ScalingFunctions" -> None, 
    "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
        (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
         Part[#, 1]], 
        (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
         Part[#, 2]]}& ), "CopiedValueFunction" -> ({
        (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
         Part[#, 1]], 
        (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
         Part[#, 2]]}& )}},
  PlotRange->{{0, 30}, {-0.9189857838459952, 0.9701906809893774}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.05], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{{3.7541399964152412`*^9, 3.754140019098102*^9}, 
   3.7541466044779463`*^9, 3.7578047048121357`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Plot", "[", 
  RowBox[{
   RowBox[{
    RowBox[{"ImVc", "[", 
     FractionBox["r", "0.197"], "]"}], "+", 
    RowBox[{"ImVs", "[", 
     FractionBox["r", "0.197"], "]"}]}], ",", 
   RowBox[{"{", 
    RowBox[{"r", ",", "0", ",", "30"}], "}"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.754140027954275*^9, 3.754140032501*^9}, {
  3.7541466155326023`*^9, 3.7541466254445457`*^9}}],

Cell[BoxData[
 GraphicsBox[{{{}, {}, 
    TagBox[
     {RGBColor[0.368417, 0.506779, 0.709798], AbsoluteThickness[1.6], Opacity[
      1.], LineBox[CompressedData["
1:eJxF1Gk0FAwXB/CJMDPC2MdahBIJIxG6F6UsicqabEWbbPXYkmSJhIc2EorH
liVbZSuJCCFR9i0kJGPJVuH1fsmHe/7n9+2ee/7nitm7HHVgIBAI02vz/5zv
q3srcStln8a9Lp/FsbvlnxKp3podAWBsXswUzEzfh7wf7Kkdt0HE6DCjH5kM
fN2cJMr+eOBwt3ATixcED6PMdsaOZDj2iurHzyMFdoXvM1cj0kGZOSznmKk8
GPD9uPpbOxukNie4zF9Vhnj1kIzfvnmwv5LRhNlTAzgn+W8vtRdA1PLiaZUE
LbjxKOPKguJzQI7x7+lfdOCPkarDXEQRiBofyFQL0Qd3hnrD2dESUKt8v+Wm
jhGMFlqqTGu/hHtEpxrXpaNg7fBdjJ5YDpLC1ryuPSZwnrU8eN63An7SHSY7
6ebQ/9LQ5Wd7JdyMs/k2lWMDcbz8py8xvYU2AyEviRw7OO7cbz6jWA0P8l1f
CiWcgvrNrlpTEe8g/8rSkZyGMxDspbLHpawWngU6hoawnQf8SJCdHK2DKqbw
05nnneBFQDTvhHYDiJbb65wsdwXXbgvyBbdGeLqV7hQn4A4ySuKrY4lNcPN0
KzU06BI0u1v8nPVthjtiJZbbbnmAjsR473R7C2hSPQrNz1+FFCND83znVthF
+3fkt9E12HC1oMWV6RNEWCm8v57qDy8/+7yjK36GmB8u4zGvAkCAoV8zt+4z
HO53FdnWGQgectovnW3bIM7mmIb9ahAohLDm/4hohxe5+eKdTiEQWegikyPR
AWdaR7LvPAuFif7WVKeyDgj1EI9YYAmDNJX4uO+jnSBTILhc3BIOwuOyQWPa
PZAY7nDivX80+PBFr2R09cCghN7Vw2a3oV1rzuusWy/42LH/m6J0B24/fHXx
W2IfsIj1MhhsvAdBUulZM74DMFkecK3hVywUqHeePVo7AIeWj9Rqs8bBl6Os
UgXcX8DfPdPFb+tD2HfN5bFb5hcYvnQoIvdCAiy177k31T4IM7KJlvzySVCs
SLRNlx6Cl5EWvyO/JYFHRMcO6ytDMBKWu2lLSjLMaHlXvBcdBi8ZX4Fm2RQY
zyn9nubwFUpv/Rcv7pcOGcRbL04WfYWPsRWe4rYZ4HjqxHUe0gjEn7ajFR18
AkPUP3wB2SPArAGS7duyoCdQQ+vk7DfQSctud9iZC3F9bGw8B0ZBv3Xf6BvR
PDBX7Wuvvz8KugdNZNqf5MHnSb+LKnvHoCouM423Lh+aLCpiua+Pw7/RjnQn
2WdQsUubXsf+AzY0SiYmhZWAXxh3qb/tDxg9pC41sb8U1L8OBe0p+AHipX8o
vgxlUBIXJJhqMgnhw2aMXiEvoYCp5oB/PB1ano0M7yh5DS0XJQyFeKchNiNr
IMW6ChQehhfOa0wDz5fHtVfbqiCq9ie1xXEaHPuDNxCN3oLh1uqh0OJpyFZL
M1c4VA31HQ7e8ydmgPvOC7Eug3dQpZ2e8jF5FnpcNd2s0t+DfGTu2ELtLHBP
O0d7yzdAYkeRnCh9Fmq+S19lLWsAr4u1xefVfkJCneFc2KdGkIsZa2D89BMq
tWW03DY1Q9y4zNxupnkQLUQ4eKkFXKPzDsSdWYQNq64aM9Xt0NddHFYRsQjK
WTfaGrd0gL7Umw8jhYsgVj3jYejbAVJlHy1ohCXI5bg4t3d3J3QPz1xsiF2C
3tEuhdSnXaCjsvv+St0vKKp0LOwo7wXh/pIRe9llyLIPoj+SGgTCrFtsnfEy
tEYWRaHVIAwz79CT91wG5bonO8VuD0KOXFzO8ptl0Gk49yhhZRD2+flcjjVb
gb2UQX2rriGwEVFjaApYhQHSw/6z8Wu92dkXGT9BQH9C4FUPnTHgcbLJZNFm
xK2b04L/uTEFtxV0ygxNiOh/NUSA12gJdnVbHNQ4S8Rf47ZtLq5L0BB0sVXm
ChFdaCwab6KWgLnj7ndiEhEV00mSBz8uwRW/IaGqCSJuOTl6sNP4F5x+7++7
J4iEWxYVV4aNfoOyQ5nGlkIyDj9UkNl9YBk6Y+UrpilsSH8Tz5LgR8C41iwO
D0k2lI7g7uONJKAl+zabX6psGGPrwBKYQMCeQJEVhlNs6Kj8lGPvSwIOOJPV
eZ6zIQcplyawRMDR/cNFyhbsOFJjxxPhugEXp2JyryRxYEgpL2nRhAFLZLhX
V59zYFmXDgycYkAfx0jDoHoOvJJN1CxzY8A/3UE/wmc5kG7Hc1M3ggH9h4p5
P4hTMEgz0bGmigGDmlKPDVym4GSMBbO6HCPeSrn2gUGAExd++64sLjKintI5
Lt6tnBi/OpG9sHEjEt8eNdm2kxMpVrbSY5SNGDQk2a2vyYlqpu23UrZvRF/x
hpG75ziRWrZ5xddsIzo/pq5IlXJiJkfD2ecFG9E4Pl9W/wQXCql5Nx2zYUKK
7EOXkw5c2HYh/mjuOSZsKgsqcHHhwtQLx38uX2JCvW4zlbuBXKhmVpRyOZQJ
tQRXtHuzuLBnRs6wNo8JlWL1Trj84ULbjpo2tlUm5L87dPNOAjcyUKX/xdvM
SJV5HrSYxo3pE5wFl+OYUbDyxrWTedyo/Oa2U2IyM4pOSf+zrYobf/96U9VS
wIySBq62ZaPc2PtHqPx1CzPSNi4rD9F40JZx4dRTCgseucw3rFjPg6/nDft4
glnQiHW0L6aVB8+rq/YRw1nwaHJJ55+eNXfbO8/eZkHTZqsPNXQetAhBu+zH
LHhS9r9SS15ejHTKvva0jAUvDO+KDrDlxaXfhOx5OguGHNfd1zLPi9mkdMsB
YyIKPmsSZNjAh9+8o7Np5kR8yn18QYGVD59KO8tctSZiW4t1XvRmPtyo3tU/
c56IEsaXxY0P8eGdd/9cOh9IxMrDj5ibH/Chfb/xx7sFRFzWmWtqVOfH8cwF
ZRkyCaPSfLKWdfjRq3NT+AkOEkowE0J3GvNj+IhudCAPCQ2qyZoRDvx4+HBy
T6koCeO0txQaRPKj0Tu+uneKJFRB/Zj3/fw4GNxy3cGChJdUk2zqAqiYcf28
CmMSCfUes//UD6cit+/9pcUUEoqz+IY23aPijLZvyWgGCZs/mea3ZlCR2Tpt
7nkeCeVcNzH2NVFxOIWrn1xBwtE0z7QZQQF0pg57pPWS0IrH8IdQoQDaeU8+
6OchI+1K2fXElwIoS5Xw304lI3lwO59YjQAOZHLHOAmRsSSXEaQ6BVCoiNN7
RIyMfPolUfKrAqj3RJmUJEfG5usSSgf0BZEk0yuofpCM++m/fJyHBDGwpXG/
1j9k9D50d8ebCUEsHIaFGU8yPk3a2cU9L4hV2kTmxz5kpB63VS0hCqF/Qvxx
+jUyThRXLzDKCWHHJZtW+zAy3gmIuvzAa83Bw5MpiWQc5JVyfssmjIZhPE7V
b8nI7/JahJ9fGFOFD1LZ35HRoNa88dwWYbT8FDtwrI6ML3xuyXLQhNFRRU6k
vZGMYf1T4xbmwrhdc3DiZRsZFZ+UnaEnCyP7cq8XeZSM19WN7QRVRNBqz9y3
ViIrHrJOnNmjJYIFTWmHF8msyO7/PdDEQAQbHs4rCbKxYnxVcFqUrQgObc1P
NuVkxWK90u/MN0VwwfFHboEAK06Zb/WY7RTB7J1R1GVpVrT+Zy6s4YoohtN1
JJl0WXHv0wfP/F5vxm3V9wmUAFZ0Wpz2r2UTw+q261qUL6y4JEPp22kijhuO
Cbffwk2onpX9+P79rViSI+PZEL8Jp7n0bE0rJdDqNW2T++wmHA63NXVnkcK3
LIRUrqNsqEv31P2qvA1PTJRrSmey4cQp4qVn17Zjg2Cr6m4iO+pI8DOEVEqj
aYWcuIQ9O3I1SkXm0XdgTasPp0EhOwqH5hopK8tiKr3Rf5aFA2NlVCncZ3bi
2yNNvyqPcWC9oObu2Wg5fHIi84LwQw7cK1wZtattFxKV3vWbfeVAdsbky3YB
8siiHaY1zk1B0eub1S2kFLA6i902TJmCJEmrF0ffKWCSIDxUNaOgnIZArudJ
Rcw1/LA7ee2vuvdxVekRaPh40mTc+Q4Fa2usXmUy0FBBjZDfv2bR3LQiMhMN
m4lP7IzuUrD+2t7sehINdZzu+yvco6C4mP09PW4aZipIb5m9T8GPp/LP6EnR
sDWkI909joLyY0c26RnQ8OOjXx32SRS88fEBc6YhDV+k2vY0r7mnZIhANqah
4pfG+X3JFAwN85yrM6FhqH3grOB/FByQedSna0PD7zbn1FpSKBjlPJmn605D
t4M3ptQzKDhiqpL15DINK14d//BkzeoQkErypOGc8t5SvicUHOXgi6u7QkN9
kb6jU2vGfI1A3WAaChbHmCZnUZA+G26iG0vD/Z8y5wi5a/t0JJkmxNHQWKFB
6cKa61+9MJuOp6FQ9dmoz2tOCRmweJBEwyA+g5j0PAredpqz/PEfDSXng99R
8il4zZhspZlGw0fvzy54r9lSSMl6LJOGp0sdyPoFFDxE0LXRyKGh56aVpsI1
7/560jY6l4aLljwKIoVr96x3t/uaT0NvwuOAI2um5IbYqz5b97hX/ukvxeuu
1up2vPlq3fLnA1ykm9f9MFraq25w3W4DnjdJRKW/PrirJk5357oDODe83+K3
7vJZtd8LTet2llXs+uiw+681Jk9/siAp//UBCephtuR1b/cP86rcs+evdzio
vpbsWrdD+dmgZ24qf/368afT07yqf/0zY3VhV9G6T0lmkeIO7/3r6R13lAum
1l2c8vvLXKjaX1vu34pqoup/LXQxpESuYt28ZKf8w2Yaf92ldqc1LWvdiRdL
51ZX1/0/gHKwbg==
       "]]},
     Annotation[#, "Charting`Private`Tag$1253#1"]& ]}, {}, {}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{0, 0},
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  ImagePadding->All,
  ImageSize->{374.7578125, Automatic},
  Method->{
   "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
    AbsolutePointSize[6], "ScalingFunctions" -> None, 
    "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
        (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
         Part[#, 1]], 
        (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
         Part[#, 2]]}& ), "CopiedValueFunction" -> ({
        (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
         Part[#, 1]], 
        (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
         Part[#, 2]]}& )}},
  PlotRange->{{0, 30}, {-3.1164210665743015`*^-7, 4.175107995048273}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.05], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{
  3.75414003307718*^9, {3.754146607120152*^9, 3.7541466257101517`*^9}, 
   3.7578047068111134`*^9}]
}, Open  ]],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"ParallelSow", "[", "expr_", "]"}], ":=", 
   RowBox[{"Sow", "[", "expr", "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"SetSharedFunction", "[", "ParallelSow", "]"}], ";"}]}], "Input"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"\[Delta]", "=", 
    FractionBox["1", "100"]}], ";"}], " "}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"d\[Omega]", "=", "0.0002"}], ";"}]}], "Input",
 CellChangeTimes->{{3.74228955582731*^9, 3.742289558498271*^9}, {
  3.742298662461986*^9, 3.742298684870023*^9}, {3.742298729927827*^9, 
  3.7422987328788557`*^9}, {3.742299426624055*^9, 3.742299459795083*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"pT", "=", "0"}], ";"}]], "Input",
 CellChangeTimes->{{3.7582101475547533`*^9, 3.758210151228115*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"swaveccspectra", "[", "ang_", "]"}], ":=", 
   RowBox[{"Block", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{"\[Alpha]", "=", 
        RowBox[{"\[Alpha]cont", "[", 
         RowBox[{"[", "1", "]"}], "]"}]}], ",", 
       RowBox[{"c", "=", 
        RowBox[{"ccont", "[", 
         RowBox[{"[", "1", "]"}], "]"}]}], ",", 
       RowBox[{"M", "=", "Mc"}], ",", 
       RowBox[{"l", "=", "0"}], ",", 
       RowBox[{"\[Omega]min", "=", 
        RowBox[{"-", "1"}]}], ",", 
       RowBox[{"\[Omega]max", "=", "2"}], ",", "ccss", ",", "inf", ",", 
       "\[Rho]table", ",", "\[Omega]", ",", "rhow", ",", "gr0", ",", "s1", 
       ",", "V"}], "}"}], ",", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{
       RowBox[{"V", "[", "r_", "]"}], ":=", 
       RowBox[{
        RowBox[{"ReVs", "[", "r", "]"}], "+", 
        RowBox[{"ReVc", "[", "r", "]"}], "+", 
        RowBox[{"\[ImaginaryI]", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{"ImVs", "[", "r", "]"}], "+", 
           RowBox[{"ImVc", "[", "r", "]"}]}], ")"}]}]}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"\[Rho]table", "=", 
       RowBox[{
        RowBox[{
         RowBox[{
          RowBox[{"ParallelDo", "[", 
           RowBox[{
            RowBox[{
             RowBox[{"\[Omega]", "=", 
              RowBox[{"\[Omega]min", "+", 
               RowBox[{
                RowBox[{"(", 
                 RowBox[{"it", "-", "1"}], ")"}], " ", "d\[Omega]", " ", 
                "M"}]}]}], ";", 
             RowBox[{"inf", "=", 
              RowBox[{"40", "+", 
               RowBox[{"500", "*", "it", "*", "d\[Omega]"}]}]}], ";", 
             "\[IndentingNewLine]", 
             RowBox[{"s01", "=", 
              RowBox[{"NDSolve", "[", 
               RowBox[{
                RowBox[{"{", 
                 RowBox[{
                  RowBox[{
                   RowBox[{
                    RowBox[{
                    RowBox[{"(", 
                    RowBox[{"\[Omega]", "-", 
                    FractionBox[
                    RowBox[{"l", 
                    RowBox[{"(", 
                    RowBox[{"l", "+", "1"}], ")"}]}], 
                    RowBox[{"M", " ", 
                    SuperscriptBox["r", "2"]}]], "-", 
                    RowBox[{"Re", "[", 
                    RowBox[{"V", "[", "r", "]"}], "]"}], "+", 
                    RowBox[{"\[ImaginaryI]", " ", 
                    RowBox[{"Abs", "[", 
                    RowBox[{"Im", "[", 
                    RowBox[{"V", "[", "r", "]"}], "]"}], "]"}]}]}], ")"}], 
                    RowBox[{"gr", "[", "r", "]"}]}], "+", 
                    RowBox[{
                    FractionBox["1", "M"], 
                    RowBox[{
                    RowBox[{"gr", "''"}], "[", "r", "]"}]}]}], "\[Equal]", 
                   "0"}], ",", " ", "\[IndentingNewLine]", 
                  RowBox[{
                   RowBox[{
                    RowBox[{"gr", "'"}], "[", "\[Delta]", "]"}], "\[Equal]", 
                   RowBox[{
                    RowBox[{"(", 
                    RowBox[{"\[Alpha]", " ", "M"}], ")"}], "-", 
                    RowBox[{"\[Delta]", 
                    SuperscriptBox[
                    RowBox[{"(", 
                    RowBox[{"M", " ", "\[Alpha]"}], ")"}], "2"]}]}]}], ",", 
                  "\[IndentingNewLine]", " ", 
                  RowBox[{
                   RowBox[{"gr", "[", "\[Delta]", "]"}], "\[Equal]", 
                   RowBox[{
                    RowBox[{"\[Delta]", 
                    RowBox[{"(", 
                    RowBox[{"\[Alpha]", " ", "M"}], ")"}]}], "-", " ", 
                    RowBox[{
                    FractionBox["1", "2"], 
                    SuperscriptBox["\[Delta]", "2"], 
                    SuperscriptBox[
                    RowBox[{"(", 
                    RowBox[{"\[Alpha]", " ", "M"}], ")"}], "2"]}]}]}]}], 
                 "}"}], ",", "gr", ",", 
                RowBox[{"{", 
                 RowBox[{"r", ",", "\[Delta]", ",", "inf"}], "}"}]}], "]"}]}],
              ";", "\[IndentingNewLine]", 
             RowBox[{
              RowBox[{"gr0", "[", "r_", "]"}], "=", 
              SubscriptBox[
               RowBox[{"(", 
                RowBox[{
                 RowBox[{"gr", "[", "r", "]"}], "/.", "s01"}], ")"}], 
               RowBox[{
               "\[LeftDoubleBracket]", "1", "\[RightDoubleBracket]"}]]}], ";",
              "\[IndentingNewLine]", 
             RowBox[{"s1", "=", 
              RowBox[{"NDSolve", "[", 
               RowBox[{
                RowBox[{"{", 
                 RowBox[{
                  RowBox[{
                   RowBox[{
                    RowBox[{"rho", "'"}], "[", "x", "]"}], "\[Equal]", 
                   RowBox[{
                    RowBox[{"-", 
                    FractionBox[
                    RowBox[{" ", 
                    RowBox[{"6", " ", "Nc", " ", 
                    SuperscriptBox["M", "2"], " ", "\[Alpha]"}]}], 
                    RowBox[{"4", "\[Pi]"}]]}], 
                    RowBox[{"Im", "[", 
                    FractionBox["1", 
                    SuperscriptBox[
                    RowBox[{"(", 
                    RowBox[{"gr0", "[", "x", "]"}], ")"}], "2"]], 
                    RowBox[{"(*", 
                    RowBox[{"+", 
                    FractionBox["36", 
                    SuperscriptBox[
                    RowBox[{"(", 
                    RowBox[{"gr1", "[", "x", "]"}], ")"}], "2"]]}], "*)"}], 
                    "]"}]}]}], ",", 
                  RowBox[{
                   RowBox[{"rho", "[", "\[Delta]", "]"}], "\[Equal]", "0"}]}],
                  "}"}], ",", "rho", ",", 
                RowBox[{"{", 
                 RowBox[{"x", ",", "\[Delta]", ",", "inf"}], "}"}]}], "]"}]}],
              ";", "\[IndentingNewLine]", 
             RowBox[{
              RowBox[{"rhow", "[", "r_", "]"}], "=", 
              SubscriptBox[
               RowBox[{"(", 
                RowBox[{
                 RowBox[{"rho", "[", "r", "]"}], "/.", "s1"}], ")"}], 
               RowBox[{
               "\[LeftDoubleBracket]", "1", "\[RightDoubleBracket]"}]]}], ";",
              "\[IndentingNewLine]", 
             RowBox[{"ParallelSow", "[", 
              RowBox[{"{", 
               RowBox[{
                RowBox[{"\[Omega]", "+", 
                 RowBox[{"2", "M"}]}], ",", 
                RowBox[{"rhow", "[", "inf", "]"}]}], "}"}], "]"}]}], ",", 
            RowBox[{"{", 
             RowBox[{"it", ",", "1", ",", 
              FractionBox[
               RowBox[{"\[Omega]max", "-", "\[Omega]min"}], 
               RowBox[{"d\[Omega]", " ", "M"}]]}], "}"}]}], "]"}], "//", 
          "Reap"}], "//", "Last"}], "//", "First"}]}], ";", 
      "\[IndentingNewLine]", "\[IndentingNewLine]", 
      RowBox[{"ccss", "=", 
       RowBox[{"ParallelTable", "[", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{
           RowBox[{"\[Rho]table", "[", 
            RowBox[{"[", 
             RowBox[{"i", ",", "1"}], "]"}], "]"}], ",", 
           FractionBox[
            RowBox[{"-", 
             RowBox[{"\[Rho]table", "[", 
              RowBox[{"[", 
               RowBox[{"i", ",", "2"}], "]"}], "]"}]}], 
            SuperscriptBox[
             RowBox[{"\[Rho]table", "[", 
              RowBox[{"[", 
               RowBox[{"i", ",", "1"}], "]"}], "]"}], "2"]]}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"i", ",", "1", ",", 
           RowBox[{"Length", "[", "\[Rho]table", "]"}]}], "}"}]}], "]"}]}], 
      ";", "\[IndentingNewLine]", 
      RowBox[{"Export", "[", 
       RowBox[{
        RowBox[{"\"\<cc/par/pT\>\"", "<>", 
         RowBox[{"ToString", "[", "pT", "]"}], "<>", "\"\</swccpT\>\"", "<>", 
         
         RowBox[{"ToString", "[", "pT", "]"}], "<>", 
         "\"\<spectraJpsi.dat\>\""}], ",", 
        RowBox[{"Sort", "[", "ccss", "]"}]}], "]"}], ";"}]}], 
    "\[IndentingNewLine]", "]"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.724397604460712*^9, 3.724397621092863*^9}, {
   3.724398705481254*^9, 3.724398705798315*^9}, {3.72440624506767*^9, 
   3.7244062457361317`*^9}, {3.7244423136168756`*^9, 3.724442340980721*^9}, {
   3.7244423712224417`*^9, 3.724442377050403*^9}, {3.724442465925974*^9, 
   3.724442518695669*^9}, {3.7244426255599117`*^9, 3.724442639076613*^9}, {
   3.724443729204352*^9, 3.724443729749022*^9}, {3.724443881656342*^9, 
   3.7244438842850027`*^9}, 3.725261621115453*^9, 3.72526166634648*^9, {
   3.725271550289123*^9, 3.7252715504130163`*^9}, {3.725271609402791*^9, 
   3.7252716095188437`*^9}, {3.7252717762497*^9, 3.725271782362536*^9}, {
   3.725271824500347*^9, 3.725271826035269*^9}, {3.725271857701564*^9, 
   3.725271858192912*^9}, {3.725271928114049*^9, 3.7252719496618757`*^9}, {
   3.725271981807578*^9, 3.725271987122878*^9}, {3.725273718896678*^9, 
   3.72527377251343*^9}, {3.725273963159111*^9, 3.725273966198284*^9}, {
   3.725364382855975*^9, 3.725364384697238*^9}, {3.725364432753635*^9, 
   3.725364433681274*^9}, {3.725364595553596*^9, 3.725364595868292*^9}, {
   3.725364661141473*^9, 3.725364661301785*^9}, {3.725365068510941*^9, 
   3.7253650691073112`*^9}, {3.7256202924505177`*^9, 
   3.7256202938854313`*^9}, {3.7256265502253428`*^9, 3.725626559021003*^9}, {
   3.725798091627001*^9, 3.725798108963685*^9}, {3.725798150844287*^9, 
   3.725798156038417*^9}, {3.726312422974263*^9, 3.726312439922279*^9}, {
   3.726313778060986*^9, 3.726313794010726*^9}, {3.726313854887352*^9, 
   3.726313855417986*^9}, {3.726377533478507*^9, 3.726377535012369*^9}, {
   3.726379310729051*^9, 3.726379315935656*^9}, {3.726379351066524*^9, 
   3.7263793563685627`*^9}, 3.7263814533362722`*^9, {3.726468979312665*^9, 
   3.726469044993416*^9}, {3.726564279540083*^9, 3.726564288774165*^9}, {
   3.726564330005303*^9, 3.726564342424973*^9}, {3.7265645007454853`*^9, 
   3.7265645054085903`*^9}, 3.726565145221386*^9, {3.726836923420138*^9, 
   3.726836925204391*^9}, {3.7268417497448387`*^9, 3.726841749854889*^9}, {
   3.727357927216405*^9, 3.7273579306359463`*^9}, 3.72735811608375*^9, {
   3.7273582875862513`*^9, 3.727358296888235*^9}, {3.727520051444908*^9, 
   3.7275200665503483`*^9}, {3.727539483513708*^9, 3.72753949210455*^9}, {
   3.7275398377710333`*^9, 3.727539869000495*^9}, {3.7275879806550293`*^9, 
   3.727587984698921*^9}, {3.727606150288821*^9, 3.727606150994812*^9}, {
   3.728932814314426*^9, 3.728932860160056*^9}, 3.7289333254815903`*^9, 
   3.7299208725344887`*^9, {3.730007040539275*^9, 3.7300070509717903`*^9}, {
   3.730007357183831*^9, 3.7300073662633142`*^9}, {3.7331192829046183`*^9, 
   3.733119300197537*^9}, {3.733120717385792*^9, 3.733120717697629*^9}, {
   3.7331222711038847`*^9, 3.733122272703622*^9}, {3.733211538849382*^9, 
   3.7332115515038567`*^9}, {3.7332289443370447`*^9, 
   3.7332289447842827`*^9}, {3.742215948846467*^9, 3.742215959437643*^9}, {
   3.742216025305929*^9, 3.742216093257207*^9}, {3.7422172078868933`*^9, 
   3.7422172275906973`*^9}, 3.74221727383118*^9, {3.742217585069265*^9, 
   3.742217591716959*^9}, {3.7422176229823923`*^9, 3.742217653035615*^9}, {
   3.742269341112874*^9, 3.742269371527761*^9}, 3.742275694936644*^9, {
   3.742289467062118*^9, 3.742289486771803*^9}, {3.742289520463562*^9, 
   3.7422896027136*^9}, {3.7422896364561243`*^9, 3.74228964347093*^9}, {
   3.742289678232355*^9, 3.742289708137301*^9}, {3.7422897506101*^9, 
   3.7422897587096577`*^9}, {3.7422920316457787`*^9, 3.742292034487727*^9}, 
   3.742292186682322*^9, {3.742292303240778*^9, 3.742292303483521*^9}, {
   3.742292362481593*^9, 3.742292372544711*^9}, {3.742292408813004*^9, 
   3.742292447857381*^9}, {3.7422968206130743`*^9, 3.742296843480155*^9}, {
   3.7422970160890417`*^9, 3.742297024417719*^9}, {3.742297074890059*^9, 
   3.74229711910509*^9}, {3.7422973083294992`*^9, 3.742297309298213*^9}, {
   3.742297354168077*^9, 3.742297359897736*^9}, {3.742297415918168*^9, 
   3.7422974232482452`*^9}, {3.742297467739311*^9, 3.742297612963316*^9}, {
   3.7422977860232887`*^9, 3.7422977903561068`*^9}, {3.74229798181938*^9, 
   3.742298023677857*^9}, {3.7422980561712513`*^9, 3.74229805925661*^9}, 
   3.742298106308654*^9, {3.742300221204397*^9, 3.742300269720365*^9}, {
   3.742300416216001*^9, 3.742300416917211*^9}, {3.742300536315893*^9, 
   3.742300546756034*^9}, {3.742300626604027*^9, 3.742300638323701*^9}, {
   3.7423006769018583`*^9, 3.7423007163572683`*^9}, {3.7435037431402884`*^9, 
   3.743503799356997*^9}, {3.7435038425347443`*^9, 3.743503908279688*^9}, {
   3.7435046316079397`*^9, 3.743504651390107*^9}, 3.745326235801956*^9, {
   3.745577559422867*^9, 3.745577586968154*^9}, {3.745580528080043*^9, 
   3.74558059234057*^9}, {3.745580690187639*^9, 3.745580708875317*^9}, {
   3.745642437900836*^9, 3.745642442612089*^9}, {3.745642493682754*^9, 
   3.7456425382868767`*^9}, {3.74627352599397*^9, 3.7462735295622587`*^9}, {
   3.7462736076039886`*^9, 3.7462736659082212`*^9}, {3.746273697621533*^9, 
   3.746273736166617*^9}, {3.7462741385800743`*^9, 3.746274142868767*^9}, {
   3.746274228830742*^9, 3.746274248310967*^9}, {3.7462743303367853`*^9, 
   3.7462743498486643`*^9}, {3.746274405954569*^9, 3.746274407722952*^9}, {
   3.74627803681008*^9, 3.746278037153131*^9}, {3.747887414650214*^9, 
   3.747887423938949*^9}, {3.7481674233164043`*^9, 3.7481674506752663`*^9}, {
   3.749554891486802*^9, 3.749554922961441*^9}, {3.749555089233777*^9, 
   3.749555119969118*^9}, {3.749563528737471*^9, 3.7495636549318132`*^9}, {
   3.749582048761517*^9, 3.749582052529887*^9}, 3.749646995985099*^9, 
   3.749655798300173*^9, 3.74970789643521*^9, {3.75414665053309*^9, 
   3.754146706624938*^9}, {3.757807031207905*^9, 3.757807040656314*^9}, {
   3.757807702967629*^9, 3.7578077038242903`*^9}, {3.7578078882965317`*^9, 
   3.757807902315524*^9}, {3.75780798833467*^9, 3.7578079890797157`*^9}, {
   3.757808051229706*^9, 3.757808087763713*^9}, {3.757810418692294*^9, 
   3.757810421517911*^9}, 3.757886527824544*^9, {3.7582101069685717`*^9, 
   3.758210139938016*^9}}],

Cell[BoxData[
 RowBox[{"swaveccspectra", "[", "0", "]"}]], "Input",
 CellChangeTimes->{{3.758210161218617*^9, 3.7582101678789587`*^9}}]
}, Closed]],

Cell[CellGroupData[{

Cell["pT =/= 0", "Subsection",
 CellChangeTimes->{{3.7578047134492683`*^9, 3.7578047416705647`*^9}, {
  3.75780499622071*^9, 3.7578049963390636`*^9}, {3.75780669430044*^9, 
  3.757806695337428*^9}, {3.757806984086646*^9, 3.757806985529924*^9}}],

Cell[CellGroupData[{

Cell["Funcs", "Subsubsection",
 CellChangeTimes->{{3.757807926662183*^9, 3.757807934194962*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"PotsIn", "[", "pT1_", "]"}], ":=", 
  RowBox[{"Block", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"pT", "=", "pT1"}], "}"}], ",", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"ReVs", "=", 
      RowBox[{"ConstantArray", "[", 
       RowBox[{"0", ",", "51"}], "]"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"ReVc", "=", 
      RowBox[{"ConstantArray", "[", 
       RowBox[{"0", ",", "51"}], "]"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"ImVc", "=", 
      RowBox[{"ConstantArray", "[", 
       RowBox[{"0", ",", "51"}], "]"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"ImVs", "=", 
      RowBox[{"ConstantArray", "[", 
       RowBox[{"0", ",", "51"}], "]"}]}], ";", "\n", 
     RowBox[{
      RowBox[{"Do", "[", 
       RowBox[{
        RowBox[{
         RowBox[{"Block", "[", 
          RowBox[{
           RowBox[{"{", "data", "}"}], ",", 
           RowBox[{
            RowBox[{"data", "=", 
             RowBox[{"ToExpression", "[", 
              RowBox[{"Import", "[", 
               RowBox[{"\"\<pots/par/pT\>\"", "<>", 
                RowBox[{"ToString", "[", "pT", "]"}], "<>", "\"\</ReVspT\>\"",
                 "<>", 
                RowBox[{"ToString", "[", "pT", "]"}], "<>", "\"\<ang\>\"", "<>", 
                RowBox[{"ToString", "[", "i", "]"}], "<>", 
                "\"\<Jpsi.dat\>\""}], "]"}], "]"}]}], ";", 
            RowBox[{"data", "=", 
             RowBox[{"Append", "[", 
              RowBox[{"data", ",", 
               RowBox[{"{", 
                RowBox[{"20000", ",", 
                 RowBox[{"data", "[", 
                  RowBox[{"[", 
                   RowBox[{
                    RowBox[{"-", "1"}], ",", "2"}], "]"}], "]"}]}], "}"}]}], 
              "]"}]}], ";", 
            RowBox[{
             RowBox[{"ReVs", "[", 
              RowBox[{"[", "i", "]"}], "]"}], "=", 
             RowBox[{"Interpolation", "[", 
              RowBox[{"data", ",", 
               RowBox[{"InterpolationOrder", "\[Rule]", "1"}]}], "]"}]}]}]}], 
          "]"}], ";"}], ",", 
        RowBox[{"{", 
         RowBox[{"i", ",", "1", ",", "51"}], "}"}]}], "]"}], "\n", 
      RowBox[{"Do", "[", 
       RowBox[{
        RowBox[{
         RowBox[{"Block", "[", 
          RowBox[{
           RowBox[{"{", "data", "}"}], ",", 
           RowBox[{
            RowBox[{"data", "=", 
             RowBox[{"ToExpression", "[", 
              RowBox[{"Import", "[", 
               RowBox[{"\"\<pots/par/pT\>\"", "<>", 
                RowBox[{"ToString", "[", "pT", "]"}], "<>", "\"\</ReVcpT\>\"",
                 "<>", 
                RowBox[{"ToString", "[", "pT", "]"}], "<>", "\"\<ang\>\"", "<>", 
                RowBox[{"ToString", "[", "i", "]"}], "<>", 
                "\"\<Jpsi.dat\>\""}], "]"}], "]"}]}], ";", 
            RowBox[{"data", "=", 
             RowBox[{"Append", "[", 
              RowBox[{"data", ",", 
               RowBox[{"{", 
                RowBox[{"20000", ",", 
                 RowBox[{"data", "[", 
                  RowBox[{"[", 
                   RowBox[{
                    RowBox[{"-", "1"}], ",", "2"}], "]"}], "]"}]}], "}"}]}], 
              "]"}]}], ";", 
            RowBox[{
             RowBox[{"ReVc", "[", 
              RowBox[{"[", "i", "]"}], "]"}], "=", 
             RowBox[{"Interpolation", "[", 
              RowBox[{"data", ",", 
               RowBox[{"InterpolationOrder", "\[Rule]", "1"}]}], "]"}]}]}]}], 
          "]"}], ";"}], ",", 
        RowBox[{"{", 
         RowBox[{"i", ",", "1", ",", "51"}], "}"}]}], "]"}], "\n", 
      RowBox[{"Do", "[", 
       RowBox[{
        RowBox[{
         RowBox[{"Block", "[", 
          RowBox[{
           RowBox[{"{", "data", "}"}], ",", 
           RowBox[{
            RowBox[{"data", "=", 
             RowBox[{"ToExpression", "[", 
              RowBox[{"Import", "[", 
               RowBox[{"\"\<pots/par/pT\>\"", "<>", 
                RowBox[{"ToString", "[", "pT", "]"}], "<>", "\"\</ImVspT\>\"",
                 "<>", 
                RowBox[{"ToString", "[", "pT", "]"}], "<>", "\"\<ang\>\"", "<>", 
                RowBox[{"ToString", "[", "i", "]"}], "<>", 
                "\"\<Jpsi.dat\>\""}], "]"}], "]"}]}], ";", 
            RowBox[{"data", "=", 
             RowBox[{"Append", "[", 
              RowBox[{"data", ",", 
               RowBox[{"{", 
                RowBox[{"20000", ",", 
                 RowBox[{"data", "[", 
                  RowBox[{"[", 
                   RowBox[{
                    RowBox[{"-", "1"}], ",", "2"}], "]"}], "]"}]}], "}"}]}], 
              "]"}]}], ";", 
            RowBox[{
             RowBox[{"ImVs", "[", 
              RowBox[{"[", "i", "]"}], "]"}], "=", 
             RowBox[{"Interpolation", "[", 
              RowBox[{"data", ",", 
               RowBox[{"InterpolationOrder", "\[Rule]", "1"}]}], "]"}]}]}]}], 
          "]"}], ";"}], ",", 
        RowBox[{"{", 
         RowBox[{"i", ",", "1", ",", "51"}], "}"}]}], "]"}], "\n", 
      RowBox[{"Do", "[", 
       RowBox[{
        RowBox[{
         RowBox[{"Block", "[", 
          RowBox[{
           RowBox[{"{", "data", "}"}], ",", 
           RowBox[{
            RowBox[{"data", "=", 
             RowBox[{"ToExpression", "[", 
              RowBox[{"Import", "[", 
               RowBox[{"\"\<pots/par/pT\>\"", "<>", 
                RowBox[{"ToString", "[", "pT", "]"}], "<>", "\"\</ImVcpT\>\"",
                 "<>", 
                RowBox[{"ToString", "[", "pT", "]"}], "<>", "\"\<ang\>\"", "<>", 
                RowBox[{"ToString", "[", "i", "]"}], "<>", 
                "\"\<Jpsi.dat\>\""}], "]"}], "]"}]}], ";", 
            RowBox[{"data", "=", 
             RowBox[{"Append", "[", 
              RowBox[{"data", ",", 
               RowBox[{"{", 
                RowBox[{"20000", ",", 
                 RowBox[{"data", "[", 
                  RowBox[{"[", 
                   RowBox[{
                    RowBox[{"-", "1"}], ",", "2"}], "]"}], "]"}]}], "}"}]}], 
              "]"}]}], ";", 
            RowBox[{
             RowBox[{"ImVc", "[", 
              RowBox[{"[", "i", "]"}], "]"}], "=", 
             RowBox[{"Interpolation", "[", 
              RowBox[{"data", ",", 
               RowBox[{"InterpolationOrder", "\[Rule]", "1"}]}], "]"}]}]}]}], 
          "]"}], ";"}], ",", 
        RowBox[{"{", 
         RowBox[{"i", ",", "1", ",", "51"}], "}"}]}], "]"}]}], ";"}]}], 
   "]"}]}]], "Input",
 CellChangeTimes->{{3.757807732289682*^9, 3.7578077927944403`*^9}, {
  3.7578079676897383`*^9, 3.757807971862171*^9}}],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"ParallelSow", "[", "expr_", "]"}], ":=", 
   RowBox[{"Sow", "[", "expr", "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"SetSharedFunction", "[", "ParallelSow", "]"}], ";"}]}], "Input"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"\[Delta]", "=", 
    FractionBox["1", "100"]}], ";"}], " "}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"d\[Omega]", "=", "0.0002"}], ";"}]}], "Input",
 CellChangeTimes->{{3.74228955582731*^9, 3.742289558498271*^9}, {
  3.742298662461986*^9, 3.742298684870023*^9}, {3.742298729927827*^9, 
  3.7422987328788557`*^9}, {3.742299426624055*^9, 3.742299459795083*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"swaveccspectra", "[", "ang_", "]"}], ":=", 
   RowBox[{"Block", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{"\[Alpha]", "=", 
        RowBox[{"\[Alpha]cont", "[", 
         RowBox[{"[", "1", "]"}], "]"}]}], ",", 
       RowBox[{"c", "=", 
        RowBox[{"ccont", "[", 
         RowBox[{"[", "1", "]"}], "]"}]}], ",", 
       RowBox[{"M", "=", "Mc"}], ",", 
       RowBox[{"l", "=", "0"}], ",", 
       RowBox[{"\[Omega]min", "=", 
        RowBox[{"-", "1"}]}], ",", 
       RowBox[{"\[Omega]max", "=", "2"}], ",", "ccss", ",", "inf", ",", 
       "\[Rho]table", ",", "\[Omega]", ",", "rhow", ",", "gr0", ",", "s1", 
       ",", "V"}], "}"}], ",", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{
       RowBox[{"V", "[", "r_", "]"}], ":=", 
       RowBox[{
        RowBox[{
         RowBox[{"ReVs", "[", 
          RowBox[{"[", "ang", "]"}], "]"}], "[", "r", "]"}], "+", 
        RowBox[{
         RowBox[{"ReVc", "[", 
          RowBox[{"[", "ang", "]"}], "]"}], "[", "r", "]"}], "+", 
        RowBox[{"\[ImaginaryI]", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{
            RowBox[{"ImVs", "[", 
             RowBox[{"[", "ang", "]"}], "]"}], "[", "r", "]"}], "+", 
           RowBox[{
            RowBox[{"ImVc", "[", 
             RowBox[{"[", "ang", "]"}], "]"}], "[", "r", "]"}]}], ")"}]}]}]}],
       ";", "\[IndentingNewLine]", 
      RowBox[{"\[Rho]table", "=", 
       RowBox[{
        RowBox[{
         RowBox[{
          RowBox[{"ParallelDo", "[", 
           RowBox[{
            RowBox[{
             RowBox[{"\[Omega]", "=", 
              RowBox[{"\[Omega]min", "+", 
               RowBox[{
                RowBox[{"(", 
                 RowBox[{"it", "-", "1"}], ")"}], " ", "d\[Omega]", " ", 
                "M"}]}]}], ";", 
             RowBox[{"inf", "=", 
              RowBox[{"40", "+", 
               RowBox[{"500", "*", "it", "*", "d\[Omega]"}]}]}], ";", 
             "\[IndentingNewLine]", 
             RowBox[{"s01", "=", 
              RowBox[{"NDSolve", "[", 
               RowBox[{
                RowBox[{"{", 
                 RowBox[{
                  RowBox[{
                   RowBox[{
                    RowBox[{
                    RowBox[{"(", 
                    RowBox[{"\[Omega]", "-", 
                    FractionBox[
                    RowBox[{"l", 
                    RowBox[{"(", 
                    RowBox[{"l", "+", "1"}], ")"}]}], 
                    RowBox[{"M", " ", 
                    SuperscriptBox["r", "2"]}]], "-", 
                    RowBox[{"Re", "[", 
                    RowBox[{"V", "[", "r", "]"}], "]"}], "+", 
                    RowBox[{"\[ImaginaryI]", " ", 
                    RowBox[{"Abs", "[", 
                    RowBox[{"Im", "[", 
                    RowBox[{"V", "[", "r", "]"}], "]"}], "]"}]}]}], ")"}], 
                    RowBox[{"gr", "[", "r", "]"}]}], "+", 
                    RowBox[{
                    FractionBox["1", "M"], 
                    RowBox[{
                    RowBox[{"gr", "''"}], "[", "r", "]"}]}]}], "\[Equal]", 
                   "0"}], ",", " ", "\[IndentingNewLine]", 
                  RowBox[{
                   RowBox[{
                    RowBox[{"gr", "'"}], "[", "\[Delta]", "]"}], "\[Equal]", 
                   RowBox[{
                    RowBox[{"(", 
                    RowBox[{"\[Alpha]", " ", "M"}], ")"}], "-", 
                    RowBox[{"\[Delta]", 
                    SuperscriptBox[
                    RowBox[{"(", 
                    RowBox[{"M", " ", "\[Alpha]"}], ")"}], "2"]}]}]}], ",", 
                  "\[IndentingNewLine]", " ", 
                  RowBox[{
                   RowBox[{"gr", "[", "\[Delta]", "]"}], "\[Equal]", 
                   RowBox[{
                    RowBox[{"\[Delta]", 
                    RowBox[{"(", 
                    RowBox[{"\[Alpha]", " ", "M"}], ")"}]}], "-", " ", 
                    RowBox[{
                    FractionBox["1", "2"], 
                    SuperscriptBox["\[Delta]", "2"], 
                    SuperscriptBox[
                    RowBox[{"(", 
                    RowBox[{"\[Alpha]", " ", "M"}], ")"}], "2"]}]}]}]}], 
                 "}"}], ",", "gr", ",", 
                RowBox[{"{", 
                 RowBox[{"r", ",", "\[Delta]", ",", "inf"}], "}"}]}], "]"}]}],
              ";", "\[IndentingNewLine]", 
             RowBox[{
              RowBox[{"gr0", "[", "r_", "]"}], "=", 
              SubscriptBox[
               RowBox[{"(", 
                RowBox[{
                 RowBox[{"gr", "[", "r", "]"}], "/.", "s01"}], ")"}], 
               RowBox[{
               "\[LeftDoubleBracket]", "1", "\[RightDoubleBracket]"}]]}], ";",
              "\[IndentingNewLine]", 
             RowBox[{"s1", "=", 
              RowBox[{"NDSolve", "[", 
               RowBox[{
                RowBox[{"{", 
                 RowBox[{
                  RowBox[{
                   RowBox[{
                    RowBox[{"rho", "'"}], "[", "x", "]"}], "\[Equal]", 
                   RowBox[{
                    RowBox[{"-", 
                    FractionBox[
                    RowBox[{" ", 
                    RowBox[{"6", " ", "Nc", " ", 
                    SuperscriptBox["M", "2"], " ", "\[Alpha]"}]}], 
                    RowBox[{"4", "\[Pi]"}]]}], 
                    RowBox[{"Im", "[", 
                    FractionBox["1", 
                    SuperscriptBox[
                    RowBox[{"(", 
                    RowBox[{"gr0", "[", "x", "]"}], ")"}], "2"]], 
                    RowBox[{"(*", 
                    RowBox[{"+", 
                    FractionBox["36", 
                    SuperscriptBox[
                    RowBox[{"(", 
                    RowBox[{"gr1", "[", "x", "]"}], ")"}], "2"]]}], "*)"}], 
                    "]"}]}]}], ",", 
                  RowBox[{
                   RowBox[{"rho", "[", "\[Delta]", "]"}], "\[Equal]", "0"}]}],
                  "}"}], ",", "rho", ",", 
                RowBox[{"{", 
                 RowBox[{"x", ",", "\[Delta]", ",", "inf"}], "}"}]}], "]"}]}],
              ";", "\[IndentingNewLine]", 
             RowBox[{
              RowBox[{"rhow", "[", "r_", "]"}], "=", 
              SubscriptBox[
               RowBox[{"(", 
                RowBox[{
                 RowBox[{"rho", "[", "r", "]"}], "/.", "s1"}], ")"}], 
               RowBox[{
               "\[LeftDoubleBracket]", "1", "\[RightDoubleBracket]"}]]}], ";",
              "\[IndentingNewLine]", 
             RowBox[{"ParallelSow", "[", 
              RowBox[{"{", 
               RowBox[{
                RowBox[{"\[Omega]", "+", 
                 RowBox[{"2", "M"}]}], ",", 
                RowBox[{"rhow", "[", "inf", "]"}]}], "}"}], "]"}]}], ",", 
            RowBox[{"{", 
             RowBox[{"it", ",", "1", ",", 
              FractionBox[
               RowBox[{"\[Omega]max", "-", "\[Omega]min"}], 
               RowBox[{"d\[Omega]", " ", "M"}]]}], "}"}]}], "]"}], "//", 
          "Reap"}], "//", "Last"}], "//", "First"}]}], ";", 
      "\[IndentingNewLine]", "\[IndentingNewLine]", 
      RowBox[{"ccss", "=", 
       RowBox[{"ParallelTable", "[", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{
           RowBox[{"\[Rho]table", "[", 
            RowBox[{"[", 
             RowBox[{"i", ",", "1"}], "]"}], "]"}], ",", 
           FractionBox[
            RowBox[{"-", 
             RowBox[{"\[Rho]table", "[", 
              RowBox[{"[", 
               RowBox[{"i", ",", "2"}], "]"}], "]"}]}], 
            SuperscriptBox[
             RowBox[{"\[Rho]table", "[", 
              RowBox[{"[", 
               RowBox[{"i", ",", "1"}], "]"}], "]"}], "2"]]}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"i", ",", "1", ",", 
           RowBox[{"Length", "[", "\[Rho]table", "]"}]}], "}"}]}], "]"}]}], 
      ";", "\[IndentingNewLine]", 
      RowBox[{"Export", "[", 
       RowBox[{
        RowBox[{"\"\<cc/par/pT\>\"", "<>", 
         RowBox[{"ToString", "[", "pT", "]"}], "<>", "\"\</swccpT\>\"", "<>", 
         
         RowBox[{"ToString", "[", "pT", "]"}], "<>", "\"\<ang\>\"", "<>", 
         RowBox[{"ToString", "[", "ang", "]"}], "<>", 
         "\"\<spectraJpsi.dat\>\""}], ",", 
        RowBox[{"Sort", "[", "ccss", "]"}]}], "]"}], ";"}]}], 
    "\[IndentingNewLine]", "]"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.724397604460712*^9, 3.724397621092863*^9}, {
   3.724398705481254*^9, 3.724398705798315*^9}, {3.72440624506767*^9, 
   3.7244062457361317`*^9}, {3.7244423136168756`*^9, 3.724442340980721*^9}, {
   3.7244423712224417`*^9, 3.724442377050403*^9}, {3.724442465925974*^9, 
   3.724442518695669*^9}, {3.7244426255599117`*^9, 3.724442639076613*^9}, {
   3.724443729204352*^9, 3.724443729749022*^9}, {3.724443881656342*^9, 
   3.7244438842850027`*^9}, 3.725261621115453*^9, 3.72526166634648*^9, {
   3.725271550289123*^9, 3.7252715504130163`*^9}, {3.725271609402791*^9, 
   3.7252716095188437`*^9}, {3.7252717762497*^9, 3.725271782362536*^9}, {
   3.725271824500347*^9, 3.725271826035269*^9}, {3.725271857701564*^9, 
   3.725271858192912*^9}, {3.725271928114049*^9, 3.7252719496618757`*^9}, {
   3.725271981807578*^9, 3.725271987122878*^9}, {3.725273718896678*^9, 
   3.72527377251343*^9}, {3.725273963159111*^9, 3.725273966198284*^9}, {
   3.725364382855975*^9, 3.725364384697238*^9}, {3.725364432753635*^9, 
   3.725364433681274*^9}, {3.725364595553596*^9, 3.725364595868292*^9}, {
   3.725364661141473*^9, 3.725364661301785*^9}, {3.725365068510941*^9, 
   3.7253650691073112`*^9}, {3.7256202924505177`*^9, 
   3.7256202938854313`*^9}, {3.7256265502253428`*^9, 3.725626559021003*^9}, {
   3.725798091627001*^9, 3.725798108963685*^9}, {3.725798150844287*^9, 
   3.725798156038417*^9}, {3.726312422974263*^9, 3.726312439922279*^9}, {
   3.726313778060986*^9, 3.726313794010726*^9}, {3.726313854887352*^9, 
   3.726313855417986*^9}, {3.726377533478507*^9, 3.726377535012369*^9}, {
   3.726379310729051*^9, 3.726379315935656*^9}, {3.726379351066524*^9, 
   3.7263793563685627`*^9}, 3.7263814533362722`*^9, {3.726468979312665*^9, 
   3.726469044993416*^9}, {3.726564279540083*^9, 3.726564288774165*^9}, {
   3.726564330005303*^9, 3.726564342424973*^9}, {3.7265645007454853`*^9, 
   3.7265645054085903`*^9}, 3.726565145221386*^9, {3.726836923420138*^9, 
   3.726836925204391*^9}, {3.7268417497448387`*^9, 3.726841749854889*^9}, {
   3.727357927216405*^9, 3.7273579306359463`*^9}, 3.72735811608375*^9, {
   3.7273582875862513`*^9, 3.727358296888235*^9}, {3.727520051444908*^9, 
   3.7275200665503483`*^9}, {3.727539483513708*^9, 3.72753949210455*^9}, {
   3.7275398377710333`*^9, 3.727539869000495*^9}, {3.7275879806550293`*^9, 
   3.727587984698921*^9}, {3.727606150288821*^9, 3.727606150994812*^9}, {
   3.728932814314426*^9, 3.728932860160056*^9}, 3.7289333254815903`*^9, 
   3.7299208725344887`*^9, {3.730007040539275*^9, 3.7300070509717903`*^9}, {
   3.730007357183831*^9, 3.7300073662633142`*^9}, {3.7331192829046183`*^9, 
   3.733119300197537*^9}, {3.733120717385792*^9, 3.733120717697629*^9}, {
   3.7331222711038847`*^9, 3.733122272703622*^9}, {3.733211538849382*^9, 
   3.7332115515038567`*^9}, {3.7332289443370447`*^9, 
   3.7332289447842827`*^9}, {3.742215948846467*^9, 3.742215959437643*^9}, {
   3.742216025305929*^9, 3.742216093257207*^9}, {3.7422172078868933`*^9, 
   3.7422172275906973`*^9}, 3.74221727383118*^9, {3.742217585069265*^9, 
   3.742217591716959*^9}, {3.7422176229823923`*^9, 3.742217653035615*^9}, {
   3.742269341112874*^9, 3.742269371527761*^9}, 3.742275694936644*^9, {
   3.742289467062118*^9, 3.742289486771803*^9}, {3.742289520463562*^9, 
   3.7422896027136*^9}, {3.7422896364561243`*^9, 3.74228964347093*^9}, {
   3.742289678232355*^9, 3.742289708137301*^9}, {3.7422897506101*^9, 
   3.7422897587096577`*^9}, {3.7422920316457787`*^9, 3.742292034487727*^9}, 
   3.742292186682322*^9, {3.742292303240778*^9, 3.742292303483521*^9}, {
   3.742292362481593*^9, 3.742292372544711*^9}, {3.742292408813004*^9, 
   3.742292447857381*^9}, {3.7422968206130743`*^9, 3.742296843480155*^9}, {
   3.7422970160890417`*^9, 3.742297024417719*^9}, {3.742297074890059*^9, 
   3.74229711910509*^9}, {3.7422973083294992`*^9, 3.742297309298213*^9}, {
   3.742297354168077*^9, 3.742297359897736*^9}, {3.742297415918168*^9, 
   3.7422974232482452`*^9}, {3.742297467739311*^9, 3.742297612963316*^9}, {
   3.7422977860232887`*^9, 3.7422977903561068`*^9}, {3.74229798181938*^9, 
   3.742298023677857*^9}, {3.7422980561712513`*^9, 3.74229805925661*^9}, 
   3.742298106308654*^9, {3.742300221204397*^9, 3.742300269720365*^9}, {
   3.742300416216001*^9, 3.742300416917211*^9}, {3.742300536315893*^9, 
   3.742300546756034*^9}, {3.742300626604027*^9, 3.742300638323701*^9}, {
   3.7423006769018583`*^9, 3.7423007163572683`*^9}, {3.7435037431402884`*^9, 
   3.743503799356997*^9}, {3.7435038425347443`*^9, 3.743503908279688*^9}, {
   3.7435046316079397`*^9, 3.743504651390107*^9}, 3.745326235801956*^9, {
   3.745577559422867*^9, 3.745577586968154*^9}, {3.745580528080043*^9, 
   3.74558059234057*^9}, {3.745580690187639*^9, 3.745580708875317*^9}, {
   3.745642437900836*^9, 3.745642442612089*^9}, {3.745642493682754*^9, 
   3.7456425382868767`*^9}, {3.74627352599397*^9, 3.7462735295622587`*^9}, {
   3.7462736076039886`*^9, 3.7462736659082212`*^9}, {3.746273697621533*^9, 
   3.746273736166617*^9}, {3.7462741385800743`*^9, 3.746274142868767*^9}, {
   3.746274228830742*^9, 3.746274248310967*^9}, {3.7462743303367853`*^9, 
   3.7462743498486643`*^9}, {3.746274405954569*^9, 3.746274407722952*^9}, {
   3.74627803681008*^9, 3.746278037153131*^9}, {3.747887414650214*^9, 
   3.747887423938949*^9}, {3.7481674233164043`*^9, 3.7481674506752663`*^9}, {
   3.749554891486802*^9, 3.749554922961441*^9}, {3.749555089233777*^9, 
   3.749555119969118*^9}, {3.749563528737471*^9, 3.7495636549318132`*^9}, {
   3.749582048761517*^9, 3.749582052529887*^9}, 3.749646995985099*^9, 
   3.749655798300173*^9, 3.74970789643521*^9, {3.75414665053309*^9, 
   3.754146706624938*^9}, {3.757807031207905*^9, 3.757807040656314*^9}, {
   3.757807702967629*^9, 3.7578077038242903`*^9}, {3.7578078882965317`*^9, 
   3.757807902315524*^9}, {3.75780798833467*^9, 3.7578079890797157`*^9}, {
   3.757808051229706*^9, 3.757808087763713*^9}, {3.757810418692294*^9, 
   3.757810421517911*^9}, 3.757886527824544*^9}]
}, Closed]],

Cell[CellGroupData[{

Cell["Run", "Subsubsection",
 CellChangeTimes->{{3.7578081214207697`*^9, 3.757808141886427*^9}}],

Cell[BoxData[{
 RowBox[{
  RowBox[{"pT", "=", "10"}], ";"}], "\n", 
 RowBox[{"PotsIn", "[", "pT", "]"}], "\n", 
 RowBox[{"Do", "[", 
  RowBox[{
   RowBox[{"swaveccspectra", "[", "i", "]"}], ",", 
   RowBox[{"{", 
    RowBox[{"i", ",", "15", ",", "51"}], "}"}]}], "]"}]}], "Input",
 CellChangeTimes->{{3.7578081466759377`*^9, 3.757808148691277*^9}, {
  3.7578105174307537`*^9, 3.757810525123972*^9}, {3.757886597992675*^9, 
  3.7578866045682163`*^9}}],

Cell[BoxData[{
 RowBox[{
  RowBox[{"pT", "=", "15"}], ";"}], "\n", 
 RowBox[{"PotsIn", "[", "pT", "]"}], "\n", 
 RowBox[{"Do", "[", 
  RowBox[{
   RowBox[{"swaveccspectra", "[", "i", "]"}], ",", 
   RowBox[{"{", 
    RowBox[{"i", ",", "1", ",", "51"}], "}"}]}], "]"}]}], "Input",
 CellChangeTimes->{{3.7578081466759377`*^9, 3.757808148691277*^9}, {
  3.7578105174307537`*^9, 3.757810525123972*^9}, {3.7578105562680473`*^9, 
  3.757810561207963*^9}, {3.757886613095357*^9, 3.7578866221907787`*^9}}]
}, Open  ]]
}, Closed]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Fitting", "Section",
 CellChangeTimes->{{3.745472165420155*^9, 3.745472170532083*^9}, {
  3.749554829941771*^9, 3.749554831005995*^9}, {3.754164996727846*^9, 
  3.754165004375143*^9}}],

Cell[CellGroupData[{

Cell["Functions", "Subsection",
 CellChangeTimes->{{3.758213222941469*^9, 3.7582132236487617`*^9}, {
  3.7582132989687757`*^9, 3.7582133099013567`*^9}}],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"BW", "[", 
    RowBox[{
    "w_", ",", "wr_", ",", "\[CapitalGamma]_", ",", "\[Delta]bg_", ",", 
     "const_", ",", "shift_", ",", "shift2_"}], "]"}], ":=", 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"const", 
     RowBox[{"(", 
      FractionBox[
       SuperscriptBox[
        RowBox[{"(", 
         RowBox[{"\[CapitalGamma]", "/", "2"}], ")"}], "2"], 
       RowBox[{
        SuperscriptBox[
         RowBox[{"(", 
          RowBox[{"w", "-", "wr"}], ")"}], "2"], "+", 
        SuperscriptBox[
         RowBox[{"(", 
          RowBox[{"\[CapitalGamma]", "/", "2"}], ")"}], "2"]}]], ")"}]}], "+",
     " ", 
    RowBox[{"\[Delta]bg", 
     FractionBox[
      RowBox[{
       RowBox[{"(", 
        RowBox[{"\[CapitalGamma]", "/", "2"}], ")"}], 
       RowBox[{"(", 
        RowBox[{"w", "-", "wr"}], ")"}]}], 
      RowBox[{
       SuperscriptBox[
        RowBox[{"(", 
         RowBox[{"w", "-", "wr"}], ")"}], "2"], "+", 
       SuperscriptBox[
        RowBox[{"(", 
         RowBox[{"\[CapitalGamma]", "/", "2"}], ")"}], "2"]}]]}], "+", 
    RowBox[{"0", " ", 
     FractionBox[
      RowBox[{
       RowBox[{"(", 
        RowBox[{
         RowBox[{"4", " ", 
          SuperscriptBox[
           RowBox[{"(", 
            RowBox[{"w", "-", "wr"}], ")"}], "2"]}], "-", " ", 
         SuperscriptBox["\[CapitalGamma]", "2"]}], ")"}], " ", 
       SuperscriptBox["deltabg", "2"]}], 
      RowBox[{
       RowBox[{"4", " ", 
        SuperscriptBox[
         RowBox[{"(", 
          RowBox[{"w", "-", "wr"}], ")"}], "2"]}], "+", 
       SuperscriptBox["\[CapitalGamma]", "2"]}]]}], "+", 
    RowBox[{"shift", " ", 
     RowBox[{"(", 
      RowBox[{"w", "-", "wr"}], ")"}]}], "+", "shift2"}]}], " ", 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"BWi", "[", 
    RowBox[{"w_", ",", "wr_", ",", "\[CapitalGamma]_", ",", "const_"}], "]"}],
    ":=", 
   RowBox[{"const", 
    RowBox[{"(", 
     FractionBox[
      SuperscriptBox[
       RowBox[{"(", 
        RowBox[{"\[CapitalGamma]", "/", "2"}], ")"}], "2"], 
      RowBox[{
       SuperscriptBox[
        RowBox[{"(", 
         RowBox[{"w", "-", "wr"}], ")"}], "2"], "+", 
       SuperscriptBox[
        RowBox[{"(", 
         RowBox[{"\[CapitalGamma]", "/", "2"}], ")"}], "2"]}]], ")"}]}]}], 
  " ", ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"fit", "[", 
     RowBox[{"input_", ",", "output_", ",", "scan_"}], "]"}], ":=", 
    RowBox[{"Module", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
        RowBox[{"temp", "=", 
         RowBox[{"Range", "[", 
          RowBox[{"1", ",", 
           RowBox[{"Length", "[", "scan", "]"}]}], "]"}]}], ",", "n", ",", 
        "maxx", ",", "minx", ",", "maxy", ",", "maxyx", ",", "maxyi", ",", 
        "maxxy", ",", "inter", ",", "maxxs", ",", "maxxis", ",", "maxys", ",",
         "mins", ",", "hwhmi", ",", "gammas", ",", "inputc", ",", "bad"}], 
       "}"}], ",", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"SetSharedVariable", "[", "temp", "]"}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{"ParallelDo", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"n", "=", 
           RowBox[{"temp", "[", 
            RowBox[{"[", "ii", "]"}], "]"}]}], ";", "\[IndentingNewLine]", 
          RowBox[{"maxx", "=", 
           RowBox[{"Max", "[", 
            RowBox[{
             RowBox[{"input", "[", "n", "]"}], "[", 
             RowBox[{"[", 
              RowBox[{"All", ",", "1"}], "]"}], "]"}], "]"}]}], ";", 
          "\[IndentingNewLine]", 
          RowBox[{"minx", "=", 
           RowBox[{"Min", "[", 
            RowBox[{
             RowBox[{"input", "[", "n", "]"}], "[", 
             RowBox[{"[", 
              RowBox[{"All", ",", "1"}], "]"}], "]"}], "]"}]}], ";", 
          "\[IndentingNewLine]", 
          RowBox[{"maxy", "=", 
           RowBox[{"Max", "[", 
            RowBox[{
             RowBox[{"input", "[", "n", "]"}], "[", 
             RowBox[{"[", 
              RowBox[{"All", ",", "2"}], "]"}], "]"}], "]"}]}], ";", 
          "\[IndentingNewLine]", 
          RowBox[{"maxyx", "=", 
           RowBox[{
            RowBox[{"input", "[", "n", "]"}], "[", 
            RowBox[{"[", 
             RowBox[{
              RowBox[{
               RowBox[{"Position", "[", 
                RowBox[{
                 RowBox[{"input", "[", "n", "]"}], ",", 
                 RowBox[{"Max", "[", 
                  RowBox[{
                   RowBox[{"input", "[", "n", "]"}], "[", 
                   RowBox[{"[", 
                    RowBox[{"All", ",", "2"}], "]"}], "]"}], "]"}]}], "]"}], 
               "[", 
               RowBox[{"[", 
                RowBox[{"1", ",", "1"}], "]"}], "]"}], ",", "1"}], "]"}], 
            "]"}]}], ";", "\[IndentingNewLine]", 
          RowBox[{"maxyi", "=", 
           RowBox[{
            RowBox[{"Position", "[", 
             RowBox[{
              RowBox[{
               RowBox[{"input", "[", "n", "]"}], "[", 
               RowBox[{"[", 
                RowBox[{"All", ",", "1"}], "]"}], "]"}], ",", "maxyx"}], 
             "]"}], "[", 
            RowBox[{"[", 
             RowBox[{"1", ",", "1"}], "]"}], "]"}]}], ";", 
          "\[IndentingNewLine]", 
          RowBox[{"maxxy", "=", 
           RowBox[{
            RowBox[{"input", "[", "n", "]"}], "[", 
            RowBox[{"[", 
             RowBox[{
              RowBox[{
               RowBox[{"Position", "[", 
                RowBox[{
                 RowBox[{"input", "[", "n", "]"}], ",", 
                 RowBox[{"Max", "[", 
                  RowBox[{
                   RowBox[{"input", "[", "n", "]"}], "[", 
                   RowBox[{"[", 
                    RowBox[{"All", ",", "1"}], "]"}], "]"}], "]"}]}], "]"}], 
               "[", 
               RowBox[{"[", 
                RowBox[{"1", ",", "1"}], "]"}], "]"}], ",", "2"}], "]"}], 
            "]"}]}], ";", "\[IndentingNewLine]", 
          RowBox[{"inter", "=", 
           RowBox[{"Interpolation", "[", 
            RowBox[{
             RowBox[{"input", "[", "n", "]"}], ",", 
             RowBox[{"InterpolationOrder", "\[Rule]", "1"}]}], "]"}]}], ";", 
          "\[IndentingNewLine]", 
          RowBox[{"maxxs", "=", 
           RowBox[{"Sort", "[", 
            RowBox[{"Quiet", "[", 
             RowBox[{
              RowBox[{"DeleteDuplicatesBy", "[", 
               RowBox[{
                RowBox[{"Table", "[", 
                 RowBox[{
                  RowBox[{"{", 
                   RowBox[{
                    RowBox[{"Round", "[", 
                    RowBox[{
                    RowBox[{"FindMaxValue", "[", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"inter", "[", "x", "]"}], ",", 
                    RowBox[{
                    "maxyx", "\[LessEqual]", "x", "\[LessEqual]", "maxx"}]}], 
                    "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"x", ",", "a"}], "}"}]}], "]"}], ",", "maxxy"}], 
                    "]"}], ",", 
                    RowBox[{
                    RowBox[{"FindArgMax", "[", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"inter", "[", "x", "]"}], ",", 
                    RowBox[{
                    "maxyx", "\[LessEqual]", "x", "\[LessEqual]", "maxx"}]}], 
                    "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"x", ",", "a"}], "}"}]}], "]"}], "[", 
                    RowBox[{"[", "1", "]"}], "]"}]}], "}"}], ",", 
                  RowBox[{"{", 
                   RowBox[{"a", ",", "maxyx", ",", "maxx", ",", 
                    FractionBox[
                    RowBox[{"maxx", "-", "maxyx"}], "50"]}], "}"}]}], "]"}], 
                ",", "First"}], "]"}], "[", 
              RowBox[{"[", 
               RowBox[{"All", ",", "2"}], "]"}], "]"}], "]"}], "]"}]}], ";", 
          RowBox[{"bad", "=", 
           RowBox[{"{", "}"}]}], ";", "\[IndentingNewLine]", 
          RowBox[{"If", "[", 
           RowBox[{
            RowBox[{
             RowBox[{"Length", "[", "maxxs", "]"}], ">", "1"}], ",", 
            RowBox[{"Do", "[", 
             RowBox[{
              RowBox[{"If", "[", 
               RowBox[{
                RowBox[{
                 RowBox[{
                  RowBox[{"maxxs", "[", 
                   RowBox[{"[", 
                    RowBox[{"i", "+", "1"}], "]"}], "]"}], "/", 
                  RowBox[{"maxxs", "[", 
                   RowBox[{"[", "i", "]"}], "]"}]}], "\[LessEqual]", 
                 "1.001"}], ",", 
                RowBox[{"bad", "=", 
                 RowBox[{"Append", "[", 
                  RowBox[{"bad", ",", 
                   RowBox[{"{", "i", "}"}]}], "]"}]}]}], "]"}], ",", 
              RowBox[{"{", 
               RowBox[{"i", ",", 
                RowBox[{
                 RowBox[{"Length", "[", "maxxs", "]"}], "-", "1"}]}], "}"}]}],
              "]"}]}], "]"}], ";", "\[IndentingNewLine]", 
          RowBox[{"maxxs", "=", 
           RowBox[{"Delete", "[", 
            RowBox[{"maxxs", ",", "bad"}], "]"}]}], ";", 
          RowBox[{"maxxis", "=", 
           RowBox[{"Sort", "[", 
            RowBox[{"Table", "[", 
             RowBox[{
              RowBox[{
               RowBox[{"Position", "[", 
                RowBox[{
                 RowBox[{
                  RowBox[{"input", "[", "n", "]"}], "[", 
                  RowBox[{"[", 
                   RowBox[{"All", ",", "1"}], "]"}], "]"}], ",", 
                 RowBox[{
                  RowBox[{"Nearest", "[", 
                   RowBox[{
                    RowBox[{
                    RowBox[{"input", "[", "n", "]"}], "[", 
                    RowBox[{"[", 
                    RowBox[{"All", ",", "1"}], "]"}], "]"}], ",", 
                    RowBox[{"maxxs", "[", 
                    RowBox[{"[", "i", "]"}], "]"}]}], "]"}], "[", 
                  RowBox[{"[", "1", "]"}], "]"}]}], "]"}], "[", 
               RowBox[{"[", 
                RowBox[{"1", ",", "1"}], "]"}], "]"}], ",", 
              RowBox[{"{", 
               RowBox[{"i", ",", 
                RowBox[{"Length", "[", "maxxs", "]"}]}], "}"}]}], "]"}], 
            "]"}]}], ";", "\[IndentingNewLine]", 
          RowBox[{"bad", "=", 
           RowBox[{"{", "}"}]}], ";", "\[IndentingNewLine]", 
          RowBox[{"Do", "[", 
           RowBox[{
            RowBox[{"If", "[", 
             RowBox[{
              RowBox[{"Or", "[", 
               RowBox[{
                RowBox[{
                 RowBox[{
                  RowBox[{"input", "[", "n", "]"}], "[", 
                  RowBox[{"[", 
                   RowBox[{
                    RowBox[{
                    RowBox[{"maxxis", "[", 
                    RowBox[{"[", "i", "]"}], "]"}], "-", "30"}], ",", "2"}], 
                   "]"}], "]"}], ">", 
                 RowBox[{
                  RowBox[{"input", "[", "n", "]"}], "[", 
                  RowBox[{"[", 
                   RowBox[{
                    RowBox[{"maxxis", "[", 
                    RowBox[{"[", "i", "]"}], "]"}], ",", "2"}], "]"}], 
                  "]"}]}], ",", 
                RowBox[{
                 RowBox[{
                  RowBox[{"input", "[", "n", "]"}], "[", 
                  RowBox[{"[", 
                   RowBox[{
                    RowBox[{
                    RowBox[{"maxxis", "[", 
                    RowBox[{"[", "i", "]"}], "]"}], "+", "30"}], ",", "2"}], 
                   "]"}], "]"}], ">", 
                 RowBox[{
                  RowBox[{"input", "[", "n", "]"}], "[", 
                  RowBox[{"[", 
                   RowBox[{
                    RowBox[{"maxxis", "[", 
                    RowBox[{"[", "i", "]"}], "]"}], ",", "2"}], "]"}], 
                  "]"}]}]}], "]"}], ",", 
              RowBox[{"bad", "=", 
               RowBox[{"Append", "[", 
                RowBox[{"bad", ",", 
                 RowBox[{"{", "i", "}"}]}], "]"}]}]}], "]"}], ",", 
            RowBox[{"{", 
             RowBox[{"i", ",", 
              RowBox[{"Length", "[", "maxxis", "]"}]}], "}"}]}], "]"}], ";", 
          RowBox[{"maxxs", "=", 
           RowBox[{"Delete", "[", 
            RowBox[{"maxxs", ",", "bad"}], "]"}]}], ";", 
          RowBox[{"maxxis", "=", 
           RowBox[{"Delete", "[", 
            RowBox[{"maxxis", ",", "bad"}], "]"}]}], ";", 
          "\[IndentingNewLine]", 
          RowBox[{"maxys", "=", 
           RowBox[{"Table", "[", 
            RowBox[{
             RowBox[{
              RowBox[{"input", "[", "n", "]"}], "[", 
              RowBox[{"[", 
               RowBox[{
                RowBox[{"maxxis", "[", 
                 RowBox[{"[", "i", "]"}], "]"}], ",", "2"}], "]"}], "]"}], 
             ",", 
             RowBox[{"{", 
              RowBox[{"i", ",", 
               RowBox[{"Length", "[", "maxxs", "]"}]}], "}"}]}], "]"}]}], ";",
           "\[IndentingNewLine]", 
          RowBox[{"If", "[", 
           RowBox[{
            RowBox[{
             RowBox[{"Length", "[", "maxxs", "]"}], ">", "1"}], ",", 
            "\[IndentingNewLine]", 
            RowBox[{
             RowBox[{"mins", "=", 
              RowBox[{"Range", "[", 
               RowBox[{
                RowBox[{"Length", "[", "maxxs", "]"}], "-", "1"}], "]"}]}], 
             ";", "\[IndentingNewLine]", 
             RowBox[{"Do", "[", 
              RowBox[{
               RowBox[{
                RowBox[{"mins", "[", 
                 RowBox[{"[", "i", "]"}], "]"}], "=", 
                RowBox[{
                 RowBox[{"Position", "[", 
                  RowBox[{
                   RowBox[{
                    RowBox[{"input", "[", "n", "]"}], "[", 
                    RowBox[{"[", 
                    RowBox[{"All", ",", "2"}], "]"}], "]"}], ",", 
                   RowBox[{"Min", "[", 
                    RowBox[{
                    RowBox[{"input", "[", "n", "]"}], "[", 
                    RowBox[{"[", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"maxxis", "[", 
                    RowBox[{"[", "i", "]"}], "]"}], ";;", 
                    RowBox[{"maxxis", "[", 
                    RowBox[{"[", 
                    RowBox[{"i", "+", "1"}], "]"}], "]"}]}], ",", "2"}], 
                    "]"}], "]"}], "]"}]}], "]"}], "[", 
                 RowBox[{"[", 
                  RowBox[{"1", ",", "1"}], "]"}], "]"}]}], ",", 
               RowBox[{"{", 
                RowBox[{"i", ",", 
                 RowBox[{
                  RowBox[{"Length", "[", "maxxs", "]"}], "-", "1"}]}], 
                "}"}]}], "]"}], ";", 
             RowBox[{"mins", "=", 
              RowBox[{"Append", "[", 
               RowBox[{
                RowBox[{"Prepend", "[", 
                 RowBox[{"mins", ",", 
                  RowBox[{
                   RowBox[{"maxxis", "[", 
                    RowBox[{"[", "1", "]"}], "]"}], "-", 
                   RowBox[{"(", 
                    RowBox[{
                    RowBox[{"mins", "[", 
                    RowBox[{"[", "1", "]"}], "]"}], "-", 
                    RowBox[{"maxxis", "[", 
                    RowBox[{"[", "1", "]"}], "]"}]}], ")"}]}]}], "]"}], ",", 
                RowBox[{"If", "[", 
                 RowBox[{
                  RowBox[{
                   RowBox[{
                    RowBox[{"maxxis", "[", 
                    RowBox[{"[", 
                    RowBox[{"-", "1"}], "]"}], "]"}], "+", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"maxxis", "[", 
                    RowBox[{"[", 
                    RowBox[{"-", "1"}], "]"}], "]"}], "-", 
                    RowBox[{"mins", "[", 
                    RowBox[{"[", 
                    RowBox[{"-", "1"}], "]"}], "]"}]}], ")"}]}], 
                   "\[LessEqual]", " ", 
                   RowBox[{"Length", "[", 
                    RowBox[{"input", "[", "n", "]"}], "]"}]}], ",", 
                  RowBox[{
                   RowBox[{"maxxis", "[", 
                    RowBox[{"[", 
                    RowBox[{"-", "1"}], "]"}], "]"}], "+", 
                   RowBox[{"(", 
                    RowBox[{
                    RowBox[{"maxxis", "[", 
                    RowBox[{"[", 
                    RowBox[{"-", "1"}], "]"}], "]"}], "-", 
                    RowBox[{"mins", "[", 
                    RowBox[{"[", 
                    RowBox[{"-", "1"}], "]"}], "]"}]}], ")"}]}], ",", 
                  RowBox[{"Length", "[", 
                   RowBox[{"input", "[", "n", "]"}], "]"}]}], "]"}]}], 
               "]"}]}], ";"}], ",", "\[IndentingNewLine]", 
            RowBox[{
             RowBox[{"hwhmi", "=", 
              RowBox[{
               RowBox[{"Position", "[", 
                RowBox[{
                 RowBox[{"input", "[", "n", "]"}], ",", 
                 RowBox[{
                  RowBox[{"Nearest", "[", 
                   RowBox[{
                    RowBox[{
                    RowBox[{"input", "[", "n", "]"}], "[", 
                    RowBox[{"[", 
                    RowBox[{
                    RowBox[{";;", "maxyi"}], ",", "2"}], "]"}], "]"}], ",", 
                    RowBox[{"maxy", "/", "2"}]}], "]"}], "[", 
                  RowBox[{"[", "1", "]"}], "]"}]}], "]"}], "[", 
               RowBox[{"[", 
                RowBox[{"1", ",", "1"}], "]"}], "]"}]}], ";", 
             "\[IndentingNewLine]", 
             RowBox[{"mins", "=", 
              RowBox[{"{", 
               RowBox[{
                RowBox[{"maxyi", "-", 
                 RowBox[{"3", 
                  RowBox[{"(", 
                   RowBox[{"maxyi", "-", "hwhmi"}], ")"}]}]}], ",", 
                RowBox[{"If", "[", 
                 RowBox[{
                  RowBox[{
                   RowBox[{"maxyi", "+", 
                    RowBox[{"3", 
                    RowBox[{"(", 
                    RowBox[{"maxyi", "-", "hwhmi"}], ")"}]}]}], 
                   "\[LessEqual]", 
                   RowBox[{"Length", "[", 
                    RowBox[{"input", "[", "n", "]"}], "]"}]}], ",", 
                  RowBox[{"maxyi", "+", 
                   RowBox[{"3", 
                    RowBox[{"(", 
                    RowBox[{"maxyi", "-", "hwhmi"}], ")"}]}]}], ",", 
                  RowBox[{"Length", "[", 
                   RowBox[{"input", "[", "n", "]"}], "]"}]}], "]"}]}], 
               "}"}]}], ";"}]}], "]"}], ";", "\[IndentingNewLine]", 
          RowBox[{"If", "[", 
           RowBox[{
            RowBox[{
             RowBox[{"mins", "[", 
              RowBox[{"[", "1", "]"}], "]"}], "\[LessEqual]", "0"}], ",", 
            RowBox[{
             RowBox[{"mins", "[", 
              RowBox[{"[", "1", "]"}], "]"}], "=", "1"}]}], "]"}], ";", "\n", 
          
          RowBox[{"hwhmi", "=", 
           RowBox[{"Range", "[", 
            RowBox[{"Length", "[", "maxxs", "]"}], "]"}]}], ";", "\n", 
          RowBox[{"Do", "[", 
           RowBox[{
            RowBox[{
             RowBox[{"hwhmi", "[", 
              RowBox[{"[", "i", "]"}], "]"}], "=", 
             RowBox[{
              RowBox[{"Position", "[", 
               RowBox[{
                RowBox[{"input", "[", "n", "]"}], ",", 
                RowBox[{
                 RowBox[{"Nearest", "[", 
                  RowBox[{
                   RowBox[{
                    RowBox[{"input", "[", "n", "]"}], "[", 
                    RowBox[{"[", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"mins", "[", 
                    RowBox[{"[", "i", "]"}], "]"}], ";;", 
                    RowBox[{"maxxis", "[", 
                    RowBox[{"[", "i", "]"}], "]"}]}], ",", "2"}], "]"}], 
                    "]"}], ",", 
                   RowBox[{
                    RowBox[{"inter", "[", 
                    RowBox[{"maxxs", "[", 
                    RowBox[{"[", "i", "]"}], "]"}], "]"}], "/", "2"}]}], 
                  "]"}], "[", 
                 RowBox[{"[", "1", "]"}], "]"}]}], "]"}], "[", 
              RowBox[{"[", 
               RowBox[{"1", ",", "1"}], "]"}], "]"}]}], ",", 
            RowBox[{"{", 
             RowBox[{"i", ",", 
              RowBox[{"Length", "[", "maxxs", "]"}]}], "}"}]}], "]"}], ";", 
          "\[IndentingNewLine]", 
          RowBox[{"gammas", "=", 
           RowBox[{"Range", "[", 
            RowBox[{"Length", "[", "hwhmi", "]"}], "]"}]}], ";", 
          "\[IndentingNewLine]", 
          RowBox[{"Do", "[", 
           RowBox[{
            RowBox[{
             RowBox[{"gammas", "[", 
              RowBox[{"[", "i", "]"}], "]"}], "=", 
             RowBox[{"2", 
              RowBox[{"(", 
               RowBox[{
                RowBox[{"maxxs", "[", 
                 RowBox[{"[", "i", "]"}], "]"}], "-", 
                RowBox[{
                 RowBox[{"input", "[", "n", "]"}], "[", 
                 RowBox[{"[", 
                  RowBox[{
                   RowBox[{"hwhmi", "[", 
                    RowBox[{"[", "i", "]"}], "]"}], ",", "1"}], "]"}], 
                 "]"}]}], ")"}]}]}], ",", 
            RowBox[{"{", 
             RowBox[{"i", ",", 
              RowBox[{"Length", "[", "hwhmi", "]"}]}], "}"}]}], "]"}], ";", 
          "\[IndentingNewLine]", 
          RowBox[{"inputc", "=", 
           RowBox[{"Range", "[", 
            RowBox[{"Length", "[", "maxxs", "]"}], "]"}]}], ";", 
          "\[IndentingNewLine]", 
          RowBox[{"Do", "[", 
           RowBox[{
            RowBox[{
             RowBox[{"inputc", "[", 
              RowBox[{"[", "i", "]"}], "]"}], "=", 
             RowBox[{
              RowBox[{"input", "[", "n", "]"}], "[", 
              RowBox[{"[", 
               RowBox[{
                RowBox[{"If", "[", 
                 RowBox[{
                  RowBox[{"i", "\[GreaterEqual]", "2"}], ",", 
                  RowBox[{"If", "[", 
                   RowBox[{
                    RowBox[{
                    RowBox[{
                    RowBox[{"maxxis", "[", 
                    RowBox[{"[", "i", "]"}], "]"}], "-", 
                    RowBox[{"3", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"maxxis", "[", 
                    RowBox[{"[", "i", "]"}], "]"}], "-", 
                    RowBox[{"hwhmi", "[", 
                    RowBox[{"[", "i", "]"}], "]"}]}], ")"}]}]}], "<", 
                    RowBox[{"mins", "[", 
                    RowBox[{"[", "i", "]"}], "]"}]}], ",", 
                    RowBox[{"mins", "[", 
                    RowBox[{"[", "i", "]"}], "]"}], ",", 
                    RowBox[{
                    RowBox[{"maxxis", "[", 
                    RowBox[{"[", "i", "]"}], "]"}], "-", 
                    RowBox[{"3", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"maxxis", "[", 
                    RowBox[{"[", "i", "]"}], "]"}], "-", 
                    RowBox[{"hwhmi", "[", 
                    RowBox[{"[", "i", "]"}], "]"}]}], ")"}]}]}]}], "]"}], ",", 
                  RowBox[{"If", "[", 
                   RowBox[{
                    RowBox[{
                    RowBox[{
                    RowBox[{"maxxis", "[", 
                    RowBox[{"[", "i", "]"}], "]"}], "-", 
                    RowBox[{"3", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"maxxis", "[", 
                    RowBox[{"[", "i", "]"}], "]"}], "-", 
                    RowBox[{"hwhmi", "[", 
                    RowBox[{"[", "i", "]"}], "]"}]}], ")"}]}]}], ">", "0"}], 
                    ",", 
                    RowBox[{
                    RowBox[{"maxxis", "[", 
                    RowBox[{"[", "i", "]"}], "]"}], "-", 
                    RowBox[{"3", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"maxxis", "[", 
                    RowBox[{"[", "i", "]"}], "]"}], "-", 
                    RowBox[{"hwhmi", "[", 
                    RowBox[{"[", "i", "]"}], "]"}]}], ")"}]}]}], ",", "1"}], 
                   "]"}]}], "]"}], ";;", 
                RowBox[{"If", "[", 
                 RowBox[{
                  RowBox[{
                   RowBox[{
                    RowBox[{"maxxis", "[", 
                    RowBox[{"[", "i", "]"}], "]"}], "+", 
                    RowBox[{"3", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"maxxis", "[", 
                    RowBox[{"[", "i", "]"}], "]"}], "-", 
                    RowBox[{"hwhmi", "[", 
                    RowBox[{"[", "i", "]"}], "]"}]}], ")"}]}]}], "<", 
                   RowBox[{"mins", "[", 
                    RowBox[{"[", 
                    RowBox[{"i", "+", "1"}], "]"}], "]"}]}], ",", 
                  RowBox[{
                   RowBox[{"maxxis", "[", 
                    RowBox[{"[", "i", "]"}], "]"}], "+", 
                   RowBox[{"3", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"maxxis", "[", 
                    RowBox[{"[", "i", "]"}], "]"}], "-", 
                    RowBox[{"hwhmi", "[", 
                    RowBox[{"[", "i", "]"}], "]"}]}], ")"}]}]}], ",", 
                  RowBox[{"mins", "[", 
                   RowBox[{"[", 
                    RowBox[{"i", "+", "1"}], "]"}], "]"}]}], "]"}]}], "]"}], 
              "]"}]}], ",", 
            RowBox[{"{", 
             RowBox[{"i", ",", 
              RowBox[{"Length", "[", "maxxs", "]"}]}], "}"}]}], "]"}], ";", 
          "\[IndentingNewLine]", 
          RowBox[{
           RowBox[{"temp", "[", 
            RowBox[{"[", "ii", "]"}], "]"}], "=", 
           RowBox[{"Range", "[", 
            RowBox[{"Length", "[", "hwhmi", "]"}], "]"}]}], ";", 
          "\[IndentingNewLine]", 
          RowBox[{"Do", "[", 
           RowBox[{
            RowBox[{
             RowBox[{"temp", "[", 
              RowBox[{"[", 
               RowBox[{"ii", ",", "i"}], "]"}], "]"}], "=", 
             RowBox[{"NonlinearModelFit", "[", 
              RowBox[{
               RowBox[{"inputc", "[", 
                RowBox[{"[", "i", "]"}], "]"}], ",", 
               RowBox[{"{", 
                RowBox[{
                 RowBox[{"BW", "[", 
                  RowBox[{
                  "w", ",", "wr", ",", "\[CapitalGamma]", ",", "\[Delta]bg", 
                   ",", "const", ",", "shift", ",", "shift2"}], "]"}], ",", 
                 RowBox[{"const", ">", "0"}], ",", 
                 RowBox[{"\[CapitalGamma]", ">", "0"}]}], "}"}], ",", 
               RowBox[{"{", 
                RowBox[{
                 RowBox[{"{", 
                  RowBox[{"wr", ",", 
                   RowBox[{"maxxs", "[", 
                    RowBox[{"[", "i", "]"}], "]"}]}], "}"}], ",", 
                 RowBox[{"{", 
                  RowBox[{"\[CapitalGamma]", ",", 
                   RowBox[{"gammas", "[", 
                    RowBox[{"[", "i", "]"}], "]"}]}], "}"}], ",", 
                 RowBox[{"{", 
                  RowBox[{"const", ",", 
                   RowBox[{"maxys", "[", 
                    RowBox[{"[", "i", "]"}], "]"}]}], "}"}], ",", 
                 RowBox[{"{", 
                  RowBox[{"\[Delta]bg", ",", "0.0"}], "}"}], ",", 
                 RowBox[{"{", 
                  RowBox[{"shift", ",", "0.0"}], "}"}], ",", 
                 RowBox[{"{", 
                  RowBox[{"shift2", ",", "0.0"}], "}"}]}], "}"}], ",", "w", 
               ",", 
               RowBox[{"MaxIterations", "\[Rule]", "1000"}]}], "]"}]}], ",", 
            RowBox[{"{", 
             RowBox[{"i", ",", 
              RowBox[{"Length", "[", "hwhmi", "]"}]}], "}"}]}], "]"}], ";"}], 
         ",", 
         RowBox[{"{", 
          RowBox[{"ii", ",", 
           RowBox[{"Length", "[", "Tscan", "]"}]}], "}"}]}], "]"}], ";", 
       RowBox[{"output", "=", "temp"}], ";"}]}], "]"}]}], ";"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"fitONE", "[", 
    RowBox[{"input_", ",", "output_"}], "]"}], ":=", 
   RowBox[{"Module", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
      "temp", ",", "maxx", ",", "minx", ",", "maxy", ",", "maxyx", ",", 
       "maxyi", ",", "maxxy", ",", "inter", ",", "maxxs", ",", "maxxis", ",", 
       "maxys", ",", "mins", ",", "hwhmi", ",", "gammas", ",", "inputc", ",", 
       "bad"}], "}"}], ",", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"maxx", "=", 
       RowBox[{"Max", "[", 
        RowBox[{"input", "[", 
         RowBox[{"[", 
          RowBox[{"All", ",", "1"}], "]"}], "]"}], "]"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"minx", "=", 
       RowBox[{"Min", "[", 
        RowBox[{"input", "[", 
         RowBox[{"[", 
          RowBox[{"All", ",", "1"}], "]"}], "]"}], "]"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"maxy", "=", 
       RowBox[{"Max", "[", 
        RowBox[{"input", "[", 
         RowBox[{"[", 
          RowBox[{"All", ",", "2"}], "]"}], "]"}], "]"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"maxyx", "=", 
       RowBox[{"input", "[", 
        RowBox[{"[", 
         RowBox[{
          RowBox[{
           RowBox[{"Position", "[", 
            RowBox[{"input", ",", 
             RowBox[{"Max", "[", 
              RowBox[{"input", "[", 
               RowBox[{"[", 
                RowBox[{"All", ",", "2"}], "]"}], "]"}], "]"}]}], "]"}], "[", 
           
           RowBox[{"[", 
            RowBox[{"1", ",", "1"}], "]"}], "]"}], ",", "1"}], "]"}], "]"}]}],
       ";", "\[IndentingNewLine]", 
      RowBox[{"maxyi", "=", 
       RowBox[{
        RowBox[{"Position", "[", 
         RowBox[{
          RowBox[{"input", "[", 
           RowBox[{"[", 
            RowBox[{"All", ",", "1"}], "]"}], "]"}], ",", "maxyx"}], "]"}], 
        "[", 
        RowBox[{"[", 
         RowBox[{"1", ",", "1"}], "]"}], "]"}]}], ";", "\[IndentingNewLine]", 
      
      RowBox[{"maxxy", "=", 
       RowBox[{"input", "[", 
        RowBox[{"[", 
         RowBox[{
          RowBox[{
           RowBox[{"Position", "[", 
            RowBox[{"input", ",", 
             RowBox[{"Max", "[", 
              RowBox[{"input", "[", 
               RowBox[{"[", 
                RowBox[{"All", ",", "1"}], "]"}], "]"}], "]"}]}], "]"}], "[", 
           
           RowBox[{"[", 
            RowBox[{"1", ",", "1"}], "]"}], "]"}], ",", "2"}], "]"}], "]"}]}],
       ";", "\[IndentingNewLine]", 
      RowBox[{"inter", "=", 
       RowBox[{"Interpolation", "[", 
        RowBox[{"input", ",", 
         RowBox[{"InterpolationOrder", "\[Rule]", "1"}]}], "]"}]}], ";", 
      RowBox[{"maxxs", "=", 
       RowBox[{"Sort", "[", 
        RowBox[{"Quiet", "[", 
         RowBox[{
          RowBox[{"DeleteDuplicatesBy", "[", 
           RowBox[{
            RowBox[{"Table", "[", 
             RowBox[{
              RowBox[{"{", 
               RowBox[{
                RowBox[{"Round", "[", 
                 RowBox[{
                  RowBox[{"FindMaxValue", "[", 
                   RowBox[{
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"inter", "[", "x", "]"}], ",", 
                    RowBox[{
                    "maxyx", "\[LessEqual]", "x", "\[LessEqual]", "maxx"}]}], 
                    "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"x", ",", "a"}], "}"}]}], "]"}], ",", "maxxy"}], 
                 "]"}], ",", 
                RowBox[{
                 RowBox[{"FindArgMax", "[", 
                  RowBox[{
                   RowBox[{"{", 
                    RowBox[{
                    RowBox[{"inter", "[", "x", "]"}], ",", 
                    RowBox[{
                    "maxyx", "\[LessEqual]", "x", "\[LessEqual]", "maxx"}]}], 
                    "}"}], ",", 
                   RowBox[{"{", 
                    RowBox[{"x", ",", "a"}], "}"}]}], "]"}], "[", 
                 RowBox[{"[", "1", "]"}], "]"}]}], "}"}], ",", 
              RowBox[{"{", 
               RowBox[{"a", ",", "maxyx", ",", "maxx", ",", 
                FractionBox[
                 RowBox[{"maxx", "-", "maxyx"}], "50"]}], "}"}]}], "]"}], ",",
             "First"}], "]"}], "[", 
          RowBox[{"[", 
           RowBox[{"All", ",", "2"}], "]"}], "]"}], "]"}], "]"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"bad", "=", 
       RowBox[{"{", "}"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"If", "[", 
       RowBox[{
        RowBox[{
         RowBox[{"Length", "[", "maxxs", "]"}], ">", "1"}], ",", 
        RowBox[{"Do", "[", 
         RowBox[{
          RowBox[{"If", "[", 
           RowBox[{
            RowBox[{
             RowBox[{
              RowBox[{"maxxs", "[", 
               RowBox[{"[", 
                RowBox[{"i", "+", "1"}], "]"}], "]"}], "/", 
              RowBox[{"maxxs", "[", 
               RowBox[{"[", "i", "]"}], "]"}]}], "\[LessEqual]", "1.001"}], 
            ",", 
            RowBox[{"bad", "=", 
             RowBox[{"Append", "[", 
              RowBox[{"bad", ",", 
               RowBox[{"{", "i", "}"}]}], "]"}]}]}], "]"}], ",", 
          RowBox[{"{", 
           RowBox[{"i", ",", 
            RowBox[{
             RowBox[{"Length", "[", "maxxs", "]"}], "-", "1"}]}], "}"}]}], 
         "]"}]}], "]"}], ";", "\[IndentingNewLine]", 
      RowBox[{"maxxs", "=", 
       RowBox[{"Delete", "[", 
        RowBox[{"maxxs", ",", "bad"}], "]"}]}], ";", 
      RowBox[{"maxxis", "=", 
       RowBox[{"Sort", "[", 
        RowBox[{"Table", "[", 
         RowBox[{
          RowBox[{
           RowBox[{"Position", "[", 
            RowBox[{
             RowBox[{"input", "[", 
              RowBox[{"[", 
               RowBox[{"All", ",", "1"}], "]"}], "]"}], ",", 
             RowBox[{
              RowBox[{"Nearest", "[", 
               RowBox[{
                RowBox[{"input", "[", 
                 RowBox[{"[", 
                  RowBox[{"All", ",", "1"}], "]"}], "]"}], ",", 
                RowBox[{"maxxs", "[", 
                 RowBox[{"[", "i", "]"}], "]"}]}], "]"}], "[", 
              RowBox[{"[", "1", "]"}], "]"}]}], "]"}], "[", 
           RowBox[{"[", 
            RowBox[{"1", ",", "1"}], "]"}], "]"}], ",", 
          RowBox[{"{", 
           RowBox[{"i", ",", 
            RowBox[{"Length", "[", "maxxs", "]"}]}], "}"}]}], "]"}], "]"}]}], 
      ";", "\[IndentingNewLine]", 
      RowBox[{"bad", "=", 
       RowBox[{"{", "}"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"Do", "[", 
       RowBox[{
        RowBox[{"If", "[", 
         RowBox[{
          RowBox[{"Or", "[", 
           RowBox[{
            RowBox[{
             RowBox[{"input", "[", 
              RowBox[{"[", 
               RowBox[{
                RowBox[{
                 RowBox[{"maxxis", "[", 
                  RowBox[{"[", "i", "]"}], "]"}], "-", "30"}], ",", "2"}], 
               "]"}], "]"}], ">", 
             RowBox[{"input", "[", 
              RowBox[{"[", 
               RowBox[{
                RowBox[{"maxxis", "[", 
                 RowBox[{"[", "i", "]"}], "]"}], ",", "2"}], "]"}], "]"}]}], 
            ",", 
            RowBox[{
             RowBox[{"input", "[", 
              RowBox[{"[", 
               RowBox[{
                RowBox[{
                 RowBox[{"maxxis", "[", 
                  RowBox[{"[", "i", "]"}], "]"}], "+", "30"}], ",", "2"}], 
               "]"}], "]"}], ">", 
             RowBox[{"input", "[", 
              RowBox[{"[", 
               RowBox[{
                RowBox[{"maxxis", "[", 
                 RowBox[{"[", "i", "]"}], "]"}], ",", "2"}], "]"}], "]"}]}]}],
            "]"}], ",", 
          RowBox[{"bad", "=", 
           RowBox[{"Append", "[", 
            RowBox[{"bad", ",", 
             RowBox[{"{", "i", "}"}]}], "]"}]}]}], "]"}], ",", 
        RowBox[{"{", 
         RowBox[{"i", ",", 
          RowBox[{"Length", "[", "maxxis", "]"}]}], "}"}]}], "]"}], ";", 
      RowBox[{"maxxs", "=", 
       RowBox[{"Delete", "[", 
        RowBox[{"maxxs", ",", "bad"}], "]"}]}], ";", 
      RowBox[{"maxxis", "=", 
       RowBox[{"Delete", "[", 
        RowBox[{"maxxis", ",", "bad"}], "]"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"maxys", "=", 
       RowBox[{"Table", "[", 
        RowBox[{
         RowBox[{"input", "[", 
          RowBox[{"[", 
           RowBox[{
            RowBox[{"maxxis", "[", 
             RowBox[{"[", "i", "]"}], "]"}], ",", "2"}], "]"}], "]"}], ",", 
         RowBox[{"{", 
          RowBox[{"i", ",", 
           RowBox[{"Length", "[", "maxxs", "]"}]}], "}"}]}], "]"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"If", "[", 
       RowBox[{
        RowBox[{
         RowBox[{"Length", "[", "maxxs", "]"}], ">", "1"}], ",", 
        "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{"mins", "=", 
          RowBox[{"Range", "[", 
           RowBox[{
            RowBox[{"Length", "[", "maxxs", "]"}], "-", "1"}], "]"}]}], ";", 
         "\[IndentingNewLine]", 
         RowBox[{"Do", "[", 
          RowBox[{
           RowBox[{
            RowBox[{"mins", "[", 
             RowBox[{"[", "i", "]"}], "]"}], "=", 
            RowBox[{
             RowBox[{"Position", "[", 
              RowBox[{
               RowBox[{"input", "[", 
                RowBox[{"[", 
                 RowBox[{"All", ",", "2"}], "]"}], "]"}], ",", 
               RowBox[{"Min", "[", 
                RowBox[{"input", "[", 
                 RowBox[{"[", 
                  RowBox[{
                   RowBox[{
                    RowBox[{"maxxis", "[", 
                    RowBox[{"[", "i", "]"}], "]"}], ";;", 
                    RowBox[{"maxxis", "[", 
                    RowBox[{"[", 
                    RowBox[{"i", "+", "1"}], "]"}], "]"}]}], ",", "2"}], 
                  "]"}], "]"}], "]"}]}], "]"}], "[", 
             RowBox[{"[", 
              RowBox[{"1", ",", "1"}], "]"}], "]"}]}], ",", 
           RowBox[{"{", 
            RowBox[{"i", ",", 
             RowBox[{
              RowBox[{"Length", "[", "maxxs", "]"}], "-", "1"}]}], "}"}]}], 
          "]"}], ";", 
         RowBox[{"mins", "=", 
          RowBox[{"Append", "[", 
           RowBox[{
            RowBox[{"Prepend", "[", 
             RowBox[{"mins", ",", 
              RowBox[{
               RowBox[{"maxxis", "[", 
                RowBox[{"[", "1", "]"}], "]"}], "-", 
               RowBox[{"(", 
                RowBox[{
                 RowBox[{"mins", "[", 
                  RowBox[{"[", "1", "]"}], "]"}], "-", 
                 RowBox[{"maxxis", "[", 
                  RowBox[{"[", "1", "]"}], "]"}]}], ")"}]}]}], "]"}], ",", 
            RowBox[{"If", "[", 
             RowBox[{
              RowBox[{
               RowBox[{
                RowBox[{"maxxis", "[", 
                 RowBox[{"[", 
                  RowBox[{"-", "1"}], "]"}], "]"}], "+", 
                RowBox[{"(", 
                 RowBox[{
                  RowBox[{"maxxis", "[", 
                   RowBox[{"[", 
                    RowBox[{"-", "1"}], "]"}], "]"}], "-", 
                  RowBox[{"mins", "[", 
                   RowBox[{"[", 
                    RowBox[{"-", "1"}], "]"}], "]"}]}], ")"}]}], 
               "\[LessEqual]", " ", 
               RowBox[{"Length", "[", "input", "]"}]}], ",", 
              RowBox[{
               RowBox[{"maxxis", "[", 
                RowBox[{"[", 
                 RowBox[{"-", "1"}], "]"}], "]"}], "+", 
               RowBox[{"(", 
                RowBox[{
                 RowBox[{"maxxis", "[", 
                  RowBox[{"[", 
                   RowBox[{"-", "1"}], "]"}], "]"}], "-", 
                 RowBox[{"mins", "[", 
                  RowBox[{"[", 
                   RowBox[{"-", "1"}], "]"}], "]"}]}], ")"}]}], ",", 
              RowBox[{"Length", "[", "input", "]"}]}], "]"}]}], "]"}]}], 
         ";"}], ",", "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{"hwhmi", "=", 
          RowBox[{
           RowBox[{"Position", "[", 
            RowBox[{"input", ",", 
             RowBox[{
              RowBox[{"Nearest", "[", 
               RowBox[{
                RowBox[{"input", "[", 
                 RowBox[{"[", 
                  RowBox[{
                   RowBox[{";;", "maxyi"}], ",", "2"}], "]"}], "]"}], ",", 
                RowBox[{"maxy", "/", "2"}]}], "]"}], "[", 
              RowBox[{"[", "1", "]"}], "]"}]}], "]"}], "[", 
           RowBox[{"[", 
            RowBox[{"1", ",", "1"}], "]"}], "]"}]}], ";", 
         "\[IndentingNewLine]", 
         RowBox[{"mins", "=", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"maxyi", "-", 
             RowBox[{"3", 
              RowBox[{"(", 
               RowBox[{"maxyi", "-", "hwhmi"}], ")"}]}]}], ",", 
            RowBox[{"If", "[", 
             RowBox[{
              RowBox[{
               RowBox[{"maxyi", "+", 
                RowBox[{"3", 
                 RowBox[{"(", 
                  RowBox[{"maxyi", "-", "hwhmi"}], ")"}]}]}], "\[LessEqual]", 
               
               RowBox[{"Length", "[", "input", "]"}]}], ",", 
              RowBox[{"maxyi", "+", 
               RowBox[{"3", 
                RowBox[{"(", 
                 RowBox[{"maxyi", "-", "hwhmi"}], ")"}]}]}], ",", 
              RowBox[{"Length", "[", "input", "]"}]}], "]"}]}], "}"}]}], 
         ";"}]}], "]"}], ";", "\[IndentingNewLine]", 
      RowBox[{"If", "[", 
       RowBox[{
        RowBox[{
         RowBox[{"mins", "[", 
          RowBox[{"[", "1", "]"}], "]"}], "<", "0"}], ",", 
        RowBox[{
         RowBox[{"mins", "[", 
          RowBox[{"[", "1", "]"}], "]"}], "=", "1"}]}], "]"}], ";", "\n", 
      RowBox[{"hwhmi", "=", 
       RowBox[{"Range", "[", 
        RowBox[{"Length", "[", "maxxs", "]"}], "]"}]}], ";", "\n", 
      RowBox[{"Do", "[", 
       RowBox[{
        RowBox[{
         RowBox[{"hwhmi", "[", 
          RowBox[{"[", "i", "]"}], "]"}], "=", 
         RowBox[{
          RowBox[{"Position", "[", 
           RowBox[{"input", ",", 
            RowBox[{
             RowBox[{"Nearest", "[", 
              RowBox[{
               RowBox[{"input", "[", 
                RowBox[{"[", 
                 RowBox[{
                  RowBox[{
                   RowBox[{"mins", "[", 
                    RowBox[{"[", "i", "]"}], "]"}], ";;", 
                   RowBox[{"maxxis", "[", 
                    RowBox[{"[", "i", "]"}], "]"}]}], ",", "2"}], "]"}], 
                "]"}], ",", 
               RowBox[{
                RowBox[{"inter", "[", 
                 RowBox[{"maxxs", "[", 
                  RowBox[{"[", "i", "]"}], "]"}], "]"}], "/", "2"}]}], "]"}], 
             "[", 
             RowBox[{"[", "1", "]"}], "]"}]}], "]"}], "[", 
          RowBox[{"[", 
           RowBox[{"1", ",", "1"}], "]"}], "]"}]}], ",", 
        RowBox[{"{", 
         RowBox[{"i", ",", 
          RowBox[{"Length", "[", "maxxs", "]"}]}], "}"}]}], "]"}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"gammas", "=", 
       RowBox[{"Range", "[", 
        RowBox[{"Length", "[", "hwhmi", "]"}], "]"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"Do", "[", 
       RowBox[{
        RowBox[{
         RowBox[{"gammas", "[", 
          RowBox[{"[", "i", "]"}], "]"}], "=", 
         RowBox[{"2", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"maxxs", "[", 
             RowBox[{"[", "i", "]"}], "]"}], "-", 
            RowBox[{"input", "[", 
             RowBox[{"[", 
              RowBox[{
               RowBox[{"hwhmi", "[", 
                RowBox[{"[", "i", "]"}], "]"}], ",", "1"}], "]"}], "]"}]}], 
           ")"}]}]}], ",", 
        RowBox[{"{", 
         RowBox[{"i", ",", 
          RowBox[{"Length", "[", "hwhmi", "]"}]}], "}"}]}], "]"}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"inputc", "=", 
       RowBox[{"Range", "[", 
        RowBox[{"Length", "[", "maxxs", "]"}], "]"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"Do", "[", 
       RowBox[{
        RowBox[{
         RowBox[{"inputc", "[", 
          RowBox[{"[", "i", "]"}], "]"}], "=", 
         RowBox[{"input", "[", 
          RowBox[{"[", 
           RowBox[{
            RowBox[{"If", "[", 
             RowBox[{
              RowBox[{"i", "\[GreaterEqual]", "2"}], ",", 
              RowBox[{"If", "[", 
               RowBox[{
                RowBox[{
                 RowBox[{
                  RowBox[{"maxxis", "[", 
                   RowBox[{"[", "i", "]"}], "]"}], "-", 
                  RowBox[{"3", 
                   RowBox[{"(", 
                    RowBox[{
                    RowBox[{"maxxis", "[", 
                    RowBox[{"[", "i", "]"}], "]"}], "-", 
                    RowBox[{"hwhmi", "[", 
                    RowBox[{"[", "i", "]"}], "]"}]}], ")"}]}]}], "<", 
                 RowBox[{"mins", "[", 
                  RowBox[{"[", "i", "]"}], "]"}]}], ",", 
                RowBox[{"mins", "[", 
                 RowBox[{"[", "i", "]"}], "]"}], ",", 
                RowBox[{
                 RowBox[{"maxxis", "[", 
                  RowBox[{"[", "i", "]"}], "]"}], "-", 
                 RowBox[{"3", 
                  RowBox[{"(", 
                   RowBox[{
                    RowBox[{"maxxis", "[", 
                    RowBox[{"[", "i", "]"}], "]"}], "-", 
                    RowBox[{"hwhmi", "[", 
                    RowBox[{"[", "i", "]"}], "]"}]}], ")"}]}]}]}], "]"}], ",", 
              RowBox[{"If", "[", 
               RowBox[{
                RowBox[{
                 RowBox[{
                  RowBox[{"maxxis", "[", 
                   RowBox[{"[", "i", "]"}], "]"}], "-", 
                  RowBox[{"3", 
                   RowBox[{"(", 
                    RowBox[{
                    RowBox[{"maxxis", "[", 
                    RowBox[{"[", "i", "]"}], "]"}], "-", 
                    RowBox[{"hwhmi", "[", 
                    RowBox[{"[", "i", "]"}], "]"}]}], ")"}]}]}], ">", "0"}], 
                ",", 
                RowBox[{
                 RowBox[{"maxxis", "[", 
                  RowBox[{"[", "i", "]"}], "]"}], "-", 
                 RowBox[{"3", 
                  RowBox[{"(", 
                   RowBox[{
                    RowBox[{"maxxis", "[", 
                    RowBox[{"[", "i", "]"}], "]"}], "-", 
                    RowBox[{"hwhmi", "[", 
                    RowBox[{"[", "i", "]"}], "]"}]}], ")"}]}]}], ",", "1"}], 
               "]"}]}], "]"}], ";;", 
            RowBox[{"If", "[", 
             RowBox[{
              RowBox[{
               RowBox[{
                RowBox[{"maxxis", "[", 
                 RowBox[{"[", "i", "]"}], "]"}], "+", 
                RowBox[{"3", 
                 RowBox[{"(", 
                  RowBox[{
                   RowBox[{"maxxis", "[", 
                    RowBox[{"[", "i", "]"}], "]"}], "-", 
                   RowBox[{"hwhmi", "[", 
                    RowBox[{"[", "i", "]"}], "]"}]}], ")"}]}]}], "<", 
               RowBox[{"mins", "[", 
                RowBox[{"[", 
                 RowBox[{"i", "+", "1"}], "]"}], "]"}]}], ",", 
              RowBox[{
               RowBox[{"maxxis", "[", 
                RowBox[{"[", "i", "]"}], "]"}], "+", 
               RowBox[{"3", 
                RowBox[{"(", 
                 RowBox[{
                  RowBox[{"maxxis", "[", 
                   RowBox[{"[", "i", "]"}], "]"}], "-", 
                  RowBox[{"hwhmi", "[", 
                   RowBox[{"[", "i", "]"}], "]"}]}], ")"}]}]}], ",", 
              RowBox[{"mins", "[", 
               RowBox[{"[", 
                RowBox[{"i", "+", "1"}], "]"}], "]"}]}], "]"}]}], "]"}], 
          "]"}]}], ",", 
        RowBox[{"{", 
         RowBox[{"i", ",", 
          RowBox[{"Length", "[", "maxxs", "]"}]}], "}"}]}], "]"}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"temp", "=", 
       RowBox[{"Range", "[", 
        RowBox[{"Length", "[", "hwhmi", "]"}], "]"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"Do", "[", 
       RowBox[{
        RowBox[{
         RowBox[{"temp", "[", 
          RowBox[{"[", "i", "]"}], "]"}], "=", 
         RowBox[{"NonlinearModelFit", "[", 
          RowBox[{
           RowBox[{"inputc", "[", 
            RowBox[{"[", "i", "]"}], "]"}], ",", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{"BW", "[", 
              RowBox[{
              "x", ",", "wr", ",", "\[CapitalGamma]", ",", "\[Delta]bg", ",", 
               "const", ",", "shift", ",", "shift2"}], "]"}], ",", 
             RowBox[{"const", ">", "0"}], ",", 
             RowBox[{"\[CapitalGamma]", ">", "0"}]}], "}"}], ",", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{"{", 
              RowBox[{"wr", ",", 
               RowBox[{"maxxs", "[", 
                RowBox[{"[", "i", "]"}], "]"}]}], "}"}], ",", 
             RowBox[{"{", 
              RowBox[{"\[CapitalGamma]", ",", 
               RowBox[{"gammas", "[", 
                RowBox[{"[", "i", "]"}], "]"}]}], "}"}], ",", 
             RowBox[{"{", 
              RowBox[{"const", ",", 
               RowBox[{"maxys", "[", 
                RowBox[{"[", "i", "]"}], "]"}]}], "}"}], ",", 
             RowBox[{"{", 
              RowBox[{"\[Delta]bg", ",", "0.0"}], "}"}], ",", 
             RowBox[{"{", 
              RowBox[{"shift", ",", "0.0"}], "}"}], ",", 
             RowBox[{"{", 
              RowBox[{"shift2", ",", "0.0"}], "}"}]}], "}"}], ",", "x", ",", 
           RowBox[{"MaxIterations", "\[Rule]", "1000"}]}], "]"}]}], ",", 
        RowBox[{"{", 
         RowBox[{"i", ",", 
          RowBox[{"Length", "[", "hwhmi", "]"}]}], "}"}]}], "]"}], ";", 
      RowBox[{"output", "=", "temp"}], ";"}]}], "]"}]}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"store", "[", 
     RowBox[{"param_", ",", "res_", ",", "model_", ",", "pT_"}], "]"}], ":=", 
    
    RowBox[{"Module", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"temp", "=", 
        RowBox[{"ToString", "[", "res", "]"}]}], "}"}], ",", 
      RowBox[{
       RowBox[{"res", "=", 
        RowBox[{"Range", "[", 
         RowBox[{"Length", "[", "model", "]"}], "]"}]}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{"Do", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"res", "[", 
           RowBox[{"[", "i", "]"}], "]"}], "=", 
          RowBox[{"param", "/.", 
           RowBox[{
            RowBox[{"model", "[", 
             RowBox[{"[", "i", "]"}], "]"}], "[", "\"\<BestFitParameters\>\"",
             "]"}]}]}], ",", 
         RowBox[{"{", 
          RowBox[{"i", ",", 
           RowBox[{"Length", "[", "res", "]"}]}], "}"}]}], "]"}], ";", 
       RowBox[{"Export", "[", 
        RowBox[{
         RowBox[{"\"\<results/par/\>\"", 
          RowBox[{
           RowBox[{"ToString", "[", "pT", "]"}], "<>", "temp", "<>", 
           "\"\<.dat\>\""}]}], ",", "res"}], "]"}], ";"}]}], "]"}]}], ";"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"storearea", "[", 
     RowBox[{"res_", ",", "model_", ",", "pT_"}], "]"}], ":=", 
    RowBox[{"Module", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"temp", "=", 
        RowBox[{"ToString", "[", "res", "]"}]}], "}"}], ",", 
      RowBox[{
       RowBox[{"res", "=", 
        RowBox[{"Range", "[", 
         RowBox[{"Length", "[", "model", "]"}], "]"}]}], ";", 
       RowBox[{"Do", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"res", "[", 
           RowBox[{"[", "i", "]"}], "]"}], "=", 
          RowBox[{
           FractionBox["\[Pi]", "2"], 
           RowBox[{"(", 
            RowBox[{"\[CapitalGamma]", "/.", 
             RowBox[{
              RowBox[{"model", "[", 
               RowBox[{"[", "i", "]"}], "]"}], "[", 
              "\"\<BestFitParameters\>\"", "]"}]}], ")"}], 
           RowBox[{"(", " ", 
            RowBox[{"const", "/.", 
             RowBox[{
              RowBox[{"model", "[", 
               RowBox[{"[", "i", "]"}], "]"}], "[", 
              "\"\<BestFitParameters\>\"", "]"}]}], ")"}]}]}], ",", 
         RowBox[{"{", 
          RowBox[{"i", ",", 
           RowBox[{"Length", "[", "res", "]"}]}], "}"}]}], "]"}], ";", 
       RowBox[{"Export", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"\"\<results/par/pT\>\"", "<>", 
           RowBox[{"ToString", "[", "pT", "]"}], "<>", "temp"}], 
          "\"\<.dat\>\""}], ",", "res"}], "]"}], ";"}]}], "]"}]}], ";"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"import", "[", 
    RowBox[{"res_", ",", "pT_"}], "]"}], ":=", 
   RowBox[{"res", "=", 
    RowBox[{"Import", "[", 
     RowBox[{"\"\<results/par/\>\"", "<>", 
      RowBox[{"ToString", "[", "pT", "]"}], "<>", 
      RowBox[{"ToString", "[", "res", "]"}], "<>", "\"\<.dat\>\""}], 
     "]"}]}]}], ";"}]}], "Input",
 CellChangeTimes->{{3.725011819995084*^9, 3.725011822739936*^9}, {
   3.7277029516093273`*^9, 3.7277029707983103`*^9}, {3.72770377220212*^9, 
   3.727703774851506*^9}, {3.727704183456113*^9, 3.727704235986051*^9}, {
   3.727704293099452*^9, 3.7277043013170643`*^9}, {3.727704650937663*^9, 
   3.7277046563118553`*^9}, {3.7277047089071817`*^9, 3.727704722605954*^9}, {
   3.7277593468476477`*^9, 3.72775937353994*^9}, {3.727767951399776*^9, 
   3.7277679609665327`*^9}, {3.727786365837351*^9, 3.7277863661113586`*^9}, {
   3.7277876777187643`*^9, 3.727787689465622*^9}, {3.72784572190436*^9, 
   3.7278457561920156`*^9}, {3.727845811991851*^9, 3.727845812747995*^9}, {
   3.727845884529807*^9, 3.7278459276116*^9}, 3.727942661840372*^9, 
   3.727943172599392*^9, 3.727943318747197*^9, 3.727943484079109*^9, {
   3.727943910169404*^9, 3.727943913531708*^9}, {3.727944406421103*^9, 
   3.727944434023428*^9}, {3.727944642717669*^9, 3.727944652632021*^9}, {
   3.727944696805109*^9, 3.727944714237059*^9}, {3.727944857864943*^9, 
   3.727944943236537*^9}, {3.727945112002225*^9, 3.727945153556973*^9}, {
   3.7279465536173477`*^9, 3.727946576509602*^9}, {3.7279466219931993`*^9, 
   3.727946641020568*^9}, {3.727946745022765*^9, 3.7279467510016947`*^9}, {
   3.727948915813862*^9, 3.7279489220518103`*^9}, {3.727950853888091*^9, 
   3.727950855689782*^9}, {3.7279510545527267`*^9, 3.72795105953828*^9}, {
   3.727951246850439*^9, 3.727951258187858*^9}, {3.727951425412133*^9, 
   3.7279514307077436`*^9}, {3.727953623055787*^9, 3.727953626390915*^9}, 
   3.72795366203069*^9, {3.7279537225963783`*^9, 3.727953726617856*^9}, {
   3.727971101664791*^9, 3.727971105199127*^9}, {3.728011848410287*^9, 
   3.728011850788999*^9}, {3.728029731549341*^9, 3.728029761112349*^9}, {
   3.728052836065872*^9, 3.728052836664957*^9}, {3.728052982785912*^9, 
   3.7280529955647783`*^9}, {3.7280569478616657`*^9, 
   3.7280569604976397`*^9}, {3.7281028074097033`*^9, 
   3.7281028134452477`*^9}, {3.728114140884417*^9, 3.728114141976523*^9}, {
   3.728114191643759*^9, 3.7281142098598423`*^9}, {3.7281196714668207`*^9, 
   3.728119673841776*^9}, {3.728119709731044*^9, 3.728119744682604*^9}, 
   3.7281200289127502`*^9, {3.728120100939199*^9, 3.728120213460887*^9}, {
   3.728120354706056*^9, 3.7281204271928177`*^9}, {3.728120767910965*^9, 
   3.728120773809227*^9}, {3.728121918899763*^9, 3.728121922795506*^9}, {
   3.7281258608721027`*^9, 3.728125884184536*^9}, 3.728125981202344*^9, {
   3.7281314407612658`*^9, 3.728131447169196*^9}, {3.728131583460206*^9, 
   3.7281315859399033`*^9}, 3.728136871222497*^9, {3.733047794520813*^9, 
   3.7330478032220993`*^9}, {3.733048347176607*^9, 3.733048365643635*^9}, {
   3.7334588769411993`*^9, 3.733458887750147*^9}, {3.733463834816124*^9, 
   3.73346384694232*^9}, 3.733475403391897*^9, {3.733483354962577*^9, 
   3.733483367644465*^9}, 3.733483410112524*^9, {3.743766043857224*^9, 
   3.743766050772669*^9}, {3.7437661984151*^9, 3.7437661998625927`*^9}, {
   3.7437662502422028`*^9, 3.743766276321958*^9}, {3.745381707796076*^9, 
   3.745381736594418*^9}, {3.745381844997349*^9, 3.745381850348784*^9}, {
   3.7456021906057167`*^9, 3.745602199698488*^9}, {3.746074558196645*^9, 
   3.74607456890853*^9}, {3.7460748831207237`*^9, 3.746074901632012*^9}, {
   3.746349235340336*^9, 3.746349239141835*^9}, {3.747200645231229*^9, 
   3.747200649387951*^9}, {3.747886690619404*^9, 3.747886699125519*^9}, 
   3.7479347748373947`*^9, {3.754165153509651*^9, 3.754165202142518*^9}, {
   3.754165249427388*^9, 3.754165276872505*^9}, {3.754165340674152*^9, 
   3.754165347748952*^9}, {3.754165460514566*^9, 3.754165462487852*^9}, {
   3.754166225004891*^9, 3.754166265330785*^9}, {3.754205422570629*^9, 
   3.75420546693386*^9}, {3.758211666220532*^9, 3.7582118057759647`*^9}, {
   3.758213315225675*^9, 3.7582133170992947`*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell["Perform fitting", "Subsection",
 CellChangeTimes->{{3.758213324471237*^9, 3.758213329591319*^9}, {
  3.758213386644705*^9, 3.758213388500249*^9}}],

Cell[BoxData[{
 RowBox[{
  RowBox[{"pT", "=", "2"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"ang", "=", 
   RowBox[{"Table", "[", 
    RowBox[{"i", ",", 
     RowBox[{"{", 
      RowBox[{"i", ",", "0", ",", "\[Pi]", ",", 
       RowBox[{"\[Pi]", "/", "50"}]}], "}"}]}], "]"}]}], ";"}]}], "Input",
 CellChangeTimes->{{3.758212605017861*^9, 3.7582126082721233`*^9}, {
  3.758212689544549*^9, 3.75821269125163*^9}, {3.758212915864624*^9, 
  3.758212972172599*^9}, {3.758213047374237*^9, 3.758213047694623*^9}, {
  3.7582130788043833`*^9, 3.758213164924611*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"Do", "[", 
   RowBox[{
    RowBox[{
     RowBox[{
      RowBox[{"ccdata", "[", "i", "]"}], "=", 
      RowBox[{"Import", "[", 
       RowBox[{"\"\<cc/par/pT\>\"", "<>", 
        RowBox[{"ToString", "[", "pT", "]"}], "<>", "\"\</swccpT\>\"", "<>", 
        RowBox[{"ToString", "[", "pT", "]"}], "<>", "\"\<ang\>\"", "<>", 
        RowBox[{"ToString", "[", "i", "]"}], "<>", 
        "\"\<spectraJpsi.dat\>\""}], "]"}]}], ";"}], ",", 
    RowBox[{"{", 
     RowBox[{"i", ",", 
      RowBox[{"Length", "[", "ang", "]"}]}], "}"}]}], "]"}], ";"}]], "Input",
 CellChangeTimes->{{3.75821261402328*^9, 3.758212715857522*^9}, 
   3.7582127896035967`*^9}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Block", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"i", "=", "1"}], "}"}], ",", 
   RowBox[{"ListPlot", "[", 
    RowBox[{
     RowBox[{"ccdata", "[", "i", "]"}], ",", 
     RowBox[{"Joined", "\[Rule]", "True"}]}], "]"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.758212795422409*^9, 3.758212876106709*^9}, {
  3.758213176853167*^9, 3.758213184675618*^9}}],

Cell[BoxData[
 GraphicsBox[{{}, {{}, {}, 
    {RGBColor[0.368417, 0.506779, 0.709798], PointSize[0.002777777777777778], 
     AbsoluteThickness[1.6], LineBox[CompressedData["
1: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
82jkf7/FL6I=
      "]], LineBox[CompressedData["
1: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
xv76/F/Ey3QGuE8u+NqDzq05qLbtNe7vqvt/Xy3BelP5QqnwLe7vR+5yFUrx
fNYHKvNyGeB4u2EgH71UodQj8hPu78Wyc1ZlVCK+ckD+TBHu7yP2C/rRL5dl
UXZ9xf191SO58K94/kfWLZapxP39YMtapW84D+x+U6Zcg/v7jdWbCtA/mtK2
DvzG/f3TqZ025TifeMv0hdJxf+/LsBr8v8X5lrxsxP1dYdA5ooJKTia0nJFv
wf3dQvuM8ncqETMPvpHegft7qF/wF7QnT/vbxV7c33PyI20rqSRmG3N6/hDu
7x0zCcNoo2qzz5V/cX+XJS8if2C9Hr/YKTbLgNV7QvNWV+E8zpJSNRBggtLF
b1+L0Nsiq/8NzmeCfCal3u4nlThNL18ns5AJcty9vFH0DrO3tbaSTJBeFD0Y
VY3f16/RoC7DBMmdv+fW1lDJtJ7TcfoyJoj6Sy8sRS+eIloPlZhAfXFo6ZFa
rNdXg+rc1jJhHitx3V90XbfDu/vqTOBfyNl0p45KjloxC9u0mTBruNJY9ReV
nLPYbBi/mQlTZ1wPfEVrxu/qtDZkwtiTFy6Ov6mErl79hbeDCUP1vWcm0cFb
uD/jTJnQN0/z0t16KhkNau/O3c+Ezs0+t9T/w/dd6K7ka8OENrfch+VofyGH
yDY7JnATJ184N1AJ1Xj7am0XJrCrDT5Mo89k95conWQCne/yt3t/ML5uLjv+
z4MJ9Vql9evpVBIUTc1S82VC7bF5Ld/RlIexy90DmVAVZzJ0lIH73HXF3fnB
TKioiPw3i36maKuQfI0JZVM1C+OZGI/R/wILI5lQpLZomRYL99NlWWG/7zKh
wMFGpQrdab7s1th9JnyIfrDZlY3z2q3gRZuTmfC+hG3M14j183D16vXPmZA1
qmCdgH5ZLrwnMoMJGauPHtVpwvM+ds965B0T0m2fn61GPyisWmCVz4SnEV2X
Tjbj/vf8MFlVxIRHBWpRAhyMrwepK3K+MiGx3ysxEf3fwBf5zT+ZEK+Y/VKX
SyWGqf31ab+YEGs5/qEWnSYQYu/OYEJ0mF65Gw///1wDL4XLhMjcC/8JtVBJ
su5EcEQ7E8I7C1uSW/4f7yPpz/qZEConOLy5FefnQc0kjTEmXNprzPcbHeW+
ix4zy4QLwTdEPdqopOBtDsNAkAX+WVXL5rdTSeWqSn9BKgt8eGKqj9EUh8Pi
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
odDN9/AAOkG57gnHnQn58flB4VQK6W/SHiv3ZcLjN/SLClIU0nHjjljdaSY8
ZK5JKkJ37bnC7I9kQqZGUNZ2aQrp7va9/DyeCXd2lj8bQjeyCqmNaUxIvfK3
KnIehUzB8jaxR0xIKif1S2QoxNpcr7WnkAkJYxc6StARn0S3qVQxIVa5dth+
PoUcqJwvOuszE67YS/BG0OUKs2qPtjEhKtJW7KIshUwOdS8mfUwIL0pYoLKA
QrzMtLs9aUwIHWj+rwx96g+9da2ACWfk5VY5LqSQFB+3XWQOC05Z74Zx9B//
TZ1ZsiwICL1re3kRfv6hMo2hwgK/gt971OQoRHQ8sEtZhwU+v9V9K9CswOuP
LY1Y4DX/0BlneQrZk3h7Z4kpCzxMcy/R0DYMw/Bqexa4nR5Pil5MIcwjx668
d2PBrhz9++oKFNLSM+jgcJgFTu0nn1ei47Ueq74PZIE9pfS1iyL+fV/Jbu0I
Fths5tcz0HV7laxM41lgGbDp19UlFDLeJLtvaxoLTLLCR5YqUcgDbxe7jGwW
QMs73mt07JMXLz8VsmCj2Jw5u5UpRE+PvWL+axYYGVkvZKO7XxoohH9mgYFv
nHq8CoXoSG/8+LuNBXp3vq3SUqUQ80T+b7k/LNBukCXV6LHFVp7X6CzQFHLZ
7qZGITLvn4g2TbNAfXWaGxe90MnAvlOcDcpenb4J/1FI3HzlXxEL2aCQohq8
Qp1CBkPF1fvV2LDoo+fl92h3p8NZa3TZMJ+fneyuQSEUoSyfsA1skNYZuc9D
2+a4TRlasEHSfWVh4lIKGXg7N8PUkQ1iCQFvdJZRyN2mjeYv9rFBuPpFQw16
aD1nD/ixYYbF/eWhSSE5B2ZsZoLYwF+6YZSPVtm/VVryIhu4LmFTSVqYt4/r
YrdeZwMz+s0cveUUUs9+tSPtLhsmKkQWfUIv/aSUcDyXDSPj5hqeKyjk5jqV
mMwSNgyoxKz+i17rlLQooZoNvTvqyU1tCnlqHfTe4isbui7Ms1ulg/kSqz6f
38GG9mLHvZ/RcXmJKSJDbGgdTDlycCWF3NM/bX+MzYamxe3B/9Db9g/5nRfi
QMM2pSu3dClknQrLX4PKgbowj5Q1ehSy+fZTbYnFHPjw9P6DejS/Ss8nYikH
3vYMFB7Sp5DcDhMxw9UcqJJd8XbWKgr5YH9B+9BmDpSbHf16G2202eVHkTUH
SoKeda5dTSFnpS7n+btwoPAxa/QrWmOBTtEcLw7kd6zjH16D76fnSKdfAAce
U8+KixpQyDX5/4Q2hnLgIVQuSkc/P/BHZdsVDmQcF1pqtJZCwm2sLUSTOXDn
vsmaJvSN9UUmlEwOpH6/tMVvHYXAgf4lsgUcSJ5TZydmiOd5buHMkzIOXF9P
dc9As1pbzwjVcCDuiL3fBiMKebyJrtnZyIErd2+cbUFvNhfOudHFgaivrVf8
11OI93yegDXCgfBZCjfFN1CIi1ql8spJDoSu2fswC+32fOSfhwgXzhzMeGG8
kUKiVird+CjNhVM3+962om+kWou+UuRCwKdl3wKM8TwOlVp+1+SCn+Bwl8Qm
CvlHNlV+WsMFn5X5Yw/Qy++FHz5IuOC1j87fvJlCtv9utr1rwwWP62vm/kSL
vviRv38XF9zenZY7CRRin8LpiPbiwi5O2VIqoZCkRkHQvQAuOGn+XfMIffdc
zYPcUC7Yu5KtW7bg82yqesi6wgWbqxfsO9APBv/ZmyRxwaKyxj1wK4UUuTR+
PZXBBRPa3KPSJlgv6DtVk/K4QNRsQx6jPYV1tfe+5IKxY0K0iSmFrJ6ltl7o
AxeMLjbf7EQnZrPe/P3KBYPSRdlBZhSyckcxjdvBBb1h1yIZcwqptQ5M2znI
BW3Fu9VP0D8oPXNesrigafv7m5kFvo8EPYe2f1xQP6/e3Y1OijzyL0tyEpSf
e48HW2J/aMs+KiE3CQp9jwWyVhRCpMP38v+bBLmF43ML0A8+pv69pTsJshb6
8pbWFOLEW/F47oZJkA4+uawXLS5UVLvFfBIknpQYhG6jELWYUvfBHZMg1jm1
dZENhdDezPlYsncShKU37XiGfvhVv6jNZxJmSPg+a1sKsVQ7FxR4ahL4J94d
/YM+U7x765Xzk8B9IBZ6bjveh4xxi11XJ4HZahUjb0chMXNfSEvcnIQJ8bjU
QvSxdY+Y2lmTMLLhW7aNPYXc/tcy5Jk/CQN+ssUD6PRnT4d/vJyE3vSd78J3
YP0T/Ty89P0kdH271ajggO8jxLas5OsktAt3dhehV3QU2Qe1T0KrgerEdkcK
mZ0d1+bRPwlN3p7TQ+iRr3ry1+mT0JCaLXHBiUJ+bn+kojQ9CXV1w/JKzhQS
GLzb2HcOD2qmdTRL0VLxvFS6DA+qdQPW7tiJ80mf+EXeEh5UebwwGUW72Wza
cFuLB+WJ3B0XXSjkc3a815o1PCh5v95DZRfOK+N1/j2bePCcG+pfhtayGY8+
asmDfK03oY6u+P5UXi7yd+TB490iV8fRF2UHTxq48+BhrPmty7vxPpV5d5f4
8CCjKvqR2h7s35Onn7af5EE6/UtxBXrv+ivTIWE8uPXfvPfObhSiumeIGnOF
B8lOjk00dOB3+dSniTy4finld/ReCgkuaNCtvcuD2Jc/J9TdKeR0RnCQeA4P
rows+VuJnkUr6BMt5EHUEg/JXfsohNu9iK/7igfh2+8vZqJtUu7nO9XyIDR8
QDPWA+ctrWULtRp5cKZw+bpl+ykkw0W9/XwHD0798TN9gw6IPzpd38+DgEXP
HHYfoJDLUe4Wc2k88LNkebDRL8zjnNhTPPA5u+5YvCc+b67wf84iU+CVFxym
5UUhbb9dj+2mToFH16ur1eixnTHzi+WmwG2eUJrbQQrJtOFZfVKdgl1bTXK4
6FmWbInCFVPgdOpSSYI3hShLENe+NVNgn/3p/YpDFFI6WzzAcPMU2PygNL9H
r1ocIORpMQWWEvY97j747xcJQp/vmAJT4xs0Hrq53s9h4e4pIP6tfxMP4/f9
keTc4TkFxhmLKSt9KSTE2bFP6OgUGDW5KdSieReHHAdOT8Ea0Qyt/UewXrgO
iFWdnwK9dX3rBGgZ6tnqoStToO2zzCzZj0LeTeTTJ69PgWbaYUe9o3gfVXUm
wtKmQONL3v5P6A2RVmzhB1OgOkM75ulPIVZxZtG6+VOgqL/m3F+03Uarz4PF
UyB34HTszWMUUuw/LuNXNQWySWVpqwIoRHO5ueZ4zRRI10znfEZXXkyyKv46
BRI8KD14nELaH5f5Cf+YArEVFz78Q/v/8h17/HsKhN1qmm+doBAHVc1+7eEp
mImb27vmJIWc2N3xrZAxBYLXNvR6dID79p+z+FPAZVybOXSKQt5EhM+pF+YD
U72ZIhyI8+OJaJNkCT5MOC9SvIO+tTTBPWk+H0Yuuy5fd5pCLm3hWEYp8GGg
7I7hN/SzXbM5Gf/xoXe028w3CPNc98Ps0go+dCmpO4mewf44eLdg12o+tNt5
H0hHO1v5nl+2ng+tEY8DjIIphMNXPvZ8Cx+aXoyda0KrXqwctbXiQ0O/Xpzf
WQq5GsJ4VmfPhzq5k7fFQiikOnBc3GgXH2qsSh5noINVUm0v7eNDdchU6YZQ
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
9W+0KVM15HcYD6p69n87u4BKfnb9dAg9zYNy2YddCxZSifHEe6t2fx6UmA2N
FaAXL/xhMecQDwqDtAWWi6hkwjX26kd3HhQ89p/bh+5LeCUc7MKD3I7ncmFy
VPLgzNCBx3Y8yKZylsrJU8ki/j7xfgseZIGRwXN00EmZnxqEB+nHQ7ZuW0wl
NeESppuMeJB2v8q+H/2IwW2SWcWDlO+z9p1XoBJFd5e7W7R4kDjH7OhiRSrp
umRrUKvKg7j1V0JeoKtbClm2i3kQfeRztO0SPJ/6oME2GR5cvCuVOoiWXe6W
sWUuDyK/7siOUKKSXy969s+dxYNzs5KLFJWpRKdo3ZmbU5MQvOZHdTF6Q+3I
u5+MSQg8qNhop0Il1+eueTJvZBKO33TvHkY75ykZv+ydhKOfMscvqFLJicFh
tk37JPgI/giU1PC8D3YvCW+aBK+VWhIv0aFMYZ/xuknw2HdE3uE/KtlxK5Ny
vHoS3K4XLBtDG1YFre8tnwTXdwyDS+qYr43LO2VfTIIzx8BEVYNKlptMmxs9
mQR7zTM7ytF0V3fvnfcnwca1Yp/TUioZ+HKpNvr2JFhenTk6gb651GPfoRuT
YFq5JfTKMiqJWHBx9rGrk0BoUTH/aVJJ9PZH5w5FTYKx2sfUV2gF9fiHWSGT
YOQo+WinFpXsNDhwf+epSTC4uL2Yjt5fXhN53W8S9Euvv4tZTiWvYpq67ntO
gs5wS6PGCiphDBUqRrhNgpai/O8q9A/yeXev0yRo2O6Z2KWNn2/f1X/TdhJU
z6dPM9FKDQdriNkkLHneIxGnQyVat672fjeeBPk+jcWaK6nk0Eh1/r21k7Bg
oY/mW/T6eYs/3F85CdIWT9bu0cXnu1Wgs2fZJEgGT5hw0ArJ8dQ5ypMw58kq
h2t6mI93K+SUF02CaOcpj+X6VHJA7oVDn9QkCEm/9H+HdtzgEvJKbBKmiSB0
7yoqGXUXP/V+hguTJzZfnUQfnbN8m8kkF1gPIm5dX431Z/NWri6NC7TW94+0
11CJyPLMhrhBLoyIi5d8QPOpppH53VwY2LDt/T4DKpmd8G52XBsXev3im6bQ
35YV1sp+40JXeuPvG2uppHhu3oj3Ry50fFtAW7kOv49g+AbjDRfahHf9rUWX
lx0T/vWSC00GtyUPGFLJCPPRjNJzLjR4dy2eRpusGRvY95gLdalqWilGVKL3
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
i/p5ZrvNVxf0+3P5z0mw8fSl4nZnNkm33NX/DW6VcKFk4OuTTmy19dgvCr9m
vHRkk5SYiF8BsGtOlmHbcfS7QuFsIyzjISO4Ak6saeIWV0c/ry3q7DrGJvGH
f84/Bv86zs566IB+H1+4sBRemMyYzbZHv0euF5uzAf3b4TCz2Y5NolcelDKE
ebsHp81t2SSy6qx8ClyhyuPKgC8fSl47ACdMPXJys0a//3ysrq7BooRtjpQH
wKGXO7cEw/bFBqE6Vuj3FX+3N8Gd67581z6Cfq9YvltiI66vgo7oQjjQRMvY
EV59PodLAPZn25qVwQGBa3Tfm6PfL16w5tZE36uqqeNsSbylso/thfnYc088
NWUTr0d1J6/DK9Rce+VhT+P/PAbhN4EBxskH2OTM0Hw/jU0syl3GWus4fPqC
4oULcP9J4Q6d/WxyStIwvAW25jOsP2aMfi87FbtsM4u6HPbr4bp96HejK8nO
cEEn8/Kcvej3gZIbD+E79xRbPxuh34Pe5fBswfO8TXvrmAGbHBWfKDSGRS1W
3urcg36/J1qWDi/RjeKL341+36NZOQyPJI53p+ij37+ZP9PciufZOMbl3C70
u79vQyi8cs+12dGd6HfRtLet8Jay7N3Teuj3u1UfpAj2h7QumURd9Puu3s8u
cJ7bsiiBHej3L1wDj+GMc9r5qdvR7z6yI/Mo7G/NOmYt2uh3Ed2JA7BAolLK
x23o94JjfzLg8nmZ6ldhA92wuSNww7Fj42kU+r0nT2DLNhaVmyEkyknQ716N
C8Ng7wNt3W1b0O9CbLE2OHZrwSMReEceS3qFFovySFwVfHkT+n276ipX+K65
mEqDJvq901i5Es49KrksfSP63ePMhvna6E+7sAvXNNDvzIStpnDNYjsSqY5+
z3mgkwXbGlRsPbke/b7tw+6fsO/tGJoJa3yYNibbWdTGn201/OvQ76clzMPh
wrUr5kerod8FiE0HbLCiZI2MCvo9y+q4nA6LUmD73M9VRr9vDTp1Gr68/ZZI
yFr0e1umZxUcSTWN0kro91PP/AR3sCib+Tla6orod77vF8xgcd5WX5c16PeM
eRHZMB001tmmgH7fpBA3Bu9Us/72Rh793qp/bZsu9r9h58aslej3EycyImGG
XlW+OrycJ+r2R7gmhdoSLod+TysqktdjUZNXa16EyaLfNVrKzsBOtcpyIivQ
782jlU9htsDrh2NS6HdHkefMnSzqQ8u8TdXwIq4NjYfhwMDF2d3L2UQ4xbT1
Nvzab/qF/TKcv9ef+/gLTvlURIvBrNfXerV34fdNnF02vRTn8aMVA9HwkErp
0YXwfI7ukU7YqqW4014M/Z7EMamgj/7x/7skbQn6XVX6ryf8XD+XRIqi319p
8zyD7Vw2XQhahH63sxcU2s2iwjItHvuLoN9nQ4QtYfEbxzt54L/xOeL5sI/Q
1JcNwuh3pZfSU/CWz8lf6YU4v78YXLVjD55fmyXiiQvYZMpKUCUWjhuN1g9g
scnElJJGD3xG9ObLdUz0+xUjomiA/af9xxoRBvp9tduOc7DyDfPHTEGc32tj
97yATaaWd20UQL8fKd0vbIj5gdQs+/f3OYd+vTe3hk1fjiY587HJYNSkTQHM
rFA6eIyXTQbkxRynYUmDtawl8LfqTa56RizqY9bKNQNz0e9mR87Gw/tThUgZ
N/p91M+/F17cUdF+GO4JTw9ZuxfnqeSAGac56HfZpxE+8I/QsxNLONHvlV/i
6uHY17uthTjQ7wfnpizah/l/vX1H1x+atI/IZdrCITV/UypmafL+kl5uEex1
gLrlDbdKO96dhRWyWToCMzRpeXz5wS5jFrXGxl90aIomTfvvPEmAOY9eP7Me
fj38+nkfnNvXcev5BE0aQkYaVfbjfFMkP3j5F01eLhN65wcLe37cs2KcJnUP
1D69gsVenbZYPkaT53sPfBE9wKIUo2OOc47SpPY/j//s4b+tjQolP2nyNDjx
RzH8df67insjNKla+mjyL8xa+5v3399Xriz9+He3CYvq5TCRFaVpUm4wy5MM
x9kYiOgO0+TRd0nGd7jTzCyscZAmDwIokXUHsd/PdylUgu8vsVkaCOd0uvE5
/0eTe8XBMq/httgbuXb9NCnWz1IQN0W+ds8P3vmdJkV9z1WOwSGcd7K54ALf
fo1SeNHfaZP+PprkL+Kn5hzCfjXUE34Hzi1crWsIbzql9XWslyY5ensMUmBv
r61bTn2mya3PLgcG/q3PXHhq2UOTm+eiD6ub4fm/s3b3qm6aZCwstg2Glx4q
3BbbRZP0/LeOTXC5Z9mG7E80ua4z7iphjutnaysV95EmKV2LvBzh+L1OxUc+
0CTZUyOgDM7IeW8p10GTRJZZKPdhnE9GeeJL22hy9bZ35F7Y8Yf+mefvaRKn
lRp/HZ4c6fny4B1NrnysTBmEE5XX+vq00iTavSdT4wjm14s9g/JwpOCcvAuw
vPjxLOUWmly+JVPcAp9QNPQRhC8RnYfLLFgUj1XiUq43NAltd6hyhvmlE2Ns
X9MkxPXii4fw8G6fLBH4PH/uax5LfD8tj+WLG2gSmPnqnTHcEJxel/+SJv6b
hz+lw5rSIdVN9TTxfcfoG4YPlzyztKyjibeL8qCmFYtaGxzTsfkFTbx49/0M
hcei3n9oeEYTz/TTU60wp/1zQ2H4zMZ4DmlrFvXCcU5ceC1N3Fru856EeSJe
nayupomrUzujHNZpOlK9Bz7J/VuEzwbnsdbX+xdW0eREqriECXzFhS3D8YQm
TupbVmTCCv/Nv9xfQZPjbyxWj8B2FZZJ98pp4nAsQHWLLeYjqYN7Ah/TxI4z
Y2MYfKI5dnPyQ5rYJNdQbXCKRt7IMthK7avuCjvMZw3KHQNlNLFo4DF0hX8q
snMf3afJYXt5k0p44e6Vb0tKaWL2Z+eR+faYx6x2P9x9jyamCU52prD6lN74
ihKamChHOGXBVidHeCLu0mR/fYHbT9h4QtV/pogm+2yavIgD5jXG9J64QpoY
Tf8ICIelxgcmvQpoYhC38GIHLLZV1U31Dk12K66PkjvKolqs8/V5//33HJ6b
XD0N9/4O7ujIpYme5dnUKvjmj+L++7dpsmMy6abgMdwfo6gLUTk02R7zOM8M
Hmh40UVl00RLobM4G/6VlHp+yS2aUDV/Ho7BkW/ONYzdpMnWw8urtx3HfLS/
NPBqJk02j2+ri4Q75h5sds6giWak7ZuP8Ollb2uMb9BEY+WF9/KOLOo39yk6
JI0m6lW3Os/Au5m5gS+u02Tdobq+p7CUe2z8nVSaqP4cGGQ6sSg1wdj/HqbQ
RPny/NHDcO86De9j12iitELx9224aFFfiXUyTdZUGHBOwIeHzWQUk2iiYHJq
3nZnFjV+opevN4Em8uwYZgwc9Wjd6Zf//j3axZJFXfD+hTssrsXTZIXUO4nV
J1iURO2orEUcTaQf/VpxFp4Q6TYVjaXJcmPRNc9gQ4vl5iNXaCI5tFFNyAXz
y2ODWt5omiy9YK5pCXeuXFzcE0UTMUnfbflw/CP1/d6RNBEtu643Be8I3VN+
JIImi4yqDHecZFH3DK3OqITTRHjgs0kszKyT0NYPo4lQEJdFD9y/vLVM+RJN
WOKy9oqnWNTxpjcZXRdpInhvh/M5OOFapCRvKE0E9hw7/QJWIAvDbEJowv/t
0jlhV5w3AwYVnpynyTz/vEBreIfFbZ+VMI9o48UC2DeTt+JdEE2479JR0/CW
32UlsoE04dzFStBzw+eTqElZGkCTv70q1+PhFZfevpLxp8mst3FWL2xSkC+w
yI8m08Jn8teexvXa+OlNhw9Npu5cLfGBxSPp3hveNJnY8eBRPVz2fuxa4Dma
jHd3VC9yZ1HztqcI6nvRZPTsdJ0tHB7JEyF2liY/Fkg0FcGcjvcu/PWkCTt3
a9ssLHBY+v7sGZoMa1t17TqD8/ypSPqyO00GPwV+TYDF9982unqaJgNnMof6
4Bax0pen3WjyjfFsVMUD37f510UdV5r0ZX/77Qcvl6rhbjlJk15q3pwGOGh2
7lI7F5p87ljFt8QT58OHO/R44W43fZYDfOr4/IBOZ5p8mn9icQmcZrzfJdCJ
Jh9uRkpynEW/FnGfSoDbtxTJ7jn77zy3Z6vacfT7++Y1yXBA5ZDvv39/33py
VO07PCdxk9ZRuGWeyKZ1XtifzudeLbRHv99Q1wqEk25qSMfaod81TXe+hs9d
nUmXtkW/v/UyEj+H/flygd16G/S787WDx2DPKaGyCSv0+9wKi1JYaUh38W9L
9Pv1Lvs53izKvCmKsoZrN3CcMIQ1d3i8u3ME/d4k5Z4C/3y35UzoYfT7cW3v
AdgmK2vKwRz9Psc+SN0H92/R2T86Zuj3ayGXgmH2tPZ+/kPo93U50U1wl7q5
T8ZB9HtjfYKEL4v6vDzvfZ4J+t1h8LojXF5WyxN6AP3+V+BWGfxVzdqwyxj9
nqh0h9uPRfl1Lsi1g4tUjO7thcvqLCLe7kO/v3R9fB2+ukJ5rYQR+t029ukg
/Hbz6i9Dhuj3mXv1Gv4syqz9uernPej3+PdNF2D7qIm5TbvR70qTbS3w0Opf
28/CN18s6V4WwKKMHJbKn9BHv1tt+uYMBz7vjcvYiX6fOjz8EK7gm+ho10O/
X/Eb4wlEvmpV/cd00e+r06eN4d6qR7KTO9DvtdVzbsCaPLNNTB30+5EvfDR8
Y+ldnlva6Pdf3As2BeF84izgGQvHRcmJXoSFvXgOGmuh3+X1lr2DPX9W02rb
0O/Vx+WkgzFfLj0oMUDQ72aXFU/C/nkTRS+20iR8NH9dOSwfu0qkbAtNwsJf
b+I7jz6wunb54maaXJQd0TKBj9hMWlltQr9XLtiVCfdr2vsZadIk+KDa3hH4
w5KWh5Ib0e8j+023XMD+/bFUOEID/X7JwzIMlhG1taxXR79LJzq0weJ6f5ra
1tPE5/HDEytCWNTj93p55utocm7/R3dXeE8o15Ozauj34RnvSjhNpL3upwr6
PUQyeH4oi9KPXJcVDJ9eRoWZws+22VssVEa/P7COyYL7BndVeCih3/cGJ/6E
B8/bbHqjiH7/72YauYj5O2LNpco16Pfg57fCYd5fi9fnrabJsaX9dzrgA7+S
qpIVaHK0lK9U7hKLCv6j7TSwiib2BqvLT8Oqf+qHF8jTxPb77poqeEHFaO/q
lTSxDnB5KRgGzxGzE5KjieWS6GYzeN13Tu3hFej34rvt2bCfinjrFxn0u/7b
7jH4h9i1kFFp9Hvf2Ldtl/H+gh5v7kqh330X0ZEw96v1nh7L0e+LNMY/wsol
UTYXJdHvhYdm5MOxv3I8yJSGjfS8uTzgSyuvfFoggX7/nMJfAzcLruJmLUW/
n6tcwIpA34pZ3/ophn5f2CN6BG76Pu9t3hL0ez7n8lx4vu2BvmxR9LuOzMoJ
eLP9quG58Pau7UrbI9GHkpn1exah3z0d1sfAvHwDf+tF0O+si5u74COle/L4
hNHvt29rr47C88rW3LF2Ifpd69Wus/AawdRmLiH0+8ehvc/gMF/3i90s9Ls7
45BQNPYLHnv7JbC6oLKVJWyUF7DrPwb6/dbeo/mwXCtTs14Q/U5Ou0zBJ/q3
RnkIoN/b487siGFRs6MbjRLno99d7/vEwhzuv87J8aPf+duDe+B1K0PyDvKh
3zOnwhSvoI8a4j/rz0O/bxa/cg42kamOluBFv7/bnPQCfsHp/Wt8LvrdxSJd
OBZ+rTSRwI1+5w3ItoZ/Vd9XqudCv6ffKCiArVekCd2dg37fWFM6DbtYnE7q
5kS/t/SV68Vh/s9S/3SfA/3uxFMbD19lJXhl/x0motzyr3rhxkT9h1l/hsmi
1J0ta+PxvAgcO+M6O0yE1Z06fOA7IcoBG2aGidCb8J56mM/Cp27p9DBhHSv4
vugq7j/PsbFNv4cJg7OJtoUz1N9W/ZgcJgLJP8aLYNXmygc/J4YJv9rC2VlY
LPjJIy54XsM6bv0EFvXQKCSqdHyY8NibzE+EG3ycC3PGhgnXH0+hr3DPt5ye
G6PD/1Ns33E5dnEcx9NQ2neKJGlKQ0hJkXOhQYqkoSlJKlJCQpRKCG2haEuk
0pBEUlFp01AppUjuob1IPd/nz/frGHeXc53P+QXCfufeMvW7wlSex1RR5iiL
sK17Je0Pl7w0a7s/wiJz1V2KdfDPHfwhlsMsMntoTm3ZPewPW/M/9kMsMvNn
5UYXuG1iwtT2N4tMRW/TzYdVBKXEd7FYZEL1sB5bnDCVzRP3W43JImPvg3eb
wGtzOYVUGSwy4pBuFgcrha8NY6ezyNBUlfVPWDHRRIzrF4uwIn45asQLU5u+
P+D895NFGEp8rpfh4rTOsW8DLPKrXNWzAXZZ0TH28QeL/LTd47P8vjC17PIy
nqrvLPJj3POiK1wqdcDpBNx/KzL4OUzf2DmQ3sci31bl32B/IExVX3mjEveN
Rb6WtkTtheX9/qy418siXQcm792HfaKP6Wj3sEjnyNLkX3BK85+3Ed0s0h6q
nbExAfdZe9Mf5+DPcrY5QbBf8Lpn+7tYpPW1X2ETPPb1R8+5LyzyySKhZEWi
MFWY9u6UTieLNP0ufecO77ewMQhvZ5GGq99qX8B9Kwq5FOA6aY5mziRh6unN
J+yCn1mk5qV85z5Yp8RJVqKNRarNDL4lwKcfm8rOtbBIJePoIANuNVjSJQ+/
C74+tCkZ+9G/f9e/TyxSviJz8gp8uF41btVHFnlbWPfvE7xri8zuavjN3t+c
0inCVJdxyoHKRhZ5PSjE7wFXuLqXv25gkeLL6xcXwyZNs3dz61mkSGK/BHcq
9u/rrzqP61ikMP+0jDn8fOoGz2QtixQYx65Ohr9xFcjdrmGRvB8v1v6GBWtf
RYV+YJFnlzo2bk7D+fb9wYeAahbJXvpX9xr8QK5Fz6SKRZ4+k9RvhWW51qf7
VbLIk11bjWUfClMzkr5TWnBG38H9nrDWh/TZ6Hcskn7hss1r+Oa/UpHRChZJ
E009tCgd++v6K22vchZJyXrnagmnGNhwLypjkSSDAc9UmEhP/jjylkUSerjP
DsPsvcNROqUsct9X6ZLuI/TylEqC/RsWiaPtvhIKRycYNZASFrn75PjNz7Cm
i//eta9ZJHZHWLR8BvbnQ54w+VcsEtOVE3cS5lvPcceomEWiznxMfgMfTlrU
JvuSRSIExzL4HmM+vBHfq1/EImGPRJ8dgM+nJwcYvGCRm9TGFw/h77c+qi0t
ZJHQDqs3o7BS8Y7Xe5+zyDXvc+/JE2FqifJ+30UFLBLCF193Ew56tsNLIJ9F
gtNeN3fA6YdE1i3LY5FA3a+dqzJxXqxWHFLJZZGAtvlvp2Bn76R8hWcscslT
5tdbuPKnY4VKDov48ewYFngqTE0X+TA3ZbPIuWTnKRu4mPnU3TCLRc7qhMw9
gq/u+N0yk8kiZ5ofcU3A364l88k+ZZFTxz/wb8/6//1fK732CYt4czEWh8Md
kXGrlB+ziGcC//IueM+TBd6bMljEQ0tNVikbz+fmH3G7RyxyrGmvkg/csWd8
s2I6i7i5nVxXAQubz6Z7P2SRo+zRWsI5uB8MzzccTGORI/EFW+1hk+ayNzdS
WeSwRpv+E5gjI130eAqLHKqfMp6C2ZwuOOgls4iDyzJzvWd4Pk5pvW5JLGI/
r2MbCZsmlZzgS2QR27t2Tl/hT7/Cjq6ArddfclPJFaauDeimXn7AIlY1iV6+
sKz+3OkT91nE/HDZ2ffwfoO8WwnxLGI223dJJE+YqpUdU7gaxyKmtzlDDsKP
rNSl9t9jkT1qq249hUW9IyOVYOMqw5gZ+Ovq55wX77CIkaNbvEE+zr+nfWVe
sSyycyY0JRpmd1m2695tFjGIevq4Fw4t4lMQgPVUGp6tKYDHnXafjWaR7e+G
XpyHq7q82tMjWYSyp5VWwRkOtCRLeOukeqXoc/Ta2z3qTgSLbAk3rz8EKzXq
h7WHs4jOap+WbNhAPqHoVxiLbCq78+UvbFjKt2ETvNHmZd/OQszrX400mm+y
iMZY56/bcJDadMuWGyyifnN2uA8uMtpo/zGURdYpSE2vfYH56bmfaPt1FlF7
Q+b94O+dxKvtGouoWh1aWAMLJZqpWV9lEeXhQIGlRXj+P1Otp0JYZPX1NFFn
WPf9dUU2eJVs5fJceInxr4b5YBaRf/VTdg52ev19owwsa75IefdLYcrY898q
0SAWkWYpr78Lj3d+y9ELZBGpEONNP2CrZxNXN19mEcmVJ4h68f/fv1x3bEcA
i0gUhRv4w/EqU6q+/uj7vlyTOljc7hibyyX0nf7JfNkrYerC7AexW37oe9C4
rQs86izVaAeLSC45nA9P2rZFXr2Avj/Xcmd7jT9/ZTFa+Hn0fY/1SRN4r6vJ
M/9z6PvP875x8Cp6kkesL/oecN//J+zzMMhj+Cz6vuxNiEYJ9t8/aZ5b8MK8
nluXYUnxukOsMyzCuXvB7QY4+K78zj+n0ffvsveXv8H7cSennQtmu6iX6gq7
DO+dWe6Nvou5PHkOK+XbfN8G/82+msteis+fqnlV5iT6bvi4aC983fb7QjEv
FpnurSm9Dxst+xOn5skik+eYlb/gmOXlLxxPsMi4iGDDxrd4P99qqR/0YJHR
zLWtQfDNXYPZ7MfRd719XU2wYujbDp9j6Hu3d/+KMuyfkYLoAnf03SeG7g6P
5mSXtbmh70KFIy/gkqQP2/Nc0feMz9Oc5cLUmUvxsvNH0fdtM/P74I7wC9JP
XND3TgnuxPL/v1/Ffk0S/nZqiyATHu0dtMxzZpEefgcx7QrMm4uvP1gGdz/0
lwyBv7xefnbtYRb5sjVZrrni/3//0LVd1YlFOj6XK0u/w/x/2KYg5RD67vV9
vQd8Q7z+B78ji7QsWqhdDHt1eU3fOoi+pyhS3O+FqceDGuIDDuj75l2G5vBQ
av58pj363uK+Jxm+kLK5usOOReo9blr8hqc4ziwxsEXfF2bbba5Ev4Nu/F4M
Vyc2Hr4Gt6fdtjKxQd83jbi3wvqdYcbdB9D3jyLeslXClLXn+dOr4XJ3jXOe
8MlClWN3rNB3DsuA17CsvchwmCX6fv/s1UXV2E9JsSa3LdB3zXthlvB21j9u
fXP0vaH4dirsmqP+gW8/+n606/4wzL7M2KXbDH1nm0vV/SBM3Qqs+te+D32/
tzIzFE7r5OW4Cuepb8v7DGcfuW+rZIq+1zq9lK9B333uhurtRd+dg9+ehI03
8Z74vAd9//ew6g38zJxVfckEfY+tauCrFab4jbg+3TZG39f+aj0AW6Vl6xXt
Rt+rebsfwkucalNrjND3Q6rfR+HQkJdVu+CUPyYMUof7cXPdpNou9D3ac/Qm
3HaGf3z5TvRdNXKmA66Q+Wy0xBB9f5/HpliPz39mYf8/ffTdoYX7NMx2t+/y
FHx3akKwDF4hKdUVqYe+RyxdItggTHHxjaY924G+K2mvsIW/5NW0/9qOvpfb
yGfAD4rvcTVsQ99t/VQm4NfN9RtmKfR9/IH69kbM8zxusoPwzVul2uEwK0+g
Up2g76u+UV1wzjPtI3u3ou+l7DuVmvB81Hb7lemi7wfk9/rAtZcXq5zZgr6P
6FtWwGE2KZmKcGDoUXvhj/jzd7JiOm9G3+WuO9vDNOG6D7k66PvrJ8ee/L++
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
2mVEjP8AD1jePg==
      "]]}}, {}, {}, {{}, {}}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{1.8915123786679122`, 0},
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  ImagePadding->All,
  Method->{"CoordinatesToolOptions" -> {"DisplayFunction" -> ({
        (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
         Part[#, 1]], 
        (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
         Part[#, 2]]}& ), "CopiedValueFunction" -> ({
        (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
         Part[#, 1]], 
        (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
         Part[#, 2]]}& )}},
  PlotRange->{{1.9383795322066075`, 4.937877358683113}, {
    0, 2.4684282660718284`}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.02], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{{3.758212815003742*^9, 3.758212822326275*^9}, {
   3.758212864144285*^9, 3.7582128767094316`*^9}, {3.7582129244408693`*^9, 
   3.758212952069326*^9}, 3.758213025875394*^9, {3.758213060747774*^9, 
   3.758213144698992*^9}, {3.758213174885129*^9, 3.7582131856683197`*^9}}]
}, Open  ]],

Cell[BoxData[{
 RowBox[{"Clear", "[", "ccmodel", "]"}], "\n", 
 RowBox[{
  RowBox[{"fit", "[", 
   RowBox[{"ccdata", ",", "ccmodel", ",", 
    RowBox[{"Length", "[", "ang", "]"}]}], "]"}], ";"}]}], "Input",
 CellChangeTimes->{{3.75821319997808*^9, 3.758213206489819*^9}, {
  3.758213336167653*^9, 3.7582133364501677`*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"Clear", "[", 
   RowBox[{
   "wrfitcc", ",", "gfitcc", ",", "areafitcc", ",", "cfitcc", ",", "dfitcc", 
    ",", "sfitcc", ",", "s2fitcc"}], "]"}], ";"}]], "Input",
 CellChangeTimes->{{3.758213351950859*^9, 3.7582133521089163`*^9}}],

Cell[BoxData[{
 RowBox[{
  RowBox[{"store", "[", 
   RowBox[{"wr", ",", "wrfitcc", ",", "ccmodel"}], "]"}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"store", "[", 
   RowBox[{"\[CapitalGamma]", ",", "gfitcc", ",", "ccmodel"}], "]"}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"store", "[", 
   RowBox[{"const", ",", "cfitcc", ",", "ccmodel"}], "]"}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"store", "[", 
   RowBox[{"\[Delta]bg", ",", "dfitcc", ",", "ccmodel"}], "]"}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"store", "[", 
   RowBox[{"shift", ",", "sfitcc", ",", "ccmodel"}], "]"}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"store", "[", 
   RowBox[{"shift2", ",", "s2fitcc", ",", "ccmodel"}], "]"}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"storearea", "[", 
   RowBox[{"areafitcc", ",", "ccmodel"}], "]"}], ";"}]}], "Input"]
}, Open  ]],

Cell[CellGroupData[{

Cell["Import previous results", "Subsection",
 CellChangeTimes->{{3.7331984924213877`*^9, 3.733198499329225*^9}}],

Cell[BoxData[{
 RowBox[{
  RowBox[{"import", "[", "wrfitcc", "]"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"import", "[", "gfitcc", "]"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"import", "[", "cfitcc", "]"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"import", "[", "dfitcc", "]"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"import", "[", "sfitcc", "]"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"import", "[", "s2fitcc", "]"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"import", "[", "areafitcc", "]"}], ";"}]}], "Input",
 CellChangeTimes->{{3.729257823576746*^9, 3.729257870732134*^9}, {
  3.73018178505914*^9, 3.7301818450047693`*^9}, {3.7330490410322113`*^9, 
  3.733049041054337*^9}, {3.733474550258102*^9, 3.7334745721555853`*^9}, {
  3.758213399761318*^9, 3.758213399919017*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell["View results", "Subsection",
 CellChangeTimes->{{3.733198514173415*^9, 3.7331985248017063`*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Block", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{"i", "=", "1"}], ",", 
     RowBox[{"ii", "=", "1"}]}], "}"}], ",", 
   RowBox[{"Show", "[", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"ListPlot", "[", 
       RowBox[{
        RowBox[{"ccdata", "[", "i", "]"}], ",", 
        RowBox[{"Joined", "\[Rule]", "True"}]}], "]"}], ",", 
      RowBox[{"Plot", "[", 
       RowBox[{
        RowBox[{"BW", "[", 
         RowBox[{"x", ",", 
          RowBox[{"wrfitcc", "[", 
           RowBox[{"[", 
            RowBox[{"i", ",", "ii"}], "]"}], "]"}], ",", 
          RowBox[{"gfitcc", "[", 
           RowBox[{"[", 
            RowBox[{"i", ",", "ii"}], "]"}], "]"}], ",", 
          RowBox[{"dfitcc", "[", 
           RowBox[{"[", 
            RowBox[{"i", ",", "ii"}], "]"}], "]"}], ",", 
          RowBox[{"cfitcc", "[", 
           RowBox[{"[", 
            RowBox[{"i", ",", "ii"}], "]"}], "]"}], ",", 
          RowBox[{"sfitcc", "[", 
           RowBox[{"[", 
            RowBox[{"i", ",", "ii"}], "]"}], "]"}], ",", 
          RowBox[{"s2fitcc", "[", 
           RowBox[{"[", 
            RowBox[{"i", ",", "ii"}], "]"}], "]"}]}], "]"}], ",", 
        RowBox[{"{", 
         RowBox[{"x", ",", 
          RowBox[{"0.7", 
           RowBox[{"wrfitcc", "[", 
            RowBox[{"[", 
             RowBox[{"i", ",", "ii"}], "]"}], "]"}]}], ",", 
          RowBox[{"1.3", 
           RowBox[{"wrfitcc", "[", 
            RowBox[{"[", 
             RowBox[{"i", ",", "ii"}], "]"}], "]"}]}]}], "}"}], ",", 
        RowBox[{"PlotStyle", "\[Rule]", 
         RowBox[{"{", 
          RowBox[{"Red", ",", "Dashed"}], "}"}]}], ",", 
        RowBox[{"PlotRange", "\[Rule]", "All"}]}], "]"}], ",", 
      RowBox[{"Plot", "[", 
       RowBox[{
        RowBox[{"BWi", "[", 
         RowBox[{"x", ",", 
          RowBox[{"wrfitcc", "[", 
           RowBox[{"[", 
            RowBox[{"i", ",", "ii"}], "]"}], "]"}], ",", 
          RowBox[{"gfitcc", "[", 
           RowBox[{"[", 
            RowBox[{"i", ",", "ii"}], "]"}], "]"}], ",", 
          RowBox[{"cfitcc", "[", 
           RowBox[{"[", 
            RowBox[{"i", ",", "ii"}], "]"}], "]"}]}], "]"}], ",", 
        RowBox[{"{", 
         RowBox[{"x", ",", 
          RowBox[{"0.7", 
           RowBox[{"wrfitcc", "[", 
            RowBox[{"[", 
             RowBox[{"i", ",", "ii"}], "]"}], "]"}]}], ",", 
          RowBox[{"1.3", 
           RowBox[{"wrfitcc", "[", 
            RowBox[{"[", 
             RowBox[{"i", ",", "ii"}], "]"}], "]"}]}]}], "}"}], ",", 
        RowBox[{"PlotStyle", "\[Rule]", 
         RowBox[{"{", 
          RowBox[{"Green", ",", "Dashed"}], "}"}]}], ",", 
        RowBox[{"PlotRange", "\[Rule]", "All"}]}], "]"}]}], "}"}], "]"}]}], 
  "]"}]], "Input",
 CellChangeTimes->{{3.727702145749645*^9, 3.727702164858941*^9}, {
  3.727786599290174*^9, 3.7277866016307077`*^9}, {3.727786661496475*^9, 
  3.727786790870613*^9}, {3.727786832271*^9, 3.7277868362431602`*^9}, {
  3.727846443680401*^9, 3.727846455749556*^9}, {3.728063498543194*^9, 
  3.7280635009451942`*^9}, {3.72925714204338*^9, 3.729257175627865*^9}, {
  3.7301863648013363`*^9, 3.730186368349718*^9}, {3.733474578105546*^9, 
  3.733474613225963*^9}, {3.748240543336813*^9, 3.748240558602428*^9}}],

Cell[BoxData[
 GraphicsBox[{{{}, {{}, {}, 
     {RGBColor[0.368417, 0.506779, 0.709798], PointSize[0.002777777777777778],
       AbsoluteThickness[1.6], LineBox[CompressedData["
1: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
5nHxkDUVlB4Lfj7+Add/Xpyr3l4qyK2Kmk3v5MG5FRbZZ23Qe6jMsvddPPhW
Ib27fh96/5m4eXE3DxRVcs2lqeh9z0qKySceXFBx0eXS0PuDO+6nenjgJ/H9
ZgYdvctpXcr+jOe5/IimEQYVvvkW3fnYi/P+5VyKAYsKnz4ZPpXo58HmSG3n
YDYV2onaz6ZfcN45WV5s46D3LPN/Z77i83ayu6lqi94XtSzL+4bvT93Xw2M/
FR650/R6B3A/KhT8UH6ACsVvOimyg7g/Sx3U23oIvesdPr7rB56n+Rxehx9G
74kDl8795MEfjVVS6Xbofc4tu/AXD7RPZ5Imj6B3u/GnX4d4sN3GvXyrA3qv
9+1dNoLzIMdEK9QRva/l/bMexfPktzX+7U7oPSpUPvA/Hny48md49VH0/lt0
S8lvHhwI2dh62gW9M2KpP8Z4cKfp2oF6V/ReIe+h9IcHvwuPxC5xo4KtUtpl
ygQPEo4073VypwItUD0nZBLf5/oTU/XH0fu3vGcVUzgfv/E5CXmid0vdvuFp
Hjw3ElzDOEGFrfkVcyozPHj/iP/u3ZNU0JECBeYsD7rrLJTnTqF3r4Ytl/7x
gGR+qWmfF3rvtKY9nsP5StU/luON3re/9Rib54GhrZaljA96v82JVOfh+USl
bJWDL77v4P/eaZFIRO7BRd0Vfui9RPdLI/b6z/t2Tp/F9z/g/duOTCKuHE20
NDuP/pdVLsxiR68eLc25gOvBak4sno9EPP8sEj/tj/PgHCzfyE8iIgY3JVoH
4vooCF73HNuF0+FeGYTzobfBwEGAROTw99nwgnG9SItYzGO/d4zfwgzBeWG2
h5EgSCLIJKGGylBcP95X7XWESMTQh//YguFU6Mx5e+Il9onRroUDEbh/dC0J
cBImEbo2XgZvLuE8EeVe4WGPvBetXRaJ68s4JTlpEYlwL7occS4K54tn793N
IiRCppivof0Krrd01YrW//fHb6KaV3HevHNqPLqYRCg/lIyricH1J3i3nSxK
Ima6zrsMXKNCucHwl2TsHsGUs1bXcT26bhzbIkYiEiq0JBLjqFCYfIr3GvtW
8SKr4Xgq5LWWih8TJxH7O05FUxKokMP7u1xAAj9/V9PDe4m4XnW2a97Cvsis
zxW+ifPKIcDQUJJEbPc5Pu6SjOs3/qnFW2zSWG5VQwrOryZBprsUiVhB65VX
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
aVuD68I/e8F40/tB/xQaOaWmG2E96gWjQit/S1ymkZxo+2DlP14wrO0inINu
pPGrJ2d5wxfeLZktqZgvVi+9usS8oT9peEUPuvHBg09l0t7Q+1xzfeAV3E/c
D326puAN3X8PglQazk+LmH9PrPKGDvWSnXfQavH+RYEa3tDi+Ie+9SrOZ89p
uzz1veFlgpF7L/p9eeIUj3jDi5rwwOBrNKK/w+ST43ZveDZeEytzHV2mQ2Ht
8YbHKsIX8q7/f9/aWcake0OV3fYMi3SMl9cXXnvyvOFh3KmCvvT/z5eCoRAv
b7hf/rIqNINGclvmbToZ4A1F36WaZG/QCMUhZH9GuDfkKe5/m4+WG9jvVXHc
G27vuTRkmUkj4ZvLy3sSvSEr+u3vfvS+iO8fplK8Ib1k+ZzwLBqZOSS/VPmG
N6R94SxclI3zZ8N0ok2uN6QszlpZhJ5+xtgVVeINSVaD63fexPg+mbnsQZU3
nA1TJ5/R63M2lP947g3x+T67Im9hfWNs/KvT7A1xfYWMJTk0YvNsq87hbm+I
lZlwL0Y/8jFzru73hqithkHWt7Hf2gQcmvfdG8ICQ48NoiedD8YzfnlDcE7V
haN3cD8v0dl7X8gHAt5SbizNpZGkP4+9JcV84OD8rYX30b8zZUYF0j7gTU5U
787Dfb3z4YYWBR9wP9jQ9BW9XDMrcYuKD7jckHgXc5dGwqR6pfI1fYDTvufr
8nwaacsq6F5l6AOOIkl/StGr76iKXjL1AYeNnXNsC2gk+kOQwUIrH9jnqSD7
Hb2jUXwweZ8P7E5zUj5eiPFYZnJ6oZMP7HyVrr2iCOd56sqmm64+sJ0yQMrR
Fp7fH+gd9AFz3dXW++/RyJ/TrpV1IT5g4uLJHEUzmxo5nBgfME6+6xFXjPEw
zXsyE+8DhvVjQcolNOK5bKz9crIPbJjccLwSXXe8ONUi3QfWawQl2d2nkaOW
u6UmbvvAOlb5jTF0cWBeREaxD6idnSk89YBGatU/zDCqfED5iekjlVIaiZKt
/LqwzgcUJ2JeVqPDdh7c86bZBxTU6t45lNHIBuIemfrWB+Qd5g2Po59IqG11
GfABmVPWf+MfYn8MyxXXG/WBBZVnRVaX43y1ajpZ9K8PzBttk32MnnONxhud
JQCRFYtWMSuwftAm898LC4Bmy9D5hYbLo9VNcwUgFHvVJLGSRrbIVonXLhDA
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
/DEJ5UckDBg98wUZjl9cfO0k9GYx/GXqiC9InpU/3II9XH64YmLKF8S8fWUu
PsHzPnQxUGjJF4Rr2k8tYc+8fLLfd8sXhCZp9CI7cN6LfJPzns4P+JjVzQ52
4vmzGaBxhsMPeFSjHFuxnxE3eh4J+AG363Nfgy58njNkP0hJ+gFb2Z6YZewT
MzLX2sEPmN/qZUV34/2mYlnW1PIDxl3p5YJPSejpz41n00Z+QKf47v5j7Ks+
k4WRNn5AcuTpvvwM36crQ9dE3fyAquDaq5/P/v/vBycmZoL94O9w0VRsDz4/
MY7eRYl+8Jv2y9KhXnweTZyfO+T5wZqM8PYTbPp443+KNX6wbGPPYNJHQoX+
K++5W/xgIauOex1bVOfe4laPH8wN/Dyc0I/XQ7zB/dtrP5jZlpEVHiAh70TN
F59m/ODjMS+1LuyrbiynZlb8YNy8Vc/0OT6vUzdml3b4w1jKDvON//v8sz9U
u/1h5KnqraQXJHSPUcyPj8cfBjfC/I6+xPnacfH3ORF/GBDui3mKPc/4bG/Q
CX/oMWHMvjZIQnU+HZ2t6v7QFadbsYnt9fo+H3HJH9rbkx+kDJGQUMNTmsuW
/vBo5XW32DDu13+Q4F1nf2gS4B7pwSZEMulZAv2h4dKVafNXJFTjYaMcFu8P
dRH5P7awJZZFU37d9ofqh5+200ZIqK2H/3FItT+UzwsxSozi+4PYg1jmFn8o
5r25rx/bz7C0s6LXH/J1a45YvSYhhV5K+Lkxf8gJ+iH7D9u1JFPxz2d/SG84
fjrzDZ7HRkk3qtf8Ifmzm/7xMXx+zAk+OeoAiOd8aP4ce6GJfiGXLgCiNf7e
uv4Wr6frnVp65gAI90H+VO9w/d1pU/PiDIDg2uDYbGy5yScPfuwPAP+PT7Ol
3+PnXfxBsTsUAN4s9JUvsV8ndwgsiAWA+ymtphvjeN4bmJrckgkAF7eEpzQT
OD9Ghr/dUgwAx/JXI7ex5dKXPsWqBYDtO/ZPsh9IaHMkavigVgBYMxgtD2G/
LblHfqwfABZKt//ZTuL7o9w8/VWTADC99ZGR+EhCaxfszQjLADAqPPhfPvbF
1+UZ92wD4NKItbD8FAmJXNY9bekSABeISrkRbNE3At+4vQNAW27htMM0CR1Z
vZD8JigANG4eu7jzE76/7jNnzI4KgNM5LhaF2PKBv/PNkwJA5cV9p5MzuJ4e
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
lNiIBSolgMFFtge92GM7T2kpnU0AvXDDbos8/Ly60Y8I/QTQac5+9RdbvXnx
1phpAmh+/zCVnk+gm7mexP0bCXCah/+HRAHuZ+8aNm9TEkBVx2q7H/tHb4Fy
gn8CQGA5g3UhgV6y5HfERiWAfP137h1F+D5jrhaVlpoAMrNiR7Kwq6XKxivy
E0CSw1lWqhjPq3uh7c+qEkDsbKPaC+yAkoSlH/cTQNh7Q8+mBP+e1KczAh0J
IFSjYE5dSqAQpdkvls8TgH/S71YO9kqyEsudsQTgZe7wkynD6zHcOEMzkwDc
qqTYQewlPttMy6UEYHc9k32znECmRiq2w5sJwFIWXUFbQaBP7D59Z4lEYHr7
4kEudoD8nOBz5kSg38XyVK4Sn6cvyTtMeBKBULw4MozNqzJwdP1wIlA7Zkzb
VeF8tKvTKUcqEbbz3/8gqgnkopVmq40SYXOY918+NuO7Z2q7ziXCOq05o0IN
geoYrjweMUiEFZmSfaPY/v/5FldYJMKizdwRx1p8fxYOS4l2TISvWSJydHcI
VLA28tzDOxFmBxxOF2HnvZhccAlPhKntu/qKdfh9n51MdktOhIlja+ZvsOcD
9xRG5iXCW3M5J6e7eF54X1AqrUqE0RRv/133CPSEoVhn8EEiDD1tiy3BDrwa
fJzoSoTnG1Q5UE8g69n7c2cHE6FXWK3yLfaR9wFeGeOJ0G0S0eTSgM+nsfX4
2lwiPInrf8rYSKDvPNPRpmuJ8KidabQMW1c68NQIVRI0rZz/pHwf9/vs8siL
TEnQKJC6/B67PN3MaYY7Ceoujf1zfYDzzL0+zcBDSVAdsY9pTxPu/9TJe45I
JUH5Q9P/KrFTCmUaJ1ESFM8XCJ9qJtCuSmmlIq0kyOedlfuAPSLGPOBslAQ5
uofVPR7iPB949q3u9STICLK9yNJCIEtdMsNJShKkNNRaVGNf9Pg8KBuYBAmf
l51OP8J5/cB/pifikiCGUzrgI/bvq7HbmtlJEKHhEefVivtH8PqaXXkShPi0
5Oxtw3n5grBTdmMSBNRuV9Zif25I43zTkQQ+H5WbzzzG8/xschTfYBJ4sIQ+
m8beuXyp1WciCSinekZ92vF9T2VP0+S3JLjltmuG/QmeH49WHPU2ksCuXHul
DrvUzqR4hJQM198l7tDswPn/T1yeJWsyWDKMMs1iv/Snl6HhS4arSpw8/p24
vowjAuvEksH4lrEIVxeB4px9wO5kMhgU5p6oxyYvvAcZjWTQG5lS1+rG9cOf
PsBkmAw6hOClL9h0kz8i16ySQVPOxjLwKe6H5yaUvrskg/rNKud9zwgEW1ET
S4HJoJqzGNCILfufkSh1QjLAC4l4nR4CXTp6MFAwNxkUdrje/op9aOdBeoPq
ZJCVbKoK7sX9Kru7Me1hMkha/mnm6cP92fVl+ueeZBBLU+p5gG01deSr2ptk
EO4JfH2+n0AtB6oi62eTQWiza+Y7dvpGxeLx1WTgP7rzZ+gAPp/P9ZzaqVOA
11ST6sBzAol0lOeZMKcAd0Lc7ofYXRXSLfQHUoC9Y4hH/wWBMn/2tjwVSwGW
1b1HF7F9PD1pUhRTgEnIUD7iJe5HFEZ+p3MpQG+YfYZ/EJ/Hz7m8xsYpQER9
uPQIW0/5u8LlmylA/YjP6tIQXo9D+xqtPFNge8HS5Qc2W5gXa0hECmzuLw+M
Gsbn10B37G56Cqyf/x4v8Ar/3pPZyqXSFFgJFsttw5a/aOCrdD8FFhudqg1H
CESS3J+T250CX780PFzBHmmklmMaTYHPXBs9MaMEosp42Rg/kwLTmgpvhF7j
82BKd4Z/NQUmfP1m27HJaBdDF00qvL3z5KfRG1yPMTFunqypMDpFS72G7ds5
OwkHU2GI9cye+DF8v7A7wcB+PBWeq0XzHnmL65FJ5gWtair0ur842om98erR
9d8XUqG7glnhyjsC7TCkuUSySIUn7/XP/sLW6+TI5HdJhVbGDIPE9wRyMP0y
dz44FZrhvZXIOK5P1e7apORUaHTipXRjn3jGUf+5KBXqisyCrk7g/MAQd/hc
QypUjxYn/MaW1X/A09WVCuXkudzkDwRKPlE4rTWaCsUnRGpEJ/Hz+j/2+zab
Cvm2Di3PsKMmy4Wz11Mh5/bdXrOPBBqVmtYwIadBxsvVN3+wV839LxzjTIMU
KrnPqVP49/6LpOM6kgYJx71XxacJdCVoyXWvfBrEWLVR92HHcA/t59dMg4h0
KmbLTwRaePwzUsUkDUJ6T+3fxj6zWz3HzT4NAv6Ei2bM4HxoQulu80sDH9F+
BclZ/Pl+hXyuhDTwuMqkMYAdEZB4I6IgDSiJ5w2tP/8//0acp69Pg1udKdY7
vuB62bUhVNiVBnZrbyhZ2Kepl35pvk4DG5w+peZwnnviu7VrLg0sL5smvsDu
0BlJ+/A7Da5GF+TZfMXz49yzV9270sG4daaG+hvOH7fHb3fwpIPh0qFHOdi0
mSULg+LpoMdn2yfznUDZhGXkhnI66OjVjg1iL5sARUI/HTRDlz/fnCcQYuE1
DbROB/UHUmu0C3i+iiSwzXikg+pXd5o87ARZwegr0ekA+1qYTywSiJ0SkjF/
Ox0UtLb3v8I+N0ozlVCXDrL+ymL2S/j7v3SpaXSmg+TdkJPkHwR693tIgfN1
Ooh/eqZRgF22I/3f37l0EGHbdVlhGd+nw3PiN/6kg5C69vVR7FanaQH63RnA
75no6rhCIGcLz3vH+DOAt2okmO4ngQ5EMfQ6SGcA9wRHUhH2VxZtkc4zGcC+
2zhfcRXf95sULoubZACLcm7tG+xa7wWOOscMYHKZeuS0RqDUuQC9s8EZQF8i
0L9rnUCD5x2CNtIygHhz/W0JdgOnfUhbZQZQ01V9gV8EklbwInLbMmBbfnHt
LfbO7XSHpOEM2LSToKVs4PdPN+PK+5wB67kUFqbfeH1a4wO7NzNgZfDBgXLs
/QwkbqrdmbBI/UdMZRPnpdOvjpoezIRvUkqK49hCNZePdchmwmfrQE23PwQ6
21nkfuZcJkxldF3es4Xv92xj05+vZcKHPrJNJfbDdTeLLNdMeLel4XbqLz4v
/1SrbkZlwqhYXMgHbHC9p3YhLxOGrg0leWzjei4C0G/IhOdJewtY/uHvDxs2
cuzNhN4ugzvV2FeLtYwKPmRC93pW6+kdZPSk7pHS4s9MeHL4Q/9HbJ4BTumL
dFnQasT3zouKjKR2j6a/5s2C5hjLub3UZDyPTt13ksqCxray9VpsTaaelwIa
WXD3xzfaszRk9PE9339rV7Oghl+M9RN20LOMvg+uWVCu78TnS0tGFZyV4dPR
WVAc1iDOQSKj1o9OnFSFWVDQ9EvxLva6RYudfFMW5HyTP6dJkJFh3mZ61oss
yPjPz2gW+8U7Edd/M1mQov3Exp9MRs8Ovm+J+ZMFCQG07lw7yegQJ/e14yzZ
EHNPPbQeO2FK22n9cDZEzEQla9GREcWMves1ZEMI+4uCL9gkwQ2J4UvZEHCG
uS6QnozW9t+Q+mafDT5e+m37dpFRXveNdN7QbPCoTh9oxP7D8VXaIScbKB/e
vdNhICMlmbDs8fpsuLWH9+tXbIv77F+u92eDnYrZr2BGMor/Kjez+1M22FCK
SbxMZJRtR1c3spkNlqVfWJuw92VYlDSx5MC1MWH+C7vJ6KtgLKVZOAdM6B2O
zWM73BxIequSAwYn7yqF7SEj2r3tS+zGOaDnsHruADMZ5cspRzq55IBuvqzx
Q+yQfJPZ+egc0Bz2uqHPQkYCQJoOKc4Bddo290Xs9z/qdRVbc0BVhiosgpWM
WO4Uz7K+zgGwOZXCv5eMZivp1Xct5YBCVnjhI2wTNzUBvp23QXagr+4SGxnR
scy1XeK7Dce3GR//wP5w7sifavnbIH7s/PModjLiplIr49e/DcLmKe8FOMho
jDzU0GR/Gw6lvPnahs3CR1PlGH4bDj7l3jDkJKNrcmz7zhbcBt6NK8RP7NDc
t8mo5TZwCxfsjeXC0+6fkrPR6G1gN5nhP8RNRn9v/WJJW7oNLHGHJJ5gO9/n
Qj/pcoGp/SYY7yOj55REO2eBXKBfqdFaw97FcjJ5H+QCIbBsHP8fGV2si1J4
czkXqC9J3TzCg5/3maV/KyUXtsPdPTqxaznPfO6Jz4XN5odhV3jx+6+WklYq
c2H9+9+UX9gGbVug8jQXVniUixL3k9HEipNJ/VQuLOqE3BU5QEbR0Q4uZ//m
wrfAZ4+7sfu53N/TcOXB53r6F1f5yGj3RBzHtFQeTM9qjf/GHtR0vT6rmwcf
OBK/JfOTUV+VaDS9fR68PTuyIXqQjI6v12UZRubBqDcHuQf74aayZ19JHgzX
GLGZC5BRoviZP+YdefB88vbBLWy6/ls/eCfzoJd5SiJNkIzOBg//otrKg25V
AXRMCNefqop6KEM+PHG9rt2HPbD3AD/PvnxoLas0sTxERo/O99P1HMmH5rcL
N7exfzc0LoTJ5UPjLgnPjMNkFOd3zN5QPR/uKlLCJY/gz6fcZ4dL+VDj+CB1
AHsPZ/dXOat8qCjYLLIWJiPFswIf1Sj5UPJK8d4OETLaX6rdZxOcD/mkwPYs
bJ0Ihs7cpHzIke16IXWUjLyWzuXOFeRDxg3yxAvsAW9u3jN38yElW+O7jSgZ
BUcOdj9sz4eE57G/qcXIaPx40DG1wXyI+TdIvo39rl9hZHoyHyIk9rLLiuP1
WBgoTFnKhxALA4Eh7N/lmieu/MuHgNQsSdtjZOT/IIZPfncB+DybQCQJMqJp
PF1ydH8BePw+oJOHfVIu65a0eAFQRCyvnJDE/YrR470eFMCtK2W2r7D3/yqS
itApALv4b572x8lo6yIyfXW1AGyeiEaQpchIl2uuR+pWAVj+vJVWgD1nqSdS
HVAA1wQbihWkyShN8VSvfGIBmBj8ujeKXXn9u+zHggIwjJR/4ihDRvDPl5Jz
rwD0W3xf0smSUWCh9ZJjZwHoLLRPFGFTM2cdvDxSAJr7aecV5XD9S3Vrm8wW
gPp59c032IZchZKu6wWgGhy10/kE7vdujDSl5EKAxufsDPJkdP/74O0lzkJQ
+LJHsBTbtNflma5wIchy6R9HCrgfp7BX9CkUwnHNdOV32FfcN16baBWCuO87
HcpJfJ5L++7vvFoIInd4TJkUcT8sFHLpv1UIh6au2ZVjv1u1Ly8PKoSDrMVe
KkpkdN4r3DI3pRB41b5EjGN/PWhNW1NaCPvchdPdAK8X0zR63VQI7BX2JXtw
2iX71sVy9hcCy/u6+krsTYv4acpEITAxrj45pUxGkXxlXd+XCoEeZAc/YLNq
D4EPdREQTl4fPFTw+/96wniYrQioi1rnWVSx2zf4Fw8VwfbIjj/V2Mb3CNMX
8kWwSZyiUz9FRpZmx2x6tYpgXS6cYwo7b6Ow7+O1Ili52SforUZGDFeTn7NS
imAxh1GK7TQZ9YhwXjQLL4JvL3RV7mAvrB4z788qgs87UnTPqpNROO0HrvO1
RTAt+cb0E7YR7X/aP58UwQdLbnvfM2Tk8an4Rf1oEbxLu+LNcZaMfGSZYuK+
FsHrnvzIu9hqAdvvwv8WwfDmp3RNDTI6lmLDe5u5GJ4fPVQ6iz2zybnyUrAY
+kxvNvhr4n6k6U91QL4YuhNqOrjO4f7FOD8Wp10MTzp+DNZj+/q/EOG2KIbW
1eOTWlp4/wUUh7rdi6FZyH3hC3bN4lX/2JhiaDR8+CdQG8+Lxn5dSkEx3I36
S/efDhkVWY3Eet8vhppHiPM+9m1jgcy8/mKoWAwW0tUlozBfibbZj8VQcuCZ
1DfsQNGglrPrxVBwgV415Dyu93MsxMtdJXA7ROs87wUykugVz6HwlUDm/YSr
TdjjZdTJCrIlkDL3yv6CHhm9+qolxKNVAgncHD7z2DGZ0akHLUog5pxRVJg+
GZlJfFDW9CyBCL/bGQcuktH1QNGy5PgSCKn7WPoQW7mvKXG7pAQCpg826l8i
o/IOgd3Rj0rAZ+/1zkXsXaP5znKvSsDjdOVQhAEZDdenlNN9KwGKx8IkvyEZ
fc/Tbd/aUQq3Ko8tPsLe+FFxgYWzFOzGXbYuXSYjP06OLU3xUrBhekC/jH0x
+J5I+elSsESbnNFGOC8p9LMdNi2Fa86KhwSN8e930e177loKJsUB0o+xpcxk
VFNjS8HwdafqZRMysrt5YCywpBT0d5Iv/MS+JffnVGprKejKa1yLvUJG0w5n
b/ePlsI5u1iHQ6ZkpPpFUP3IYimcyR30eYLNI0DxryLKQHWQNdr4Kj6/DNJ+
l/aXAVAbZK5hnykuo+GXK4OTUlll8ddw/9s1J8FxvgxkrScaj5jh9Zrs+Sp1
swyOZxzo6sSOSqBBHsFlIN5nMXzFnIySVNUyZ3LKQGSr9OMv7Ahjfj73+2Vw
SOzbYqIFGQlFZUodHyyDg9dE/4pYklHskH8A27cy2J90a9dT7JPDvyT5acth
X1c91zUrMrrs7k59mbcc2NfXD21ib9uPUzfJlQPrYXmZFGsymrIR51PWK4fd
Rr6nxK6T0eOpox0/7cuBPqb9Qg92wIMDnUMR5UC00ZiZ25CR7WstnXdF5UD9
47TjFnafV3UX0+Ny2OaL8k27QUbdBv/xO7wrh02959HHbuJ6kk/p/71WDuuh
e7L6sE9Vyj2+y1wBKw/0yi1tychann4rRbQCFr+m3d/Gvi9Rklh+tgK+7XvX
lWFHRgcC78p+saqAz1o8ryTtycjmnOW6flAFTPtfmxrArtfbObqQWwEf7hYt
WTtg+51Rut9SAe8+ff67w5GMSneXFdeMVcBrNmGGbGz1zKSk0bUKGFa355a+
RUacQk5soqyV8MKz7vBL7NkN24T6Y5XQV/VT5oYT7l8LNDa22pXQPSGjRuNM
Rr27xj307CrhyW4vvdvYPzgZnR2iKqFNudVM1gX3M8qrv03lldDssuPWEDZ8
qq6XeVYJjSWqfrYUXA81oeJzs5Vw901YDMkVz/v7whf6aaughq4vKw97Z9xr
x+mDVVChwFhxwg3nV8V6J1HVKiix133wCtuPJ6miyrwKCvKSu+3dcT7Tzlu+
FlQFt4devyJ74LzeJBZ1trAKMmi4pwuwla8oVl3vqIJU6Ss/FDzx/sap1rZM
V0Hi9fztUeww82kNdZpqiMn8xHDLi4y+RAU+2ylQDRH9QvvovcmoibvhOo1a
NYT8vXGkGNu2cemVtHU1BIjXyCr5kNGN8AXW3PBq8DH7oTaG3R87JaVSUQ0e
ycf1nX1x3rAluPf3VwOl282cwY+M5P9euSq9UA23fjXfKsW+x/v8TPjuGrA7
8tcP+eP1M6pTZJasARtjFPsOWy85Muadfg1YxgZnUwJwPo115f3gXgPXHj+t
YAokI5W617b7s2vAZJmuqRx7oob/U05bDRge1HqqEkRGGpZFcHm6BvQvJoyM
Y1sP2/KeJ2pBN/zVtFsw7q+5JzMihGvhXDP78p4Q/N/n8pJ26NTCme+X/1Vi
RzHvnrnvUguneG4zqoWSEZPN2PKdjFpAOh/3TWIzmFHfmWuthf9VYN/hVL5v
AMBFnDcqJBGiIivF10ql7qcQopLsVFJKpSKpRGhQkspIFJKMJJtj7733Dtmy
RykRv/v35+c61/Ve7/M+9zzKD4Ul7d1oZM+azZrm/bGwJ+mSEtdTGlG8rigo
uCYO5AajjsSgO64GnhWUjgMZngk99Wc4b0a2Rp7Xj4OdmjIXetHZnW0qww5x
IOZga+PgjvG7boYkhMaBcAzdmfs5jUS+5zErKI8DwZ4Fzzj0gcJHzrwzccDP
eSBQ04NG5lLOM5isjQceFZcv/WjuRi0x7a3xsMGuMO3BC6y3yb+czeXjYX0k
SymPJ438VB6WC9SIB9Z2zeYE9J2cXPtF03hgYfPs13pJI7u9J2ScbeKB8UDd
zCD6BCPnuJhbPCzf4GJweYW/+71n+v0uHv6GGKzne435c7aoejQuHuYbAgSS
0WN7FCeYi+NhdnWX5HEvnF+/Smerd8TDpOLWvSPowm7hPfFT8TBqeUH9kTfu
i6lNOcCcAEPvIvQFfGikKcxa4DdfAvRV/bhAR98x0ZJqlUmA7mWpWzq+NLL3
ZVlj95EE6JCxdhlFm553LWU/kwAt5kkvn7yhkRQLY4urtgnQ4DsfKOiH9ZEe
lDfpngA1JXuj09BWSrdHAkMSoOKPY7ruW9w/Um8M305NgBLJvNJx9IDJC7l7
NQlQYMrU4uaP+6lBo0LEYALkvDwysDUA6w2nt8uqfwmQnuc+m4F+d4Bu/Gxj
ItBnqxj03+E8LWr7Zp9UIiSKcLBPoYN32GvxqSZCjMGpLe7vacTARoxTwjQR
op757RQOpBHdqCXbC7cTITyjfW82Ol3O3bv6RSJ8HBfQMAzC99nFwHEpPBGC
BM0MZtCMm1aXSeUkQoDOp4sewTSyIzv5i3BrIvg+Grq14wPm19EUdq3pRHid
LPEwFx2V8f3+pzVJ4Dlk9co4BOOjJ8N2p3ASPOOND5pDT00rLQwqJ8GTo3PR
nh9pxE5OXKPRIAlcHBUzxEIxHpNXK81ZJ4FjrH1ZPtpR8nm5mkcS3Pue1XL6
E43sqv4sXhWeBLc3MAz+QlsK5tm55SWBtarK3Ksw7D8Pz1vbdSaB1R23VZLh
NHL9zJ9F//kksPxczl6EDpPMCZzhTIaLHWsFz0bg/qWyfurhrmQwW6sj9Qct
0LnYoa6ZDKYHffZ5R9KImEp1+xGLZDCybtGQ+ozxoqVt5vgwGfRCNxuWoHlv
8j8fDUoGnSZTC7MoGlHaavnPKyMZtFlCbP+ibewG8m1bk0FDqf+h7xcauWvq
XO/5MxlUr4q+3h2N+2t51nQ/ZwqQwCvBZehBFbVfdtIpoFzz9av5V5zXLvON
qhxLASWG6YwldMb6jDvHr6WAvKxcuV8MjWxz8el9454C0hfvtMrE4jwbqfeN
/3MK7PRLH6xAk1NLej0lKSBetjR3MY5GVi2yufYPpoDwX2BcQfMNaOmKMtNB
SOoxR0A8ztcd0eu/iNCB/2yJoFwCjWhHNMbfVKUDz+s1u6rRHhKBr+9epANX
gfb+y4k4H25wlcp/Qgf2n680VyXhfuT6Ye5YOB1YRRsN36N3XD78QaiEDixG
my4pJGO/laRrKQ7TgfG58e1a9GmtC7e9qFRYzgx8dCWFRgJuOMjJS6bC34me
10x0Gul3n9y5RTsV5oWEPwShVQ50+R6/kQqzJy/F7EnFfHWbv1L6OhUmH0dl
1qNfNDCZeSSlwmjKePm1NMyPM5qu/i2pMDQs3cacTiOxmp+omYVU6NtsO/QB
bWzJ8M53Sxp0a9F/7s3AeC5M2O96KA06HiwwNqEVFVYYiyzSoCVOmfNGJu6z
jFbBJ5+nQUOvsxCVhfP2puOfpeLSoIarcFcoesrc57FxUxpUqLEoK2dj/vy+
z9CykAYldzWPtqC3sJpKRwqlQ0HUCyPrHBpZ+S1zpVQtHXI6ay+x5mL/IzJP
D1qlQ8Y6LrswtHmOazjlkw50MHh8MI9GNG8FWEhkpEOiTYBXG1o/zPlBSG86
xHz69uFWPubD2MiP62sy4EuzUOzaAuyPF0qWff/LgHDahawI9NfJJ3s2mWTA
x70RFaSQRvSGC51nHmVA0LUfbR1olhvfa8W+ZkBAkNTw7SL8vuMeBzKbM+BN
7c1f64vxfEU6izErGeC1KokpCs1QYFi2JJEJnnLznColuH+Laml81cuEZxZ7
t3ah79crTOY6Z8KTt46775bi/bTayclGZ8LD8lxlzjKMH8bCjjWtmeC4yKgV
jZ46xJ2pxpQF93YdMVYrp5HoOsfnQ9JZcPuc++UeNKMqr/OkaRZYe1XZ2VfQ
yNsHT1efe54FVoXsT7gqMd/2st5QSssCy1+63jFoZ96L045DWXBRzC9EvQrP
W1apsYs7G8yM22N70SAgPa2lmg2mHgLZDtUYv1nSUq222WCUfa6SuwbnCSUb
w4ZP2aA3Fdoeh9bwyjIhTdmgs21oWLMW++3x8adCzDmgfUpivh+9JndTg61i
Dmi4Wq12qsN8LrsSp2yZA6qpcRt463G/bf9Q7/AuB8iP2a2JaAbjaie56hxQ
5leU1m6gkRCGkNKLDLmgdMz+wBDa3FRNmVM+F+Sds7RcGmlE2P1jw17LXJBJ
WDHma8Lv16vu2ReYC1L9hy2T0b8TovlZG3JBnNvtzvFm3M8sI2ramPJAWL38
yQi6Q5cxYFIwD4Ts1/o8aqGRs/v0LNX35QF/9ImPAq1Yb/9yMPfr5wFPl3cc
HX2OMSg03yYPuNhbsnXaaCRzqShi0DMP2A9trhpFz33ieqjzJQ9YbU07nrTT
iHTJ6nMMpXlAC/8wItiB5zk8nv2nPw+YWvvm09Dcusun967Kh2VKlPlUJ43U
tG57XCiYD3/3XeGaQMuuv+bvp5wP81Zftz399v//k+860U3yYTZ4SnpbF424
75B6ut0+HybrZA9moke8Cxw73+bDKOMdbf1uGmH1yA/uo+fDkHy6yRQ6MIw9
YW9LPvRdWrJ076GReO5ay++/8qHbH+4Kf8fnHQvPaeMugI6KR67Z6Ktvc0K2
KxZAy1Kxj2EvjejUHNmeZ1AADbvXhM6gm/gtRJLuFkCNmXa8Rx+NmFwPPrPo
XwAV3q9ydvRjv1VU//IuowBKihqqctFM/Xf8vb4VQME8d6fxANaL1I5TvcsF
kCNu/GMOnaZx/PGLbYWQYRL423MQ50lNZTtv1UKgv+hhFh/C9+PO5py/XAiJ
Ods3FqC71iUeTPMohNhpi+2mw1hPxvH94wrhy/YomXn0s+L+WpOmQgjXGz/4
egT3ke1hH5QXCiHUTfqY5A+cHz9GvHoiWATBabdOF6GZz5WZyagWQcBoypWz
o1gfN+wROXy1CN4ILNz9g5a9OOeW+boIvI4ru3mP0YivCWtScGoReLo4+0qN
08j78vCZse4icE8sCC1BczLzzoSxFIPrAHOC2QTeB0f0y8rdxeCySTP3L/qR
Wfgxc8NicNR4Ue07ifmtfUDmiksx2N+v7dw9hfPU4rvDvVHFcPvrhtEy9IU2
1dHqxmKw7tb/Yz6N9TFjSnP3cjFYcQSw/EOLzjp0sUqUgOXhbxvfztBI3M/K
LFO9Erh4W0j4v1mcH+sEV+90KQGzCPP/KtHXOYJ67L6WgGlbOFjM0ciRM12M
B9pLwIj1x7EVdNq5CBY3llLQU5YyDfiJ+Xt4rYeOfCno3Lh5Ve4XjSTPc+QE
mZeCdkjivWr0Xs0j+bZepaDR8Mvt8jzO+zxdL2rySkF19d43q37TyMzM61X0
6VIgio6f3qMZJTiXRLeVgbJlboLCH9yPvvvYi+mWgdI7xrxaNH+TT0Xq4zKQ
r1KrubKA+aGer9SZUgYyy8++Mf3Ffqwf2+w9UgZSMlWjQWjBjx3hffzlIG7O
vrBnEee7nUuRFSfKQcRXl9aAjuUWjzn+pBy2lrzhtlqikXs/Fg7apJcD/582
YZZ/OJ/u+esoO1UOPJICsiHo05naYv47KmCj6Tmyb5lGRn1dz4aZVgD7y9Dj
TegRp1/79XwrgC1v0PTGCo20OVWXJVZVAG1W/BrFQJE719k2ZzJXAqOIlX0o
en1O0Ec7qIQV/binyqsooiF3+V+ffSUsPp1904J+FJ93nTmlEubTFcKsGSmS
tLhQ2jtdCbNj9xJZmShSGtnDc29XFUxuycoLQ5eJ/qurvloFoydWag6upsh7
lkt2A5+rYOjh4a42dIzMzM384SroS3Idu8VMkSUXGsMlsWroHixbWMtCEYet
bRNNl6uhg2ctFYl2bD3oxBVVDS2aJzYdolHEpHH4t8hYNTQ4eIt0oln/E9Zl
210DNTHNsnYURcxEziiU29RARQ/vIfY1FIko4NO2oNdACafpiSh088GrJT2L
NVCg8uGMCitFrPwespLDtZBj13etC82bmH/1mXstZETuuH+XjcL9mfd6Zn0t
0Nstn3GupYhWZNfEjXV1kMj21S8aLeSW6HFftg5iD0yFqa2jyL5nJjqMRnXw
5aZsUg9aPENEknKqg4iPdvn26ynSlnD+2KuwOghtTKvlYqfIE9HejQGVdRDE
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
50A3lLNqBC1xM1ni85E5+B9TS6AJ
       "]], LineBox[CompressedData["
1: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
kkV+wLPNFOcO7P//PYf/AU6Fdzc=
       "]], LineBox[CompressedData["
1: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
HCnbdM6Shft74IvNlANUEhf9qjmmEff3vFGzLPRntWWre3A/lxDo7zN0xvOS
nNKk+wv3d+mLbo3otSY/h0p/4/5u8t7vzEEqcVgROUQdxP39rHAI7RCVRB5X
5qr+wf39sUn0EzSnX6k89C/u7w03Uo0PYz1ZRc2gzmLCiERVThNaOv9Gy625
TBgwoJWcdcH7az46a44EE3pO2VZKHcH+c1RC4C/FhM70O5yn6EXzzoQOLGRC
G4Pzy8SVSmhJCi3hikzgz1Uc5aH/ufpslVVlAlf/4OyAozhfunZsbljBBI5H
upSMG5VcUdsQY7uGCYzk9qW5aA/TerGlG5hQU71y7Y5jVNIR06mdos+EKiHP
LS1o357Gb+4GTKhYn2d+0Z1K9tMrE4W2MeGT69C+hcfx9/f6X5pvzoT38TrH
8tG3SHPMTysmvK04d8bcA+ulZNiOzD1MKJx8G9KGthcmRSFOTHilORN96QSV
2I0F/nM5zIQ8Z6M0eU8qWbwNdpgeY8LTqGu5L9AxmlE313sxIausomSXF/bf
JYekVvky4eHI/O+/0KkFw7M3nWdCirpV/WVvrC+z56aMXGJC0r6YjkUnsb95
mszrvsqE+HDm6Ct08p7Oll0RTIgpkRexOoXz0cqzL12imRDZ57SgC91vYxN6
7S4TwpVTlUNOo8tWuMfdZ0KobcvaJT7Y30+4yNc8ZELw1eVbX6OdSts8x54w
4VKh+04bX6wnMjnL/8tnQkDnU4ff6LkuGy97FjLBf1H/sWt+OI8q/07KLWGC
z671/kvPUEmQQ+3pP////7pLZ66+QT8RTTM3+cYEj/yimN3+eH4XP1929ycT
3Fr+pvWiI1Y1vhliMsFFBvKun6WS+eZl3pZcJjibBr9TOYf9xD9DsrCFCY7n
vnx/i+a9/5Cr2sUE+2zRhj3nqcTRq9cwtp8Jttydnf3oyk9iZROjTLCk3v4T
FkAlFX4PLvtOMcGc1ImoXcDnR692mRRmgYmPrHQpeuDbeOB1MRYYZuxT2XcR
r0dinr+cJAu2su79N4T+x3g983ghCzaJ8rbeDMR5O97OyWQJC3Q3qe5Sv0Ql
5rbvlrYuY8E6z6OOH9Dr5tf/CdJgwZqUx+6OQVRisdLrtPY6Fqyq+e0/gk7W
F6c36bFgufB/1yIvUwm35/WpTwYsUNb2iV15Bfv9xCt9OxMWKLoVPChDC8du
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
jbIH9t17oe4MuviJ1yyHOxMmyBub89Dz5Y/+tV9mwlj2wY4lNEfy9Q83LjHh
zyF7uv5V7J/fHRXfi9h3alA/3hZEsXDxWQVX7PvVJyN96PXmmWZ/XbDvAtVT
u7zwHjnmydtyHvv+fGDeH005qTnx1hn7TnCzNaL9+iuyo84xobtTjmf9NRLx
Qsmd09SJCQwPA5IT+trDPLZtjtj31RfXFqBvuvpe/HEG+/40VoLFG/cPTvOt
uQ7Yd408GUP08jwrzfc09v3H9x2paEfyKR89e+z75andg2h1O+oXUTvsO7fI
AZXr2OvoweFeW+z7I1WtIHTzfFN/sQ32fb+lXhNac+3N0FJr7HvrdeMNPiRC
N0JY1N8K++5638IZ/WpPlNTRk9h3jrJThegWmcRFGUvsezrdkc0X9wPxXfkV
5tj3vSwXjdCRNzb3tJph35slr6Sh04xN6zNMse/nD/kOoY2HbRmXTbDvbI7B
qn74+b144UecwL7fD7t1E73PWSLyhzH2XSUrvhmtSV11O8cI+/71S9LGGyTi
vecG/sBj2Hen4XQXdI5iQ4KeIfZ9hS+zCO0lZxYqdhT7nqz4it2fRDT5QxBN
H/u+y/jtcXT2oPDnET3se737h3S0j4969Etd7PuZO5+H0QIlzSb+Otj3xbdf
1AJIRM+4of1ebex74o/mUPSwxX17ySPYd8W/HS3oo42ipt8PYd9r1zM2BZII
rtq2Mhst7Lv9gQFXdO5pTvIWTez7P5s/79HVrs7D04B9T/Cf5gzCebR5N115
EPu+PWPBBM18F/wyTQP7XvWJ7RH6XqPz1Fl17LttL88oOlPE4Y7iAez7LDv5
QDDug5IC3zj2Y9/jZNdFoBd+zaytVcO+b9Pd1I7mPehlnbwX+/7pvKzUTfz5
hi4Jn1HFvltFKVxGZ2ZJduzew4ToqRyVUvTp7m3LbCpMiIxuOsATgv0bTPjS
ocyECJlxLXN0TXQD3+Nd2Pdysv4T9LRu/IKnEhNuWuw+Po4WsGWXPbsT+z5u
aqkRin18/5S6RxH7fsvLLhJ9bUVpNYsC9l0q2akDPUO80v61nQl+H95flA4j
ER3zSosv5ZngY0q54o4OjrsedkUO+/5n0bccbWF4J1d7G/Y9TOLm6nAS8XMT
xwHhrUzw3EREWqINjZ9Z/pPBvhefvv0M/Y5vU1KZNPb9+M3kSfTEe9NPD7Zg
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
e9H3uoB7Y3CR74edAfDQmZwQpY34/bvepRnAAzMt0f7wmrpOd3W4P2Q8qQMW
azlGsMB9EtwZW/mo5C0P7U+Oe9D313ueOsJ7ij9VbIW/mh5/UQafMt+43L8b
ff9z7dVafiopx6DP9gim3Y9+fQImJelUa/jzttLGNJgSo5/dJ4O+V3a3TsCc
C7GUg1jvOLnQqSxAJaXWZ0VZYb19UuhrAJxvsUZpA9wWoPqzE2aOs47Oh9+L
WP4SFaSSe0u9PrjuQt/LvP84wQ8TLUs14LdGj+Yr4NH87/rucONY3Sp2ISop
6uRZ/78b7g6sNYF/+umdZIbrtqzlzoCP3UrQLpBG30t3bJyCNe4MnrkIVx/T
3UxsopLLRf3nkuDKkYvb7sM1VW9Vz8Llvg92dsNSU+27buxE34Xy94lvxvu4
1craDS4t+qB0Ff7jTSjvgYv1/xyshmcHjwZ2SuH+Psh7mHML9tu/A9mCWH/u
JWdgCkduqWNtw3o+v8nJTHisvs3MCc59fsN8Gv7QknOIAX6qm3DuoDDOB607
oe8kacST/vKLD2CeP4pXHsCZt79epcOmskVhenDGBgZ3ia1U8rx8Sz0X/Chv
q48LrFH6j6d2B/qurRZQAx+Qk8/xhVO+24SuE6GSspsNrffDSTfvxpjBjC0z
28ck0HeerORs+LXJt/l3cNzTpowZuF1j8lAYHKMx+lRNlEq++XG75ywc9ZWj
MBRuvak9wARHuO0q+wJH2iV9qd2OvnMb1EiK4X1Y/txnDIdkOze5wQ9Xju69
Ct8/FNFWB1u2mmmpw4H0wi7KNipZ/+D8ZWY44FrnV3O4dH/mjSRxGuHPOfsz
B46UcH19BvZ7zD82C4+s6ZraCvsQB6Y1xPG+VNWatW1D3z+bLYTD5yn+TvGw
h7PH6l5Yxem78kn4Flsqq/R2KimdKURZFkPfH73mvgkbWm5uioavK//Y+AY+
zK8XZQG7fmLawitBJc38TvXJwdccxcWt4LWLMqoLoug7i7Z07v9+YX2gBXZK
tZddgP9xsjZ8hx0Vgw5o76CSl/iunE+AL7Y/PRQF//VgfKsHO1x4f7gPLkkz
NpsRQd+ZJg1kJKmkuOX1bXxYt02imNyCr2eRyUlYt5HbZ9EEn/zNeDIItm41
st0ghedl9FSPhC3tXC+dhZkq+q39t6Lvq2Kv5cONV1wfkrBZ/Ev3JZh35KcF
O2y6j+6js5NKDka77PwkjL63LAbEwI8rUwfbYeNzm8P64bqZ4sUc2GiZiN0j
TSWL985sc4INY6xSPOCco7/+7IUNdvs+bv5/PV59x68t6HtT+jO+XTh/d8jl
ZsF61g2F52CuZu8BNVhnYbDsOSyg6TTCBmtHstauwEcOhPP+3oy+S0u91ZOh
kjYmlyNCYfUGvQ9x8Afi6WFN+JCF4+cBuJOVIswMk7Mh3/btppJZvyVEGWDV
sIIBL/h8g3CO3yb0XfLj2DuYhe4qKwsr1U5PC+zB+2nKft0dVjDbsHge/mDW
E84Oy/2VZyyCA/MFDfKE0PcHp9hW76WS6SlkczK8d7s75Sjs4iio9UeQRuyu
TuRLhOd10+9VwLtOVW4Zhtd0Nkv7wDunvonL7cO8EOrOcA3eEbRqly8c6+cR
wA1vFxPd3wYn5geNLwug7xXqyptk0W8NF84PsKixrZoDnBJpw5cEi0z465TA
3xtErtvDwveyjzHtxzxro2grBW/a2mxyDE5oKYwb4EffX/2ySIbLXuSpJsL8
x7nOj8KvbQpvXoY3/pJxVJDD+bY1hEkUXu93zMUPXh0kMf6FD33ffPVWO7xL
Skk+E6aURPpukaeSUQbL6g4wl0Fx4EXYyUHHUQ3mHO4KewmbKm9tVYTZfeZi
mRXw821nqPiwkUawCgqmHofDLsypMMIshcqZqfCs1vumqg00Ys0R89wxWIat
5dpZePWAZ5GSIpXkl2+Nj4YZPB+W+8PXppkO+sPLG2trO+CcqgOrzOHF/P63
W5XwvqsVCFLh+cPM7Y5wUFWf4l54tm97dxnsUzN4OHs9+u5+uHftASrJsMn6
ojI8zXth8AR8LyDfa4UXfX92fzwNFrP5WPwantTM/TsBP7ZfxR4Dj39rXVRW
ppKTA1KvLOBf138zBsJrI9ZsWA+PUHjYu+D+nbVcP3jQ9yeyVDEVKnnUtGnl
MTygZszvDA8UEL42cH+Pm3Al/PluT/wOuM8lbju7KpW8WNhYN0BF37nKdpnA
OuvqzZ7DXzN79mfA+/c3HwqBe8hl5Sl4A9+XF/owrXuLOkHg/tN7w5ob/nzl
oO59mI+r70IDBX1nP2vYDU9pCv9JhjvS75wSJ6mkg9eQtCbcrvLY8ipcvmLS
sxFu63xzvhoWEBd69IUbfb887Mh5kEpuvM8f+gxuWcvuagorabHbO8JvH+68
nQkr7LhgIws3KunfmYbzg7yY59eh7x8vBx08RCUzJs1jUuG6i2HhD+DCyKOe
nnDNmhdxdHhkJ4OMGlyd3JEqoUYlJZjUmJu50Hf5mUwX+OU7nTc5cHnbxrwa
mOG7xxEr+JW9YvE6dSr5+1Km13q4dPXpCjM45cDJyiVO9D3hVl02HJ3HMdQE
F8omN8/AV7Lb/e/Az99VtatpYH5KSck0gPNtv3eHwqIi1D8ScO7K6u9f4Kui
4+1NHOh7rNiQpCbm5wsviEQ4e4/mhBvM9avE4hKc9fb8TB3co748JwE/Phuw
RNHC+XS+rniGnUakLz5hsoBXJTx++wROi2phfwofmLZUN4BTdo1T5+Ab+fGO
YnDSm3UCmto4P0s61q2BEyz3bI2A5e63t75lQ9/nDCV6YatY/0QvOCb8moz0
YSrpv37K8yocJRUtdxNuyHWsOw1H1JWovIEffulfWWRF3890q/PqUEldt+yB
B3DIzLyuFWy2kd6hCQeHCB3PhbvSjCS54CAJVdMFuF50s1j5WvT9tYWVti76
Fv0gOhP2N/W2i4LVh9s15eA7f9Iu98GrXJ+oScM+9+tcZfSo5FaNPRtpLOj7
toHbt+Ba0vDANdizksWvCTZMm4y2h2+f3HF/wxHcX3/seLkbdp/UiTgLF9Cs
PX8xo+8BF+Pz4aScCyvVsKvIg4dLsGfdvZLL8LWyvCwdfSrZzLrDVwy+YvQh
LwbWs3shvgZ2Gpsq7octHRusctag73d5K/ccxfnwxTaiAb64Ra7eAz658OAS
J+xQerKlGXbcOEhawnbHbnzkM8D79uovdzoT+j4STzsHP1k5cuAebONb/v05
XFlZ8NAethb6OrQC33rJYsgJWxatTOgdw/3i3O+h74zou/7Wf3Fwg8bso2uw
2eCh5QE4LCbM+Sxs6mWzRtYQ+/9sdJk0bMJ/l8Mb5sisKvq+Gn1/nsnzHh4Q
+GTgBxvpNgkIHsd8/8LjuCJs2D+y1Q5WCePdogwb3ObYUQR/5FrPzgXrb9i1
e7UR3gdvxcA3q9D3vKPyR2Fm3X7DIFhH21k1EX7K4SaqB2t/D9cYhlsE78Yz
w5o3C/XkTuB93Dd3qYEBfefpPO4Lf/w1zHEePvT0n2kb/PPCiVpRmNTgt95k
TCWttxvTZ1a6CdWvSvYO8FGPjIgGWNnNzKkE3m53Jd8JVuL2cGM6ifnKbtuE
PqyQneJxDDbcWmgqAcsdeu2XDHdrNne8We4mZOl990dhF2mfI7fhvdeYIhVM
sD/dFZJT4N2c4gl+sEP7796VpW5i12OttHbYc8DqfjW8k7DP3nIK/35NZ5oH
LPk5MP8inOIQ8mRqsZuQcH5a8hKOFRG6Ug+Ls72vZDbF83jH7lMKiz2aqD8O
x2zt+9ALiyhT3qXC1ezndRThLZ/2dozBfxJ/hjLCmxyN6Eqn8XntAgofF7oJ
QRbXPn94ePT+RBDMnxoz3AEnTP06cRjmU3w5udWMSgq/+TDPAq9vp/1zhKvT
Tp1rn+8meC4sLpfBZonX8qNhCtNmZtYzVFKw/OKno/C6JILTGFYOVw3bDnPK
WfE+gqXypnNpc90Ee6uP4CScv/nO73yY1S5dRMUc8/yDVfF2MMuqhh2BcN+X
+gl+mCl+cHcX3CosZdk0200w7mNVELPAn0+1XPMZXtUiSTjDx/Xk2vLgFRs9
zUp4N39Cpyy8tHTpCLsl+pLtl+30r5uYjw4xMoHX1bwWoMKzMgWnM+C8xs2x
TTPdxExju/UUHDW2IDICT1tN2xNW2G9BrwPH4an59c734Zp9ug0x8GSE/PVu
mPeY5VNLeHznKU9xayrpx2B26QD8q/7m3atwKPM+wfm/3cSIeWJwNRw7Kvex
DR76VxHJeRYWy9odDA+Efkswhdn3S6nowP07Vj3KhJPWsOSwwX01Ik+m4SP6
263eTXcTvafVCw7aUMkdoTktofDX6XOlD+DpfYmvJeGeYP8qOuztPfmOHaaJ
ZzdInENftp3lyfvTTXyuevvOBRb5fey8D9xp8qujBhaIc2rZCnf85uxZZ0sl
DXR1Vg1NdRPtgTI/zGBJvUvJGXCb6LGRbNi3QlDJDX5ffuX3DPxC8r4UAbec
iJxVO4/zVeT08sLvbuLteNFKKGx1ZF1ZOdzo38X8FR5olXlxA24QnuOUssPv
b58roAjXvRRYfx2mMjRd/jvZTdQYKgvVw54T76pewtWjZ0Sp9jjPn33R8oIr
73hKWsC2zPfWGMDlmx7ueQo3XZkN/zLRTbwqrlGYg3WiVA7Xw6VH+wlNB7wP
dHvz+3Dx0BqtCHi3rLnuTrjQe7t+LxxrUOLCCD8XOHxC+gKVfLX8NLBjvJvI
f+FgdhMOplYtN8K5evfPvoEfzCSRJ+CnP5858F7EemX/r5WxbuKJR6uzFWyi
+bGoEc7a+Pt6LrxFlch1hx/nU70W4IhR7ZdCcPphWX/tS9hvuyc+Nv7qJtL6
TjyIgnWY3TbHwynublF98BNv/V1X4WTeuEQZRyr5/H1UpByc+OzVo1uwa1fZ
5/bRbiJes+dJE/zLsTsoGI79tlSw4TKV/Oqkey4Qjrq+5eVZ+JzYEx4ROIJy
sDof/vOMHO0Y6SbCnli/WYK3/5tYaoBD1O6813GikpsGt44ZwsE9GZ9i4FlV
xSBWOMjlTU8/fJtzhqt/uJsI4Br+sccZ57mu2p842D+TbdQD/junYFUA+5E7
p5rhD4MXJzfAvt1H5viuUMn7B6mD22DvK5cZbOG6h1G9N4a6CU/2MJYX8Nwr
15md8O3051wMV6nk3jpjqbHBbuKmSsf6I3DQmX83KuDrnX+F4uFW1bGVu7Dr
5Y1ig/BCQ8LxSNhlraKU7DXc731ebJwY6CauPjTd6w3Pi51Tfgo7Kd1SfA/P
BS7nFsCOH5NIQRfcH3zFo/nhixertOzgCXWipvZnN+Gw5rt+0f/2eUjPg+2S
VxuvdsV52d40agPbyoudOQqfnsjeuQO2adOwSYT/bjYSHu/vJqztz18Yhn23
iw0kwZarA67IuWHedaz2sYHNE57c8IX1K/5M88Nmsi1ebbCPo+XJwh/dhOm7
Mf9N13EfSg9fjoRNbNeFOMBVP7UUT8LGK7ujS2A1LbrgVF83YRRrmMR0A/Pi
JxvvIthwz7X0Y/BFRk6Zc7DB26icZLgiTYlBGtY/W/J8FL59wiq47Xs3obf4
+aXCTcx3LeeuZMI6UfPVfvBlg8UuN1h7l1BjO7yYlRF4BNZ8o9K6xZ1Knrnv
HbrU202oW1p0XoR3cuwO1oEPzXl9eQm/Knj+1BImw9P6mW9hfpDqZy/5hr5L
1Y0eh097lPW0wMp1P6dS4T+bBPUDYKUzLPNj8DXfXG1nWGFGYtWB25jfnGIu
1n1F30N01t6D5Zy9ykJgWYmL6z7BMpYaMlbw3tfBG0Q8MP/2lfXLw7tN8zZd
ho9kbt777Qv6/qdNrByuHR9uCYJ33p+SYvWkko1rT20wgyW38e4zhq3UnnGw
wRKV+5Uewem75Hjf9aDvJ08enIQvRVz1vwOLTV7XVvGiknZvdAkFWCQg/mgg
fJCrqn+K3k0Ii5Qbd8Epv5+aJcKby76cEfPG95O967IZLGS0YuMMy57xPygK
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
kYe+N9VaXoeb/6ppdsD/rH+er4dz3TeEj+ai7wvMl6nPqOSx9K8lOlifipRw
tYBfl+gvzGN9Ulrn9lPYY01HhT480XDhzhz8tsVz1dKzbmLMIjhIMxfnw46+
FSasj87mhkfAs5HstGdYHw5ri+uFp4XOf4uHBySnUqXzMO+kxFFIuL+WJ+sm
/Pdryf7up+i72f68N/BvgftVwXDvX+Ni3nwqeZM3b8umHPT9wfUKK7gnSSCi
8Qn6vj2+Lhe+4LrH3AmmVZc1L8Cf3NXZKfDnU1/atQuopHzJ14OF2ej71HJ3
FMwrzzLIg/WOIOHvfTCfelznarhd7NCQzHOcn6OJw0n4820VZyduwXdJsz29
Wei7sd9ME8xKZdd9AbdMPF7a8ALn25a6P3vht/camWzgt5ZszWJw49YR9gI4
YdjJyycTfX/FzrP8v73Kj0jCdcelBXQLsT959HJ54Zpf+ltj4Qs3HSpvPUbf
/ZwkfsKGb4tttsGVm8Nl9hahL99937PB5SUv5DzhLZH+1c4Z6LvBJ5UWuOi9
T99GuHR4Rp2/GP/+HS2yOh199+HTs4Wf/7u93hYuFFQ6/gKmnu4v4oSfF542
ZSjBfXzMcn/uI/T9yG2rI/CufMFrJ+HcgWS7eFh66PK5hTT03bP68iBscHxC
Mx1+wtfnKluK81c3o/wFnFXA6OENjxoNWE8+RN91tvm9hy1VVo2Fwek/NO8L
vkSPaie8leC0W3YRdnBiX5ulJJy6PjC+CH7688gnv1T0PTfn4epXeB9Y2Myc
4UStd1lH4XNLnpFb4fje8bxEmOrDr3E1Bff3G9wlw7CRpP7pjXA0dW+lXBnu
mzbv1djhyJzj9b5w6Lq5VSbJ6Lu6S0sb/OVTc9tiEvr+JfrjpnIqOZTT/iEd
DnYtpTnAAx03/J7BQeto30vgp0aNAb8Tu4nArIUhpgrM2xES1kfgewc3TR6D
Rby4qPvguzTVf8nw8uTv0rgE9P2q5fIonOr5RlgG9ubwWaNYie/vg9njtnj0
PeMRx114Z81dg9tYv61az/MRNrNzrvyKdfeuAQHhKirZQYnkT4ZvOK0VuQSz
9Ozj2gW7sUrueAW/2pYr5RyHvqfp7mapppLbg04Nv4hF3w9ckjeCEz/GVRyD
nTseqD6EeW687xqJ6SYuX8rXGId9LWz+vYYvMbfrHXiN81WLQuTAF1L+HL8H
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
KvzjxN96BXjGwe4yDZu9YZu5vBV9/3PxmsRNzD8n1OWGtqDvMQ9vn4KLj+1I
14XHt9ckvoajLz1iDpZE398Op3LdQs80Vr9t3Iz9/Sj7YyvYPvafmRX8dX7r
s3S44vdZ+6cS6PtNvaJp2C4mtZUZHtzmXk7dJij5cD07d3Hs79XXa6JgJ/NI
ptxN6LvNs/fdcGAi+9HbYuj7bGubZAxBdc7Vsf/4D32/Pt3tC9eTt/hewF2S
a79Uwiu+8Dp5iqLvFbu/cd/BvPpbau8xuMPKctIaPmCy5bMk3DYVOJcJ/9KM
Cp8WockPV+8uzcIqv47pl8It4mWsB2IJqnk6n6N5A002lfVx3YDFtcruScMN
5kx8vXCZv5rHJWH0feI/oW1x+PN3epj6hND3iANi/vCfwACl7XDNf85b38A1
UvkjF9fTZHVJmOyaeMwbIVcaGOtosvJQ5p4jsLvI5LvN8OuxOrUncDZP+/KN
guj75e8a87DyOZvA1wLY30VWGWgkEFRdqvYKPri4SMb0Ftx1ZmWfKz/6bmxs
/Qlu9Ajuf7MWff/m7SCdiH1jZaWXPpwXcts1EL4j0qLQyoe+C73wegtfUa+w
myHQ94JOf+Iues+esCuFF303mD9vB2fa8tDTa9D34XVh2fAkebTYBH58QSVq
Aeb5c0okg4cmMwRtY7Tu4X2MfOOkCac9P383Br4xvNHqy2r0XTflQT/c/Who
eDWcMlD5WCYJzzeHXIziRt/PDTw7C5cThqHjq9D3tazFtfDlvi2JpXBizubX
a++jj6tkre5yoe9a2m8d4Cgf2dbRlej7Z9fGXNj+wOADKTgm8Gr7Iuzw0PX+
dU70nTf7o04yQX3hYXFbBt940vQlFjaY1X1nyIG+q09+G4Azn17QzWBH33vX
/JRNwbyRVt8pB0f67ZoPgiMc+acOs6Hvq83+1cNd/vPJKSvQ90y/FYKpBJXB
z882wIq+74tf5Qz/0+F+rgiHdL/ky4Ob7t4NDGZB330+Cv2Dr31rtmCCz3P9
FdN/gPM4XcnruBx9fySyLQE2OqHTms2MvqtRO4fhZy9Kjy4tQ98Z9oq7HqKf
MSp/LGE/r0tkMHxVqU+qiAl953ik2QjzKX89yASfevDWYH0aQbXfCBew+ccg
vVS+mh6HM1dv9HmxxCA92jlsCmCdsvj7K+GT7lKOyx5hns3QN7b7yyBPrDA4
YQivvbsyJX2RQboke3jfhcNzWRf//WGQxxRvBHyFpf8mRRnCTq3PLyikExQr
c1xqygKDtD/RFhYCf8wNqeKEjy6fjWqGX1/rtDT8zSBt7/HfEc7Av7fDK+Lr
PIO0VlC85wqHbOVLeD3HIK2arB4Wws/vpxquhi2Pn81anonzr551YuQXgzRn
SnpuDOdGjZeVzTJI04Ty4iSYT4mj+d8MgzSR+/x6FG6yaOC3gY0blr3b8xjP
q2JN5MtpBmnotKkpFF74GG/GAev9Ve9ohQ/pdg21TzFIndhjPSJZ+P7XKRxx
/MkgtXZEDLjB0e+7pGsmGaRG7ePRYpj59Zw+L3zAvuEn6xP0hSEX7DDBIPct
jM2bwPWJjySyYfI2N1MKXGwf1Vw7ziBVpWXZfsAiXR99d8LKNQe5lZ8S1L4U
cnP+GINUPOKzNhxe6K8TZod3z8UIt8PldfkHzb8zSPkbhZv+y8b5Nd/4/Qks
t5Xe5gF3PK6p+/ONQcpW/d75ClZrUlbdB++wFlJizyGoxZSikJ3w9hlVygy2
WTKZ2wBLRR3RegBP7Ngec+Yrg9y6OdhwAhbQesLRNMIgN79ONVPNxffjU6n1
ZljcstrmCuya0cHiP8wgxX4OOnbCPpw5801DDFI0coXbpmcExfFsX6wYLLJp
yykvOL3wwnGfQQYpXKoTWAb/nTXkKBpgkOvN3II5nxOU4yDhIwQLjl8Lt4Af
hUpkeX9hkPzhOdfTYO6Mxm1L/QyST7Tlzk/41grXzUYw78uf99TyCGooWzb0
yWcGyWNCpF2Fx9e9/Dr7iUFyf5d/QsM2bNFOujBXqHmeRD5BXS9a7E7rY5Cc
GwJenoKfdTTmTfUySPbChIrXsEbAlwgteIXRq3dcBZgHQx3+WPYwSJavPU1W
cJlrzqrsjwyS+eJSRzr8b92e59PdDJJpvWjvNMxyVC1HB17K2zdIvcD8GDfZ
/rSLQS7qOX6Pgg/HJXdO0AxyYTB0qhu+E6R5WQWeD0r/LVmI56tabhLHYJC/
+GuZTsMd2eVRox0Mcib3G1sV7DFswyYLT2mvXL26CP0/9+FmWDuDnOyX5reB
S0wYx2rg8TOGGx7DPCPPDbngMcJL/Be8kHvL2KmNQY4+vSl1oBjznomlV9EH
BvlVI1/uBvz8zM3Dk60McrivXakXFmcIGR+CB/x/Udte4nk2BG9Pb2GQ/TyC
2v7wdr7O84Lwp8dKRm/gDR4JafbNDLJ3v7X5mhKC4lzr1/u4iUH2fDxnewTu
/K6yeQXc7Xvf6QlcoHBr9eFGBkmvqnCbh6XKa2Wy3jPIzvT+UxqvcP9fsNX+
bWCQ7eTyM7dgzsqfHmbwB1r84ieYTT90F6OeQbZ4a0ZIlxLUhS3hRxXgRk6X
6EC4Usu0KKqOQTY8vBL7Fn7bIVHQWcsg61SfJBFlBMXkGTu0HX7X8T7NDn6l
kaIX+o5B1niMP8mGpSwk3re8ZZDVbDz5C3CJFsNOBK5M2VmiVY79lmNsyquG
Qb5WOlQZA1+SPq5T8YZBln7wre2HfaODNgrAJW6xzTKvCWpNzI0Ux2oGWcxS
3HkWpgsb84qqGGRhUldvLTyifvw+F1yw+8/g2go8f6lxE9tKBpnfLDzmAC+/
rNqWX8Eg/wepPE1h
       "]]}}, {}, {}, {{}, {}}}, {{{}, {}, 
     TagBox[
      {RGBColor[1, 0, 0], AbsoluteThickness[1.6], Opacity[1.], 
       Dashing[{Small, Small}], LineBox[CompressedData["
1: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

        "]]},
      Annotation[#, "Charting`Private`Tag$11058#1"]& ]}, {}, {}}, {{{}, {}, 
     TagBox[
      {RGBColor[0, 1, 0], AbsoluteThickness[1.6], Opacity[1.], 
       Dashing[{Small, Small}], LineBox[CompressedData["
1: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
NNw=
        "]]},
      Annotation[#, "Charting`Private`Tag$11122#1"]& ]}, {}, {}}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{1.8915123786679122`, 0},
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  ImagePadding->All,
  Method->{"CoordinatesToolOptions" -> {"DisplayFunction" -> ({
        (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
         Part[#, 1]], 
        (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
         Part[#, 2]]}& ), "CopiedValueFunction" -> ({
        (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
         Part[#, 1]], 
        (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
         Part[#, 2]]}& )}},
  PlotRange->{{1.9383795322066075`, 4.937877358683113}, {
    0, 1.204750216397722}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.02], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{
  3.747201610406764*^9, 3.74793478819197*^9, {3.748240532617337*^9, 
   3.7482405595694847`*^9}, 3.748272560577919*^9, 3.748358177322434*^9}]
}, Open  ]]
}, Open  ]]
}, Open  ]]
},
WindowSize->{1280, 755},
WindowMargins->{{0, Automatic}, {Automatic, 0}},
CellContext->Notebook,
FrontEndVersion->"11.0 for Mac OS X x86 (32-bit, 64-bit Kernel) (September \
21, 2016)",
StyleDefinitions->"Default.nb"
]
(* End of Notebook Content *)

(* Internal cache information *)
(*CellTagsOutline
CellTagsIndex->{}
*)
(*CellTagsIndex
CellTagsIndex->{}
*)
(*NotebookFileOutline
Notebook[{
Cell[558, 20, 240, 5, 32, "Input"],
Cell[CellGroupData[{
Cell[823, 29, 207, 3, 64, "Section"],
Cell[1033, 34, 17342, 501, 983, "Input"]
}, Closed]],
Cell[CellGroupData[{
Cell[18412, 540, 267, 4, 50, "Section"],
Cell[18682, 546, 2009, 60, 327, "Input"],
Cell[20694, 608, 1712, 44, 77, "Input"],
Cell[CellGroupData[{
Cell[22431, 656, 101, 1, 44, "Subsection"],
Cell[22535, 659, 2736, 81, 187, "Input"],
Cell[25274, 742, 4000, 93, 71, "Input"]
}, Closed]],
Cell[CellGroupData[{
Cell[29311, 840, 175, 2, 36, "Subsection"],
Cell[CellGroupData[{
Cell[29511, 846, 101, 1, 35, "Subsubsection"],
Cell[29615, 849, 4846, 129, 326, "Input"],
Cell[34464, 980, 4425, 116, 261, "Input"]
}, Closed]],
Cell[CellGroupData[{
Cell[38926, 1101, 156, 2, 29, "Subsubsection"],
Cell[39085, 1105, 4195, 113, 256, "Input"],
Cell[43283, 1220, 8544, 201, 419, "Input"],
Cell[CellGroupData[{
Cell[51852, 1425, 1373, 36, 49, "Input"],
Cell[53228, 1463, 1385, 30, 70, "Output"]
}, Open  ]],
Cell[54628, 1496, 1833, 47, 131, "Input"]
}, Closed]]
}, Open  ]],
Cell[CellGroupData[{
Cell[56510, 1549, 139, 2, 44, "Subsection"],
Cell[56652, 1553, 5575, 114, 207, "Input"],
Cell[62230, 1669, 217, 5, 50, "Input"],
Cell[62450, 1676, 5996, 126, 238, "Input"]
}, Closed]],
Cell[CellGroupData[{
Cell[68483, 1807, 210, 3, 36, "Subsection"],
Cell[CellGroupData[{
Cell[68718, 1814, 714, 18, 32, "Input"],
Cell[69435, 1834, 202, 4, 32, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[69674, 1843, 983, 25, 54, "Input"],
Cell[70660, 1870, 150, 3, 32, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[70847, 1878, 2513, 62, 144, "Input"],
Cell[73363, 1942, 175, 4, 32, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[73575, 1951, 2059, 50, 75, "Input"],
Cell[75637, 2003, 151, 3, 32, "Output"]
}, Open  ]]
}, Closed]],
Cell[CellGroupData[{
Cell[75837, 2012, 260, 3, 36, "Subsection"],
Cell[CellGroupData[{
Cell[76122, 2019, 354, 8, 32, "Input"],
Cell[76479, 2029, 3441, 101, 79, "Output"]
}, Open  ]],
Cell[79935, 2133, 386, 7, 32, "Input"],
Cell[80324, 2142, 1516, 35, 54, "Input"],
Cell[81843, 2179, 2151, 48, 75, "Input"],
Cell[83997, 2229, 3617, 85, 188, "Input"],
Cell[CellGroupData[{
Cell[87639, 2318, 3272, 74, 117, "Input"],
Cell[90914, 2394, 151, 3, 32, "Output"]
}, Open  ]]
}, Closed]]
}, Closed]],
Cell[CellGroupData[{
Cell[91126, 2404, 166, 2, 50, "Section"],
Cell[CellGroupData[{
Cell[91317, 2410, 98, 1, 44, "Subsection"],
Cell[91418, 2413, 2196, 44, 75, "Input"],
Cell[93617, 2459, 2146, 43, 75, "Input"],
Cell[95766, 2504, 2196, 44, 75, "Input"],
Cell[97965, 2550, 2191, 44, 75, "Input"],
Cell[CellGroupData[{
Cell[100181, 2598, 354, 10, 48, "Input"],
Cell[100538, 2610, 7690, 140, 232, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[108265, 2755, 402, 11, 48, "Input"],
Cell[108670, 2768, 6509, 122, 249, "Output"]
}, Open  ]],
Cell[115194, 2893, 246, 6, 54, "Input"],
Cell[115443, 2901, 412, 9, 73, "Input"],
Cell[115858, 2912, 136, 3, 31, "Input"],
Cell[115997, 2917, 14074, 281, 458, "Input"],
Cell[130074, 3200, 135, 2, 31, "Input"]
}, Closed]],
Cell[CellGroupData[{
Cell[130246, 3207, 244, 3, 36, "Subsection"],
Cell[CellGroupData[{
Cell[130515, 3214, 96, 1, 35, "Subsubsection"],
Cell[130614, 3217, 6554, 163, 369, "Input"],
Cell[137171, 3382, 246, 6, 54, "Input"],
Cell[137420, 3390, 412, 9, 73, "Input"],
Cell[137835, 3401, 14382, 289, 442, "Input"]
}, Closed]],
Cell[CellGroupData[{
Cell[152254, 3695, 96, 1, 29, "Subsubsection"],
Cell[152353, 3698, 450, 11, 75, "Input"],
Cell[152806, 3711, 497, 11, 75, "Input"]
}, Open  ]]
}, Closed]]
}, Open  ]],
Cell[CellGroupData[{
Cell[153364, 3729, 190, 3, 64, "Section"],
Cell[CellGroupData[{
Cell[153579, 3736, 152, 2, 44, "Subsection"],
Cell[153734, 3740, 56805, 1420, 2460, "Input"]
}, Open  ]],
Cell[CellGroupData[{
Cell[210576, 5165, 152, 2, 44, "Subsection"],
Cell[210731, 5169, 570, 13, 54, "Input"],
Cell[211304, 5184, 680, 17, 32, "Input"],
Cell[CellGroupData[{
Cell[212009, 5205, 382, 10, 32, "Input"],
Cell[212394, 5217, 190788, 3140, 236, "Output"]
}, Open  ]],
Cell[403197, 8360, 322, 7, 54, "Input"],
Cell[403522, 8369, 267, 6, 32, "Input"],
Cell[403792, 8377, 909, 27, 159, "Input"]
}, Open  ]],
Cell[CellGroupData[{
Cell[404738, 8409, 113, 1, 44, "Subsection"],
Cell[404854, 8412, 851, 18, 159, "Input"]
}, Open  ]],
Cell[CellGroupData[{
Cell[405742, 8435, 102, 1, 44, "Subsection"],
Cell[CellGroupData[{
Cell[405869, 8440, 3271, 84, 138, "Input"],
Cell[409143, 8526, 216096, 3561, 236, "Output"]
}, Open  ]]
}, Open  ]]
}, Open  ]]
}
]
*)

