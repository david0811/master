(* Content-type: application/vnd.wolfram.mathematica *)

(*** Wolfram Notebook File ***)
(* http://www.wolfram.com/nb *)

(* CreatedBy='Mathematica 11.0' *)

(*CacheID: 234*)
(* Internal cache information:
NotebookFileLineBreakTest
NotebookFileLineBreakTest
NotebookDataPosition[       158,          7]
NotebookDataLength[    709927,      14371]
NotebookOptionsPosition[    702337,      14129]
NotebookOutlinePosition[    702668,      14144]
CellTagsIndexPosition[    702625,      14141]
WindowFrame->Normal*)

(* Beginning of Notebook Content *)
Notebook[{
Cell[BoxData[
 RowBox[{
  RowBox[{"SetDirectory", "[", 
   RowBox[{"NotebookDirectory", "[", "]"}], "]"}], ";"}]], "Input",
 CellChangeTimes->{{3.7491538644493732`*^9, 3.749153865833027*^9}, {
  3.749850941905223*^9, 3.749850942924405*^9}}],

Cell[CellGroupData[{

Cell["4 loop running coupling", "Section",
 CellChangeTimes->{{3.733038025331724*^9, 3.733038035264956*^9}, {
  3.7330493983743973`*^9, 3.733049402685856*^9}, {3.73312956042422*^9, 
  3.733129564816101*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", " ", 
   RowBox[{
    RowBox[{
     RowBox[{"form", " ", "hep"}], "-", 
     RowBox[{"ph", " ", "9703284"}]}], ",", " ", "vermaseren", ",", " ", 
    "larin", ",", " ", "Ritbergen"}], " ", "*)"}], "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{"\[CapitalLambda]QCD", "=", "0.2145"}], ";"}], " ", 
   "\[IndentingNewLine]", 
   RowBox[{"(*", " ", 
    RowBox[{
     RowBox[{"so", " ", "that", " ", "for", " ", "nF"}], "=", 
     RowBox[{
      RowBox[{"5", " ", "we", " ", "get", " ", "alpha_s", 
       RowBox[{"(", 
        RowBox[{"mz", "=", "91.188"}], ")"}]}], "=", 
      RowBox[{
       RowBox[{"0.1185", " ", 
        RowBox[{"(", 
         RowBox[{"PDG", " ", "value"}], ")"}], " ", "\[IndentingNewLine]", 
        "note", " ", "that", " ", "pdg", " ", "also", " ", "quotes", " ", 
        "\[Lambda]qcd"}], "=", 
       RowBox[{
        RowBox[{"0.214", " ", "for", " ", "nf"}], "=", 
        RowBox[{
        "5", " ", "everything", " ", "seems", " ", "consistent"}]}]}]}]}], 
    "*)"}], "\[IndentingNewLine]", "\[IndentingNewLine]", 
   RowBox[{"(*", "QCD", "*)"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"Nc", "=", "3."}], ";", 
    RowBox[{"CA", "=", "Nc"}], ";", " ", 
    RowBox[{"nF", "=", "3"}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"CF", "=", 
     RowBox[{
      RowBox[{"(", 
       RowBox[{
        SuperscriptBox["Nc", "2"], "-", "1"}], ")"}], "/", 
      RowBox[{"(", 
       RowBox[{"2", " ", "Nc"}], ")"}]}]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{"(*", 
    RowBox[{
    "coeft", " ", "of", " ", "the", " ", "renormalization", " ", "group", " ",
      "equations"}], "*)"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"\[Beta]0", "[", "Nf_", "]"}], "=", 
     RowBox[{
      RowBox[{"(", 
       RowBox[{
        RowBox[{
         RowBox[{"-", "11"}], "Nc"}], "+", 
        RowBox[{"2", "Nf"}]}], ")"}], "/", "12"}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"\[Beta]1", "[", "Nf_", "]"}], "=", 
     RowBox[{
      RowBox[{"(", 
       RowBox[{
        RowBox[{
         RowBox[{"-", "68"}], 
         SuperscriptBox["Nc", "2"]}], "+", 
        RowBox[{"20", "Nc", " ", "Nf"}], "+", 
        RowBox[{"12", "CF", " ", "Nf"}]}], ")"}], "/", 
      RowBox[{"(", 
       RowBox[{"3", " ", "32"}], ")"}]}]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"\[Beta]2", "[", "Nf_", "]"}], "=", 
     RowBox[{"-", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{"(", 
         RowBox[{"2857", "-", 
          RowBox[{
           RowBox[{"(", 
            RowBox[{"5033", "/", "9"}], ")"}], "Nf"}], "+", 
          RowBox[{
           RowBox[{"(", 
            RowBox[{"325", "/", "27"}], ")"}], " ", 
           SuperscriptBox["Nf", "2"]}]}], ")"}], "/", "128"}], ")"}]}]}], 
    ";"}], " ", 
   RowBox[{"(*", 
    RowBox[{
     RowBox[{"for", " ", "Nc"}], "=", 
     RowBox[{"3", " ", "only"}]}], "*)"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"\[Beta]3", "[", "Nf_", "]"}], "=", 
     RowBox[{
      RowBox[{"(", 
       RowBox[{
        RowBox[{"(", 
         RowBox[{"-", "1"}], ")"}], "/", "256"}], ")"}], 
      RowBox[{"(", 
       RowBox[{
        RowBox[{"(", 
         RowBox[{
          RowBox[{"149753", "/", "6"}], "+", 
          RowBox[{"3564", " ", 
           RowBox[{"Zeta", "[", "3", "]"}]}]}], ")"}], "-", 
        RowBox[{
         RowBox[{"(", 
          RowBox[{
           RowBox[{"1078361", "/", "162"}], "+", 
           RowBox[{
            RowBox[{"(", 
             RowBox[{"6508", "/", "27"}], ")"}], " ", 
            RowBox[{"Zeta", "[", "3", "]"}]}]}], ")"}], "Nf"}], "+", 
        RowBox[{
         RowBox[{"(", 
          RowBox[{
           RowBox[{"50065", "/", "162"}], "+", 
           RowBox[{
            RowBox[{"(", 
             RowBox[{"6472", "/", "81"}], ")"}], 
            RowBox[{"Zeta", "[", "3", "]"}]}]}], ")"}], 
         SuperscriptBox["Nf", "2"]}], "+", 
        RowBox[{
         RowBox[{"(", 
          RowBox[{"1093", "/", "729"}], ")"}], " ", 
         SuperscriptBox["Nf", "3"]}]}], ")"}]}]}], ";"}], 
   RowBox[{"(*", 
    RowBox[{
     RowBox[{"for", " ", "Nc"}], "=", 
     RowBox[{"3", " ", "only"}]}], "*)"}], "\[IndentingNewLine]", 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"\[Gamma]0", "[", "Nf_", "]"}], "=", 
     RowBox[{
      FractionBox["3", "4"], " ", "CF"}]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"\[Gamma]1", "[", "Nf_", "]"}], "=", 
     RowBox[{
      RowBox[{"(", 
       RowBox[{"1", "/", "16"}], ")"}], 
      RowBox[{"(", 
       RowBox[{
        RowBox[{"202", "/", "3"}], "-", 
        RowBox[{
         RowBox[{"(", 
          RowBox[{"20", "/", "9"}], ")"}], "Nf"}]}], ")"}]}]}], ";"}], 
   RowBox[{"(*", 
    RowBox[{
     RowBox[{"for", " ", "Nc"}], "=", 
     RowBox[{"3", " ", "only"}]}], "*)"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"\[Gamma]2", "[", "Nf_", "]"}], "=", 
     RowBox[{
      RowBox[{"(", 
       RowBox[{"1", "/", "64"}], ")"}], 
      RowBox[{"(", 
       RowBox[{"1249", "+", 
        RowBox[{
         RowBox[{"(", 
          RowBox[{
           RowBox[{"-", 
            RowBox[{"(", 
             RowBox[{"2216", "/", "27"}], ")"}]}], "-", 
           RowBox[{
            RowBox[{"(", 
             RowBox[{"160", "/", "3"}], ")"}], " ", 
            RowBox[{"Zeta", "[", "3", "]"}]}]}], ")"}], "Nf"}], "-", 
        RowBox[{
         RowBox[{"(", 
          RowBox[{"140", "/", "81"}], ")"}], " ", 
         SuperscriptBox["Nf", "2"]}]}], ")"}]}]}], ";"}], 
   RowBox[{"(*", 
    RowBox[{
     RowBox[{"for", " ", "Nc"}], "=", 
     RowBox[{"3", " ", "only"}]}], "*)"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"\[Gamma]3", "[", "Nf_", "]"}], "=", 
     RowBox[{
      RowBox[{"(", 
       RowBox[{"1", "/", "256"}], ")"}], 
      RowBox[{"(", 
       RowBox[{
        RowBox[{"4603055", "/", "162"}], "+", 
        RowBox[{
         RowBox[{"(", 
          RowBox[{"135680", "/", "27"}], ")"}], " ", 
         RowBox[{"Zeta", "[", "3", "]"}]}], "-", 
        RowBox[{"8800", 
         RowBox[{"Zeta", "[", "5", "]"}]}], "+", 
        RowBox[{
         RowBox[{"(", 
          RowBox[{
           RowBox[{"-", 
            RowBox[{"(", 
             RowBox[{"91723", "/", "27"}], ")"}]}], "-", 
           RowBox[{
            RowBox[{"(", 
             RowBox[{"34192", "/", "9"}], ")"}], " ", 
            RowBox[{"Zeta", "[", "3", "]"}]}], "+", 
           RowBox[{"880", " ", 
            RowBox[{"Zeta", "[", "4", "]"}]}], "+", 
           RowBox[{
            RowBox[{"(", 
             RowBox[{"18400", "/", "9"}], ")"}], 
            RowBox[{"Zeta", "[", "5", "]"}]}]}], ")"}], "Nf"}], "+", 
        RowBox[{
         RowBox[{"(", 
          RowBox[{
           RowBox[{"5242", "/", "243"}], "+", 
           RowBox[{
            RowBox[{"(", 
             RowBox[{"800", "/", "9"}], ")"}], " ", 
            RowBox[{"Zeta", "[", "3", "]"}]}], "-", 
           RowBox[{
            RowBox[{"(", 
             RowBox[{"160", "/", "3"}], ")"}], 
            RowBox[{"Zeta", "[", "4", "]"}]}]}], ")"}], 
         SuperscriptBox["Nf", "2"]}], "+", 
        RowBox[{
         RowBox[{"(", 
          RowBox[{
           RowBox[{"-", 
            RowBox[{"(", 
             RowBox[{"332", "/", "243"}], ")"}]}], "+", 
           RowBox[{
            RowBox[{"(", 
             RowBox[{"64", "/", "27"}], ")"}], " ", 
            RowBox[{"Zeta", "[", "3", "]"}]}]}], ")"}], 
         SuperscriptBox["Nf", "3"]}]}], ")"}]}]}], ";"}], 
   "\[IndentingNewLine]", "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"b0", "[", "Nf_", "]"}], "=", 
     RowBox[{"-", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{"(", 
         RowBox[{"8", 
          RowBox[{"\[Beta]0", "[", "Nf", "]"}]}], ")"}], "/", 
        RowBox[{"(", 
         RowBox[{"2", 
          SuperscriptBox[
           RowBox[{"(", 
            RowBox[{"4", "\[Pi]"}], ")"}], "2"]}], ")"}]}], ")"}]}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"b1", "[", "Nf_", "]"}], "=", 
     RowBox[{"-", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{"(", 
         RowBox[{"32", " ", 
          RowBox[{"\[Beta]1", "[", "Nf", "]"}]}], ")"}], "/", 
        RowBox[{"(", 
         RowBox[{"2", 
          SuperscriptBox[
           RowBox[{"(", 
            RowBox[{"4", "\[Pi]"}], ")"}], "2"]}], ")"}]}], ")"}]}]}], ";"}], 
   "\[IndentingNewLine]", "\[IndentingNewLine]", 
   RowBox[{"(*", " ", 
    RowBox[{
     RowBox[{
     "Initial", " ", "conditions", " ", "of", " ", "the", " ", "RG", " ", 
      "equations"}], ",", " ", 
     RowBox[{
     "\[Mu]", " ", "in", " ", "units", " ", "of", " ", 
      "\[CapitalLambda]_MSbar"}]}], " ", "*)"}], "\[IndentingNewLine]", 
   "\[IndentingNewLine]", 
   RowBox[{"(*", 
    RowBox[{
     RowBox[{
      RowBox[{"gf", "[", "\[Mu]_", "]"}], "=", 
      RowBox[{"1", "/", 
       RowBox[{"\[Sqrt]", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"2", " ", "b0", " ", 
           RowBox[{"Log", "[", "\[Mu]", "]"}]}], "+", 
          RowBox[{"b1", " ", 
           RowBox[{
            RowBox[{"Log", "[", 
             RowBox[{"2", " ", 
              RowBox[{"Log", "[", "\[Mu]", "]"}]}], "]"}], "/", "b0"}]}]}], 
         ")"}]}]}]}], ";"}], "*)"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"gf", "[", "t_", "]"}], "=", 
     RowBox[{"1", "/", 
      RowBox[{"(", 
       RowBox[{"\[Sqrt]", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{
           RowBox[{"b0", "[", "Nf", "]"}], " ", "t"}], "+", 
          RowBox[{
           RowBox[{"b1", "[", "Nf", "]"}], " ", 
           RowBox[{
            RowBox[{"Log", "[", "t", "]"}], "/", 
            RowBox[{"b0", "[", "Nf", "]"}]}]}]}], ")"}]}], ")"}]}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"asf", "[", 
      RowBox[{"t_", ",", "Nf_"}], "]"}], "=", 
     RowBox[{
      RowBox[{
       RowBox[{"(", 
        RowBox[{"-", "1"}], ")"}], "/", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"\[Beta]0", "[", "Nf", "]"}], " ", "t"}], ")"}]}], "-", 
      RowBox[{
       RowBox[{"(", 
        RowBox[{
         RowBox[{"\[Beta]1", "[", "Nf", "]"}], " ", 
         RowBox[{"Log", "[", "t", "]"}]}], ")"}], "/", 
       RowBox[{"(", 
        RowBox[{
         SuperscriptBox[
          RowBox[{"\[Beta]0", "[", "Nf", "]"}], "3"], " ", 
         SuperscriptBox["t", "2"]}], ")"}]}], "-", 
      RowBox[{
       RowBox[{"(", " ", 
        RowBox[{
         RowBox[{
          SuperscriptBox[
           RowBox[{"\[Beta]1", "[", "Nf", "]"}], "2"], 
          RowBox[{"(", 
           RowBox[{
            SuperscriptBox[
             RowBox[{"Log", "[", "t", "]"}], "2"], "-", 
            RowBox[{"Log", "[", "t", "]"}], "-", "1"}], ")"}]}], "+", 
         RowBox[{
          RowBox[{"\[Beta]2", "[", "Nf", "]"}], " ", 
          RowBox[{"\[Beta]0", "[", "Nf", "]"}]}]}], ")"}], "/", 
       RowBox[{"(", 
        RowBox[{
         SuperscriptBox[
          RowBox[{"\[Beta]0", "[", "Nf", "]"}], "5"], 
         SuperscriptBox["t", "3"]}], ")"}]}], "+", 
      RowBox[{
       RowBox[{"(", 
        RowBox[{"1", "/", 
         RowBox[{"(", 
          RowBox[{
           SuperscriptBox[
            RowBox[{"\[Beta]0", "[", "Nf", "]"}], "7"], 
           SuperscriptBox["t", "4"]}], ")"}]}], ")"}], 
       RowBox[{"(", " ", 
        RowBox[{
         RowBox[{
          SuperscriptBox[
           RowBox[{"\[Beta]1", "[", "Nf", "]"}], "3"], 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"-", 
             SuperscriptBox[
              RowBox[{"Log", "[", "t", "]"}], "3"]}], "+", 
            RowBox[{
             FractionBox["5", "2"], 
             SuperscriptBox[
              RowBox[{"Log", "[", "t", "]"}], "2"]}], "+", 
            RowBox[{"2", 
             RowBox[{"Log", "[", "t", "]"}]}], "-", 
            FractionBox["1", "2"]}], ")"}]}], "-", 
         RowBox[{"3", " ", 
          RowBox[{"\[Beta]1", "[", "Nf", "]"}], " ", 
          RowBox[{"\[Beta]2", "[", "Nf", "]"}], " ", 
          RowBox[{"\[Beta]0", "[", "Nf", "]"}], " ", 
          RowBox[{"Log", "[", "t", "]"}]}], "+", 
         RowBox[{
          FractionBox["1", "2"], 
          RowBox[{"\[Beta]3", "[", "Nf", "]"}], " ", 
          SuperscriptBox[
           RowBox[{"\[Beta]0", "[", "Nf", "]"}], "2"]}]}], ")"}]}]}]}], ";"}],
    "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"\[Mu]0", "=", "2"}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"t0", "=", 
     RowBox[{"Log", "[", 
      SuperscriptBox["\[Mu]0", "2"], "]"}]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"tf", "=", 
     RowBox[{"10000", " ", "t0"}]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{"(*", 
    RowBox[{
    "solution", " ", "of", " ", "the", " ", "RG", " ", "equation", " ", "to", 
     " ", "3", " ", "loop"}], "*)"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"mcharm", "=", "1.275"}], ";"}], 
   RowBox[{"(*", 
    RowBox[{"m", 
     RowBox[{"(", "m", ")"}], " ", "in", " ", "msbar"}], "*)"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"mbottom", "=", "4.18"}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"nf", "[", "t_", "]"}], "=", 
     RowBox[{"If", "[", 
      RowBox[{
       RowBox[{"t", "<", 
        RowBox[{"Log", "[", 
         RowBox[{
          SuperscriptBox["mcharm", "2"], "/", 
          SuperscriptBox["\[CapitalLambda]QCD", "2"]}], "]"}]}], ",", "3", 
       ",", 
       RowBox[{"If", "[", 
        RowBox[{
         RowBox[{"t", "<", 
          RowBox[{"Log", "[", 
           RowBox[{
            SuperscriptBox["mbottom", "2"], "/", 
            SuperscriptBox["\[CapitalLambda]QCD", "2"]}], "]"}]}], ",", "4", 
         ",", "5"}], "]"}]}], "]"}]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"sg4", "=", 
     RowBox[{"Quiet", "[", 
      RowBox[{"NDSolve", "[", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{
          RowBox[{
           RowBox[{"D", "[", 
            RowBox[{
             RowBox[{"as", "[", "t", "]"}], ",", "t"}], "]"}], "\[Equal]", 
           RowBox[{
            RowBox[{
             RowBox[{"+", 
              RowBox[{"\[Beta]0", "[", 
               RowBox[{"nf", "[", "t", "]"}], "]"}]}], " ", 
             SuperscriptBox[
              RowBox[{"as", "[", "t", "]"}], "2"]}], "+", 
            RowBox[{
             RowBox[{"\[Beta]1", "[", 
              RowBox[{"nf", "[", "t", "]"}], "]"}], " ", 
             SuperscriptBox[
              RowBox[{"as", "[", "t", "]"}], "3"]}], "+", " ", 
            RowBox[{
             RowBox[{"\[Beta]2", "[", 
              RowBox[{"nf", "[", "t", "]"}], "]"}], " ", 
             SuperscriptBox[
              RowBox[{"as", "[", "t", "]"}], "4"]}], "+", " ", 
            RowBox[{
             RowBox[{"\[Beta]3", "[", 
              RowBox[{"nf", "[", "t", "]"}], "]"}], " ", 
             SuperscriptBox[
              RowBox[{"as", "[", "t", "]"}], "5"]}]}]}], ",", 
          RowBox[{
           RowBox[{"as", "[", "tf", "]"}], "\[Equal]", 
           RowBox[{"asf", "[", 
            RowBox[{"tf", ",", 
             RowBox[{"nf", "[", "tf", "]"}]}], "]"}]}]}], "}"}], ",", "as", 
        ",", 
        RowBox[{"{", 
         RowBox[{"t", ",", "t0", ",", "tf"}], "}"}], ",", 
        RowBox[{"AccuracyGoal", "\[Rule]", "14"}], ",", 
        RowBox[{"WorkingPrecision", "\[Rule]", "32"}], ",", 
        RowBox[{"MaxSteps", "\[Rule]", "10000000"}]}], "]"}], "]"}]}], ";"}], 
   "\[IndentingNewLine]", "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"a4t", "[", "t_", "]"}], "=", " ", 
     RowBox[{"Part", "[", 
      RowBox[{
       RowBox[{"Evaluate", "[", 
        RowBox[{
         RowBox[{"as", "[", "t", "]"}], "/.", "sg4"}], "]"}], ",", "1"}], 
      "]"}]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"g4", "[", "\[Mu]_", "]"}], "=", 
     RowBox[{"2", " ", "\[Pi]", " ", 
      RowBox[{"\[Sqrt]", 
       RowBox[{"Part", "[", 
        RowBox[{
         RowBox[{"Evaluate", "[", 
          RowBox[{
           RowBox[{"as", "[", 
            RowBox[{"Log", "[", 
             RowBox[{
              SuperscriptBox["\[Mu]", "2"], "/", 
              SuperscriptBox["\[CapitalLambda]QCD", "2"]}], "]"}], "]"}], "/.",
            "sg4"}], "]"}], ",", "1"}], "]"}]}]}]}], ";"}], " "}]}]], "Input",\

 CellChangeTimes->{{3.722603722510141*^9, 3.72260372344028*^9}, {
   3.722604106111541*^9, 3.722604106838868*^9}, {3.722758514249189*^9, 
   3.72275851575694*^9}, {3.722759338268147*^9, 3.7227593794887047`*^9}, 
   3.722941350741787*^9, 3.725272685733177*^9, {3.7257977704878893`*^9, 
   3.725797773117529*^9}, {3.728106253645876*^9, 3.728106267238208*^9}, {
   3.728106981843108*^9, 3.72810698836581*^9}, {3.728107035483563*^9, 
   3.728107083980345*^9}, {3.728107191150432*^9, 3.7281072205275097`*^9}, {
   3.7289260533327723`*^9, 3.728926057125319*^9}, {3.728926987957735*^9, 
   3.728927012966138*^9}, {3.733038068527727*^9, 3.733038137498209*^9}, {
   3.733038320612577*^9, 3.7330383210148697`*^9}, {3.7330540354197693`*^9, 
   3.7330540356914186`*^9}, {3.733129571506283*^9, 3.73312957588968*^9}}]
}, Closed]],

Cell[CellGroupData[{

Cell["Functions", "Section",
 CellChangeTimes->{{3.721037028308626*^9, 3.72103703898452*^9}, {
   3.725797990517199*^9, 3.725797994993998*^9}, {3.746174948979287*^9, 
   3.746174951979061*^9}, 3.7461750131323338`*^9, {3.748450442925918*^9, 
   3.748450454117791*^9}}],

Cell[BoxData[{
 RowBox[{
  RowBox[{"R", "=", "20000"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Mc", "=", "1.4691897661033038`"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Mb", "=", "4.882"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"kfinal", "=", 
    RowBox[{"{", 
     RowBox[{"0.6856700331366409`", ",", 
      RowBox[{"-", "0.31661256911352553`"}]}], "}"}]}], ";"}], 
  RowBox[{"(*", 
   RowBox[{"100", "k", " ", "run"}], "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"kfinalu", "=", 
   RowBox[{"{", 
    RowBox[{"0.9065399936425322`", ",", 
     RowBox[{"-", "0.36858869824209667`"}]}], "}"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"kfinall", "=", 
   RowBox[{"{", 
    RowBox[{"0.4648000726307495`", ",", 
     RowBox[{"-", "0.2646364399849544`"}]}], "}"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"\[Alpha]cont", "=", 
    RowBox[{"{", 
     RowBox[{"0.5129548374487685`", ",", "0.002435119807500435`"}], "}"}]}], 
   ";"}], 
  RowBox[{"(*", 
   RowBox[{"10", "k", " ", "run"}], "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"\[Sigma]cont", "=", 
   RowBox[{"{", 
    RowBox[{"0.16999653850906107`", ",", "0.000838106749908169`"}], "}"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"ccont", "=", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"-", "0.1611740456186636`"}], ",", "0.002474788649682089`"}], 
    "}"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"conv", "=", "0.197327"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"ReVsbVac", "=", 
   RowBox[{"8", "/", "10"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Tlim", "=", 
   RowBox[{"1584", "/", "10000"}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{"w", "=", "0.66"}], ";"}], "\n", 
 RowBox[{
  RowBox[{"Jpsimass", "=", "3.0969"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Psi2smass", "=", "3.6632"}], ";"}]}], "Input",
 CellChangeTimes->{{3.754205518606386*^9, 3.7542055189640083`*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"v", "[", 
    RowBox[{"\[Phi]_", ",", "pT_", ",", "Jpsi_", ",", "Psi2s_"}], "]"}], ":=", 
   SqrtBox[
    RowBox[{"1", "-", 
     FractionBox[
      RowBox[{
       RowBox[{"(", 
        RowBox[{"1", "-", 
         SuperscriptBox["w", "2"]}], ")"}], 
       SuperscriptBox[
        RowBox[{"(", 
         RowBox[{
          RowBox[{"Jpsi", " ", "Jpsimass"}], " ", "+", " ", 
          RowBox[{"Psi2s", " ", "Psi2smass"}]}], ")"}], "2"]}], 
      RowBox[{
       SuperscriptBox[
        RowBox[{"(", 
         RowBox[{
          RowBox[{"Jpsi", " ", "Jpsimass"}], " ", "+", " ", 
          RowBox[{"Psi2s", " ", "Psi2smass"}]}], ")"}], "2"], "-", 
       RowBox[{"2", 
        SqrtBox[
         RowBox[{
          SuperscriptBox[
           RowBox[{"(", 
            RowBox[{
             RowBox[{"Jpsi", " ", "Jpsimass"}], " ", "+", " ", 
             RowBox[{"Psi2s", " ", "Psi2smass"}]}], ")"}], "2"], "+", 
          SuperscriptBox["pT", "2"]}]], "w", " ", "pT", " ", 
        RowBox[{"Cos", "[", "\[Phi]", "]"}]}], "+", 
       RowBox[{
        SuperscriptBox["w", "2"], 
        SuperscriptBox["pT", "2"], 
        SuperscriptBox[
         RowBox[{"Cos", "[", "\[Phi]", "]"}], "2"]}], "+", 
       SuperscriptBox["pT", "2"]}]]}]]}], ";"}]], "Input",
 CellChangeTimes->{{3.7540527382967653`*^9, 3.754052779961562*^9}, {
  3.754052845197363*^9, 3.7540529113806143`*^9}, {3.754052959020022*^9, 
  3.754052959269107*^9}, {3.754053344365959*^9, 3.754053348103874*^9}, {
  3.7541319760677233`*^9, 3.754131988792005*^9}, {3.754132020282806*^9, 
  3.7541320366896677`*^9}, {3.754132066952615*^9, 3.754132069804583*^9}, {
  3.754132163995335*^9, 3.754132169345207*^9}}],

Cell[CellGroupData[{

Cell["Self energies", "Subsection",
 CellChangeTimes->{{3.748450427476173*^9, 3.748450462407011*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"mDcalmu", "[", 
    RowBox[{"T_", ",", "\[Mu]_", ",", "c_", ",", "d_"}], "]"}], ":=", 
   RowBox[{"SetPrecision", "[", 
    RowBox[{
     RowBox[{"Re", "[", 
      RowBox[{
       RowBox[{
        RowBox[{"Sqrt", "[", 
         RowBox[{
          FractionBox["Nc", "3"], "+", 
          FractionBox["nF", "6"], "+", 
          RowBox[{
           FractionBox["nF", 
            RowBox[{"2", 
             SuperscriptBox["\[Pi]", "2"]}]], 
           FractionBox[
            SuperscriptBox[
             RowBox[{"(", 
              RowBox[{"\[Mu]", "/", "3"}], ")"}], "2"], 
            SuperscriptBox["T", "2"]]}]}], "]"}], 
        RowBox[{"g4", "[", 
         RowBox[{"2", "\[Pi]", 
          SqrtBox[
           RowBox[{
            SuperscriptBox["T", "2"], "+", 
            FractionBox[
             SuperscriptBox["\[Mu]", "2"], 
             SuperscriptBox["\[Pi]", "2"]]}]]}], "]"}], "T"}], "+", 
       RowBox[{
        FractionBox["1", 
         RowBox[{"4", "\[Pi]"}]], "Nc", " ", 
        SuperscriptBox[
         RowBox[{"g4", "[", 
          RowBox[{"2", "\[Pi]", 
           SqrtBox[
            RowBox[{
             SuperscriptBox["T", "2"], "+", 
             FractionBox[
              SuperscriptBox["\[Mu]", "2"], 
              SuperscriptBox["\[Pi]", "2"]]}]]}], "]"}], "2"], " ", "T", " ", 
        
        RowBox[{"Log", "[", 
         FractionBox[
          RowBox[{"Sqrt", "[", 
           RowBox[{
            FractionBox["Nc", "3"], "+", 
            FractionBox["nF", "6"]}], "]"}], 
          RowBox[{"g4", "[", 
           RowBox[{"2", "\[Pi]", 
            SqrtBox[
             RowBox[{
              SuperscriptBox["T", "2"], "+", 
              FractionBox[
               SuperscriptBox["\[Mu]", "2"], 
               SuperscriptBox["\[Pi]", "2"]]}]]}], "]"}]], "]"}]}], "+", 
       RowBox[{"c", " ", 
        SuperscriptBox[
         RowBox[{"g4", "[", 
          RowBox[{"2", "\[Pi]", 
           SqrtBox[
            RowBox[{
             SuperscriptBox["T", "2"], "+", 
             FractionBox[
              SuperscriptBox["\[Mu]", "2"], 
              SuperscriptBox["\[Pi]", "2"]]}]]}], "]"}], "2"], " ", "T"}], 
       "+", 
       RowBox[{"d", " ", 
        SuperscriptBox[
         RowBox[{"g4", "[", 
          RowBox[{"2", "\[Pi]", 
           SqrtBox[
            RowBox[{
             SuperscriptBox["T", "2"], "+", 
             FractionBox[
              SuperscriptBox["\[Mu]", "2"], 
              SuperscriptBox["\[Pi]", "2"]]}]]}], "]"}], "3"], "T"}]}], " ", 
      "]"}], ",", "30"}], "]"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.74845188564533*^9, 3.7484518857590313`*^9}, {
  3.749836672252359*^9, 3.749836673028408*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"\[CapitalPi]per", "[", 
    RowBox[{
    "\[Theta]_", ",", "\[Phi]_", ",", "\[Beta]_", ",", "mD_", ",", "u_"}], 
    "]"}], ":=", 
   RowBox[{"SetPrecision", "[", 
    RowBox[{
     RowBox[{
      FractionBox[
       SuperscriptBox["mD", "2"], "2"], 
      RowBox[{"(", 
       RowBox[{
        FractionBox[
         RowBox[{"2", "-", 
          RowBox[{"2", 
           SuperscriptBox["u", "2"]}], "-", 
          RowBox[{
           SuperscriptBox["u", "4"], 
           SuperscriptBox[
            RowBox[{"Sin", "[", "\[Theta]", "]"}], "2"], 
           SuperscriptBox[
            RowBox[{"Cos", "[", 
             RowBox[{"\[Phi]", "-", "\[Beta]"}], "]"}], "2"], 
           RowBox[{"(", 
            RowBox[{"1", "-", 
             RowBox[{
              SuperscriptBox[
               RowBox[{"Cos", "[", 
                RowBox[{"\[Phi]", "-", "\[Beta]"}], "]"}], "2"], 
              SuperscriptBox[
               RowBox[{"Sin", "[", "\[Theta]", "]"}], "2"]}]}], ")"}]}]}], 
         SuperscriptBox[
          RowBox[{"(", 
           RowBox[{"1", "-", 
            SuperscriptBox["u", "2"], "+", 
            RowBox[{
             SuperscriptBox["u", "2"], 
             SuperscriptBox[
              RowBox[{"Cos", "[", 
               RowBox[{"\[Phi]", "-", "\[Beta]"}], "]"}], "2"], 
             SuperscriptBox[
              RowBox[{"Sin", "[", "\[Theta]", "]"}], "2"]}]}], ")"}], "2"]], 
        "-", 
        RowBox[{
         FractionBox[
          RowBox[{
           RowBox[{"(", 
            RowBox[{"2", "+", 
             SuperscriptBox["u", "2"], "-", 
             RowBox[{
              SuperscriptBox["u", "2"], 
              SuperscriptBox[
               RowBox[{"Sin", "[", "\[Theta]", "]"}], "2"], 
              SuperscriptBox[
               RowBox[{"Cos", "[", 
                RowBox[{"\[Phi]", "-", "\[Beta]"}], "]"}], "2"]}]}], ")"}], 
           RowBox[{"(", 
            RowBox[{"1", "-", 
             SuperscriptBox["u", "2"]}], ")"}], "u", " ", 
           RowBox[{"Cos", "[", 
            RowBox[{"\[Phi]", "-", "\[Beta]"}], "]"}], 
           RowBox[{"Sin", "[", "\[Theta]", "]"}]}], 
          RowBox[{"2", 
           SuperscriptBox[
            RowBox[{"(", 
             RowBox[{"1", "-", 
              SuperscriptBox["u", "2"], "+", 
              RowBox[{
               SuperscriptBox["u", "2"], 
               SuperscriptBox[
                RowBox[{"Cos", "[", 
                 RowBox[{"\[Phi]", "-", "\[Beta]"}], "]"}], "2"], 
               SuperscriptBox[
                RowBox[{"Sin", "[", "\[Theta]", "]"}], "2"]}]}], ")"}], 
            RowBox[{"5", "/", "2"}]]}]], 
         RowBox[{"Log", "[", 
          FractionBox[
           RowBox[{
            RowBox[{"u", " ", 
             RowBox[{"Cos", "[", 
              RowBox[{"\[Phi]", "-", "\[Beta]"}], "]"}], " ", 
             RowBox[{"Sin", "[", "\[Theta]", "]"}]}], "+", 
            SqrtBox[
             RowBox[{"1", "-", 
              SuperscriptBox["u", "2"], "+", 
              RowBox[{
               SuperscriptBox["u", "2"], 
               SuperscriptBox[
                RowBox[{"Cos", "[", 
                 RowBox[{"\[Phi]", "-", "\[Beta]"}], "]"}], "2"], 
               SuperscriptBox[
                RowBox[{"Sin", "[", "\[Theta]", "]"}], "2"]}]}]]}], 
           RowBox[{
            RowBox[{"u", " ", 
             RowBox[{"Cos", "[", 
              RowBox[{"\[Phi]", "-", "\[Beta]"}], "]"}], 
             RowBox[{"Sin", "[", "\[Theta]", "]"}]}], "-", 
            SqrtBox[
             RowBox[{"1", "-", 
              SuperscriptBox["u", "2"], "+", 
              RowBox[{
               SuperscriptBox["u", "2"], 
               SuperscriptBox[
                RowBox[{"Cos", "[", 
                 RowBox[{"\[Phi]", "-", "\[Beta]"}], "]"}], "2"], 
               SuperscriptBox[
                RowBox[{"Sin", "[", "\[Theta]", "]"}], "2"]}]}]]}]], 
          "]"}]}]}], ")"}]}], ",", "30"}], "]"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.7453831005455914`*^9, 3.745383138661728*^9}, {
   3.745383312376183*^9, 3.74538334437337*^9}, {3.7453836903426113`*^9, 
   3.745383700509996*^9}, {3.745383888049996*^9, 3.7453838920497932`*^9}, {
   3.745384456942053*^9, 3.745384462717682*^9}, {3.745385041376384*^9, 
   3.7453850447607927`*^9}, {3.745385110730214*^9, 3.745385155644156*^9}, {
   3.745385388111433*^9, 3.745385411593401*^9}, {3.7453875595914288`*^9, 
   3.745387568075132*^9}, 3.745389177212406*^9, {3.7453901984733753`*^9, 
   3.745390202887982*^9}, {3.745390355427387*^9, 3.745390388219348*^9}, {
   3.7453977096680326`*^9, 3.745397725914731*^9}, {3.745397755948641*^9, 
   3.745397756084126*^9}, {3.7453980995991077`*^9, 3.745398113870977*^9}, {
   3.745399156102378*^9, 3.745399178169222*^9}, {3.745399342881937*^9, 
   3.745399361912752*^9}, {3.745401796965457*^9, 3.7454018195641527`*^9}, {
   3.745401971762494*^9, 3.745401971914714*^9}, {3.745404041771303*^9, 
   3.745404151470154*^9}, {3.745404384229478*^9, 3.745404389436048*^9}, {
   3.7454045122009163`*^9, 3.7454045237036552`*^9}, {3.745404614275045*^9, 
   3.7454046169752293`*^9}, {3.745404890358831*^9, 3.745404914872879*^9}, {
   3.7454740207870693`*^9, 3.745474024498345*^9}, {3.745477052572796*^9, 
   3.745477084925427*^9}, {3.745583208377653*^9, 3.74558321316575*^9}, {
   3.7461777044683733`*^9, 3.746177794182501*^9}, {3.746360152439383*^9, 
   3.746360194120142*^9}, 3.747138517796213*^9, {3.747139364508655*^9, 
   3.7471393719485703`*^9}, {3.747462249636409*^9, 3.747462256108732*^9}, 
   3.758976293479493*^9}]
}, Closed]],

Cell[CellGroupData[{

Cell["IIT paper", "Subsection",
 CellChangeTimes->{{3.7484504686955633`*^9, 3.7484504994467287`*^9}, {
   3.748450538599163*^9, 3.748450542903339*^9}, 3.7484506025366297`*^9}],

Cell[CellGroupData[{

Cell["Potentials", "Subsubsection",
 CellChangeTimes->{{3.748450854391089*^9, 3.748450864793952*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"ReVcp", "[", 
     RowBox[{"r_", ",", "mD_", ",", "u_", ",", "\[Alpha]_", ",", "c_"}], 
     "]"}], ":=", 
    RowBox[{"c", "-", 
     RowBox[{"\[Alpha]", " ", "mD"}], "-", 
     FractionBox["\[Alpha]", "r"], "+", 
     RowBox[{
      FractionBox["\[Alpha]", 
       RowBox[{"2", "\[Pi]"}]], " ", 
      RowBox[{"NIntegrate", "[", 
       RowBox[{
        RowBox[{
         RowBox[{"Sin", "[", "\[Theta]", "]"}], 
         RowBox[{"Re", "[", 
          SqrtBox[
           RowBox[{"\[CapitalPi]per", "[", 
            RowBox[{
            "\[Theta]", ",", "\[Phi]", ",", "0", ",", "mD", ",", "u"}], 
            "]"}]], "]"}], 
         RowBox[{"Exp", "[", 
          RowBox[{
           RowBox[{"-", 
            RowBox[{"Re", "[", 
             SqrtBox[
              RowBox[{"\[CapitalPi]per", "[", 
               RowBox[{
               "\[Theta]", ",", "\[Phi]", ",", "0", ",", "mD", ",", "u"}], 
               "]"}]], "]"}]}], "r", " ", 
           RowBox[{"Cos", "[", "\[Theta]", "]"}]}], "]"}]}], ",", 
        RowBox[{"{", 
         RowBox[{"\[Theta]", ",", "0", ",", 
          RowBox[{"\[Pi]", "/", "2"}]}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"\[Phi]", ",", "0", ",", 
          RowBox[{"2", "\[Pi]"}]}], "}"}]}], "]"}]}]}]}], ";"}], 
  RowBox[{"(*", 
   RowBox[{"WE", " ", "USE", " ", "THIS", " ", "ONE"}], "*)"}]}]], "Input",
 CellChangeTimes->{{3.7484505453298197`*^9, 3.748450550153339*^9}, {
  3.748450609967485*^9, 3.748450634795309*^9}, {3.748941399694872*^9, 
  3.748941419583263*^9}, {3.7489414699950314`*^9, 3.748941476587145*^9}, {
  3.758976348665812*^9, 3.758976374950508*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"ImVcp", "[", 
     RowBox[{"r_", ",", "mD_", ",", "u_", ",", "\[Alpha]_", ",", "T_"}], 
     "]"}], ":=", 
    RowBox[{
     FractionBox[
      RowBox[{"2", " ", "\[Alpha]", " ", "T", " "}], 
      RowBox[{"2", "\[Pi]"}]], 
     RowBox[{"Quiet", "[", 
      RowBox[{"NIntegrate", "[", 
       RowBox[{
        RowBox[{
         RowBox[{"Sin", "[", "\[Theta]", "]"}], 
         FractionBox[
          RowBox[{
           RowBox[{"(", 
            RowBox[{"2", "+", 
             SuperscriptBox["u", "2"], "-", 
             RowBox[{
              SuperscriptBox["u", "2"], 
              SuperscriptBox[
               RowBox[{"Sin", "[", "\[Theta]", "]"}], "2"], 
              SuperscriptBox[
               RowBox[{"Cos", "[", 
                RowBox[{"\[Phi]", "-", "0"}], "]"}], "2"]}]}], ")"}], 
           SuperscriptBox[
            RowBox[{"(", 
             RowBox[{"1", "-", 
              SuperscriptBox["u", "2"]}], ")"}], 
            RowBox[{"3", "/", "2"}]]}], 
          RowBox[{"2", 
           SuperscriptBox[
            RowBox[{"(", 
             RowBox[{"1", "-", 
              SuperscriptBox["u", "2"], "+", 
              RowBox[{
               SuperscriptBox["u", "2"], 
               SuperscriptBox[
                RowBox[{"Sin", "[", "\[Theta]", "]"}], "2"], 
               SuperscriptBox[
                RowBox[{"Cos", "[", 
                 RowBox[{"\[Phi]", "-", "0"}], "]"}], "2"]}]}], ")"}], 
            RowBox[{"5", "/", "2"}]]}]], 
         FractionBox[
          SuperscriptBox["mD", "2"], 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"\[CapitalPi]per", "[", 
             RowBox[{
             "\[Theta]", ",", "\[Phi]", ",", "0", ",", "mD", ",", "u"}], 
             "]"}], "-", 
            RowBox[{"Conjugate", "[", 
             RowBox[{"\[CapitalPi]per", "[", 
              RowBox[{
              "\[Theta]", ",", "\[Phi]", ",", "0", ",", "mD", ",", "u"}], 
              "]"}], "]"}]}], ")"}]], 
         RowBox[{"(", 
          RowBox[{
           RowBox[{
            RowBox[{"Sinh", "[", 
             RowBox[{
              SqrtBox[
               RowBox[{"\[CapitalPi]per", "[", 
                RowBox[{
                "\[Theta]", ",", "\[Phi]", ",", "0", ",", "mD", ",", "u"}], 
                "]"}]], "r", " ", 
              RowBox[{"Cos", "[", "\[Theta]", "]"}]}], "]"}], 
            RowBox[{"SinhIntegral", "[", 
             RowBox[{
              SqrtBox[
               RowBox[{"\[CapitalPi]per", "[", 
                RowBox[{
                "\[Theta]", ",", "\[Phi]", ",", "0", ",", "mD", ",", "u"}], 
                "]"}]], "r", " ", 
              RowBox[{"Cos", "[", "\[Theta]", "]"}]}], "]"}]}], "-", 
           RowBox[{
            RowBox[{"Cosh", "[", 
             RowBox[{
              SqrtBox[
               RowBox[{"\[CapitalPi]per", "[", 
                RowBox[{
                "\[Theta]", ",", "\[Phi]", ",", "0", ",", "mD", ",", "u"}], 
                "]"}]], "r", " ", 
              RowBox[{"Cos", "[", "\[Theta]", "]"}]}], "]"}], 
            RowBox[{"CoshIntegral", "[", 
             RowBox[{
              SqrtBox[
               RowBox[{"\[CapitalPi]per", "[", 
                RowBox[{
                "\[Theta]", ",", "\[Phi]", ",", "0", ",", "mD", ",", "u"}], 
                "]"}]], "r", " ", 
              RowBox[{"Cos", "[", "\[Theta]", "]"}]}], "]"}]}], "-", 
           RowBox[{
            RowBox[{"Sinh", "[", 
             RowBox[{
              SqrtBox[
               RowBox[{"Conjugate", "[", 
                RowBox[{"\[CapitalPi]per", "[", 
                 RowBox[{
                 "\[Theta]", ",", "\[Phi]", ",", "0", ",", "mD", ",", "u"}], 
                 "]"}], "]"}]], "r", " ", 
              RowBox[{"Cos", "[", "\[Theta]", "]"}]}], "]"}], 
            RowBox[{"SinhIntegral", "[", 
             RowBox[{
              SqrtBox[
               RowBox[{"Conjugate", "[", 
                RowBox[{"\[CapitalPi]per", "[", 
                 RowBox[{
                 "\[Theta]", ",", "\[Phi]", ",", "0", ",", "mD", ",", "u"}], 
                 "]"}], "]"}]], "r", " ", 
              RowBox[{"Cos", "[", "\[Theta]", "]"}]}], "]"}]}], "+", 
           RowBox[{
            RowBox[{"Cosh", "[", 
             RowBox[{
              SqrtBox[
               RowBox[{"Conjugate", "[", 
                RowBox[{"\[CapitalPi]per", "[", 
                 RowBox[{
                 "\[Theta]", ",", "\[Phi]", ",", "0", ",", "mD", ",", "u"}], 
                 "]"}], "]"}]], "r", " ", 
              RowBox[{"Cos", "[", "\[Theta]", "]"}]}], "]"}], 
            RowBox[{"CoshIntegral", "[", 
             RowBox[{
              SqrtBox[
               RowBox[{"Conjugate", "[", 
                RowBox[{"\[CapitalPi]per", "[", 
                 RowBox[{
                 "\[Theta]", ",", "\[Phi]", ",", "0", ",", "mD", ",", "u"}], 
                 "]"}], "]"}]], "r", " ", 
              RowBox[{"Cos", "[", "\[Theta]", "]"}]}], "]"}]}]}], ")"}]}], 
        ",", 
        RowBox[{"{", 
         RowBox[{"\[Theta]", ",", "0", ",", 
          RowBox[{"\[Pi]", "/", "2"}]}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"\[Phi]", ",", "0", ",", 
          RowBox[{"2", "\[Pi]"}]}], "}"}], ",", 
        RowBox[{"WorkingPrecision", "\[Rule]", "15"}], ",", 
        RowBox[{"PrecisionGoal", "\[Rule]", "2"}]}], "]"}], "]"}]}]}], ";"}], 
  
  RowBox[{"(*", 
   RowBox[{"WE", " ", "USE", " ", "THIS", " ", "ONE"}], "*)"}]}]], "Input",
 CellChangeTimes->{
  3.749153483191208*^9, {3.749612550086121*^9, 3.749612557069746*^9}, 
   3.749835673861014*^9, 3.758976365350589*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell["Permittivities", "Subsubsection",
 CellChangeTimes->{{3.748450869220883*^9, 3.748450881592766*^9}, {
  3.748450915542739*^9, 3.7484509164068193`*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"\[Epsilon]Imp", "[", 
     RowBox[{"r_", ",", "mD_", ",", "u_", ",", "T_"}], "]"}], ":=", 
    "\[IndentingNewLine]", 
    RowBox[{
     FractionBox["1", 
      SuperscriptBox[
       RowBox[{"(", 
        RowBox[{"2", "\[Pi]"}], ")"}], "2"]], 
     RowBox[{"Quiet", "[", 
      RowBox[{"Re", "[", 
       RowBox[{"T", " ", 
        RowBox[{"NIntegrate", "[", 
         RowBox[{
          RowBox[{
           RowBox[{"Sin", "[", "\[Theta]", "]"}], 
           FractionBox[
            RowBox[{
             RowBox[{"(", 
              RowBox[{"2", "+", 
               SuperscriptBox["u", "2"], "-", 
               RowBox[{
                SuperscriptBox["u", "2"], 
                SuperscriptBox[
                 RowBox[{"Sin", "[", "\[Theta]", "]"}], "2"], 
                SuperscriptBox[
                 RowBox[{"Cos", "[", 
                  RowBox[{"\[Phi]", "-", "0"}], "]"}], "2"]}]}], ")"}], 
             SuperscriptBox[
              RowBox[{"(", 
               RowBox[{"1", "-", 
                SuperscriptBox["u", "2"]}], ")"}], 
              RowBox[{"3", "/", "2"}]]}], 
            RowBox[{"2", 
             SuperscriptBox[
              RowBox[{"(", 
               RowBox[{"1", "-", 
                SuperscriptBox["u", "2"], "+", 
                RowBox[{
                 SuperscriptBox["u", "2"], 
                 SuperscriptBox[
                  RowBox[{"Sin", "[", "\[Theta]", "]"}], "2"], 
                 SuperscriptBox[
                  RowBox[{"Cos", "[", 
                   RowBox[{"\[Phi]", "-", "0"}], "]"}], "2"]}]}], ")"}], 
              RowBox[{"5", "/", "2"}]]}]], 
           FractionBox[
            SuperscriptBox["mD", "2"], 
            RowBox[{"(", 
             RowBox[{
              RowBox[{"\[CapitalPi]per", "[", 
               RowBox[{
               "\[Theta]", ",", "\[Phi]", ",", "0", ",", "mD", ",", "u"}], 
               "]"}], "-", 
              RowBox[{"Conjugate", "[", 
               RowBox[{"\[CapitalPi]per", "[", 
                RowBox[{
                "\[Theta]", ",", "\[Phi]", ",", "0", ",", "mD", ",", "u"}], 
                "]"}], "]"}]}], ")"}]], 
           FractionBox["1", "r"], 
           RowBox[{"Cos", "[", "\[Theta]", "]"}], " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"2", " ", 
              SqrtBox[
               RowBox[{"Conjugate", "[", 
                RowBox[{"\[CapitalPi]per", "[", 
                 RowBox[{
                 "\[Theta]", ",", "\[Phi]", ",", "0", ",", "mD", ",", "u"}], 
                 "]"}], "]"}]], " ", 
              RowBox[{"(", 
               RowBox[{
                RowBox[{
                 RowBox[{"CoshIntegral", "[", 
                  RowBox[{"r", " ", 
                   SqrtBox[
                    RowBox[{"Conjugate", "[", 
                    RowBox[{"\[CapitalPi]per", "[", 
                    RowBox[{
                    "\[Theta]", ",", "\[Phi]", ",", "0", ",", "mD", ",", 
                    "u"}], "]"}], "]"}]], " ", 
                   RowBox[{"Cos", "[", "\[Theta]", "]"}]}], "]"}], " ", 
                 RowBox[{"Sinh", "[", 
                  RowBox[{"r", " ", 
                   SqrtBox[
                    RowBox[{"Conjugate", "[", 
                    RowBox[{"\[CapitalPi]per", "[", 
                    RowBox[{
                    "\[Theta]", ",", "\[Phi]", ",", "0", ",", "mD", ",", 
                    "u"}], "]"}], "]"}]], " ", 
                   RowBox[{"Cos", "[", "\[Theta]", "]"}]}], "]"}]}], "-", 
                RowBox[{
                 RowBox[{"Cosh", "[", 
                  RowBox[{"r", " ", 
                   SqrtBox[
                    RowBox[{"Conjugate", "[", 
                    RowBox[{"\[CapitalPi]per", "[", 
                    RowBox[{
                    "\[Theta]", ",", "\[Phi]", ",", "0", ",", "mD", ",", 
                    "u"}], "]"}], "]"}]], " ", 
                   RowBox[{"Cos", "[", "\[Theta]", "]"}]}], "]"}], " ", 
                 RowBox[{"SinhIntegral", "[", 
                  RowBox[{"r", " ", 
                   SqrtBox[
                    RowBox[{"Conjugate", "[", 
                    RowBox[{"\[CapitalPi]per", "[", 
                    RowBox[{
                    "\[Theta]", ",", "\[Phi]", ",", "0", ",", "mD", ",", 
                    "u"}], "]"}], "]"}]], " ", 
                   RowBox[{"Cos", "[", "\[Theta]", "]"}]}], "]"}]}]}], 
               ")"}]}], "+", 
             RowBox[{"r", " ", 
              RowBox[{"Conjugate", "[", 
               RowBox[{"\[CapitalPi]per", "[", 
                RowBox[{
                "\[Theta]", ",", "\[Phi]", ",", "0", ",", "mD", ",", "u"}], 
                "]"}], "]"}], " ", 
              RowBox[{"Cos", "[", "\[Theta]", "]"}], " ", 
              RowBox[{"(", 
               RowBox[{
                RowBox[{
                 RowBox[{"Cosh", "[", 
                  RowBox[{"r", " ", 
                   SqrtBox[
                    RowBox[{"Conjugate", "[", 
                    RowBox[{"\[CapitalPi]per", "[", 
                    RowBox[{
                    "\[Theta]", ",", "\[Phi]", ",", "0", ",", "mD", ",", 
                    "u"}], "]"}], "]"}]], " ", 
                   RowBox[{"Cos", "[", "\[Theta]", "]"}]}], "]"}], " ", 
                 RowBox[{"CoshIntegral", "[", 
                  RowBox[{"r", " ", 
                   SqrtBox[
                    RowBox[{"Conjugate", "[", 
                    RowBox[{"\[CapitalPi]per", "[", 
                    RowBox[{
                    "\[Theta]", ",", "\[Phi]", ",", "0", ",", "mD", ",", 
                    "u"}], "]"}], "]"}]], " ", 
                   RowBox[{"Cos", "[", "\[Theta]", "]"}]}], "]"}]}], "-", 
                RowBox[{
                 RowBox[{"Sinh", "[", 
                  RowBox[{"r", " ", 
                   SqrtBox[
                    RowBox[{"Conjugate", "[", 
                    RowBox[{"\[CapitalPi]per", "[", 
                    RowBox[{
                    "\[Theta]", ",", "\[Phi]", ",", "0", ",", "mD", ",", 
                    "u"}], "]"}], "]"}]], " ", 
                   RowBox[{"Cos", "[", "\[Theta]", "]"}]}], "]"}], " ", 
                 RowBox[{"SinhIntegral", "[", 
                  RowBox[{"r", " ", 
                   SqrtBox[
                    RowBox[{"Conjugate", "[", 
                    RowBox[{"\[CapitalPi]per", "[", 
                    RowBox[{
                    "\[Theta]", ",", "\[Phi]", ",", "0", ",", "mD", ",", 
                    "u"}], "]"}], "]"}]], " ", 
                   RowBox[{"Cos", "[", "\[Theta]", "]"}]}], "]"}]}]}], 
               ")"}]}], "+", 
             RowBox[{
              SqrtBox[
               RowBox[{"\[CapitalPi]per", "[", 
                RowBox[{
                "\[Theta]", ",", "\[Phi]", ",", "0", ",", "mD", ",", "u"}], 
                "]"}]], " ", 
              RowBox[{"(", 
               RowBox[{
                RowBox[{
                 RowBox[{"-", 
                  RowBox[{"CoshIntegral", "[", 
                   RowBox[{"r", " ", 
                    RowBox[{"Cos", "[", "\[Theta]", "]"}], " ", 
                    SqrtBox[
                    RowBox[{"\[CapitalPi]per", "[", 
                    RowBox[{
                    "\[Theta]", ",", "\[Phi]", ",", "0", ",", "mD", ",", 
                    "u"}], "]"}]]}], "]"}]}], " ", 
                 RowBox[{"(", 
                  RowBox[{
                   RowBox[{"r", " ", 
                    RowBox[{"Cos", "[", "\[Theta]", "]"}], " ", 
                    RowBox[{"Cosh", "[", 
                    RowBox[{"r", " ", 
                    RowBox[{"Cos", "[", "\[Theta]", "]"}], " ", 
                    SqrtBox[
                    RowBox[{"\[CapitalPi]per", "[", 
                    RowBox[{
                    "\[Theta]", ",", "\[Phi]", ",", "0", ",", "mD", ",", 
                    "u"}], "]"}]]}], "]"}], " ", 
                    SqrtBox[
                    RowBox[{"\[CapitalPi]per", "[", 
                    RowBox[{
                    "\[Theta]", ",", "\[Phi]", ",", "0", ",", "mD", ",", 
                    "u"}], "]"}]]}], "+", 
                   RowBox[{"2", " ", 
                    RowBox[{"Sinh", "[", 
                    RowBox[{"r", " ", 
                    RowBox[{"Cos", "[", "\[Theta]", "]"}], " ", 
                    SqrtBox[
                    RowBox[{"\[CapitalPi]per", "[", 
                    RowBox[{
                    "\[Theta]", ",", "\[Phi]", ",", "0", ",", "mD", ",", 
                    "u"}], "]"}]]}], "]"}]}]}], ")"}]}], "+", 
                RowBox[{
                 RowBox[{"(", 
                  RowBox[{
                   RowBox[{"2", " ", 
                    RowBox[{"Cosh", "[", 
                    RowBox[{"r", " ", 
                    RowBox[{"Cos", "[", "\[Theta]", "]"}], " ", 
                    SqrtBox[
                    RowBox[{"\[CapitalPi]per", "[", 
                    RowBox[{
                    "\[Theta]", ",", "\[Phi]", ",", "0", ",", "mD", ",", 
                    "u"}], "]"}]]}], "]"}]}], "+", 
                   RowBox[{"r", " ", 
                    RowBox[{"Cos", "[", "\[Theta]", "]"}], " ", 
                    SqrtBox[
                    RowBox[{"\[CapitalPi]per", "[", 
                    RowBox[{
                    "\[Theta]", ",", "\[Phi]", ",", "0", ",", "mD", ",", 
                    "u"}], "]"}]], " ", 
                    RowBox[{"Sinh", "[", 
                    RowBox[{"r", " ", 
                    RowBox[{"Cos", "[", "\[Theta]", "]"}], " ", 
                    SqrtBox[
                    RowBox[{"\[CapitalPi]per", "[", 
                    RowBox[{
                    "\[Theta]", ",", "\[Phi]", ",", "0", ",", "mD", ",", 
                    "u"}], "]"}]]}], "]"}]}]}], ")"}], " ", 
                 RowBox[{"SinhIntegral", "[", 
                  RowBox[{"r", " ", 
                   RowBox[{"Cos", "[", "\[Theta]", "]"}], " ", 
                   SqrtBox[
                    RowBox[{"\[CapitalPi]per", "[", 
                    RowBox[{
                    "\[Theta]", ",", "\[Phi]", ",", "0", ",", "mD", ",", 
                    "u"}], "]"}]]}], "]"}]}]}], ")"}]}]}], ")"}]}], ",", 
          RowBox[{"{", 
           RowBox[{"\[Theta]", ",", "0", ",", 
            RowBox[{"\[Pi]", "/", "2"}]}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{"\[Phi]", ",", "0", ",", 
            RowBox[{"2", "\[Pi]"}]}], "}"}], ",", 
          RowBox[{"WorkingPrecision", "\[Rule]", "20"}], ",", 
          RowBox[{"PrecisionGoal", "\[Rule]", "1"}]}], "]"}]}], "]"}], 
      "]"}]}]}], ";"}], 
  RowBox[{"(*", "UNREGULATED", "*)"}]}]], "Input",
 CellChangeTimes->{{3.74845092703507*^9, 3.748450937685601*^9}, {
   3.7489433167977753`*^9, 3.748943332355961*^9}, {3.7489433646776752`*^9, 
   3.7489433741412687`*^9}, {3.748943423038916*^9, 3.748943440837915*^9}, 
   3.749188428401885*^9, {3.7497089098283443`*^9, 3.749708923236423*^9}, {
   3.7497091774322777`*^9, 3.749709212211916*^9}, {3.7497092493751917`*^9, 
   3.749709257229188*^9}, {3.749709316478237*^9, 3.749709316685458*^9}, {
   3.7497093806393633`*^9, 3.7497093807583437`*^9}, {3.749709480016882*^9, 
   3.749709480118947*^9}, {3.749709892472438*^9, 3.7497098951298313`*^9}, {
   3.7497099353614264`*^9, 3.749710025988022*^9}, {3.751270699080003*^9, 
   3.751270702968403*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"D", "[", 
    RowBox[{
     RowBox[{
      RowBox[{"Sin", "[", "\[Theta]", "]"}], 
      RowBox[{"f", "[", 
       RowBox[{"\[Theta]", ",", "mD", ",", "u"}], "]"}], 
      RowBox[{"Exp", "[", 
       RowBox[{
        RowBox[{"-", 
         RowBox[{"f", "[", 
          RowBox[{"\[Theta]", ",", "mD", ",", "u"}], "]"}]}], "r", " ", 
        RowBox[{"Cos", "[", "\[Theta]", "]"}]}], "]"}]}], ",", 
     RowBox[{"{", 
      RowBox[{"r", ",", "2"}], "}"}]}], "]"}], "+", 
   RowBox[{
    FractionBox["2", "r"], 
    RowBox[{"D", "[", 
     RowBox[{
      RowBox[{
       RowBox[{"Sin", "[", "\[Theta]", "]"}], 
       RowBox[{"f", "[", 
        RowBox[{"\[Theta]", ",", "mD", ",", "u"}], "]"}], 
       RowBox[{"Exp", "[", 
        RowBox[{
         RowBox[{"-", 
          RowBox[{"f", "[", 
           RowBox[{"\[Theta]", ",", "mD", ",", "u"}], "]"}]}], "r", " ", 
         RowBox[{"Cos", "[", "\[Theta]", "]"}]}], "]"}]}], ",", "r"}], 
     "]"}]}]}], "//", "FullSimplify"}]], "Input",
 CellChangeTimes->{{3.7491887080606737`*^9, 3.7491887791180353`*^9}, {
   3.749188853108238*^9, 3.749188865319393*^9}, 3.749202545203722*^9, {
   3.749202631773013*^9, 3.749202663257951*^9}, {3.749202717614155*^9, 
   3.7492027221255093`*^9}, {3.7492027977213593`*^9, 3.749202798502303*^9}, {
   3.749218162223762*^9, 3.749218182439782*^9}}],

Cell[BoxData[
 FractionBox[
  RowBox[{
   SuperscriptBox["\[ExponentialE]", 
    RowBox[{
     RowBox[{"-", "r"}], " ", 
     RowBox[{"Cos", "[", "\[Theta]", "]"}], " ", 
     RowBox[{"f", "[", 
      RowBox[{"\[Theta]", ",", "mD", ",", "u"}], "]"}]}]], " ", 
   RowBox[{"Cos", "[", "\[Theta]", "]"}], " ", 
   SuperscriptBox[
    RowBox[{"f", "[", 
     RowBox[{"\[Theta]", ",", "mD", ",", "u"}], "]"}], "2"], " ", 
   RowBox[{"(", 
    RowBox[{
     RowBox[{"-", "2"}], "+", 
     RowBox[{"r", " ", 
      RowBox[{"Cos", "[", "\[Theta]", "]"}], " ", 
      RowBox[{"f", "[", 
       RowBox[{"\[Theta]", ",", "mD", ",", "u"}], "]"}]}]}], ")"}], " ", 
   RowBox[{"Sin", "[", "\[Theta]", "]"}]}], "r"]], "Output",
 CellChangeTimes->{{3.7491887385473623`*^9, 3.7491887599064903`*^9}, {
   3.749188854699538*^9, 3.7491888664680147`*^9}, 3.749202481958252*^9, 
   3.749202545885826*^9, {3.749202639706296*^9, 3.749202664022654*^9}, {
   3.7492027187612143`*^9, 3.749202722771459*^9}, 3.7492027997176743`*^9, {
   3.7492181797414083`*^9, 3.749218183624193*^9}, 3.74932748207344*^9, 
   3.749368546098016*^9, 3.758976526148282*^9, 3.758977401516849*^9, 
   3.759058188936419*^9, 3.7590584083960123`*^9, 3.759757045524378*^9}]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"\[Epsilon]Rep1", "[", 
     RowBox[{"r_", ",", "mD_", ",", "u_"}], "]"}], ":=", 
    RowBox[{"Quiet", "[", 
     RowBox[{
      FractionBox["1", 
       RowBox[{"2", "\[Pi]", " ", "r"}]], 
      RowBox[{"NIntegrate", "[", 
       RowBox[{
        RowBox[{
         RowBox[{"Exp", "[", 
          RowBox[{
           RowBox[{"-", "r"}], " ", 
           RowBox[{"Cos", "[", "\[Theta]", "]"}], " ", 
           RowBox[{"Re", "[", 
            SqrtBox[
             RowBox[{"\[CapitalPi]per", "[", 
              RowBox[{
              "\[Theta]", ",", "\[Phi]", ",", "0", ",", "mD", ",", "u"}], 
              "]"}]], "]"}]}], "]"}], " ", 
         RowBox[{"Cos", "[", "\[Theta]", "]"}], " ", 
         SuperscriptBox[
          RowBox[{"Re", "[", 
           SqrtBox[
            RowBox[{"\[CapitalPi]per", "[", 
             RowBox[{
             "\[Theta]", ",", "\[Phi]", ",", "0", ",", "mD", ",", "u"}], 
             "]"}]], "]"}], "2"], " ", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{"-", "2"}], "+", 
           RowBox[{"r", " ", 
            RowBox[{"Cos", "[", "\[Theta]", "]"}], " ", 
            RowBox[{"Re", "[", 
             SqrtBox[
              RowBox[{"\[CapitalPi]per", "[", 
               RowBox[{
               "\[Theta]", ",", "\[Phi]", ",", "0", ",", "mD", ",", "u"}], 
               "]"}]], "]"}]}]}], ")"}], " ", 
         RowBox[{"Sin", "[", "\[Theta]", "]"}]}], ",", 
        RowBox[{"{", 
         RowBox[{"\[Theta]", ",", "0", ",", 
          RowBox[{"\[Pi]", "/", "2"}]}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"\[Phi]", ",", "0", ",", 
          RowBox[{"2", "\[Pi]"}]}], "}"}]}], "]"}]}], "]"}]}], ";"}], 
  RowBox[{"(*", 
   RowBox[{"WE", " ", "USE", " ", "THIS", " ", "ONE"}], "*)"}]}]], "Input",
 CellChangeTimes->{{3.749327484051489*^9, 3.7493275713487663`*^9}, {
   3.749485052704666*^9, 3.7494850595025578`*^9}, 3.749485216747398*^9, {
   3.749612579357493*^9, 3.749612589237705*^9}, {3.749709506317957*^9, 
   3.7497095711675253`*^9}, {3.749709606999859*^9, 3.749709607975741*^9}, {
   3.749709644177043*^9, 3.749709644360722*^9}}]
}, Open  ]]
}, Closed]],

Cell[CellGroupData[{

Cell["Tabs", "Subsection",
 CellChangeTimes->{{3.74845078759194*^9, 3.748450827213127*^9}, 
   3.748451123843587*^9, 3.748941360059739*^9}],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"ReVsTab", "[", 
    RowBox[{"mD1_", ",", "u1_", ",", "\[Sigma]1_"}], "]"}], ":=", 
   RowBox[{"Block", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{"u", "=", "u1"}], ",", 
       RowBox[{"mD", "=", "mD1"}], ",", 
       RowBox[{"\[Sigma]", "=", "\[Sigma]1"}], ",", "inter0", ",", "inter1", 
       ",", "tab", ",", "inter2", ",", "inter3", ",", "tab1", ",", "tab0"}], 
      "}"}], ",", 
     RowBox[{
      RowBox[{"tab0", "=", 
       RowBox[{"ParallelTable", "[", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"r", ",", 
           RowBox[{"\[Sigma]", " ", 
            SuperscriptBox["r", "2"], 
            RowBox[{"\[Epsilon]Rep1", "[", 
             RowBox[{"r", ",", "mD", ",", "u"}], "]"}]}]}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"r", ",", 
           SuperscriptBox["10", 
            RowBox[{"-", "10"}]], ",", "100", ",", 
           RowBox[{"1", "/", "20"}]}], "}"}]}], "]"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"inter0", "=", 
       RowBox[{"Interpolation", "[", "tab0", "]"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"inter1", "[", "r_", "]"}], ":=", 
       RowBox[{"Quiet", "[", 
        RowBox[{"NIntegrate", "[", 
         RowBox[{
          RowBox[{"inter0", "[", "r1", "]"}], ",", 
          RowBox[{"{", 
           RowBox[{"r1", ",", "0", ",", "r"}], "}"}]}], "]"}], "]"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"tab", "=", 
       RowBox[{"ParallelTable", "[", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"r", ",", 
           RowBox[{
            RowBox[{"inter1", "[", "r", "]"}], "+", "\[Sigma]"}]}], "}"}], 
         ",", 
         RowBox[{"{", 
          RowBox[{"r", ",", "0", ",", "100", ",", 
           RowBox[{"1", "/", "20"}]}], "}"}]}], "]"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"inter2", "=", 
       RowBox[{"Interpolation", "[", "tab", "]"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"inter3", "[", "r_", "]"}], ":=", 
       RowBox[{"Quiet", "[", 
        RowBox[{"NIntegrate", "[", 
         RowBox[{
          RowBox[{"inter2", "[", "r1", "]"}], ",", 
          RowBox[{"{", 
           RowBox[{"r1", ",", "0", ",", "r"}], "}"}]}], "]"}], "]"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"tab1", "=", 
       RowBox[{"ParallelTable", "[", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"r", ",", 
           RowBox[{"inter3", "[", "r", "]"}]}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"r", ",", "0", ",", "100", ",", 
           RowBox[{"1", "/", "20"}]}], "}"}]}], "]"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"Return", "[", "tab1", "]"}]}]}], "]"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.7453831005455914`*^9, 3.745383138661728*^9}, {
   3.745383312376183*^9, 3.74538334437337*^9}, {3.7453836903426113`*^9, 
   3.745383700509996*^9}, {3.745383888049996*^9, 3.7453838920497932`*^9}, {
   3.745384456942053*^9, 3.745384462717682*^9}, {3.745385041376384*^9, 
   3.7453850447607927`*^9}, {3.745385110730214*^9, 3.745385155644156*^9}, {
   3.745385388111433*^9, 3.745385411593401*^9}, {3.7453875595914288`*^9, 
   3.745387568075132*^9}, 3.745389177212406*^9, {3.7453901984733753`*^9, 
   3.745390202887982*^9}, {3.745390355427387*^9, 3.745390388219348*^9}, {
   3.7453977096680326`*^9, 3.745397725914731*^9}, {3.745397755948641*^9, 
   3.745397756084126*^9}, {3.7453980995991077`*^9, 3.745398113870977*^9}, {
   3.745399156102378*^9, 3.745399178169222*^9}, {3.745399342881937*^9, 
   3.745399361912752*^9}, {3.745401796965457*^9, 3.7454018195641527`*^9}, {
   3.745401971762494*^9, 3.745401971914714*^9}, {3.745404041771303*^9, 
   3.745404151470154*^9}, {3.745404384229478*^9, 3.745404389436048*^9}, {
   3.7454045122009163`*^9, 3.7454045237036552`*^9}, {3.745404614275045*^9, 
   3.7454046169752293`*^9}, {3.745404890358831*^9, 3.745404914872879*^9}, {
   3.7454740207870693`*^9, 3.745474024498345*^9}, {3.745477052572796*^9, 
   3.745477084925427*^9}, {3.745583208377653*^9, 3.74558321316575*^9}, {
   3.7461777044683733`*^9, 3.746177794182501*^9}, {3.746360152439383*^9, 
   3.746360194120142*^9}, 3.747138517796213*^9, {3.74714032667677*^9, 
   3.747140489547065*^9}, {3.747141354076187*^9, 3.747141359156494*^9}, {
   3.747141522823501*^9, 3.7471415310553417`*^9}, {3.749153891123*^9, 
   3.749153917106997*^9}, {3.749188604635096*^9, 3.749188604733561*^9}, {
   3.749203474410091*^9, 3.74920347448274*^9}, {3.749327310427429*^9, 
   3.74932731652871*^9}, {3.749327586006402*^9, 3.749327601454776*^9}, {
   3.7493277640253353`*^9, 3.749327852961533*^9}, {3.7493685883698683`*^9, 
   3.749368662570149*^9}, {3.749485109282816*^9, 3.749485111617383*^9}, {
   3.749485235084844*^9, 3.749485244893777*^9}, {3.749485546554497*^9, 
   3.749485566713616*^9}, {3.749485957914177*^9, 3.749485962777535*^9}, {
   3.749486298776033*^9, 3.7494863062313766`*^9}, 3.74948637708932*^9, {
   3.749486433762805*^9, 3.749486436801955*^9}, {3.7494871232714567`*^9, 
   3.749487132335362*^9}, 3.749487430829056*^9, 3.7494874656849194`*^9, 
   3.749487748002528*^9, {3.749489632672646*^9, 3.749489655684531*^9}, {
   3.749556105432901*^9, 3.74955611540036*^9}, {3.749556147985692*^9, 
   3.74955614880967*^9}, {3.74958184621616*^9, 3.749581854013291*^9}, {
   3.749612596013793*^9, 3.749612623366857*^9}, {3.749659261553111*^9, 
   3.749659261874166*^9}, 3.7496593149860153`*^9, {3.754132800057769*^9, 
   3.754132830883422*^9}, {3.7541333178478327`*^9, 3.754133320282439*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"ImVsTab", "[", 
    RowBox[{"mD1_", ",", "u1_", ",", "\[Sigma]1_", ",", "T1_"}], "]"}], ":=", 
   
   RowBox[{"Block", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{"u", "=", "u1"}], ",", 
       RowBox[{"mD", "=", "mD1"}], ",", 
       RowBox[{"\[Sigma]", "=", "\[Sigma]1"}], ",", 
       RowBox[{"T", "=", "T1"}], ",", "tab0", ",", "tab1", ",", "inter0", ",",
        "inter1", ",", "inter2", ",", "temp", ",", "tab2"}], "}"}], ",", 
     RowBox[{
      RowBox[{"tab0", "=", 
       RowBox[{"Table", "[", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"r", ",", 
           RowBox[{"4", "\[Pi]", " ", "\[Sigma]", " ", 
            SuperscriptBox["r", "2"], 
            RowBox[{"\[Epsilon]Imp", "[", 
             RowBox[{"r", ",", "mD", ",", "u", ",", "T"}], "]"}]}]}], "}"}], 
         ",", 
         RowBox[{"{", 
          RowBox[{"r", ",", 
           SuperscriptBox["10", 
            RowBox[{"-", "10"}]], ",", "50", ",", 
           RowBox[{"1", "/", "10"}]}], "}"}]}], "]"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"inter0", "=", 
       RowBox[{"Interpolation", "[", "tab0", "]"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"inter1", "[", "r_", "]"}], ":=", 
       RowBox[{"Quiet", "[", 
        RowBox[{"NIntegrate", "[", 
         RowBox[{
          RowBox[{"inter0", "[", "r1", "]"}], ",", 
          RowBox[{"{", 
           RowBox[{"r1", ",", 
            SuperscriptBox["10", 
             RowBox[{"-", "10"}]], ",", "r"}], "}"}]}], "]"}], "]"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"temp", "=", 
       RowBox[{"inter1", "[", 
        SuperscriptBox["10", 
         RowBox[{"-", "10"}]], "]"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"tab1", "=", 
       RowBox[{"ParallelTable", "[", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"r", ",", 
           RowBox[{
            RowBox[{"inter1", "[", "r", "]"}], "-", "temp"}]}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"r", ",", 
           SuperscriptBox["10", 
            RowBox[{"-", "10"}]], ",", "50", ",", 
           RowBox[{"1", "/", "10"}]}], "}"}]}], "]"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"inter1", "=", 
       RowBox[{"Interpolation", "[", "tab1", "]"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"inter2", "[", "r_", "]"}], ":=", 
       RowBox[{"Quiet", "[", 
        RowBox[{"NIntegrate", "[", 
         RowBox[{
          RowBox[{"inter1", "[", "r1", "]"}], ",", 
          RowBox[{"{", 
           RowBox[{"r1", ",", 
            SuperscriptBox["10", 
             RowBox[{"-", "10"}]], ",", "r"}], "}"}]}], "]"}], "]"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"tab2", "=", 
       RowBox[{"ParallelTable", "[", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"r", ",", 
           RowBox[{"inter2", "[", "r", "]"}]}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"r", ",", 
           SuperscriptBox["10", 
            RowBox[{"-", "10"}]], ",", "50", ",", 
           RowBox[{"1", "/", "10"}]}], "}"}]}], "]"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"Return", "[", "tab2", "]"}]}]}], "]"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.7453831005455914`*^9, 3.745383138661728*^9}, {
   3.745383312376183*^9, 3.74538334437337*^9}, {3.7453836903426113`*^9, 
   3.745383700509996*^9}, {3.745383888049996*^9, 3.7453838920497932`*^9}, {
   3.745384456942053*^9, 3.745384462717682*^9}, {3.745385041376384*^9, 
   3.7453850447607927`*^9}, {3.745385110730214*^9, 3.745385155644156*^9}, {
   3.745385388111433*^9, 3.745385411593401*^9}, {3.7453875595914288`*^9, 
   3.745387568075132*^9}, 3.745389177212406*^9, {3.7453901984733753`*^9, 
   3.745390202887982*^9}, {3.745390355427387*^9, 3.745390388219348*^9}, {
   3.7453977096680326`*^9, 3.745397725914731*^9}, {3.745397755948641*^9, 
   3.745397756084126*^9}, {3.7453980995991077`*^9, 3.745398113870977*^9}, {
   3.745399156102378*^9, 3.745399178169222*^9}, {3.745399342881937*^9, 
   3.745399361912752*^9}, {3.745401796965457*^9, 3.7454018195641527`*^9}, {
   3.745401971762494*^9, 3.745401971914714*^9}, {3.745404041771303*^9, 
   3.745404151470154*^9}, {3.745404384229478*^9, 3.745404389436048*^9}, {
   3.7454045122009163`*^9, 3.7454045237036552`*^9}, {3.745404614275045*^9, 
   3.7454046169752293`*^9}, {3.745404890358831*^9, 3.745404914872879*^9}, {
   3.7454740207870693`*^9, 3.745474024498345*^9}, {3.745477052572796*^9, 
   3.745477084925427*^9}, {3.745583208377653*^9, 3.74558321316575*^9}, {
   3.7461777044683733`*^9, 3.746177794182501*^9}, {3.746360152439383*^9, 
   3.746360194120142*^9}, 3.747138517796213*^9, {3.74714032667677*^9, 
   3.747140456145793*^9}, {3.747142006921813*^9, 3.7471420095970497`*^9}, {
   3.7471420459327374`*^9, 3.747142070011909*^9}, {3.747142963611829*^9, 
   3.7471429679068823`*^9}, {3.747329490809226*^9, 3.7473294977769136`*^9}, {
   3.747458708309948*^9, 3.747458716523738*^9}, {3.747458783591525*^9, 
   3.747458787423175*^9}, {3.747458847768239*^9, 3.747458887920331*^9}, {
   3.747458940561996*^9, 3.747458944633296*^9}, {3.7474592066074753`*^9, 
   3.74745921250218*^9}, {3.747459387579301*^9, 3.747459391009719*^9}, {
   3.748450903768133*^9, 3.748450907542585*^9}, {3.7484510000627728`*^9, 
   3.748451033580184*^9}, {3.748456282411323*^9, 3.7484562828912697`*^9}, {
   3.748456340716448*^9, 3.748456344192161*^9}, {3.748456392965889*^9, 
   3.748456393348927*^9}, {3.748456492880068*^9, 3.748456541864429*^9}, {
   3.748456593905673*^9, 3.748456610377811*^9}, {3.749153597093884*^9, 
   3.749153621958075*^9}, {3.749153935907349*^9, 3.749153941020252*^9}, {
   3.749187135207795*^9, 3.74918713553677*^9}, {3.749581856519682*^9, 
   3.749581857664353*^9}, {3.749612630887063*^9, 3.7496126481429253`*^9}, {
   3.749659264625359*^9, 3.749659265160788*^9}, {3.75413450859312*^9, 
   3.7541345118604507`*^9}, {3.754140304208478*^9, 3.7541403085533447`*^9}, {
   3.759757109350052*^9, 3.759757127037065*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell["Make potentials for pT=0", "Subsection",
 CellChangeTimes->{{3.745471833598156*^9, 3.745471838992208*^9}, {
  3.747482702323744*^9, 3.747482702739996*^9}, {3.754205546964004*^9, 
  3.754205548851056*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"Export", "[", 
    RowBox[{"\"\<pots/perp/ReVspT0.dat\>\"", ",", 
     RowBox[{"ReVsTab", "[", 
      RowBox[{
       RowBox[{"mDcalmu", "[", 
        RowBox[{"Tlim", ",", "0", ",", 
         RowBox[{"kfinal", "[", 
          RowBox[{"[", "1", "]"}], "]"}], ",", 
         RowBox[{"kfinal", "[", 
          RowBox[{"[", "2", "]"}], "]"}]}], "]"}], ",", "w", ",", 
       RowBox[{"\[Sigma]cont", "[", 
        RowBox[{"[", "1", "]"}], "]"}]}], "]"}]}], "]"}], ";"}], "//", 
  "AbsoluteTiming"}]], "Input",
 CellChangeTimes->{{3.754132846598811*^9, 3.754132854011059*^9}, {
   3.754132888585803*^9, 3.754132915394245*^9}, {3.754132974292364*^9, 
   3.754133018639119*^9}, 3.758976484853301*^9}],

Cell[BoxData["$Aborted"], "Output",
 CellChangeTimes->{3.7541329885216007`*^9, 3.7541332973445063`*^9, 
  3.7541339808117437`*^9, 3.75414087573284*^9, 3.759757154805504*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"Export", "[", 
    RowBox[{"\"\<pots/perp/ImVspT0.dat\>\"", ",", 
     RowBox[{"ImVsTab", "[", 
      RowBox[{
       RowBox[{"SetPrecision", "[", 
        RowBox[{
         RowBox[{"mDcalmu", "[", 
          RowBox[{"Tlim", ",", "0", ",", 
           RowBox[{"kfinal", "[", 
            RowBox[{"[", "1", "]"}], "]"}], ",", 
           RowBox[{"kfinal", "[", 
            RowBox[{"[", "2", "]"}], "]"}]}], "]"}], ",", "30"}], "]"}], ",", 
       
       RowBox[{"SetPrecision", "[", 
        RowBox[{"w", ",", "30"}], "]"}], ",", 
       RowBox[{"SetPrecision", "[", 
        RowBox[{
         RowBox[{"\[Sigma]cont", "[", 
          RowBox[{"[", "1", "]"}], "]"}], ",", "30"}], "]"}], ",", "Tlim"}], 
      "]"}]}], "]"}], ";"}], "//", "AbsoluteTiming"}]], "Input",
 CellChangeTimes->{{3.754134524715332*^9, 3.7541345455332413`*^9}, {
   3.7541346019198513`*^9, 3.754134602444612*^9}, {3.754134692801319*^9, 
   3.7541347004534388`*^9}, 3.75897648486193*^9}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"2331.569506`", ",", "Null"}], "}"}]], "Output",
 CellChangeTimes->{3.754136034283772*^9, 3.75414320738932*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"Block", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"temp", ",", "temp1"}], "}"}], ",", 
    RowBox[{
     RowBox[{"temp", "=", 
      RowBox[{"ImVcp", "[", 
       RowBox[{
        SuperscriptBox["10", 
         RowBox[{"-", "10"}]], ",", 
        RowBox[{"SetPrecision", "[", 
         RowBox[{
          RowBox[{"mDcalmu", "[", 
           RowBox[{"Tlim", ",", "0", ",", 
            RowBox[{"kfinal", "[", 
             RowBox[{"[", "1", "]"}], "]"}], ",", 
            RowBox[{"kfinal", "[", 
             RowBox[{"[", "2", "]"}], "]"}]}], "]"}], ",", "30"}], "]"}], ",", 
        RowBox[{"SetPrecision", "[", 
         RowBox[{"w", ",", "30"}], "]"}], ",", 
        RowBox[{"SetPrecision", "[", 
         RowBox[{
          RowBox[{"\[Alpha]cont", "[", 
           RowBox[{"[", "1", "]"}], "]"}], ",", "30"}], "]"}], ",", "Tlim"}], 
       "]"}]}], ";", 
     RowBox[{"temp1", "=", 
      RowBox[{"ParallelTable", "[", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"r", ",", 
          RowBox[{
           RowBox[{"ImVcp", "[", 
            RowBox[{"r", ",", 
             RowBox[{"SetPrecision", "[", 
              RowBox[{
               RowBox[{"mDcalmu", "[", 
                RowBox[{"Tlim", ",", "0", ",", 
                 RowBox[{"kfinal", "[", 
                  RowBox[{"[", "1", "]"}], "]"}], ",", 
                 RowBox[{"kfinal", "[", 
                  RowBox[{"[", "2", "]"}], "]"}]}], "]"}], ",", "30"}], "]"}],
              ",", 
             RowBox[{"SetPrecision", "[", 
              RowBox[{"w", ",", "30"}], "]"}], ",", 
             RowBox[{"SetPrecision", "[", 
              RowBox[{
               RowBox[{"\[Alpha]cont", "[", 
                RowBox[{"[", "1", "]"}], "]"}], ",", "30"}], "]"}], ",", 
             "Tlim"}], "]"}], "-", "temp"}]}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"r", ",", 
          RowBox[{"1", "/", "1000"}], ",", "100", ",", 
          RowBox[{"1", "/", "20"}]}], "}"}]}], "]"}]}], ";", "\n", 
     RowBox[{"Export", "[", 
      RowBox[{"\"\<pots/perp/ImVcpT0.dat\>\"", ",", "temp1"}], "]"}], ";"}]}],
    "]"}], "//", "AbsoluteTiming"}]], "Input",
 CellChangeTimes->{{3.749612777504025*^9, 3.749612885682765*^9}, {
   3.749613092055283*^9, 3.749613094167004*^9}, {3.749659333672391*^9, 
   3.7496593429443293`*^9}, 3.749659381104273*^9, {3.754134767940505*^9, 
   3.754134858928797*^9}, {3.754134921800688*^9, 3.754134924568582*^9}, {
   3.7541403237422132`*^9, 3.754140325984097*^9}, 3.758976484870515*^9}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"795.082403`", ",", "Null"}], "}"}]], "Output",
 CellChangeTimes->{3.754138049775752*^9, 3.754140329240665*^9, 
  3.754144002558165*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"Block", "[", 
   RowBox[{
    RowBox[{"{", "temp", "}"}], ",", 
    RowBox[{
     RowBox[{"temp", "=", 
      RowBox[{"Join", "[", 
       RowBox[{
        RowBox[{"ParallelTable", "[", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{"r", ",", 
            RowBox[{"ReVcp", "[", 
             RowBox[{"r", ",", 
              RowBox[{"mDcalmu", "[", 
               RowBox[{"Tlim", ",", "0", ",", 
                RowBox[{"kfinal", "[", 
                 RowBox[{"[", "1", "]"}], "]"}], ",", 
                RowBox[{"kfinal", "[", 
                 RowBox[{"[", "2", "]"}], "]"}]}], "]"}], ",", "w", ",", 
              RowBox[{"\[Alpha]cont", "[", 
               RowBox[{"[", "1", "]"}], "]"}], ",", 
              RowBox[{"ccont", "[", 
               RowBox[{"[", "1", "]"}], "]"}]}], "]"}]}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{"r", ",", 
            RowBox[{"1", "/", "1000"}], ",", "100", ",", 
            RowBox[{"1", "/", "20"}]}], "}"}]}], "]"}], ",", 
        RowBox[{"{", 
         RowBox[{"{", 
          RowBox[{"500", ",", 
           RowBox[{"ReVcp", "[", 
            RowBox[{"500", ",", 
             RowBox[{"mDcalmu", "[", 
              RowBox[{"Tlim", ",", "0", ",", 
               RowBox[{"kfinal", "[", 
                RowBox[{"[", "1", "]"}], "]"}], ",", 
               RowBox[{"kfinal", "[", 
                RowBox[{"[", "2", "]"}], "]"}]}], "]"}], ",", "w", ",", 
             RowBox[{"\[Alpha]cont", "[", 
              RowBox[{"[", "1", "]"}], "]"}], ",", 
             RowBox[{"ccont", "[", 
              RowBox[{"[", "1", "]"}], "]"}]}], "]"}]}], "}"}], "}"}]}], 
       "]"}]}], ";", 
     RowBox[{"Export", "[", 
      RowBox[{"\"\<pots/perp/ReVcpT0.dat\>\"", ",", "temp"}], "]"}], ";"}]}], 
   "]"}], "//", "AbsoluteTiming"}]], "Input",
 CellChangeTimes->{{3.7496129670279913`*^9, 3.749613117007798*^9}, {
   3.749659400628265*^9, 3.749659413224476*^9}, {3.7541349288792467`*^9, 
   3.754135036051675*^9}, {3.75414033460714*^9, 3.754140334833804*^9}, 
   3.7589764848791018`*^9}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"35.992766`", ",", "Null"}], "}"}]], "Output",
 CellChangeTimes->{3.7541382318616943`*^9, 3.754144038704768*^9}]
}, Open  ]]
}, Closed]],

Cell[CellGroupData[{

Cell["Make potentials for pT=/=0", "Subsection",
 CellChangeTimes->{{3.745471833598156*^9, 3.745471838992208*^9}, {
  3.747482702323744*^9, 3.747482702739996*^9}, {3.754205546964004*^9, 
  3.754205562236405*^9}, {3.7542057252933807`*^9, 3.754205727407052*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"ang", "=", 
  RowBox[{"Table", "[", 
   RowBox[{"i", ",", 
    RowBox[{"{", 
     RowBox[{"i", ",", "0", ",", "\[Pi]", ",", 
      RowBox[{"\[Pi]", "/", "50"}]}], "}"}]}], "]"}]}]], "Input",
 CellChangeTimes->{{3.754205565159699*^9, 3.7542055836700783`*^9}, {
   3.7542060604339323`*^9, 3.7542060621952*^9}, 3.754206094674316*^9}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"0", ",", 
   FractionBox["\[Pi]", "50"], ",", 
   FractionBox["\[Pi]", "25"], ",", 
   FractionBox[
    RowBox[{"3", " ", "\[Pi]"}], "50"], ",", 
   FractionBox[
    RowBox[{"2", " ", "\[Pi]"}], "25"], ",", 
   FractionBox["\[Pi]", "10"], ",", 
   FractionBox[
    RowBox[{"3", " ", "\[Pi]"}], "25"], ",", 
   FractionBox[
    RowBox[{"7", " ", "\[Pi]"}], "50"], ",", 
   FractionBox[
    RowBox[{"4", " ", "\[Pi]"}], "25"], ",", 
   FractionBox[
    RowBox[{"9", " ", "\[Pi]"}], "50"], ",", 
   FractionBox["\[Pi]", "5"], ",", 
   FractionBox[
    RowBox[{"11", " ", "\[Pi]"}], "50"], ",", 
   FractionBox[
    RowBox[{"6", " ", "\[Pi]"}], "25"], ",", 
   FractionBox[
    RowBox[{"13", " ", "\[Pi]"}], "50"], ",", 
   FractionBox[
    RowBox[{"7", " ", "\[Pi]"}], "25"], ",", 
   FractionBox[
    RowBox[{"3", " ", "\[Pi]"}], "10"], ",", 
   FractionBox[
    RowBox[{"8", " ", "\[Pi]"}], "25"], ",", 
   FractionBox[
    RowBox[{"17", " ", "\[Pi]"}], "50"], ",", 
   FractionBox[
    RowBox[{"9", " ", "\[Pi]"}], "25"], ",", 
   FractionBox[
    RowBox[{"19", " ", "\[Pi]"}], "50"], ",", 
   FractionBox[
    RowBox[{"2", " ", "\[Pi]"}], "5"], ",", 
   FractionBox[
    RowBox[{"21", " ", "\[Pi]"}], "50"], ",", 
   FractionBox[
    RowBox[{"11", " ", "\[Pi]"}], "25"], ",", 
   FractionBox[
    RowBox[{"23", " ", "\[Pi]"}], "50"], ",", 
   FractionBox[
    RowBox[{"12", " ", "\[Pi]"}], "25"], ",", 
   FractionBox["\[Pi]", "2"], ",", 
   FractionBox[
    RowBox[{"13", " ", "\[Pi]"}], "25"], ",", 
   FractionBox[
    RowBox[{"27", " ", "\[Pi]"}], "50"], ",", 
   FractionBox[
    RowBox[{"14", " ", "\[Pi]"}], "25"], ",", 
   FractionBox[
    RowBox[{"29", " ", "\[Pi]"}], "50"], ",", 
   FractionBox[
    RowBox[{"3", " ", "\[Pi]"}], "5"], ",", 
   FractionBox[
    RowBox[{"31", " ", "\[Pi]"}], "50"], ",", 
   FractionBox[
    RowBox[{"16", " ", "\[Pi]"}], "25"], ",", 
   FractionBox[
    RowBox[{"33", " ", "\[Pi]"}], "50"], ",", 
   FractionBox[
    RowBox[{"17", " ", "\[Pi]"}], "25"], ",", 
   FractionBox[
    RowBox[{"7", " ", "\[Pi]"}], "10"], ",", 
   FractionBox[
    RowBox[{"18", " ", "\[Pi]"}], "25"], ",", 
   FractionBox[
    RowBox[{"37", " ", "\[Pi]"}], "50"], ",", 
   FractionBox[
    RowBox[{"19", " ", "\[Pi]"}], "25"], ",", 
   FractionBox[
    RowBox[{"39", " ", "\[Pi]"}], "50"], ",", 
   FractionBox[
    RowBox[{"4", " ", "\[Pi]"}], "5"], ",", 
   FractionBox[
    RowBox[{"41", " ", "\[Pi]"}], "50"], ",", 
   FractionBox[
    RowBox[{"21", " ", "\[Pi]"}], "25"], ",", 
   FractionBox[
    RowBox[{"43", " ", "\[Pi]"}], "50"], ",", 
   FractionBox[
    RowBox[{"22", " ", "\[Pi]"}], "25"], ",", 
   FractionBox[
    RowBox[{"9", " ", "\[Pi]"}], "10"], ",", 
   FractionBox[
    RowBox[{"23", " ", "\[Pi]"}], "25"], ",", 
   FractionBox[
    RowBox[{"47", " ", "\[Pi]"}], "50"], ",", 
   FractionBox[
    RowBox[{"24", " ", "\[Pi]"}], "25"], ",", 
   FractionBox[
    RowBox[{"49", " ", "\[Pi]"}], "50"], ",", "\[Pi]"}], "}"}]], "Output",
 CellChangeTimes->{{3.754205580526496*^9, 3.754205584066511*^9}, 
   3.7542060631688747`*^9, 3.7542060950139923`*^9, 3.7542065417533503`*^9, 
   3.754206675223402*^9, 3.755246612703364*^9, 3.755247474307499*^9, 
   3.7553685836555557`*^9, 3.755368712492278*^9, 3.755368849106421*^9, 
   3.755433031044141*^9, 3.7570913504683867`*^9, 3.7574429034443502`*^9, 
   3.757804641277463*^9, 3.757807658172935*^9, 3.757807839072074*^9, 
   3.758977434692173*^9, 3.759058199437129*^9, 3.759058417841412*^9, 
   3.759757159600732*^9}]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{"pT", "=", "10"}], ";"}]], "Input",
 CellChangeTimes->{{3.7552469023018303`*^9, 3.7552469041058073`*^9}, {
  3.7553685865964003`*^9, 3.755368586793284*^9}, {3.755368662836259*^9, 
  3.7553686824026337`*^9}, {3.7553687248118773`*^9, 3.755368725205554*^9}, {
  3.755368851378283*^9, 3.755368851616117*^9}, {3.757091352484736*^9, 
  3.75709135255781*^9}, {3.758976571717352*^9, 3.758976571998925*^9}, {
  3.758977436989893*^9, 3.758977437143642*^9}, {3.759058204985362*^9, 
  3.759058205086945*^9}, {3.759058438972764*^9, 3.759058439397987*^9}, {
  3.7597570558581753`*^9, 3.7597570561433887`*^9}}],

Cell[BoxData[{
 RowBox[{
  RowBox[{"Do", "[", 
   RowBox[{
    RowBox[{"Export", "[", 
     RowBox[{
      RowBox[{"\"\<pots/perp/pT\>\"", "<>", 
       RowBox[{"ToString", "[", "pT", "]"}], "<>", "\"\</ImVspT\>\"", "<>", 
       RowBox[{"ToString", "[", "pT", "]"}], "<>", "\"\<ang\>\"", "<>", 
       RowBox[{"ToString", "[", "i", "]"}], "<>", "\"\<Jpsi.dat\>\""}], ",", 
      RowBox[{"ImVsTab", "[", 
       RowBox[{
        RowBox[{"SetPrecision", "[", 
         RowBox[{
          RowBox[{"mDcalmu", "[", 
           RowBox[{"Tlim", ",", "0", ",", 
            RowBox[{"kfinal", "[", 
             RowBox[{"[", "1", "]"}], "]"}], ",", 
            RowBox[{"kfinal", "[", 
             RowBox[{"[", "2", "]"}], "]"}]}], "]"}], ",", "30"}], "]"}], ",", 
        RowBox[{"SetPrecision", "[", 
         RowBox[{
          RowBox[{"v", "[", 
           RowBox[{
            RowBox[{"ang", "[", 
             RowBox[{"[", "i", "]"}], "]"}], ",", "pT", ",", "1", ",", "0"}], 
           "]"}], ",", "30"}], "]"}], ",", 
        RowBox[{"SetPrecision", "[", 
         RowBox[{
          RowBox[{"\[Sigma]cont", "[", 
           RowBox[{"[", "1", "]"}], "]"}], ",", "30"}], "]"}], ",", "Tlim"}], 
       "]"}]}], "]"}], ",", 
    RowBox[{"{", 
     RowBox[{"i", ",", "27", ",", 
      RowBox[{"Length", "[", "ang", "]"}]}], "}"}]}], "]"}], ";"}], "\n", 
 RowBox[{"Block", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"temp", ",", "temp1"}], "}"}], ",", 
   RowBox[{"Do", "[", 
    RowBox[{
     RowBox[{
      RowBox[{"temp", "=", 
       RowBox[{"ImVcp", "[", 
        RowBox[{
         SuperscriptBox["10", 
          RowBox[{"-", "10"}]], ",", 
         RowBox[{"SetPrecision", "[", 
          RowBox[{
           RowBox[{"mDcalmu", "[", 
            RowBox[{"Tlim", ",", "0", ",", 
             RowBox[{"kfinal", "[", 
              RowBox[{"[", "1", "]"}], "]"}], ",", 
             RowBox[{"kfinal", "[", 
              RowBox[{"[", "2", "]"}], "]"}]}], "]"}], ",", "30"}], "]"}], 
         ",", 
         RowBox[{"SetPrecision", "[", 
          RowBox[{
           RowBox[{"v", "[", 
            RowBox[{
             RowBox[{"ang", "[", 
              RowBox[{"[", "i", "]"}], "]"}], ",", "pT", ",", "1", ",", "0"}],
             "]"}], ",", "30"}], "]"}], ",", 
         RowBox[{"SetPrecision", "[", 
          RowBox[{
           RowBox[{"\[Alpha]cont", "[", 
            RowBox[{"[", "1", "]"}], "]"}], ",", "30"}], "]"}], ",", "Tlim"}],
         "]"}]}], ";", 
      RowBox[{"temp1", "=", 
       RowBox[{"ParallelTable", "[", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"r", ",", 
           RowBox[{
            RowBox[{"ImVcp", "[", 
             RowBox[{"r", ",", 
              RowBox[{"SetPrecision", "[", 
               RowBox[{
                RowBox[{"mDcalmu", "[", 
                 RowBox[{"Tlim", ",", "0", ",", 
                  RowBox[{"kfinal", "[", 
                   RowBox[{"[", "1", "]"}], "]"}], ",", 
                  RowBox[{"kfinal", "[", 
                   RowBox[{"[", "2", "]"}], "]"}]}], "]"}], ",", "30"}], 
               "]"}], ",", 
              RowBox[{"SetPrecision", "[", 
               RowBox[{
                RowBox[{"v", "[", 
                 RowBox[{
                  RowBox[{"ang", "[", 
                   RowBox[{"[", "i", "]"}], "]"}], ",", "pT", ",", "1", ",", 
                  "0"}], "]"}], ",", "30"}], "]"}], ",", 
              RowBox[{"SetPrecision", "[", 
               RowBox[{
                RowBox[{"\[Alpha]cont", "[", 
                 RowBox[{"[", "1", "]"}], "]"}], ",", "30"}], "]"}], ",", 
              "Tlim"}], "]"}], "-", "temp"}]}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"r", ",", 
           RowBox[{"1", "/", "1000"}], ",", "100", ",", 
           RowBox[{"1", "/", "20"}]}], "}"}]}], "]"}]}], ";", "\n", 
      RowBox[{"Export", "[", 
       RowBox[{
        RowBox[{"\"\<pots/perp/pT\>\"", "<>", 
         RowBox[{"ToString", "[", "pT", "]"}], "<>", "\"\</ImVcpT\>\"", "<>", 
         
         RowBox[{"ToString", "[", "pT", "]"}], "<>", "\"\<ang\>\"", "<>", 
         RowBox[{"ToString", "[", "i", "]"}], "<>", "\"\<Jpsi.dat\>\""}], ",",
         "temp1"}], "]"}], ";"}], ",", 
     RowBox[{"{", 
      RowBox[{"i", ",", "1", ",", 
       RowBox[{"Length", "[", "ang", "]"}]}], "}"}]}], "]"}]}], "]"}], "\n", 
 RowBox[{"Block", "[", 
  RowBox[{
   RowBox[{"{", "temp", "}"}], ",", 
   RowBox[{"Do", "[", 
    RowBox[{
     RowBox[{
      RowBox[{"temp", "=", 
       RowBox[{"Join", "[", 
        RowBox[{
         RowBox[{"ParallelTable", "[", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{"r", ",", 
             RowBox[{"ReVcp", "[", 
              RowBox[{"r", ",", 
               RowBox[{"mDcalmu", "[", 
                RowBox[{"Tlim", ",", "0", ",", 
                 RowBox[{"kfinal", "[", 
                  RowBox[{"[", "1", "]"}], "]"}], ",", 
                 RowBox[{"kfinal", "[", 
                  RowBox[{"[", "2", "]"}], "]"}]}], "]"}], ",", 
               RowBox[{"v", "[", 
                RowBox[{
                 RowBox[{"ang", "[", 
                  RowBox[{"[", "i", "]"}], "]"}], ",", "pT", ",", "1", ",", 
                 "0"}], "]"}], ",", 
               RowBox[{"\[Alpha]cont", "[", 
                RowBox[{"[", "1", "]"}], "]"}], ",", 
               RowBox[{"ccont", "[", 
                RowBox[{"[", "1", "]"}], "]"}]}], "]"}]}], "}"}], ",", 
           RowBox[{"{", 
            RowBox[{"r", ",", 
             RowBox[{"1", "/", "1000"}], ",", "100", ",", 
             RowBox[{"1", "/", "20"}]}], "}"}]}], "]"}], ",", 
         RowBox[{"{", 
          RowBox[{"{", 
           RowBox[{"500", ",", 
            RowBox[{"ReVcp", "[", 
             RowBox[{"500", ",", 
              RowBox[{"mDcalmu", "[", 
               RowBox[{"Tlim", ",", "0", ",", 
                RowBox[{"kfinal", "[", 
                 RowBox[{"[", "1", "]"}], "]"}], ",", 
                RowBox[{"kfinal", "[", 
                 RowBox[{"[", "2", "]"}], "]"}]}], "]"}], ",", 
              RowBox[{"v", "[", 
               RowBox[{
                RowBox[{"ang", "[", 
                 RowBox[{"[", "i", "]"}], "]"}], ",", "pT", ",", "1", ",", 
                "0"}], "]"}], ",", 
              RowBox[{"\[Alpha]cont", "[", 
               RowBox[{"[", "1", "]"}], "]"}], ",", 
              RowBox[{"ccont", "[", 
               RowBox[{"[", "1", "]"}], "]"}]}], "]"}]}], "}"}], "}"}]}], 
        "]"}]}], ";", 
      RowBox[{"Export", "[", 
       RowBox[{
        RowBox[{"\"\<pots/perp/pT\>\"", "<>", 
         RowBox[{"ToString", "[", "pT", "]"}], "<>", "\"\</ReVcpT\>\"", "<>", 
         
         RowBox[{"ToString", "[", "pT", "]"}], "<>", "\"\<ang\>\"", "<>", 
         RowBox[{"ToString", "[", "i", "]"}], "<>", "\"\<Jpsi.dat\>\""}], ",",
         "temp"}], "]"}], ";"}], ",", 
     RowBox[{"{", 
      RowBox[{"i", ",", "1", ",", 
       RowBox[{"Length", "[", "ang", "]"}]}], "}"}]}], "]"}]}], 
  "]"}]}], "Input",
 CellChangeTimes->{{3.754132846598811*^9, 3.754132854011059*^9}, {
   3.754132888585803*^9, 3.754132915394245*^9}, {3.754132974292364*^9, 
   3.754133018639119*^9}, {3.754205607043694*^9, 3.754205709501533*^9}, {
   3.754205749621861*^9, 3.754205779705003*^9}, {3.755246915127986*^9, 
   3.755246915783338*^9}, 3.7552470567504683`*^9, {3.7553688596728992`*^9, 
   3.755368861635685*^9}, {3.757091355753311*^9, 3.7570913558768387`*^9}, 
   3.758976484888878*^9, 3.7589775193722973`*^9, {3.759058216314992*^9, 
   3.759058245008533*^9}, {3.759757179621686*^9, 3.759757186839406*^9}}],

Cell[BoxData[
 RowBox[{"\[IndentingNewLine]", "\[IndentingNewLine]", "\[IndentingNewLine]", 
  "\[IndentingNewLine]", "\[IndentingNewLine]"}]], "Input",
 CellChangeTimes->{{3.758977718478631*^9, 3.7589777193798847`*^9}}],

Cell[BoxData[{
 RowBox[{
  RowBox[{"pT", "=", "2"}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"Do", "[", 
    RowBox[{
     RowBox[{"Export", "[", 
      RowBox[{
       RowBox[{"\"\<pots/perp/pT\>\"", "<>", 
        RowBox[{"ToString", "[", "pT", "]"}], "<>", "\"\</ReVspT\>\"", "<>", 
        RowBox[{"ToString", "[", "pT", "]"}], "<>", "\"\<ang\>\"", "<>", 
        RowBox[{"ToString", "[", "i", "]"}], "<>", "\"\<Jpsi.dat\>\""}], ",", 
       
       RowBox[{"ReVsTab", "[", 
        RowBox[{
         RowBox[{"mDcalmu", "[", 
          RowBox[{"Tlim", ",", "0", ",", 
           RowBox[{"kfinal", "[", 
            RowBox[{"[", "1", "]"}], "]"}], ",", 
           RowBox[{"kfinal", "[", 
            RowBox[{"[", "2", "]"}], "]"}]}], "]"}], ",", 
         RowBox[{"v", "[", 
          RowBox[{
           RowBox[{"ang", "[", 
            RowBox[{"[", "i", "]"}], "]"}], ",", "pT", ",", "1", ",", "0"}], 
          "]"}], ",", 
         RowBox[{"\[Sigma]cont", "[", 
          RowBox[{"[", "1", "]"}], "]"}]}], "]"}]}], "]"}], ",", 
     RowBox[{"{", 
      RowBox[{"i", ",", "1", ",", 
       RowBox[{"Length", "[", "ang", "]"}]}], "}"}]}], "]"}], ";"}], 
  "\n"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"Do", "[", 
    RowBox[{
     RowBox[{"Export", "[", 
      RowBox[{
       RowBox[{"\"\<pots/perp/pT\>\"", "<>", 
        RowBox[{"ToString", "[", "pT", "]"}], "<>", "\"\</ImVspT\>\"", "<>", 
        RowBox[{"ToString", "[", "pT", "]"}], "<>", "\"\<ang\>\"", "<>", 
        RowBox[{"ToString", "[", "i", "]"}], "<>", "\"\<Jpsi.dat\>\""}], ",", 
       
       RowBox[{"ImVsTab", "[", 
        RowBox[{
         RowBox[{"SetPrecision", "[", 
          RowBox[{
           RowBox[{"mDcalmu", "[", 
            RowBox[{"Tlim", ",", "0", ",", 
             RowBox[{"kfinal", "[", 
              RowBox[{"[", "1", "]"}], "]"}], ",", 
             RowBox[{"kfinal", "[", 
              RowBox[{"[", "2", "]"}], "]"}]}], "]"}], ",", "30"}], "]"}], 
         ",", 
         RowBox[{"SetPrecision", "[", 
          RowBox[{
           RowBox[{"v", "[", 
            RowBox[{
             RowBox[{"ang", "[", 
              RowBox[{"[", "i", "]"}], "]"}], ",", "pT", ",", "1", ",", "0"}],
             "]"}], ",", "30"}], "]"}], ",", 
         RowBox[{"SetPrecision", "[", 
          RowBox[{
           RowBox[{"\[Sigma]cont", "[", 
            RowBox[{"[", "1", "]"}], "]"}], ",", "30"}], "]"}], ",", "Tlim"}],
         "]"}]}], "]"}], ",", 
     RowBox[{"{", 
      RowBox[{"i", ",", "1", ",", 
       RowBox[{"Length", "[", "ang", "]"}]}], "}"}]}], "]"}], ";"}], 
  "\n"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"Block", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"temp", ",", "temp1"}], "}"}], ",", 
     RowBox[{"Do", "[", 
      RowBox[{
       RowBox[{
        RowBox[{"temp", "=", 
         RowBox[{"ImVcp", "[", 
          RowBox[{
           SuperscriptBox["10", 
            RowBox[{"-", "10"}]], ",", 
           RowBox[{"SetPrecision", "[", 
            RowBox[{
             RowBox[{"mDcalmu", "[", 
              RowBox[{"Tlim", ",", "0", ",", 
               RowBox[{"kfinal", "[", 
                RowBox[{"[", "1", "]"}], "]"}], ",", 
               RowBox[{"kfinal", "[", 
                RowBox[{"[", "2", "]"}], "]"}]}], "]"}], ",", "30"}], "]"}], 
           ",", 
           RowBox[{"SetPrecision", "[", 
            RowBox[{
             RowBox[{"v", "[", 
              RowBox[{
               RowBox[{"ang", "[", 
                RowBox[{"[", "i", "]"}], "]"}], ",", "pT", ",", "1", ",", 
               "0"}], "]"}], ",", "30"}], "]"}], ",", 
           RowBox[{"SetPrecision", "[", 
            RowBox[{
             RowBox[{"\[Alpha]cont", "[", 
              RowBox[{"[", "1", "]"}], "]"}], ",", "30"}], "]"}], ",", 
           "Tlim"}], "]"}]}], ";", 
        RowBox[{"temp1", "=", 
         RowBox[{"ParallelTable", "[", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{"r", ",", 
             RowBox[{
              RowBox[{"ImVcp", "[", 
               RowBox[{"r", ",", 
                RowBox[{"SetPrecision", "[", 
                 RowBox[{
                  RowBox[{"mDcalmu", "[", 
                   RowBox[{"Tlim", ",", "0", ",", 
                    RowBox[{"kfinal", "[", 
                    RowBox[{"[", "1", "]"}], "]"}], ",", 
                    RowBox[{"kfinal", "[", 
                    RowBox[{"[", "2", "]"}], "]"}]}], "]"}], ",", "30"}], 
                 "]"}], ",", 
                RowBox[{"SetPrecision", "[", 
                 RowBox[{
                  RowBox[{"v", "[", 
                   RowBox[{
                    RowBox[{"ang", "[", 
                    RowBox[{"[", "i", "]"}], "]"}], ",", "pT", ",", "1", ",", 
                    "0"}], "]"}], ",", "30"}], "]"}], ",", 
                RowBox[{"SetPrecision", "[", 
                 RowBox[{
                  RowBox[{"\[Alpha]cont", "[", 
                   RowBox[{"[", "1", "]"}], "]"}], ",", "30"}], "]"}], ",", 
                "Tlim"}], "]"}], "-", "temp"}]}], "}"}], ",", 
           RowBox[{"{", 
            RowBox[{"r", ",", 
             RowBox[{"1", "/", "1000"}], ",", "100", ",", 
             RowBox[{"1", "/", "20"}]}], "}"}]}], "]"}]}], ";", "\n", 
        RowBox[{"Export", "[", 
         RowBox[{
          RowBox[{"\"\<pots/perp/pT\>\"", "<>", 
           RowBox[{"ToString", "[", "pT", "]"}], "<>", "\"\</ImVcpT\>\"", "<>", 
           RowBox[{"ToString", "[", "pT", "]"}], "<>", "\"\<ang\>\"", "<>", 
           RowBox[{"ToString", "[", "i", "]"}], "<>", "\"\<Jpsi.dat\>\""}], 
          ",", "temp1"}], "]"}], ";"}], ",", 
       RowBox[{"{", 
        RowBox[{"i", ",", "1", ",", 
         RowBox[{"Length", "[", "ang", "]"}]}], "}"}]}], "]"}]}], "]"}], 
   ";"}], "\n"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Block", "[", 
   RowBox[{
    RowBox[{"{", "temp", "}"}], ",", 
    RowBox[{"Do", "[", 
     RowBox[{
      RowBox[{
       RowBox[{"temp", "=", 
        RowBox[{"Join", "[", 
         RowBox[{
          RowBox[{"ParallelTable", "[", 
           RowBox[{
            RowBox[{"{", 
             RowBox[{"r", ",", 
              RowBox[{"ReVcp", "[", 
               RowBox[{"r", ",", 
                RowBox[{"mDcalmu", "[", 
                 RowBox[{"Tlim", ",", "0", ",", 
                  RowBox[{"kfinal", "[", 
                   RowBox[{"[", "1", "]"}], "]"}], ",", 
                  RowBox[{"kfinal", "[", 
                   RowBox[{"[", "2", "]"}], "]"}]}], "]"}], ",", 
                RowBox[{"v", "[", 
                 RowBox[{
                  RowBox[{"ang", "[", 
                   RowBox[{"[", "i", "]"}], "]"}], ",", "pT", ",", "1", ",", 
                  "0"}], "]"}], ",", 
                RowBox[{"\[Alpha]cont", "[", 
                 RowBox[{"[", "1", "]"}], "]"}], ",", 
                RowBox[{"ccont", "[", 
                 RowBox[{"[", "1", "]"}], "]"}]}], "]"}]}], "}"}], ",", 
            RowBox[{"{", 
             RowBox[{"r", ",", 
              RowBox[{"1", "/", "1000"}], ",", "100", ",", 
              RowBox[{"1", "/", "20"}]}], "}"}]}], "]"}], ",", 
          RowBox[{"{", 
           RowBox[{"{", 
            RowBox[{"500", ",", 
             RowBox[{"ReVcp", "[", 
              RowBox[{"500", ",", 
               RowBox[{"mDcalmu", "[", 
                RowBox[{"Tlim", ",", "0", ",", 
                 RowBox[{"kfinal", "[", 
                  RowBox[{"[", "1", "]"}], "]"}], ",", 
                 RowBox[{"kfinal", "[", 
                  RowBox[{"[", "2", "]"}], "]"}]}], "]"}], ",", 
               RowBox[{"v", "[", 
                RowBox[{
                 RowBox[{"ang", "[", 
                  RowBox[{"[", "i", "]"}], "]"}], ",", "pT", ",", "1", ",", 
                 "0"}], "]"}], ",", 
               RowBox[{"\[Alpha]cont", "[", 
                RowBox[{"[", "1", "]"}], "]"}], ",", 
               RowBox[{"ccont", "[", 
                RowBox[{"[", "1", "]"}], "]"}]}], "]"}]}], "}"}], "}"}]}], 
         "]"}]}], ";", 
       RowBox[{"Export", "[", 
        RowBox[{
         RowBox[{"\"\<pots/perp/pT\>\"", "<>", 
          RowBox[{"ToString", "[", "pT", "]"}], "<>", "\"\</ReVcpT\>\"", "<>", 
          RowBox[{"ToString", "[", "pT", "]"}], "<>", "\"\<ang\>\"", "<>", 
          RowBox[{"ToString", "[", "i", "]"}], "<>", "\"\<Jpsi.dat\>\""}], 
         ",", "temp"}], "]"}], ";"}], ",", 
      RowBox[{"{", 
       RowBox[{"i", ",", "1", ",", 
        RowBox[{"Length", "[", "ang", "]"}]}], "}"}]}], "]"}]}], "]"}], 
  ";"}]}], "Input",
 CellChangeTimes->{{3.7552469023018303`*^9, 3.7552469041058073`*^9}, {
  3.7553685865964003`*^9, 3.755368586793284*^9}, {3.755368662836259*^9, 
  3.7553686824026337`*^9}, {3.7553687248118773`*^9, 3.755368725205554*^9}, {
  3.755368851378283*^9, 3.755368851616117*^9}, {3.757091352484736*^9, 
  3.75709135255781*^9}, {3.758976571717352*^9, 3.758976571998925*^9}, {
  3.758977436989893*^9, 3.758977437143642*^9}, {3.758977724708551*^9, 
  3.7589777608004513`*^9}}]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Spectra", "Section",
 CellChangeTimes->{{3.745472165420155*^9, 3.745472170532083*^9}, {
   3.7578068654594812`*^9, 3.757806877651998*^9}, 3.757807915717453*^9}],

Cell[CellGroupData[{

Cell["pT = 0", "Subsection",
 CellChangeTimes->{{3.7578047134492683`*^9, 3.7578047416705647`*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"Block", "[", 
   RowBox[{
    RowBox[{"{", "data", "}"}], ",", 
    RowBox[{
     RowBox[{"data", "=", 
      RowBox[{"ToExpression", "[", 
       RowBox[{"Import", "[", "\"\<pots/perp/pT0/ReVspT0Jpsi.dat\>\"", "]"}], 
       "]"}]}], ";", 
     RowBox[{"data", "=", 
      RowBox[{"Append", "[", 
       RowBox[{"data", ",", 
        RowBox[{"{", 
         RowBox[{"20000", ",", 
          RowBox[{"data", "[", 
           RowBox[{"[", 
            RowBox[{
             RowBox[{"-", "1"}], ",", "2"}], "]"}], "]"}]}], "}"}]}], "]"}]}],
      ";", 
     RowBox[{"ReVs", "=", 
      RowBox[{"Interpolation", "[", 
       RowBox[{"data", ",", 
        RowBox[{"InterpolationOrder", "\[Rule]", "1"}]}], "]"}]}]}]}], "]"}], 
  ";"}]], "Input",
 CellChangeTimes->{{3.746273043134018*^9, 3.7462731014710627`*^9}, {
   3.746273301287758*^9, 3.746273304882516*^9}, {3.746273761020192*^9, 
   3.746273876685227*^9}, {3.7462744640649643`*^9, 3.746274465417224*^9}, {
   3.746349735495809*^9, 3.746349736436407*^9}, 3.746349774584558*^9, {
   3.747480794219287*^9, 3.747480812144912*^9}, {3.747546497327075*^9, 
   3.747546502341762*^9}, {3.7477311702504187`*^9, 3.747731172776266*^9}, {
   3.747933590766211*^9, 3.7479335908605967`*^9}, {3.747933831643701*^9, 
   3.7479338321885357`*^9}, {3.747935743003852*^9, 3.747935745435129*^9}, {
   3.747980226650998*^9, 3.747980227430276*^9}, {3.74819373389242*^9, 
   3.748193736020507*^9}, {3.74955561414298*^9, 3.749555616431025*^9}, {
   3.749555735339233*^9, 3.749555770441473*^9}, {3.749563199290225*^9, 
   3.7495632002283087`*^9}, {3.749582016224145*^9, 3.7495820173360643`*^9}, 
   3.7496465801174393`*^9, 3.749655737246266*^9, {3.749676660140545*^9, 
   3.7496766705804367`*^9}, 3.749707823586372*^9, 3.749831719792158*^9, {
   3.749835469145554*^9, 3.749835470031209*^9}, {3.749835778375493*^9, 
   3.7498357790711718`*^9}, {3.749835993135953*^9, 3.749835993954405*^9}, 
   3.749851496421886*^9, {3.754139882828698*^9, 3.754139908225337*^9}, 
   3.754139940263101*^9, {3.757804680404768*^9, 3.757804683275345*^9}, {
   3.757805059006091*^9, 3.7578050593888407`*^9}, {3.758209979509252*^9, 
   3.7582100351236277`*^9}, 3.7589764849317713`*^9}],

Cell[BoxData[
 RowBox[{
  RowBox[{"Block", "[", 
   RowBox[{
    RowBox[{"{", "data", "}"}], ",", 
    RowBox[{
     RowBox[{"data", "=", 
      RowBox[{"ToExpression", "[", 
       RowBox[{"Import", "[", "\"\<pots/perp/pT0/ReVcpT0Jpsi.dat\>\"", "]"}], 
       "]"}]}], ";", 
     RowBox[{"data", "=", 
      RowBox[{"Append", "[", 
       RowBox[{"data", ",", 
        RowBox[{"{", 
         RowBox[{"20000", ",", 
          RowBox[{"data", "[", 
           RowBox[{"[", 
            RowBox[{
             RowBox[{"-", "1"}], ",", "2"}], "]"}], "]"}]}], "}"}]}], "]"}]}],
      ";", 
     RowBox[{"ReVc", "=", 
      RowBox[{"Interpolation", "[", 
       RowBox[{"data", ",", 
        RowBox[{"InterpolationOrder", "\[Rule]", "1"}]}], "]"}]}]}]}], "]"}], 
  ";"}]], "Input",
 CellChangeTimes->{{3.746273043134018*^9, 3.7462731014710627`*^9}, {
   3.746273301287758*^9, 3.746273304882516*^9}, {3.746273761020192*^9, 
   3.746273876685227*^9}, {3.7462744640649643`*^9, 3.746274465417224*^9}, {
   3.746349735495809*^9, 3.746349736436407*^9}, 3.746349774584558*^9, {
   3.747480794219287*^9, 3.747480812144912*^9}, {3.747546497327075*^9, 
   3.747546502341762*^9}, {3.7477311702504187`*^9, 3.747731172776266*^9}, {
   3.747933590766211*^9, 3.7479335908605967`*^9}, {3.747933831643701*^9, 
   3.7479338321885357`*^9}, {3.747935743003852*^9, 3.747935745435129*^9}, {
   3.747980226650998*^9, 3.747980227430276*^9}, {3.74819373389242*^9, 
   3.748193736020507*^9}, {3.74955561414298*^9, 3.749555616431025*^9}, {
   3.749555735339233*^9, 3.749555770441473*^9}, {3.749563199290225*^9, 
   3.7495632002283087`*^9}, {3.749582016224145*^9, 3.7495820173360643`*^9}, 
   3.7496465801174393`*^9, 3.749655737246266*^9, {3.749676660140545*^9, 
   3.7496766705804367`*^9}, 3.749707823586372*^9, 3.749831719792158*^9, {
   3.749835469145554*^9, 3.749835470031209*^9}, {3.749835778375493*^9, 
   3.7498357790711718`*^9}, {3.749835993135953*^9, 3.749835993954405*^9}, 
   3.749851496421886*^9, {3.754139882828698*^9, 3.754139942863409*^9}, {
   3.757804691721692*^9, 3.757804692636195*^9}, 3.7578050636583776`*^9, {
   3.758210040115294*^9, 3.7582100412726183`*^9}, 3.758976484943364*^9}],

Cell[BoxData[
 RowBox[{
  RowBox[{"Block", "[", 
   RowBox[{
    RowBox[{"{", "data", "}"}], ",", 
    RowBox[{
     RowBox[{"data", "=", 
      RowBox[{"ToExpression", "[", 
       RowBox[{"Import", "[", "\"\<pots/perp/pT0/ImVspT0Jpsi.dat\>\"", "]"}], 
       "]"}]}], ";", 
     RowBox[{"data", "=", 
      RowBox[{"Append", "[", 
       RowBox[{"data", ",", 
        RowBox[{"{", 
         RowBox[{"20000", ",", 
          RowBox[{"data", "[", 
           RowBox[{"[", 
            RowBox[{
             RowBox[{"-", "1"}], ",", "2"}], "]"}], "]"}]}], "}"}]}], "]"}]}],
      ";", 
     RowBox[{"ImVs", "=", 
      RowBox[{"Interpolation", "[", 
       RowBox[{"data", ",", 
        RowBox[{"InterpolationOrder", "\[Rule]", "1"}]}], "]"}]}]}]}], "]"}], 
  ";"}]], "Input",
 CellChangeTimes->{{3.746273043134018*^9, 3.7462731014710627`*^9}, {
   3.746273301287758*^9, 3.746273304882516*^9}, {3.746273761020192*^9, 
   3.746273876685227*^9}, {3.7462744640649643`*^9, 3.746274465417224*^9}, {
   3.746349735495809*^9, 3.746349736436407*^9}, 3.746349774584558*^9, {
   3.747480794219287*^9, 3.747480812144912*^9}, {3.747546497327075*^9, 
   3.747546502341762*^9}, {3.7477311702504187`*^9, 3.747731172776266*^9}, {
   3.747933590766211*^9, 3.7479335908605967`*^9}, {3.747933831643701*^9, 
   3.7479338321885357`*^9}, {3.747935743003852*^9, 3.747935745435129*^9}, {
   3.747980226650998*^9, 3.747980227430276*^9}, {3.74819373389242*^9, 
   3.748193736020507*^9}, {3.74955561414298*^9, 3.749555616431025*^9}, {
   3.749555735339233*^9, 3.749555770441473*^9}, {3.749563199290225*^9, 
   3.7495632002283087`*^9}, {3.749582016224145*^9, 3.7495820173360643`*^9}, 
   3.7496465801174393`*^9, 3.749655737246266*^9, {3.749676660140545*^9, 
   3.7496766705804367`*^9}, 3.749707823586372*^9, 3.749831719792158*^9, {
   3.749835469145554*^9, 3.749835470031209*^9}, {3.749835778375493*^9, 
   3.7498357790711718`*^9}, {3.749835993135953*^9, 3.749835993954405*^9}, 
   3.749851496421886*^9, {3.754139882828698*^9, 3.754139908225337*^9}, {
   3.754139946081867*^9, 3.754139952671867*^9}, {3.757804695535633*^9, 
   3.7578046959247437`*^9}, 3.757805065025539*^9, {3.7582100445633097`*^9, 
   3.758210045526239*^9}, 3.7589764849534607`*^9}],

Cell[BoxData[
 RowBox[{
  RowBox[{"Block", "[", 
   RowBox[{
    RowBox[{"{", "data", "}"}], ",", 
    RowBox[{
     RowBox[{"data", "=", 
      RowBox[{"ToExpression", "[", 
       RowBox[{"Import", "[", "\"\<pots/perp/pT0/ImVcpT0Jpsi.dat\>\"", "]"}], 
       "]"}]}], ";", 
     RowBox[{"data", "=", 
      RowBox[{"Append", "[", 
       RowBox[{"data", ",", 
        RowBox[{"{", 
         RowBox[{"20000", ",", 
          RowBox[{"data", "[", 
           RowBox[{"[", 
            RowBox[{
             RowBox[{"-", "1"}], ",", "2"}], "]"}], "]"}]}], "}"}]}], "]"}]}],
      ";", 
     RowBox[{"ImVc", "=", 
      RowBox[{"Interpolation", "[", 
       RowBox[{"data", ",", 
        RowBox[{"InterpolationOrder", "\[Rule]", "1"}]}], "]"}]}]}]}], "]"}], 
  ";"}]], "Input",
 CellChangeTimes->{{3.746273043134018*^9, 3.7462731014710627`*^9}, {
   3.746273301287758*^9, 3.746273304882516*^9}, {3.746273761020192*^9, 
   3.746273876685227*^9}, {3.7462744640649643`*^9, 3.746274465417224*^9}, {
   3.746349735495809*^9, 3.746349736436407*^9}, 3.746349774584558*^9, {
   3.747480794219287*^9, 3.747480812144912*^9}, {3.747546497327075*^9, 
   3.747546502341762*^9}, {3.7477311702504187`*^9, 3.747731172776266*^9}, {
   3.747933590766211*^9, 3.7479335908605967`*^9}, {3.747933831643701*^9, 
   3.7479338321885357`*^9}, {3.747935743003852*^9, 3.747935745435129*^9}, {
   3.747980226650998*^9, 3.747980227430276*^9}, {3.74819373389242*^9, 
   3.748193736020507*^9}, {3.74955561414298*^9, 3.749555616431025*^9}, {
   3.749555735339233*^9, 3.749555770441473*^9}, {3.749563199290225*^9, 
   3.7495632002283087`*^9}, {3.749582016224145*^9, 3.7495820173360643`*^9}, 
   3.7496465801174393`*^9, 3.749655737246266*^9, {3.749676660140545*^9, 
   3.7496766705804367`*^9}, 3.749707823586372*^9, 3.749831719792158*^9, {
   3.749835469145554*^9, 3.749835470031209*^9}, {3.749835778375493*^9, 
   3.7498357790711718`*^9}, {3.749835993135953*^9, 3.749835993954405*^9}, 
   3.749851496421886*^9, {3.754139882828698*^9, 3.754139908225337*^9}, {
   3.75413995558912*^9, 3.754139971121129*^9}, {3.757804698154974*^9, 
   3.757804698504745*^9}, 3.757805066336375*^9, {3.758210049695629*^9, 
   3.758210050646735*^9}, 3.758976484963566*^9}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Plot", "[", 
  RowBox[{
   RowBox[{
    RowBox[{"ReVs", "[", 
     FractionBox["r", "0.197"], "]"}], "+", 
    RowBox[{"ReVc", "[", 
     FractionBox["r", "0.197"], "]"}]}], ",", 
   RowBox[{"{", 
    RowBox[{"r", ",", "0", ",", "30"}], "}"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.754139985269348*^9, 3.7541400185617247`*^9}}],

Cell[BoxData[
 GraphicsBox[{{{}, {}, 
    TagBox[
     {RGBColor[0.368417, 0.506779, 0.709798], AbsoluteThickness[1.6], Opacity[
      1.], LineBox[CompressedData["
1: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
Z5aX8X7tY74r/h+PSOiK
       "]]},
     Annotation[#, "Charting`Private`Tag$1143#1"]& ]}, {}, {}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{0, 0},
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  ImagePadding->All,
  Method->{
   "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
    AbsolutePointSize[6], "ScalingFunctions" -> None, 
    "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
        (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
         Part[#, 1]], 
        (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
         Part[#, 2]]}& ), "CopiedValueFunction" -> ({
        (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
         Part[#, 1]], 
        (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
         Part[#, 2]]}& )}},
  PlotRange->{{0, 30}, {-0.9189857838459952, 0.9701906809893774}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.05], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{{3.7541399964152412`*^9, 3.754140019098102*^9}, 
   3.7541466044779463`*^9, 3.7578047048121357`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Plot", "[", 
  RowBox[{
   RowBox[{
    RowBox[{"ImVc", "[", 
     FractionBox["r", "0.197"], "]"}], "+", 
    RowBox[{"ImVs", "[", 
     FractionBox["r", "0.197"], "]"}]}], ",", 
   RowBox[{"{", 
    RowBox[{"r", ",", "0", ",", "30"}], "}"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.754140027954275*^9, 3.754140032501*^9}, {
  3.7541466155326023`*^9, 3.7541466254445457`*^9}}],

Cell[BoxData[
 GraphicsBox[{{{}, {}, 
    TagBox[
     {RGBColor[0.368417, 0.506779, 0.709798], AbsoluteThickness[1.6], Opacity[
      1.], LineBox[CompressedData["
1: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
JJl0WXHv0wfP/F5vxm3V9wmUAFZ0Wpz2r2UTw+q261qUL6y4JEPp22kijhuO
Cbffwk2onpX9+P79rViSI+PZEL8Jp7n0bE0rJdDqNW2T++wmHA63NXVnkcK3
LIRUrqNsqEv31P2qvA1PTJRrSmey4cQp4qVn17Zjg2Cr6m4iO+pI8DOEVEqj
aYWcuIQ9O3I1SkXm0XdgTasPp0EhOwqH5hopK8tiKr3Rf5aFA2NlVCncZ3bi
2yNNvyqPcWC9oObu2Wg5fHIi84LwQw7cK1wZtattFxKV3vWbfeVAdsbky3YB
8siiHaY1zk1B0eub1S2kFLA6i902TJmCJEmrF0ffKWCSIDxUNaOgnIZArudJ
Rcw1/LA7ee2vuvdxVekRaPh40mTc+Q4Fa2usXmUy0FBBjZDfv2bR3LQiMhMN
m4lP7IzuUrD+2t7sehINdZzu+yvco6C4mP09PW4aZipIb5m9T8GPp/LP6EnR
sDWkI909joLyY0c26RnQ8OOjXx32SRS88fEBc6YhDV+k2vY0r7mnZIhANqah
4pfG+X3JFAwN85yrM6FhqH3grOB/FByQedSna0PD7zbn1FpSKBjlPJmn605D
t4M3ptQzKDhiqpL15DINK14d//BkzeoQkErypOGc8t5SvicUHOXgi6u7QkN9
kb6jU2vGfI1A3WAaChbHmCZnUZA+G26iG0vD/Z8y5wi5a/t0JJkmxNHQWKFB
6cKa61+9MJuOp6FQ9dmoz2tOCRmweJBEwyA+g5j0PAredpqz/PEfDSXng99R
8il4zZhspZlGw0fvzy54r9lSSMl6LJOGp0sdyPoFFDxE0LXRyKGh56aVpsI1
7/560jY6l4aLljwKIoVr96x3t/uaT0NvwuOAI2um5IbYqz5b97hX/ukvxeuu
1up2vPlq3fLnA1ykm9f9MFraq25w3W4DnjdJRKW/PrirJk5357oDODe83+K3
7vJZtd8LTet2llXs+uiw+681Jk9/siAp//UBCephtuR1b/cP86rcs+evdzio
vpbsWrdD+dmgZ24qf/368afT07yqf/0zY3VhV9G6T0lmkeIO7/3r6R13lAum
1l2c8vvLXKjaX1vu34pqoup/LXQxpESuYt28ZKf8w2Yaf92ldqc1LWvdiRdL
51ZX1/0/gHKwbg==
       "]]},
     Annotation[#, "Charting`Private`Tag$1253#1"]& ]}, {}, {}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{0, 0},
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  ImagePadding->All,
  ImageSize->{374.7578125, Automatic},
  Method->{
   "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
    AbsolutePointSize[6], "ScalingFunctions" -> None, 
    "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
        (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
         Part[#, 1]], 
        (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
         Part[#, 2]]}& ), "CopiedValueFunction" -> ({
        (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
         Part[#, 1]], 
        (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
         Part[#, 2]]}& )}},
  PlotRange->{{0, 30}, {-3.1164210665743015`*^-7, 4.175107995048273}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.05], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{
  3.75414003307718*^9, {3.754146607120152*^9, 3.7541466257101517`*^9}, 
   3.7578047068111134`*^9}]
}, Open  ]],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"ParallelSow", "[", "expr_", "]"}], ":=", 
   RowBox[{"Sow", "[", "expr", "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"SetSharedFunction", "[", "ParallelSow", "]"}], ";"}]}], "Input"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"\[Delta]", "=", 
    FractionBox["1", "100"]}], ";"}], " "}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"d\[Omega]", "=", "0.0002"}], ";"}]}], "Input",
 CellChangeTimes->{{3.74228955582731*^9, 3.742289558498271*^9}, {
  3.742298662461986*^9, 3.742298684870023*^9}, {3.742298729927827*^9, 
  3.7422987328788557`*^9}, {3.742299426624055*^9, 3.742299459795083*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"pT", "=", "0"}], ";"}]], "Input",
 CellChangeTimes->{{3.7582101475547533`*^9, 3.758210151228115*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"swaveccspectra", "[", "ang_", "]"}], ":=", 
   RowBox[{"Block", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{"\[Alpha]", "=", 
        RowBox[{"\[Alpha]cont", "[", 
         RowBox[{"[", "1", "]"}], "]"}]}], ",", 
       RowBox[{"c", "=", 
        RowBox[{"ccont", "[", 
         RowBox[{"[", "1", "]"}], "]"}]}], ",", 
       RowBox[{"M", "=", "Mc"}], ",", 
       RowBox[{"l", "=", "0"}], ",", 
       RowBox[{"\[Omega]min", "=", 
        RowBox[{"-", "1"}]}], ",", 
       RowBox[{"\[Omega]max", "=", "2"}], ",", "ccss", ",", "inf", ",", 
       "\[Rho]table", ",", "\[Omega]", ",", "rhow", ",", "gr0", ",", "s1", 
       ",", "V"}], "}"}], ",", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{
       RowBox[{"V", "[", "r_", "]"}], ":=", 
       RowBox[{
        RowBox[{"ReVs", "[", "r", "]"}], "+", 
        RowBox[{"ReVc", "[", "r", "]"}], "+", 
        RowBox[{"\[ImaginaryI]", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{"ImVs", "[", "r", "]"}], "+", 
           RowBox[{"ImVc", "[", "r", "]"}]}], ")"}]}]}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"\[Rho]table", "=", 
       RowBox[{
        RowBox[{
         RowBox[{
          RowBox[{"ParallelDo", "[", 
           RowBox[{
            RowBox[{
             RowBox[{"\[Omega]", "=", 
              RowBox[{"\[Omega]min", "+", 
               RowBox[{
                RowBox[{"(", 
                 RowBox[{"it", "-", "1"}], ")"}], " ", "d\[Omega]", " ", 
                "M"}]}]}], ";", 
             RowBox[{"inf", "=", 
              RowBox[{"40", "+", 
               RowBox[{"500", "*", "it", "*", "d\[Omega]"}]}]}], ";", 
             "\[IndentingNewLine]", 
             RowBox[{"s01", "=", 
              RowBox[{"NDSolve", "[", 
               RowBox[{
                RowBox[{"{", 
                 RowBox[{
                  RowBox[{
                   RowBox[{
                    RowBox[{
                    RowBox[{"(", 
                    RowBox[{"\[Omega]", "-", 
                    FractionBox[
                    RowBox[{"l", 
                    RowBox[{"(", 
                    RowBox[{"l", "+", "1"}], ")"}]}], 
                    RowBox[{"M", " ", 
                    SuperscriptBox["r", "2"]}]], "-", 
                    RowBox[{"Re", "[", 
                    RowBox[{"V", "[", "r", "]"}], "]"}], "+", 
                    RowBox[{"\[ImaginaryI]", " ", 
                    RowBox[{"Abs", "[", 
                    RowBox[{"Im", "[", 
                    RowBox[{"V", "[", "r", "]"}], "]"}], "]"}]}]}], ")"}], 
                    RowBox[{"gr", "[", "r", "]"}]}], "+", 
                    RowBox[{
                    FractionBox["1", "M"], 
                    RowBox[{
                    RowBox[{"gr", "''"}], "[", "r", "]"}]}]}], "\[Equal]", 
                   "0"}], ",", " ", "\[IndentingNewLine]", 
                  RowBox[{
                   RowBox[{
                    RowBox[{"gr", "'"}], "[", "\[Delta]", "]"}], "\[Equal]", 
                   RowBox[{
                    RowBox[{"(", 
                    RowBox[{"\[Alpha]", " ", "M"}], ")"}], "-", 
                    RowBox[{"\[Delta]", 
                    SuperscriptBox[
                    RowBox[{"(", 
                    RowBox[{"M", " ", "\[Alpha]"}], ")"}], "2"]}]}]}], ",", 
                  "\[IndentingNewLine]", " ", 
                  RowBox[{
                   RowBox[{"gr", "[", "\[Delta]", "]"}], "\[Equal]", 
                   RowBox[{
                    RowBox[{"\[Delta]", 
                    RowBox[{"(", 
                    RowBox[{"\[Alpha]", " ", "M"}], ")"}]}], "-", " ", 
                    RowBox[{
                    FractionBox["1", "2"], 
                    SuperscriptBox["\[Delta]", "2"], 
                    SuperscriptBox[
                    RowBox[{"(", 
                    RowBox[{"\[Alpha]", " ", "M"}], ")"}], "2"]}]}]}]}], 
                 "}"}], ",", "gr", ",", 
                RowBox[{"{", 
                 RowBox[{"r", ",", "\[Delta]", ",", "inf"}], "}"}]}], "]"}]}],
              ";", "\[IndentingNewLine]", 
             RowBox[{
              RowBox[{"gr0", "[", "r_", "]"}], "=", 
              SubscriptBox[
               RowBox[{"(", 
                RowBox[{
                 RowBox[{"gr", "[", "r", "]"}], "/.", "s01"}], ")"}], 
               RowBox[{
               "\[LeftDoubleBracket]", "1", "\[RightDoubleBracket]"}]]}], ";",
              "\[IndentingNewLine]", 
             RowBox[{"s1", "=", 
              RowBox[{"NDSolve", "[", 
               RowBox[{
                RowBox[{"{", 
                 RowBox[{
                  RowBox[{
                   RowBox[{
                    RowBox[{"rho", "'"}], "[", "x", "]"}], "\[Equal]", 
                   RowBox[{
                    RowBox[{"-", 
                    FractionBox[
                    RowBox[{" ", 
                    RowBox[{"6", " ", "Nc", " ", 
                    SuperscriptBox["M", "2"], " ", "\[Alpha]"}]}], 
                    RowBox[{"4", "\[Pi]"}]]}], 
                    RowBox[{"Im", "[", 
                    FractionBox["1", 
                    SuperscriptBox[
                    RowBox[{"(", 
                    RowBox[{"gr0", "[", "x", "]"}], ")"}], "2"]], 
                    RowBox[{"(*", 
                    RowBox[{"+", 
                    FractionBox["36", 
                    SuperscriptBox[
                    RowBox[{"(", 
                    RowBox[{"gr1", "[", "x", "]"}], ")"}], "2"]]}], "*)"}], 
                    "]"}]}]}], ",", 
                  RowBox[{
                   RowBox[{"rho", "[", "\[Delta]", "]"}], "\[Equal]", "0"}]}],
                  "}"}], ",", "rho", ",", 
                RowBox[{"{", 
                 RowBox[{"x", ",", "\[Delta]", ",", "inf"}], "}"}]}], "]"}]}],
              ";", "\[IndentingNewLine]", 
             RowBox[{
              RowBox[{"rhow", "[", "r_", "]"}], "=", 
              SubscriptBox[
               RowBox[{"(", 
                RowBox[{
                 RowBox[{"rho", "[", "r", "]"}], "/.", "s1"}], ")"}], 
               RowBox[{
               "\[LeftDoubleBracket]", "1", "\[RightDoubleBracket]"}]]}], ";",
              "\[IndentingNewLine]", 
             RowBox[{"ParallelSow", "[", 
              RowBox[{"{", 
               RowBox[{
                RowBox[{"\[Omega]", "+", 
                 RowBox[{"2", "M"}]}], ",", 
                RowBox[{"rhow", "[", "inf", "]"}]}], "}"}], "]"}]}], ",", 
            RowBox[{"{", 
             RowBox[{"it", ",", "1", ",", 
              FractionBox[
               RowBox[{"\[Omega]max", "-", "\[Omega]min"}], 
               RowBox[{"d\[Omega]", " ", "M"}]]}], "}"}]}], "]"}], "//", 
          "Reap"}], "//", "Last"}], "//", "First"}]}], ";", 
      "\[IndentingNewLine]", "\[IndentingNewLine]", 
      RowBox[{"ccss", "=", 
       RowBox[{"ParallelTable", "[", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{
           RowBox[{"\[Rho]table", "[", 
            RowBox[{"[", 
             RowBox[{"i", ",", "1"}], "]"}], "]"}], ",", 
           FractionBox[
            RowBox[{"-", 
             RowBox[{"\[Rho]table", "[", 
              RowBox[{"[", 
               RowBox[{"i", ",", "2"}], "]"}], "]"}]}], 
            SuperscriptBox[
             RowBox[{"\[Rho]table", "[", 
              RowBox[{"[", 
               RowBox[{"i", ",", "1"}], "]"}], "]"}], "2"]]}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"i", ",", "1", ",", 
           RowBox[{"Length", "[", "\[Rho]table", "]"}]}], "}"}]}], "]"}]}], 
      ";", "\[IndentingNewLine]", 
      RowBox[{"Export", "[", 
       RowBox[{
        RowBox[{"\"\<cc/perp/pT\>\"", "<>", 
         RowBox[{"ToString", "[", "pT", "]"}], "<>", "\"\</swccpT\>\"", "<>", 
         
         RowBox[{"ToString", "[", "pT", "]"}], "<>", 
         "\"\<spectraJpsi.dat\>\""}], ",", 
        RowBox[{"Sort", "[", "ccss", "]"}]}], "]"}], ";"}]}], 
    "\[IndentingNewLine]", "]"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.724397604460712*^9, 3.724397621092863*^9}, {
   3.724398705481254*^9, 3.724398705798315*^9}, {3.72440624506767*^9, 
   3.7244062457361317`*^9}, {3.7244423136168756`*^9, 3.724442340980721*^9}, {
   3.7244423712224417`*^9, 3.724442377050403*^9}, {3.724442465925974*^9, 
   3.724442518695669*^9}, {3.7244426255599117`*^9, 3.724442639076613*^9}, {
   3.724443729204352*^9, 3.724443729749022*^9}, {3.724443881656342*^9, 
   3.7244438842850027`*^9}, 3.725261621115453*^9, 3.72526166634648*^9, {
   3.725271550289123*^9, 3.7252715504130163`*^9}, {3.725271609402791*^9, 
   3.7252716095188437`*^9}, {3.7252717762497*^9, 3.725271782362536*^9}, {
   3.725271824500347*^9, 3.725271826035269*^9}, {3.725271857701564*^9, 
   3.725271858192912*^9}, {3.725271928114049*^9, 3.7252719496618757`*^9}, {
   3.725271981807578*^9, 3.725271987122878*^9}, {3.725273718896678*^9, 
   3.72527377251343*^9}, {3.725273963159111*^9, 3.725273966198284*^9}, {
   3.725364382855975*^9, 3.725364384697238*^9}, {3.725364432753635*^9, 
   3.725364433681274*^9}, {3.725364595553596*^9, 3.725364595868292*^9}, {
   3.725364661141473*^9, 3.725364661301785*^9}, {3.725365068510941*^9, 
   3.7253650691073112`*^9}, {3.7256202924505177`*^9, 
   3.7256202938854313`*^9}, {3.7256265502253428`*^9, 3.725626559021003*^9}, {
   3.725798091627001*^9, 3.725798108963685*^9}, {3.725798150844287*^9, 
   3.725798156038417*^9}, {3.726312422974263*^9, 3.726312439922279*^9}, {
   3.726313778060986*^9, 3.726313794010726*^9}, {3.726313854887352*^9, 
   3.726313855417986*^9}, {3.726377533478507*^9, 3.726377535012369*^9}, {
   3.726379310729051*^9, 3.726379315935656*^9}, {3.726379351066524*^9, 
   3.7263793563685627`*^9}, 3.7263814533362722`*^9, {3.726468979312665*^9, 
   3.726469044993416*^9}, {3.726564279540083*^9, 3.726564288774165*^9}, {
   3.726564330005303*^9, 3.726564342424973*^9}, {3.7265645007454853`*^9, 
   3.7265645054085903`*^9}, 3.726565145221386*^9, {3.726836923420138*^9, 
   3.726836925204391*^9}, {3.7268417497448387`*^9, 3.726841749854889*^9}, {
   3.727357927216405*^9, 3.7273579306359463`*^9}, 3.72735811608375*^9, {
   3.7273582875862513`*^9, 3.727358296888235*^9}, {3.727520051444908*^9, 
   3.7275200665503483`*^9}, {3.727539483513708*^9, 3.72753949210455*^9}, {
   3.7275398377710333`*^9, 3.727539869000495*^9}, {3.7275879806550293`*^9, 
   3.727587984698921*^9}, {3.727606150288821*^9, 3.727606150994812*^9}, {
   3.728932814314426*^9, 3.728932860160056*^9}, 3.7289333254815903`*^9, 
   3.7299208725344887`*^9, {3.730007040539275*^9, 3.7300070509717903`*^9}, {
   3.730007357183831*^9, 3.7300073662633142`*^9}, {3.7331192829046183`*^9, 
   3.733119300197537*^9}, {3.733120717385792*^9, 3.733120717697629*^9}, {
   3.7331222711038847`*^9, 3.733122272703622*^9}, {3.733211538849382*^9, 
   3.7332115515038567`*^9}, {3.7332289443370447`*^9, 
   3.7332289447842827`*^9}, {3.742215948846467*^9, 3.742215959437643*^9}, {
   3.742216025305929*^9, 3.742216093257207*^9}, {3.7422172078868933`*^9, 
   3.7422172275906973`*^9}, 3.74221727383118*^9, {3.742217585069265*^9, 
   3.742217591716959*^9}, {3.7422176229823923`*^9, 3.742217653035615*^9}, {
   3.742269341112874*^9, 3.742269371527761*^9}, 3.742275694936644*^9, {
   3.742289467062118*^9, 3.742289486771803*^9}, {3.742289520463562*^9, 
   3.7422896027136*^9}, {3.7422896364561243`*^9, 3.74228964347093*^9}, {
   3.742289678232355*^9, 3.742289708137301*^9}, {3.7422897506101*^9, 
   3.7422897587096577`*^9}, {3.7422920316457787`*^9, 3.742292034487727*^9}, 
   3.742292186682322*^9, {3.742292303240778*^9, 3.742292303483521*^9}, {
   3.742292362481593*^9, 3.742292372544711*^9}, {3.742292408813004*^9, 
   3.742292447857381*^9}, {3.7422968206130743`*^9, 3.742296843480155*^9}, {
   3.7422970160890417`*^9, 3.742297024417719*^9}, {3.742297074890059*^9, 
   3.74229711910509*^9}, {3.7422973083294992`*^9, 3.742297309298213*^9}, {
   3.742297354168077*^9, 3.742297359897736*^9}, {3.742297415918168*^9, 
   3.7422974232482452`*^9}, {3.742297467739311*^9, 3.742297612963316*^9}, {
   3.7422977860232887`*^9, 3.7422977903561068`*^9}, {3.74229798181938*^9, 
   3.742298023677857*^9}, {3.7422980561712513`*^9, 3.74229805925661*^9}, 
   3.742298106308654*^9, {3.742300221204397*^9, 3.742300269720365*^9}, {
   3.742300416216001*^9, 3.742300416917211*^9}, {3.742300536315893*^9, 
   3.742300546756034*^9}, {3.742300626604027*^9, 3.742300638323701*^9}, {
   3.7423006769018583`*^9, 3.7423007163572683`*^9}, {3.7435037431402884`*^9, 
   3.743503799356997*^9}, {3.7435038425347443`*^9, 3.743503908279688*^9}, {
   3.7435046316079397`*^9, 3.743504651390107*^9}, 3.745326235801956*^9, {
   3.745577559422867*^9, 3.745577586968154*^9}, {3.745580528080043*^9, 
   3.74558059234057*^9}, {3.745580690187639*^9, 3.745580708875317*^9}, {
   3.745642437900836*^9, 3.745642442612089*^9}, {3.745642493682754*^9, 
   3.7456425382868767`*^9}, {3.74627352599397*^9, 3.7462735295622587`*^9}, {
   3.7462736076039886`*^9, 3.7462736659082212`*^9}, {3.746273697621533*^9, 
   3.746273736166617*^9}, {3.7462741385800743`*^9, 3.746274142868767*^9}, {
   3.746274228830742*^9, 3.746274248310967*^9}, {3.7462743303367853`*^9, 
   3.7462743498486643`*^9}, {3.746274405954569*^9, 3.746274407722952*^9}, {
   3.74627803681008*^9, 3.746278037153131*^9}, {3.747887414650214*^9, 
   3.747887423938949*^9}, {3.7481674233164043`*^9, 3.7481674506752663`*^9}, {
   3.749554891486802*^9, 3.749554922961441*^9}, {3.749555089233777*^9, 
   3.749555119969118*^9}, {3.749563528737471*^9, 3.7495636549318132`*^9}, {
   3.749582048761517*^9, 3.749582052529887*^9}, 3.749646995985099*^9, 
   3.749655798300173*^9, 3.74970789643521*^9, {3.75414665053309*^9, 
   3.754146706624938*^9}, {3.757807031207905*^9, 3.757807040656314*^9}, {
   3.757807702967629*^9, 3.7578077038242903`*^9}, {3.7578078882965317`*^9, 
   3.757807902315524*^9}, {3.75780798833467*^9, 3.7578079890797157`*^9}, {
   3.757808051229706*^9, 3.757808087763713*^9}, {3.757810418692294*^9, 
   3.757810421517911*^9}, 3.757886527824544*^9, {3.7582101069685717`*^9, 
   3.758210139938016*^9}, 3.758976484977076*^9}],

Cell[BoxData[
 RowBox[{"swaveccspectra", "[", "0", "]"}]], "Input",
 CellChangeTimes->{{3.758210161218617*^9, 3.7582101678789587`*^9}}]
}, Closed]],

Cell[CellGroupData[{

Cell["pT =/= 0", "Subsection",
 CellChangeTimes->{{3.7578047134492683`*^9, 3.7578047416705647`*^9}, {
  3.75780499622071*^9, 3.7578049963390636`*^9}, {3.75780669430044*^9, 
  3.757806695337428*^9}, {3.757806984086646*^9, 3.757806985529924*^9}}],

Cell[CellGroupData[{

Cell["Funcs", "Subsubsection",
 CellChangeTimes->{{3.757807926662183*^9, 3.757807934194962*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"PotsIn", "[", "pT1_", "]"}], ":=", 
  RowBox[{"Block", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"pT", "=", "pT1"}], "}"}], ",", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"ReVs", "=", 
      RowBox[{"ConstantArray", "[", 
       RowBox[{"0", ",", "51"}], "]"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"ReVc", "=", 
      RowBox[{"ConstantArray", "[", 
       RowBox[{"0", ",", "51"}], "]"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"ImVc", "=", 
      RowBox[{"ConstantArray", "[", 
       RowBox[{"0", ",", "51"}], "]"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"ImVs", "=", 
      RowBox[{"ConstantArray", "[", 
       RowBox[{"0", ",", "51"}], "]"}]}], ";", "\n", 
     RowBox[{
      RowBox[{"Do", "[", 
       RowBox[{
        RowBox[{
         RowBox[{"Block", "[", 
          RowBox[{
           RowBox[{"{", "data", "}"}], ",", 
           RowBox[{
            RowBox[{"data", "=", 
             RowBox[{"ToExpression", "[", 
              RowBox[{"Import", "[", 
               RowBox[{"\"\<pots/perp/pT\>\"", "<>", 
                RowBox[{"ToString", "[", "pT", "]"}], "<>", "\"\</ReVspT\>\"",
                 "<>", 
                RowBox[{"ToString", "[", "pT", "]"}], "<>", "\"\<ang\>\"", "<>", 
                RowBox[{"ToString", "[", "i", "]"}], "<>", 
                "\"\<Jpsi.dat\>\""}], "]"}], "]"}]}], ";", 
            RowBox[{"data", "=", 
             RowBox[{"Append", "[", 
              RowBox[{"data", ",", 
               RowBox[{"{", 
                RowBox[{"20000", ",", 
                 RowBox[{"data", "[", 
                  RowBox[{"[", 
                   RowBox[{
                    RowBox[{"-", "1"}], ",", "2"}], "]"}], "]"}]}], "}"}]}], 
              "]"}]}], ";", 
            RowBox[{
             RowBox[{"ReVs", "[", 
              RowBox[{"[", "i", "]"}], "]"}], "=", 
             RowBox[{"Interpolation", "[", 
              RowBox[{"data", ",", 
               RowBox[{"InterpolationOrder", "\[Rule]", "1"}]}], "]"}]}]}]}], 
          "]"}], ";"}], ",", 
        RowBox[{"{", 
         RowBox[{"i", ",", "1", ",", "51"}], "}"}]}], "]"}], "\n", 
      RowBox[{"Do", "[", 
       RowBox[{
        RowBox[{
         RowBox[{"Block", "[", 
          RowBox[{
           RowBox[{"{", "data", "}"}], ",", 
           RowBox[{
            RowBox[{"data", "=", 
             RowBox[{"ToExpression", "[", 
              RowBox[{"Import", "[", 
               RowBox[{"\"\<pots/perp/pT\>\"", "<>", 
                RowBox[{"ToString", "[", "pT", "]"}], "<>", "\"\</ReVcpT\>\"",
                 "<>", 
                RowBox[{"ToString", "[", "pT", "]"}], "<>", "\"\<ang\>\"", "<>", 
                RowBox[{"ToString", "[", "i", "]"}], "<>", 
                "\"\<Jpsi.dat\>\""}], "]"}], "]"}]}], ";", 
            RowBox[{"data", "=", 
             RowBox[{"Append", "[", 
              RowBox[{"data", ",", 
               RowBox[{"{", 
                RowBox[{"20000", ",", 
                 RowBox[{"data", "[", 
                  RowBox[{"[", 
                   RowBox[{
                    RowBox[{"-", "1"}], ",", "2"}], "]"}], "]"}]}], "}"}]}], 
              "]"}]}], ";", 
            RowBox[{
             RowBox[{"ReVc", "[", 
              RowBox[{"[", "i", "]"}], "]"}], "=", 
             RowBox[{"Interpolation", "[", 
              RowBox[{"data", ",", 
               RowBox[{"InterpolationOrder", "\[Rule]", "1"}]}], "]"}]}]}]}], 
          "]"}], ";"}], ",", 
        RowBox[{"{", 
         RowBox[{"i", ",", "1", ",", "51"}], "}"}]}], "]"}], "\n", 
      RowBox[{"Do", "[", 
       RowBox[{
        RowBox[{
         RowBox[{"Block", "[", 
          RowBox[{
           RowBox[{"{", "data", "}"}], ",", 
           RowBox[{
            RowBox[{"data", "=", 
             RowBox[{"ToExpression", "[", 
              RowBox[{"Import", "[", 
               RowBox[{"\"\<pots/perp/pT\>\"", "<>", 
                RowBox[{"ToString", "[", "pT", "]"}], "<>", "\"\</ImVspT\>\"",
                 "<>", 
                RowBox[{"ToString", "[", "pT", "]"}], "<>", "\"\<ang\>\"", "<>", 
                RowBox[{"ToString", "[", "i", "]"}], "<>", 
                "\"\<Jpsi.dat\>\""}], "]"}], "]"}]}], ";", 
            RowBox[{"data", "=", 
             RowBox[{"Append", "[", 
              RowBox[{"data", ",", 
               RowBox[{"{", 
                RowBox[{"20000", ",", 
                 RowBox[{"data", "[", 
                  RowBox[{"[", 
                   RowBox[{
                    RowBox[{"-", "1"}], ",", "2"}], "]"}], "]"}]}], "}"}]}], 
              "]"}]}], ";", 
            RowBox[{
             RowBox[{"ImVs", "[", 
              RowBox[{"[", "i", "]"}], "]"}], "=", 
             RowBox[{"Interpolation", "[", 
              RowBox[{"data", ",", 
               RowBox[{"InterpolationOrder", "\[Rule]", "1"}]}], "]"}]}]}]}], 
          "]"}], ";"}], ",", 
        RowBox[{"{", 
         RowBox[{"i", ",", "1", ",", "51"}], "}"}]}], "]"}], "\n", 
      RowBox[{"Do", "[", 
       RowBox[{
        RowBox[{
         RowBox[{"Block", "[", 
          RowBox[{
           RowBox[{"{", "data", "}"}], ",", 
           RowBox[{
            RowBox[{"data", "=", 
             RowBox[{"ToExpression", "[", 
              RowBox[{"Import", "[", 
               RowBox[{"\"\<pots/perp/pT\>\"", "<>", 
                RowBox[{"ToString", "[", "pT", "]"}], "<>", "\"\</ImVcpT\>\"",
                 "<>", 
                RowBox[{"ToString", "[", "pT", "]"}], "<>", "\"\<ang\>\"", "<>", 
                RowBox[{"ToString", "[", "i", "]"}], "<>", 
                "\"\<Jpsi.dat\>\""}], "]"}], "]"}]}], ";", 
            RowBox[{"data", "=", 
             RowBox[{"Append", "[", 
              RowBox[{"data", ",", 
               RowBox[{"{", 
                RowBox[{"20000", ",", 
                 RowBox[{"data", "[", 
                  RowBox[{"[", 
                   RowBox[{
                    RowBox[{"-", "1"}], ",", "2"}], "]"}], "]"}]}], "}"}]}], 
              "]"}]}], ";", 
            RowBox[{
             RowBox[{"ImVc", "[", 
              RowBox[{"[", "i", "]"}], "]"}], "=", 
             RowBox[{"Interpolation", "[", 
              RowBox[{"data", ",", 
               RowBox[{"InterpolationOrder", "\[Rule]", "1"}]}], "]"}]}]}]}], 
          "]"}], ";"}], ",", 
        RowBox[{"{", 
         RowBox[{"i", ",", "1", ",", "51"}], "}"}]}], "]"}]}], ";"}]}], 
   "]"}]}]], "Input",
 CellChangeTimes->{{3.757807732289682*^9, 3.7578077927944403`*^9}, {
  3.7578079676897383`*^9, 3.757807971862171*^9}, {3.758976484989546*^9, 
  3.758976485004064*^9}}],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"ParallelSow", "[", "expr_", "]"}], ":=", 
   RowBox[{"Sow", "[", "expr", "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"SetSharedFunction", "[", "ParallelSow", "]"}], ";"}]}], "Input"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"\[Delta]", "=", 
    FractionBox["1", "100"]}], ";"}], " "}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"d\[Omega]", "=", "0.0002"}], ";"}]}], "Input",
 CellChangeTimes->{{3.74228955582731*^9, 3.742289558498271*^9}, {
  3.742298662461986*^9, 3.742298684870023*^9}, {3.742298729927827*^9, 
  3.7422987328788557`*^9}, {3.742299426624055*^9, 3.742299459795083*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"swaveccspectra", "[", "ang_", "]"}], ":=", 
   RowBox[{"Block", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{"\[Alpha]", "=", 
        RowBox[{"\[Alpha]cont", "[", 
         RowBox[{"[", "1", "]"}], "]"}]}], ",", 
       RowBox[{"c", "=", 
        RowBox[{"ccont", "[", 
         RowBox[{"[", "1", "]"}], "]"}]}], ",", 
       RowBox[{"M", "=", "Mc"}], ",", 
       RowBox[{"l", "=", "0"}], ",", 
       RowBox[{"\[Omega]min", "=", 
        RowBox[{"-", "1"}]}], ",", 
       RowBox[{"\[Omega]max", "=", "2"}], ",", "ccss", ",", "inf", ",", 
       "\[Rho]table", ",", "\[Omega]", ",", "rhow", ",", "gr0", ",", "s1", 
       ",", "V"}], "}"}], ",", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{
       RowBox[{"V", "[", "r_", "]"}], ":=", 
       RowBox[{
        RowBox[{
         RowBox[{"ReVs", "[", 
          RowBox[{"[", "ang", "]"}], "]"}], "[", "r", "]"}], "+", 
        RowBox[{
         RowBox[{"ReVc", "[", 
          RowBox[{"[", "ang", "]"}], "]"}], "[", "r", "]"}], "+", 
        RowBox[{"\[ImaginaryI]", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{
            RowBox[{"ImVs", "[", 
             RowBox[{"[", "ang", "]"}], "]"}], "[", "r", "]"}], "+", 
           RowBox[{
            RowBox[{"ImVc", "[", 
             RowBox[{"[", "ang", "]"}], "]"}], "[", "r", "]"}]}], ")"}]}]}]}],
       ";", "\[IndentingNewLine]", 
      RowBox[{"\[Rho]table", "=", 
       RowBox[{
        RowBox[{
         RowBox[{
          RowBox[{"ParallelDo", "[", 
           RowBox[{
            RowBox[{
             RowBox[{"\[Omega]", "=", 
              RowBox[{"\[Omega]min", "+", 
               RowBox[{
                RowBox[{"(", 
                 RowBox[{"it", "-", "1"}], ")"}], " ", "d\[Omega]", " ", 
                "M"}]}]}], ";", 
             RowBox[{"inf", "=", 
              RowBox[{"40", "+", 
               RowBox[{"500", "*", "it", "*", "d\[Omega]"}]}]}], ";", 
             "\[IndentingNewLine]", 
             RowBox[{"s01", "=", 
              RowBox[{"NDSolve", "[", 
               RowBox[{
                RowBox[{"{", 
                 RowBox[{
                  RowBox[{
                   RowBox[{
                    RowBox[{
                    RowBox[{"(", 
                    RowBox[{"\[Omega]", "-", 
                    FractionBox[
                    RowBox[{"l", 
                    RowBox[{"(", 
                    RowBox[{"l", "+", "1"}], ")"}]}], 
                    RowBox[{"M", " ", 
                    SuperscriptBox["r", "2"]}]], "-", 
                    RowBox[{"Re", "[", 
                    RowBox[{"V", "[", "r", "]"}], "]"}], "+", 
                    RowBox[{"\[ImaginaryI]", " ", 
                    RowBox[{"Abs", "[", 
                    RowBox[{"Im", "[", 
                    RowBox[{"V", "[", "r", "]"}], "]"}], "]"}]}]}], ")"}], 
                    RowBox[{"gr", "[", "r", "]"}]}], "+", 
                    RowBox[{
                    FractionBox["1", "M"], 
                    RowBox[{
                    RowBox[{"gr", "''"}], "[", "r", "]"}]}]}], "\[Equal]", 
                   "0"}], ",", " ", "\[IndentingNewLine]", 
                  RowBox[{
                   RowBox[{
                    RowBox[{"gr", "'"}], "[", "\[Delta]", "]"}], "\[Equal]", 
                   RowBox[{
                    RowBox[{"(", 
                    RowBox[{"\[Alpha]", " ", "M"}], ")"}], "-", 
                    RowBox[{"\[Delta]", 
                    SuperscriptBox[
                    RowBox[{"(", 
                    RowBox[{"M", " ", "\[Alpha]"}], ")"}], "2"]}]}]}], ",", 
                  "\[IndentingNewLine]", " ", 
                  RowBox[{
                   RowBox[{"gr", "[", "\[Delta]", "]"}], "\[Equal]", 
                   RowBox[{
                    RowBox[{"\[Delta]", 
                    RowBox[{"(", 
                    RowBox[{"\[Alpha]", " ", "M"}], ")"}]}], "-", " ", 
                    RowBox[{
                    FractionBox["1", "2"], 
                    SuperscriptBox["\[Delta]", "2"], 
                    SuperscriptBox[
                    RowBox[{"(", 
                    RowBox[{"\[Alpha]", " ", "M"}], ")"}], "2"]}]}]}]}], 
                 "}"}], ",", "gr", ",", 
                RowBox[{"{", 
                 RowBox[{"r", ",", "\[Delta]", ",", "inf"}], "}"}]}], "]"}]}],
              ";", "\[IndentingNewLine]", 
             RowBox[{
              RowBox[{"gr0", "[", "r_", "]"}], "=", 
              SubscriptBox[
               RowBox[{"(", 
                RowBox[{
                 RowBox[{"gr", "[", "r", "]"}], "/.", "s01"}], ")"}], 
               RowBox[{
               "\[LeftDoubleBracket]", "1", "\[RightDoubleBracket]"}]]}], ";",
              "\[IndentingNewLine]", 
             RowBox[{"s1", "=", 
              RowBox[{"NDSolve", "[", 
               RowBox[{
                RowBox[{"{", 
                 RowBox[{
                  RowBox[{
                   RowBox[{
                    RowBox[{"rho", "'"}], "[", "x", "]"}], "\[Equal]", 
                   RowBox[{
                    RowBox[{"-", 
                    FractionBox[
                    RowBox[{" ", 
                    RowBox[{"6", " ", "Nc", " ", 
                    SuperscriptBox["M", "2"], " ", "\[Alpha]"}]}], 
                    RowBox[{"4", "\[Pi]"}]]}], 
                    RowBox[{"Im", "[", 
                    FractionBox["1", 
                    SuperscriptBox[
                    RowBox[{"(", 
                    RowBox[{"gr0", "[", "x", "]"}], ")"}], "2"]], 
                    RowBox[{"(*", 
                    RowBox[{"+", 
                    FractionBox["36", 
                    SuperscriptBox[
                    RowBox[{"(", 
                    RowBox[{"gr1", "[", "x", "]"}], ")"}], "2"]]}], "*)"}], 
                    "]"}]}]}], ",", 
                  RowBox[{
                   RowBox[{"rho", "[", "\[Delta]", "]"}], "\[Equal]", "0"}]}],
                  "}"}], ",", "rho", ",", 
                RowBox[{"{", 
                 RowBox[{"x", ",", "\[Delta]", ",", "inf"}], "}"}]}], "]"}]}],
              ";", "\[IndentingNewLine]", 
             RowBox[{
              RowBox[{"rhow", "[", "r_", "]"}], "=", 
              SubscriptBox[
               RowBox[{"(", 
                RowBox[{
                 RowBox[{"rho", "[", "r", "]"}], "/.", "s1"}], ")"}], 
               RowBox[{
               "\[LeftDoubleBracket]", "1", "\[RightDoubleBracket]"}]]}], ";",
              "\[IndentingNewLine]", 
             RowBox[{"ParallelSow", "[", 
              RowBox[{"{", 
               RowBox[{
                RowBox[{"\[Omega]", "+", 
                 RowBox[{"2", "M"}]}], ",", 
                RowBox[{"rhow", "[", "inf", "]"}]}], "}"}], "]"}]}], ",", 
            RowBox[{"{", 
             RowBox[{"it", ",", "1", ",", 
              FractionBox[
               RowBox[{"\[Omega]max", "-", "\[Omega]min"}], 
               RowBox[{"d\[Omega]", " ", "M"}]]}], "}"}]}], "]"}], "//", 
          "Reap"}], "//", "Last"}], "//", "First"}]}], ";", 
      "\[IndentingNewLine]", "\[IndentingNewLine]", 
      RowBox[{"ccss", "=", 
       RowBox[{"ParallelTable", "[", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{
           RowBox[{"\[Rho]table", "[", 
            RowBox[{"[", 
             RowBox[{"i", ",", "1"}], "]"}], "]"}], ",", 
           FractionBox[
            RowBox[{"-", 
             RowBox[{"\[Rho]table", "[", 
              RowBox[{"[", 
               RowBox[{"i", ",", "2"}], "]"}], "]"}]}], 
            SuperscriptBox[
             RowBox[{"\[Rho]table", "[", 
              RowBox[{"[", 
               RowBox[{"i", ",", "1"}], "]"}], "]"}], "2"]]}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"i", ",", "1", ",", 
           RowBox[{"Length", "[", "\[Rho]table", "]"}]}], "}"}]}], "]"}]}], 
      ";", "\[IndentingNewLine]", 
      RowBox[{"Export", "[", 
       RowBox[{
        RowBox[{"\"\<cc/perp/pT\>\"", "<>", 
         RowBox[{"ToString", "[", "pT", "]"}], "<>", "\"\</swccpT\>\"", "<>", 
         
         RowBox[{"ToString", "[", "pT", "]"}], "<>", "\"\<ang\>\"", "<>", 
         RowBox[{"ToString", "[", "ang", "]"}], "<>", 
         "\"\<spectraJpsi.dat\>\""}], ",", 
        RowBox[{"Sort", "[", "ccss", "]"}]}], "]"}], ";"}]}], 
    "\[IndentingNewLine]", "]"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.724397604460712*^9, 3.724397621092863*^9}, {
   3.724398705481254*^9, 3.724398705798315*^9}, {3.72440624506767*^9, 
   3.7244062457361317`*^9}, {3.7244423136168756`*^9, 3.724442340980721*^9}, {
   3.7244423712224417`*^9, 3.724442377050403*^9}, {3.724442465925974*^9, 
   3.724442518695669*^9}, {3.7244426255599117`*^9, 3.724442639076613*^9}, {
   3.724443729204352*^9, 3.724443729749022*^9}, {3.724443881656342*^9, 
   3.7244438842850027`*^9}, 3.725261621115453*^9, 3.72526166634648*^9, {
   3.725271550289123*^9, 3.7252715504130163`*^9}, {3.725271609402791*^9, 
   3.7252716095188437`*^9}, {3.7252717762497*^9, 3.725271782362536*^9}, {
   3.725271824500347*^9, 3.725271826035269*^9}, {3.725271857701564*^9, 
   3.725271858192912*^9}, {3.725271928114049*^9, 3.7252719496618757`*^9}, {
   3.725271981807578*^9, 3.725271987122878*^9}, {3.725273718896678*^9, 
   3.72527377251343*^9}, {3.725273963159111*^9, 3.725273966198284*^9}, {
   3.725364382855975*^9, 3.725364384697238*^9}, {3.725364432753635*^9, 
   3.725364433681274*^9}, {3.725364595553596*^9, 3.725364595868292*^9}, {
   3.725364661141473*^9, 3.725364661301785*^9}, {3.725365068510941*^9, 
   3.7253650691073112`*^9}, {3.7256202924505177`*^9, 
   3.7256202938854313`*^9}, {3.7256265502253428`*^9, 3.725626559021003*^9}, {
   3.725798091627001*^9, 3.725798108963685*^9}, {3.725798150844287*^9, 
   3.725798156038417*^9}, {3.726312422974263*^9, 3.726312439922279*^9}, {
   3.726313778060986*^9, 3.726313794010726*^9}, {3.726313854887352*^9, 
   3.726313855417986*^9}, {3.726377533478507*^9, 3.726377535012369*^9}, {
   3.726379310729051*^9, 3.726379315935656*^9}, {3.726379351066524*^9, 
   3.7263793563685627`*^9}, 3.7263814533362722`*^9, {3.726468979312665*^9, 
   3.726469044993416*^9}, {3.726564279540083*^9, 3.726564288774165*^9}, {
   3.726564330005303*^9, 3.726564342424973*^9}, {3.7265645007454853`*^9, 
   3.7265645054085903`*^9}, 3.726565145221386*^9, {3.726836923420138*^9, 
   3.726836925204391*^9}, {3.7268417497448387`*^9, 3.726841749854889*^9}, {
   3.727357927216405*^9, 3.7273579306359463`*^9}, 3.72735811608375*^9, {
   3.7273582875862513`*^9, 3.727358296888235*^9}, {3.727520051444908*^9, 
   3.7275200665503483`*^9}, {3.727539483513708*^9, 3.72753949210455*^9}, {
   3.7275398377710333`*^9, 3.727539869000495*^9}, {3.7275879806550293`*^9, 
   3.727587984698921*^9}, {3.727606150288821*^9, 3.727606150994812*^9}, {
   3.728932814314426*^9, 3.728932860160056*^9}, 3.7289333254815903`*^9, 
   3.7299208725344887`*^9, {3.730007040539275*^9, 3.7300070509717903`*^9}, {
   3.730007357183831*^9, 3.7300073662633142`*^9}, {3.7331192829046183`*^9, 
   3.733119300197537*^9}, {3.733120717385792*^9, 3.733120717697629*^9}, {
   3.7331222711038847`*^9, 3.733122272703622*^9}, {3.733211538849382*^9, 
   3.7332115515038567`*^9}, {3.7332289443370447`*^9, 
   3.7332289447842827`*^9}, {3.742215948846467*^9, 3.742215959437643*^9}, {
   3.742216025305929*^9, 3.742216093257207*^9}, {3.7422172078868933`*^9, 
   3.7422172275906973`*^9}, 3.74221727383118*^9, {3.742217585069265*^9, 
   3.742217591716959*^9}, {3.7422176229823923`*^9, 3.742217653035615*^9}, {
   3.742269341112874*^9, 3.742269371527761*^9}, 3.742275694936644*^9, {
   3.742289467062118*^9, 3.742289486771803*^9}, {3.742289520463562*^9, 
   3.7422896027136*^9}, {3.7422896364561243`*^9, 3.74228964347093*^9}, {
   3.742289678232355*^9, 3.742289708137301*^9}, {3.7422897506101*^9, 
   3.7422897587096577`*^9}, {3.7422920316457787`*^9, 3.742292034487727*^9}, 
   3.742292186682322*^9, {3.742292303240778*^9, 3.742292303483521*^9}, {
   3.742292362481593*^9, 3.742292372544711*^9}, {3.742292408813004*^9, 
   3.742292447857381*^9}, {3.7422968206130743`*^9, 3.742296843480155*^9}, {
   3.7422970160890417`*^9, 3.742297024417719*^9}, {3.742297074890059*^9, 
   3.74229711910509*^9}, {3.7422973083294992`*^9, 3.742297309298213*^9}, {
   3.742297354168077*^9, 3.742297359897736*^9}, {3.742297415918168*^9, 
   3.7422974232482452`*^9}, {3.742297467739311*^9, 3.742297612963316*^9}, {
   3.7422977860232887`*^9, 3.7422977903561068`*^9}, {3.74229798181938*^9, 
   3.742298023677857*^9}, {3.7422980561712513`*^9, 3.74229805925661*^9}, 
   3.742298106308654*^9, {3.742300221204397*^9, 3.742300269720365*^9}, {
   3.742300416216001*^9, 3.742300416917211*^9}, {3.742300536315893*^9, 
   3.742300546756034*^9}, {3.742300626604027*^9, 3.742300638323701*^9}, {
   3.7423006769018583`*^9, 3.7423007163572683`*^9}, {3.7435037431402884`*^9, 
   3.743503799356997*^9}, {3.7435038425347443`*^9, 3.743503908279688*^9}, {
   3.7435046316079397`*^9, 3.743504651390107*^9}, 3.745326235801956*^9, {
   3.745577559422867*^9, 3.745577586968154*^9}, {3.745580528080043*^9, 
   3.74558059234057*^9}, {3.745580690187639*^9, 3.745580708875317*^9}, {
   3.745642437900836*^9, 3.745642442612089*^9}, {3.745642493682754*^9, 
   3.7456425382868767`*^9}, {3.74627352599397*^9, 3.7462735295622587`*^9}, {
   3.7462736076039886`*^9, 3.7462736659082212`*^9}, {3.746273697621533*^9, 
   3.746273736166617*^9}, {3.7462741385800743`*^9, 3.746274142868767*^9}, {
   3.746274228830742*^9, 3.746274248310967*^9}, {3.7462743303367853`*^9, 
   3.7462743498486643`*^9}, {3.746274405954569*^9, 3.746274407722952*^9}, {
   3.74627803681008*^9, 3.746278037153131*^9}, {3.747887414650214*^9, 
   3.747887423938949*^9}, {3.7481674233164043`*^9, 3.7481674506752663`*^9}, {
   3.749554891486802*^9, 3.749554922961441*^9}, {3.749555089233777*^9, 
   3.749555119969118*^9}, {3.749563528737471*^9, 3.7495636549318132`*^9}, {
   3.749582048761517*^9, 3.749582052529887*^9}, 3.749646995985099*^9, 
   3.749655798300173*^9, 3.74970789643521*^9, {3.75414665053309*^9, 
   3.754146706624938*^9}, {3.757807031207905*^9, 3.757807040656314*^9}, {
   3.757807702967629*^9, 3.7578077038242903`*^9}, {3.7578078882965317`*^9, 
   3.757807902315524*^9}, {3.75780798833467*^9, 3.7578079890797157`*^9}, {
   3.757808051229706*^9, 3.757808087763713*^9}, {3.757810418692294*^9, 
   3.757810421517911*^9}, 3.757886527824544*^9, 3.758976485017486*^9}]
}, Closed]],

Cell[CellGroupData[{

Cell["Run", "Subsubsection",
 CellChangeTimes->{{3.7578081214207697`*^9, 3.757808141886427*^9}}],

Cell[BoxData[{
 RowBox[{
  RowBox[{"pT", "=", "10"}], ";"}], "\n", 
 RowBox[{"PotsIn", "[", "pT", "]"}], "\n", 
 RowBox[{"Do", "[", 
  RowBox[{
   RowBox[{"swaveccspectra", "[", "i", "]"}], ",", 
   RowBox[{"{", 
    RowBox[{"i", ",", "15", ",", "51"}], "}"}]}], "]"}]}], "Input",
 CellChangeTimes->{{3.7578081466759377`*^9, 3.757808148691277*^9}, {
  3.7578105174307537`*^9, 3.757810525123972*^9}, {3.757886597992675*^9, 
  3.7578866045682163`*^9}}],

Cell[BoxData[{
 RowBox[{
  RowBox[{"pT", "=", "15"}], ";"}], "\n", 
 RowBox[{"PotsIn", "[", "pT", "]"}], "\n", 
 RowBox[{"Do", "[", 
  RowBox[{
   RowBox[{"swaveccspectra", "[", "i", "]"}], ",", 
   RowBox[{"{", 
    RowBox[{"i", ",", "1", ",", "51"}], "}"}]}], "]"}]}], "Input",
 CellChangeTimes->{{3.7578081466759377`*^9, 3.757808148691277*^9}, {
  3.7578105174307537`*^9, 3.757810525123972*^9}, {3.7578105562680473`*^9, 
  3.757810561207963*^9}, {3.757886613095357*^9, 3.7578866221907787`*^9}}]
}, Open  ]]
}, Closed]]
}, Closed]],

Cell[CellGroupData[{

Cell["Fitting", "Section",
 CellChangeTimes->{{3.745472165420155*^9, 3.745472170532083*^9}, {
  3.749554829941771*^9, 3.749554831005995*^9}, {3.754164996727846*^9, 
  3.754165004375143*^9}}],

Cell[CellGroupData[{

Cell["Functions", "Subsection",
 CellChangeTimes->{{3.758213222941469*^9, 3.7582132236487617`*^9}, {
  3.7582132989687757`*^9, 3.7582133099013567`*^9}}],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"BW", "[", 
    RowBox[{
    "w_", ",", "wr_", ",", "\[CapitalGamma]_", ",", "\[Delta]bg_", ",", 
     "const_", ",", "shift_", ",", "shift2_"}], "]"}], ":=", 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"const", 
     RowBox[{"(", 
      FractionBox[
       SuperscriptBox[
        RowBox[{"(", 
         RowBox[{"\[CapitalGamma]", "/", "2"}], ")"}], "2"], 
       RowBox[{
        SuperscriptBox[
         RowBox[{"(", 
          RowBox[{"w", "-", "wr"}], ")"}], "2"], "+", 
        SuperscriptBox[
         RowBox[{"(", 
          RowBox[{"\[CapitalGamma]", "/", "2"}], ")"}], "2"]}]], ")"}]}], "+",
     " ", 
    RowBox[{"\[Delta]bg", 
     FractionBox[
      RowBox[{
       RowBox[{"(", 
        RowBox[{"\[CapitalGamma]", "/", "2"}], ")"}], 
       RowBox[{"(", 
        RowBox[{"w", "-", "wr"}], ")"}]}], 
      RowBox[{
       SuperscriptBox[
        RowBox[{"(", 
         RowBox[{"w", "-", "wr"}], ")"}], "2"], "+", 
       SuperscriptBox[
        RowBox[{"(", 
         RowBox[{"\[CapitalGamma]", "/", "2"}], ")"}], "2"]}]]}], "+", 
    RowBox[{"0", " ", 
     FractionBox[
      RowBox[{
       RowBox[{"(", 
        RowBox[{
         RowBox[{"4", " ", 
          SuperscriptBox[
           RowBox[{"(", 
            RowBox[{"w", "-", "wr"}], ")"}], "2"]}], "-", " ", 
         SuperscriptBox["\[CapitalGamma]", "2"]}], ")"}], " ", 
       SuperscriptBox["deltabg", "2"]}], 
      RowBox[{
       RowBox[{"4", " ", 
        SuperscriptBox[
         RowBox[{"(", 
          RowBox[{"w", "-", "wr"}], ")"}], "2"]}], "+", 
       SuperscriptBox["\[CapitalGamma]", "2"]}]]}], "+", 
    RowBox[{"shift", " ", 
     RowBox[{"(", 
      RowBox[{"w", "-", "wr"}], ")"}]}], "+", "shift2"}]}], " ", 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"BWi", "[", 
    RowBox[{"w_", ",", "wr_", ",", "\[CapitalGamma]_", ",", "const_"}], "]"}],
    ":=", 
   RowBox[{"const", 
    RowBox[{"(", 
     FractionBox[
      SuperscriptBox[
       RowBox[{"(", 
        RowBox[{"\[CapitalGamma]", "/", "2"}], ")"}], "2"], 
      RowBox[{
       SuperscriptBox[
        RowBox[{"(", 
         RowBox[{"w", "-", "wr"}], ")"}], "2"], "+", 
       SuperscriptBox[
        RowBox[{"(", 
         RowBox[{"\[CapitalGamma]", "/", "2"}], ")"}], "2"]}]], ")"}]}]}], 
  " ", ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"fit", "[", 
     RowBox[{"input_", ",", "output_", ",", "scan_"}], "]"}], ":=", 
    RowBox[{"Module", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
        RowBox[{"temp", "=", 
         RowBox[{"Range", "[", 
          RowBox[{"1", ",", "scan"}], "]"}]}], ",", "n", ",", "maxx", ",", 
        "minx", ",", "maxy", ",", "maxyx", ",", "maxyi", ",", "maxxy", ",", 
        "inter", ",", "maxxs", ",", "maxxis", ",", "maxys", ",", "mins", ",", 
        "hwhmi", ",", "gammas", ",", "inputc", ",", "bad"}], "}"}], ",", 
      "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"SetSharedVariable", "[", "temp", "]"}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{"ParallelDo", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"n", "=", 
           RowBox[{"temp", "[", 
            RowBox[{"[", "ii", "]"}], "]"}]}], ";", "\[IndentingNewLine]", 
          RowBox[{"maxx", "=", 
           RowBox[{"Max", "[", 
            RowBox[{
             RowBox[{"input", "[", "n", "]"}], "[", 
             RowBox[{"[", 
              RowBox[{"All", ",", "1"}], "]"}], "]"}], "]"}]}], ";", 
          "\[IndentingNewLine]", 
          RowBox[{"minx", "=", 
           RowBox[{"Min", "[", 
            RowBox[{
             RowBox[{"input", "[", "n", "]"}], "[", 
             RowBox[{"[", 
              RowBox[{"All", ",", "1"}], "]"}], "]"}], "]"}]}], ";", 
          "\[IndentingNewLine]", 
          RowBox[{"maxy", "=", 
           RowBox[{"Max", "[", 
            RowBox[{
             RowBox[{"input", "[", "n", "]"}], "[", 
             RowBox[{"[", 
              RowBox[{"All", ",", "2"}], "]"}], "]"}], "]"}]}], ";", 
          "\[IndentingNewLine]", 
          RowBox[{"maxyx", "=", 
           RowBox[{
            RowBox[{"input", "[", "n", "]"}], "[", 
            RowBox[{"[", 
             RowBox[{
              RowBox[{
               RowBox[{"Position", "[", 
                RowBox[{
                 RowBox[{"input", "[", "n", "]"}], ",", 
                 RowBox[{"Max", "[", 
                  RowBox[{
                   RowBox[{"input", "[", "n", "]"}], "[", 
                   RowBox[{"[", 
                    RowBox[{"All", ",", "2"}], "]"}], "]"}], "]"}]}], "]"}], 
               "[", 
               RowBox[{"[", 
                RowBox[{"1", ",", "1"}], "]"}], "]"}], ",", "1"}], "]"}], 
            "]"}]}], ";", "\[IndentingNewLine]", 
          RowBox[{"maxyi", "=", 
           RowBox[{
            RowBox[{"Position", "[", 
             RowBox[{
              RowBox[{
               RowBox[{"input", "[", "n", "]"}], "[", 
               RowBox[{"[", 
                RowBox[{"All", ",", "1"}], "]"}], "]"}], ",", "maxyx"}], 
             "]"}], "[", 
            RowBox[{"[", 
             RowBox[{"1", ",", "1"}], "]"}], "]"}]}], ";", 
          "\[IndentingNewLine]", 
          RowBox[{"maxxy", "=", 
           RowBox[{
            RowBox[{"input", "[", "n", "]"}], "[", 
            RowBox[{"[", 
             RowBox[{
              RowBox[{
               RowBox[{"Position", "[", 
                RowBox[{
                 RowBox[{"input", "[", "n", "]"}], ",", 
                 RowBox[{"Max", "[", 
                  RowBox[{
                   RowBox[{"input", "[", "n", "]"}], "[", 
                   RowBox[{"[", 
                    RowBox[{"All", ",", "1"}], "]"}], "]"}], "]"}]}], "]"}], 
               "[", 
               RowBox[{"[", 
                RowBox[{"1", ",", "1"}], "]"}], "]"}], ",", "2"}], "]"}], 
            "]"}]}], ";", "\[IndentingNewLine]", 
          RowBox[{"inter", "=", 
           RowBox[{"Interpolation", "[", 
            RowBox[{
             RowBox[{"input", "[", "n", "]"}], ",", 
             RowBox[{"InterpolationOrder", "\[Rule]", "1"}]}], "]"}]}], ";", 
          "\[IndentingNewLine]", 
          RowBox[{"maxxs", "=", 
           RowBox[{"Sort", "[", 
            RowBox[{"Quiet", "[", 
             RowBox[{
              RowBox[{"DeleteDuplicatesBy", "[", 
               RowBox[{
                RowBox[{"Table", "[", 
                 RowBox[{
                  RowBox[{"{", 
                   RowBox[{
                    RowBox[{"Round", "[", 
                    RowBox[{
                    RowBox[{"FindMaxValue", "[", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"inter", "[", "x", "]"}], ",", 
                    RowBox[{
                    "maxyx", "\[LessEqual]", "x", "\[LessEqual]", "maxx"}]}], 
                    "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"x", ",", "a"}], "}"}]}], "]"}], ",", "maxxy"}], 
                    "]"}], ",", 
                    RowBox[{
                    RowBox[{"FindArgMax", "[", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"inter", "[", "x", "]"}], ",", 
                    RowBox[{
                    "maxyx", "\[LessEqual]", "x", "\[LessEqual]", "maxx"}]}], 
                    "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"x", ",", "a"}], "}"}]}], "]"}], "[", 
                    RowBox[{"[", "1", "]"}], "]"}]}], "}"}], ",", 
                  RowBox[{"{", 
                   RowBox[{"a", ",", "maxyx", ",", "maxx", ",", 
                    FractionBox[
                    RowBox[{"maxx", "-", "maxyx"}], "50"]}], "}"}]}], "]"}], 
                ",", "First"}], "]"}], "[", 
              RowBox[{"[", 
               RowBox[{"All", ",", "2"}], "]"}], "]"}], "]"}], "]"}]}], ";", 
          RowBox[{"bad", "=", 
           RowBox[{"{", "}"}]}], ";", "\[IndentingNewLine]", 
          RowBox[{"If", "[", 
           RowBox[{
            RowBox[{
             RowBox[{"Length", "[", "maxxs", "]"}], ">", "1"}], ",", 
            RowBox[{"Do", "[", 
             RowBox[{
              RowBox[{"If", "[", 
               RowBox[{
                RowBox[{
                 RowBox[{
                  RowBox[{"maxxs", "[", 
                   RowBox[{"[", 
                    RowBox[{"i", "+", "1"}], "]"}], "]"}], "/", 
                  RowBox[{"maxxs", "[", 
                   RowBox[{"[", "i", "]"}], "]"}]}], "\[LessEqual]", 
                 "1.001"}], ",", 
                RowBox[{"bad", "=", 
                 RowBox[{"Append", "[", 
                  RowBox[{"bad", ",", 
                   RowBox[{"{", "i", "}"}]}], "]"}]}]}], "]"}], ",", 
              RowBox[{"{", 
               RowBox[{"i", ",", 
                RowBox[{
                 RowBox[{"Length", "[", "maxxs", "]"}], "-", "1"}]}], "}"}]}],
              "]"}]}], "]"}], ";", "\[IndentingNewLine]", 
          RowBox[{"maxxs", "=", 
           RowBox[{"Delete", "[", 
            RowBox[{"maxxs", ",", "bad"}], "]"}]}], ";", 
          RowBox[{"maxxis", "=", 
           RowBox[{"Sort", "[", 
            RowBox[{"Table", "[", 
             RowBox[{
              RowBox[{
               RowBox[{"Position", "[", 
                RowBox[{
                 RowBox[{
                  RowBox[{"input", "[", "n", "]"}], "[", 
                  RowBox[{"[", 
                   RowBox[{"All", ",", "1"}], "]"}], "]"}], ",", 
                 RowBox[{
                  RowBox[{"Nearest", "[", 
                   RowBox[{
                    RowBox[{
                    RowBox[{"input", "[", "n", "]"}], "[", 
                    RowBox[{"[", 
                    RowBox[{"All", ",", "1"}], "]"}], "]"}], ",", 
                    RowBox[{"maxxs", "[", 
                    RowBox[{"[", "i", "]"}], "]"}]}], "]"}], "[", 
                  RowBox[{"[", "1", "]"}], "]"}]}], "]"}], "[", 
               RowBox[{"[", 
                RowBox[{"1", ",", "1"}], "]"}], "]"}], ",", 
              RowBox[{"{", 
               RowBox[{"i", ",", 
                RowBox[{"Length", "[", "maxxs", "]"}]}], "}"}]}], "]"}], 
            "]"}]}], ";", "\[IndentingNewLine]", 
          RowBox[{"bad", "=", 
           RowBox[{"{", "}"}]}], ";", "\[IndentingNewLine]", 
          RowBox[{"Do", "[", 
           RowBox[{
            RowBox[{"If", "[", 
             RowBox[{
              RowBox[{"Or", "[", 
               RowBox[{
                RowBox[{
                 RowBox[{
                  RowBox[{"input", "[", "n", "]"}], "[", 
                  RowBox[{"[", 
                   RowBox[{
                    RowBox[{
                    RowBox[{"maxxis", "[", 
                    RowBox[{"[", "i", "]"}], "]"}], "-", "30"}], ",", "2"}], 
                   "]"}], "]"}], ">", 
                 RowBox[{
                  RowBox[{"input", "[", "n", "]"}], "[", 
                  RowBox[{"[", 
                   RowBox[{
                    RowBox[{"maxxis", "[", 
                    RowBox[{"[", "i", "]"}], "]"}], ",", "2"}], "]"}], 
                  "]"}]}], ",", 
                RowBox[{
                 RowBox[{
                  RowBox[{"input", "[", "n", "]"}], "[", 
                  RowBox[{"[", 
                   RowBox[{
                    RowBox[{
                    RowBox[{"maxxis", "[", 
                    RowBox[{"[", "i", "]"}], "]"}], "+", "30"}], ",", "2"}], 
                   "]"}], "]"}], ">", 
                 RowBox[{
                  RowBox[{"input", "[", "n", "]"}], "[", 
                  RowBox[{"[", 
                   RowBox[{
                    RowBox[{"maxxis", "[", 
                    RowBox[{"[", "i", "]"}], "]"}], ",", "2"}], "]"}], 
                  "]"}]}]}], "]"}], ",", 
              RowBox[{"bad", "=", 
               RowBox[{"Append", "[", 
                RowBox[{"bad", ",", 
                 RowBox[{"{", "i", "}"}]}], "]"}]}]}], "]"}], ",", 
            RowBox[{"{", 
             RowBox[{"i", ",", 
              RowBox[{"Length", "[", "maxxis", "]"}]}], "}"}]}], "]"}], ";", 
          RowBox[{"maxxs", "=", 
           RowBox[{"Delete", "[", 
            RowBox[{"maxxs", ",", "bad"}], "]"}]}], ";", 
          RowBox[{"maxxis", "=", 
           RowBox[{"Delete", "[", 
            RowBox[{"maxxis", ",", "bad"}], "]"}]}], ";", 
          "\[IndentingNewLine]", 
          RowBox[{"maxys", "=", 
           RowBox[{"Table", "[", 
            RowBox[{
             RowBox[{
              RowBox[{"input", "[", "n", "]"}], "[", 
              RowBox[{"[", 
               RowBox[{
                RowBox[{"maxxis", "[", 
                 RowBox[{"[", "i", "]"}], "]"}], ",", "2"}], "]"}], "]"}], 
             ",", 
             RowBox[{"{", 
              RowBox[{"i", ",", 
               RowBox[{"Length", "[", "maxxs", "]"}]}], "}"}]}], "]"}]}], ";",
           "\[IndentingNewLine]", 
          RowBox[{"If", "[", 
           RowBox[{
            RowBox[{
             RowBox[{"Length", "[", "maxxs", "]"}], ">", "1"}], ",", 
            "\[IndentingNewLine]", 
            RowBox[{
             RowBox[{"mins", "=", 
              RowBox[{"Range", "[", 
               RowBox[{
                RowBox[{"Length", "[", "maxxs", "]"}], "-", "1"}], "]"}]}], 
             ";", "\[IndentingNewLine]", 
             RowBox[{"Do", "[", 
              RowBox[{
               RowBox[{
                RowBox[{"mins", "[", 
                 RowBox[{"[", "i", "]"}], "]"}], "=", 
                RowBox[{
                 RowBox[{"Position", "[", 
                  RowBox[{
                   RowBox[{
                    RowBox[{"input", "[", "n", "]"}], "[", 
                    RowBox[{"[", 
                    RowBox[{"All", ",", "2"}], "]"}], "]"}], ",", 
                   RowBox[{"Min", "[", 
                    RowBox[{
                    RowBox[{"input", "[", "n", "]"}], "[", 
                    RowBox[{"[", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"maxxis", "[", 
                    RowBox[{"[", "i", "]"}], "]"}], ";;", 
                    RowBox[{"maxxis", "[", 
                    RowBox[{"[", 
                    RowBox[{"i", "+", "1"}], "]"}], "]"}]}], ",", "2"}], 
                    "]"}], "]"}], "]"}]}], "]"}], "[", 
                 RowBox[{"[", 
                  RowBox[{"1", ",", "1"}], "]"}], "]"}]}], ",", 
               RowBox[{"{", 
                RowBox[{"i", ",", 
                 RowBox[{
                  RowBox[{"Length", "[", "maxxs", "]"}], "-", "1"}]}], 
                "}"}]}], "]"}], ";", 
             RowBox[{"mins", "=", 
              RowBox[{"Append", "[", 
               RowBox[{
                RowBox[{"Prepend", "[", 
                 RowBox[{"mins", ",", 
                  RowBox[{
                   RowBox[{"maxxis", "[", 
                    RowBox[{"[", "1", "]"}], "]"}], "-", 
                   RowBox[{"(", 
                    RowBox[{
                    RowBox[{"mins", "[", 
                    RowBox[{"[", "1", "]"}], "]"}], "-", 
                    RowBox[{"maxxis", "[", 
                    RowBox[{"[", "1", "]"}], "]"}]}], ")"}]}]}], "]"}], ",", 
                RowBox[{"If", "[", 
                 RowBox[{
                  RowBox[{
                   RowBox[{
                    RowBox[{"maxxis", "[", 
                    RowBox[{"[", 
                    RowBox[{"-", "1"}], "]"}], "]"}], "+", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"maxxis", "[", 
                    RowBox[{"[", 
                    RowBox[{"-", "1"}], "]"}], "]"}], "-", 
                    RowBox[{"mins", "[", 
                    RowBox[{"[", 
                    RowBox[{"-", "1"}], "]"}], "]"}]}], ")"}]}], 
                   "\[LessEqual]", " ", 
                   RowBox[{"Length", "[", 
                    RowBox[{"input", "[", "n", "]"}], "]"}]}], ",", 
                  RowBox[{
                   RowBox[{"maxxis", "[", 
                    RowBox[{"[", 
                    RowBox[{"-", "1"}], "]"}], "]"}], "+", 
                   RowBox[{"(", 
                    RowBox[{
                    RowBox[{"maxxis", "[", 
                    RowBox[{"[", 
                    RowBox[{"-", "1"}], "]"}], "]"}], "-", 
                    RowBox[{"mins", "[", 
                    RowBox[{"[", 
                    RowBox[{"-", "1"}], "]"}], "]"}]}], ")"}]}], ",", 
                  RowBox[{"Length", "[", 
                   RowBox[{"input", "[", "n", "]"}], "]"}]}], "]"}]}], 
               "]"}]}], ";"}], ",", "\[IndentingNewLine]", 
            RowBox[{
             RowBox[{"hwhmi", "=", 
              RowBox[{
               RowBox[{"Position", "[", 
                RowBox[{
                 RowBox[{"input", "[", "n", "]"}], ",", 
                 RowBox[{
                  RowBox[{"Nearest", "[", 
                   RowBox[{
                    RowBox[{
                    RowBox[{"input", "[", "n", "]"}], "[", 
                    RowBox[{"[", 
                    RowBox[{
                    RowBox[{";;", "maxyi"}], ",", "2"}], "]"}], "]"}], ",", 
                    RowBox[{"maxy", "/", "2"}]}], "]"}], "[", 
                  RowBox[{"[", "1", "]"}], "]"}]}], "]"}], "[", 
               RowBox[{"[", 
                RowBox[{"1", ",", "1"}], "]"}], "]"}]}], ";", 
             "\[IndentingNewLine]", 
             RowBox[{"mins", "=", 
              RowBox[{"{", 
               RowBox[{
                RowBox[{"maxyi", "-", 
                 RowBox[{"3", 
                  RowBox[{"(", 
                   RowBox[{"maxyi", "-", "hwhmi"}], ")"}]}]}], ",", 
                RowBox[{"If", "[", 
                 RowBox[{
                  RowBox[{
                   RowBox[{"maxyi", "+", 
                    RowBox[{"3", 
                    RowBox[{"(", 
                    RowBox[{"maxyi", "-", "hwhmi"}], ")"}]}]}], 
                   "\[LessEqual]", 
                   RowBox[{"Length", "[", 
                    RowBox[{"input", "[", "n", "]"}], "]"}]}], ",", 
                  RowBox[{"maxyi", "+", 
                   RowBox[{"3", 
                    RowBox[{"(", 
                    RowBox[{"maxyi", "-", "hwhmi"}], ")"}]}]}], ",", 
                  RowBox[{"Length", "[", 
                   RowBox[{"input", "[", "n", "]"}], "]"}]}], "]"}]}], 
               "}"}]}], ";"}]}], "]"}], ";", "\[IndentingNewLine]", 
          RowBox[{"If", "[", 
           RowBox[{
            RowBox[{
             RowBox[{"mins", "[", 
              RowBox[{"[", "1", "]"}], "]"}], "\[LessEqual]", "0"}], ",", 
            RowBox[{
             RowBox[{"mins", "[", 
              RowBox[{"[", "1", "]"}], "]"}], "=", "1"}]}], "]"}], ";", "\n", 
          
          RowBox[{"hwhmi", "=", 
           RowBox[{"Range", "[", 
            RowBox[{"Length", "[", "maxxs", "]"}], "]"}]}], ";", "\n", 
          RowBox[{"Do", "[", 
           RowBox[{
            RowBox[{
             RowBox[{"hwhmi", "[", 
              RowBox[{"[", "i", "]"}], "]"}], "=", 
             RowBox[{
              RowBox[{"Position", "[", 
               RowBox[{
                RowBox[{"input", "[", "n", "]"}], ",", 
                RowBox[{
                 RowBox[{"Nearest", "[", 
                  RowBox[{
                   RowBox[{
                    RowBox[{"input", "[", "n", "]"}], "[", 
                    RowBox[{"[", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"mins", "[", 
                    RowBox[{"[", "i", "]"}], "]"}], ";;", 
                    RowBox[{"maxxis", "[", 
                    RowBox[{"[", "i", "]"}], "]"}]}], ",", "2"}], "]"}], 
                    "]"}], ",", 
                   RowBox[{
                    RowBox[{"inter", "[", 
                    RowBox[{"maxxs", "[", 
                    RowBox[{"[", "i", "]"}], "]"}], "]"}], "/", "2"}]}], 
                  "]"}], "[", 
                 RowBox[{"[", "1", "]"}], "]"}]}], "]"}], "[", 
              RowBox[{"[", 
               RowBox[{"1", ",", "1"}], "]"}], "]"}]}], ",", 
            RowBox[{"{", 
             RowBox[{"i", ",", 
              RowBox[{"Length", "[", "maxxs", "]"}]}], "}"}]}], "]"}], ";", 
          "\[IndentingNewLine]", 
          RowBox[{"gammas", "=", 
           RowBox[{"Range", "[", 
            RowBox[{"Length", "[", "hwhmi", "]"}], "]"}]}], ";", 
          "\[IndentingNewLine]", 
          RowBox[{"Do", "[", 
           RowBox[{
            RowBox[{
             RowBox[{"gammas", "[", 
              RowBox[{"[", "i", "]"}], "]"}], "=", 
             RowBox[{"2", 
              RowBox[{"(", 
               RowBox[{
                RowBox[{"maxxs", "[", 
                 RowBox[{"[", "i", "]"}], "]"}], "-", 
                RowBox[{
                 RowBox[{"input", "[", "n", "]"}], "[", 
                 RowBox[{"[", 
                  RowBox[{
                   RowBox[{"hwhmi", "[", 
                    RowBox[{"[", "i", "]"}], "]"}], ",", "1"}], "]"}], 
                 "]"}]}], ")"}]}]}], ",", 
            RowBox[{"{", 
             RowBox[{"i", ",", 
              RowBox[{"Length", "[", "hwhmi", "]"}]}], "}"}]}], "]"}], ";", 
          "\[IndentingNewLine]", 
          RowBox[{"inputc", "=", 
           RowBox[{"Range", "[", 
            RowBox[{"Length", "[", "maxxs", "]"}], "]"}]}], ";", 
          "\[IndentingNewLine]", 
          RowBox[{"Do", "[", 
           RowBox[{
            RowBox[{
             RowBox[{"inputc", "[", 
              RowBox[{"[", "i", "]"}], "]"}], "=", 
             RowBox[{
              RowBox[{"input", "[", "n", "]"}], "[", 
              RowBox[{"[", 
               RowBox[{
                RowBox[{"If", "[", 
                 RowBox[{
                  RowBox[{"i", "\[GreaterEqual]", "2"}], ",", 
                  RowBox[{"If", "[", 
                   RowBox[{
                    RowBox[{
                    RowBox[{
                    RowBox[{"maxxis", "[", 
                    RowBox[{"[", "i", "]"}], "]"}], "-", 
                    RowBox[{"3", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"maxxis", "[", 
                    RowBox[{"[", "i", "]"}], "]"}], "-", 
                    RowBox[{"hwhmi", "[", 
                    RowBox[{"[", "i", "]"}], "]"}]}], ")"}]}]}], "<", 
                    RowBox[{"mins", "[", 
                    RowBox[{"[", "i", "]"}], "]"}]}], ",", 
                    RowBox[{"mins", "[", 
                    RowBox[{"[", "i", "]"}], "]"}], ",", 
                    RowBox[{
                    RowBox[{"maxxis", "[", 
                    RowBox[{"[", "i", "]"}], "]"}], "-", 
                    RowBox[{"3", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"maxxis", "[", 
                    RowBox[{"[", "i", "]"}], "]"}], "-", 
                    RowBox[{"hwhmi", "[", 
                    RowBox[{"[", "i", "]"}], "]"}]}], ")"}]}]}]}], "]"}], ",", 
                  RowBox[{"If", "[", 
                   RowBox[{
                    RowBox[{
                    RowBox[{
                    RowBox[{"maxxis", "[", 
                    RowBox[{"[", "i", "]"}], "]"}], "-", 
                    RowBox[{"3", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"maxxis", "[", 
                    RowBox[{"[", "i", "]"}], "]"}], "-", 
                    RowBox[{"hwhmi", "[", 
                    RowBox[{"[", "i", "]"}], "]"}]}], ")"}]}]}], ">", "0"}], 
                    ",", 
                    RowBox[{
                    RowBox[{"maxxis", "[", 
                    RowBox[{"[", "i", "]"}], "]"}], "-", 
                    RowBox[{"3", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"maxxis", "[", 
                    RowBox[{"[", "i", "]"}], "]"}], "-", 
                    RowBox[{"hwhmi", "[", 
                    RowBox[{"[", "i", "]"}], "]"}]}], ")"}]}]}], ",", "1"}], 
                   "]"}]}], "]"}], ";;", 
                RowBox[{"If", "[", 
                 RowBox[{
                  RowBox[{
                   RowBox[{
                    RowBox[{"maxxis", "[", 
                    RowBox[{"[", "i", "]"}], "]"}], "+", 
                    RowBox[{"3", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"maxxis", "[", 
                    RowBox[{"[", "i", "]"}], "]"}], "-", 
                    RowBox[{"hwhmi", "[", 
                    RowBox[{"[", "i", "]"}], "]"}]}], ")"}]}]}], "<", 
                   RowBox[{"mins", "[", 
                    RowBox[{"[", 
                    RowBox[{"i", "+", "1"}], "]"}], "]"}]}], ",", 
                  RowBox[{
                   RowBox[{"maxxis", "[", 
                    RowBox[{"[", "i", "]"}], "]"}], "+", 
                   RowBox[{"3", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"maxxis", "[", 
                    RowBox[{"[", "i", "]"}], "]"}], "-", 
                    RowBox[{"hwhmi", "[", 
                    RowBox[{"[", "i", "]"}], "]"}]}], ")"}]}]}], ",", 
                  RowBox[{"mins", "[", 
                   RowBox[{"[", 
                    RowBox[{"i", "+", "1"}], "]"}], "]"}]}], "]"}]}], "]"}], 
              "]"}]}], ",", 
            RowBox[{"{", 
             RowBox[{"i", ",", 
              RowBox[{"Length", "[", "maxxs", "]"}]}], "}"}]}], "]"}], ";", 
          "\[IndentingNewLine]", 
          RowBox[{
           RowBox[{"temp", "[", 
            RowBox[{"[", "ii", "]"}], "]"}], "=", 
           RowBox[{"Range", "[", 
            RowBox[{"Length", "[", "hwhmi", "]"}], "]"}]}], ";", 
          "\[IndentingNewLine]", 
          RowBox[{"Do", "[", 
           RowBox[{
            RowBox[{
             RowBox[{"temp", "[", 
              RowBox[{"[", 
               RowBox[{"ii", ",", "i"}], "]"}], "]"}], "=", 
             RowBox[{"NonlinearModelFit", "[", 
              RowBox[{
               RowBox[{"inputc", "[", 
                RowBox[{"[", "i", "]"}], "]"}], ",", 
               RowBox[{"{", 
                RowBox[{
                 RowBox[{"BW", "[", 
                  RowBox[{
                  "w", ",", "wr", ",", "\[CapitalGamma]", ",", "\[Delta]bg", 
                   ",", "const", ",", "shift", ",", "shift2"}], "]"}], ",", 
                 RowBox[{"const", ">", "0"}], ",", 
                 RowBox[{"\[CapitalGamma]", ">", "0"}]}], "}"}], ",", 
               RowBox[{"{", 
                RowBox[{
                 RowBox[{"{", 
                  RowBox[{"wr", ",", 
                   RowBox[{"maxxs", "[", 
                    RowBox[{"[", "i", "]"}], "]"}]}], "}"}], ",", 
                 RowBox[{"{", 
                  RowBox[{"\[CapitalGamma]", ",", 
                   RowBox[{"gammas", "[", 
                    RowBox[{"[", "i", "]"}], "]"}]}], "}"}], ",", 
                 RowBox[{"{", 
                  RowBox[{"const", ",", 
                   RowBox[{"maxys", "[", 
                    RowBox[{"[", "i", "]"}], "]"}]}], "}"}], ",", 
                 RowBox[{"{", 
                  RowBox[{"\[Delta]bg", ",", "0.0"}], "}"}], ",", 
                 RowBox[{"{", 
                  RowBox[{"shift", ",", "0.0"}], "}"}], ",", 
                 RowBox[{"{", 
                  RowBox[{"shift2", ",", "0.0"}], "}"}]}], "}"}], ",", "w", 
               ",", 
               RowBox[{"MaxIterations", "\[Rule]", "1000"}]}], "]"}]}], ",", 
            RowBox[{"{", 
             RowBox[{"i", ",", 
              RowBox[{"Length", "[", "hwhmi", "]"}]}], "}"}]}], "]"}], ";"}], 
         ",", 
         RowBox[{"{", 
          RowBox[{"ii", ",", "scan"}], "}"}]}], "]"}], ";", 
       RowBox[{"output", "=", "temp"}], ";"}]}], "]"}]}], ";"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"fitONE", "[", 
    RowBox[{"input_", ",", "output_"}], "]"}], ":=", 
   RowBox[{"Module", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
      "temp", ",", "maxx", ",", "minx", ",", "maxy", ",", "maxyx", ",", 
       "maxyi", ",", "maxxy", ",", "inter", ",", "maxxs", ",", "maxxis", ",", 
       "maxys", ",", "mins", ",", "hwhmi", ",", "gammas", ",", "inputc", ",", 
       "bad"}], "}"}], ",", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"maxx", "=", 
       RowBox[{"Max", "[", 
        RowBox[{"input", "[", 
         RowBox[{"[", 
          RowBox[{"All", ",", "1"}], "]"}], "]"}], "]"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"minx", "=", 
       RowBox[{"Min", "[", 
        RowBox[{"input", "[", 
         RowBox[{"[", 
          RowBox[{"All", ",", "1"}], "]"}], "]"}], "]"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"maxy", "=", 
       RowBox[{"Max", "[", 
        RowBox[{"input", "[", 
         RowBox[{"[", 
          RowBox[{"All", ",", "2"}], "]"}], "]"}], "]"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"maxyx", "=", 
       RowBox[{"input", "[", 
        RowBox[{"[", 
         RowBox[{
          RowBox[{
           RowBox[{"Position", "[", 
            RowBox[{"input", ",", 
             RowBox[{"Max", "[", 
              RowBox[{"input", "[", 
               RowBox[{"[", 
                RowBox[{"All", ",", "2"}], "]"}], "]"}], "]"}]}], "]"}], "[", 
           
           RowBox[{"[", 
            RowBox[{"1", ",", "1"}], "]"}], "]"}], ",", "1"}], "]"}], "]"}]}],
       ";", "\[IndentingNewLine]", 
      RowBox[{"maxyi", "=", 
       RowBox[{
        RowBox[{"Position", "[", 
         RowBox[{
          RowBox[{"input", "[", 
           RowBox[{"[", 
            RowBox[{"All", ",", "1"}], "]"}], "]"}], ",", "maxyx"}], "]"}], 
        "[", 
        RowBox[{"[", 
         RowBox[{"1", ",", "1"}], "]"}], "]"}]}], ";", "\[IndentingNewLine]", 
      
      RowBox[{"maxxy", "=", 
       RowBox[{"input", "[", 
        RowBox[{"[", 
         RowBox[{
          RowBox[{
           RowBox[{"Position", "[", 
            RowBox[{"input", ",", 
             RowBox[{"Max", "[", 
              RowBox[{"input", "[", 
               RowBox[{"[", 
                RowBox[{"All", ",", "1"}], "]"}], "]"}], "]"}]}], "]"}], "[", 
           
           RowBox[{"[", 
            RowBox[{"1", ",", "1"}], "]"}], "]"}], ",", "2"}], "]"}], "]"}]}],
       ";", "\[IndentingNewLine]", 
      RowBox[{"inter", "=", 
       RowBox[{"Interpolation", "[", 
        RowBox[{"input", ",", 
         RowBox[{"InterpolationOrder", "\[Rule]", "1"}]}], "]"}]}], ";", 
      RowBox[{"maxxs", "=", 
       RowBox[{"Sort", "[", 
        RowBox[{"Quiet", "[", 
         RowBox[{
          RowBox[{"DeleteDuplicatesBy", "[", 
           RowBox[{
            RowBox[{"Table", "[", 
             RowBox[{
              RowBox[{"{", 
               RowBox[{
                RowBox[{"Round", "[", 
                 RowBox[{
                  RowBox[{"FindMaxValue", "[", 
                   RowBox[{
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"inter", "[", "x", "]"}], ",", 
                    RowBox[{
                    "maxyx", "\[LessEqual]", "x", "\[LessEqual]", "maxx"}]}], 
                    "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"x", ",", "a"}], "}"}]}], "]"}], ",", "maxxy"}], 
                 "]"}], ",", 
                RowBox[{
                 RowBox[{"FindArgMax", "[", 
                  RowBox[{
                   RowBox[{"{", 
                    RowBox[{
                    RowBox[{"inter", "[", "x", "]"}], ",", 
                    RowBox[{
                    "maxyx", "\[LessEqual]", "x", "\[LessEqual]", "maxx"}]}], 
                    "}"}], ",", 
                   RowBox[{"{", 
                    RowBox[{"x", ",", "a"}], "}"}]}], "]"}], "[", 
                 RowBox[{"[", "1", "]"}], "]"}]}], "}"}], ",", 
              RowBox[{"{", 
               RowBox[{"a", ",", "maxyx", ",", "maxx", ",", 
                FractionBox[
                 RowBox[{"maxx", "-", "maxyx"}], "50"]}], "}"}]}], "]"}], ",",
             "First"}], "]"}], "[", 
          RowBox[{"[", 
           RowBox[{"All", ",", "2"}], "]"}], "]"}], "]"}], "]"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"bad", "=", 
       RowBox[{"{", "}"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"If", "[", 
       RowBox[{
        RowBox[{
         RowBox[{"Length", "[", "maxxs", "]"}], ">", "1"}], ",", 
        RowBox[{"Do", "[", 
         RowBox[{
          RowBox[{"If", "[", 
           RowBox[{
            RowBox[{
             RowBox[{
              RowBox[{"maxxs", "[", 
               RowBox[{"[", 
                RowBox[{"i", "+", "1"}], "]"}], "]"}], "/", 
              RowBox[{"maxxs", "[", 
               RowBox[{"[", "i", "]"}], "]"}]}], "\[LessEqual]", "1.001"}], 
            ",", 
            RowBox[{"bad", "=", 
             RowBox[{"Append", "[", 
              RowBox[{"bad", ",", 
               RowBox[{"{", "i", "}"}]}], "]"}]}]}], "]"}], ",", 
          RowBox[{"{", 
           RowBox[{"i", ",", 
            RowBox[{
             RowBox[{"Length", "[", "maxxs", "]"}], "-", "1"}]}], "}"}]}], 
         "]"}]}], "]"}], ";", "\[IndentingNewLine]", 
      RowBox[{"maxxs", "=", 
       RowBox[{"Delete", "[", 
        RowBox[{"maxxs", ",", "bad"}], "]"}]}], ";", 
      RowBox[{"maxxis", "=", 
       RowBox[{"Sort", "[", 
        RowBox[{"Table", "[", 
         RowBox[{
          RowBox[{
           RowBox[{"Position", "[", 
            RowBox[{
             RowBox[{"input", "[", 
              RowBox[{"[", 
               RowBox[{"All", ",", "1"}], "]"}], "]"}], ",", 
             RowBox[{
              RowBox[{"Nearest", "[", 
               RowBox[{
                RowBox[{"input", "[", 
                 RowBox[{"[", 
                  RowBox[{"All", ",", "1"}], "]"}], "]"}], ",", 
                RowBox[{"maxxs", "[", 
                 RowBox[{"[", "i", "]"}], "]"}]}], "]"}], "[", 
              RowBox[{"[", "1", "]"}], "]"}]}], "]"}], "[", 
           RowBox[{"[", 
            RowBox[{"1", ",", "1"}], "]"}], "]"}], ",", 
          RowBox[{"{", 
           RowBox[{"i", ",", 
            RowBox[{"Length", "[", "maxxs", "]"}]}], "}"}]}], "]"}], "]"}]}], 
      ";", "\[IndentingNewLine]", 
      RowBox[{"bad", "=", 
       RowBox[{"{", "}"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"Do", "[", 
       RowBox[{
        RowBox[{"If", "[", 
         RowBox[{
          RowBox[{"Or", "[", 
           RowBox[{
            RowBox[{
             RowBox[{"input", "[", 
              RowBox[{"[", 
               RowBox[{
                RowBox[{
                 RowBox[{"maxxis", "[", 
                  RowBox[{"[", "i", "]"}], "]"}], "-", "30"}], ",", "2"}], 
               "]"}], "]"}], ">", 
             RowBox[{"input", "[", 
              RowBox[{"[", 
               RowBox[{
                RowBox[{"maxxis", "[", 
                 RowBox[{"[", "i", "]"}], "]"}], ",", "2"}], "]"}], "]"}]}], 
            ",", 
            RowBox[{
             RowBox[{"input", "[", 
              RowBox[{"[", 
               RowBox[{
                RowBox[{
                 RowBox[{"maxxis", "[", 
                  RowBox[{"[", "i", "]"}], "]"}], "+", "30"}], ",", "2"}], 
               "]"}], "]"}], ">", 
             RowBox[{"input", "[", 
              RowBox[{"[", 
               RowBox[{
                RowBox[{"maxxis", "[", 
                 RowBox[{"[", "i", "]"}], "]"}], ",", "2"}], "]"}], "]"}]}]}],
            "]"}], ",", 
          RowBox[{"bad", "=", 
           RowBox[{"Append", "[", 
            RowBox[{"bad", ",", 
             RowBox[{"{", "i", "}"}]}], "]"}]}]}], "]"}], ",", 
        RowBox[{"{", 
         RowBox[{"i", ",", 
          RowBox[{"Length", "[", "maxxis", "]"}]}], "}"}]}], "]"}], ";", 
      RowBox[{"maxxs", "=", 
       RowBox[{"Delete", "[", 
        RowBox[{"maxxs", ",", "bad"}], "]"}]}], ";", 
      RowBox[{"maxxis", "=", 
       RowBox[{"Delete", "[", 
        RowBox[{"maxxis", ",", "bad"}], "]"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"maxys", "=", 
       RowBox[{"Table", "[", 
        RowBox[{
         RowBox[{"input", "[", 
          RowBox[{"[", 
           RowBox[{
            RowBox[{"maxxis", "[", 
             RowBox[{"[", "i", "]"}], "]"}], ",", "2"}], "]"}], "]"}], ",", 
         RowBox[{"{", 
          RowBox[{"i", ",", 
           RowBox[{"Length", "[", "maxxs", "]"}]}], "}"}]}], "]"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"If", "[", 
       RowBox[{
        RowBox[{
         RowBox[{"Length", "[", "maxxs", "]"}], ">", "1"}], ",", 
        "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{"mins", "=", 
          RowBox[{"Range", "[", 
           RowBox[{
            RowBox[{"Length", "[", "maxxs", "]"}], "-", "1"}], "]"}]}], ";", 
         "\[IndentingNewLine]", 
         RowBox[{"Do", "[", 
          RowBox[{
           RowBox[{
            RowBox[{"mins", "[", 
             RowBox[{"[", "i", "]"}], "]"}], "=", 
            RowBox[{
             RowBox[{"Position", "[", 
              RowBox[{
               RowBox[{"input", "[", 
                RowBox[{"[", 
                 RowBox[{"All", ",", "2"}], "]"}], "]"}], ",", 
               RowBox[{"Min", "[", 
                RowBox[{"input", "[", 
                 RowBox[{"[", 
                  RowBox[{
                   RowBox[{
                    RowBox[{"maxxis", "[", 
                    RowBox[{"[", "i", "]"}], "]"}], ";;", 
                    RowBox[{"maxxis", "[", 
                    RowBox[{"[", 
                    RowBox[{"i", "+", "1"}], "]"}], "]"}]}], ",", "2"}], 
                  "]"}], "]"}], "]"}]}], "]"}], "[", 
             RowBox[{"[", 
              RowBox[{"1", ",", "1"}], "]"}], "]"}]}], ",", 
           RowBox[{"{", 
            RowBox[{"i", ",", 
             RowBox[{
              RowBox[{"Length", "[", "maxxs", "]"}], "-", "1"}]}], "}"}]}], 
          "]"}], ";", 
         RowBox[{"mins", "=", 
          RowBox[{"Append", "[", 
           RowBox[{
            RowBox[{"Prepend", "[", 
             RowBox[{"mins", ",", 
              RowBox[{
               RowBox[{"maxxis", "[", 
                RowBox[{"[", "1", "]"}], "]"}], "-", 
               RowBox[{"(", 
                RowBox[{
                 RowBox[{"mins", "[", 
                  RowBox[{"[", "1", "]"}], "]"}], "-", 
                 RowBox[{"maxxis", "[", 
                  RowBox[{"[", "1", "]"}], "]"}]}], ")"}]}]}], "]"}], ",", 
            RowBox[{"If", "[", 
             RowBox[{
              RowBox[{
               RowBox[{
                RowBox[{"maxxis", "[", 
                 RowBox[{"[", 
                  RowBox[{"-", "1"}], "]"}], "]"}], "+", 
                RowBox[{"(", 
                 RowBox[{
                  RowBox[{"maxxis", "[", 
                   RowBox[{"[", 
                    RowBox[{"-", "1"}], "]"}], "]"}], "-", 
                  RowBox[{"mins", "[", 
                   RowBox[{"[", 
                    RowBox[{"-", "1"}], "]"}], "]"}]}], ")"}]}], 
               "\[LessEqual]", " ", 
               RowBox[{"Length", "[", "input", "]"}]}], ",", 
              RowBox[{
               RowBox[{"maxxis", "[", 
                RowBox[{"[", 
                 RowBox[{"-", "1"}], "]"}], "]"}], "+", 
               RowBox[{"(", 
                RowBox[{
                 RowBox[{"maxxis", "[", 
                  RowBox[{"[", 
                   RowBox[{"-", "1"}], "]"}], "]"}], "-", 
                 RowBox[{"mins", "[", 
                  RowBox[{"[", 
                   RowBox[{"-", "1"}], "]"}], "]"}]}], ")"}]}], ",", 
              RowBox[{"Length", "[", "input", "]"}]}], "]"}]}], "]"}]}], 
         ";"}], ",", "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{"hwhmi", "=", 
          RowBox[{
           RowBox[{"Position", "[", 
            RowBox[{"input", ",", 
             RowBox[{
              RowBox[{"Nearest", "[", 
               RowBox[{
                RowBox[{"input", "[", 
                 RowBox[{"[", 
                  RowBox[{
                   RowBox[{";;", "maxyi"}], ",", "2"}], "]"}], "]"}], ",", 
                RowBox[{"maxy", "/", "2"}]}], "]"}], "[", 
              RowBox[{"[", "1", "]"}], "]"}]}], "]"}], "[", 
           RowBox[{"[", 
            RowBox[{"1", ",", "1"}], "]"}], "]"}]}], ";", 
         "\[IndentingNewLine]", 
         RowBox[{"mins", "=", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"maxyi", "-", 
             RowBox[{"3", 
              RowBox[{"(", 
               RowBox[{"maxyi", "-", "hwhmi"}], ")"}]}]}], ",", 
            RowBox[{"If", "[", 
             RowBox[{
              RowBox[{
               RowBox[{"maxyi", "+", 
                RowBox[{"3", 
                 RowBox[{"(", 
                  RowBox[{"maxyi", "-", "hwhmi"}], ")"}]}]}], "\[LessEqual]", 
               
               RowBox[{"Length", "[", "input", "]"}]}], ",", 
              RowBox[{"maxyi", "+", 
               RowBox[{"3", 
                RowBox[{"(", 
                 RowBox[{"maxyi", "-", "hwhmi"}], ")"}]}]}], ",", 
              RowBox[{"Length", "[", "input", "]"}]}], "]"}]}], "}"}]}], 
         ";"}]}], "]"}], ";", "\[IndentingNewLine]", 
      RowBox[{"If", "[", 
       RowBox[{
        RowBox[{
         RowBox[{"mins", "[", 
          RowBox[{"[", "1", "]"}], "]"}], "<", "0"}], ",", 
        RowBox[{
         RowBox[{"mins", "[", 
          RowBox[{"[", "1", "]"}], "]"}], "=", "1"}]}], "]"}], ";", "\n", 
      RowBox[{"hwhmi", "=", 
       RowBox[{"Range", "[", 
        RowBox[{"Length", "[", "maxxs", "]"}], "]"}]}], ";", "\n", 
      RowBox[{"Do", "[", 
       RowBox[{
        RowBox[{
         RowBox[{"hwhmi", "[", 
          RowBox[{"[", "i", "]"}], "]"}], "=", 
         RowBox[{
          RowBox[{"Position", "[", 
           RowBox[{"input", ",", 
            RowBox[{
             RowBox[{"Nearest", "[", 
              RowBox[{
               RowBox[{"input", "[", 
                RowBox[{"[", 
                 RowBox[{
                  RowBox[{
                   RowBox[{"mins", "[", 
                    RowBox[{"[", "i", "]"}], "]"}], ";;", 
                   RowBox[{"maxxis", "[", 
                    RowBox[{"[", "i", "]"}], "]"}]}], ",", "2"}], "]"}], 
                "]"}], ",", 
               RowBox[{
                RowBox[{"inter", "[", 
                 RowBox[{"maxxs", "[", 
                  RowBox[{"[", "i", "]"}], "]"}], "]"}], "/", "2"}]}], "]"}], 
             "[", 
             RowBox[{"[", "1", "]"}], "]"}]}], "]"}], "[", 
          RowBox[{"[", 
           RowBox[{"1", ",", "1"}], "]"}], "]"}]}], ",", 
        RowBox[{"{", 
         RowBox[{"i", ",", 
          RowBox[{"Length", "[", "maxxs", "]"}]}], "}"}]}], "]"}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"gammas", "=", 
       RowBox[{"Range", "[", 
        RowBox[{"Length", "[", "hwhmi", "]"}], "]"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"Do", "[", 
       RowBox[{
        RowBox[{
         RowBox[{"gammas", "[", 
          RowBox[{"[", "i", "]"}], "]"}], "=", 
         RowBox[{"2", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"maxxs", "[", 
             RowBox[{"[", "i", "]"}], "]"}], "-", 
            RowBox[{"input", "[", 
             RowBox[{"[", 
              RowBox[{
               RowBox[{"hwhmi", "[", 
                RowBox[{"[", "i", "]"}], "]"}], ",", "1"}], "]"}], "]"}]}], 
           ")"}]}]}], ",", 
        RowBox[{"{", 
         RowBox[{"i", ",", 
          RowBox[{"Length", "[", "hwhmi", "]"}]}], "}"}]}], "]"}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"inputc", "=", 
       RowBox[{"Range", "[", 
        RowBox[{"Length", "[", "maxxs", "]"}], "]"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"Do", "[", 
       RowBox[{
        RowBox[{
         RowBox[{"inputc", "[", 
          RowBox[{"[", "i", "]"}], "]"}], "=", 
         RowBox[{"input", "[", 
          RowBox[{"[", 
           RowBox[{
            RowBox[{"If", "[", 
             RowBox[{
              RowBox[{"i", "\[GreaterEqual]", "2"}], ",", 
              RowBox[{"If", "[", 
               RowBox[{
                RowBox[{
                 RowBox[{
                  RowBox[{"maxxis", "[", 
                   RowBox[{"[", "i", "]"}], "]"}], "-", 
                  RowBox[{"3", 
                   RowBox[{"(", 
                    RowBox[{
                    RowBox[{"maxxis", "[", 
                    RowBox[{"[", "i", "]"}], "]"}], "-", 
                    RowBox[{"hwhmi", "[", 
                    RowBox[{"[", "i", "]"}], "]"}]}], ")"}]}]}], "<", 
                 RowBox[{"mins", "[", 
                  RowBox[{"[", "i", "]"}], "]"}]}], ",", 
                RowBox[{"mins", "[", 
                 RowBox[{"[", "i", "]"}], "]"}], ",", 
                RowBox[{
                 RowBox[{"maxxis", "[", 
                  RowBox[{"[", "i", "]"}], "]"}], "-", 
                 RowBox[{"3", 
                  RowBox[{"(", 
                   RowBox[{
                    RowBox[{"maxxis", "[", 
                    RowBox[{"[", "i", "]"}], "]"}], "-", 
                    RowBox[{"hwhmi", "[", 
                    RowBox[{"[", "i", "]"}], "]"}]}], ")"}]}]}]}], "]"}], ",", 
              RowBox[{"If", "[", 
               RowBox[{
                RowBox[{
                 RowBox[{
                  RowBox[{"maxxis", "[", 
                   RowBox[{"[", "i", "]"}], "]"}], "-", 
                  RowBox[{"3", 
                   RowBox[{"(", 
                    RowBox[{
                    RowBox[{"maxxis", "[", 
                    RowBox[{"[", "i", "]"}], "]"}], "-", 
                    RowBox[{"hwhmi", "[", 
                    RowBox[{"[", "i", "]"}], "]"}]}], ")"}]}]}], ">", "0"}], 
                ",", 
                RowBox[{
                 RowBox[{"maxxis", "[", 
                  RowBox[{"[", "i", "]"}], "]"}], "-", 
                 RowBox[{"3", 
                  RowBox[{"(", 
                   RowBox[{
                    RowBox[{"maxxis", "[", 
                    RowBox[{"[", "i", "]"}], "]"}], "-", 
                    RowBox[{"hwhmi", "[", 
                    RowBox[{"[", "i", "]"}], "]"}]}], ")"}]}]}], ",", "1"}], 
               "]"}]}], "]"}], ";;", 
            RowBox[{"If", "[", 
             RowBox[{
              RowBox[{
               RowBox[{
                RowBox[{"maxxis", "[", 
                 RowBox[{"[", "i", "]"}], "]"}], "+", 
                RowBox[{"3", 
                 RowBox[{"(", 
                  RowBox[{
                   RowBox[{"maxxis", "[", 
                    RowBox[{"[", "i", "]"}], "]"}], "-", 
                   RowBox[{"hwhmi", "[", 
                    RowBox[{"[", "i", "]"}], "]"}]}], ")"}]}]}], "<", 
               RowBox[{"mins", "[", 
                RowBox[{"[", 
                 RowBox[{"i", "+", "1"}], "]"}], "]"}]}], ",", 
              RowBox[{
               RowBox[{"maxxis", "[", 
                RowBox[{"[", "i", "]"}], "]"}], "+", 
               RowBox[{"3", 
                RowBox[{"(", 
                 RowBox[{
                  RowBox[{"maxxis", "[", 
                   RowBox[{"[", "i", "]"}], "]"}], "-", 
                  RowBox[{"hwhmi", "[", 
                   RowBox[{"[", "i", "]"}], "]"}]}], ")"}]}]}], ",", 
              RowBox[{"mins", "[", 
               RowBox[{"[", 
                RowBox[{"i", "+", "1"}], "]"}], "]"}]}], "]"}]}], "]"}], 
          "]"}]}], ",", 
        RowBox[{"{", 
         RowBox[{"i", ",", 
          RowBox[{"Length", "[", "maxxs", "]"}]}], "}"}]}], "]"}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"temp", "=", 
       RowBox[{"Range", "[", 
        RowBox[{"Length", "[", "hwhmi", "]"}], "]"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"Do", "[", 
       RowBox[{
        RowBox[{
         RowBox[{"temp", "[", 
          RowBox[{"[", "i", "]"}], "]"}], "=", 
         RowBox[{"NonlinearModelFit", "[", 
          RowBox[{
           RowBox[{"inputc", "[", 
            RowBox[{"[", "i", "]"}], "]"}], ",", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{"BW", "[", 
              RowBox[{
              "x", ",", "wr", ",", "\[CapitalGamma]", ",", "\[Delta]bg", ",", 
               "const", ",", "shift", ",", "shift2"}], "]"}], ",", 
             RowBox[{"const", ">", "0"}], ",", 
             RowBox[{"\[CapitalGamma]", ">", "0"}]}], "}"}], ",", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{"{", 
              RowBox[{"wr", ",", 
               RowBox[{"maxxs", "[", 
                RowBox[{"[", "i", "]"}], "]"}]}], "}"}], ",", 
             RowBox[{"{", 
              RowBox[{"\[CapitalGamma]", ",", 
               RowBox[{"gammas", "[", 
                RowBox[{"[", "i", "]"}], "]"}]}], "}"}], ",", 
             RowBox[{"{", 
              RowBox[{"const", ",", 
               RowBox[{"maxys", "[", 
                RowBox[{"[", "i", "]"}], "]"}]}], "}"}], ",", 
             RowBox[{"{", 
              RowBox[{"\[Delta]bg", ",", "0.0"}], "}"}], ",", 
             RowBox[{"{", 
              RowBox[{"shift", ",", "0.0"}], "}"}], ",", 
             RowBox[{"{", 
              RowBox[{"shift2", ",", "0.0"}], "}"}]}], "}"}], ",", "x", ",", 
           RowBox[{"MaxIterations", "\[Rule]", "1000"}]}], "]"}]}], ",", 
        RowBox[{"{", 
         RowBox[{"i", ",", 
          RowBox[{"Length", "[", "hwhmi", "]"}]}], "}"}]}], "]"}], ";", 
      RowBox[{"output", "=", "temp"}], ";"}]}], "]"}]}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"store", "[", 
     RowBox[{"param_", ",", "res_", ",", "model_", ",", "pT_"}], "]"}], ":=", 
    
    RowBox[{"Module", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"temp", "=", 
        RowBox[{"ToString", "[", "res", "]"}]}], "}"}], ",", 
      RowBox[{
       RowBox[{"res", "=", 
        RowBox[{"Range", "[", 
         RowBox[{"Length", "[", "model", "]"}], "]"}]}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{"Do", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"res", "[", 
           RowBox[{"[", "ii", "]"}], "]"}], "=", 
          RowBox[{"Range", "[", 
           RowBox[{"Length", "[", 
            RowBox[{"model", "[", 
             RowBox[{"[", "ii", "]"}], "]"}], "]"}], "]"}]}], ",", 
         RowBox[{"{", 
          RowBox[{"ii", ",", 
           RowBox[{"Length", "[", "res", "]"}]}], "}"}]}], "]"}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{"Do", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"res", "[", 
           RowBox[{"[", 
            RowBox[{"i", ",", "j"}], "]"}], "]"}], "=", 
          RowBox[{"param", "/.", 
           RowBox[{
            RowBox[{"model", "[", 
             RowBox[{"[", 
              RowBox[{"i", ",", "j"}], "]"}], "]"}], "[", 
            "\"\<BestFitParameters\>\"", "]"}]}]}], ",", 
         RowBox[{"{", 
          RowBox[{"i", ",", 
           RowBox[{"Length", "[", "res", "]"}]}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"j", ",", 
           RowBox[{"Length", "[", 
            RowBox[{"res", "[", 
             RowBox[{"[", "i", "]"}], "]"}], "]"}]}], "}"}]}], "]"}], ";", 
       RowBox[{"Export", "[", 
        RowBox[{
         RowBox[{"\"\<results/perp/pT\>\"", "<>", 
          RowBox[{"ToString", "[", "pT", "]"}], "<>", "temp", "<>", 
          "\"\<.dat\>\""}], ",", "res"}], "]"}], ";"}]}], "]"}]}], ";"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"storearea", "[", 
    RowBox[{"res_", ",", "model_", ",", "pT_"}], "]"}], ":=", 
   RowBox[{"Module", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"temp", "=", 
       RowBox[{"ToString", "[", "res", "]"}]}], "}"}], ",", 
     RowBox[{
      RowBox[{"res", "=", 
       RowBox[{"Range", "[", 
        RowBox[{"Length", "[", "model", "]"}], "]"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"Do", "[", 
       RowBox[{
        RowBox[{
         RowBox[{"res", "[", 
          RowBox[{"[", "ii", "]"}], "]"}], "=", 
         RowBox[{"Range", "[", 
          RowBox[{"Length", "[", 
           RowBox[{"model", "[", 
            RowBox[{"[", "ii", "]"}], "]"}], "]"}], "]"}]}], ",", 
        RowBox[{"{", 
         RowBox[{"ii", ",", 
          RowBox[{"Length", "[", "res", "]"}]}], "}"}]}], "]"}], ";", 
      RowBox[{"Do", "[", 
       RowBox[{
        RowBox[{
         RowBox[{"res", "[", 
          RowBox[{"[", 
           RowBox[{"i", ",", "j"}], "]"}], "]"}], "=", 
         RowBox[{
          FractionBox["\[Pi]", "2"], 
          RowBox[{"(", 
           RowBox[{"\[CapitalGamma]", "/.", 
            RowBox[{
             RowBox[{"model", "[", 
              RowBox[{"[", 
               RowBox[{"i", ",", "j"}], "]"}], "]"}], "[", 
             "\"\<BestFitParameters\>\"", "]"}]}], ")"}], 
          RowBox[{"(", " ", 
           RowBox[{"const", "/.", 
            RowBox[{
             RowBox[{"model", "[", 
              RowBox[{"[", 
               RowBox[{"i", ",", "j"}], "]"}], "]"}], "[", 
             "\"\<BestFitParameters\>\"", "]"}]}], ")"}]}]}], ",", 
        RowBox[{"{", 
         RowBox[{"i", ",", 
          RowBox[{"Length", "[", "res", "]"}]}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"j", ",", 
          RowBox[{"Length", "[", 
           RowBox[{"res", "[", 
            RowBox[{"[", "i", "]"}], "]"}], "]"}]}], "}"}]}], "]"}], ";", 
      RowBox[{"Export", "[", 
       RowBox[{
        RowBox[{"\"\<results/perp/pT\>\"", "<>", 
         RowBox[{"ToString", "[", "pT", "]"}], "<>", "temp", "<>", 
         "\"\<.dat\>\""}], ",", "res"}], "]"}], ";"}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"import", "[", 
    RowBox[{"res_", ",", "pT_"}], "]"}], ":=", 
   RowBox[{"Import", "[", 
    RowBox[{"\"\<results/perp/pT\>\"", "<>", 
     RowBox[{"ToString", "[", "pT", "]"}], "<>", 
     RowBox[{"ToString", "[", "res", "]"}], "<>", "\"\<.dat\>\""}], "]"}]}], 
  ";"}]}], "Input",
 CellChangeTimes->{{3.725011819995084*^9, 3.725011822739936*^9}, {
   3.7277029516093273`*^9, 3.7277029707983103`*^9}, {3.72770377220212*^9, 
   3.727703774851506*^9}, {3.727704183456113*^9, 3.727704235986051*^9}, {
   3.727704293099452*^9, 3.7277043013170643`*^9}, {3.727704650937663*^9, 
   3.7277046563118553`*^9}, {3.7277047089071817`*^9, 3.727704722605954*^9}, {
   3.7277593468476477`*^9, 3.72775937353994*^9}, {3.727767951399776*^9, 
   3.7277679609665327`*^9}, {3.727786365837351*^9, 3.7277863661113586`*^9}, {
   3.7277876777187643`*^9, 3.727787689465622*^9}, {3.72784572190436*^9, 
   3.7278457561920156`*^9}, {3.727845811991851*^9, 3.727845812747995*^9}, {
   3.727845884529807*^9, 3.7278459276116*^9}, 3.727942661840372*^9, 
   3.727943172599392*^9, 3.727943318747197*^9, 3.727943484079109*^9, {
   3.727943910169404*^9, 3.727943913531708*^9}, {3.727944406421103*^9, 
   3.727944434023428*^9}, {3.727944642717669*^9, 3.727944652632021*^9}, {
   3.727944696805109*^9, 3.727944714237059*^9}, {3.727944857864943*^9, 
   3.727944943236537*^9}, {3.727945112002225*^9, 3.727945153556973*^9}, {
   3.7279465536173477`*^9, 3.727946576509602*^9}, {3.7279466219931993`*^9, 
   3.727946641020568*^9}, {3.727946745022765*^9, 3.7279467510016947`*^9}, {
   3.727948915813862*^9, 3.7279489220518103`*^9}, {3.727950853888091*^9, 
   3.727950855689782*^9}, {3.7279510545527267`*^9, 3.72795105953828*^9}, {
   3.727951246850439*^9, 3.727951258187858*^9}, {3.727951425412133*^9, 
   3.7279514307077436`*^9}, {3.727953623055787*^9, 3.727953626390915*^9}, 
   3.72795366203069*^9, {3.7279537225963783`*^9, 3.727953726617856*^9}, {
   3.727971101664791*^9, 3.727971105199127*^9}, {3.728011848410287*^9, 
   3.728011850788999*^9}, {3.728029731549341*^9, 3.728029761112349*^9}, {
   3.728052836065872*^9, 3.728052836664957*^9}, {3.728052982785912*^9, 
   3.7280529955647783`*^9}, {3.7280569478616657`*^9, 
   3.7280569604976397`*^9}, {3.7281028074097033`*^9, 
   3.7281028134452477`*^9}, {3.728114140884417*^9, 3.728114141976523*^9}, {
   3.728114191643759*^9, 3.7281142098598423`*^9}, {3.7281196714668207`*^9, 
   3.728119673841776*^9}, {3.728119709731044*^9, 3.728119744682604*^9}, 
   3.7281200289127502`*^9, {3.728120100939199*^9, 3.728120213460887*^9}, {
   3.728120354706056*^9, 3.7281204271928177`*^9}, {3.728120767910965*^9, 
   3.728120773809227*^9}, {3.728121918899763*^9, 3.728121922795506*^9}, {
   3.7281258608721027`*^9, 3.728125884184536*^9}, 3.728125981202344*^9, {
   3.7281314407612658`*^9, 3.728131447169196*^9}, {3.728131583460206*^9, 
   3.7281315859399033`*^9}, 3.728136871222497*^9, {3.733047794520813*^9, 
   3.7330478032220993`*^9}, {3.733048347176607*^9, 3.733048365643635*^9}, {
   3.7334588769411993`*^9, 3.733458887750147*^9}, {3.733463834816124*^9, 
   3.73346384694232*^9}, 3.733475403391897*^9, {3.733483354962577*^9, 
   3.733483367644465*^9}, 3.733483410112524*^9, {3.743766043857224*^9, 
   3.743766050772669*^9}, {3.7437661984151*^9, 3.7437661998625927`*^9}, {
   3.7437662502422028`*^9, 3.743766276321958*^9}, {3.745381707796076*^9, 
   3.745381736594418*^9}, {3.745381844997349*^9, 3.745381850348784*^9}, {
   3.7456021906057167`*^9, 3.745602199698488*^9}, {3.746074558196645*^9, 
   3.74607456890853*^9}, {3.7460748831207237`*^9, 3.746074901632012*^9}, {
   3.746349235340336*^9, 3.746349239141835*^9}, {3.747200645231229*^9, 
   3.747200649387951*^9}, {3.747886690619404*^9, 3.747886699125519*^9}, 
   3.7479347748373947`*^9, {3.754165153509651*^9, 3.754165202142518*^9}, {
   3.754165249427388*^9, 3.754165276872505*^9}, {3.754165340674152*^9, 
   3.754165347748952*^9}, {3.754165460514566*^9, 3.754165462487852*^9}, {
   3.754166225004891*^9, 3.754166265330785*^9}, {3.754205422570629*^9, 
   3.75420546693386*^9}, {3.758211666220532*^9, 3.7582118057759647`*^9}, {
   3.758213315225675*^9, 3.7582133170992947`*^9}, {3.758400506587027*^9, 
   3.7584005071175327`*^9}, {3.7584006374108067`*^9, 
   3.7584006380326967`*^9}, {3.758400904764585*^9, 3.75840091383716*^9}, {
   3.7584816472183323`*^9, 3.758481716692812*^9}, {3.7584817697460213`*^9, 
   3.758481796972303*^9}, {3.758481855393854*^9, 3.758481925844903*^9}, {
   3.7586633344215727`*^9, 3.7586633351556997`*^9}, {3.758664021597375*^9, 
   3.758664021810163*^9}, {3.758664774837081*^9, 3.758664860252309*^9}, {
   3.758665058549572*^9, 3.758665066621266*^9}, {3.7589764850392513`*^9, 
   3.758976485051512*^9}}]
}, Closed]],

Cell[CellGroupData[{

Cell["Perform fitting", "Subsection",
 CellChangeTimes->{{3.758213324471237*^9, 3.758213329591319*^9}, {
  3.758213386644705*^9, 3.758213388500249*^9}}],

Cell[BoxData[{
 RowBox[{
  RowBox[{"pT", "=", "2"}], ";"}], "\n", 
 RowBox[{
  RowBox[{"Do", "[", 
   RowBox[{
    RowBox[{
     RowBox[{
      RowBox[{"ccdata", "[", "i", "]"}], "=", 
      RowBox[{"Import", "[", 
       RowBox[{"\"\<cc/perp/pT\>\"", "<>", 
        RowBox[{"ToString", "[", "pT", "]"}], "<>", "\"\</swccpT\>\"", "<>", 
        RowBox[{"ToString", "[", "pT", "]"}], "<>", "\"\<ang\>\"", "<>", 
        RowBox[{"ToString", "[", "i", "]"}], "<>", 
        "\"\<spectraJpsi.dat\>\""}], "]"}]}], ";"}], ",", 
    RowBox[{"{", 
     RowBox[{"i", ",", "51"}], "}"}]}], "]"}], ";"}], "\n", 
 RowBox[{"Clear", "[", "ccmodel", "]"}], "\n", 
 RowBox[{
  RowBox[{"fit", "[", 
   RowBox[{"ccdata", ",", "ccmodel", ",", "51"}], "]"}], ";"}], "\n", 
 RowBox[{
  RowBox[{"Clear", "[", 
   RowBox[{
   "wrfitcc", ",", "gfitcc", ",", "areafitcc", ",", "cfitcc", ",", "dfitcc", 
    ",", "sfitcc", ",", "s2fitcc"}], "]"}], ";"}], "\n", 
 RowBox[{
  RowBox[{"store", "[", 
   RowBox[{"wr", ",", "wrfitcc", ",", "ccmodel", ",", "pT"}], "]"}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"store", "[", 
   RowBox[{"\[CapitalGamma]", ",", "gfitcc", ",", "ccmodel", ",", "pT"}], 
   "]"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"store", "[", 
   RowBox[{"const", ",", "cfitcc", ",", "ccmodel", ",", "pT"}], "]"}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"store", "[", 
   RowBox[{"\[Delta]bg", ",", "dfitcc", ",", "ccmodel", ",", "pT"}], "]"}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"store", "[", 
   RowBox[{"shift", ",", "sfitcc", ",", "ccmodel", ",", "pT"}], "]"}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"store", "[", 
   RowBox[{"shift2", ",", "s2fitcc", ",", "ccmodel", ",", "pT"}], "]"}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"storearea", "[", 
   RowBox[{"areafitcc", ",", "ccmodel", ",", "pT"}], "]"}], ";"}]}], "Input",
 CellChangeTimes->{{3.758212605017861*^9, 3.7582126082721233`*^9}, {
   3.758212689544549*^9, 3.75821269125163*^9}, {3.758212915864624*^9, 
   3.758212972172599*^9}, {3.758213047374237*^9, 3.758213047694623*^9}, {
   3.7582130788043833`*^9, 3.758213164924611*^9}, {3.758400362388665*^9, 
   3.758400362585599*^9}, {3.758401132221274*^9, 3.758401140493024*^9}, 
   3.758481096751586*^9, {3.758481258450405*^9, 3.758481275734441*^9}, {
   3.7584820000641003`*^9, 3.758482004948923*^9}, 3.758976485062586*^9}],

Cell[BoxData[{
 RowBox[{
  RowBox[{"pT", "=", "5"}], ";"}], "\n", 
 RowBox[{
  RowBox[{"Do", "[", 
   RowBox[{
    RowBox[{
     RowBox[{
      RowBox[{"ccdata", "[", "i", "]"}], "=", 
      RowBox[{"Import", "[", 
       RowBox[{"\"\<cc/perp/pT\>\"", "<>", 
        RowBox[{"ToString", "[", "pT", "]"}], "<>", "\"\</swccpT\>\"", "<>", 
        RowBox[{"ToString", "[", "pT", "]"}], "<>", "\"\<ang\>\"", "<>", 
        RowBox[{"ToString", "[", "i", "]"}], "<>", 
        "\"\<spectraJpsi.dat\>\""}], "]"}]}], ";"}], ",", 
    RowBox[{"{", 
     RowBox[{"i", ",", "51"}], "}"}]}], "]"}], ";"}], "\n", 
 RowBox[{"Clear", "[", "ccmodel", "]"}], "\n", 
 RowBox[{
  RowBox[{"fit", "[", 
   RowBox[{"ccdata", ",", "ccmodel", ",", "51"}], "]"}], ";"}], "\n", 
 RowBox[{
  RowBox[{"Clear", "[", 
   RowBox[{
   "wrfitcc", ",", "gfitcc", ",", "areafitcc", ",", "cfitcc", ",", "dfitcc", 
    ",", "sfitcc", ",", "s2fitcc"}], "]"}], ";"}], "\n", 
 RowBox[{
  RowBox[{"store", "[", 
   RowBox[{"wr", ",", "wrfitcc", ",", "ccmodel", ",", "pT"}], "]"}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"store", "[", 
   RowBox[{"\[CapitalGamma]", ",", "gfitcc", ",", "ccmodel", ",", "pT"}], 
   "]"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"store", "[", 
   RowBox[{"const", ",", "cfitcc", ",", "ccmodel", ",", "pT"}], "]"}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"store", "[", 
   RowBox[{"\[Delta]bg", ",", "dfitcc", ",", "ccmodel", ",", "pT"}], "]"}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"store", "[", 
   RowBox[{"shift", ",", "sfitcc", ",", "ccmodel", ",", "pT"}], "]"}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"store", "[", 
   RowBox[{"shift2", ",", "s2fitcc", ",", "ccmodel", ",", "pT"}], "]"}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"storearea", "[", 
   RowBox[{"areafitcc", ",", "ccmodel", ",", "pT"}], "]"}], ";"}]}], "Input",
 CellChangeTimes->{{3.758212605017861*^9, 3.7582126082721233`*^9}, {
   3.758212689544549*^9, 3.75821269125163*^9}, {3.758212915864624*^9, 
   3.758212972172599*^9}, {3.758213047374237*^9, 3.758213047694623*^9}, {
   3.7582130788043833`*^9, 3.758213164924611*^9}, {3.758400362388665*^9, 
   3.758400362585599*^9}, {3.758401132221274*^9, 3.758401158300662*^9}, {
   3.7584819805018272`*^9, 3.758481982495976*^9}, 3.75897648507298*^9}],

Cell[BoxData[{
 RowBox[{
  RowBox[{"pT", "=", "10"}], ";"}], "\n", 
 RowBox[{
  RowBox[{"Do", "[", 
   RowBox[{
    RowBox[{
     RowBox[{
      RowBox[{"ccdata", "[", "i", "]"}], "=", 
      RowBox[{"Import", "[", 
       RowBox[{"\"\<cc/perp/pT\>\"", "<>", 
        RowBox[{"ToString", "[", "pT", "]"}], "<>", "\"\</swccpT\>\"", "<>", 
        RowBox[{"ToString", "[", "pT", "]"}], "<>", "\"\<ang\>\"", "<>", 
        RowBox[{"ToString", "[", "i", "]"}], "<>", 
        "\"\<spectraJpsi.dat\>\""}], "]"}]}], ";"}], ",", 
    RowBox[{"{", 
     RowBox[{"i", ",", "51"}], "}"}]}], "]"}], ";"}], "\n", 
 RowBox[{"Clear", "[", "ccmodel", "]"}], "\n", 
 RowBox[{
  RowBox[{"fit", "[", 
   RowBox[{"ccdata", ",", "ccmodel", ",", "51"}], "]"}], ";"}], "\n", 
 RowBox[{
  RowBox[{"Clear", "[", 
   RowBox[{
   "wrfitcc", ",", "gfitcc", ",", "areafitcc", ",", "cfitcc", ",", "dfitcc", 
    ",", "sfitcc", ",", "s2fitcc"}], "]"}], ";"}], "\n", 
 RowBox[{
  RowBox[{"store", "[", 
   RowBox[{"wr", ",", "wrfitcc", ",", "ccmodel", ",", "pT"}], "]"}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"store", "[", 
   RowBox[{"\[CapitalGamma]", ",", "gfitcc", ",", "ccmodel", ",", "pT"}], 
   "]"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"store", "[", 
   RowBox[{"const", ",", "cfitcc", ",", "ccmodel", ",", "pT"}], "]"}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"store", "[", 
   RowBox[{"\[Delta]bg", ",", "dfitcc", ",", "ccmodel", ",", "pT"}], "]"}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"store", "[", 
   RowBox[{"shift", ",", "sfitcc", ",", "ccmodel", ",", "pT"}], "]"}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"store", "[", 
   RowBox[{"shift2", ",", "s2fitcc", ",", "ccmodel", ",", "pT"}], "]"}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"storearea", "[", 
   RowBox[{"areafitcc", ",", "ccmodel", ",", "pT"}], "]"}], ";"}]}], "Input",
 CellChangeTimes->{{3.758212605017861*^9, 3.7582126082721233`*^9}, {
   3.758212689544549*^9, 3.75821269125163*^9}, {3.758212915864624*^9, 
   3.758212972172599*^9}, {3.758213047374237*^9, 3.758213047694623*^9}, {
   3.7582130788043833`*^9, 3.758213164924611*^9}, {3.758400362388665*^9, 
   3.758400362585599*^9}, {3.758401132221274*^9, 3.758401167138772*^9}, {
   3.758481983104192*^9, 3.7584819890367203`*^9}, 3.758976485083692*^9}],

Cell[BoxData[{
 RowBox[{
  RowBox[{"pT", "=", "15"}], ";"}], "\n", 
 RowBox[{
  RowBox[{"Do", "[", 
   RowBox[{
    RowBox[{
     RowBox[{
      RowBox[{"ccdata", "[", "i", "]"}], "=", 
      RowBox[{"Import", "[", 
       RowBox[{"\"\<cc/perp/pT\>\"", "<>", 
        RowBox[{"ToString", "[", "pT", "]"}], "<>", "\"\</swccpT\>\"", "<>", 
        RowBox[{"ToString", "[", "pT", "]"}], "<>", "\"\<ang\>\"", "<>", 
        RowBox[{"ToString", "[", "i", "]"}], "<>", 
        "\"\<spectraJpsi.dat\>\""}], "]"}]}], ";"}], ",", 
    RowBox[{"{", 
     RowBox[{"i", ",", "51"}], "}"}]}], "]"}], ";"}], "\n", 
 RowBox[{"Clear", "[", "ccmodel", "]"}], "\n", 
 RowBox[{
  RowBox[{"fit", "[", 
   RowBox[{"ccdata", ",", "ccmodel", ",", "51"}], "]"}], ";"}], "\n", 
 RowBox[{
  RowBox[{"Clear", "[", 
   RowBox[{
   "wrfitcc", ",", "gfitcc", ",", "areafitcc", ",", "cfitcc", ",", "dfitcc", 
    ",", "sfitcc", ",", "s2fitcc"}], "]"}], ";"}], "\n", 
 RowBox[{
  RowBox[{"store", "[", 
   RowBox[{"wr", ",", "wrfitcc", ",", "ccmodel", ",", "pT"}], "]"}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"store", "[", 
   RowBox[{"\[CapitalGamma]", ",", "gfitcc", ",", "ccmodel", ",", "pT"}], 
   "]"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"store", "[", 
   RowBox[{"const", ",", "cfitcc", ",", "ccmodel", ",", "pT"}], "]"}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"store", "[", 
   RowBox[{"\[Delta]bg", ",", "dfitcc", ",", "ccmodel", ",", "pT"}], "]"}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"store", "[", 
   RowBox[{"shift", ",", "sfitcc", ",", "ccmodel", ",", "pT"}], "]"}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"store", "[", 
   RowBox[{"shift2", ",", "s2fitcc", ",", "ccmodel", ",", "pT"}], "]"}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"storearea", "[", 
   RowBox[{"areafitcc", ",", "ccmodel", ",", "pT"}], "]"}], ";"}]}], "Input",
 CellChangeTimes->{{3.758212605017861*^9, 3.7582126082721233`*^9}, {
   3.758212689544549*^9, 3.75821269125163*^9}, {3.758212915864624*^9, 
   3.758212972172599*^9}, {3.758213047374237*^9, 3.758213047694623*^9}, {
   3.7582130788043833`*^9, 3.758213164924611*^9}, {3.758400362388665*^9, 
   3.758400362585599*^9}, {3.758401132221274*^9, 3.758401167138772*^9}, {
   3.758481983104192*^9, 3.7584819890367203`*^9}, {3.7584821961592093`*^9, 
   3.758482196252659*^9}, 3.758976485094345*^9}],

Cell[BoxData[{
 RowBox[{
  RowBox[{"pT", "=", "20"}], ";"}], "\n", 
 RowBox[{
  RowBox[{"Do", "[", 
   RowBox[{
    RowBox[{
     RowBox[{
      RowBox[{"ccdata", "[", "i", "]"}], "=", 
      RowBox[{"Import", "[", 
       RowBox[{"\"\<cc/perp/pT\>\"", "<>", 
        RowBox[{"ToString", "[", "pT", "]"}], "<>", "\"\</swccpT\>\"", "<>", 
        RowBox[{"ToString", "[", "pT", "]"}], "<>", "\"\<ang\>\"", "<>", 
        RowBox[{"ToString", "[", "i", "]"}], "<>", 
        "\"\<spectraJpsi.dat\>\""}], "]"}]}], ";"}], ",", 
    RowBox[{"{", 
     RowBox[{"i", ",", "51"}], "}"}]}], "]"}], ";"}], "\n", 
 RowBox[{"Clear", "[", "ccmodel", "]"}], "\n", 
 RowBox[{
  RowBox[{"fit", "[", 
   RowBox[{"ccdata", ",", "ccmodel", ",", "51"}], "]"}], ";"}], "\n", 
 RowBox[{
  RowBox[{"Clear", "[", 
   RowBox[{
   "wrfitcc", ",", "gfitcc", ",", "areafitcc", ",", "cfitcc", ",", "dfitcc", 
    ",", "sfitcc", ",", "s2fitcc"}], "]"}], ";"}], "\n", 
 RowBox[{
  RowBox[{"store", "[", 
   RowBox[{"wr", ",", "wrfitcc", ",", "ccmodel", ",", "pT"}], "]"}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"store", "[", 
   RowBox[{"\[CapitalGamma]", ",", "gfitcc", ",", "ccmodel", ",", "pT"}], 
   "]"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"store", "[", 
   RowBox[{"const", ",", "cfitcc", ",", "ccmodel", ",", "pT"}], "]"}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"store", "[", 
   RowBox[{"\[Delta]bg", ",", "dfitcc", ",", "ccmodel", ",", "pT"}], "]"}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"store", "[", 
   RowBox[{"shift", ",", "sfitcc", ",", "ccmodel", ",", "pT"}], "]"}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"store", "[", 
   RowBox[{"shift2", ",", "s2fitcc", ",", "ccmodel", ",", "pT"}], "]"}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"storearea", "[", 
   RowBox[{"areafitcc", ",", "ccmodel", ",", "pT"}], "]"}], ";"}]}], "Input",
 CellChangeTimes->{{3.758212605017861*^9, 3.7582126082721233`*^9}, {
   3.758212689544549*^9, 3.75821269125163*^9}, {3.758212915864624*^9, 
   3.758212972172599*^9}, {3.758213047374237*^9, 3.758213047694623*^9}, {
   3.7582130788043833`*^9, 3.758213164924611*^9}, {3.758400362388665*^9, 
   3.758400362585599*^9}, {3.758401132221274*^9, 3.758401167138772*^9}, {
   3.758481983104192*^9, 3.7584819890367203`*^9}, {3.758482201865794*^9, 
   3.7584822019641123`*^9}, 3.7589764851050053`*^9}],

Cell[BoxData[{
 RowBox[{
  RowBox[{"pT", "=", "25"}], ";"}], "\n", 
 RowBox[{
  RowBox[{"Do", "[", 
   RowBox[{
    RowBox[{
     RowBox[{
      RowBox[{"ccdata", "[", "i", "]"}], "=", 
      RowBox[{"Import", "[", 
       RowBox[{"\"\<cc/perp/pT\>\"", "<>", 
        RowBox[{"ToString", "[", "pT", "]"}], "<>", "\"\</swccpT\>\"", "<>", 
        RowBox[{"ToString", "[", "pT", "]"}], "<>", "\"\<ang\>\"", "<>", 
        RowBox[{"ToString", "[", "i", "]"}], "<>", 
        "\"\<spectraJpsi.dat\>\""}], "]"}]}], ";"}], ",", 
    RowBox[{"{", 
     RowBox[{"i", ",", "51"}], "}"}]}], "]"}], ";"}], "\n", 
 RowBox[{"Clear", "[", "ccmodel", "]"}], "\n", 
 RowBox[{
  RowBox[{"fit", "[", 
   RowBox[{"ccdata", ",", "ccmodel", ",", "51"}], "]"}], ";"}], "\n", 
 RowBox[{
  RowBox[{"Clear", "[", 
   RowBox[{
   "wrfitcc", ",", "gfitcc", ",", "areafitcc", ",", "cfitcc", ",", "dfitcc", 
    ",", "sfitcc", ",", "s2fitcc"}], "]"}], ";"}], "\n", 
 RowBox[{
  RowBox[{"store", "[", 
   RowBox[{"wr", ",", "wrfitcc", ",", "ccmodel", ",", "pT"}], "]"}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"store", "[", 
   RowBox[{"\[CapitalGamma]", ",", "gfitcc", ",", "ccmodel", ",", "pT"}], 
   "]"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"store", "[", 
   RowBox[{"const", ",", "cfitcc", ",", "ccmodel", ",", "pT"}], "]"}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"store", "[", 
   RowBox[{"\[Delta]bg", ",", "dfitcc", ",", "ccmodel", ",", "pT"}], "]"}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"store", "[", 
   RowBox[{"shift", ",", "sfitcc", ",", "ccmodel", ",", "pT"}], "]"}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"store", "[", 
   RowBox[{"shift2", ",", "s2fitcc", ",", "ccmodel", ",", "pT"}], "]"}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"storearea", "[", 
   RowBox[{"areafitcc", ",", "ccmodel", ",", "pT"}], "]"}], ";"}]}], "Input",
 CellChangeTimes->{{3.758212605017861*^9, 3.7582126082721233`*^9}, {
   3.758212689544549*^9, 3.75821269125163*^9}, {3.758212915864624*^9, 
   3.758212972172599*^9}, {3.758213047374237*^9, 3.758213047694623*^9}, {
   3.7582130788043833`*^9, 3.758213164924611*^9}, {3.758400362388665*^9, 
   3.758400362585599*^9}, {3.758401132221274*^9, 3.758401167138772*^9}, {
   3.758481983104192*^9, 3.7584819890367203`*^9}, {3.7584822073006697`*^9, 
   3.758482207838153*^9}, 3.758976485115325*^9}]
}, Closed]],

Cell[CellGroupData[{

Cell["View results (old)", "Subsection",
 CellChangeTimes->{{3.733198514173415*^9, 3.7331985248017063`*^9}, {
  3.758665621944891*^9, 3.758665623871488*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"Do", "[", 
   RowBox[{
    RowBox[{
     RowBox[{
      RowBox[{"ccdata", "[", "i", "]"}], "=", 
      RowBox[{"Import", "[", 
       RowBox[{"\"\<cc/perp/pT\>\"", "<>", 
        RowBox[{"ToString", "[", "pT", "]"}], "<>", "\"\</swccpT\>\"", "<>", 
        RowBox[{"ToString", "[", "pT", "]"}], "<>", "\"\<ang\>\"", "<>", 
        RowBox[{"ToString", "[", "i", "]"}], "<>", 
        "\"\<spectraJpsi.dat\>\""}], "]"}]}], ";"}], ",", 
    RowBox[{"{", 
     RowBox[{"i", ",", "51"}], "}"}]}], "]"}], ";"}]], "Input",
 CellChangeTimes->{3.758976485125208*^9}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Block", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{"i", "=", "5"}], ",", 
     RowBox[{"ii", "=", "2"}]}], "}"}], ",", 
   RowBox[{"Show", "[", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"ListPlot", "[", 
       RowBox[{
        RowBox[{"ccdata", "[", "i", "]"}], ",", 
        RowBox[{"Joined", "\[Rule]", "True"}]}], "]"}], ",", 
      RowBox[{"Plot", "[", 
       RowBox[{
        RowBox[{"BW", "[", 
         RowBox[{"x", ",", 
          RowBox[{"wrfitcc", "[", 
           RowBox[{"[", 
            RowBox[{"i", ",", "ii"}], "]"}], "]"}], ",", 
          RowBox[{"gfitcc", "[", 
           RowBox[{"[", 
            RowBox[{"i", ",", "ii"}], "]"}], "]"}], ",", 
          RowBox[{"dfitcc", "[", 
           RowBox[{"[", 
            RowBox[{"i", ",", "ii"}], "]"}], "]"}], ",", 
          RowBox[{"cfitcc", "[", 
           RowBox[{"[", 
            RowBox[{"i", ",", "ii"}], "]"}], "]"}], ",", 
          RowBox[{"sfitcc", "[", 
           RowBox[{"[", 
            RowBox[{"i", ",", "ii"}], "]"}], "]"}], ",", 
          RowBox[{"s2fitcc", "[", 
           RowBox[{"[", 
            RowBox[{"i", ",", "ii"}], "]"}], "]"}]}], "]"}], ",", 
        RowBox[{"{", 
         RowBox[{"x", ",", 
          RowBox[{"0.7", 
           RowBox[{"wrfitcc", "[", 
            RowBox[{"[", 
             RowBox[{"i", ",", "ii"}], "]"}], "]"}]}], ",", 
          RowBox[{"1.3", 
           RowBox[{"wrfitcc", "[", 
            RowBox[{"[", 
             RowBox[{"i", ",", "ii"}], "]"}], "]"}]}]}], "}"}], ",", 
        RowBox[{"PlotStyle", "\[Rule]", 
         RowBox[{"{", 
          RowBox[{"Red", ",", "Dashed"}], "}"}]}], ",", 
        RowBox[{"PlotRange", "\[Rule]", "All"}]}], "]"}], ",", 
      RowBox[{"Plot", "[", 
       RowBox[{
        RowBox[{"BWi", "[", 
         RowBox[{"x", ",", 
          RowBox[{"wrfitcc", "[", 
           RowBox[{"[", 
            RowBox[{"i", ",", "ii"}], "]"}], "]"}], ",", 
          RowBox[{"gfitcc", "[", 
           RowBox[{"[", 
            RowBox[{"i", ",", "ii"}], "]"}], "]"}], ",", 
          RowBox[{"cfitcc", "[", 
           RowBox[{"[", 
            RowBox[{"i", ",", "ii"}], "]"}], "]"}]}], "]"}], ",", 
        RowBox[{"{", 
         RowBox[{"x", ",", 
          RowBox[{"0.7", 
           RowBox[{"wrfitcc", "[", 
            RowBox[{"[", 
             RowBox[{"i", ",", "ii"}], "]"}], "]"}]}], ",", 
          RowBox[{"1.3", 
           RowBox[{"wrfitcc", "[", 
            RowBox[{"[", 
             RowBox[{"i", ",", "ii"}], "]"}], "]"}]}]}], "}"}], ",", 
        RowBox[{"PlotStyle", "\[Rule]", 
         RowBox[{"{", 
          RowBox[{"Green", ",", "Dashed"}], "}"}]}], ",", 
        RowBox[{"PlotRange", "\[Rule]", "All"}]}], "]"}]}], "}"}], "]"}]}], 
  "]"}]], "Input",
 CellChangeTimes->{{3.727702145749645*^9, 3.727702164858941*^9}, {
   3.727786599290174*^9, 3.7277866016307077`*^9}, {3.727786661496475*^9, 
   3.727786790870613*^9}, {3.727786832271*^9, 3.7277868362431602`*^9}, {
   3.727846443680401*^9, 3.727846455749556*^9}, {3.728063498543194*^9, 
   3.7280635009451942`*^9}, {3.72925714204338*^9, 3.729257175627865*^9}, {
   3.7301863648013363`*^9, 3.730186368349718*^9}, {3.733474578105546*^9, 
   3.733474613225963*^9}, {3.748240543336813*^9, 3.748240558602428*^9}, 
   3.758540112190514*^9, {3.7585404653772697`*^9, 3.7585404794290113`*^9}, {
   3.758540575319294*^9, 3.758540577800462*^9}, {3.75854068526296*^9, 
   3.75854071749393*^9}}],

Cell[BoxData[
 GraphicsBox[{{{}, {{}, {}, 
     {RGBColor[0.368417, 0.506779, 0.709798], PointSize[0.002777777777777778],
       AbsoluteThickness[1.6], LineBox[CompressedData["
1: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
1Rlzkk855u1zDycLHjLgblailFgFPt/+u99/P2FAeVunfBZ669CZ48YNDCiZ
u3Lzntskgkln7M1tYUCh1rE9HejliwfdfrUzIN/zsvGZO9jvsu37rLsZkJvW
f2T+XRKx4SDzS2EvA7KeK7vnoPcNGzDnf2JAxj/PAN1KzN86WYUnhxiQsq2Q
04VeELjk8NNRBiS5jsX53cPvC+7fv/kHA+KStl9acB/nn6HqcMJvBkTVnSvM
RTM2GsD4PwaE/bp7Dx6QiKTpbbLH5jKBt+lP/Wu0xwb3u4/FmcA6Rrw6W4X9
x/ZBs7oUExix3M8LH+LnD+26krWUCcHVtZNX0QFjih2LVjEhYGI+ee8j3Het
PYroCkzwXW+6+A06uUdceXw9E7yPxK05V43Pa8zc6bOJCR7hbZulajCfq9T/
6lRngtu9ZToF6Ceh1on2O5ng9M3ugMFjrN9HIqGde5jgsCbD9h36hMB/l7Ue
E2wPv3cPfkIilj0XK2/ezwQrrmLgkqfYv2xyQg6YMMG83J17A636yvVr02Em
mAzkx++vxX4WJvvy6BEmGK34duk9urK34EGPAxMMDqoX0epIRErQW7KHCxMI
5tn7Ms9wn/SS0Bg5yYQ9xRUNRWjBqqJhtg8TtD78emVUj+9LLExn4VkmbJfW
HehD9znJNaUFM2HrPtYPRgOJOP3t3v0tIUzYFPSYLNuI+eFxfvIjLhM25Isu
KUHHFrHP2oYzQbHHWOFgE9a3qsXsrxgmrFkYveUT2snHMjD6PBNWwQud0Ock
ImzUwko1lQmyftIHVzRjXlq9/+azS0xYkmNjV4ZOY48HncxlwqKOiydNW0hE
19Hwj3OvM0Fc7G3gANplt5hiyU0miO5S4LFfYH5ONgqyrmAC6ZRrwqqXuK+w
njz5e48Jf9PzLpejuZ7iW3KrmfC7ebDIrBXnyQ7Wdos6JkyJbH4wiO415I+J
PmfCuIZvI7cN84O1dWhFKxNG3Mpey7Vjvuv68vHkKyYMJU8N3EZvEBzeuvwd
Ez4/2zV1uAP3catV7e39TOj7zaAMo5lNagfjBpnwTu3REkEnzofup6H7R5nQ
7Uheq9CF9/Hj342iP5jQGbd/ayW64SyZ9OQ3E1prwnWtXpEI9eSP7UKREGie
bDo4gtas/jnPRDQEGpSl7MNeYx5XEZFcIBECtbaWHuu6cT8f0Z3TtjgEaiKS
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
NEi5zTBddsDnfUXN3NwzGkQL+I/NY7s7UFJu+UeD0PQd0ScP8HxyCLALjIwG
gQP5cNiRhFyn1VeFUqOB99yPS+XY6XWvbgwVRMNRJ4mb6k64Hz6eY3OviQaO
LKc7i9ictvEi4q+jgfVdtfNTZ5z3uFa0fg5Fw8E9O96cD3H+tXkSV/ohGvbD
mbBKbDPGXYPei9Gwx/ZpisYjEtqgzjS6/isaaFNeFy1h6wZN2IlRxQBplK7R
2wXXR7yYJwtDDFCSL/dxuZJQxiFmazJbDGyffvW+Gvt9eIPeL94Y2Lgzsqjl
RkIsoncU10RjYC2W5c8y9pO1cwLr8jGw0qdLfvGYhEgzcmyUF2JgiSL+4DF3
ErKU2EvPrB0D82LTx+qwDyWrzokZx8CMKY/YdQ9c79/2n755Pwamwi3QD+y3
UJD47FEMvO/Ivuznie/XV+UT1d4xML757SbvE1y/XHUnN4NjYOSkqFUDdplu
4w2ZhBgY0Hd4eMML593ioqTnOTHQE1Tx/Cd21Dd62/cVMdDRvBkW8BT3R0PT
iTOtMdC6Jp/K/wzn3wqa+fiBGGjk8yxuwlaSfavEOBkDtTqtjXreuL7JhyR8
FmKg0pfcv469tKh3bvevGCitvTAZ+JyEVgoZ/gRTxULhcsDXEz54fjz1jeDb
Gwu5XIN/WrA1HBaP1LHHQoYG0y79F/j9rn5c0j8eCylPrzNvYB8S1GQlS8ZC
Ynk0T7Avnu/nN/+rORMLMfOTYif9SCjCbYTH6XIsRLAdPdOOrXwpdlVBLxZC
LppeMfQnISfTVkpay1gIfJxxaxPb5EWK1QeHWPArXLQKDcDzP5n5S71nLDz/
dOqR0Eu8jy4fFMx4GQteTLY+HdhN7r090TGx4K5cGm4ciPcvKevU8MxYeOT8
O3ULu51LKSi8LBYcs2VLwoNwPXzJc0hujgX7925NIq9I6PeTHvba/li4z9DU
34W9ri+zZ+R9LNxBNB9Mg3Geuv6q6O9CLJjbqSztYK+oO/uc/B0Lxqm+m5Eh
eF8RFfEzpIkD/Te9u8RD8TzM8JlK3x8Hurv2s/Rit/Kut3znjANtWS1eizAS
OmVTwqpyMg407kaIU4bjfh3BWhUnEweX49+eicHuebBwjVYlDi4McKhLRuB9
tpzR3kErDpSpjPT7senVssVXjeJAUSL17u1IXP8Ku8zuW8eBgvncI+ooEvr1
QY5M5RYHspECL+KwAx6aL4b6xoFU170I6Wj8/ehQoXRkHIhtFaYNYptwqPe9
S4sDIaG1EqsYvH903soJKImDE4bSzaRYvB85UzZfaIoD3uBHAwnYHLLHfu/t
jwPu1roPMnG4n6ourYy/jwOOXxTfhrE3TD5LFi/GAevxs3/vxePzm6E2Dd+I
g4O6z2l3JeD7Cc+/PSbiYb9/F0sydqLu7buuTPGwp34P33+JOK8y2Px04I4H
2hV1iTfYHf+xl7uJxAOJO1TRJomERvw+2/orxAOl1pg6XTIJXfs7BgUX42Hr
GZtBKjbj/qHdw7rx8Kfi1j2FFBJiyEzVpLkdD+sLiS7j2B9tclUUnOJhhX3m
hV0q7pfaw1Vez+Jh6RJ/JH0aCYX/mf33LiQe5t3vpKdjGwdYK4smx8NMUV4p
Ssd5909E6cvCeJj6vNL8FjtWtmfzX308vD8oMeiQQUInS6cmH/bGw7iK00eG
TBIao/jHu/kuHkYeVn/LxHZcdq/yWoyHgZztv4pZ/+8HLIbsf+KhZxLRTWKX
q2rtriMnQMfep4ecsknI7aegjilzArSeec23P4eEejmVPnLyJkCjPZ1kDjbv
8sfAafEEqE27pHQuF/dT90z+LMUEqBwLuvoR+1itxq1HVxOglHbE4GEeCdHZ
hc3oGSZAoRzL/QP5JPT8/kS6knUC5NzTdc3DduF2DpV9nACZCXG+KgV4/h8V
F5ILSIDUwanIaeyeVf13irEJkEDNk+FSiPPl12Onb+UkQIykRdnBIhKCAvlD
j6oTIMIiu6UA20OjmCq9MwFCor4Nni8mIfO848FT4wkQ2C0y9RmbIoun68h8
Avht2y+7lZDQ1OnAAbPfCfBcuGKLpRTfn+itYH3qRPAy2qQrxlbacHi3b3ci
uIfIs14sI6GiOrnHHYyJ4NLmwf8FW1UyedSTLRGcfrdIepTjfLZo+FCZOxHs
TpDPslWQ0LxGedMegUS4r3dBoxQ7pHanbkI0EawCAgwvV+I8Lq5lkieTCOYN
A/fnsXMuU/1+diYRjH8ccHtSRUJGVVHsxucTQf/Ydb/D1TifSkz4nb2aCLrX
oqPKsU/72oPwjUTQfj6ZoV6D+/UfEVV2o0TQqOIqX8RW06uqZLydCJe/mrQ+
rcXPC7w1Q2+bCBc4MoY463A+u5q/tudhIihfWZyqxJa3VoYDnomg6Hnqu0Y9
7p887R2cLxJBocRmewlbYl5LXvxVIsjOlux+3oD33zY2A/WoRJBi+c16tJGE
zj7Jmr6TlAhi52WP12C7etCcDshKBCEXN6lrTSRUkM3zoLwoEQTyGs9+x/4y
jLznqhKB7yO15otmPF8c7J5xNSfC0f0qRsdacN7TumSj25UIHEq+1nXYAT/L
WyKHEoHtQa/b9VY8n7/YcX9+mwgHM/b5/8A2ePOhROJzIuyf0Iz2ayMh6i+I
5unXRNizOyKTtx3PoySnO9M/E4FW/m15A/bk++hP/20lAsmao+3GaxIynVRv
zaRJAsokw+Gf2De5Lncx70mC7aGU6YAOvA88aaZ7fjAJ/tDMfefvxPtT7DlF
as4kWJcS2GnCVto7t+TJlwQ/LO/R3+zCeXPoScou4ST4Fl3I9gtbR6nycIh0
Esz3/Dwe1I33MxkVJX6UBDM7UtICPThfSgWpN6kmwZTIo3Ot2N4y3QoGV5Pg
vXGdpn4v3meKQ3codZNgPJTCeAPba/qOS4lxEoy0K9kE9+H5tNXRaGaVBAMb
3o9P9pPQO8kj5ZwOSdAj0OXfjt3yhRT9yTUJOm7uiTEcwP0lfbQq5VkStL5U
z9rE/rj5dcrmZRI0NoZUhA7i+cElJaIckQS1q2/ahIbw+11MMONOTIJKHraR
DuwpRp9VqqwkKNW+9cl4mIRoqKrMvhYlQaFP4soW9oZq/p/x6iTIrf68Ez6C
88/e9pLuliTIXOLbIzqK993k/5g7e5IglfMOeze29/7S9u7RJEhUzzth9gbX
1yFHrpEPSRD7ZEX6HzZr3ubhhbkkiCgVV44aw/3W/lPX35UkCPniqCU+TkLn
r/a8PLyZBIGHqo17sQNaxZcVqJPB78K2jcUECYkVjhnfpU+G567InfItvg8O
2WrxB5PBK98rIAb74+ucz285k8F9qj1G8h2eh5a/d7MfTwYXRrrsfmxqpb6/
xqLJ4HT2UuXt93j+tTfcKpJNBnvHoHbqSfz808vUdGeTwTpzeCQOm82cOs3k
UjJYvWX+LP2BhKTDt3K7tJPBnF73xyD2m0y/JgnDZDBRiPtn9RHnA/b02Nzb
yaBvM7WHmMLzh5mazGufDLrJxw4nYmfqnT2Z6poM2iPmArLTJOT78H6CkHcy
aBDZp0ewhR8EmNYEJsPl09+U73/C/TJVIvV6VDJcuCNybddn/PcDzgqsJyeD
cqy9STJ2WPLJw9G5yaDYV2773wwJHSyaElIuTwYFik33N9gifH2bWw3JICsm
/9JmloQEf7rrV3Umg5SpRyzdF3zfj872Px5OBrHwluxU7Ok7F9VUJpNBqIOo
UpjD+d7jnhzHXDIIbJ5/PY5dPWLQubmSDHwnA0bt5vH8/PlN5N1mMnDrD3ym
XyChUgMrg2aaFOAMOrCajl3nzHy+lCEF2Jq1Kc4sktBd5wPSBYdS4OBaFMM7
7NGprLJS7hTYzzd5+MFX3P9UdS/XnkyBPTpcgnuXSOjZoJV9t1QK0PqayGRh
d78JsJtFKUCqTVdR+ob3A/feErJaClAuL1ybxE6Pcp4XvpYC20dOmTot4/1p
ZuuUgUEK/LlqY7f/O64P93Ge6NspsO5V4pGDbRszfeqNfQr8KPv18twKnt8f
lou5H6fAtzmZuI/YJyT2OTv6pMA8q1vOwx94Xk8M6XYFp8CsWmPVgVUSmjh7
el0wLgWm3ag78rDLhFMfhWSkwPsC5TcqP/H7OnBdIIpTYHz6xcw0trEydezj
2hQYOdC76rKGf390ItW/9hQYOLePknmdhDozXrm8GEyBHifNvYXYyr4vc7je
p0BHVjjHhV8kxP1nvbz6Swq0vpsQnMH+rigWfOtHCjTu4ZB9/Bv/fSMtVdqt
FKgFQ9VDGyTkd3jAqolIhUrbFO1ibFZbmadO+1OhNOWL6cU/+P6L35JQPJwK
haMn7L9gl/kd89vDnwq55HueHpu4Xrx0Bj+LpkKmTGEg21+cB/SPVnf8lwqp
Vj/jSrEXjxf756qkQmKcVO7lLZxv1JVvJGmkQmz/w+p57ImV6ZKIW6kQQVnX
8WQb5/0lFYMwy1QIFacYO7yD85Rr1FyCfSoEmSnNlmPzPqESKX2cCn4R3j/V
/+Hfx13AN/IiFZ53dlJ+xX4uPNP8KzQVvP7S73tGQSD9EQlrnsRUcD+lznmE
kkAVBmuKN3NSwcUg5GQVtuM7raWk8lRwevVGVpOKQKK7JI7ONKWCfQvr+W/Y
XtWnCk73poL1+s3rz6kJ9L1ElSV8PBWs+BPNjtIQqJEIVqaYSQWLG5/ta7At
uieH731PBRM/vifXSASKm9h6MLWZCvp1t4O+Y3t/vy9vTqSB7vfc+BcEgaRt
9ucs70+D60dXco+RCdS9z6L8MUcaaGiK19Rh35LuOs15Ig0uP3PsvL6LQL31
v8bbJdLgQkXV2A/slZHZj44oDZQXtmb9aAnUc3u7VPhiGiiyozVeOgLBf5yF
q9fTQOGSF1UjdqL7la5akzSQdW/fp7ubQLGiR6tCrdNAqoj2yBr20z1PYm1d
0kDs88VTL+kJJOlo0nfzeRoIHQySO76HQMIxfQNXQtJAQGX4fDO22nh7/aWE
NOB7yKxzk4FAhV/4zK/lpAF3zg3zX9j0eoUnTSrSgHMy1iFoL4EGtJu93VrS
gG3v1BOBfQQq2KXimNafBsxnjr1qxWb1YBIeeJcGjPbmCfr7CXQ+Q7ibbj4N
9qRl5W1g72t0ilNfSwPasaWaYEYCbdQmGyRSpANBK9J18gCBTLq3/dbo04FS
zn68HXtDVGRFkzUdtu+WfzFkIlA6mXhRx5sOf+L/rG1iX7V7UCYtlg7rA/9R
hx0kUKrItH2FQjr8oPLYL8xMoNoFLq+zaunwTaLlSCe2duqDn2+up8OCOSFk
wkKgetklSRfTdJiNPP/fNrbQf4/b+W3TYarL/0LEIQIFi1KXj7mlw+RWv44o
K4G2P74lwnzTYULogEU39g8LAS7jiHQYMdR+YMZGIF+W75viqekwEBzl9Q+b
RuBz+qGidOhpff8qip1AEx5y/Tt16dDx60ii+GECHYkeClzrSofW4yb5vdiy
qztWP8fSoVE3vdaCg0DF12W3/82kQ63/QhclJ4GC/lvawZ0XKutPTsRgn+0/
Viz9Lx1KV6znJI8QaFSSYdWcPgMKuUvW+7G9AjgyolgzIFfrF/UdLgI5dyR8
esuXAZneMow0R3F9fTzGLSSRAamVrlzx2H/OM1/xPJMBiYsNQqe5CXTcwol/
4XIGxB6mlh/C9k2Ndte9mQGRl5XV7h4j0G/TIanh2xkQ6vHiBsFDoNL9o2+0
nDIgsLjHIhF7Q/rW9sLTDPCf2esoy0ugJ3J+U8+CM8CHWfPpCPZ29h8h4cQM
8FIND77PR6CvY/QH5/IywP3RROIufgJ10WeZZ9VkgEvu4YJk7NVQBjqbzgxw
+mBQ999xAp2Zcqq+PJYB9vtSut9ga98BE6HZDLBW/DJhcwK/zxnfBc6fGWDl
cGKeTgDfl8g9Lw5TZoJF+t1fqdhqV60fcu/NBJPxAhoQJPB+5cEsypEJBnQ/
GSewFW9IUGsKZoLef1JH7U8SiMxwQ+CZTCZo338ovOcU/j5JrcmVKpmgkVgr
n4FdJOJ/jkI7E64M/VM7I0SgF5/bM8+bZsIFGiXdd9ixdpq0+XaZoCzlbflA
GN8PX8rXTJ6ZoGjZ6bhXhEBU/T4HfAIzQSGa/lkW9uJxygLG+EyQ7bkSoiRK
oHD6803xuZkgtROcNIn94q8mv2RNJoiJvClwEsP3l/MI6X1nJggZs9bvFydQ
hAPj1+jxTBAIvdmTgz2Oditcn8sEvvaEt+ckCHTtGwPziV+ZwL3xaf4jdrEc
RQ5BygJOAb7fDyVxv5D878jXA1nAdvM2iUmKQEwv5NanubOA+WXugXxss7Fz
Xp9Fs4Cx8ftRVWkC3bjo9OQXygKGVTGRT9j/eYkY7lfPAjoeRwXX0wQq40kN
kDPIApJ21UVmGfx9s57+cryfBZQ+W7qF2NU+NoW1blmwXQW3L8ji/stmZbEv
IAv+fH3iNINNc3eM2iY2C9Y52p89lsPnYWMs8z4nC35coQ099B+B5rrer+jV
ZME3z4vJxdgiHbOBH7qyYKEksPCiPK7Pv3pRD95mwezsUP0X7CedDVaHF7Ng
moW510MBf5/66pb+P1kwef7GOzYgkC1zEnUgbTaMu8QulGI7u2+T9VmzYSTv
4+/LiEB5r87ky53IhsGP3MQCtnRYVdYxmWzo2W/O5HUG1/Nto0dc57OhQymL
m0MR1/sg8/4TN7Kh9cGSSAV23iH+87K3s6ExQxiuKhFo9tffuJsPs6F2wu7S
V2xL+1ssAS+yoXJ3ud6zswRSUaHgHo/KhlL5P7ePnCPQS3UuVY7sbCi0/s+5
Cruk0/LT4+psyE1y99ZUJpBBYjfdXFc2ZA43h37DviYYynj7XTakkoiU5yoE
4rDrSV37mg2J0ueLjqoS6F+Y5r7ArWyIve3fUIPtHnLmm8SeHIiM6e+9dh7P
37ip1QWOHAjtZXz/HftN6E+PIqEcCPp3bfHFBTxvKg5wPIcc8BeN2jimRiDj
1zYK1uo54GPynqjHvqogctTEKAe8wo4c1LmI+5Xau3UjuxzweG18bBW7K6ei
wt0rB1z+pIn6XyLQZGfyaGxoDjgJLgDfZQL9LMrh70vLAftbJy83YiNVFsZ9
FTlgHWh9U/cKgd7u7GrU78gBq6biO2vYKqpHpVsncsDi57rzS3UCPdO2sJD6
mgMmvDLPj18lkOqKS2nJVg4YXHcNa8bWiKw5ocSQC3ovGlJuauD58NaubPFI
LlyvoSr+hf05X8I3RjQXNL+dawzSJJCRFplOXykXLh950SegReD9X4jixLVc
uHC1530rtpYKd+g+i1xQ9tr7Vf8agW72duylfpgLimUafzawl2yzfhB+uaAw
F0YO0SbQc6fofLa4XJBlnTh46jqB6GyNjOULckFK7TDPa+z0DxtGDk25IOZm
IGakQ6D9ZLHTjcO5IFSQjP5ie81lPjv4JRcEpmcvh90gkIxSCPnpRi7wHThx
S1gXf89Vt2u/6fKA+9xdq07sXjH/xCccecDpVPDQRI9Acmq8vMdE8oAta/X5
Nna/Vdpcv2IeML+TDI+4SSBSUOCAz7U8YNzzMFX0Fs4jLzLUdCzzgAFqi7ux
u1fSehVd8oDO9l+jmT6B/OKEZCRe5gGRotj/D/vCPy5zmaQ8oBp9NhllgM+T
u32/Zmke7BCdX8UNCRS9Nd3p9DoP/pym3+zFtpFq1S57mwfrd67ssjQiUIg0
vyDlch78iA1mpjLGvwe+MJtR5sO3vlGeWGyaWLvMcaZ8WKBgFZcyIVDK4Dsn
3eP5MCt288wA9uO6X/+tyOXDtGnClTumBGKwabSLvZIPk+GfbtGY4X73Xu6x
hkk+THTw3o3/v0XF2I475cPopuWj0+a43/Y46tH65cPgyVyfIWzfu7xim/H5
0KP/PfyuBYH4rbLWqUvyoTNILI2wJBCnTZLAodf50Nr8oCQRe+davq3au3xo
XKtskr1NoFO+1L3e3/Ohlm+rfwTbuOjo7vfUBVCpAx/u38HzbtLU99KhAij1
fbK0ywrnk8NfTRtOFkBhbdtmMvbQIvm19pkCyF3eRSt/l0Dxl69z/bhWAJlc
F1nGsJOqadzy7xRAqkYgr+09/D6POJWc3Asg8emQ+O77BIpKP0W+HFoAseUH
FdOwJV8dA+WsAoic11EHawLdXz3vfqG+AELZYvUnsL0i/ojeHy6AoIsf79rb
4PPbZCUlzBeA/2Nulz22BKqx7fv5cbsAfArNXmRgG2VP50TTFsLTT5kRZ+wI
xDNAPaXBVAgeTEtp77Cj+8p+HDxSCC7KwqUP7PH7TpQkfTxRCM7Ods17HXAe
tj0zVSZRCA7ZZQNZ2AecMqJCoBCs3298UHqA82mf6JDrhUKwYvjv2yS2s3G3
hsO1QrBA7n+dHAk0VfMuwdGwEEzsmmkZnXD9FC3VeFkVgkEq6VAu9o7K/Ygo
x0LQe6PKp+xMoITxQLlaz0K4vstfYgo7NjZHes6/EDRl+xUfPSRQn++7MbbI
Qrhyl/Eq0yMCHSSHzxikFIJa/DWDfOyfl0+z5OYXgspA5D1VFwKxyLEwkasL
QZHqvcsnbNsh7Zu32wpBQeKIr6srnu9jhz3HBgpB1tw4ktmNQHjVrtN5XwhS
kWnphdh0Ev5+o3OFINY1X3rhMd4X/pFozH4WgtCWYMsM9pHPIy6U/wpBQMh6
8LE7gbhOHNLMoSsCPsPij4c8CNQRv9N8i7kIuIPXvxVj17pMv+TmLgLO1tNb
Fz0J1LJ468DXU0XA9suFbg5bs9aotk2mCJiPNxzyfEKgfC99w4xzRcCoS8XP
7kWgew4FH4OvFgGD/znJMmzQ2Z5+easI6Op9lK48JRDtTm9y6O0iIFa6ry5g
Gzw//1/6gyKg4t5r6PUMzx82zRvtnkWwralxn8Mbv89xj/rlgCLYfBbmWoHd
bbSfhye6CH5VjPtefU6g8gvWAXfTi+DHAnvUV2wTl+ue1cVF8I3dIOOZD4EE
2KWlWRqKYOFSctmRF/j/Kw7c9ugugln32ZYqbBVdG5+fY0UwXXR8SNOXQJnC
yv1OM0Uw+dlq6hv2s+0yIP8ogomDBcvP/XB9783wS9ouglGV1a2j/gQ62cCt
c4GuGAYfSu6uxf7df+P9H+Zi6M1xZtUOwPXzg26m9lgxdE7W8K9gD5npcviJ
FEPr3n+Svi9xvzPI9beSL4bGM4pneQIJVBkQ/lzjQjHU2T/TqMeW/8egduF6
MVSmdRjqBOH7cKnH4YppMZSO7bZexZ5PFbyib1sMhbRX3PxfEUihRGTT9XEx
5MoF+/EFE+h9l597ll8xZN4bjWrE7j1dXbUYWQypCYcydUPwvkBBESiSXgyJ
g3rla9hUp1Z3PS8phljqhNaXoQTyoE3jn20shkjJT0PHwwj0SGS2WbOvGEIt
eKebsWeeNSiNvCuGoCjL7zfDCXT4e/WM0UIx+HfnbP/CVipQsN78VQw+28u7
X0Xg++gX8DebpgSeCouxCUbi87B2cDdiLAEPowfH27B5Wgl3Hq4ScA2plDKI
IlDrX62/v0+VgHPb37N/sPm4Fws+yJWA/W8FzZBoAknxBdR3ny8B6xNPjE7F
4P6SxXWm63oJ3NVrs36NzanSefydWQlYBOx6bBSL5xcI8P21LwGTBjX/v9ir
/+Lcjz0pAYMfL6PD4gi0FR3tbxhUAnrHhjKF43E+fqPBmhlfAtevHazoxP64
SzdhO7cENJ/rtJkk4Ly//VLGtKYErlTFDG9js1mKNX/sLAG1rx+mIxLxfrCe
tGwyXgLKHNwrokkEOrpU1/L3SwkoXTHb6cbOZ9kISF0vAfDMpDdPxv297Ur0
dZpSkC35ykaRQiD7zJOn2Q+UgtSs0Ilo7NMcXyR+HC0FMRY7aYlUnCc//50f
EykFofNl5/qwQ13lOjuhFARcNjQt0wj06dWyRO/lUuDLkzOmSsf7ILnQ8POt
UuD++NgmFntNkjqRdK8UOPc3P5bKINACn9q4rGspsCmRAgawRX85HnT3KwXm
B6oxdzJx3tHsd30TXQqMGX5ZNFkEyl1VEFTILgWGib6KeOystk2KqqpSoNvN
2H46G+ft+ybD8p04GctfGxnCtqXkOT80XgpU1pGf7ubgfjn/j9t1vhR2Et+t
ELk4X6pxj0pslMLmEOe/RGw96/RP/8hl8IvGeI9cHoF0nK8qTrGUwapUGvso
9nTJ6uVe/jJYtpw/YZ2P58mXD7f7pctgIVrwNG0B3p/MJMU/qJTBbM995RTs
bIWqt3+vl8H0TpGWfCHuT78+bopZlsGkyLrxGLYZpxmnk3MZTBiftrUtItBF
07z6Hp8yGA11cd9dTKDL4stu4lFlMNheH5CGTfup3rIoqwx6NyhjoYRAdgdf
LP5XXQadAueyJ7CDfst4f+oqg7abPpX2pTjfqeQoBb8rg6aX3e17yvB+aRbx
TWOpDGobGUYzsAcfy26dwD2ncvXq5zPl+Ht+3XvyAEM5lPGE/XiHzbb7ivfe
I+VQqD3+70EFgajrNo24RMoh14edYV8lzgt/+o6cO1MOmdX6h7Oxe3m12Ow1
yiF1KUngbBXeB1YuQa1JOSRyzp7+UPX/flKifuBBOcSqH1dxrsZ5mZ1b/Zl3
OUQ+sbrGWIPrcUA/fm9kOYSW5pvkYgeukKRSs8oh6MsPW+VaAonRnjRXrikH
/0OSHlPYpiKXz+7qLQefC84vH9Xh/fvOcNbbD+Xw1LUmlqmeQLcLMuYaV8rB
I38nOx/b5pyyVCVVBbhOnalSbcB5zEzhSBtTBTgzPnv9Cdu7b8V5nq8CHM52
jLo24nmkd9OPW6YCbBx3zzA34f2n2HPhtloF3M28vFqInSdyTLDjVgVYvH1F
odaM59vkmzhZmwowpR9lmMV+yROW2f2kAgwUDnG4t+A8Lvnpt1FYBejZ6Amy
tuJ9J9mInzWzAq4nx8uUYBuOWeZ8rK4AzZFplUttBHo16fevobcCrhC82nPY
hULGp8qnKkDttKWpZzvu56qseyt+VoDKnRw79tc4jyn6LUwSlaAUu+xRhp0Z
vpzJwlYJ0CcaeKWDQDE198tvnaoEOYoHcQvYVbuHihtRJUiLVeZ4dRLoXaw6
pbxWJYiZ/q3i6CLQ9y+qSp0WlSAUrtBRgX1R50OdrUslCHR4vrnaTaBUqj1z
AoGVwLfZOvMVG/xPzO4kVwL3yV0/n/XgvL7J0jBXXgmc+mqUXL0EOhH9nHWl
qxLYgl7urcamPbl/lvpjJTA3D3Jo9eH7lkKRJPKzEhjXmE4uY0vyyuy4kquA
gU9H1qefQHcb5p5PsFcBnU6MKvcAvr/qCRsXRKqA8P2gXYs9QLkYNHO2Cqhq
j5ppD+L8dO9lTOiNKtj5Zmq/gr0ubrb3wv0q2DyS6ek7RKBvwlcYj3tVwa+r
XwN5hvG8pylp3BdZBateQvH12OEVxbs48qpgucw2V2cE98PtQ4XSzVWwMFda
vYptHnHa1n6sCr6wbnT4j+K83bmu1r9UBZ/U5Mb43uD7cFDhoSRVNUy6PZ5t
xLZTKP3bxFINEwVNP3XHcP/T0qUyOFUNo9M0VOvYf6TkuI8oVcPgAdV9geME
Shbi6VvQqYbec36cJyZwvyvPZZq8Xw2dTn0nW7DvGc3zf3paDW1Z++VuvSWQ
4BDJYVdMNTS90zr/GzuybuG+SlE11O2JvP7qHYE8H7Z0xbyuhip4Zyb4nkAj
s+lCez9UQ5ktp0Mbtv3Yja/pa9VQmGL0xGCSQNd9KKfQ7hrIHU0N+oPNlvN7
z27uGsgkz8eHfMD73+782C+nayBVRjDv1EcCHXpMHP54pQYSre7XvMbuEAul
XjOvgdi4ok6jKQKFlSI/gcc1ENm/NvZ36v/7Tb3bw7AaCKU8/SVsGs+7dHXP
T7k1ECTusib8Ce+/XAJLlq014G9WT9WFvf1wx57xfQ34RFDuN/2M5++5Zu+x
nzXwtPPskR3s4LstWcW7a8Hj7/NTkTME0m7qcss7Vguup7rlxGYJ5FPDLdQp
VwvOBgwXerBvym8+p9KqBYdXV3XMvxBIxK3e99rdWrBpCTWnmMPn6duc0/20
Fu6ujzlEYy+rOFMaxNWCJU6fEvP4vDK8uOjKa8H0hv6rPuyt4lKzgb5aMPBL
SrBcwPsf5z+dhrla0KubyaNaJFADV2nLa4o60PnOXxuLnbZA8K+y1oHmUasu
qa8470nbCsiI18EVzfzxAWyqTI/UvIt1oPbsx5c7S3gfT2dqOmleByoVEus0
33A/5fxA/969DpQWnKgTsL17+NKTo+oA2Gv2yyzj/tU5c8SnpA7kLu0cGcY+
9YyHJ6i3DqTdzwjd+06gG+/0oivm6kCs6Ol/5BUCSRw/bbybqh6EP7++kIT9
Oikw48HhehA8uPuG3A+cn35zoh2peuBTuWwxis2o6OtacrUeuB++emC9SiB/
rn2sD+/WA2fOiBftT9zvZHlDbZ7XA9skS3AKdtBZ/Qiv5Hpg3quXKL+G9wWp
t531dfXAeCY+fwz7rvp8COdEPTDYT9faruP8ZxndE7ZWD3RpPN27fxFo2Njk
wol9DUCMWUykYeOkdf+bYANQ0ebMwW+cz6Th5oBKA+zILq9PYLdPWz2eMWmA
zbuiNA4b+D4Jtjyk82iAX/EOjAx/8POrXOBWbAOsDlRwZWI3XUv9PlHZAMtU
f4UUNwlUJDzr8WC0ARYlFOTfYzO/mWASWm2AL+aeao5/cR6PckzxIzfCdGTr
jX1b+Lzityf2MTfChy6yZTZ2xJf47xk8jfB264Lj2W2ct6Xy+jTFG2FU6OXT
D9iZd2ra9ys2wqDhYLDzDq5/GhvKL+qN0BvMlMT4D9fjNj9zh0EjdLZeL8jF
TnZtyWu43whtv6LrlCnIqPrIC+YOt0ZoOv6hewq7ZuYR5ZJ/I9TpHn37iJKM
hj/XNB+ObYQqf9N5Jioykh0xHjHKaYSy+oxf+dj27dUV1dWNULSySHOemowu
/fwwLdLVCHncQgc+Yz/wkRUpnGiETC3bo240ZEQx86z13EIjpHqXCrOQyIhJ
aG/cn41GSKr8LV+Ezbus4lS8qwliF2UvqhFkFPUlOyrgUBNEHn6sO4t96pa6
jfPxJgi93GTpTiajJ/RCHY6nmyDIg8aJdRcZHfccvRag2gT+xSrPSrArh5o/
Veo0gc+Mb8glWjKaLhXbXrdsgqfMfUlz2BKNTPOaD5vAQ3V/oScdGX0rYG2u
edEEro+06tl3kxGjw7WEM9FN4Jwb0VOGfdRXT3Q8uwkcPrx9e4Ue/94hUamn
NU1gs49zYQGbS5ubTr2nCe4qGv322kNG0kwldwUnm8DSIZXEyUBGX5MU7x1a
bgLT9LkDldhzH5KFeP81geG4ALfGXjKK/hjXrrKvGW7S3RdZwq7+vBLw9Ggz
XP+vSMF7HxnZfubiGBBrBs37axe59pOReSR/htTZZlBPlNarxp5VfcpSea0Z
1IYe3dZiJCPr69qGqhbNoEJT77SMTfNK8sK2czMoSVF6+xwgI5vgadFG32YA
y7Oh3ExktB5bbpUZ2wxy0c+Ta7E9lpfM4vObQbqnq1D7IP69cJimsLEZxHf2
NKxgU/UOBU4ONYOwyNVeX2YyinO2OcU52wwCxqHveFjI6Hnfiqnz72bgDx1b
qMdOTBl//IO2BY61s23oHCKj5hs3z7kebgHOjVvET2yisuMfn3ALsAkkMQWw
ktHno1IHFs60APPNGW5+NjK61fDIv1GrBRhf8os2YVuS//xqsGgBhsY7oMdO
Ruhh66/eRy1At5p3aR3b4Jxz0b+AFiB4fugFHiajvBUHD5WkFqDSlrhzgoOM
3LLjfuSUtsDOcyfnFuwTO/l8Qh0tsFlV7X2Lk4yqfvBLNb1rgV9ft0N/Y3vr
5q67f2+BVY4zKa+OkNFDV81Xl6lbYfnK0yJBLlw/NPTDp1laYdHzdUMbtppm
5vYZwVb4UkLXZ3CUjAJcvjlZQCt8mr30/g92EvdWXoZmK3xgebUYwk1Gd3p2
d9BZtsLE+ZGNU8fI6LC12nMf11YYdWEhd2BXRBr68b5qhaE83YPGPPj97+03
+pjWCr0f445tYddS6OqWVLdC5/5p0XBefN5p3n0p/a3QpsSDRPjw94yMhLKZ
Vmh6YHG5C3ski+H28p9WqMvIvmnKT0YH0krcZPa2QdXEtzs72LQXX0wm87RB
2W7Rh5HHyciZh8lKULYNiuQdnoudIKOX67vMPlxpgzzrirAe7N4rSp45Zm2Q
lbSZYi6Av+f2pEuYSxukDcsXUwji+6tTeDnyVRskkjwbo7HtSt8da85og1jp
1j6Jk2SUec3VdW99G0TeJk/2YasVja17jrRBaMyFr5an8H3wOzu1/2sbBPUG
/KESIiNt/Tahesp28P83QI7D5ntjdjjoUDv4iDIxSwuTUegn1U1X4XZ4anKd
ZxDb11Ey86VyO3iERYtZieD+5Bwm3XqrHVxfTyKSKO5fObbihx+0g/MfrisJ
2D2nz4cl+LeDg6DpLRkxMhKm7OQTSW0Hm1sZVsPYWaSieYradrgbuPjwnjgZ
Xb6JHn4cbgfLplM+ZAl835nfFH772g6mP23Ck7CvbqcOHKB5DYa8palykrgf
vU1wNz38Gm5e/108it0zkp3yUeI16LyQbbKWIqMJF/cndpdeg1aNWz+tND5v
JjthcfPXcOVb42QK9se0F4XM7q9B7QjNkvxpMnLKuHSVK/I1qFxV2RzD9uo+
KKZV9BqUvHx32cmQ0XdOjpC8rtcAZb3M9LJklEribeKZeQ1yc/t407GfskeK
vN5+DdKsWuJIjowW2BO1Qlg6QFwt4sxbbEMmzR4f0Q4Qdnt7xeE/MhLyVnON
UesAwQIOfQZ5MlKpfBIzbdYB/NOGdzOxI6aVKa56dMCxA6mPFBXIKOXAPTQZ
3QGc5+Z83mP3d88JJJR1ALuTQIQj4HpTaDB4MdABzFn30vYh3B8E+z0Dv3YA
47vCkmxsT9CkeE10AsOetaazZ3A9s2YzinJ3Ah1ID3zAZjM5fbJevhMI20cf
nBXJSNAJrT260QlUKXVLjEp4Pkxazxs96ISdEYq/udjK37aL773qhE3iLK3K
WVyvgs9Fc/I64dfp5yzT2HruDyL2dXXC6p0uXpdzZLT486FU+pdOWI7dI3FQ
GZ93eOAbc+ouWOxTVyzA9iL/eazN1QVfKELVz6uQEV24bKOTfBd8EhvT/4x9
RdtWqVW3Cz6Yst1zUyUjSUf3tdPOXfA2/JYLy3ky6vbw6JwP64I3HYkvirBv
9tJXVpR0wdDm5wi1C2T0c3fjq7rBLug9yZ8+ix2zxzF343sXdOnfKXVXw/Vf
+R+bJUM3tAXlNbNeJCPmQf1DGye7oal5ZaAE2zJ0l1KdWjfUrYl/vHQJ95/V
vVL1d7qhis/p2xz2KZ+bLOsvuqFMp/qv52Uykouj6b6Y1Q1Fvtu0h6+QUQuJ
59BMRzfk1aJD5ditxlHCifPdkLXsxaeuTkZ7twamsnf1QBrXa4lF7OxTrNff
H++BJA06padXycjx2kDwmfM9EPf00lVODTKavHfNsu12D0SVBxlUYhf2T6VE
+fZA6PzwPQ1N3P/MBI/F5PRAEBuL6xK2mdOtV+M9PeB/UdfXW4uMdGGwAi33
gM/juEiua2QU1jdxdmZvLzwtnEqvxt7zsVS4XbQXPD4dK9PSJiOGuCPRA5q9
4Mpk0bKMHWm/pMnn2AvOytmDPtfx87yXDAsje8HB+dtHbh0y+uu2b+FeTS/Y
ZIss12LP8B+sNP/QC3ff229p38D1pH6AJYWyDywZKuh+YE+y+6ew8/aBKdo8
5KeL+2Xyhnyzah8Y2snz8+qR0Z/AhveJd/vgZqqHZAO2eJ2weGNQH+i8aVG6
cZOMPnk/zxMo6wOtXWSNn9jMVmtqTRN9oC57wTDgFhkFB48UZ+30wcW7Aff5
9clIylPwTeGxflCNH3Btwt78e0SV/nw/KA0c8NMzwPc5L1ck/n4/ANX1qHVs
yVcng7xD++E/ieiMQEMyesX10zSyuh+kzSfLThiRUVHQJbu/U/0gHsnV2oKd
+eJHQA/1AAh3mQzdMsb9SpxnCbEMgOBW+tRvbN0bQXndAgPAL7S4/MqEjF7H
9LF5KgzAMcNT24KmZNSW3X9JXWMAjgTb7G7HZsrpZ7piPgDsrSWshmZkJPDV
yM/80QAw//rFv4nNMhv9POnlABw4LisVak5GN073sFKlDMBeXbezQhZkpF/9
b/B5xQDQ+TdqdGBX2J8JPNEzAEQ9tZGxJRldO3Ju+NfUAFCtKFtvYWtGPG+d
Wx+AnaO+buG3yYisI8u9RTcIm5q9fiJ3cH9SNS6R4hqEX8/2RXdhP/6c/jZK
chBWKzQzTa1w/qx2dWFXG4TlhfDyHexzlIOSvYaDsMj+tjXyLs5DIt/eJjsO
wpdLHMNi93A/lCYWX/kPwid3w+ke7PzR2uWi5EH4UJTy3fw+Ga3KlSdtVA7C
289ftimsycg1s/XZvf5BeHNQgD4G+zODPSX5yyAMqdxjk7TBebOl16xlaxD6
HhYe78dek6y9VHxgCLpyfkrdtiUjntwDIy0CQ9A2KXWO2g7Xf/VB139nhqBp
7yPNOOzltXOtFjeGoP5MnZG0PX5eHYfnX5shqLKnsBnEfrQVoFzmMwRlaUqP
rRxwHvJMVEhOHIKiMW9/0gM8XwxPni+sHII82q7oBOx9DTORPweGIEtuT5aM
I+7HQw5DtxaGIO2eesUw9m2hWjdKqmFISghpu+dERsZRLucb2IYhbvDNMNmZ
jDZC1U+XiQ9DJDXbpyTsK7YV/2YuDkOY5K0VuYd43rH8fS5uPgyvLBJ3RrH1
feq/5LsPg3/UZ3qbR/h99CkDbkQNg083HzudCxkllLEcUC0Zhqfbt0+kYj9+
a8Gh3jsMHsJ50gquZGTqLSAcNDcMrkYr58axhQsc0umpRsA5RFzLzo2MjPYm
LmYfHgGHNkdj+sd4HoY8cfOWHgGb31U26dj81RcO+WiMwN0T24+RO+4/c303
Wu+NgKUeCniLbeV9S1j0xQiYBnjFOHjg82RieDaROgKGDe1ZDJ5knLlMPIoa
R+DmD9rKTOy4WM6auvcjoHPsUrviEzL61WaY9b+K6zweqv6LAzij3EmyZglZ
s4TK0kLhfAuRFBVFSZQsPR6pSEqlRXhKJBERiUolu1BJyJYoMvadse/7lt/5
/fl+zbzm3rn3fD/nnNVzf8DMPOhPE5pXOIjuLVADpr7VHZfv4P9VGHdRUasB
42zBMZ67uM+seK0tYlIDhgOWy2/RU0KtZ4hzDeitj1qj70MRh0zf4VD/GiAm
baKtaJbwU7KKr2tA65aMouc97P+Fv1qGC2tgR5q9Br8v7hvBwgOTHTWg3p2w
NxGdo99ivp2VASpCQ2YGfpj/DfTKZAkGKO1TOdOOVgoJDHPSYYD8tUsXrvnj
flgir3ziJANkEjNvCvyH/dLMNOmJFwPEW+cCktBp3wulaZEMEOXVjtx3H/dL
W0Py7hMDhHS933ai5+0f/BvWyAA+94Ks6w9wHszfFPxtgQFcr9mLhQLwfHDY
XVQWqwWO+n01KeiZ9MLqNq1aYF8d0Ln/IeZpz5vU8pO1QNP+NdaNvmD4fMXS
jVr468LP4h1IEReTNmHnmFqYjznKJRJEkWvZ3E2y+bUwXRUulo4+8vHc8Pqu
Whhf0ax48BFFDLf6RFqy18HwdknNXvS3/tziBoU66Hc8Y3A7GPv7jkuj8fvr
gBnxylzsMUVWds41ZbnUQUd535lMtHSqxgBHcB20/FW+aBpCEeMYVsn3GXXQ
oOLq3Y/m0exSjKivA8bptId3n2A9bbZZ+2OpDqpCpiPFQ7F+D8c0GUnXQ0WR
5rssdHG/oruwQT2UzXplHw6jSO7adatVneuhSDGveBDtYF/QG/aoHvKt2Bj3
nlKkzPC5r97Hesh9uLdLMhz7ecx3a93mesjO8x/PQY/ZrpkOY2uAzPFyFvMI
PB8javNbFRsgdQMP9wia9YxuhuyhBkg8emS9/zOcz0Ro0ueuNECCX6iSTCSa
dzF7OroB4nPqNb+gf7KNhPcXN8CLQTHDY1GYX4zfxzeNNkCUuM3RMfR/or3H
04UbIdz0pd395/h9b32N+N2NEHKbeVE2Guur+GN5/7lGCErfeOsr2vz9pvtX
QhohgOkcaBmD8xDPjM+F3EbwE06OmkDXsOXIFfc2wl2jiXcBL/D+u9x1/uVv
Am+v7TnysRTxVzC66qzTBF4fPEu+oa/O/62qcWqCK22fGSde4vN33TIU/KQJ
3PhYuqfQ7evESdq3JnDV050IjKPI1tjbj1WGm8D58j1WxXiKDHqxCoqINoPj
m1LuQrTR16L8o4bNYNfAKW79Cs8jV1LbnHsz2HCaKs+ipR6vKOaMawYrncc7
g19TJE/yhKN3VTNYuDIMld/g/mmdkHectQXMYtcdK0JPcD4Lj1dpAdM/Vmdt
ErB+VTfqG9q0gDF7zKV5tJ2S9h+roBYw1Oi8FfIW8/7Gb8e6vBbQOycXtPkd
9qOaBtaysRYgkU7PS9D7JfSFJGRaQavi/fvT77E+V8h7T5m1ggbLaM4iWlWE
K0jJtxW2qqmXhiZif3757EFjditssbtcq/IB993E5FH2oVZQCs3uLkN3D0Sm
G/O0gULJ4oRdEuZ72JGX5optIDMPtGX0yhw/7SC9NpBQvsMTnoz1GShYynWq
DUSti8TVU3A+sGUxKvNsA6GgVZt+oiusr0kVhLQBf77xLodUnJcW5T1nktqA
ezJwH2saRcS73Qv//dEGHHLVx56hOz4JZkn2tAG7haD9tnScJ89mDUiytQPt
P0u3SvTaXSc9zCXa4e+nyNtOGdi/RF6El+xqh/mh1iC2zP+ff9seX4t2mJaQ
iY5CqzEj2f3c22H8kH3ijo94vXkervLgdhi+k/DpN/o1//lsm+R26M8YLP0n
C+tvh8IH+Yp2YPZsqVuZjeftkkIlDLZDx7pLzGj0t30pw9EcHdCyP3NSMwfn
ffMEdeONHdBwfY72B23JZym2y7ADGElavC6fMA810v08HDqgqv2mBP0zRQK1
1W4u3OuACv6CTbFoh7GbxoxXHVCmz66l9QXfz3Va93BRBxR57DNioM3ddbbZ
9nRAfsIDC9dcijjvn/KVpndCbmOlPcdXikjqVNsobuyEnDX87nHoGR5Vy4dG
nZAJR+/o5OF+aWezSJw7IfVC+KO6/zv57QXdh52Q+LIp+uI3irzjfZkVkdwJ
b2skPnDmY/8qeORpWt0J8dSZz6/QvEsivw9Pd8ILzVdlpIAi9ycXFN6t64Ko
f/rqGtBxEc0zZtpdEB6l3ONWSJG6RlmL87Zd8KTy/BTXd8yn+ITmUp8ueMSa
xpaADnkmwBn2tgsC1Kd5dYsossPaZ3dWZRf4ndWUbEZLle8WJFNdcDfMa7NH
MUXc+rRfSop2w63Sr1q8JZiXIZs22O7uBq8F2v53aInCT6XTDt1wZdNeS/1S
inB6LhktPewGt1P+Dq1o3SlT/X8yu8H1Ubm7Zxm+/5AJSrmlG5wLuO/y/6BI
yZ8bEQ7sTHCcOhyciBZM/1tMbWGCnXxojEE59qMi28hVFkywsaz/0I4OmXq4
x+MWE6zui3259hP3DfYymt07Jlh8OfVDoIIirl+n4uJqmGA2ElufhN7gevPA
KZYeMJVi9uyrpEjMuRCWx0o9YHxk43QnOp3PnW/7sR4w9HFeceMX5pFAQ7LO
nR7Q+5jEJ/wb+/PpM6IVST1A+sYlU9FrLq9a1dTUA1qi27cYV+E8tsnHQJej
FzQOeGoz0Ry/vrzQ0OiFrTc/7/euxvsxMLGLt+8FlZRlS5E/+D5+iPv6PukF
5c49junopeFTfJOFvaAgcO/ywRrcF+YHg7one0HGoPRuL3qjjWHnIdk+kPDk
fHybQZF1Gyp0tY72geg7kxditZhH6qd2Fvn2gVBzcFImui+iUbQouw/4uRlf
TOsokrrRba3+YB9w715X3o/OqHbZeVKiHzguWTXcracIc6lGhTrSD1R8dK94
A0UYD9R9VX37ga22YzoLfWFvUu3sp374S5dbeaQR+8u5gHUnx/phfqcT/xB6
wGpz2375AZh2fi/l20SRqjD72eKTAzD+fGSLVDPm97mdtcyQARj+pabzCS01
vlL+U/kA9NMuG5u3UMQ+em4X/8pBYG7NPj6CTtk5xMqlMwgd9ouO/q04v5aw
sMd7DELLU/CQacPrF9hKjaUMQkPZbZ8v6DsSYTYtg4PAWPz++Fg7RXa3hgp6
KQxB1eZVsWPosc665p92Q1BhY5x8vwPPa5CeY8aLISgLDsyV7cT+G8LRd6p1
CIoKq8q/olUP3cmIXz8M+dMCjZZdeB6fNzt/thqGXAXLvgn0NjfV6ODIYcg5
HjkT0E2RgxZKQtLNw5D5oHWlApMiO4vr6bbiI5CaK702H/2woKzXxWYEPoye
lbbqwd9z01vY/nIE3konqEyj/cZFDeuZIxBvNqgT1EuRFx3b88MFRiH23pYD
in04j1urLqpqjMLzrIsnCtERmlnmm06MQnh/hpN1P0Vk5bZ2RN0YhSdicx6z
6JLjudYXYkfh0UGte8EDOB9drLJJKhqFAO+bIcqDOF/nPnp0YWAU/FPzY4vQ
/mCuFcgzBj5dK1NshrD+vfxPSm0fA2/BfV/n0ZvbvE/KWY2Bl+GDnyHDFDl0
yUX67e0x8Lxa2bh5BOt37Ojd+IQxcHvP11+Clo5m/Bb9PQauLeazp0fx/5ht
jWWdGwNnnnD2JbQcTePpealxcNzTtDZsjCKZRiG+ZkbjYOcmIaM6jvkuKnew
+NI42Lw6rfoDHTRLs8mJGgerung4O0ERUa96TYmScbDg6DuwjL5+ap5demIc
zLSUrcInMf+e6zm9EZ8AU5fz59SnMO+dDfTTjCbAOCb1yk+07QG2F8c9JsCw
auqewzRFtH7W3HkYNwF6KzSfsM5Q5PJ4UseJqgkg271ePkOHHD1vE8syCVqO
X1O2zWL9yLUww7dMgkYELa8SPXBtw6LaqUnYWq5f4TSH/WHV0/eHAydB5a9f
E9s8RdS5bIbF8iZBWaW8Pwotsqpgi8/YJCic5p7bsUARHZ3KunCZKdgQcpiq
Qu/34rbWPToFkkVPBJwX8byWBqdE+k+B6GydDPsS5o2PVXLKlykQUhRTi0F/
Y1Tq249PwVqrU2TnX4r43quS/yU/DdwPYw/+Qd9bol9hsZ6G1XndVi7LOC+U
Vp9tCpkGalzhHzoLnSjK/xt9sXwaaBucPWPRBu0aj2tXzMCyeZKvFiudVBLz
XQvaM7DgO/6EgS7u8l5T6jED09nb4lxpdHLBqoTjeuoMjA9cSeVgoxOl710H
+odmYHj957w49PsKGpea4iz0myxX6KzAz2dFIrQdZoF5a09zHbrd38hXM34W
OtJ8Bi6upJNVT5Mf07pmoaW7ZI6TnU42C2WGZsjMQYMQJ/01escfI+G9dnPA
2GciuJuiE/ro6Il38XNQdS14QyN6W56JKl/vHFQk1qi50+lkBcd9saNK81DW
KrybexWd7D0f7xB8fh6KeK1MEtBfkoprStLnIV83+qQuB52o0DmLeRbmIde9
459mtMlcQMLOPQuQ81r2qsdqOknb6Mjt9t8CZNY7+vFy4v2wRMh+qF6A1NXv
Q9+hP/A2zCysX4QP2iNx+mvo5LWJQYST0yK8Pa+W1ooGb47S1oxFePXC/Zsn
F52IMFWKL7EtQWx1ViU/N51wMgw+ah5egqiVi82JaHPumVa22CUI3wGDBjx0
4n5hw8fNE0sQ6nR7vh39Wamrw03/Lzx69p3uxUsnV13yjg0//QsBP+lCgnx0
0qk0GPp06C/4L++XTUabNKvfeKa7DD6qgepG/HTiYVBj1B2xDLfOVO3uQo8W
PFW7PLEM158ImN5Yi8+/zEcjS46FXCm2sBYWoJOTU52rz5ixELe5Z86paDWl
N+ff32YhrkqtV40F6SQnfv2RjBQW4nxS2p+JllIUkfBrZyGOgWfDvIXopNo4
cicXHyux+/YmXkSYTtQtiofNdFmJzcRAWjo6xM1q3QF3VmIluyX/4Do6mf/h
d03oDSuxOHbxVy/691Dcy6RGVmLmn9FyW4ROEvO8orl4aMT00+ygmCidbLlc
e/yQPo0YD+1ayERH+tYUHLtGI4YSN1cdEqMTn754xT2pNKJ3KF9oAP3pUHcR
Xz+NkDsr5XzW08nj735bc6TZiFaG4VYJcTrR+a/yjqUVG9Houb8nG33GLG/6
TygbaZQxsWpBO3mkX5WJZyP/A+vqhQs=
       "]], LineBox[CompressedData["
1:eJwU2Hk4VG8bB3BLZM5IRJaKpBCpECrK/aRSKoSSpEihKPpJthZFSVoIISmi
EIWypChCobQIZRbMMPZ9DaH3fv/q+lyzOHPOvXyfljl6WDoJ8PHxbZXl4/v/
v0P14LqkU4Sc9Mn1X/5UkHSa+/daoCs/3+ZpRwuS1ivvpnrQwxYDR4vcBElz
Dh8tuEuE9NGkttVuESSstq0yit0iBBRjzvnLCpLfMteV36L5DgvsSx8QILUm
n9ft6xEhMkrF4ccrBMj38/OM+tFntHhXnyQIkM8v9u4N6RUh5UQuzcNXgHxq
jjyi1CdCwmy+nMq3ECBlEr9PFaGb7VanB6wSIO+3Ljpv3S9CvtBvjn4SEiBv
zx2+MYjen18zeYXDT/JTE2NCB0TIkn7v+g+F/OQVo/XpikERYikSzB8Uw08y
6aq579FW6Yy0x2f5Sfpm11KbIbz+53Intu/lJykeL34Moy+s02LZruYnSY8H
m24NixCSHSj/jeInj2rX9amMiJAEm9PSZZ18JE7I528J+pi/nfmKCj4Svf4t
7dAoft/PnIb2p3wk4uSMzBh6cUoyQ/YaH7nzgKiEjYmQ0KEd3/KO85HQr0E6
auMiZN9X+5DMbXwk+N8nozJ0eJp69XxlPhKoRVkc/iNCVq6UaKkX4iOXjpna
/0Gf0G4um/r6D/zvhZ++OyFCjH8NN/4L/wfeFbXnV02KkOuvLKBs3z/wnJQO
/Yg2F/05slXuH7ivso21nxIhncUqVHDTLLgefpgyiRZcV3fX88ksOIVxciP/
ipC391RXLXWbhaMflpetnhYhBuonFhzUnoXDI841FWiHC2eeWU/NwEHl9Oaj
MyIkt2xlWmPpDOw/0Nf3F+1rf5ax99YMWNzQnL43K0J2XxtnaVvPwJ7Cs5Tm
PxFy+u38iPeKM7CzL1/2Mzq8lfdfb880bF86pXKcj0ZsHgrqv3s9DcRis+4s
OuX7gMmKq9OwKejy1lh+Gjnzs0hf3GIaNuSVWWgL0Ehe4ePxaIVp0OkQdqhG
NzIWxP3q/QuacrvcnQVpZOMZvY6ThX9BY/ftC3xzaCRT9oL0t9C/sPLij9A4
NP2YZ8pt27+wIkvyvo4Q/j3roYEB9b+gyLVO/YY+IbTmYu/fKVgiGZd3QphG
+t+xLu74OgWy2xvLBObSiOeBXWuNE6ZAykfxZzy6sEZ/KuO/KRB/doyjJ0Ij
SZ0Ole+2TYEoK6X/B/pTz2E+DdkpEJnXPe1KoxHW1Nbsxb2TMAdW04UoGtlj
JacfWjIJfP+dkUtAp7/XTLh8bxKmk3JUN9JpJFdR+XiD6yRM1I3r1qK/bXpQ
mE8mYVRYf9tpURrhy1haSZeZhMENFy3nzqOR4CdTOaV9E9DrWuLwGH3W9tq/
6fIJ6IgX9DAQQ9vrFD6Mn4DWb8YX69Es/ewzSV4TwOELvekxn0Z8Rr+3LTKd
AJb21/s0cRrZZfHi+mKVCfh9XDwtGS1qZVXk/+8P1EZb5W+WoJHtPUuOazD+
wPfK6PLf6Eq/Ttu9OX/gyxTj538LaOR0kGp57e0/UKEhz6VL0ojp5lb93yf+
QOkRh4Gn6D3Vu66LbvsD78OTZ0CKRj67xTZ+WvoH3pa205loVT6RjY1/xyF/
VG2R10IaubN+T8XehnF4pXJ6pZg0Xv+6i1YL8sYh0yZbLw1tuqdYcUvEOKSH
jmwzkqGRkPOrHd57jENKkZ4VGw1Ni/beMx2HpH6/o96yNDI7lX+Jt2ocHim+
8xCXo5Ff7k1CLtQ4xFnyXUpHV41fKbHrGoPoq1tvbVtEI9p6H2OiK8cgIj84
rgkdknh2WCVtDO50VqX5LqYR/Rcb8+ghYxC6aN7rBUvw/fslDludGIPgPXs/
Pkc/vPrN7ufOMQi8FFlrLE8jujLe8plqY3Ap+xeXg17ZfY7xixoD/xa5QX8F
Grms1b7eqHcUvKUOz0otxeeTlRM1/9soeBonimahr8QtaZbLHgV339ZFJoo0
ss7GsNonYhRc01XUWtFNuqW/558bBWf2yfUXl9GITkHG0ekDo+Ao9mK7jBLa
8kC1jsEoHCaDVi/RGxbvsMtSGIWDnuscdy+nkahhr3gtgVHY/8T7TBv6e0TX
H9/2EbD49eZSwAoakZ0t8Mv6PAKmIjO35JRphDry1VsuawRM9MmDHPTVLBcm
f9QIbD8V9MxUhUYMqGm2rt8IkEefXnegW6OMHp04MgKbf9A+XVHFepuVs5+/
bQQ2CpjWLV5JI4tqtdp71UZARye8JQ+t7nFWgy4+AprOtYPmajTif12y8ND4
MGjESv/rQjtJ3LvKZQ/Dys8H511Vx36Rc6t9VTYMK6bjFyusopHQGsOR/PRh
UFzDUStAu1ao/5y6OwxLHJZvsNSgEUs5Lc9Av2GQjXA27kW3hhZFqBwdBqny
Z/uCV2O9DD/fLGcyDOLjvY6Ka2jkZ+RaVU2tYRBdqfnfW/QKlT85KXLDIGJ7
NmDfWho5OO+VLggMw5xb+bf70dGp/cnT3UPA937yQYgmjaRd0zohXjcE0wOb
0pW0aERs1/lFRu+GYGLZ5YIi9JVesYaslCEYtSr7ZK1NIwsclhTphg/B4DXh
+kE0v3t+kpL/EPS+NmkNXUcj9X/XNi4+PgSdXbeGVujQSK2lVPtxsyHgLf7x
7z2aXPZ9+W3DEHBMJcUO6tKIcK/sIovlQ8AKsF4ygt620o1fR2wIGl7eV7+t
RyMXjD32r5schNpW9gbV9TQyzDrlYssbhO8LFXd8QGdfzwnK/T4IX3Yc239o
A/ZLvbTWmsJBqPBLOTaGPvBNPqg3ZRDKMrr+C9tII3JDx4cyIwahuFHjspo+
1t/2pETWpUEonH/mThk6L7DqwWK3QcjfkhN/2IBG3r7kZV49MAivzo6n/0En
OrKMhLcNQtbTjW/ubqIRk/D40gbNQUj/faFi1WYaGTNcfqhQfhBSaCX1H9G1
/3h9n6hBSDIQ5Nkb0ojvffmPowMD8Oi08fAkOjDQ9UTb5wGIS7jBFwU0cqQp
fKDv6QBE11SLrSE4z2X5xQ2vDECEoLh8Jfp3iWvEP7sBuKNrtcpxC9aHxL1Q
2sYBCHWJ3jiNXtXAIfoLByD4PmNHtBGNvK9kD/wa6ofAL0usNbfSyFBAyKr6
b/1wacb++Gd0znWa97zn/eC/Ntnz+DYakbFRFPO50Q/eR9svz6JV/x7kmbn0
g2ekWljsdhrZb3Ar3HJ7P7h/PPVQ25hGpvol0u2W94Prn6yMavSnttD6zQL9
4Kw28sZ5B9afYpeYLrcPHA/pVfLtxHnjNcnbV9IHR277/YpDaxmLX05I6APb
4iKejgn2S+tTpmNAH1gP/Rv+hq5S4Ckdte8Di+Vb+U/uopEEb7HIGOgD0/3B
8wV3Y7/cYDQNLe0Dk+tV8g/Rd+Ilt7rw9cH2N6Ia6/fQyCvKlmJye2FLj7l+
Dbo55I3QRGkvbJaP3OlmSiN+1wN++jzphQ3mv6yFzGgkxtFcUCW4F3SuyDkl
oIuEVa+onOgFrRy7sxvNaeRUM3uZ3a5e0GhLuFKL/vCk+0CNRi+slGkNO70X
+2mHS/PZ+b2wwkTl0VwLGul7wLi9frgHFM+ffP4Y3fhsYOf5+h5Y8uL5WwNL
rPdiR7vBgh6QbR6orEdPNFyQ8InvASmJdb89rGjELFlm147LPSC+1buNto9G
/qsO69M+3gOi596MJKPXl30hZ3b2gEjqNL/hfhppqT+2tV2jB+YwQLwBrb1B
kvVQogf46EEKntY0En6/uWTteDdMb/qkIXqARpS/njvmyuqGCXeaQQo6Jr3r
EbOkG0YT95gQGxopzohsPZjSDYM/ww4w0awaw2yVW93QO6fWyesgjWR5qzxZ
4tkNnXrSXmK2NLI5nbtrqU038E4cDExD7yv/dzPQsBs4cfHhRocwD7n2VAgp
dwO7uvkRG11U+0Knkt4NDbNKL7ztaMTwXcDah8NdUKvpXCh+GJ+3Rl1IBqML
vjs+q0pHnwqyaJss6YLqqN7f247QyOPmQo/TaV1Q8WltexOadVBwaGF4F5RN
eI762tOIQtNRZq9PFxSr5wtIOuD8en11/TX7LnhrNyn+Ar2YWpoovbMLXt/Z
tHTHUZxneX9S4zS7IKckYDUXXbVgtHxAtgsyh0sNzjvifo15MPqGvwvSVwjv
WngM6ynmVUF0dyekWJvYZKFfKM74L63thKSQW84mx2nk+Z+XX5uKOuHR2+9e
reinSiK621M6Ia53QdBFJxoRmlrKqQrrhGgF67syztgPMStLcvw6IWLv/YSX
6OUdpV0nj3XCnUD2i90uuE8FKi8FmXZCaO7Sojb00YGBa0/Xd0Jwu+PngBM0
Mv5jx9z4ZZ0QKJvSIHeSRjTuRTpminbCpV1d7TloByNO3IE/HeB/QWPM1JVG
zAdfvBFv6QDvTA/BTrSuVnyB/NcO8OS8kgh0w7xqnlnqU9AB7gvGly45hfW4
SpabmNwBrts2rslHr9+yWM0grAOcvS9s2nsa541y8YXX/h3gmFa8qxvNeBfz
33/OHXCEKXDwqjuNzIREArHsAFtRYxcFD8yvGfY2NZs7YL/hjXMFaOcrvhpP
1TvA8kx1kOUZzGeaIScdpTvALGl+RO//7Zr9n6NgB5jUWSYG/0cjNdFLRX8M
tMN24ehMRU8ayR8OeqXJboctGxhFb9FLp1YVnqpqh82uS77sO0sjg2Ww8WJ+
O2yMt2f0o0+0XY8KTm4H3W9JHSFemCffPKFzw9tBk699TOkc3o/Vyf92XGoH
DW21Oe/QH6bcnpe6tYPa8VMLDnjjPP74sN/mYDusiM5SHEJnSNztVdrRDoqV
w2tu+tBI2+KH4gyddlgypbtZ2Rdf12cUr1zeDrIafruL0atsVNytJNpB6kjR
wYN+NDJvyEn/xb82EA//5zKCvk1sLwn3t4FoqZH3bX/Ms3Mfs8LZbSAyeu2q
6nn8PFmtZvylDeaoVEV8QD/s3+vF97YN+GxEHx+6QCOvm/1j2tLaYPqGedYY
WrR6zK4tpg0mCiPehV2kkZL0OyWLrrfBaF/9F7VLeL64ePLFJu82GFwqxyxD
G8/NFH/o1Aa9FnadhwPw/on6L1Dc3wadQQnjf9AXL597l7mtDXh5LXMiLmN9
f9KsOarTBpwOZUmNKzSidC9ey3JFG7DlTi77hDY5v2p6qVQbNOx+vtYhEO9n
XoZsjmAb1F0c2DyFvhpn61A8woMfWdp7ooKwf9JHpS/zePCFe852zVXMl25V
n1vreFAh+eZEJbp6wzzdznIelG+f9na8hvf3UQKjMY8HxT5wbRptcm3Ltamn
PCh8FhgZHUwjk4YdN15F8+A16+Njzeu4n4zDF8iF8CBnHi37M3pp/pegJX48
yII974+HYN4r/Ryu58qDjP/CqmfRv2vXeew9xIOU5J/M2Bs0cvLW/uwbe3iQ
VL+wSzuURlxupez9spkHj+Ye/FONPkJFpPqs5UHcxnghl5t4v5YoXpNYxoNo
t2ZJ/ls0oqav9OPlAh5EPFRSeoD2oDPO2M3hwZ3vTpq6tzHPmf6pMxlvhVD+
Z4bf0RF79tmPdrRC8LrePSfv0MizmtDgGUYrBDqtPSQYRiMjBvd07atb4VKM
58mH6Lh5YRH33reCf1Wez/pwGtkpahQ7k90K3n8nrtWgH/hsSdFKbgXP1Zui
3O7SyJsfZqk/77WCu31AklAEjfzJjzvgH9IKrndLsxPQ2acsZx/4t4JzmVDx
xkjMQ3tKa0pOt4Lj2M6vtei7rRc/2Du0whHVW6zTUTTS6fLGzdWqFWwPfu+a
ew/nq89wzA3jVrC+uWDiMfppcsXdlI2tYPluv/CmaNzHu76uJBqtYDoQK/UL
fS108fKJpa2waxlb6UwMjYT5fqEOSbaCsdVSLSqWRg77Kbc1CrfClmuO8ARt
/artVNZkC2x+/dTU8D6ex72Vg+v7WmBjV+ehBrSnesKaVG4L6C7WcPWMw/lv
VN6/s74FtEw9fEUf0IjkrSIps6oWWB3wKjgFveqcmZjkuxZQezkWReJx/iyP
sRB52QIrWjckM9FpkgLJKk9bQHHhhZdeD2mkt97NvTG2BZbsKC4We0Qj159m
fLK73QKyfgLf0tDVM9NL3l9pAamM7WyjBDz/V7akqnm3gHhjSDcbPf9Rn9dD
1xYQnV894Z1II09khpNo9i0gsmX+XInHeN7Jfv7mulULzDlruTAD3d3XSduy
swX4nt5bvj0J5+GrugTBzS0w/atBqxm9u016TplWC0yILCF+yTRSMTcJHqi0
wKi+vZnkExqpG270SV/cAoOnkuxeoM8Le7HfibdA76M21x1P8fp/scaChFqg
88dKPy5aYjTjVusUF3gCp66fT8F5I3EhcdkgFzg6WfcWpmL/RTLFJ3lcYDsP
J2eh80yePyljcqEhVveVSRr2U+HpY1o/uFD32bekFT1tdSXqxUcu/Jgu/Hbx
GY3wNe2W0i3kQvWaf2yZdBrpGn9u25DNhUoHo56X6CQ3VefLKVwoj7g2uTsD
n+da/W2m8VwoLq+c247+eaghXjGCC4XjdOnLz/E8y6jYJRPChdcrzVcseoHn
h8qSuJmLXMixjdDORc9kJqwcP8uFrFv1xCwTv8+6mzfPlQsZ72XNO9ECa37X
qjlwIWXw0OHALBqJfO/7XteaC8lKCW5LsvE8p/97ed4eLiTsa/HLR++QWbdr
0IgLccHKIXtf4v3sTol6s4EL0QUnorvRSeVP1n1Zy4WI7ownV1/h+apHr/eP
MhfuLBl4pZCD+SivpurrEi6Emml/KEAXrzM+5CLJheDL575b5uLz/3Pn2iKK
C4GvChp70acX3jxfx8eFS7y/PcF5mG/uV1Qp/+GAvzRMKebTSFAFO9G9nwPe
OwNFCtH8yeydTB4HPP0/Su9/TSPnZM52uLI54P5cRHkAPVn3rcShlgOuTbvX
3SjA5+s2EtBbxQFn8bAty9/QyN4ldI38DxxwNPpp/g6dJJMkebCAA0e8Fh45
8JZGkj2sXnZmccA2xebUEHp25v08l1QOWDc88L9ZiPW59qT2jkccsKSaQ5SL
MK+fTi2Si+aA2SalmGL0dFG7wcPbHNjl7vT04Dsa+XpYJiXyKgeME9NyRtBi
CukRTy9wYMvPng+332MeKhFLUffigOGctT9Ui2mEecOJ1+bGAX09z6YP6JP+
djczjnFA90Re76ESGlnLOXHr/CEOaMVNTI2hrWQOfNllxYHV1Qa08A84DxUD
1y/ezQG12Usy6qX4Ohe+NRhxQFmzVLkcHaFovYHfgAPLHIV0jpTRyJc9xUbS
6ziwJGqn0QRaqe3lc191Dsh+urk3ohz378kJ0c3LObBw4tsRjY80Uno/YZ37
Yg6Iqy84/QndpxnZYSbJAVG7/ecdPuH59NtClxA6B0TuxN6YQsvzJhdumcOB
OSWsmKgKzLNXOgWn/jQD37BCyppKfP65K8yiuppherljbiXaarRQaj6zGSb2
Py11rKKRypaRtb1fmmH0euePabQuJ+zw2nfNMPhmVXP0Zxr51d/VezyzGXp7
3Ps0v2A+/JoxXJ7QDJ3yr/5+RmelKYpNhTcDz3yM5lSN+cwnzzE3sBk4VzbI
/kP76tNfC3o1AzvnvMr9rzgvoi7kSTs3Q0Pbe5113zDPOoaWuR1ohjoZga1f
0XLJqRv272yGHybbLVy+Y71fu55vYNAM1edD7Pl/YB5t2jSjvLoZKl98Of0A
7fUh1llvaTOUN4td0K2hkU1DSisNJJqhRMIy9Ds66cdtHZpgMxRtvRd78ifO
w97Xr5TGm+D1uYYUwVrMU01BRxM7myAndXHeQ/R97cP6YqwmyGYcKVtfRyOu
opk9rl+bIIOeVFODzi3f3GBd0gSpm9ua3epp5IeRglj6qyZI9ljZL/SLRqL6
ju5bkNIEjx67TSegywU8xB7ENsGD2kxK/zeeX9gez6hbTRAjNCxbh65+aPVP
OqAJItbrqro34N97m3vjw39NcOekr64Ig0ZunkvrrXZqgtAHhVuT0IrDuRZf
bZog+OusxSYm7hNZac6+PU0Q+G+Lwy/0vZLCu43QBJe0rrmfYdGIVOejuZbr
msD/WOUFio3nd/KBm6XSBN736DefoAefMBonFjWBZ4XZfcNGGjl+s1I4VawJ
3CfvpjagV9dMOsULNIHrqvo8zyY8T98aOhQ03gjOh2XLRZuxngzeTLK6G8Ex
7NDPFHTqxmMWyU2NcOTDIw7h0MhQxAlBtdpGsB3h9jPRIsd7NRZVNIK1svKM
FxfPJ0WDstGFjWB54AR9fgvOw66l7DnZjWB2I0PuGTqspna/05NG2FXYr7q1
lUZeinukrLjfCMZ9WnqN6MGAjO6PtxvBaOm5bT48PP+1DsmeDWwEQ4sCS4k2
3GfG4/O1fBphY9Bfhwz04b1Of1PcGkEvz9BjezuNRC/aK7z6aCNod1y52IyW
KI5Ky9jfCKvlPt7068B8ETv/jMbuRlDbLRIn2YnnzaQPru2GjaB8cXfaC/TL
kgwPZ91GWJZ1J39HF17/Ci3HPPVGkOfWlHPRvq8D9GBpI8hJLqw9300jehIx
X50XNoLUdhvuwh48n0o+UpWgN4K4z4OBLHRL1Pfhjf/YIPqsacakl0bmPiKa
P8bYIMJaJspDzzgUnU7pYcOceU6LLvXRSL/FvcuRXDbwQdpK2X7MswHvD1f8
YsP0mR69V+hczexH5CsbJpLWbN8zgPPZ3CxidRkbRuv+s2pHPy4erFd/w4ZB
4byjlwexHtd+qNLMYkPvhgmPRUM0otP5zIv/CRs6XQ0u5aKXqf9n5PSADbz4
S7fMhvH9kVeuTNxlA+fbh7hOtOzBL4MmIWxg8wk9CxzB/qplzp29yIYG7Z2v
l4zivFF57b71HBvqjt/8mI9uG+Wree3Ghh/R32r3jtHI27m7zI45sqG6UqKl
Gy1b031oyoYNlVP7Bq+O47zcE64VZs6Gco3YWYU/OG80c47fM2ZDyRGW6Bv0
lVzhnTab2VAYrrDYaoJGOlpPm2rpsKGg9KhaH1rZp+yw6io25I4+WX99Evst
179bTYkNWSqd25dN0YiPX2u1kxwbMmxW7StE1xcHLzcWZ0NqqLvj/r+YV0Ye
W8vNZUNy0cszA+i0H02ibbMsSOgfvXRjGr/f/6PY9XEWPFDccHv5DOb32YSo
sD4WxFief/AOfcplgYFaGwsirr5/dmAW51e1pa8CmwVh+fwFQ+irN68Hj9Wy
ILRz26eb/zAf01e8/vKFBcGLQuqU+Siyba56XmgpCwL3fGkpRktb6hs7vmXB
pUtiQwf5KdLZFDoV84oF/tkW/0bQ8l8V0k6ks8C7JWreHQGKyJy3m8N6zAJP
qYbFKwUp4q3b2Kh8nwXuxovVS9FFhXf7Ht5lgavvkQ12cyjCsN/1+0QoC5zT
HxuPo3/2ZcjUBrLAkc3bFy5EEf/VqpEMfxYcEVt5TF2YIlfVJc21zrLAlrj9
V45uLbKjR7qxwNozM+DIXIpcke88U3uMBZZPhm5PoDedub5X4hALzH7pxEeI
UGT15+8lhftYsEvEN12DRhHucvvdZ/ewwFi/sOATOnOensjYNhYYnZr95EBR
RGc0+oC3IQsMH22pn0JbOnMLJNazQP/H1dYoOkU85JucBdayQE+gcmiNKEUm
l7e8KFNlgZYOna8KLVk8q5ulyILVzmZix+ZRRPly5YlyWRaox95dMoO+FXQw
YHwBC5Q/16nHiFEkr2pVlr4oC5ZNy2zUmk8RJ4rDXyjEAvk1h3Z8QTt0O++b
M8sEOYdH+53EKZLVITj+a5wJCyO4x/6hh6S950oNMkGifIXnfQmKPHpQsNai
kwnzxl0ur1tAEVPZ2MdvWpkgsjLjzlf0sPqTpHw2E+bY9se7SFJka/ODT5x6
JvDd0srgl6IIlawst/MbE6bfeb15gF7yqkJdqpIJEwOvK3QXUuR1pdX856VM
GF32t/47uje8ME6miAmDVoa8k9L4/GpkB1LymNB77cqwoAxF7Fq/b4/MZELn
63K+R+gPJPb741Qm8Lrmzt8gS5FagUCr1MdM4CzeLf8T7R/NWXQ1ngls0zur
TslRpNxsoKo9mgkNATUbhRdRpG+tvINlOBPqXkrtTESP+2WJqNxgwo/WA9b6
iykyUzx0jxPEhOqFD47XoVOkB4ZLLjGhckeTp/sSipQxhzZ98WVCud+yKyLy
+DwPTcmNezKhJON4WBL66t1QbaPTTChqTH24SYEiB92cxua5MKFgfk/GL7TQ
0ckNlCMTcreseXtmKUWyL4d9HT3EhOyz/1VSihRZH1m84YI1E54/zf31BH1a
2c7+oDkTUn//4Rkuo4j2ic3bPXYzIZlmMNKAFv517+L0diYkGFziP6tEkWM6
/HP9CBMenP4wf95yitx0kk8f2MiEmIQ5CqnoZ6qaG+p1mRBZs0NjywqKvJdV
rrfSZEKY4E19Fnp1senFbnUmhOp+23lOmSJ8P6N78pSZcN1F4sB8FXy/V+68
CkUmBN3f5/QMbZzs/Wl2MRMufYk5u1UV+7Mwy4gtzQT/GeaVRvTzxbAhT4IJ
3msVwn1WUiQ9Unt8QJQJnkePPpJQo0iCTM/qgblMcI988jwD7fJ4SlFMkAmu
HzveblfH33sofGPBDAOc/6hXNaPfZJC8bZMMcFRz/+23iiLLDVaofRhlwJFD
L9skNSgSs71TcsEgA2xvj468QEu2e1z07WGAdfF6gZ2rsV57pbfUtTPAcshf
vAVtEuK/c3sLA8yWv1e4sIbC/Z+vvL+RAbv286+WXksR/sM7KVUGA4yvbzPI
RtuMfpeuqmWA0ZvrJrs0KeKuP9Jn+50Bhj2fD/DQR35YUwurGaAvL+Z8SYsi
AV7rZIsrGKBnbuElq02RvTvny1wqY4D2lajAV+juv1/Gpt4zYE3O7/A967Bf
3aWfrClkgHrbooR2tIZDn39+PgOUZY68uKxDET9PH5PIVwxQMnlcuEiXIoVS
Jnd5mQyQP8+rykXDuL1Z0zMGyL1QbTDTo4irz5yx0hQGLGx2be9E93ztY+cm
MUBCInM0cD1F9PLHdjAfMWDe1iEB+Q0U2RC92Vv1AQNo53QkXqNXlzQprolh
gFCqz1KLjVhvev+ddY5kAB/j7eoetIj4Jr9NYQyYpmYNrulTxHxM0D7yJgMm
Nm3ZtdSAIiusZY99vM6AUferNm/Qsgnq2Y+vMmAwscLZahP244XuLyZXGND7
kzrXh66Xi1EOusiAzjlmQdc3U+Trk+Wv3voxgKd39+4yQ4oU31acVD3HAM6J
uoRCtPPqH590zzKAHSeTuR+w3tb99WN6MKCh2rZoAP2JY6da4caAutmHn28Q
ilwuKi/zPcmAH5rchuVbKHKp6FVsnxMDqh1XdLxDJ1mavIo5yoDKKJexA0YU
qRlQuWZ6hAHln9IFh9FzT1ckn7djQMlEn8StrRRRFbSfHbVhQJG6lqLKNop8
DhjY47aPAQV2XmtK0N+tjuyQtWJA7p3Xm2y3U+SGavbKcXMGZJdM7RpF53E9
tGL3MOD58OaDd4yxfmwSG+6bMCB1xRWXlTtw/pauOGFjzIAn1uXnStEPVXcN
xG9jQGLI3Kt2O3E/7t7CrNjCgAdvd0WMozePkLhNwICY3tuJ4Sb4+7JNmds3
MSBSoSZTfRdFdosL7Hm2kQFhe6XelaPtbq+l+vUYcDPwwJcju3E+f15p6KDD
gOu5cYwJdFwjS+2WFgMC2xs7IvZQJEN49TeylgGXZJeNa5hSZOrhtvMFGgw4
v+v4nAq0celq623qDPC+kLrgqBnuozjmR5YqAzwzuxX/ort2TvE9UmaAO2f1
2nvmFJlfoKZoo8QA1wX/bV67lyKldk4xnsuw37fl7q5Cv3SS1a1Ygv3u/efg
MQvsn3CHBSboI2n6J2bQnrNjuVVy2O/Mi94xlhQRW7//u7gM9rvoh6taVhR5
a9PD7yKF/W44J/ILWnMk8vRHSez3MzseO+2jyMBvr90dEtjvSaFZ/9DWqyvm
rBPHfq/7+u7+fry/rpfp9+ZhvwtLVK+zxt87z6swkY79vmEf8yu62rrwHRHB
fneN6XQ5gPO/P6Iqdy72ezxznN+GIluK9AYWCmO/f5MXikf/OfDYdvcc7He+
o5J6B7E/H6pK3hbAftd+suwHWsDkkc5fPgaoHO9Y62pLEXsJupPyvwZQilY3
nHOIIq9Wt1gfmGkA+crTex6hV2t772D9bQC5qWzbDXZYr8rqoDbVANIaoyd+
ord8eskLnmgAiSPrfU4dxvp6f+VU0HgDzAv3vyZ8BO+3x4PXemMNQCt9F5mI
LhCZnWM42gBzRvmS9O0psvP1s1OZww3Ar7Ituw6tLrqbtnqoAWYOXH/v7kAR
swc5s64DDTBx43O1yFGKiLdlpuqgRwvnsZLQeqUHaxi9DTDYt7drkyPuk5Eu
NX1079KoP7/QOR+KM5V7GqDT4rfQf8dwP/3lLnze3QC8oEVS9OMUuZuz6NyX
zgbg5B1WeoqWUj3/s66jAdgdiZrgRBHWc/v0N+0N0CDHM2Sg/frHVsW1NUDd
blXTs84U4bU+lR/mNcCPi66H5rngPh9Y6NTPbYDqrBcnU9HHL3beYbY0QCV3
0GfLCYo0xzoZDuPr5ZI6wSy0pGUMnc1pgJLtPlHnTmL9zBN/bYwu8nmbNN+V
Ik9uaz261NQABc9msp+hxV4cjClE57JI8VY3itB8hEQodPa8q18b0XEfZFYb
NDbAc6hg+ZzCfRgBJ1PYDZD2H9UtcRr7gWnxRxH9JNl0IgP9aaXA6whWAyTU
hwsbu1Pk1G134/mMBoifWyfFQatvK5k9y2yA2I0yy/09KGKgd8pLFB3pZqsl
dQb7dfrSjS2/GyDs4UPIREefc9ToxM/f/M4x3fkfRRpjBcNDGxrgOv8Kuxa0
8r2kBBd00DoX1wue+P4Arc1S6ACndF/ps1iP2mIDj/D7/GP6grPROTIC4v+3
d5XmvV1eFPnWeJr9f5/9ezaZh34sfOHXKrT76tcvL52jyByZxd136hvA1X6q
WNabIvP+nVYSxted727+9gptECtSKIp2LLvM3uNDkWDFPZF/fjXAkbGy7nb0
U5majTX4eVvVuZOXfTH/j6mt0cHXrQ/umrvYjyJfFqmc8MTXLW/eXpiHbuRm
Fkbi95m9+7Hc3J8i9PZtSwG9a0BSuwu9Rb6o3Q1tvOwACTpPkVATxQw+tJFV
nJn8BYqc3J/9qR9teK3R7jXah1W5fwfeD/3Xim4WF3HfmHqtC0brdR3z60Gr
RbpEyaC1F6dev3aJIvuzdd7J4/1eY9p9b2kAzu9nydHZaPWA1U/eoPP+nN0V
g1Z5eeaV1WWsBwNO+AZ8fkqtOSV96PexbsIjaIWFf75dv4J5cF6twH2sh0U7
9BuXBVJEJbls7m30Qr+LPYVoh0MHF9agJTJKJvcHUeRO4atmS6w3sUZBkUH0
vTXlRbfRtPk7pEOvUiRcI/FeN9ab0JbQFSuu4f299F8sacZ+P/tV+z361anb
tu5YvzNPxLfYBON81HGplMD+mPxlZT6MNh2e7MlGj4nEHL51HftdKchqHfbT
kD7TTSWEIgs/aWglt2K/n5L3L0HnxrDnZ6I7HzmE2N7AfXh1+PJu7Ffej+To
UfRXy8ioOOxnjkDHkzuhFFk3v0Eh5//9rqOes/Im/r6zaWGpOA8anE9/KEXX
6m8wPt+F/R6b/d3uFkXYaUU2Uzg/fnweaRxHe++P26KO86Z6Wq83/Dbm9Yf5
W/f2Yb+v8Z9Sv0MRC8X0Awv6sd8d3ol8RIcaayYycX6VRPDJ2IfhPEqaie8a
xH4v36o8if49QcY6cf4VjAeviwynSOyCx+PMEez3lZ+3rL6L/XCeyhjC+Zlt
O29vBdr/vHByzB/s91t7jxyNwPy/rXZHGc7ftPeRp/6iQ/dZhG+YxH4f/OV/
LxLrx2OHgTTO80SlRTfWRuF+inf+e3Ya+33f4ZgqtEfb+tuXZ7HfgxOfHruH
58sRnTUU7ovIgtacGfR2MrSynJ8B4d0qpTHRmKd01l++jb65xPWHVgyeByJq
3JcJ4X43e9H0Ba31Q16jCfdT0OXBXqdYzO8d7QZbcJ8FvFr39x/6pd+2uAQK
9zvPmxZ3H/evhN7746IM8JF+K6MTR5G2ohvTB8QYcHbnjPI39OzgWPgbtLs/
0TnxAPOa0emTOQtwvz8PMhKIp0hV4vL6ArRL06e98WhTGROyRRr3uzhlr/cQ
z59h62rX4P4+YmR6+ge6y+r5lkOLcL97hZ93fYTzbtW2U58X435Pqb0xJwF/
v1t/YI887vcG6dhH6L3WE54eirjfKduUDYkUGZmjyf6GeWLXpoe5P9HXDQ6a
MTB/GLtzSk89xnlAkjWHVHC/Jy6vEU6iiNxNsf54zC+GP52bE9GHR3QiTDHf
6M9J79NPpohEtGp87xrc73p9f+vQhma25scxH2mf0KQ8nmB+/vqrTl8b93vc
WVnaUzxvpLfMbMN8pV6dr5KMpvsoTehh/lKZndTZnEKRVWJ7hXwNMM9rbt76
Gx0mp+fMZ8gABcfLFv+lUiRZsCPlEWHAoqgye3oa7rOF92bdtjJA+pOw+1M0
o3QNTxTz4YIJkwvwDOfv0fsK/TsZIKZ+O5SB1tnEzgnfjXne7kfs2XScp89E
o/wwbwrdkUydl0GRNZa3Jb7uZQB/iXVeKlrvT/ZbW0sGzAzdL9vyHJ9n+fML
3/czYHJ5Yw0LfbdYavXsQQaM7VfknHtBEW7P+qY+zMOD14/1z8/E+fHn/dq/
9gzoe5My/Qz9UfOStd0xBnT1dFHbsiiywKHXwNwZ87z8arkmdK7kpI0Q5nGO
+RlV32w8L4zb/Th9CvP8lRzdBS8polDlXXbv/3k+Z3zrc7TyWOqrfZ6Y59s2
Whq/wvvzRoTnjOeBHzIXHThoP2U1WXM8L1SblLj751AkMGe7sPN5zPPnBS9K
5WK+Kqbilgdgnn9hfDMTfc/u5dv5gZjnm2/c35mH+6OmKcPmGuZ5ia+pLWgP
ez7DpaGY57eK51/Ix/lkHMVIxfNN7jmrcunXuH/iFJyt72KeT43+mY0eeeD8
+UAU5nkGg7OrgCK624S+nI1lQBpdfoCHvpI8j/cOz1dPNjvMXHpDEaV1l7+w
EjDPeyTT5d5iHq9ISFiSzID4x+1yOWjp3w+XQioDYmvVVpoWUmT6ysRKk3QG
RAmd1utAW9qsqnmP57/w9dnbrhTh/Av3uv4Gz4c3T45YLn6H9XXJ59kdPD+G
PNA7mod+J5U9HFTAgKtf/TzM31PkxLBg/h48fwb8K7rYhfac2LG9+wP2uxbf
raBiPJ9/3m17/BP2+7GtcfIleN68zdjdUYX9fi847TX6fGVhev43BnhUVOVb
fMDzTlmW2+RPBrhNin7sQc8tf8au/YV5ftXe2mul+PxeSr+pYmK/H47kLi3D
zze4eok2M8A+7NfAG7THPYtS91bs9w9ys1bl2H9r7s3WdWC/j9iJ9qOb169h
6vRivysnLgr5SBHfC9rPA/G8b3agdaXSJ+xHlZoh9VHs9xsq64vQnEJCF57E
fi88ud26AvNQvFlL/wz2e99zq0F0Feuhl4EAEwyXDh4NrcT7Fehwz0WICfoW
686sqKJIptkEPYligl6Q96X36EMia6VT5jNBO+/NLZvPFIk5I+9ovJAJazqm
44bR6crPDrnIMUFdjjy79YUiu6ZmXT/IM0Fld9BrlWrc/3LOFW8UmaB08dPH
EvR0U0lGiSoTFLJodbZfKdLwzCPruAYTFnH3tIyiS0OWWL9aywRpyfDBO98o
0iS3vI6ly4QF22tnV36nSHmVVsIWAyaI+UjPK0MriA8/1CdMoJ4dXHz4B573
ojKXXNjOBGFWvNoftELi0795Jkzgn8dZf7cG94MQf92UGRNmDJcbr/qJ59la
2ZcX9zFh6ozzvo/ocK97UpEHmTCW9MzRvhb3wX1zrfYjTBiq6z0ziX4uqjo8
9zgT+oQ1AyLr8P2Co7QKFyZ0bjh7e3U95l9pu/g77kxoc81/UIFeKcJtfuvJ
BG785LOjv7B/SNjFW35MYH/bVPAXzexvnDUNYEID3+VP935TZJlXoq7iVSbU
aZfVrW3AfSV4/2LU//+/7rhwaxW6eIXAi+AwJlRHmwwdY1CkbqfJoZdRTKis
vPVvBn0jxkGgLI4J5VPf58Uy8e+pmr80S2RCiYbkEm0Wzh+amNPuJ0woOmKt
Xo2WnfuJU5XBhILw+xuc2RTp9zmUP57NhNxStjFfI55vBKstRl4zIXt06f44
dICre0PiOyY8Vzl2TKeJIvH3qQCpMiak2aT89w2deSxyz94qJjwJ7Qo40UyR
B9sWze79zoTEIo07Ahy8Xrkwz+ZaJsT3e8THo79IJ7ksZzEhVjEnXY+L19+6
SG83lwlRluMFP9B8f24G9bYzIfzqxgrXFjyvyZ/nO9fHhFv5F+rntOI+cBnY
eWWECSGdxa2P0DaSXjufTjIhaJHg8AYeRYIqTubn/GNCwB5jvlr0/KtRnV7C
LLhw6YbY6TaKHMwcivkqygKf7Oolc9sp8kvGYDREkgVnW+aveowO/iCR/VGO
BR5SVhsNOvB+TDBLnimywM04ekc9+pC9FOOSCgtcfBn7PTpx/x2H8FMaLDiW
vuQ4rQvnMcN8aZ8WC46w7T2T0WtI4IFUfRbYiiVf3txNkTcf14+v3MICa9J+
5zda1fZabdZ2Flh6qj38r4cikT1/xTT3sMDsyakMei9FXlT2WmfvZ8GuX1lv
nqI9ZhL237NjgbHISAX0Yf2EK2vIHGOBkb7eLwY6mh0aMnKSBYan/Hhn+yky
Oe2/740HC/QfFQ3PG6BI2d2fV6J9WKD34x9fGjr09zm7xQEs0BbYOt9oEJ9v
W5iPbjAL1ugEy7PR5eSMz9bbLFB3rlrlPYR516N06+4oFqjEiuqLD+PvafuX
6vuABUqfzXemo9U+iB0/+JgFCtMR1ttGcB/ukj4lnc6CRWt+HW9CRxl+45Vm
skDaQe6s7yjOy9R3urKvWbAgwu7KgjGc15VHn4qXsECsPCHsOfqGX3SQdAUL
qPGWh8bjFLnUYbNV5DsLhFaqPOegRzy009N+sUDA9uRb/z+YL6wlezMbWTB7
83ml1ARFRE7uiLvLY8Hku4FfmejqrA7zQ30sGBvQbts5SRGrurwFVaMsGFrm
PdKCtogNhzPTLOizesN/cYoir5fQkkWF2NB1bXq+zF+cb77Q+IhiQ9trUHiJ
buv98tdOkg3crkCN3dOYr5yL/IIWs4G9+JN+G/qY096RMCU2MExpJgEzOF9u
b+uVXsWGuoA9B+RmKbK0UMjipTYbfrwMc8pB/yvLICGb2FDd+vOs6T88P96Q
dErbxobKhdKBHei59smlBXvYUL7jYPgVPjrZAq/PWlmxocQv/tFifjoZ6jm9
b8KODUUZzc/z0A8KJ/hVnNhQ0KhUaC5AJ6ut/6p9Pc2G3PnOVV3of/lDoOnN
huwtz34HCdKJlrFyn0UAG56f7W2Tn0Mn2u9aNA4EsyHt6drR1+jNC/dZ/Qtj
w5PfngKWQnRiHm7fGhPDhkRavngvelZcsao1kQ3xBpMKwcJ08pi+N2EqlQ2x
pzetVpxLJ1N1Hnl3XrEhKiHA4C36m6fXRt9CNoTXlJrsE6GTziO+exZ8YMMt
QWGbfvTrwPqTjGo2hOiaOIfQ6GS7FONRVT0brrrc8lKi6OSzvZX/0SY2XL7/
PbAIPZh0+VxWBxsufFlw15pOJyNj033hg2zwmdmfMIgOmQm+7jvJBq+191+E
itLJ3ut7NiUJNILHUXbhinl0onz4XMxXeiO4RS79/B5d7KrG/0+qEVw+OjbY
iNFJl/7a37XyjXDsz9P2YfR/fg68GNVGsFfrGr01n05Yxz7t+Lu2EQ4d0hBU
FaeTe+wAh0r9Rjhw20PiA/pa2EaD+q2NYFn8aukhCTpx4n8OAaaNYDY0tnoM
XTUW25lv3Qi7lm/cFLaATqI7u6NPOzSC8f4Lu9Qk6aSCaby17WQjGF0vtilD
3yiM5Vf3agTDNwIuh6XohFcgJb7/YiPo92w/9we9v0dJfsf1RtCTvxF0dyGd
DNuRrMjwRtA2r767SppOvEo+pJ+Pa4Q1V+YnfkQvN66v+PakEdRzLDPtZejk
6NOFN6YyG0Gl7V7RJFrl7lbvqIJGUJJhfI6UpZNX7du7LpY2goLJEsZqOTpZ
H9hlcLW6ERadt++oQF/f5XTJ6ncjSL9IGju6iE5sa2zYkdxGWNDcJjiN7la9
H6za2whiEmoLohfj+/3qFywebQRq6ylFzSV0clbTJP4CXxMIn8ta8xmdMtK+
cVqkCQRShzcdl6cTXeef2YsWNsFsg+7uWXRfapas2NImmKL8DsYq0ImR0KYK
H7UmGN9U5KK9lE72dQVafNZpgmH3f+eq0SsTnI4ehSboSzS66qxIJ1ZVO+g2
Jk3Q9fNaBN8yOmkUnBYO398EbXOqEuPQ871iheztm4CrJ5qlo0QnftLbTo66
NkHjCfN339A0gZ6XpeeagBEX8eXEcqznORtEXgQ0QV11PUNgBZ2IRGxdKHuz
CWpmZTvj0Wa2NwLIvSb4qmk3rqeM1/t1yfN3j5ug0jFhTg36jv3QCvrzJiiP
alngpkInT7MeKGgVNEHJJ+VlQqp08rEublF6WRMUTZxYm/B/X9h78d+3JihQ
f75540o6CT123+c1owly7QZ216KvqR6tGG9rguw72ran1ejEwjps3HaoCZ6X
nDsxVx1//wWHVs50E6QNF3g/RrutzF31fm4zPFkxfdVgFfbDhtCv8xY0Q6I1
RNajwyAsjqPQDPEhgY89NOhkIZ+DosmqZoh9+zGLtppOfNtK4kJ1myGqV+R9
MvpvT0Wi7dZmCFfYU715DZ2sy99xfp95M9zaG8b8jc7btzdnzLYZQgJ/dv63
lk6W+EjN6rs0w9XchX/omlgvIot56882w+V2G6EU9McDAVrHLzXDBdl4SaJF
J2/ZWuotN5vBd1fzMib67O1VYb9jmsHrgpKmlzb215tsoeDkZvDIdDIUW4fz
ZI7I/KfZzeDGSduThi5In9y6orAZTizotTXSoZMWp+h3R6ua4di2tSfZaHVx
S45GfTPYe3v6eOvi73f363TkNsOhtLxr4nrYD5uvfo/sawZr5kRkOlpiMqQo
828zWIluStq2nk5e1PKU183hgLlhQHYT+m3Cvg3/KA7sOlP63ncDnVzqezU3
SoIDxklCXxdspBNiduLVZ2kOGNXtZD1Hfwnc9ydDngOGwre6jPWxv68/8H29
ggP6G77/4aDf7EvYorqKA3quC4TPG+C8/3nL97QWB7Tj90st3EQn9Vn9SuIb
OLDmW6xSFvryahPeb0MOqPOxNU0208kJTlHap+0cUNFeCq1oES949H0PB5SO
O5peNMR+4Fd80GPJAYXop4dkgE5M+U59e3uQA4sqO0++RNMZDpYlDhyQnlrl
u5vg93lwd7925sACDY/gNnTa9/nR59w5IHbkVVTAFjo5tWVWdcyLA1T4WJKc
EZ2kWhenal7ggHDphpc56Oe/pEqXBnFAYPR8selWOsnSXuWyJJQDM8rFXzvQ
EdEugbnhHJg6IMC+so1O0oe7nTbGcmD8xvbuxdvpJNYx5nF8AgeGC0Mm8tC8
YKkLcSkc6O/7IrzXGPeb7APXly840L10/sJu9KmXZfvDcznQZmG5/OoOnGee
mh/lijjADbqnpbAT95vDi52DpRxozGuAArSdWt9UfhUHGB2LzSxNcH8mW4lE
/uBAnZy9XS+6yDTrdEsDB2p2J7kG78J6fFEilMXhwNeLbb6Ku/H7GpR8vrVz
oCpr5fW3aAuR9Pmj/Rz4yHW7t28PnfBtnH5mO86BEsms5H50buF11cEZDhRt
H34ZYor3t3X1hLwQFwp8dEuUzHDfbjKxuUPnQu4z329F6BPCovTLUlzIZhWy
rc3xflhr/1q+hAvP5/3rHkRXPNzT/2Q5F9LAaDJ0L53s+Eu6k1Zx4cl/1+Yq
W9DJ4e091xeu40JicuXCYnTznBNH7+hzIb6evuKgJfbnyXbj20ZciJ1rrj2C
Ns82qxkx4ULUxghy24pOvtscm+yx4EK4W72Z6j6cL+tGbOIPcuHWQ9nDH9BL
Ilxtmo5yIeT7IbdD++lEyULykupJLlzlT/AbQz9uqImp+I8Ll9e1XA+zxvmT
ZJCr4MeFC07K0WoHsB51jJNUA7ngG3PiSRl6VnfvvvwbXPCqynh12IZO4up0
RPZFcOHM3/6SP+g8U/OVOfe5cGq19ve7B+mk3S96nVISF1zszzWussX7+8fy
vzPPuHDsbkHPR/TO8ELJwldcsC/7O2l/COfDsjuNE2+5cGjMUGQKLbmUNXd3
GResVQOlo+zw79dUfBP4woV9Bz+uWHMYr09ik/+dWi6Y3xRZV4k+eWSTWyWL
C7vf7d7ieIROEpax2m/wuLBj4I75NPqcn3WOfx8XjJb9PBxtj94odP7mKBcM
rRae0nSgE2GHhTkbZ7mgf83G/zN65Fmi5aBwC+i9fhBy/CidnB7xs2+f3wLa
XU3Rs2jH6MrmlbItsGax0tNYR5w/Zk/Y55a1gLqpU472Mcw/q/StOWotoBKQ
9qEafVM51KhWqwWUXvZ8dz5OJ/JzKhc5GbSAQuuaJj4nfJ4DkGmwrQUWLfTs
jUOfypJ6LmXaAtI78qZ0nOlksUd15of9LbDAb0LkO/q2wlPbw/YtIJZhIHPS
BZ/nfPPNky4tQDVeUhY8gfVUfFl5w38tIDy/dN1DtKC/4aUDfi0gsEXIaP1J
OnG9aFutEdgCs54799agqf7PYftutcDUk5tH3FzpJP/t9mKFey0w/uvbKSE3
OpnnI9u08VELDIssOJ+A/ihyq78stQX69fff2HgK84Fxg39Ddgt0nYqNqUXL
Vb9bv/JtC7Q9Yj09fRr3sdeAmUtpC3B/KOTOdcf6+T3jOlPdAo0CjqWP0eOJ
y3Uv/WoBps7THwYedCLawfP/1NwCv5w7m+rRwWlvxoy7WqAmdlWfxxl8Pgve
ZgQOtcDXz+5/af9hf/1cL+Qy3QJV0y9pT9BH9TzqxYRb4eOaMRlDTzpZo3XR
wU2sFUocNqg0oHf94BiekWuFoojzOp5n6SRo2FI6VakVCsrfG4l60Ym9nG8E
Q6MVcsf5LVLQeTpi69P1WuHlyu325BydjP77UhZFWuG5bchpJrroZMj7yV2t
kHbry3kvbzrZXeGqeGVfKzx5LxYq5kMntS7HO/cdaYXEQYvYNHTRPJWInSda
IV7pXoqRL+7Lu3v/Kni2Quy+hlw2OtdiW4vexVaICl5c5u1HJ5kWd4UTg1sh
vOBIjbg/nXy92v29ILwVbnU/bk5H26ZX7HF80AohS9r6tp2nkyNL/b7pPW2F
q2Yrp5vQq8LzPv1+0QqXL7tRfhfoxJpSSKx60woXXmXKSl7E+ujNjpwuawVf
3pDKC/T4JsE7L761gpe0ru6OS1iPV345vG9ohTM7fbdy0Qv5/3Nb2toKp/wL
Lc4HYH2/McyX728Fl+ez9gsvY7551ixbMNEKx5q2uGehi+opVXNBHjiIX7tg
cgWvd0d5Fp8YD+yMKkNb0V5BjBBnWR7YeNHvXwzEPGlx68Gm5TywSjFLlQnC
/eLWYnZ5DQ/MG+7mvUTfdLmtMmcjD3ZT9WW7r2L+YsgZzWzlwY5Nsj/b0B/u
Wn7yNeWBkfshTsA1nA+No4PNB3lgmPioXy6YTn5vXvqUc5wH+j+50zlo20zH
0nsePFg/R5ludh3n88NZm2d+PFind0KuE/1Mb+Uy02AerDmRoRoYgvPi/c6X
u+/yQD2uX3fJDTrZZuHNfyueByrVWtvy0QP8T2K3pvFAadbLcm8onbQ9TDAx
e8UDBc0Ch240XX3kisl7Hixy/Ot+9SbO370yDgKfeSAdZXhR4RbWg83tKb16
Hiz4dOVmATo52lXvLYcHYhPl9y1vY171eSSl3csDSl0krRftzZh9/uYPD4Tt
ducH36GTM81DjOuCbSBw5065YhidlC/TkV46vw1mi2t+vkXvmuu1+OeiNpga
kuLuC8fnqcqn06LSBuPLbQb60Tuua79cpN0Gw/sfzITcpRObszbHlxu2Qf/1
JvryCDpRML2lJrSrDf5HcZ3HQ9l2cQAXQsxMipBdERWRKErOVUmbSiEqFZJU
SKLQIiFLkWRLJalHkV0USlGpVJJEyVJkX2ZfSe95//x+GO65r+t3lqFKHdXn
aH7yn2N0pz7oH/E0cL6Oz9e5X+jm3gc9Gg+XM9En/U/U+vn2Qdf2EZvLyXh+
W+7G+oT0QXv4Ege9FMzXXltxtUt98K3shPsL9M17P64tS+qDL32Pj+9OxbzZ
KBa6ZvbBJ2XBOTb67ZRz4t28Pni/adWV+DQ58t3TjZr6pA9enzmfoZ8uR2xr
HTJsX/XBy4Lah7VoN4XyworPffC8W/LJ3hvY/4fUNVU7+qBy1sY3XPSR5rlZ
Dwb7oHzd5a9XM3C+DHkXZM3tg5Kgxt8Lb2L9dQiZbz6tH/IfzGK8Qv/WPL0k
l9YPD384Tu27hXmfUvdhqPbDfbl0igC9XF2zQE2/H7JW/1RNuo31/snDtxfM
+uHWcc2Fhply5PbeE1mWa/oh/a77inp0SIXB8hK7fkj+en+92x05cuv72mbO
nn5InD7oIEK/Tew6xDzcD1dWLPZIzsJ9e7rMnG+B/RBzxM9/yV3ct0rlz5+9
2A+RN0vOv0Mv9U4dTbjaDxc+ca54ZGO+QhepVt7sh7P/VtycREeYHZx+PLcf
gpeeyU29J0euFdn2F1b0Q+DBmicm9/G+Olp96X7VD/4p0+ob0HnUoUNyX/rh
2FubFs//sB9uypp7ubMfvIXRPVPofbf21ESM9IPn4g+M9Bw5YtctOR4v7Ae3
fbR/pg9w/zzwVJYtNQCuV3dQP6EFproWBYoD4FKbrHb4Ie5nsh1hq+YNgAO7
beG0XNyXX8efHzYegO16ahY30Y+Ge38yrAZgi/N+W/M8OdIgNtxxb8sA2Mbe
dfyMrmJUfdHePQBrq/94HHmE+/iWzex9hwcAxvRPSOTLkeSOFHfroAFYpXUs
7Db6yO5PQbIRA7BiR2H8igI8n7RSC5lrA7AsgnnzC5phpRigemcAlpSb5R0r
lCPiORYHVhcMwKKB00+nF8mRlcHHJ5qrB2DB3Or6O+iaacHdA+8HYN6WqRbL
Yqy/z8VevmwbAM1za3q/ordd3PfQtn8AVIsimb4l+P8Xalrf4AyA0u+3/6RL
5QgzslYpSGIQZivI0bLRk57CruhZg0Bbv03dqgzn5dLP66W0B0H29LVFregT
aY2eksaDIJXbYuH/WI50pVvmqKweBPGfyhtky+VIKj/xuLrdIExR9jrdRyfp
V/hm7x4EkXXmQesK3Ge0KeuOHBkEnv/vE9/Rs76JXWo/PQisbN0LAU/kiM6V
tWMbogdhvOVwAuUp7pftO2qMUwdhWOrRrRx0RO7suXL/DUK/xXgeqZQjirNe
uls8HoSeo0sr29EH/6np9L0ahK5bgW8Dq+RIk2FKRnDzILQ3PvlGq8b9OaXE
PPn3IHwTm+h9iNbYbLOuhTEIX0ytWWufyZHWTgmmutgQfPIMF+tED/omdp+e
OQTvU1/TTj+XIyWfv0de1hyC+nfSGrNqcN+NOO7osGQIakWbFz9ChyvkL/66
egieGyZYrn+B+96MDO2QrUNQuf/Lhm60n/b+xbR9Q1CeqLgr5KUc6TiZO+O+
zxAU1zl7KtTKEeOm7JSjZ4Ygn5MRUID+L/R2qN6VIXi4oOvChjo5IvlQI0H/
1hDcd9G5+hs9+9qPK3PzhyArzvP2mVc4bzS/7O6rHoLbzx48mvMa8yezfLny
xyFIHx+uLEI/l9st0f5zCJK1l7zb9EaOaF99mKIyOgSJO0+09qLlp/xa0yeG
4Erk4z/n6v+/r4uPP6AMQ0wFn6X8Fu+3RVPXpNowRA6unFaKdvFcHf7WcBgu
qJ6fafdOjowqVkddtxqGs3a1Gv3opWevnD6wdRiCz0saXniP81yd31H6vmEI
LN6wUrUB59US5jUF32Hw74nb+BjdP03LQjNsGHwUG3dt+4D9Y7/U6q2Jw+Bt
O+vQIHoqy8q6KWsYPIMdT178KEdyGq1DrxcPg1teWrj6J5y/+pwa59cOg2tH
+9UKdNQA1XpJ8zA40zQz7Rvx58EJa+f3DoMDcc8fRh8yfPdKhjMM2wPuV0V+
xvsUZUrCp4+A3f2Bd5pN2D+iF7pQlUZgY+uitqfoG7ftHyzTHwEbGb++nV/k
iPMlmXkfLEYAVpawR9G5zipOE5tGYJUPZ1p0M+5nxw8aWOwdgRWZK+R1vsqR
YodoA6HPCJg2hWpWoxXSzo4pnB+BJeI1hk4tcmSgWWCSnzACi8ymraKjW/70
HvuaNQILvGw2xX7D/jV7BYNdOgLz06Od57fiPJrMeSH7egS0GhoOPUdL/JNp
C/02AqqT1EDnNjliufrmnvCBEVBasuMiE51zMiD/gHAEZrslJ17+jvXE6ets
T9lRoCW1Zer9wHpIupY/Uh8F2deqBS/Q2SOlFY+NRkGKt696d7scWeS8554y
GQVxg7vv2egd2serH+wYhandf9rif+L8BoOq0Z6jILqs36/fIUca53Lm5Zwa
Bd7zo5xatPzCX9t3RI8Ci14g7tqJ9UO4I2UqYxTGdZjyPLSqrqtgW8EoDDuY
aSV2YT5l/zZqvBiF/qjTRou6cf7s3b8muXkUep5UrXqNdt15+GPkn1HoGvq7
af8vORIZeCBwkDcK7WprXATol2cNeQdkx+Db1kivpN9yRGunWg1dfQyaw94G
GvbIEe7v/ZmSS8agsUQ2oh5tM5DalbJmDBp6t15z68Xfd3yv1+cwBvVzrt0R
ofM7IlhPvcagdkNLQfIfzFO+y1WN0DF4HqL8bEmfHFFeI16zL34MKh/taXiH
fscrGuZljkF55+3vHv04vzQZtU6UjkHxzN/9k+glBT5WT9+MQf4aXW7qAL7f
6ZNh5d/HIPfkYYmlg3i+rOT7h0fH4L//8mZ9QLt7vHCb928M7raNaR0awnzu
LPB/MWscbs1YuuQf2vfQ2Vtf9cYhfVWg1Y1hOWIqPyZnZTkOyb5PNi8bwf0q
wa8kxW4cEu+IXD6hje4kV284MA5Xvqw+fHgU5/87FYsVAschRiI8aNqYHOnR
sLaLix6HSPPXETfRrkkJR9bdHIcLh6WTzMfx+dZYrZtZOA5nb2zO+oyme5kF
z6kbh+AP8YVH6Lgv6nwPOPFtHAL/Nj2TYOD99P9lmj00Dv7Gih9uo2s/Zh1M
+TsOPu7OP1Yw5ciVAyHy02bTwft6xsAX9N1Q8dNWunTwfNPJPcbC7+/valBr
SQc3vrakFFuOWBx2DyrdSgfXhZ6zs9C14ZI2x93p4Lz3gfZKDn7+efP4WBAd
HOOHl7SgNyz72a4TRwf7F0ar/bg4D8z6l+6ZSQc7pv8WGR7Wq44hg4xSOmyc
/3h3NlpJd/ii+ls6rHPiH7biy5GymUYJx37SAaJXnmpF2xXmd07Q6bCq8lyk
vwD7fV3p8p/TGLBi5GWSrBDva/qU32wKA0w1JO/eR89o/Pu+X4kBS7ZvKLIW
4T48UVJRpc2AxeFxz7+jX47tz25dzAD9sk8fAiYwfxbPOobMGTC/T76dMon3
u/6lx3lggJay42AOOn8+5emrzQxQ3ZTGI3/liNPNPe73HBmgdKZd8if69yL+
tNgDDJhdoKEQNIX7+bzGlVJHGUDrdtOZ+U+OxC6qbnwdyADZWfeNc9E5o3t7
NcMYILVuYPU6MQqxTaottI1lgHjQIrtO9MSFe3f2JzNgKsd3z+lpFFIWbLIv
JpMBou/F3rPEKUTyxqwl23MZwJPlnHqETvVNd9r+mAEsqxVR6yUo5IXZ+7TB
GgaM+4Ve70bfGt2bc/Q9A4aznt8NkaSQcqVbxqKvDOhvFitWmE4hSiObW953
MaBH0qamAM2ymb/h2xADupZHf9wgRSFBzTIRzhwGtHs3tP9G67g+6Zv7jwGt
GdShM9IUctaqtmBkBhOaP9rz58hQiNjPt7EtikxonLo+vRidGVtbV6TFhAaT
NoXNM/D5fywXP7aICfUeqvP+oNsKOmKZZkyoTd5ncl6WQlQNEv7ZECY8r8+y
VpGjkCznpQ76W5hQKei1K0V7tx32rHRiwuNF+nvtKBQiSOdaG7kzodT16JF+
9Ks//rum+zChIKHg9AUqhdid/5lYdooJuS8ZUao0Cvkup/0fL5wJ/7GWJT9G
184W1V+JZ8Jd3dPZ22ZSyOAu/Z8P05hwa1dV8SA6vezklq/ZTEiP+VtzUZ5C
Os/Mu7C0kAnJVeST+iwKcZK0vfSrkgmJoxE/K9BFVV4NEa+ZcEXz7ZD9bAqx
F6XcePGZCTH2soJh9A7lwkM/2pkQeXGrVJQChWjclAgN6WfChceJilqKFLK9
LH6mLZMJZ/u/zqtEyy2SczgyyYRgFeWlDnMopDX5nPsVaRYEbt4DY2gl/+XG
XbNZ4H/29tZoJQpZAuHTwzVZ4FP4a6+OMoVIFP25o7GQBd6/5h+tRv+YtcX1
mxkLPGcfDnZSoZBZHeeiZxAWuNnkXaKjZ8sUn3PZwgLXU2PJsXMpZKPW34Vj
u1jg8tDk3nxVCgnpuWr9zJ0Fju0nS56jk7+m7nT3ZYE95ckLZzUKOe6tQ1yC
WWBnLfrERJsL711ZGMmCjf6rOy6rU8g75bs1c6+yYF32hWE9DQqJ/BJSl5fB
Amh5JXiBrh9Iq2/4jwWrpKSl92hSyCqrv2P7S1hgYbF5Dge9mxt0a8lzFpgd
jZ+foEUhj5d9/ct9xwLjW01LDbQpZO2ZC09OtrBgcaMCqUPvvGWUwetmgb6Y
8zZXHQrZsqYz7c8wC+abZrjy0JZGnRGRPBZoenYeTZxHIXEyhksuiLNBNVU7
ZNF8CokpSrmfSGWD0ruD0a/RM0C71kOFDbNFOSn7dSlEjZGmdEeXDTMNh+8J
0Bs3rNCyNmGD3H6j0iQ9/P2Hzg0Vq9gglej/0nABhQxXq0vFbWCDeF1ZYz2a
Flia8XknG6bYvA43fXxfjr6j7vvZINJbOSJCH5wrTDA/ygae8zlhsgGF9Msp
5Z0PYgMr9qW08UIK4Qmr5GPC2TBeLaH0Hq2rePbFkytsGB6z1T24iEKcf85y
zEtnQ79WnOlftP4mfWmd+2zo2fGJpC2mEBvFdYqUYjZ0RchvX2pIIduMPQWa
1WxoL3fY9wF9+/Zve/t6NrQOpB47ZEQhI50lPt7NbGie2x7yD60mbhlb2MmG
xi0aMTeWUMgX5zO1KUNsaDjnlrrMmEIaVB0+/Oaw4U3Rvfuf0BCWvponxoHa
3/2lh00o5NDc5pgYCgdqFBbVTltKIWd0Os3VVThQtd738010tIeGZ/t8DlSc
Lu40N6WQz0MPn5015kBpLnvkM/qxzbUAzVUcKPi5XHRkGYUs9tXe12HLgVxq
qIykGYUsWDJnsedODvwHz5Uy0Vf1PEpl9nMg64SYnoU55jetXzPtCAdu3Vu3
rBmtLkf38gviQPq3S2t8llNI1IjY7OELHEiRbtgutYJCnp1idX+8woFrltT9
WejJAQMqpHMg/pi9z0oLPM9DX7Y13+NAzO3roS1oqBx1sy7iQOTn1hg/Swo5
qfJERbWaAxemqabJrKSQDp/F2bn1HDi7bN9/2ehoIXUmaeZA8KGsMqtV+L4T
MoYzOzkQmNZb24o+nvBt9e8hDvi/X9Dkb4V5unHq60sOB3wmjnTJrqaQ8BVt
8qViXPA2Khi9j34Qc7hYIMcFzwMMkbU1nlfQDeU7ylxwu7Zsxg/03JLV9Xvm
c8H11Snlk4DPn3NwOHIJF1y4lXpUQiE9n+fRpFdywVH/77IH6Hm+GgNGtlyw
303WrllDIdXcnNGoHVywuxxh/xNNnZN5grqPCxue1+8PWov1aWjZ5afeXFhH
n+E7cx2FjG8USxSc5ALR2XomF91AV6JFhnHByiExdp0NhRhazU4ejeOCRdTX
tE40NS5QyjWVC2ZPlHJOr8d64+CXcOEuF4yHdj+eZUsh50p6PzsVcGGx2u26
R+hOhcyce0+5oL/1V9P6DRSyTleuJe8VF+aHze/uRn+PntlL/cwFzRKvsZCN
mPeQJzJWP7mg2ps7obCJQvK1+k6u6eeC8pyxGYXos7kLH6QzuaCwwURl42as
RwVBkl8muTAz5OSCHrRv70fNQzI8kH1UYXZ2C4Xo2Q9QwxR4INUpXKtkRyHu
p40cmjR5ID5z9Y5i9DfFoIUlC3kwRS4c2LwV65nR9o29ZjwQBbzy/YNeM+/o
HiOc8nn3pc6e34b5m3fDP3kLD1itm+JUtuPvz5Oa928XD8Zl4tNL0Qt0n249
4MGD4ZVNOXb2eN7brlXe8eVBv49CeT/6s6ujAQTzoCdz16sLOyik8Gb96uAI
HnQ13fiiupNCMr7eqz2fwIN28c7ux+gcGk9X/gYPWs20x7c5YD4dD845ep8H
zV4HJwfRVx6WuEcW8aAxPUc2wpFCPgbFlt+r5EFDw5CKhhOFXL6eP6z8hgf1
k4b6T9CptIIJ2SYe1C3xN9+xC/O0+lJgbTsPatzK1o2gvx22OqzVz4OqJN6O
KGe8z1QzdhmDBxWvLd20XCjEzTeWXJvgQQnvrF8lWj3L5MlxKT4UGLw867Ab
6/mQ77sEeT7k7pG4PIZuyThFXarGh/+u2N6I3kMhCWe2aB9cwIesmtgHOnsp
5NgmSx3bpXzIZHwsr0b76tjvvL2KDzfmyb92csU8qnGHrGz5kOLo0ExH5z9N
1Jqxgw/XLqX+it1HIS6fzgVs3cuHK09/jM/fTyF7GgtmhhziQ8yw+t/n6IPf
HzxY5c+HSHU3OZcDOK98b9ieE8qHC9vuzWWhf8nhsh7Fh7MX+vWvuFHI3ZYp
PZOrfAguXbh8gTvOD1p9cwNv8CHwj4/NS/SJ4A6nQ/f44K9UvHOPB/Yz77O/
jhTywWcj242DFq1YfN37KR+8Q5cfTziI71vmfqXGKz545oecM/CkkJLstT12
H/ng1vXsch1a0mZgo1krH1zlxTJcD1FI37BcdsEvPrisXfeQhx55ueNv8TAf
HAMvVSR6UcjPZclH5nD5YJ/z/vWiw3j/zJeE3p/ig913ytfX6JutcR+CZQSw
Udb+935vvE9hUVWPZgvAxuo6XYB2ePVsyyJ1ARC/1r9JRyikOO7NjY96ArDK
mksxOkohzy+a3I81FoBFs6vqW/R/uf5aBpYCWCaZZeB+DPNmurk+aq0AjJf3
Lp9AL+hre7rOTgCLvResT/GhkCPSz18+dxKAfsYRB2NfCkl6ceGr2wEB6H7M
d3+P/qfqs93OWwDaU/TjB/2wHnQ0ZX0+IQA1k2Xn/6JbdL2DTpwRgLLHqStp
x/F+tUR320UKQCG5MmOpP34/TljIWLwAZtZPPvyADhENa6unCUBWAE8OnaCQ
J8yth1dkCUBqUcSbf+iy87uK7HIFIO5a//VGANbjD+uMHUoFMBU/o2fZSfz7
28sZNtUCmHhhx/iE9hIbzVF8LQAe8+rU4UAKmSZt+zjgkwBY879SxIMoJK1w
xM6+VQDjTkpqt9DpHZvLM7sEMBy9e+HyU9j/OdT2gAEB9FfeWtGENtQt7q+j
C6BnpHv90dMUIrPJSmKbQABdGvMdJYPx/A9aRUZME0L7di+PTPTxsoculrJC
aA3P9bcIoRD/XyvS/8wSQnPZ6PlmdMHmKWq8qhAa+4zjfUIp5FSRbEPiPCE0
KJ+8KXWGQsZe/TLrWSSE+k0VuVnoL9cSHaYvE0LdGeGTlWfxvicFmK9eJYSa
Aqv6FnTKW673o3VCqOoOa/E7h/Vt10ft+s1CqJj1qkfmPPbXP5cMgh2EULJO
ipmNzhCLXXpmrxAKgjb9swrD8zMzcn7nIYS8B1eobegbRk5Tl48KIefHZ7UT
F3B+OLBxUCxACNlyCovkwvF5vHrny4UK4fbqXRb/oYs2Xw/oCRfCjeM3bOEi
ztvCFb6VMUJIudvh+ANdzJAy/pkohGtftQ6ejKAQYduCHZvShXBl+sET1EgK
+XTH5tbDO0KIWZET9gAdIxg378oRQuSRofg1Udi/d9kLdhYIIfym4a2f6Gv7
4q+7lQvh3KfjeUGX8P1W2z6YqhZC8L/SpzOjcT67JLc25JUQApfy6nPRLNae
nekNQvA/aPltXQzuL+sva31rEoJPytneTjQcG/8laBOC99sXzNOxFNJ0fO+d
e11C8BSKi82Ow33IZve/F31CcFtsS8tHazt/cbk7IgTXfbHqtpexvyuzCkNZ
QnC5+nHRL/RRl6hlUkIhONbOtAy9gvXSZH31/X9CsGfv3KAYTyEmMmydzOki
sNNLdSpEt57Om3wmJ4KNzj8ObkygkNwf0p1/ZonAJlY9oAf9fcH7G0dVRECq
D1w4exXr+bfKxY6aIrAay05QSsT6Ul2fWKMrAgut/lvFaIFB8DLTRSJYtmPh
o83XKOTh8dOhKiYiMI7wqfyDpmVuz1hvLgLD8qK355Pw897Fi++uEoHBAOub
ynUKCZum+8ZxjQh05y7/U4q2/bVMzN1WBNpbQlh2yVgPeY+7dO1EoHbumdgA
2urJh73HdohAuegfLTwF94+EljYFZxEo/F6roZaK929Wn7SLqwhoCpcWl6NH
T0rvKHYXgez695bb03BfCHyXwPISgdRpysYh9H4rnadFx0Qgkbt9V0Q67nuh
To9c/EXwrz3JU+MG1mfVfZv0gkQwQWkNeIJO/lVXfSdUBDzrueE7MiiEueD6
jdQwEbD8Xa+OoDn2DI8vESIYz75zO+omhSwU0N4FxIhguKXnkdYtCllxeOXl
pisi6JdaUFWJHjxhB2nXRNBjceSdw23M/6bqtLoUEXQdzW8dQyfPn7qef0ME
7bfof6IzKaRij94WkimC1kZTts4dnAdSzr3UzRZBs9ipac/Qar+ig8/kiKDR
tHLmriyc9zqf6gXmiaDBc1KDgVbyKlbKKhRBfSoYxt3F/iG+Ku1OiQjq3l1c
qZtNIYfNH/CrykVQI3qzsQY9bL/BsqxSBFWGM5xd7uE89zXuwcdnIijfb3eI
hQ7dVXiN+VIEpYlXT165TyE6Zdy2ltciKKxrDl/wH+ZVlqpb8lYEeZw5iS/R
FwLkd15qEEHOgt2Ze3KwvjJ/xJg1iiDb5VY+B33V+WPO+BcR3I7rrkp4QCFv
l9qYB7eI4Mazee8NHlLIgcdLZYLaRJAyfqitDl1hZhHd0i6Ca9q5fa652N/H
NX5Apwiu7Bxl89CW52MTeN0iiI00Fr+Wh/Xrj2kq6RVBVEWA/OJHOF85f7U/
1ieC8MFyzTdo+837Dh0fFME5VaHhgXycH8ofx4uGRBBsZ7VKiL76Ry1q3qgI
As+HbbpeQCHX7xbeSaCLwL+4ztmoEOtFSHSEOVMEPj3Tvd6iG+UzSvayReCt
uCnQvYhCvjZ+3DDCEYGn7ZWLE2h3dYlcOk8EbsGfE1OKKUSzTTjhJBSBa97s
O8YlFPJ7+mhEu0gELh1OBe/Rnd1/Xp/9KwJH2o3qg6UUUifddk44JQJ70vH+
L9rIfqzHSmwC7AK0vqeVUcj7B2Xx76dNwMb7Hv1LH+N9KEjmrpWYAJvW/zgf
0GPGRx3vSU4AkRkS9yrHerQzyldZagKsVhrOEqvA/aJ8Tk6H9ARY+BzXykDf
5B570yozAWaZpUZmT/A+0ZfuOjJjAkyauKsa0fs/ih8+JjsBhuKWm72f4vlc
nfn9uNwEGJiddRGvpJDevo93G9G6Xi+8bqFn+3OvzqFOgFa6eNDyKuwXdX0b
19ImQK1hfUQTmpsW7eqCVp6MuXa0GvP4dK91MFphycc7ks/w73m4hB+ZOQHy
bjMLM9EP57wdSEdTknY+s3iO/XP4mHERWvp1SkMzevkadfUD8hMgwfv+3acG
z/u/xIeA/qevPiD1AufhyijGArRo9wFuFvqC7oTSMzTvcrbEqpdYryo0JZLR
rOd9s76ho6NWNJuix+kG2sdrKeTeV93Z02dNwLCOz5IZdfj3D9cVnMSfDzgU
Wd1DP234GNyBz9MTxdq8+hX2I7cFBv9/vq4n5rvb0AdExTd68Pu1DwUfPvEa
95vwGQPJ6Fa1Z0Fyb7Ce6nHs3+D7at76L+I/NEXkM+CAbgxbmwT1FKJMmmme
lAloKInK+oE2OzEklYPvu773XeHJt3jeG0frMvB86uZQnlPf4by1v17zEZ5f
zYbtHx6gf8hV/KvB860KSfqx5j2FaM05+k8CXfHo28BP9AyKgZsL3o/SThVe
UAPO427ZEkumT0DhTFdJ+Q8UYt3RnZ6N9ytvzZ3ZeejfGh2Te8UnIOdkj7bN
RwrJ9O4O7sX7efc/PeMu9MU3h9RS/2He27xXB3/Cfe0ML3oP3u8bM/K3zG7E
/sZLO7RpUgSpq+i789G+6p86r2MeknxNvW0/Y34EjLwHAhEk3Ak69Qut8VLJ
5f95iv3yNDK0Cefv4wmT3pi3KInJJMUvuI/siCjgszDv5nC3EC3mf3aViIF5
P3yxaGMz1psNkhsdxjHvN94870FffBvu5zyGef8g8/HsV8wvUS2PGsa8/93S
rtSCeUt9nDk6IAJf46uDxeg/M7bcvYX15Ih7M2/zNwqZc+3jl54ezPv1OdP7
0DMv2TyM+o15f+OiENZKIduSXdrFujDv/Js6c9twHv2PZdnxE/O+sNu4DL2W
2WGu/APzvnee9dbvWI9cO37ZtGLe4w/ZDaDt38y6mPkV+/uLh3vCf+D9aje9
mNCE/Z054q3WjvVvqXJl/Sfs7/ONT5ejn1Xu7P6O9Zc4BURt/4n7+7RpAS+w
PltFl18fQqsMN87Px/ptUSm4G9GB83/V01dhtSIwG1lVrNFJIZtu6tkcqBGB
iUZYzRO08srzlmeqsb9vr/u4owvnHc8DLkNPsL+HT/85gt5XUmrXWIb9vWzj
UFQ3hSz20J8fXSwCrb7LfK1fFHJy1fM5pgXY35U/T69C57q8eVWYKwKVTbMV
HX9TSESY5CTBfqZ4xmneOHppiDQ/DvudfEG6SUwP3peeseIh7Idy3T+t5/Vi
PXl18Iz6TRFIz9La+gxdcHtgZUcq9vd1Hnt3/cH5wcJy9d8k7O+B/x1hoIca
JXSuXhWBKGfwdFwffj5IYqznMvb374sv6fZj/dYQO9V8Cfu77PHkGvTM26uv
hGN/p1uVZrsM4HwprrK3Bfv/iB+3mIW+Nv7O1OIM9vcsixdXBinEfMNfQ+4p
7O/NZz4tGKKQ1ZqbyrMCsL9Lvvj5Et397mZ4lh/29+Xiw3uGsZ7bq5d/OYL9
3Xu9gIPWoqoYrz6E/T0jRurqCM6DphPL5+A80/jxg+LCUXy+nu8X3+C80zBF
m/8KLVs3iyfugv3dZOfSfWNYv3l+pjIO2N89UoCP/vtXlLt1O/b35O9br41T
iNzx98sUNmN/r1dzXUynEPELrj+D1ougQrD/6Bv0/SdXDVUI9vdF2cEHGBQS
/FHsqD3Ob4WufZeE6Egj194ny7G/JxikXGfiPtNkyGhZiv395bF7Rizc//5m
ql0yEsFdVmHJW/QCiTTJhQYiyNRlvXBn43xR7HZ3+nwRZOwyb5xAuzf8M3qs
gXmPCe5I4eB8pFCVZonzaFJV9bAxl0LWb7+v/Ge2COJHpwTv0W9ufQ5Jo2Le
NddKe/Jwf7+iseysDObdPmrOFHpGyLnCWAnM+8V389P5uF9cWKPkMCWEs4/l
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
9k9L9zdcWS5cWqFzuwrttg7qtKdz4eIRz0eOR6hEdST/QvgUB87ffFA5jrby
iqvi8DkQ8mn4bcxRKln66vJJJyYHgv4Ztc47RiVfLD4kqo9w4MTSE3+eob0O
Sacq/uGA38HHrF0+VDLTyHjjp04OHE3hizHRswSDZ3e2ceDQ25UzL/tiv1Cd
/6+9iQPuwnMaen5Ucvu+o8Toew7sW1y7+AU61H7VWrXXHNi9T3Ll7uP4fndm
lWU954Dj1Q0b2WibFF/91U84YF8btyveH88jA3SgmAN27E+e+ieoxPXh3uCQ
PA5s1Jt1shYdM/Vom/J9Dqx3dgzfG0AlkSYDhWW3OUBi065y0cu1dU6eSOOA
VXX77asnqWR47k6vnkQOWIxp5C8MpJL5toHBLnEcMNNyr3qF1ptluq42kgMm
O+6/2xeE/fBoXeLs8xwwjBho5aMFE342y4M5YFC+qO/aKZx/Fc5N6gZwQHfA
l734NJWYTRsudT7GAe25JdPq0exj1SlLD3FAfQtnplswlVhKTX+ieoADKudW
aIrQyzQ3+bW5cECxKNQwOQTzKek6/HInB+R/P1+5JBTn123Bzul2HKAoTNv0
Du1effjLX1sOyKy3cfY4QyUyUdNTjhEOSJ6OPjSJLvw1PqKwkgNiuQ0nU89i
/mt6xK+bcWCinXrR5ByVbNJ8qnBhCQf4lB2JDehThsmmxw04wLZOzvQ8j/1a
y0nSTocDDP+2/Cn0emaJ71s1Doxmq1anh+F888Ko67ISBwZa9r03vUAlUlu/
7daS50Cv1N22j2jhF8uW3hkc6Lb40+cVTiX7pn5IsyQ48POoPkfsIt4/WsHu
iik2tN46Kn4TzX/Is58nYENzY4G8eQSV1E+P8JnJYkOjGFPzM7qRR5HfNsqG
BlMzoyOReJ9SO8b39bPhrefpVRJReP9O1g2r/mbDq9SqTbfR81sfP/7bzoaa
d3+dV1zC9zv6qHB5CxuqRMTrC1pu1Pt62Gc2VBhGBh6LppICc3GJ/96zoXT/
24vTY7C/zCUWvFdsKEyUvXYHHap3uvb2czbk1W29YxlLJV+3xc18+4QNOZzE
gq+x/38fNds8StmQvaCl2jeOSpos9b+tyWdDpotyg/RlKkk+VuB2K4cNGXF7
vt9Fa9nPnWZ4lw2pz273r7pCJZc138evu8mGpPFfnG9oXl3OPZ1UNiRo60r4
x+O8YFV2cX0iG+J2Hp4lm0AlYbO7Wc5xbLgUmad1H31x6yyFV5FsuFgxZmR9
FfMXfzNUK4wN5wZNrL6j5Q6cTo0NYUOIauDmgETcLz2rhDMD2XDK7okL5Rrm
x1AyqM6PDQHnRV456P7JyCNj3mzwK14dRJKoZODoz3PHD7LhaM+FiHb0ur8h
4eP72HBI8fW1wOt4X2S35snuZoO7rXQWLRnP89nCrw8d2LAveHPhQ3R4bdv2
mK1scMmLf7Y2BfvV9PKlszeywbGjqaEDbf7myzmFdWywpyn+OJWKeXs7OcN1
NRu2EucB+TTMy6GeLboWbNgUkMHNQ59/1JV405QN6+93SqxPx/ni26ypzUZs
IK3as7vRKpL+lsP6bLCS8dQOuYHzWlhj5oN5bLBY+WCJQgaej9vQn90abDDz
GbYqQBvdS4hRV2GDSabRlg03qWROX+WY02w2GDb57/6NnpidU25EZYOB+OPD
Z25h//FfGF8tzQZdM37QnNv4fqwH7+pKsEHba2VkEbrhUIDX+78sUE8/l7Qp
k0r+2JgopQlZoNLwMqsXXVigcfs8mwWKkxJF5+7gPMpLWnZinAXySzY8V87C
+UdsT0HBEAsobnEfStBbX6r7mP1hgUzSpx9b7lLJ6tmj7/S6WSD5Wn6wD/3s
dLn1qx8s+Md14IVlY/0aiCx49o0Fk/ppkqr3sH57+UvLN7FAsLt99mP04TCZ
R/4NLOBc1tDZdh/nGWcTUVg9CxjP3YwH0Y/3il0/9pIFo/R7qy/+RyWG4ef7
ZzxjwYDOwBb1HDyvQuO7M56woNdh0Z4KtFa04+uTpSzojvL1tn9AJZs7o1rT
8lnw80nxqWG0PjvLpOoBC1qH2JGRD/H9vbBe+SqbBV/VVlzXzMV6B5culWWy
4PPW0LtP0YpFAV6Pb7DgQ9jzop15eF9yTXlzUljwtkSsZhT9TLm/ZUYiC+p6
13289Ajnh3DVoxaXWVAzJ7pdOx/362+0iTWXWFC1oWGwCn1hvf6p4nAWVIRQ
+Y4FVPKyof9G9VkWlD6yn05HV9v9O9cbzILCzusKsYWY98xYx6MnWZA3s01n
fhGV7HJcVVDtx4KcNaomz9FZf79lPTjCguyT+6ydi3F+lKihnznEgsz/suyY
6I0xJpfWuLEgo613z+USKunp/7g+wZUFqTP0j+iV4v+/Y5hxzZkFSauOnn6B
zvW9+CV0JwsSfAuidpdRyacZxkartrEg7g7jOht9Z0nCM9tNLLj0ZVl2/GMq
OSSwENdfz4KLEqeL9cupREG5a5sxYcF586qaWvStqIF1xlYsCD389+PeCpyf
N3B9clew4NQN8pOL9tix+vCyZSwI+BAxdPUJ3u8tzSfLl7DA7289f+FTKmn5
z+mPxSIWHDGWlXqNNow9XvlFjwWH3Lcq7q/Eevo7lL9LhwXu1xPnCdAzaWHn
RtVZsO/NV5OkKux3eotSs1RYsIevBIbVVPK8IuurkSILdi3cs7UePZhdWBU4
kwU79t7e6/YM74/Vr1gpORZsjf91RIR+vN/SlS7Fgk0v5gcnP6cStbuMJyPi
LLBhel1aUkMlOw20Bm5OMYHMz0t+h96canl8v4gJVk5j2R4vqCSxJUI3iscE
i2iTkkn0/e2DpyRZTDCrPPki9SXmnbG+yGScCUtHKj6Z1OI+un7f8ZAhJhhq
iH42oBnZh5WW9THBYPvqYc863O9nxhlp/2aCbvgFwRQ6aY+2QloHE7TLXknd
eEUlH45kXfrRxgT1Pqk5y15TyaqxDytZX5mgorx5/id0hHizz4EmJihuil96
+A2V9NZcC1X7xAT5M00wrZ5KFsbc+n34HRMoBQrbbqJfl67X8nrNBJnuXa7m
b6mkqG7vAbuXTJCclXH0M1pG0XOkv5oJYus6g4+8w/30kdch6lMmTAZqR0u8
pxLrs/qvx8qYIMg5mHIbreqxS/tpERM433PurWigEoevZ3++f8QEhuxwyRf0
Ra87+twHTBixMnp57AOeZ+D+iVP3mTDg5984/SPuZ2VPa/vuMKE3q6zjDvrp
A9tquVtM6G7mDVt+wvOwrMz6mM6EDsmVwq9oStC6SPtkJnxffk7ar5FKNuTX
9kckMuGr98s5Mp+x3gzKXJOKZ8LnDAndbPTnMn2Z9zFM+PDR1tSqCesvf3nL
wygmvJ2KJa1o201l7YPhTKgz+bTN/wvWQ/BrnHmeCTUe8vtkm6mkOTz2cFoo
E6qSHY7dR0t6Xex5cIoJFfWpIdZfsb9XCOnnAphQJvgR/R198nnZ5//8mFC4
SCM1oAXzdv4BuXCMCXmubvcp3/B+jB7yeHuYCTkJ90pz0H2mQz7ynkzIftn/
krTi/O7Wq1x5gAmZrIWf29GvT6uwnrsyIUPXtzOwjUpocpf+PXFhQuqu4hHa
dyppU0kp93JiQlIMW/gQfdaJcbBwBxMSqpbLrPuB9bG17+zRbUyIGw1R6kSL
nl5fwd/MhEuaz3VPt+PzhSYbOWxgwkV7sWWzfmJ/NVBfEbKOCecvrlvzCP3b
8/EcW8KE0MeXtq/vwH3V+GLNxdVMONX/fl832i04Z+cxSyYEqFB9Qjqx/4yl
5/w2Z4LfZvtQhS6st9SRo3tMmXDk7PWYAvQhi1cXDYyZcKiwNXVDN+43LM37
0YuZ4PFr7n+/0edlVIvcDZiwf/a+sjO/qCRhwbbtYXpM2GOTVTvnN5W036vz
8NBhgtOp3s9FaHP3tOt3NJmw4+GCrk09eJ+6bb3LVJmwtf3IaC/63XbTRcHK
TNhEKRCd68Xvv+nq4xmKTLCxZsio/MF6H52Zu3MW5t1/mXIpumvrRv+ZNMx7
9ik9uz6c1+b93e0uywTLlspl/egekWj6NGkmmEv9XXOhn0qm9HKl6iWYYGJB
7FUHcH78kXDVUwzzfjRi/2P0PyemkfxfBhjcqvfZNojzxk5r2RgRA3QbZ5wZ
RBd1qfvP4jNAW2xr7MUh3K9tY4O1OQxQN01MUx/GvOyrumLLZICK59f/KtAG
q08vODTGAMVUpcf2I7i/ORx84zbMAPl3u+uG0ff91zQ+G2AARXSrKXKUShzX
y/rzehkgY/irS3MM99X5ccdLfjFAcv/8sado2bB/37s7GSCW6DWxcxz3H5nc
kkPtDJiszZ0xhh46nW/X3cYAAXtUOZqO/Y61VCu2hQEcPZMFOgycp/b5raj9
wgCG80mzanT7zoU99xoZMBJbsdaJif1DZ3Vh7wcGDFYL7enotyltaoPvGPBn
zOpALItKOA1PimzeMOCX1gXf+WwqcTFfETrtFQM6drw68xy93Dj2tN5LBnyP
kIpz5lBJadUiZsQzBnwt35TORFc1Lju8pooBnweu5Fzm4veV35Z84AkDPsxt
eqzHo5KSYoZT9GMG1G9RePUCbdUV8N+0EgbUndv1ZTcf35/G8tizRQx4UXSj
m42ec7M7bscjBlT/7hiLF+D3v74tkfWQAU8UtCf1hdifo7OtDucwoGz9Qdk6
NLu8uG3PPQYUns5RcRVRCf3tmeOvshiQlzu0gIcOfLB/Di2TATk/Dc0TJ/A+
m7mdvpvBgGyq/7pFk9gPPMtX/kpjQCaU7XiNjlk8uscghQEZJ3gH9v/F+3f+
nozudQak3rP0E6D3MrmHYhIZkPTt7NmkKSqZ919+zPd4BiRIv4wz/EclsQvr
4/UvMyDOUuJGPZoR4JZoFcOAS8dsH7iJ0ciL49YRllEMuHg7tlyEbkpwU10e
wYDznz++Sp5GIycl98Zvu8CA0GnyzUvEaWQqq9le/jwDTi1z+PUO/TtsdOfh
MwwIOJQ67iFBIyGe+kYngxngl/ZjchIdUb3+piiIAUffq8ulSdJIUd7tcPOT
DPCaODB36XQa+Qmf8q1PMMDD6J7+B3T0A+Pgx34M2H+g3/yQFI1sGSV7Zvky
YM+1hTb/0GWuDJ7jEQY4vfLZeUOaRtzL7RhdXgzYwS1yWyZDI59+nX150JMB
W/XZfp/QXuTDdqY7AzbtXn7u8Ax8/jIJN2k3BtheDrk8TZZG/FR5G3+5MmDN
82c3bqKdRoqNr+1hwGr6vwfmcjTiK2e2QMOFAZY66yo+o2UDWjvW7mKAucOl
10coNBLu8y76oAMDTKLeN0tQaSRlA7/iqz0DDJ9Qft9GM6Y5ntHbjnkf2k5f
QaORunNXfBrtMO9q1/9+QU/XkDP8uBnzvrVVzmcmjTwI2Tbn5AbMe9hcVSl5
GpGKoURNrse8l7gaZKH3LJludW8d5r33zvKVs/D9Lw6P3L0G8z6n16YF/dym
x2aLNeZ9wwIHv9k0ct3SPNbGCvMecsRdRoFG2q0PLc5YiXl/lH88G23hmfN5
nwXmvZN+zkqRRh5FyQ6lmmPeacuutKKbGm3m71uGeSenMvzn0EjsxdXvk0wx
7wGVD2WVaGRGpua7fmPM+/3JivvoudP2uvsZMWC0Fd5YK9OIM7PgedhizLtM
xNfv6NGuW22qCzHvK+t/B6jQyK0i/193F2DefWYwKHNpWK+ouzt1Me+ZdlM5
6OmrUzcWz2NAW9NVyhpVGslX9tfna2Pexb+q/kSnLNy+/44m5t1MaWGQGt7X
rhzT3eqYd6/dK2aq00jqsTBPU1UGvEu/tT4XLdxee8lLhQGvG7od1mnQSJ/J
/mm7lDDvk/M8OtFat3y3+yhi3pd4+Z/WpBG5pwsnD87GvLvlnp+lRSM3g4q/
mcozoDRp9MojtNq81imJmZj318Y312vj+1J+7B5AwbzzAnK70SUZj66dlcW8
G1Q8CdGhkSSpTINgGcz7HuEbhXk0YiWulpMkxYA7V6xaCtCXI5sM0yUx7zVh
PRvm4/tiLAqwlsC8M+oYv9GSUmZ/u8Uw7/Ok/p3RpRHT6b6Re6fokOC4iaqk
RyMJSvY2wyI6xF26olaM7pRycPPi0eHS088LNy+gkYD6ofQMFh0uDs+2+INO
W7peet0YHc6r77I9r08ja9qZ+5+O0CF02w1HFQMakRBfMUttkA6nLnR4lKIt
NvTk83rpEFCqdcJuIebb++2WpG46+P3xCOtHV1CfOTR30OGoUk78hUU0Enjl
uHr4Dzp4bRy6qbqYRpjxScvvt9LBI9Qw7zH6kZJPhXkzHfbnH3+6zZBGxBR7
UuWb6LC7q7R+EC3NHKtd/4EOTvK8lotGNOK5sZN8fEuHHWste9WXYD3IyhBl
vKbDtsCzzAp0HbOf3/OSDptzXvyzN6aRjUNu3fY1dLD9Lk4bQVd+aRmTqKLD
Gllb9SgTGjnH9fTKqaDDaqvYRVpLaUQ/b6O7SxkdLP0+WlSiOwTFW5KK6GCe
NXODgymNLJ+3N5OeTweT5p1OY+jwD9d3Kz2ig6Fk6sHoZfjzUpb8lhw6GCz/
cULHDM9XM3ap0z066HmrX6hGv+xndAjv0EEn40CCkzmNLIxLGzh1kw7qH7Nv
0dGvt5bd1sigg8pUX17scny+8WRqQRodFE0WVs5fQSMDD22nZVyng7yHz9vn
6PdJn7Skr9KBklz0zdmCRjTlo1TXxdNBpp7Vy0RXUvRUT8TRQVJgzrpsSSPl
OyT+OkbTQWxRiNiClTSiUjzt9eZIOkzufUZ7iU5bv63oVTgdBPH/1PesopEj
JTVyXufpwHmxdjEHfS2edabsDB0YzCjLBCvMh39FHvs0HUbnv99gsJpGVlKa
g+oC6TDoRNlVh453GJq2+QQd/kRv93S1ppH1Xvzoq8fp8KsyKYCHrm5wadH0
pUPHyLcLiUAjZh8zpfYfoUObxtyri8j/KLrzeKjWPw7gSEI1M9YQEqJkqUgi
zomyVfZUKmRLiCzZQ4QoS5YsCUkiikgUqVAoSRKiBSkJZ0qIkPu5f75/z5kx
M+d8ns/3ua/7uj8auesSl+bx40yi0/jI1Ub4ltpz49cOTKL9bE6x9U4aKek4
wbHUnkm0Vgw+mIHTRvQmTtgyieav65qTtGmkRFYpYXqESTSsOtElr0Mj/+4S
nWAeZBKPDUqGnsPHnwktUzjAJGqCmBO2u7CfkO93R1kwiarbW1jn4LThCL1/
pkyi/PNpeupuGlkwpRC1yZhJ3OF5IKakSyNPNa3Uld3DJIp15je2wCc4yiWY
Bkzi5mlC3V6PRkYe6nzlr8ckrt8M11+A9djvzPDsZhLZ759ZpunTyFW+t5y4
tJlE5nIux80G6LszhzFNM4nLmnu9X8J/Bdv3rtdkEkkeCWcdDWlkXe4RnwYN
5P1aR8Ii/L6j0bt5G/L+ViA7Yw/6hrEtY2Ar8r70UInyXvSH3ifrgS3I+7as
h6/g9b/7zfqUkPcTn5uP78Pvk+CuU6GIvF+R7GY1opG89K+ynPLI+yvHr1fg
C8TveC455H2x8PdWYxopbd+zOkgGed88xtoOF0hFFTquQ97tlRguJjTSzO5I
mLsU8p7qJc5uit/TPixaZC3y3lQpnw3rccvpmYoh77Mz6mpmNPI3aT6WsppJ
WG3cYdAB74jz7tsuwiQsj4YecDOnkeUDyu2iQkzCLKHekcOCRm5qEmHbL4i8
P13qkwtXzU3fv8ePvP/WD1ffTyP/jA32t/Ayid3rLiZ2wjNlluH36Mj7gdfZ
7pbod4PRmdyVyHsM723OA/h++/svpqxA3mv21+TB573zqCVcTEJlPL1lx0Ea
+VYo+HwSJ5PYsuZDdxe8fFcMc9tSJqFguubbqUM0MrtvOV1nCZPYEGE3yW2F
/ThVWEGKDXmvvMF2A270nJQ8vEgRa4e/M4jD6IMOjm8y/yhCVFh+zXu44cj8
Kbd5ihDa46HgfYRGFh4w/1U+SxH8Z8o1Vh6lkboDhPztPxTBKJ0yuAnL729Z
UT5FESsG1A7utKaReQK8vaO/KYKTL9ipD3YZ1xFp+EUR7Lsf+5y2oZHMBzwp
/EyKYPFji6Db4v6dS7m8n6KI+cLdl4pg/+mVPAHjFDHTez5H5xi+39o/PS9/
UMTkitbbH2FjGjPm1zBF/NSi1/rZoX+2FTI2faeIsVNmL3jsMc9V7trfNEQR
3/NSe4rhB1v2qR0bpIihzp5vux3w+4rtWr8O7ucQnfoMm7KW/Lk6QBEf1GyW
BDrieV51/qXLR4roccnj4XeikWSq5IE1cGfW1zV34LW8PJZTfRTR3rZeUf84
jZTb0Hfs33uKaGVx2zEIUyLeg2QPRTRvKTUMdqaRvkFNmfe6KKLBYeKg4Aka
+UZnn+hAJ0U8vrz1eBks0R3h6ArXNPufNnTB83VStIq/gyLu/62JGIL9j87V
p7ZTxD35xUshrjTS5lP/jz2vKaLUWjtXyI1GKpRKrChvo4jixMg75bBm5JDN
+ZcUcbO+uXbvScwPbLIOwS8o4vrk8pffYN/+Jw8bmikiW8b4fZg75o8TqbvV
mygi82DSsIgH5p/pyRi+ZxRxOfbd1D1YJJkhOdpIEUm1QuzGp2hklGfQ49gG
ioinDvOOwJOvuuc21lNErESORIQnjby+/qPiuycUEWU2qCjmhftPTLD7PqaI
8HPrNKtg/hLJzq11FBFy33mPqTf6VtM252MtRQR+Lz40CpO3zzcU1VCErwjz
eKQPzgNrtc+YPKQIr71bfNecxryp/jzX7QFFuIecPvcAvvCgOES2miJcyqqT
zH2RZxbicEcVRTgNzuWOw5wKI6PBlRRhx0+URvvRyKtSmt+NKijCWjf80Vp/
GvniHv9jGdjK/9nLGljLKrVxsYwiLG9x9u4PwHwlsczZGjb7sOc7Ey78subZ
7lKKMKIlTMcE0kiP93aOMncowpDsYJcOopFH7tP3hMO7vQT46mCTtPIuhxKK
2Jl/cO3BYBopdkmEnyimCM2uK0oT8AD3xm/0WxShzvlZ8+IZGmnXOnHNvZAi
VNUl98qE4PWx22bqb1LEZjdHqydwM3fi6q4CilDILnS2CkX/LFWesr5BERva
R30nYaln29ZS+RSxjk0pMj4M+7mf/Cp2WELFK3n9WRq5XelS1Vwe8u5Uea0e
jkymJV26jrynz5QeCcfvwbGYLHANeX+hUTcN045K3rDJpQie+ZDWxAj0iblx
k20ORaxUrO+VO4c+0g/Q3HwVebddOtIIW3658SQRZk/S/2MdSSMPLv4aVc9C
3hsvLJ2FH2ppKbdeQd6n2viSo2hk9XL3028zkXdZXkmFaBq5zyf+2TJ48tD+
TU2wrjzHrHoG8n4hXevYecw3jRsqWLE+9qhv7xy8Qa7Cf+Ey8s4UP5waQyMF
RINER+GhtXYnlGJxP0X6okXgfvMbfi1wxfd1A26pyHvk90j7CzRysVo4uSUF
ea/amLIAJ31hialPRt5H3PPSLuI8GBI0cRBuX11etjkO+8NqjvLTScj7vqm6
l3CmPCM9AW4KVXvlGI/zTH/NMym44W5Q3yIs+eFNhnciRTz5UjeSkUAjr60d
MutJoIhaAbYZ5UQ8v5Nxg6Fwtd5ujjb4N5GT/ysOeQ84z+98Ceel2mixZfHI
e/FLSbYk7O8xjP3aWC/+SNucBa+q2cFRBN+kmxGqyTSSbXMml9JFisjbmbqv
HdZaNW+ecAF59+457JKC+/M6K1ASzryx2oU9Ffvxhq7dcbEUkdZt7Z8NV5Ra
+PXByVx5UWqXaeQ7mXdGtjEUkaDxNaUDvsijZtB1Hnk/uf66WxqNdH4v0e0V
jbznuN7lSKeRRl0qcWxYD39z53EuHL7lQUEY1kOWTLxSz0D/u1d+XAYHbt36
oRN2zb87lxGFvB/3/+Geic+rtvL5Jtgro2aG8wqNvHHvzMPmSOT95T+O63C/
+vRXG9hlYaeAZhbOD1P2gyfOIe9KkVLd8MYXV+JCYLtjzZs9ryKP7nzaqbB1
8nJyeTb6kN33ugJs9czI6AZc8Wr+bBRs+efSESIH80vKU56zEcj7hncu72GP
9WxrpsOR98NCAd65yKNElNHLMOQ97nD0yms4D+SnuWhgXfdxdupN2D2myF7j
LEVo/xq4vjMP+4/lLotfWNeSWlfeBystTSuOx7r6fucnp6/TyOBfLQYcsGp0
cRs9H/fbz8xmCO+/+QH1oQimlasvr8e6wujmUZ0bmB+K6iWCsb5B7PTsR1ix
6/auyhDk3bh6mX8Bnl+1XQMfQpH3s3MCvDfRjz7K/9qxLlahJV0C/wtUlngO
C389u0W3kEZ2ezW9CcL1Aquekf3w3rjHjvZY5zHgNA4swjx1ZPTUP3hF0J6j
/Ldo5OtI8pcErue8He96B5bbGLAlEuvsn98E6BdjfyCnFhphFh6B84Ow6+eA
gkJ4Xvvg5eAS/N7tW59Un0Hefa7kC96mkRm9yu3BWJ8s+FReBpdw3loiDf/s
WfvU8A6eLwfJmUR4jNvx9RD8ebmtQwxe/31H4ceQUjyfCyaC27A+5D46KlSG
+V12pFAQ7s9V/FsOnyjef4Ef/tDhybnvLo385itbqAj3sFcKDsOqGR1tGnCn
6oz02XLkUYuNWw5ud9ZQXl1BIxP5m9dxwq2ZITsr4TsdDeK8cHPrU2Pje9gf
GAbWMnDjP3brEfiVnP90Bfxkk75bRCWNnA+s4NgM19pdCBS7j3lQaM9Jc7g6
pe18FZyh286lgu9T8ZwnzbSKRq7jn9TLwXrpjMWNUbiQZSxkGC6WS6+IrKaR
HTpX4i/AN4/0PV3zAOdbTZW6Srw+P168/QFc6xWz/xHWc58c+2T+EPNoxg3V
IdyvKxP5Y+Ow1JTdT3s4Tfr73+gaGpnrqNGkCCdbbuSSrMV+Zc2pcRyOP+++
qhYeHRGPGoRjH95dZ/kI80be1teGcNTYpPJP+L4OS0U7HC6uph1bRyPtG12+
MuAQkyAT6cc0UvTiJaf1eF4Dw+us6+AP6+U/WeB59r3HevLgE6y7SSSuwLrX
t11BE7BbzRQvE3YXOh9z8SnyfGSpSwuudzF8mSZTj/0+MnBgE+wUTCt4AueP
uWbaIF92d0zvWTVgfrp97ut+vN66P6V+Ej7yvW+EA3m24u1pj2+kkbb1Y+85
Yctdqz+vf0Yjp81cUiPxejNf6/F6+NVnka3d/+e98Nrcked4fsQf2w3gesPe
Ia4/8JWyrvBv+Pu6K9YLXWpCnoVDrWuwrq3lKrOxGfNScDwfA/uT1qk7Ks/g
0o1F0R6wet4vbZsW7B8Tu1IdsN+odqqYzsL8ZSwZy7Dfbebwt0l+QSNT2NSO
8uF6BbWakwovMU/fkVcwhje4/AtqggP6ugQEcb1M1s7YY6008llrxqGl2E8l
286lz8FKo6vetmBdjKW5IPUV8lPwuW4O68JbllcqteH78BR1bYUFHIwaWmDa
/VNSCzDP5Utv7F/j95ChPz4Gr2ju/LwAS/HoaMlj/+f8u4pKa0fez0wYbYPZ
5Q/Pb36D/W/XzppKmMU6m7sV/tB4y58P/bGQMCDk1EEjDynOXs2EZ55Ky7K8
pZGOsr55quifyd/Ht2bCnA9jz5+Ef64r1lHpxP2zSP46BY8doEzb4G0Rqbx+
6LfvMZttnd/h+fskvGkGHqrxcWfropHaPpZPteD+8argLLjBYWZaF/6wZi5W
tRv3kyWfPQf92WOqldEOG6089aUR7ow4e9Olh0YumIa3kejf9srGSvb3NLJt
XPWOLfq6dXhZYza85YeBhsEl5F14T4daL94/3cr9C9Yb98T3d8Drt8tkdfzf
72feUG59NFIwZzSqAK4t5V/g+EAjNe4kP/XBPFA9cGD5NZjJNcyzAvNEBd8V
YY2POJ+YLbXMhkt3f5J9B3+8xebDjnmkxG+tqscnGnm55kjSHFxY5LCL6zON
3HmBGjbC/JLfd9PsOuw3NljVAuesHLXV7KeRgYavNx3FvHOFUPTohj9vWXGm
Hetpnp5nPAdo5KM5SYmkNOT9+r0LywfxfX3ETEtxffy7Pxk34C7Hxsy5dOR9
mUYh8YVGDqpYnvPC/BW1PeT+e/jV0yRuUTjC9Wmj9xD6YPZNWBPmsdCr7G9X
fkV/JEzE0eGg13oDN+FEovCpI+Y/X9YLzJ3fcF6Wsrq5FfZSblvog71ERSYi
MS+6O/Ks8B2mkQ7+232nYJc0CxHGd5wvc78rFWcj7y1p62/B1LVPe7Uxf9rN
9aruGqGRcUyK7Q9srSC++xOsMWY5pYx51crmmLn/D+ThM89VPcyzlpfyj/GO
0kiWO+w2SzD/mjUMe5TAtvnvCktgoym5EN0xGvm8wnncDfOwoaz7xX6458np
2BOYn3UP3c0MHKeRZmmL0p2w9oXJQn4Kfcrr2RuG+Vvr0baqO/ALtnRTK8zn
6szAZ/pMGkk8Nti+CvP71rV1bwfhrC/L/NPgLeasg8E/aWQ7q9Qnb8z7ipG7
fgr+Qj7rSrWMcR6Qq4r+VwZ3s1YNzhYh7yMvVuyZQF8Mch8Vxbrkatrqr/BC
oWFLBSy2z3RD6G/cT8Wyp7tw3hAOTdkmPEkjhQ1jLY7eRt7vdu+ugJND4rf+
ghlfRCz2TeF5jizsL8N5ZoWAtd0wHPFS0+QMzKV37dTZaRqZWkhwvIKXBgyF
rP6D+XK3XswRnIdYi2XjKuHKJX7Pa+8i7x9crhjPYP/3SozpgWdod4pG4OIr
7I4q95B38ldVxCyNNI9neSAK//RSeS72l0aqJb/2HYfH8v06q2DFL+WLV3Be
+971cNB0Ds9LcJRO/H3knfPfz1FYLDPGxxjnu371nYuR8/j7MYvLy+APbudW
SizgeRo13TON82FPdtPqh/B00lWaNM6Pne3cchb/sN+Q7GGScDubkRoFhx9+
bfgX581WlUu65xdp5DGTTt8JnEebnTotJFnoJH9oVOlRnFcb01fZ18LJ0spF
Tx8h7y+sPC1Z6WSoh6rTPNZr56+G/oRfBS5+b8N5t1pxIC6WjU7OHZVSasZ5
+J6tdJb0Ejq5oeVf6+xTiihLOn6rDt5/u+B9Ds7TJY23qg+y08mCkwmV9Thv
F06PP5+ATwpLMpPg/PWb311cSifdjFNkP+P6HCufLzIcdFJRQbyoCef1Kxer
fj2BZw/ISDk/R97r/i5aLcO6lqj0b5z3k39q0qbg4k0SV13hRMmzogmcdNLG
vvhD+QuKuGDRKLeBi062npWy4IGjo5Ztb4CVNd4c+P0Sea821DvKTSd5+HkU
J7Ae+iNu/x9Yx9T7yodW9LvoG/tLy/H6GiOf+jbk3Yjfa+MK/B45zAt3YK+w
A2HPYLb2Mvbm18h7eWa8zUo66T7DYaf4Bnkf+pj1/38aK48hq7wLdhJcW5xM
o5PiyZTsqQ7kXd/hgQKdTirEFtjrvkXeA282NcHNZ6NUFmCrkh/vjjHo5Pmn
8b/j3iHvnxSG5uCiXq1HEV3IO8NzIpWHTgoNv0nm6kbete+xbOKlkw+lii8+
gw19/tBewJ9VNh/0e4+8F6iLOfDRSQ9Pa1onrN1zZuM/ODP7h/vdXuSd++n2
dH46eVyztmFJH/K+g11/iwCdXF6vRDh8RL+761m2wvJ7o/sefEDec2MdnATp
ZFXOAem7n5H3jldeLKvw+0qNuCfDcuw8ZzPhpUJq28b7kXdViwQVITp5qd9K
xWOAItY6p11tgzdZKK/lGkTeM3uLnYXxPIwOL38KC7eKPWQToZP3/dj0AoeQ
93+2zVnw+svjr9Z+pQjeTfldqqvppMjmqNQcmGY3PNQOf77OMceEuVLkfruI
4vlmhP5LGkben59kXSpGJ/2P8D1IgFlnyug58AG+rT1BI5jnN0yKbRenk3uL
ota++IG8H94m/xY+F8Cf/nEUeY8LVD+5hk4mOTHMqDHk/fEj/WUSdHJmr9SF
0nHk/RfLgWswj5tHaCRFESNSuxw11tLJIAPX28nw0P5o73ewgZGNRN1P5D36
xVkPSTr5u0D/ugv84cHKRC4pOllSyqzv/4W8j5pkX4e/F//Q65lA3sVSSjSl
6STRpv7r+STybtz9sBveXTSurjKNvJ8VafFcRydHaFdYZ+DmiqPdy2XopJP0
VvMvf5D3r7lfb8BrtULWe8BPVg39JmRxPzQPDjnPIO8Gsmy9sFKIUu3RWeQ9
yIXhs55OBiSG5+z9i7zfvi1O20AnV9ibZNyfR94//5QvhPVt+u7HwCU8Khra
cnSy50bbeNUC8q7jZ/ABnh/uXR30jyKun354wHcj3u/VpLP3IvJ+c8GRIU8n
H0R8zotnYRJX3pM+t+DXcdkWHmxMIn35ufBdCvg+LN1udUuYRIpmU+InmFP7
+4e77Ewi0YM7x1+RTiYmW5KrljKJC9f23eZVwvutrlC+Ake/Tawpgdl2Rx44
yckkIpZ2tuhuopP2e5IKgrmYROi2VT398GrtuNl5rAeesPoWuJlOavR+4ani
ZhK+V65O8m9BXn33beuCvV71s5XCld8ja1JXMAmPRSkeA2Xsdz18AYormYTr
5uNrvsCrTmauSaQxCSf7WwpnVOhkzaedGZOwXeq4xqqtdLItNyriLINJWDdt
MrwLmz/RGr3NwySsZr0P7lFF3tz6qgJ5mYTlxiqnr7Bc0qB1Hh+TMDv61yd0
G52czgpbH8/PJIwSNCOE1ZBn0tNaWIBJGD4Nu1QB74hymBddxSR0fzfk7NtO
J6npxtJnsPa6ZXeG4aIyEQVfISahdcCw9qw6ncytSDbwFmYS6jFxL1Zr0Mlv
3aG9q1YzCdWa9p5K2O2hRe43eMs437DxDjpp2b3q6FlRJqG45sDUCPxEkPuT
nRiTkDPNXHJOk06+uCCpqraGSchEfOQR16KT6oVPIy5JMIm1lRIS1fBp/6G/
TrD4sL2iGUEnH3tEVMVKMgkR4Zs7xuDwrA01F6WYhOCeH4ZRJLzDerUkzHtG
4ZDETjopO6C8Wl+aSawsPXX8IXzF4+D9ehkmwTVQcdpCG/ev5taqu/BSvj8R
FKz/ey764XomwbpbPem8Dp1MK7oebALP+57JldxFJ7NUfie4bmASM4VP7tTC
Monf0t3lmMRU75JHlrvpZN+nGitRBSbxa4Xey59w8Ay70CF5JjGuFfs+VpdO
7lQ8tmFAkUl8P/VqWFqPTupRt7e+xvVDeYzpOphvqM51aBOT6O80Zz+kTycH
FsN1hzcziQ8caby/Yf1PVWNNW5hEj1qvRJwBHecz/sQWZSbR6SKmJGuI/Sgn
JyYK6+1ZtppPYbXVJltLtjKJ1rbrew7voZPD/9IOhaoyiWaW4UNT8Ofqizt9
tjGJxi1yzgl76WR0XThrPvzE4aTvhn14nu32fHHfziRqL5eda4AfZZ/8pgBX
N/9OOmpEJ2tts/nk1ZnEvb+q1/7AZjaFP6V3MIky+cDSS8Z0MkLEe3OwBpMo
sX70aKMJnfwzZ6uzQpNJFCaytD6D3+5aGkDTYhL59Tq9NqZ08u5s1+9lJJPI
nYz6PgtvvLZ4/hPBJLJkXkwnm9FJ6zeOSwS0kfeDK5cqmmNekIs/JQenxJrw
NcOJNCvNSTixNnmtnQWdtHI62NWqg7xTXUrzMD365+NPu5B3CRGty/vp5Keq
dXcrdiPvZkf3brJE/p5RN+11mUTIuVyrF3Df+1Xb3PSYRPD9L84OB+ikhF23
iY8+k/D7LuP3D3559dOPpQZMwlvEJTL9IJ38Wt6456Ah8r73dvKWQ3TSJ79V
a/se5D3k57VWeDt9penhvch7mXKZkxV+73fBE4mw3aBvHcth/P01iRZW+5B3
/oetmfBO//3r1hsj77oLvSpH0JeF/R8EYUt/cqQN5naSk8yEzW5F/HE+Sicn
rZ+OT5oi7x+eL11iTSdDzg08fGGOvNO4+a/Cq7Kmtf+3LrlPcpsN+uLB4Z5C
C+TdK3HTGziiTJmhsx95z3+r5WpLJw8PN7/0gtW7BPctPUYnr0ZvKY8/gLxz
Wh3Ogf/s2KinB29Rv3piux2dTBW8Nux4CHl36/d7C1tbV+8uO4y8Z0tFnbSn
kxzHO5/XwDLtTinLHLAfyrX5HoYl2W7lXYNlqzdF9R9B3lXGyzQc/9+vWe4J
2yDvTpsev4N33i3ZZngUeU/3fuXhRCe5on8K+WKd98X9Pq7jdFKaMDjqZIu8
z8+OXId1WcNPqsJcipozms50cmL+uaaYHfJuG8bRAwc+Vw9LtEfekxr4vU7Q
ybEeevso/K+BQ2qFC+4fe7jViAOTmJ0y2FwAy/346XENnpKNI0hX7KcmMyXX
nJD3Q+37euHPg+UnXeDxC3xHfNzo5MqIbCcHZ+T9kaUL7SSdlAzV91A/gbwz
M/wL4awX1lwKcP/aj1Ha7vg+taUVu12Rd3OJ1A+wk+wRQgTuibS/7utBJ8l9
roHb3JD3qoK7jFN08s6jRo2ak8j7yMjjW/DY04ndB9yR99UKbbs86WSFTnU1
6YG87zv14RPcpJ7Rmg83hlb88Peik2vy3p4aOoW8352e4fXG/uNT7XnYE3n/
sn3ZbZhjt/QPPS/kXeCMgJ4PnfwQvYV2yBt513siNQA/Jg+q851G3gOWbAk6
jedLR/3zNx/kvViXFPClk67nDcgQX+T9Y4xRKfwh6fWLAjif/uqIgR+dbLBW
X1rmh7zvZLh+gVeoDRw964+8e5sHnPFHn3fWCW8JQN5vXI5eFYB5viaixDYQ
ee9+n3oXPuFyN7EMTuASy98TiPxYnjfxCELeNWzLv8JDiU0V7GeQ95PXn4QG
4ff0VeTaH8wkzuV8axMOppMZE3/2vgphEmFvNnysgGOjSyz4Q5H3JSdH952h
k4YpvkusYL+tZbPD8OJi/AalMOT9+O9l4SF00nuEX2tzOPKeoSooGop5TH73
o2HY5WWA9H24Jmt6RRLstFC7xSQM83L1+kPfI5B3JZadP+Atp+KvU1i3PqZj
fO4s5rOVwp1N55jE4eSoo+Lh+H2Dz9+6Bh941uJaDWsl2fZuimIS5n9WBJpF
0MnLCRvoq6OZhPEGk/NjsMjQvM0s1g0PJ1+OOod5Wfrwkmys68Z15UtE0sl/
6jvv7olB3h8LVzyERQvO3mKPRd5/HXlqEYV5RdmR8zasLpX7moLVMgVpOheQ
9/1fPp6PppNRg7z75uAt0TJjkucxD10O9wuPQ94fnPhbC7e2pLtawHKjJZwH
Yuik5v7IJ4bxyLsYjveww6ZFZftE5N1Yed2FWDzPF00FSxKQ97O++B/opMqL
DF9TrItUPNj5GM7Lt/55MolJCHydNz50kU7GaFltkoF5VpHWv+GafUkj3+GV
BhFucXF0MmfK9b1NMpPgDnoeKBtPJ7s2rdz9Hua4zRXzFPaxiBvITEXeP+9N
O5xAJ03CntwVucwkFhiJN6Zgb6JtyT94VvttRUIi9s8Tm0pD4CkfwfoNlzCP
tLo+UEhD3gsOtTfA0g78KYnpyHtP1qejSei/G7c6j8Mj3P1jf2Ceb2WG2hnI
+w6puUvJmH/emLypgwfcnbjkU+ikc+LlautMJvExt2jVc/hkz7pG1itM4n3H
2DrbVOx/GY9amrKYxDv2TSp/4dklz8YU4Teq3topl+mkqUXiRe6ryLvzfRPF
NJy3V09XV8DNmbPWzXBjvnPvmmzkvXXHSbt0zI//+h2Pw0/+hQbNw0cfJqrO
w7WbGmIuZ9DJBV+dnxM5yLsdR/qmTDrZu/hs1eA15D3FoOAF7FX1x43KRd6f
X7zncIVOiq0RpV/GesnM6/p/8JkbjYb5cKEc35v0LOyXDjJ1tOvI+xHLz1uu
4nyToHmCF86NzxhvhQM7ErqV85H3Jx/mnLLpZPfOZd/fwmkTa7hZczD/PtgZ
on2DSSRL2wtdgRdufDJ7CydaFshszcX52S/31KkCJnHx/IjKa7hca8HEHT7/
UF7nxDWcJzKWS5sVot/HPEyX5NHJDWotTo/hUPEKm6uwwpIzN0rhIJPpk9uu
Yx493KN9E/YL3x78Bu7tnLndDXvfC451zUffK6Y++FeEvH97nL70BvI+0Kwe
fQv9LrTkZg6sw+8vrQsfN9St3F5AJw/ueOanXcwk7INjGt7CVaJPU1VKmITN
ndY3J2/i7+1ur5G4jbz30/uXFdLJejkupT9YP8BrTl2Dn7mP3a/Huvmuy/Ma
RXSykDtbbhw28n3P3QW3/aRC9sGGhaLCp27hPNXAXz5+B3nvtZHlLkZfVgYc
ulyKvK+4vjUfDqBW69nCWlrfdLRKMM8JGukeLmMSGqc2mPXATzrnXIth1Tw3
W6/bdDJdevP3I3eR985S9xV36GSYrun0D1iR43dwAez95ZGPVznyrqZ6gSzF
fr1ZXzK1Anl3CcjohV8tHeNzgyWzam/6lCEfhnVvG2HxtsVK2l1cP8DGKXqP
SQiz6DQWwtITrbsiYYEtUR3a5bh/vEZKLJXod4eW/g/wYNRbVxeYdnkF07eC
TmZfPnHHGOZuNl5g3MN81pNYPwdz/E1aXgyfMNvMdu0+8i7fJby7EuehgqGl
8/DCUeH1n+Ggyx7TJ6uQ94QjqgH3sZ+Z3rg2Ak89zdnFV4V5K6varKsaef89
aHYb5jD7GXwFHl8nc0yvGn/PUsyiDdePHDjhMQBrvDstVoz1rzElZ4IeIP+P
9xTfhwdqmBcEHuI89XGyb/UD5H18S2YpLPx4k4zTQ+R9jW+hQQ0+n7HOHnf4
nemD+1/gCXUhy4Qa9HvEfOOZWjrpxzdX9BNurSTernqE5+NS2LNBuHk4fOAu
PM7OGjcLNwo/Z+6po5OqsSfHtWuZxNM9XP++wr69y1b0w4/O7F0R9hjzAsve
s9aPkPfSBBGRJ7jflxTKDOqQ94GO9fdgqyzp8De4voxPcJvRU+zn3N/PNeH6
kt2Hdn+HTVoKeMRwfaFflnl4PZ38QWu45gfnF30+JtpAJ1lVHx57BOf2SZ66
D3/gGpE7/Rjn95VOISaNmH8s369VhtOJoos/4Ne33j0Nh1M8xzLPPUO/eZ0p
L4UTrysViT/H87ZZ1lT0CfL+zquqGtblatGjweeX3X9m1oT5c30t2y04Yvvs
2zE4hVV6pcxT5N11x2BUM/r7s1zQczjoauhPiRbsvxwaghawH7avh7BumpZK
OOzNyrFy/ws62byxkP0B7KFssJoJNxmp81bAro4XN8S8pJNxp96tmoaPp73e
JtWK8zBjYKtSPfLewqv7CH75pWE4AraZ229x4BVeLzkeVwMfVsiw+wXfrOF8
MAIfsPlw6kIbnfw7UJa+rQF5v7QmdN1rnI/Un6/fDxs12MU9hqcfzf5wgw2n
blw51I75mci78LmRSejJjhT9hv3sP2n9b51D8tVxb+jk9W5FQzmYuODxXLYD
5z970c+RsPqj8s6n8PLWraMb8H6qzKnBw2/Rz/H14YvwlrXbf03Bby6xKb54
hrybBy8mdGL+0jixxAOvl4t8vFLuHZ3s2Ju04yEsU8Um2giHC6hETMOSI7vl
rLvopKdXj6wiXi++OkZtBv6+7MYFd1hkX6tuUjfyl9xj6vUc83wofb98D/pc
VqZOFOa9a2b/HHaf4Jquw/W0L6metu8xz4rvCP4Ccwu8D/0LW2pIZWTBS/VE
41N66aSRWJHKSryeNcAmS7GPTtqn8C1Jhxdu5d1qhg/qfH0qBc9++Fpt94FO
bv1tr3YWnqZtaJqHY2W3vmQ0MYkJ0u3d5Y/YX+Tkjf9//3Gv0i+bPtFJu31X
nQbhkfyJXy9ga62Dz2Lx+q9dW1kcP2P+EuGhUuEBzgDaIty85xr5BP6oXiua
0Y/89NddrYPfuy3KKQ9g/1Bcc6cHfpetvf0V3J0jxP0abm+P1Ds+iPs9o/6v
Fn7F1rKf9QudbL+xpS8cn69FZYXDFdifoVj9A+vPnIy9tg7RSf3kDgdWrD9N
Twp7Dcfd1/R/h/XaF+/iT3zF85n7iv7/+1XPC11d8o1O3j86ldYO31M8UnwV
vtaoez8Nry+zzXmwbZhOrrcY5unGeknSYNMbeCxoPE4C64WN67pcv+N8nvf2
6HGs5087Dy0dwXlEt8z4E5y7vmQiB/a84izXBGdZMVnUf9DJ4HmD4zlw+sUt
9E7YRvTmg/v4PVPqTou5j9LJ+JzQv81YT/xZvZFzjE6OPvMzqYAvSs5vz4Mf
7voX9QiOtiD0d4xjP72UWnQBjogKt+yCLde85ubE5wutfuZwiqKT++jyouFY
D/7B6c3NpJMfo+qkD8L+onvP5sN63HQPedjHKCFB6yedXOqZmELg83iEdVzt
gdskzpZoY921XKDE6xedJIRmi/9/Po8PHXy4YgLzWV5AiwhsL5jVXAA75Tku
/MbrbfQ/d5G/0e9EZfUP+HCg5Nde+KS87ot65ONAieNvn0k6KdUmnxeAdfNP
haz0Kcz7tyLZzsDGjDF6EXw38g2bAbxHW0lcZxr7ZfAqt3/Ip56Pl/xH2L9n
fmgZ1nUKKtX9/mAeHLfI//J/3ntm9HlmMJ+9TOebxvXq3DsOFMNl7U9OP8G6
6o5Qx92zyGOvTczJ//PuXu/9GS5QOXX+G9YVc5eGB/zF/PwqNmfH/3nv0E/k
m6OTtwSz9RZwvQz7xezbsLLD+aV/YEnV1yV68zjfnhAI/oD9TNyZt2YAvrPx
7YoKrItk7m8JWsD8FjW+5Dgs2JreLfAPfeV5JPH/dd5/fV9LYS5tDQlJmLZp
zaTBIuZ1yQaTLrwft50d2xA8fqTLLAVme2HGSbAwSAO/RvPL2H9Z7H3oF+FZ
yUo7fawvzqUKvodr5YxG6PBCSpWYDCuD7IoNEvHE9XMK76W9Yd1zMmXR8Mzz
vxufwOterWWTgKdtRJVXsjHIiLJx49/ok8kZTXUrOCxGwFEDnrhks/Mm7M1+
RiwG/il3Vn8SvrbqWZsCTDXkGe9cwiBPqAzZroTHjjRaxsOE87tycfjH1Nej
fbDb63XXBtFv3+OXOa5nZ5APmC9k5dGX32Q3uJ2Gt0vePCaP9aEnht71MEdq
72EHePCQWyB9KYNsyH0Zq4Tr+yfizh6Bv2RdWkhFP3+6UHq+CO5ayB88CH+Q
fpMwDdcI3Z5vhnsfTVzW4WCQx7/S3fXgHkv+7ER4+2y1aB7cxdx64yPMMbLP
5Rn6v/P8gRK5ZQwyjq80yQ7uWBtQ4Qfb9R0VZIPbH2Y+bISz+YQ1yjG/tJnX
PuXhZJBiEjJqR/6fV8Y+NlvDce9UJs9h/UXk4utiOLp4W9ldzEPN4mu7Z+CW
3sCgV7j+eZX2p91cDPKSzTKOlbi+0cThaxKslM1T7A/Xj0SOfYabcnOybTFf
PQm/+Vuem0GWXppjTMN1q1v+BsD709z2CuD62ns/WJvgYaFlBupYf7hvBRf/
cgYZLHj70nPMg9XfFBjH4PdGWy0vwvdDjVfdgUM3arKyYr67J+QpPgd7MB0f
fcF6+d2kdforGORQ5AGtc1gvM7wnnwqLVEnGqcB3vrxTHoQ/jjD1hTCPlgT/
UVdaySCFONz+RmO+vSUgrB0Mb7929812uPCOukELvHP3zpwdcIHeERNBGoO0
/JsldgXzcn7/mQP28Ib3KfbhcF5AjnUZ7H0sXekXnMP71HEBPrzk7LYD8NXi
QTdDOoOccutcmMS8fmUXu08avDAaeM4J83rmx3VBQzBxoGFOFU731QvfzGCQ
Xmm7D/zC/H+ZfiImBL64/+/x/88HyYWxiS/hu8UW6t9xfri0syRNiIdB/jk1
GB4KJ/S+ynaED/SsllKC47yZN8ph6QOLQ/dxHrmwguf2IuziJ26iDcfc2HJv
Ly+DXM9x/OobnF+itSxqMuAA5RmpCDiy+3T9N9jgXMbiUjjiVFqLMh+e921X
f0jhfHSW60F7GGxow1bVgfNVaF5v9ys4jX7iXS98RmP+kwg/fg+L3MctOI8F
dYp9Ow5fl94X7wL7nyTG78FnaGHRbTjP+XIcm2QVQF5m5fUJ2CcnfM4ITmqR
3nUd9lLLZ8uCfboCr3DDnm+ecY3A7Tws+3VvMgl3l2GGqiCDZIa5LXjDbku4
hCLgB6mhlcOwS5bcmnZYs0GRlIadt+6VEVvFIPsqyC+eOM86tZ1UcIHXsg5/
/ILzr8PxBJUquDsu1vsCbMdyV4NdiEGqtUwOnIdtMzq0TeFfs6uuFOE8bb1l
0iAbtpJZ8IrNYxJHXgqYjsKnFN/XxmLdymHbQTVhBplbWehmjPP5wYWDNpHw
YV653ijY8nKgUwfsHy51rB+2UMo6uUaEQUY57lHeifO+WfMjHzeYVeChb10O
kzA59jnoAfz6dAbrFtjoL0sEx2oGueTqrzyT////EJMlY83hBUnPwdqrmFfl
d13KhU9aSs5ug/WfOaaPw45xdv5rsnBetY7OURdlkNUiYd9WwLv+FBZEwwuJ
P5/9/89HtBNf3O6EA93qa7NgcsPYvbViDHJz2HFxUVirfmWtO3zdSiAnL4NJ
7Dis1FADc3B7/VuFdfVJkxec4gzSyCF7yf50JqEW5/VmPyzD7/CKLw19KJPS
kwe3GKxJvQurPK78zIT/6foWRV1GPx7s/rZjDYMM6lLjrEplEpt+zYzHwBxH
GCwbYcVYkakueP3LgBhxWF5qx7yUBINs7J8Yz01Gf9YeXeIJt3Z/9zyUxCTW
7w/lroM/RmTzVcIyVC7P8rXInzbXRVlYOrpe6CB8/Y9J+bP//3mZxNCaG3BN
WRNXNSzxYKnsBJw/otwsC4ubySoSkgzSXH+C70I8kxAd1d96Ec5fNDOnJaB/
z7nseA+z81ZaGGNdSOyijowUg9zkJbTuVBzO2/dvG3rDr4U6U15cZBJ8xq9N
n8Cs3iwO6TDP958HV0rj+yzdKWYbyyToZ3ltreDcvvib4heYxEoRleM34ejV
K3/TsL68Yr/7JDzneTpgSwyT4Nrrd3rnOjxfl1efqz3PJJZ9TQ+Oh3Vbrh57
EY35PeRhRB/8fr3ZQyl4yaoPsetlkO9fy2qDIzHPly1cOg1nCr1maTiHftdf
k1EPv16RRZvH+sIAmUuXRV4ytzWZYP1voN3NI3C/Asun9Aj0O9+5O0WwWvWd
tb3h6PeSG5XTcGRv/jsWeGp3U63OejyPAysSdc4yid+fvjckwonpcqp3wnD+
9+N++RH2HyjtuhWKfmfId8htYJAxQZJHhbA+VrTvvR9sezg8z/UM+l3bo78R
3p33cGd7CPq9L3GYRw73v+KpU1MQ+t2nnLKGPTwcOw2D0e8rO6eK4VVv93y9
i/XBgqn5GdhKadX1uED0O7GKXXcjg7z3TmZsWwD6vUdteTJceF/irqw/+t3T
ircfjjYPy74M93IHCyvIM0jORtPpWl/0+/WrEoHw1pJF2je4a8dj2SaYdBch
xU6j39/1K/IroA/tPrBp+qDf3dlUj8E7BSuVDsDty6Q178CBWV7HXL3R77m7
d83Bmj0CbYJe6Pftx/foKyIPdrNRbFh/0XHeLBX+GBxzk8cT/e5669AgvEa9
f/m8B/qdvdVWSQn7+w/Hn0x39PvV8ePBsJa6v/QruF6V7tECd92VFj5+Ev3+
epOv4CYGyeJpzyoN1zmbnbGHoy0+PNzhhn5n9TlXBl+K4Lg24oJ+z0y9sAB7
Fc+nHHZFvytXJRluRj9NB8v1n0C/t/ZkpMGpGg5GY87od8e/uUPw429nOi8f
R7//W124eQuD9PvDR9nCZWmapSFwahxLyg4n9Psmm/sv4U+/tH4XwyUtYY+E
lBnk7dt6KTcc0O92eY2OsHjQssOz9uj3uYaX5XCkq/23rXBByteORXis+8fk
eTv0u8Ky3r0qDPLb+Bozn2Po9+frBzJg06J1fUO2OE/ZGH7/Bne+aXANgrNn
XJnKWxnkZPShYiUbnK8uxU2HwbbLpclb1uh3udKFV/Ch9DfrfI+g3xva2Ver
oo/TD7qEHGUSqUcmljvD0095jRhYT57i46uEuRSVYoqs0O/xW0XYtqFfAlqU
rh7CeUz2wFpj+PDSgLJXB5lE/BP/9Vn/+x2Pujt84VCm0gjMJEfH5y3R7xM1
qqpqmKedbdbd3o9+v/BRMwK2lq/4ZQtHSi/uaoffXNrO6meBfn8ksVdsO+at
8NyYZPispba5C+xsYaBywQz9zrS3qoJZ1Q4Kf4XPnI88xq6OeUAsefibCfp9
7U1nU7ioIsLgizGTCHjY7JEN31sfvuQ77Gf+w3cUvtN1v4XHiEmcHlseoqbB
IAeHfz3bvI9JeEcqREbCK4zHosX3MolT4sYXO+CwSPGPfYbo96pTyWt2MMhl
87wrUvag302SMt3gQ0cvuyQboN9HKq49gH0WgmXy9dHv4e8KOTTxvL37VyoI
H1/9p9Qczoofk8zRRb/fE6rKhUflix3WwXb71OvGYWWPCy8bd6Pfvx1+pq6F
73+4xPO7Dvo99ExrNBzR6+T1XRv9LpTzthN+7lY6UARb3X3Su5ZgkD+vXvxp
uRP9bjg44A7fM8gUDiPQ71+WjNTAbCcz2fRhi+B1PzlJBjngpJi4QQv9LqD3
Zz9MnGj7F6iJfr/j/C8PlkvMfe24A/2uF7v0J7wjh/V+mAb6vb94heZO9B2v
Z9xbdfR7wCu+WPi0shTbBViflynSDctHcBOv1NDvxQxJaW0GqZF4O+PlNvT7
ri0bPOHIjkd5Baro94/mm+pgBnfYpD9M+p7etlwH/dKgIvtxK/qdnqZ1EN6v
bvb3rzL6vbB69w342UdDodgt6PedvXsn4I9ErLgCrNY7Z07swuuLypYKbEa/
e4sdvgjflikrYt+Efl9B2L2Heey/71yrhH6/YXtCZjeed40JMR5F9LtW+Clv
+FsGxzY5BfR793W/J/BvkUl1JXn0+6lnISt18XupCi4u24h+5xqOtIKTQmZN
yjag3/M4427CMt+WvlCBZTTkUiZhxwvSq8Jl0e+de67s1MM8LMncniuDfj95
Mi8ettLyFA6AJTgSivrg2suPq/ZKo99zysrW6zPIWyrhe7fBomodVadhjoaG
f/5S6Pc3v+vqYc+wKX33teh3F4HndAMGaTYzeyYUFlyy7dURWHmrJWkjwST4
sw52FsELPmpJ/mtw/t4a2DcND/JqjkaJMQlG25VBHUPcvyFanxNMO/5oJBFe
ki13yVgU/c7y+edHeLLtdJHnavR7BsuM3B4GOV4nOxEign7fIrnoB3sk35uy
E0a/v9TheAbnshxN8xJCvzs4ruTdi+clVLTWdxX6fSGK3wb+LZ5wIkEQ/Z5a
uLoEJi1/zBgIoN8VX0jOwnuC/FMT+HB+bxrdoLsPefhsKDrJyyRmbVduToYt
3ugJ+8J/ZhXV+mGDDE7+dgb6PcmEUDDC3yMOX++go983eukGwo75MtnG8M/G
5H1NsAR3jY00Df1+tNKC3xi/V1VptfNK9Pt01+Fj8MHPu9TPLWcSowkzdnfg
q6/fCInCI+tFXOZgjicsydLc6PenGp76JgzyK3PHjoOc6Hero/6pcMeSVikO
ePB3SOggXLeBTpLL0O8Xc6OUTHF+8XOr/7kU/b6uPi4YfvvlNrcuO/q97ktK
C+xeX3peCe49sDRL0Azru9nXHGNDv/+UuW4PR71pPf+eFf0eo3+rDGYYarhX
sqDfJV3uLsBJHPaCZxYpoqPmQrWhOZ7v7DzDo3C7xe3HafDywrlVTQsU0Tbe
9nwIjmn26bSbp4jWqJ+vNlswyL3k5IcM+MUa3nchsL+jtLHYX4porlb+8BI+
/il52/9+brr/i9B+vP8dDq1zMxTR+MP3hyOc1par/GKaIuoj0n+Vwzk+7goS
///7haIPZxZhQU7q6Y0piqir7Fvca4l86uTUaE9SRK3RAkcm3Pot8b7Ab4p4
OCxOG4ZLpOQqzCYoojqMFFA5gN+jbOPpH78o4r6wnehZ2FFthfQ3JkXcK4+Q
aoPXcrqcaqEoonzPDbnVBxmklM6Wpv//fcyyoeebneHKdwPUSfjOme9qlXCR
XsLNU2MUUSLITbIdwvxxxdd9+Q+KuFW6Uc8YHhFfeUd4hCIK9fcZZcE8m3fa
nPhOEQUD7vtH4KsTzLFdwxSRH5h4RNUK573rbOHW3ygij6/cPgJ24hZu1P9K
Ebklb13a4eFDPSbrhygie/eUp9hh7Oe7fKa3fKGIrE+CAS4w39TowY+DFJHp
pxZWBW/+IWrOOUAR6QyraPYjDPLHY7FBzX6KuFwUFG8KT3OJHsn5TBEp2ldT
s2Gngp4b9z9SRFJfXdYo/OQEGzPvA0Uk+vRfVzuK+xmWc+FSH0XEr2QrjoRF
rWkfBXsp4kKBVHkH7OjKxjgFxxC7H6yxZpAnvkte+NpNEdE9Tk/cYB/hj1d3
wlGe55sewGVW39u+dVHEOe5bbRw2DJI2yn5oupMizl5/+c4cdn6wb9/PtxQR
umP8Qy4cujUpbwQ+8442NA5rFf551fyGIoLcN42q2zJIPcEN10deU0TAMrOJ
aHj7jtXsZ2G/XO/ZTnhMYM/NxDaKOL09lUXyGIPcUG5hE/CKIrw67i/zgC98
eymY1EoRnq49tFq4vqLjkNdLivBg/yvAZYfP8zg/wOAFRZy8ulrMErbiNT4r
3UIRrqqa0tdhKfH3FXuaKeLEa+uNP2HfnxbFHc8pwsk5bIumPYMUsw1zpcMO
rHnbY2Eqtan7SSNF2GU2kN1w1xjHm+AGirBV/qon7YDruY2cUuopwrqVw9gT
Zjul3mPzlCKOOK63rIP/cP3J9nxCEVb/DI4ud8T9ooU0mMIH01wdDsKftu3K
76yjCMtNca434FDBJ1mLtRRh0XLHawLutXqylBU2s2sPIJxwvlb6utD9kCJM
5n6FXYQfl1sIHn1AEUYpfOffwwVTC+qR1RSxV2Frgsxx3D/ZI91hVRRh+Nzy
sjfsv3fjd8/7FKFv43/1CczOGtFcUkkRujMZ+SudcX6Z0Z9XvUcRuy7VFFvB
u23PJNwtpwhtuY/lN+HQX39ztsFkw78Hk7D586Um18ooQuuIxNOdJxikt7iy
5YdSitgxtbM5Hv4ya6Z78w5FqMfbv+6DlxHaotK3KUJNNrJrvQvy8TnH/UEJ
Rag+Kfh4Gg5qFy/lKaYIlUPNQ/XwvZDOOxG3KGLLxMgo3RX3Q/z7PqKIIjZd
WP77COxi/yWn+yZFKEor/C2Cg0WKpiYLKEL+kRHrH/gEXSCcC5azPMW5y41B
PuV5/2MmnyLWMy/RL8EVBcSyhusUIXO+QvAT/FYnzOtyHkVIr30ntvEk5nfR
Y2MK1yhC8uG0tD+sPPbNJC2XIiTMheSfwVH3rvKvyKEI8bHtyrzuDNLVpFPv
71WKEI08rG4DJ5TYP9uVRREi4md2lsDhJUzRj1coQqgqW38W5k1pGHuUSRGC
Jk+MdT3w/Yy35jZlUAT/yIBlMmwbNq/qkE4RvOFLrPvhq0tJmmcaRTBWr3NU
OIV5d7XUqROXKWLlPV23QHjs/uQy6VSKWLHP2bsJjugeulyQTBHc32IC+T0Z
ZLlJ2qIczBlafPYYPCjuJsJ/iSI4hF6dvwMXhYxYPk+kCPa7VMIcHGRGsN5P
oAhWQ0aavheDnPAMfF0STxGLg5uzU+G+hHsfguMoYiHI/MYg3O3tvNvrIkXM
8Z8uUfJmkLHj8pt1LlDE7O3LFcHwG8viT/KxFPFHt/phC2wnIPL013mKmPr8
/qmgD/5eN8ft2miK+O0/12wPb4sb/HIuiiJ+8Yi1l8Huzpt/WURSBPOWVvcC
7Gof8uXTOYoY17H9ZHga80lQ7/HoCIoY/XD2axrcqXNghWY4RYycvj42BD9o
db4ZEkYR32jPfm/2xfxvTV2yDKWIoZvf/obAN1rfz/8NoYhBkpOtFR6rnzR6
fYYiBt5v4BL2w3yxPCrxEPzZaw/DCfY13sZ3PogiPiw/uaoCXt5xlP9KIEX0
5seLs/gzyOtn8w0bAyiiR7Ns3T749mrO5g9+FNHV9UY+E1YsHYgJhDs9fisP
w+33z+TRfdHvnAIaKgHokw0bVblOo9+vqWqfhYOP7uX76Y1+Vz9o0AbHnhn1
V/BCv78NMFkdiP5ST/mV7Il+d7tywBneb20QaHIK/b70kXUlXPgjKz7TA/2e
/cmRLQjvZ9/ZZ+6Oft/GctIYPlsV+fbYSfR7+1qfLPharMzsTjf0+wmdoBE4
vM1kfNAF/c7mGK4ajD5WFRVoPoF+vxIVEwG325p9X3BGv6sUJrbDQeqTic+P
o99ftaSJnWGQnP6ih644od+dRrNd4DSdEAdjR/T74oqCKlj8j5veWgf0e7ri
bfYQ7FflAkxte/T7ZpN7pvCCvKLA4jH0+wvPmmz44ff09TM26Hf75PpReNkG
fssT8K35ey1qodjPfqZxBMCFqV3tkfB77xNPs4+i3xVnujvgu62lVT5H0O9N
wp/XhOH9vnDK2B9Gv9tqfHOD51ZGqqlZod9nj4w/gOPrug6zHEK/J4VMcpzF
51OacuA7iH7fmDtnDv/ZanmvzxL93viU7Rp8q4Bed3Y/+v3oFy4KNjPcwPnI
Av0+zc6jEY73t25+cNsc/Z4gI3QelioR5rpqhn5fr7/mHcz199OsuSn6/ekJ
GckIBvnuIq/vARP0u9UFBQ/4aODZ0QdGFHHxd4lKLby1YSqTuY8iYi+2aXCd
Q1/xmXOzwefX/dS2hC2dD36s3IN+r+MxvA6fiZ/s6zCkiIgDyqY/Ya0Jk5gR
A/T7T4uDmpE439rwSy3XR7/H+NrEws9XPuXz1kO/S6Y7dcPrPo+Y+epSRHDN
g5PSUcjTxhOCJ3dRRKBFn48nzLMx1O2cDvp9fD6oDt5yYrh1QRv9HiUesTya
QYrsK6s6upMivNeQsQfhve3/blEk+r362KUb8HKtmZEyAv1uGpE+AZ+nG+8u
0kK//8jPIc7/P79xXA/VRL9HPC+4CF93qgg4sIMinEW/334Pp/wTdlHXoIjj
lVyVMjHYD6LzQjarU4Sj0cZab7hwQbpiQY0i7If3NjyB/5y5Ml26jSKOhbm/
WBnLIDMi58t/qFKEjXDiGytYpu3Rpu1b0e/ld3tuwhWXcrMuqqDf97z9PAmn
JCgdrldGvw9Nftt5AfM7zz5hzS3o9zOCVDy8MneddMxm9Lug2lQfbMqesU9n
E/q99ND8+os4z9M3r/uriH7XD1riC9u5rEnngY0Gsrgb4PlXYTsEFNDvgXU8
jDgGeapGWVZEHv3O1y90FBauiLXKkkO/l7BK3IKD7E6MvdyAft8tJfsHft9Z
H+O8Hv3+aZfirngG+XeBec5VFv3u57T1EvwlVK3jFEwyzu/4BLvY3t+vvA79
XlSkszEBn1+bLc9MGv2u/dLQH47bwf9YWAr93jdm+gx+3lqXVr4W/e5DO8Sb
iM9zWbZ9swT6feUmWxv4cuXo0tI16PcC0+MlcOLkOV4eeAvh7T4LtzTwcWeK
od97Uk7rXmKQam95b90TRb973g9OhjV0OO7Fr0a/c/dE9MMy4cHrTETQ79dn
YxWSsB9XB/e5CKPfd6xOCoTfPhQv1BJCv7/bkdEE33E0mNZZhX53t87lT8Z+
709YaQqi35eF3TwGm5n8/jLJj37PvXbnDizRybroCYtvb6icg6uznQSVeNHv
HUO1+ik4HzVIcHTzoN9dORpTYWGzKbcgBvqdff3LQVg5f9Y4mY5+v2rQoZTK
II901tWco6HfVV3fB8NaOTrW1Er0++uL/S2p/8//c9fkV6Dfne8MC17GedRi
YFZmOUXQWNspe9jhmLmLPDf6PfPXVBmsu7/y8wEu9Lsy38ICLHI3Lf3PMvR7
qwr7njTc/9bL1/o40O+OlsvT4Z2bnwyugJf88+P9CkeX/3brYacItrQM4S3p
mDf/eLgeXUIRLJtqJELhnrViazXZKOJf8wfZVjh5jbeRHCtFzB/7pyicwSBf
TDzqnGZBv/9do+oEe5rz8hktjhN/kndqVsCC1iOfNf+NE1Py9rtYMtEvzaSg
9MI48fvZuT374AbHb6Mi8+PEL+sCs0z4sf1GHqG5cYL5p+nQMKwRJ3dI+e84
MZ44YqtyBfk2H2UXmh0nRjcsdz4Lr6L/ae/5M06M1Mt7tMG9Cfd1q6bHieHD
Rr6r/6PQvuOp/uI4jotIklyjpJKtpIiIyPmqjEKEKDSMCiFJQlaSpEGhYSSj
EjIzGyhKZkZ2UUncQWaU9Hv//nw+ji7uPd/z+pyHEjAvuLo6tk2xyPfJUwFO
cPnH38nZkyzy7frN0EL4Nf/5j9UTLPJFtuAqeyLupwuHk5eNs8jn8rZbJvDj
UwNVzmMs0ntg+l4C7M6RY6v7k0W6x1YkD8Ns+ReiPUdZpDNCI13tPp4PiXlT
7xEW6ZCyybkIj+edu3+GySIfX/gXfYDp4Vs1eOGW/fdfrknip/wWJPt10Vnk
w0h5lQvs4vWEdzfcePlLXTG8dv9I3pchFqkX52hd+ADPb03Oz/4fLFJbKt29
D05Z8TXFapBFasz0vtyHYzct/7kUfss4McSAW8vXd7cOsEhV6JVR9WTsb0uP
nLxvLPJ6Teb0JXjy0eBY6VcWqSiq/9sCK6c3OW//wiKvTEYWiqdgv3sGcF/r
Z5EXQ8t43eCnl3lj/ftYpOzCZsEy+MD5kz0Bn1mkRNRcdFEqzoOfbs/DP7FI
UYGXhAX8UVbhvlUvizwzur0uGU6ib1u8o4dF8r8XK47Aa9bK2+3oZpHcwC41
zTR+aqeOB+f6LhbJXvFne/j/PtVnvaSTRbJyV+t+hKcOGLJxdrBIxm5tI8mH
6F9ZR3b9RxZJ/3rE/BRs4XrBoaeNRR6dv2D9As5J5rETh9OEUu0WP/r/Pjmv
Gt/KIilPq5ws4cG/3b7NzSzyQG/wVCqsutDxRe0HFrnft+jcT3gB9zex2iYW
SfBZH7j9Mc6bgdw0rkYWiaMZXoqAe9/fpfIaWORuhuu1jsf//z1+7tWfOha5
vfNGtHQ63o+kW/kZ9SwS05sTdxruGa91i6hlkVtnm5NfwST2o0XwexaJ4ptI
X/IEn89X/+NuNSxy47FQ7gHY4Kmnl+M7FrlGqRU/hAddDFOuv2WRiC6rV+Nw
fJDHeatqFgn39K0mGZh/57YZy1WxSNiS+PprcITZ9Xq9NywSmvaitQtWKC6z
ialkkZDtn7tlM/mpONWJRfZwcPu/L2fgUzoKE1wVLBJ4SmK4Albc3kbvKmcR
f+6dP5dm4bw4+GXl2EsW8U12/GUNf2e4zHjA57aFzT+G2X0dzFjPWeRs62PO
KVht8d9qNviM63veHU9xX9m8ZjNXGYt4cjIEI2HRsALryhIWOXWfd1UvLOL5
7m9XMYu4bd0kuT6bnwpMkzi3Dj75wWS9N7yDuMowC1nE2fm00hv4j4+sWvEz
FjnBHr2VPwe9FKBePyxgkWPxz7QPweYFMYzEfBZx2NKumwGfu+MqGJjHInYN
v4x+wV2zatI3c1nk8PGVFrty0b+ugNKKHBY59G+bzU14quDczfhsFrG5a2v/
GQ4Ie8yT+pRFDm4OdN6Qx09JS6q4fchiEavaJA8fOPsj28Y3mSxi4VB5rhpW
8tpokpnBImZzXwMF8jEvPE8NC3vCIqaxC8OOwA6D7qJ+6Syyd5Ps9Sw4Mkai
+v1jFjF6px8zC8user2j+hGL7DnqHK9XgH/POt++EDaYjUiJhrmyFJ5oprGI
3q2sJ/2w3z7nkqepLLJrQ2Puxmf8VNqOtXwXU1hkR9VosR/8d++pk33JLEId
opW/e/b/3y8i1js/YBHtaeW3QoV4P3e36e2BtSItGuzgRff0f5y+zyLb1nm3
ZcMXQh9fjkpkEfXKOz1/4Ii49IBdCSyiZl361aCIn5p26TqrHM8iWya6h2Nh
ucprF5rusYjytbmfX2HOrNVSKrCSjNiMYjH27/fs5QF3WWTTK/LPH26JunXu
yh0WUbCy46qFkzSLWtNvs4j8z5ClK0r4qS3PHjedjmWRdVfShBzh/V4FXD4x
LCIr+XZVHny+57W7UjSLSD//ITkPe7zi2Rh3i0UkLRbLG5byUxoGbw6V3GQR
cZb85rvw/dpdxbORLCIWZqT+Hf4RLsi4Ca9e606Uy/gpU48XbeY3WES0JFIv
CB6tqS57eJ1FRPblGdfDSeYyl4KuschyeovFyuf8lFu6wfbsqywidHHS5jhc
k5u7PzKCRQRWL3cogCufPVv2/AqL8BdudWF7gf0ib6PxJZxF+PYePG0MK0nn
FtZeZhHeH34+cbDObh/+22EswhOcEPQD5mgT43x5iUW4V74K2/ISz+O9+cLa
UBbhyu+7fgFuOSPweeIiiyw0XBDbCKfcCdrOBrMPSCaseoX9qnNk9vUFFmEL
2JXqBKcP7yt+Fswi88LHMwphH47bmo1BLPIn+3Ieezk/tUejbtdkIIvM6j8p
MYHN/K4kjAewyEx/bXkCnN3YNtznzyLTvsy3w/Cl6zQuIXhSgK9RrYKfctX2
DLzixyLjmYofL8LXDrDFa8Cju/b1foAbQszcp3zQ90+e39ZU4r7C+dOCB2Z4
x9Bd4E2nrbqEz6Hvy4rGimHLAI5dOt7oe3rHzMLX/FRT0m7PP17ou87sv33w
myvcO43Pou/doouS4PyB9tvRnuj7GS0+Jtw27rqi8zSL9PEeFtZ4w0+Z/HE2
2wN/ehi0Ogz+0bNKcpcHi/RoJ0u1wtL7HJ7fPMUiXR2v5cWrMJ/yC+hquaPv
HgOb3eBbR09pDLiySNtiLo0y2OFSwUQQ3JIiRy2qxvmxtUTF7yT6rrlb3wJ+
MNVgluOCvre57E2G94muzLvszCINbtf2j8A7X2+yDXBC37mybTXf8lPHYiL2
F59A35OaHMLhoJ89nqXH0Xf1MZePsK5yUGT5MfS9WcBT8h36f3m3loYj+u6y
xfcU7P5i561QB/SdwzL4BeyWb6ZOt0ffE85dXlyD/TbPmzVgh76r3rthCV8y
kUmXgcsay2JT4eL1O1uUjqLvJ3oTfsLLBYih+hH0nW0+dft7fuqsPXeV8iH0
/d7azAg47l6wtzmcr6yT3wEXjvPI7LBF3+vsS6Vr0YcEnkcWNui7Y2jFafgb
VzzN3Bp9//vw3St4uYJMqcdB9P32u8YldfzUCDsz1fYA+q44/PEAfF1FcYOH
Ffpew/PpIfxoZ1NqlCX6bqcwMA7HBRyNXbUfff9tzCD1/NSEdOGaKgv0PfrU
+DXY6PfL/gRz9F3h5mwXPMJU0+wyQ9+r89nkGvgpIQ8t2/p96PvhtkVecOqw
5bUeU/T91xRfJdx1wP7IZxP0PWrFcr5G9P9ne82vvej7eo01NvDK6xxKBL71
2lo6Hd4k9aBVxxh9t/HfMAXzLjV7Z2eEvk8mKu9owvze17NzaA/6fr1cIxI2
4VhosgeOkP1C9cI8IUsNDXaj7+XsBus/8FNj/ot3/zJA3w9Im3jDy2Y7RbL0
0fcxXcs38Er142ppeuh7xIlD/M04X+VcIm7rou9SVxwPwRoN0dpCcOCLjJMZ
8NrYZ37Mnej7/nrPX/CarArWethvhOW7q4Wfmn8W90VnB4v4XF524Sb82EFh
tohiEW/xzeGfYedV1N1R2KvULHJDK+brKr86J8Iip828bvvAqpUx84+10XdG
bGI1/Ehw5rDXdvQ9tDhNoA1ff5FPPFILfV/TlXkEVrp3omYF7Fz0Oz8LjnY/
Zpe8jUWcTFaXzcKBn0Zv0DXQ96HtlXof+alPDZOCIero+4UjNdFwp++ABT9s
J3qhqf/j/z2P5RffyiJHClLaN7bzU9anHWxNVdF3o6pPfnD6plv61rDN9+8D
72Av1xFzrS3oe+AiplAH7p8Bd7ReqbCI5Yr1E3bw9fywe4uU0ffcPb+z4VEe
hm7lZhYx3+26YA6Wywhb+kaJRfZ9vc69uxPz8ZpWzXRFFjE5n7PsNnxMpbpn
MWws1Lz8Gxzc6CDevgl9fzq+RqmLn/K8TG8x2Ii+6wnJBMAZicvOP9+Avvep
KtTCdatPTtDl0XcfK5UV3bh/sV1sfAvvoPluc4Qrkt+3+q9D3zPidPJgzfVU
11VYe+cLg3mY5mOSYQ1r9X4yMezB/fO7S/UHWfT97D/Lu/AStlKlKRn0nU/i
8HfY3z9/YkIafX+845hyL84/r4yDBN5COboGwZX2nEX6Uuh716Uz9fDggTJL
QVjJ87Hfyk+Yn2PftRyVQN+XvL9wHBYvaHkVIo6+p9HDC+C7hrJGLWvR9+28
UWyfcX88lN78QQx9b994xxjmbJ+/sgCWPWVyPw7+p3PDR3gN+s59+uEPOIaf
lSa5Gn1PvpW1pQ89dNx7aNcq9H3bs4ILcD85buomir63fixrhCMv2mc+Xom+
u/6qXNXPT20U2ZMXD4tyrnzvBDusPjBYvQJ9v7/tQyH8TuTAi4zl6PtW2w72
L/zUlZ8Svw/AQh8CPpvA7poKXouF0XfnpO8JsM15ya17hdB39krmMKztX3Kt
QwB9j/86ofaVnzKUtlC8CvNuWfjnInw4fsFgCA19b5Bhb4bvy6nsjedH34/r
Lxb7xk8dnBE8O7wMff/nxH8SPpx5WE8I6wvvRqwogev01t+O5UPfN2eJcQ7w
U5JqPo63eNH32gYZM7jiWTynNjxvP6qQBM9PW54NXcIic3/4tzDhkk0DtPHF
LPI7RllT4zv2C13nRwk8s9FiRxjscNr9RhE3+v727O5WWPmd47ACPHnkjqn4
IO5ff/b+Xb4I9/eZEis3+Oji6fYGLvT9ZvfhMnjqc6zAy4UsMiI/d2zRD5y/
ddf6XGDmmzVuFvD7ir7k0xwsQrclXskw4+tFdVn4x9TR8yNwmadGBY0dfb8R
EqI5xE8tTi9b7bIAfZdLuxIOn4pvGNf9xyRfKqqjPsLDzXLxbnDfwR93JIfx
+QysPZQwzySfxrmTTsHq5qGLsv4ySc9V+UcvYKOxhpmiOSbpkjZ6upjOT20d
T1j3De546fbMEt5mdcpF/w+TfLSMfJ4Kr6m7ZHHqN5O0jua+/gmLNgkbHJtl
kubwlvfbGfj+IVa9T2eYpEli8kMEPBA36hH2i0nqy4Q7O+CGV/E/7aaZpNZ8
a580E+fp2n8XS6aYpIZ5YPA0vD2hdMXhSSZ5e8mP9QrmSBBbpQxXiSVMLmFh
Ho+1Fr4wwSRvil/+OQB7GW/kOT/OJBWmfeyPYGu60LrnY0zyapiNZwLuOWx4
dBX8IkSSRo3gfKGl830cZZKyVbtErsPuzaK+8SNMUvLs2NpuuEXu7Pl/LCYp
Mr4sKzeKeW/t47Kn8LPB9I1ecMwb9aw3TCbJD6rdUglLtP4oXMBgklwRpibf
T35qduzsQR06k2TnLd1pAw9qSNxWg7P2KO5JhzMN9Wa8h5kk45vpvik46pu+
/KohJkn39zywYwzzV5gD494PJnkkHHMkEpabXqb1dZBJ0rILj/fCa9WaYrbC
KfodbuvH0cuZRSKbvzPJg/4ZL2/YznnXRb0BJrnvK+r/Bl77xmkm8BuTJAho
XeSf+H+e+isuAcdlHoo4BB+fC9tt+ZVJ7u4KupkBu5/ufP2vn0luf3pw9xfc
3HJ+HT8c4/06adckP5U19aaeC761bODRTdhcgONw3WcmiUrnzP4MhxTfZTz7
xCQ3dOQKN0zxU41TxeYGvUxyrdvghQ982GXUtQqOOOPyphrunZqaNe1hknDe
a7UC07ivBMy9D+hmkrCHT5uPTP///1vVTbK7mCRUu6kzC57nFil/38kkIR0/
+2bhmBUeG5s6mCTYQ+CH3i98fXXbzDY4cPGWkWhYIvP6E9F2JvFP2T/VDysn
pB4J+cgkfprn5jbOYN483nm7pI1JfNrucpyHf26U6O9rZRJvtzKeGtjfqUNh
PezF1UsTnuWnvvR2zu9pYRLPpL8i9vB5MS5T/WYm8VBfK54D+8lxbon7wCTu
zZTcHFwx0SVwtolJXF3sN+3+zU+JLRjv+dvIJC4coaq3YYEu0S2L4RMJD7W+
wV3FN0XNG5jkmOq7nUp/MC92cNQcrmcSh8ahPQFwpKCqXgJsd4LHrBa+v8SJ
8aGWSY6wKRxcMYf76B1Gafd7Jjl0z/ioI+x779Zve9hG+dSJPDi9u3XAtYZJ
DtZFuc/Do+5JXl7vmMTKMf+s4V88f5pTP6reMsn+v63+d+G+oYrvmtVMYn57
6uJ32Gf8iwQfvE9xxVXleX7qo7qW8+kqJjGpUb8VBPvUxD0pf8MkRnbW9+ph
1WOS+6TgPb/PP1j5j58qJWYrJyuZZHd04uPjcIq6mdY0rK9Qnl0AX1U87aYK
61b3F7Kx0ShHr0trL5QzyY7D7C+N4XaNt02fXzEJ9UuqKg5WizT4KfKSSbSj
dOt+wLUcfqJqsNb6Ey1bFtAo8dQH9IoXTLLtdXjXBbjT7NENc1jdJqO/EVbc
1TrcU8okapN1P1ax06gBo5Bzv+Et11kjTnBezZybJKwsu2y6ELbsK3+qV8Ik
SuVKf9k5aNT4qHpFdDGTbDpgttAUDp1TVntfxCQKY2eWJMK+c7GlvIVMIh8R
K0CHK/NXDsrD66SKV25dSKN4Eniu6D9jEtkXneKhsEJNUdHxAiaR3v9brhku
pUR2PctnEsmRVYpinDTqXH1VJicsfnm72kk4orbCZTKXScTEj2wvgely6Yxd
8OrS4F2cXDSqYtUvocs5TCJqlmJoBneJs3HEZzOJCOONWRK80Vkh4R28PPT7
QSZ8SreVc9NTJhFas8hOYxGNmikbKA/MYhKBonVOYfD3MrZ76ZlMwm+y51Qr
3Hvy4S9emG/opLc4N42qN+tfzJnBJLwXrge4we9HymsOPWESHtGc0DLYuqBN
PimdSbgLPlxdtJhGfRrTlv/2mEm4jMZvWcACfIcFhx4xycLvgnHJsKDqu1lB
mD1QNXkEzlmzfov6QyZhW2GVrslDo8JTZvK805hkPscnJxzmGR6bHE1lkjmD
uKKPcL7Gc+ZS+PeX5y8ll+D1f192VUlhkhm/T1WnYLPCVW0JyUwyLfiv7gX8
boXV08wHTDKZJd66mJdGsWxU0xhJTDKuu6PbEs58qJg8c59Jfn52+JIK925y
qreFR85dGvoJi+4pGCtPYBIm/+PR7UtpVHF9s9dFmP6kZjoC/mqxPb09nkl+
7KD/7YBddZ06J+OY5HvPEk4ZPhq1oM6pzAAe8NrI6wk7GQ3If77HJF+XmgiW
w9cKxDRa7jJJ/yMPUd5lNEpefpVD7x30ndySOAhHqT7Vo+CezoJ1j+BDz6WS
PsWi76c/Kk7An1R+PmTAHTy/1Ch+GrX2pEdhagz6niqifR0OFj/b8i8afdfa
ptsNN7s9MUuBmz/aGMnRaNSGc4dPnb2FvrsHmHvByzX/any5ySQNi5KsK2Gz
p0FH18J1Dyrs+ARo1BVWV5Uw/F7jq5MNXCJzZFtGJJO8a+HwSIf137n588LV
J2XOTcG/fifd7b3OJK8X6gfuEMR+udfpbgBXJDpdioQXWpaL3LqGvqtFXOuF
zaOzXaauou9NmdHrhbBfTtwt1Y9A350a4rzhaYteA3+4ZMFo8hu4/MYfz5gr
6Hsc/xN+YRqVKMBZHBCOvqso5x6CT79uaeHBen69eXEGbNW+95vcZfT92NlX
v+DKePPOZ2Ho+/zt6l3LadSo63nBh5fQ9zsl9TdhZWuVugeh6LtSd+tneEOV
4QtpOP39n+4NK2iU13K1vQ8uou/2a776wOsaksQ+h6Dvf7SHq+HMpCzvfDgl
5uhPAREapfL88pjgBfR9Y8ivI/C2XOcgf/j+29T5LDjAQeRRchD6fqSa8zds
WyTzalMg+j4zyKu/kkYtZi9c/g2+e5NbKAbme3tGMDUAfcfG+QKb3jAzugfH
vDGU3CRKo4yXym7e64++27qtPw8/rk203HAefZ+6oVQDH5dJqdf2Q99v5G4V
XoXXcxts8/FF3+VatO1hX4eEnj0+6HvFhG4O7HbLM4N5Dn0/KGw8B3O5D1A2
cNi4msXu1fh84kNE07zR96sHbG7DS5vZD1WcRd+l/ey/wcfzsk0c4OCX8c5K
a2iUi0SJswIcaPnSIwAO3v16e84Z9H3087lamPn84J8yT/Q9nC1ohRiNihP/
3MEP+0hIhjnCqcKHrm70QN/Ldl7Pg0PPzgcFwl7mx2Lm4Yo3/1YuOYW+M8Pi
DdfSKN6YmyYysMel9JS7cF2t2qrb7ui7WO2T7/DyrtDKBW7oezEjV1mcRg36
9nPZujKJs+nSkiBYw+8bPf0kkzgNbyqvh7lXHSs7Cx8PMX27UgLrNBPpOy5M
4rjKs+E4/GVNkOAfZyaxfxbdVgBfut4ibAcfNS7sYcMI6/Pt5dAuJ/R9sP2r
MZyUV8NTcwJ9D5oZjoONokeytsMHRUTHfsBr+5RCVI6j73maM1ukaNQamvVl
q2Po+55D/y7Any2LtXMd0fdvgVxN/6+bHnhhAO/zf7B0tTSN8q7XeW/kgL4L
vxZyhv9Vhp/wt2cS4+xvq4pgVrNneKQdkxjqc0pxyNAodkn19Dvw7n5ZeVNY
PupP6qGj6LuvweZEeD5omW3iESbZJeCiTocnTcfOTB5G3zOvkq2y2G9ZXwzF
YWrXU71QOEyFalE7xCTkU6NxM5wrNy/ua8sk271/WojJ4flqjj723IZJNJcJ
2J6El63U+LEOVk9XcSiBYzP38Q4eRN919rtwrqNRRxmHdcLhLd3ep83gj3S7
RcLW6PuZuz5JsPp6LY6AA+g7b1kQE5be02NPs0LfH/aEaaynUSt1mr/JWqLv
2n+vh8GTNAkPXli+Qyy2FQ4JHv28Al7nQSWIy9MopdaTPNcs0PfF9qlucMVC
bn1BWDrlYkbZ/17OJbzDHH3XfJi3aAON6vBwmbKAxdvelljATMFdOSxT9N1t
qDwZfiK5X+4JvJqL590IbKW6Zd9aWDRpQ6OmAp7n3/baIrCIuvHHcNgietu2
xSboe7N770f4zPdI80lj9N0l6pvkRhol1/p3vwkswJFPPwW3nZzh2GSEvie0
jr2ApTxHwiIM0XfVqZnFm3Ce2O9vFYF5G5ezWcFT17IDlu1B30+oL0qDtc4O
rUzdjb6zWfONwXsnhaYGDND3e+eFtRXxfFxRydoHL1ROXH0VHlokx9ivj77X
vZLqhFu3tsqP6KHvjv3yMkqYhwyP1LPB83MLlD3hFbvlqRRd9D1WSqMcTk5i
OO6Ef2/SpXg306iykztmTuxE398d1z8IH9q37osVPH00fO8juITrXf+dHej7
7JP9E/C1enuXIh30/VadLaVMow6WBV/PgX9uYDlch/P9Hb2nKfS9iu9kNxxp
lB1eqI2+H1LylFPB+RPyz7sTpk/v8/WCj7LHLBeAhyLPBFfCX3TqEqThwXWx
l/m20Kier1IPpLTQ98qiGzaw7s+FlmOa6Lt1Z2w6vND9n7863DcxmzAF7x0N
Ct63DX2/tipthyr+fS4Xe6c6+i6zPTMSfpfBLfwT7n51OL8Xbtn1b7k93GkV
XLpejUYd5st5vwdu/5lc4Q3LWEsXcG5F36+8efcGnjkycj9QFX2X/N7Iv5VG
TVBrVRLgpudc7YfgijH+fZZb0HeLdZ8y/vfcl5G/Kug7a/fAL1j2qI6wO/w+
7CRjlzp6xicgLa6Mvq+9Pn4Tjgrj+rUEri7Jnv0M54suGTXZjPv7vg9sCho0
KshzjWeDEpNU0scW+cLiL5vX2sLlFwWXvYVjL7z4zKPIJC9Xqy4X3Eajqp5+
yh3YxCTPCy3XHIWTJEXdczai73t9pJ/Chk8eneeBi37c2/AbltS7PLVTAX0P
fq6sr4n7hMCK7PwN6PvKTxox8BbRFyFz8uh7/jz1BTZnt5HWgrMNxQ02aeG8
XbFAaNd69H1Ax+Q8/Ftqr+Wvdeh7gINlDXyAY/ibMZy+/NIh4e00SsK+da+A
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
       
       "]]}}, {}, {}, {{}, {}}}, {{{}, {}, 
     TagBox[
      {RGBColor[1, 0, 0], AbsoluteThickness[1.6], Opacity[1.], 
       Dashing[{Small, Small}], LineBox[CompressedData["
1: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
HjSmXl5QTfHqVSn/bQzkwf+7WIxU
        "]]},
      Annotation[#, "Charting`Private`Tag$18084#1"]& ]}, {}, {}}, {{{}, {}, 
     TagBox[
      {RGBColor[0, 1, 0], AbsoluteThickness[1.6], Opacity[1.], 
       Dashing[{Small, Small}], LineBox[CompressedData["
1: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
sw==
        "]]},
      Annotation[#, "Charting`Private`Tag$18123#1"]& ]}, {}, {}}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{1.8915123786679122`, 0},
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  ImagePadding->All,
  Method->{"CoordinatesToolOptions" -> {"DisplayFunction" -> ({
        (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
         Part[#, 1]], 
        (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
         Part[#, 2]]}& ), "CopiedValueFunction" -> ({
        (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
         Part[#, 1]], 
        (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
         Part[#, 2]]}& )}},
  PlotRange->{{1.9383795322066075`, 4.937877358683113}, {
    0, 2.455634077675246}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.02], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{
  3.747201610406764*^9, 3.74793478819197*^9, {3.748240532617337*^9, 
   3.7482405595694847`*^9}, 3.748272560577919*^9, 3.748358177322434*^9, {
   3.758540110199819*^9, 3.758540112911421*^9}, {3.758540466113153*^9, 
   3.758540480106937*^9}, {3.758540573893509*^9, 3.758540578519273*^9}, {
   3.758540685936466*^9, 3.75854071827212*^9}, 3.75854088530591*^9}]
}, Open  ]]
}, Closed]],

Cell[CellGroupData[{

Cell["Import previous results", "Subsection",
 CellChangeTimes->{{3.7331984924213877`*^9, 3.733198499329225*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"pT", "=", 
   RowBox[{"{", 
    RowBox[{"2", ",", "5", ",", "10", ",", "15", ",", "20", ",", "25"}], 
    "}"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.758540085834176*^9, 3.758540087246873*^9}, 
   3.758540724566971*^9, {3.758663881175562*^9, 3.758663881401053*^9}, {
   3.758664028278373*^9, 3.758664035965467*^9}}],

Cell[BoxData[{
 RowBox[{
  RowBox[{"wr", "=", "pT"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"g", "=", "pT"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"c", "=", "pT"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"d", "=", "pT"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"s", "=", "pT"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"s2", "=", "pT"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"a", "=", "pT"}], ";"}]}], "Input",
 CellChangeTimes->{{3.758664050779393*^9, 3.7586640770645733`*^9}, {
  3.758664789126011*^9, 3.758664789206045*^9}, {3.758665000837781*^9, 
  3.758665000944419*^9}, {3.7586650874539824`*^9, 3.758665087754162*^9}}],

Cell[BoxData[{
 RowBox[{
  RowBox[{"Do", "[", 
   RowBox[{
    RowBox[{
     RowBox[{"wr", "[", 
      RowBox[{"[", "i", "]"}], "]"}], "=", 
     RowBox[{"import", "[", 
      RowBox[{"wrfitcc", ",", 
       RowBox[{"pT", "[", 
        RowBox[{"[", "i", "]"}], "]"}]}], "]"}]}], ",", 
    RowBox[{"{", 
     RowBox[{"i", ",", 
      RowBox[{"Length", "[", "pT", "]"}]}], "}"}]}], "]"}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Do", "[", 
   RowBox[{
    RowBox[{
     RowBox[{"g", "[", 
      RowBox[{"[", "i", "]"}], "]"}], "=", 
     RowBox[{"import", "[", 
      RowBox[{"gfitcc", ",", 
       RowBox[{"pT", "[", 
        RowBox[{"[", "i", "]"}], "]"}]}], "]"}]}], ",", 
    RowBox[{"{", 
     RowBox[{"i", ",", 
      RowBox[{"Length", "[", "pT", "]"}]}], "}"}]}], "]"}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Do", "[", 
   RowBox[{
    RowBox[{
     RowBox[{"c", "[", 
      RowBox[{"[", "i", "]"}], "]"}], "=", 
     RowBox[{"import", "[", 
      RowBox[{"cfitcc", ",", 
       RowBox[{"pT", "[", 
        RowBox[{"[", "i", "]"}], "]"}]}], "]"}]}], ",", 
    RowBox[{"{", 
     RowBox[{"i", ",", 
      RowBox[{"Length", "[", "pT", "]"}]}], "}"}]}], "]"}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Do", "[", 
   RowBox[{
    RowBox[{
     RowBox[{"d", "[", 
      RowBox[{"[", "i", "]"}], "]"}], "=", 
     RowBox[{"import", "[", 
      RowBox[{"dfitcc", ",", 
       RowBox[{"pT", "[", 
        RowBox[{"[", "i", "]"}], "]"}]}], "]"}]}], ",", 
    RowBox[{"{", 
     RowBox[{"i", ",", 
      RowBox[{"Length", "[", "pT", "]"}]}], "}"}]}], "]"}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Do", "[", 
   RowBox[{
    RowBox[{
     RowBox[{"s", "[", 
      RowBox[{"[", "i", "]"}], "]"}], "=", 
     RowBox[{"import", "[", 
      RowBox[{"sfitcc", ",", 
       RowBox[{"pT", "[", 
        RowBox[{"[", "i", "]"}], "]"}]}], "]"}]}], ",", 
    RowBox[{"{", 
     RowBox[{"i", ",", 
      RowBox[{"Length", "[", "pT", "]"}]}], "}"}]}], "]"}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Do", "[", 
   RowBox[{
    RowBox[{
     RowBox[{"s2", "[", 
      RowBox[{"[", "i", "]"}], "]"}], "=", 
     RowBox[{"import", "[", 
      RowBox[{"s2fitcc", ",", 
       RowBox[{"pT", "[", 
        RowBox[{"[", "i", "]"}], "]"}]}], "]"}]}], ",", 
    RowBox[{"{", 
     RowBox[{"i", ",", 
      RowBox[{"Length", "[", "pT", "]"}]}], "}"}]}], "]"}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Do", "[", 
   RowBox[{
    RowBox[{
     RowBox[{"a", "[", 
      RowBox[{"[", "i", "]"}], "]"}], "=", 
     RowBox[{"import", "[", 
      RowBox[{"areafitcc", ",", 
       RowBox[{"pT", "[", 
        RowBox[{"[", "i", "]"}], "]"}]}], "]"}]}], ",", 
    RowBox[{"{", 
     RowBox[{"i", ",", 
      RowBox[{"Length", "[", "pT", "]"}]}], "}"}]}], "]"}], ";"}]}], "Input",
 CellChangeTimes->{{3.758540852957193*^9, 3.758540878282516*^9}, {
   3.758664095057042*^9, 3.75866411241998*^9}, {3.75866427301894*^9, 
   3.7586642732516623`*^9}, {3.758664390770547*^9, 3.758664394762322*^9}, {
   3.758664432077305*^9, 3.7586644427707453`*^9}, 3.7586647950975313`*^9, {
   3.758665093901272*^9, 3.758665151267565*^9}, {3.758665244111827*^9, 
   3.758665318568083*^9}}],

Cell[BoxData[{
 RowBox[{
  RowBox[{"Do", "[", 
   RowBox[{
    RowBox[{
     RowBox[{"If", "[", 
      RowBox[{
       RowBox[{
        RowBox[{"Length", "[", 
         RowBox[{"wr", "[", 
          RowBox[{"[", 
           RowBox[{"i", ",", "j"}], "]"}], "]"}], "]"}], ">", "2"}], ",", 
       RowBox[{
        RowBox[{"wr", "[", 
         RowBox[{"[", 
          RowBox[{"i", ",", "j"}], "]"}], "]"}], "=", 
        RowBox[{"wr", "[", 
         RowBox[{"[", 
          RowBox[{"i", ",", "j", ",", 
           RowBox[{";;", "2"}]}], "]"}], "]"}]}]}], "]"}], ";"}], ",", 
    RowBox[{"{", 
     RowBox[{"i", ",", 
      RowBox[{"Length", "[", "wr", "]"}]}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"j", ",", 
      RowBox[{"Length", "[", 
       RowBox[{"wr", "[", 
        RowBox[{"[", "i", "]"}], "]"}], "]"}]}], "}"}]}], "]"}], 
  ";"}], "\n", 
 RowBox[{
  RowBox[{"Do", "[", 
   RowBox[{
    RowBox[{
     RowBox[{"If", "[", 
      RowBox[{
       RowBox[{
        RowBox[{"Length", "[", 
         RowBox[{"g", "[", 
          RowBox[{"[", 
           RowBox[{"i", ",", "j"}], "]"}], "]"}], "]"}], ">", "2"}], ",", 
       RowBox[{
        RowBox[{"g", "[", 
         RowBox[{"[", 
          RowBox[{"i", ",", "j"}], "]"}], "]"}], "=", 
        RowBox[{"g", "[", 
         RowBox[{"[", 
          RowBox[{"i", ",", "j", ",", 
           RowBox[{";;", "2"}]}], "]"}], "]"}]}]}], "]"}], ";"}], ",", 
    RowBox[{"{", 
     RowBox[{"i", ",", 
      RowBox[{"Length", "[", "g", "]"}]}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"j", ",", 
      RowBox[{"Length", "[", 
       RowBox[{"wr", "[", 
        RowBox[{"[", "i", "]"}], "]"}], "]"}]}], "}"}]}], "]"}], 
  ";"}], "\n", 
 RowBox[{
  RowBox[{"Do", "[", 
   RowBox[{
    RowBox[{
     RowBox[{"If", "[", 
      RowBox[{
       RowBox[{
        RowBox[{"Length", "[", 
         RowBox[{"c", "[", 
          RowBox[{"[", 
           RowBox[{"i", ",", "j"}], "]"}], "]"}], "]"}], ">", "2"}], ",", 
       RowBox[{
        RowBox[{"c", "[", 
         RowBox[{"[", 
          RowBox[{"i", ",", "j"}], "]"}], "]"}], "=", 
        RowBox[{"c", "[", 
         RowBox[{"[", 
          RowBox[{"i", ",", "j", ",", 
           RowBox[{";;", "2"}]}], "]"}], "]"}]}]}], "]"}], ";"}], ",", 
    RowBox[{"{", 
     RowBox[{"i", ",", 
      RowBox[{"Length", "[", "c", "]"}]}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"j", ",", 
      RowBox[{"Length", "[", 
       RowBox[{"wr", "[", 
        RowBox[{"[", "i", "]"}], "]"}], "]"}]}], "}"}]}], "]"}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Do", "[", 
   RowBox[{
    RowBox[{
     RowBox[{"If", "[", 
      RowBox[{
       RowBox[{
        RowBox[{"Length", "[", 
         RowBox[{"d", "[", 
          RowBox[{"[", 
           RowBox[{"i", ",", "j"}], "]"}], "]"}], "]"}], ">", "2"}], ",", 
       RowBox[{
        RowBox[{"d", "[", 
         RowBox[{"[", 
          RowBox[{"i", ",", "j"}], "]"}], "]"}], "=", 
        RowBox[{"d", "[", 
         RowBox[{"[", 
          RowBox[{"i", ",", "j", ",", 
           RowBox[{";;", "2"}]}], "]"}], "]"}]}]}], "]"}], ";"}], ",", 
    RowBox[{"{", 
     RowBox[{"i", ",", 
      RowBox[{"Length", "[", "d", "]"}]}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"j", ",", 
      RowBox[{"Length", "[", 
       RowBox[{"wr", "[", 
        RowBox[{"[", "i", "]"}], "]"}], "]"}]}], "}"}]}], "]"}], 
  ";"}], "\n", 
 RowBox[{
  RowBox[{"Do", "[", 
   RowBox[{
    RowBox[{
     RowBox[{"If", "[", 
      RowBox[{
       RowBox[{
        RowBox[{"Length", "[", 
         RowBox[{"s", "[", 
          RowBox[{"[", 
           RowBox[{"i", ",", "j"}], "]"}], "]"}], "]"}], ">", "2"}], ",", 
       RowBox[{
        RowBox[{"s", "[", 
         RowBox[{"[", 
          RowBox[{"i", ",", "j"}], "]"}], "]"}], "=", 
        RowBox[{"s", "[", 
         RowBox[{"[", 
          RowBox[{"i", ",", "j", ",", 
           RowBox[{";;", "2"}]}], "]"}], "]"}]}]}], "]"}], ";"}], ",", 
    RowBox[{"{", 
     RowBox[{"i", ",", 
      RowBox[{"Length", "[", "s", "]"}]}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"j", ",", 
      RowBox[{"Length", "[", 
       RowBox[{"wr", "[", 
        RowBox[{"[", "i", "]"}], "]"}], "]"}]}], "}"}]}], "]"}], 
  ";"}], "\n", 
 RowBox[{
  RowBox[{"Do", "[", 
   RowBox[{
    RowBox[{
     RowBox[{"If", "[", 
      RowBox[{
       RowBox[{
        RowBox[{"Length", "[", 
         RowBox[{"s2", "[", 
          RowBox[{"[", 
           RowBox[{"i", ",", "j"}], "]"}], "]"}], "]"}], ">", "2"}], ",", 
       RowBox[{
        RowBox[{"s2", "[", 
         RowBox[{"[", 
          RowBox[{"i", ",", "j"}], "]"}], "]"}], "=", 
        RowBox[{"s2", "[", 
         RowBox[{"[", 
          RowBox[{"i", ",", "j", ",", 
           RowBox[{";;", "2"}]}], "]"}], "]"}]}]}], "]"}], ";"}], ",", 
    RowBox[{"{", 
     RowBox[{"i", ",", 
      RowBox[{"Length", "[", "s2", "]"}]}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"j", ",", 
      RowBox[{"Length", "[", 
       RowBox[{"wr", "[", 
        RowBox[{"[", "i", "]"}], "]"}], "]"}]}], "}"}]}], "]"}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Do", "[", 
   RowBox[{
    RowBox[{
     RowBox[{"If", "[", 
      RowBox[{
       RowBox[{
        RowBox[{"Length", "[", 
         RowBox[{"a", "[", 
          RowBox[{"[", 
           RowBox[{"i", ",", "j"}], "]"}], "]"}], "]"}], ">", "2"}], ",", 
       RowBox[{
        RowBox[{"a", "[", 
         RowBox[{"[", 
          RowBox[{"i", ",", "j"}], "]"}], "]"}], "=", 
        RowBox[{"a", "[", 
         RowBox[{"[", 
          RowBox[{"i", ",", "j", ",", 
           RowBox[{";;", "2"}]}], "]"}], "]"}]}]}], "]"}], ";"}], ",", 
    RowBox[{"{", 
     RowBox[{"i", ",", 
      RowBox[{"Length", "[", "a", "]"}]}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"j", ",", 
      RowBox[{"Length", "[", 
       RowBox[{"wr", "[", 
        RowBox[{"[", "i", "]"}], "]"}], "]"}]}], "}"}]}], "]"}], 
  ";"}]}], "Input",
 CellChangeTimes->{{3.758540516420115*^9, 3.7585405706173887`*^9}, {
  3.7586653519511433`*^9, 3.758665420281527*^9}, {3.7586654626973257`*^9, 
  3.7586655419735928`*^9}, {3.758665575466548*^9, 3.7586655895795507`*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell["DiLetpon Ratio", "Subsection",
 CellChangeTimes->{{3.7331987336614323`*^9, 3.733198736845319*^9}, {
  3.733198830885355*^9, 3.733198838082015*^9}, {3.733459297753614*^9, 
  3.7334593163300467`*^9}, {3.7334604259209223`*^9, 3.733460433088826*^9}}],

Cell[BoxData[{
 RowBox[{
  RowBox[{"ang", "=", 
   RowBox[{"Table", "[", 
    RowBox[{"i", ",", 
     RowBox[{"{", 
      RowBox[{"i", ",", "0", ",", "\[Pi]", ",", 
       RowBox[{"\[Pi]", "/", "50"}]}], "}"}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Tlim", "=", 
   RowBox[{"1584", "/", "10000"}]}], ";"}]}], "Input",
 CellChangeTimes->{
  3.7585402190230703`*^9, {3.758540339431052*^9, 3.758540339666197*^9}}],

Cell[BoxData[{
 RowBox[{
  RowBox[{"Emfactor", "=", "2.5078109618879587`"}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"nB", "[", 
    RowBox[{"w_", ",", "T_"}], "]"}], ":=", 
   FractionBox["1", 
    RowBox[{
     RowBox[{"Exp", "[", 
      FractionBox["w", "T"], "]"}], "-", "1"}]]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"nBi", "[", 
    RowBox[{"w_", ",", "T_"}], "]"}], ":=", 
   RowBox[{"NIntegrate", "[", 
    RowBox[{
     RowBox[{
      SuperscriptBox["p", "2"], 
      RowBox[{"nB", "[", 
       RowBox[{
        SqrtBox[
         RowBox[{
          SuperscriptBox["w", "2"], "+", 
          SuperscriptBox["p", "2"]}]], ",", "T"}], "]"}], 
      FractionBox["w", 
       SqrtBox[
        RowBox[{
         SuperscriptBox["w", "2"], "+", 
         SuperscriptBox["p", "2"]}]]]}], ",", 
     RowBox[{"{", 
      RowBox[{"p", ",", "0", ",", "\[Infinity]"}], "}"}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"nBf", "[", 
   RowBox[{"wr_", ",", "g_", ",", "c_", ",", "T_"}], "]"}], ":=", 
  RowBox[{"NIntegrate", "[", 
   RowBox[{
    RowBox[{
     RowBox[{"BWi", "[", 
      RowBox[{"w", ",", "wr", ",", "g", ",", "c"}], "]"}], 
     SuperscriptBox["p", "2"], 
     RowBox[{"nB", "[", 
      RowBox[{
       SqrtBox[
        RowBox[{
         SuperscriptBox["w", "2"], "+", 
         SuperscriptBox["p", "2"]}]], ",", "T"}], "]"}], 
     FractionBox["w", 
      SqrtBox[
       RowBox[{
        SuperscriptBox["w", "2"], "+", 
        SuperscriptBox["p", "2"]}]]]}], ",", 
    RowBox[{"{", 
     RowBox[{"p", ",", "0", ",", "\[Infinity]"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"w", ",", 
      RowBox[{"-", "\[Infinity]"}], ",", "\[Infinity]"}], "}"}]}], 
   "]"}]}]}], "Input",
 CellChangeTimes->{{3.7330486092807407`*^9, 3.733048610560197*^9}, 
   3.7437686620496483`*^9, 3.745381990213436*^9, {3.745395241151095*^9, 
   3.745395241505988*^9}, {3.745395985284416*^9, 3.745395994925745*^9}, {
   3.745396205346902*^9, 3.745396293529339*^9}, {3.7453963433634243`*^9, 
   3.745396345826552*^9}, {3.745396734234511*^9, 3.745396737777822*^9}, {
   3.745396837451665*^9, 3.745396837587263*^9}, {3.745396988400182*^9, 
   3.745396990367051*^9}, {3.7453970485284443`*^9, 3.745397067305369*^9}, {
   3.747934825973832*^9, 3.747934834018952*^9}, {3.749118169718378*^9, 
   3.7491181726457233`*^9}, {3.749118347040814*^9, 3.749118347176548*^9}, {
   3.749118529764544*^9, 3.74911853315576*^9}, 3.749118565196313*^9}],

Cell[BoxData[{
 RowBox[{
  RowBox[{"R0", "=", 
   RowBox[{"ConstantArray", "[", 
    RowBox[{"0", ",", 
     RowBox[{"Dimensions", "[", "wr", "]"}]}], "]"}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{"Do", "[", 
   RowBox[{
    RowBox[{"If", "[", 
     RowBox[{
      RowBox[{
       RowBox[{"Length", "[", 
        RowBox[{"wr", "[", 
         RowBox[{"[", 
          RowBox[{"ii", ",", "i"}], "]"}], "]"}], "]"}], "==", "2"}], ",", 
      RowBox[{
       RowBox[{"R0", "[", 
        RowBox[{"[", 
         RowBox[{"ii", ",", "i"}], "]"}], "]"}], "=", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"ang", "[", 
          RowBox[{"[", "i", "]"}], "]"}], ",", 
         RowBox[{"Emfactor", " ", 
          RowBox[{
           RowBox[{"(", 
            RowBox[{
             RowBox[{"a", "[", 
              RowBox[{"[", 
               RowBox[{"ii", ",", "i", ",", "2"}], "]"}], "]"}], 
             RowBox[{"nB", "[", 
              RowBox[{
               RowBox[{"wr", "[", 
                RowBox[{"[", 
                 RowBox[{"ii", ",", "i", ",", "2"}], "]"}], "]"}], ",", 
               "Tlim"}], "]"}]}], ")"}], "/", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"a", "[", 
              RowBox[{"[", 
               RowBox[{"ii", ",", "i", ",", "1"}], "]"}], "]"}], 
             RowBox[{"nB", "[", 
              RowBox[{
               RowBox[{"wr", "[", 
                RowBox[{"[", 
                 RowBox[{"ii", ",", "i", ",", "1"}], "]"}], "]"}], ",", 
               "Tlim"}], "]"}]}], ")"}]}]}]}], "}"}]}]}], "]"}], ",", 
    RowBox[{"{", 
     RowBox[{"ii", ",", 
      RowBox[{"Length", "[", "R0", "]"}]}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"i", ",", 
      RowBox[{"Length", "[", 
       RowBox[{"wr", "[", 
        RowBox[{"[", "ii", "]"}], "]"}], "]"}]}], "}"}]}], "]"}], 
  ";"}]}], "Input",
 CellChangeTimes->{{3.725361225914867*^9, 3.7253613103526297`*^9}, {
   3.725361342615449*^9, 3.725361363368341*^9}, {3.725361486279459*^9, 
   3.7253615682605352`*^9}, {3.725362762652525*^9, 3.72536276293797*^9}, {
   3.725362868989019*^9, 3.725362900512672*^9}, {3.726826853448038*^9, 
   3.726826891448366*^9}, {3.727701263154799*^9, 3.727701293345373*^9}, {
   3.727701505972157*^9, 3.727701541402749*^9}, {3.7280503071108313`*^9, 
   3.728050310285368*^9}, {3.728100694882288*^9, 3.72810072340024*^9}, {
   3.728123742805819*^9, 3.72812375254177*^9}, {3.729257212860208*^9, 
   3.729257314430148*^9}, {3.729257354005527*^9, 3.729257369791445*^9}, 
   3.729257419602573*^9, {3.730185804743245*^9, 3.7301858492477293`*^9}, {
   3.730185951645503*^9, 3.730185957980616*^9}, {3.733049225876031*^9, 
   3.733049302348743*^9}, 3.733116873806835*^9, {3.7331186202704268`*^9, 
   3.733118701855221*^9}, 3.733132139145953*^9, 3.733198906041408*^9, {
   3.733459388417635*^9, 3.733459405592067*^9}, {3.733463683410904*^9, 
   3.733463688877591*^9}, {3.7334637639001007`*^9, 3.7334637858530827`*^9}, {
   3.733463876654224*^9, 3.73346388059013*^9}, {3.733464877935026*^9, 
   3.733464953947959*^9}, {3.733465010580366*^9, 3.733465010716201*^9}, {
   3.75854022208773*^9, 3.7585402634383507`*^9}, {3.758540355079153*^9, 
   3.758540359994171*^9}, {3.758665640941058*^9, 3.758665700587578*^9}, {
   3.758665748372254*^9, 3.758665756181169*^9}, {3.758730285224304*^9, 
   3.75873029626014*^9}, {3.7587307491536903`*^9, 3.758730780157983*^9}, 
   3.758730845080389*^9}],

Cell[BoxData[{
 RowBox[{
  RowBox[{"R0i", "=", 
   RowBox[{"ConstantArray", "[", 
    RowBox[{"0", ",", 
     RowBox[{"Dimensions", "[", "wr", "]"}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Do", "[", 
   RowBox[{
    RowBox[{"If", "[", 
     RowBox[{
      RowBox[{
       RowBox[{"Length", "[", 
        RowBox[{"wr", "[", 
         RowBox[{"[", 
          RowBox[{"ii", ",", "i"}], "]"}], "]"}], "]"}], "==", "2"}], ",", 
      RowBox[{
       RowBox[{"R0i", "[", 
        RowBox[{"[", 
         RowBox[{"ii", ",", "i"}], "]"}], "]"}], "=", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"ang", "[", 
          RowBox[{"[", "i", "]"}], "]"}], ",", 
         RowBox[{"Emfactor", " ", 
          RowBox[{
           RowBox[{"(", 
            RowBox[{
             RowBox[{"a", "[", 
              RowBox[{"[", 
               RowBox[{"ii", ",", "i", ",", "2"}], "]"}], "]"}], 
             RowBox[{"nBi", "[", 
              RowBox[{
               RowBox[{"wr", "[", 
                RowBox[{"[", 
                 RowBox[{"ii", ",", "i", ",", "2"}], "]"}], "]"}], ",", 
               "Tlim"}], "]"}]}], ")"}], "/", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"a", "[", 
              RowBox[{"[", 
               RowBox[{"ii", ",", "i", ",", "1"}], "]"}], "]"}], 
             RowBox[{"nBi", "[", 
              RowBox[{
               RowBox[{"wr", "[", 
                RowBox[{"[", 
                 RowBox[{"ii", ",", "i", ",", "1"}], "]"}], "]"}], ",", 
               "Tlim"}], "]"}]}], ")"}]}]}]}], "}"}]}]}], "]"}], ",", 
    RowBox[{"{", 
     RowBox[{"ii", ",", 
      RowBox[{"Length", "[", "R0", "]"}]}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"i", ",", 
      RowBox[{"Length", "[", 
       RowBox[{"wr", "[", 
        RowBox[{"[", "ii", "]"}], "]"}], "]"}]}], "}"}]}], "]"}], 
  ";"}]}], "Input",
 CellChangeTimes->{{3.745395368409327*^9, 3.745395420666432*^9}, {
  3.7453954580837307`*^9, 3.745395535677684*^9}, {3.74539568097589*^9, 
  3.745395778816997*^9}, {3.745396455989843*^9, 3.745396458157371*^9}, {
  3.758540249808035*^9, 3.758540272940054*^9}, {3.7585403668410807`*^9, 
  3.7585403754948397`*^9}, {3.758730915267996*^9, 3.758730941173774*^9}}],

Cell[BoxData[{
 RowBox[{
  RowBox[{"R0", "=", 
   RowBox[{"Delete", "[", 
    RowBox[{"R0", ",", 
     RowBox[{"{", 
      RowBox[{"3", ",", "23"}], "}"}]}], "]"}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{"R0i", "=", 
   RowBox[{"Delete", "[", 
    RowBox[{"R0i", ",", 
     RowBox[{"{", 
      RowBox[{"3", ",", "23"}], "}"}]}], "]"}]}], ";"}]}], "Input",
 CellChangeTimes->{{3.7587368085726852`*^9, 3.758736861197256*^9}, {
  3.758736896216168*^9, 3.758736904535308*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"ListPlot", "[", 
  RowBox[{
   RowBox[{"R0", "[", 
    RowBox[{"[", "1", "]"}], "]"}], ",", 
   RowBox[{"PlotRange", "\[Rule]", "All"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.745396671472126*^9, 3.745396673344348*^9}, {
   3.7453971986671057`*^9, 3.7453972024664707`*^9}, {3.7482406142475443`*^9, 
   3.74824061445008*^9}, {3.748240901613481*^9, 3.7482409033167562`*^9}, {
   3.748242391976287*^9, 3.748242410811722*^9}, {3.748242948186721*^9, 
   3.748242990938891*^9}, {3.748272917392021*^9, 3.748272942840837*^9}, {
   3.74827353418021*^9, 3.748273547619947*^9}, {3.74835840131942*^9, 
   3.7483584041992607`*^9}, {3.748358595947406*^9, 3.748358652100362*^9}, {
   3.758540614313897*^9, 3.758540621207955*^9}, {3.7585406622947474`*^9, 
   3.75854067861274*^9}, 3.758540897341943*^9, {3.758730953034718*^9, 
   3.7587309840101957`*^9}, 3.758736915709669*^9, {3.758737684928097*^9, 
   3.758737694477242*^9}, 3.75873853569104*^9, {3.758738900117858*^9, 
   3.7587389030101013`*^9}, {3.758970052901951*^9, 3.758970055830435*^9}}],

Cell[BoxData[
 GraphicsBox[{{}, {{}, 
    {RGBColor[0.368417, 0.506779, 0.709798], PointSize[0.011000000000000001`],
      AbsoluteThickness[1.6], PointBox[CompressedData["
1:eJw1Ugss1HEcv8N5z6PIeTTHeUUeRR5t+f7CrJjkst1CNDpTXkliHs3Jhg4r
oejw/+nhVc3QNCvMMd2mVB6pFEXea67yKM51bff7bb/99tv3+/t+Xj+L6GQO
T4lGo7nK9/+TrH0lIQU1IgwmtkZlPYatMNIhGX/YRu694FYWdc+mHkNDl2V4
HeslVLKFk0PPSf0N+BbeKI4RUTC9KrzibDoKOstzGy8ekf4JoNttNKY8xpCY
3wi6NpOgF5jtk1VE3k/D5sSFBvuxapBqheWnM7/Bu/GZ2dPlWDFvFtLaqxZL
LmMQjU3Fze+dgxn2mVs5cWT+AoSv5Vj1tlBwvY4XxGUvgevRV90aUQRvBVwy
mUaiJgpOnl8+MGj3A4I5Q6PuJwj+KvgpZ3QOB2MQVHkKTI0ksPrU68tND6zg
8xNcpNm0yCoKkq9m5YwY/wLu7o7EvEKi9zdIxE8cWOYYODHdyQKzNTAsrf2w
35TwXYdo7/f3K00wHDpGj/Y134Dihe63TpmUgv8mqFnO+LwuooDp6Be6ZfEH
2IJW2XIe0fMXFnFXSBqfgi39Av92qy1Q5XcDnUn0bUObjN7ITKJgal3sGW8r
hQCL2MHYFKJ3B2L805yvpVHQ90nbgW0vgwCTcz2W6ZRCPw3tEd5xqd6F4dR0
Q2liJQ3plIfxS7WIH3RUqFl8SaSPoZ8jLhDfpqMEVvPCQCyl8EcJhRo2PfBi
YHAfWMq1rlJC+hnu3p0pxC9lZL0TTyvSlOfloZ3Jr1ZGR9xYH78aknxVUG54
3LiBHgbjZsfUz3dVkFPc7Nk+PeInA+Vh6eEYeb/ALDjBq4aBjkt0659FUgp/
VZFBi9mwhS6G7dKLvIpaVXRwNGJ8hUX8VkMy2VSEUM43iV4WKalTQ5XSrsAK
I/J/1JFom6vlK69PpbZzg7A6+s6PZFjzSB4aaL5cHNAvx/8HOLZqog==
      
      "]]}, {}}, {}, {}, {{}, {}}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{0, 0.025779203084319937`},
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  ImagePadding->All,
  Method->{"CoordinatesToolOptions" -> {"DisplayFunction" -> ({
        (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
         Part[#, 1]], 
        (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
         Part[#, 2]]}& ), "CopiedValueFunction" -> ({
        (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
         Part[#, 1]], 
        (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
         Part[#, 2]]}& )}},
  PlotRange->{{0, 3.141592653589793}, {0.026203791111321956`, 
    0.03469555165136235}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.05], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{{3.75873096967093*^9, 3.758730984797496*^9}, {
   3.75873684333741*^9, 3.758736873037519*^9}, {3.758736913281145*^9, 
   3.758736916276401*^9}, {3.758737686322576*^9, 3.7587376951757*^9}, 
   3.758738536694086*^9, {3.758738901719633*^9, 3.7587389034104033`*^9}, 
   3.7589682632846527`*^9, {3.758970053760968*^9, 3.7589700563048*^9}}]
}, Open  ]],

Cell[BoxData[{
 RowBox[{
  RowBox[{"pT1c", "=", 
   RowBox[{"DeleteCases", "[", 
    RowBox[{
     RowBox[{"R0", "[", 
      RowBox[{"[", "1", "]"}], "]"}], ",", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"x_", ",", "y_"}], "}"}], "/;", 
      RowBox[{"y", " ", "<", " ", "0.033"}]}]}], "]"}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{"pT1i", "=", 
   RowBox[{"Interpolation", "[", "pT1c", "]"}]}], ";"}]}], "Input",
 CellChangeTimes->{{3.758740913092503*^9, 3.7587409557646627`*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Plot", "[", 
  RowBox[{
   RowBox[{"pT1i", "[", "x", "]"}], ",", 
   RowBox[{"{", 
    RowBox[{"x", ",", "0", ",", "\[Pi]"}], "}"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.758738576980749*^9, 3.758738589721599*^9}, {
  3.758738747249559*^9, 3.758738798846086*^9}, {3.758738841212369*^9, 
  3.7587388808530807`*^9}, {3.75874093456365*^9, 3.7587409630185833`*^9}}],

Cell[BoxData[
 GraphicsBox[{{{}, {}, 
    TagBox[
     {RGBColor[0.368417, 0.506779, 0.709798], AbsoluteThickness[1.6], Opacity[
      1.], LineBox[CompressedData["
1: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
Yf+9Fc1r0XYrg4Y1KBqWB9wYZuvj47WoP8ocGnZIqlI2aBfmOinLR0OyhZyo
I1sfvBcur/sfDR2tU+vc0arTh+YfmEODN7Xs2ml0+MTW1AuCNPT6EGpR6JFR
NeVbc/F+1Y+H2fdXZt8EC5pFaHB0q/5yF134aXTl93k06M8zknuKFnnXWi28
gIb1ay8nvUV7dJds1ZGgoefC6J4JdHt7XNtOSRr2+N5zFsT2v+K5j52vNN7P
7HEju38Z12j7KWkRDetetD3wQ/+uNTj2QI6GMZUwI3Z+sOuBzO938jRo1pRu
Ycfb+2U8p0klGrRmlDss0AH5dVGbl9JwckKY+4nNB9k3Fh5Ww/gEKptr4HgE
GRczw9VpyDCoKPRF88ab3G3VoiF2Ku6GEOabkNPtr+z0MX4hRS2A+SjSsn+R
uwkNaa4i5/Mwf46a1udEb6fh9ejT91No8805y0t30HCB/GKzZX6a4bw1R4z/
WtGg6xgaNIBOUBpzDtlLwxGZaXm5BThfnSRvJxyj4b746vXREph/xj7pVh6n
4UT3VCd7PvzASMPDvhM0OARwlqsvxPH146WX8t40vBzXU3qCzm8WHc8/RcPl
l3Fn/0imGZZekzeo+Y+GoUdvgjbKpBnKzxj7PbpCQ0PPWttQdKSdU9mDGBpa
ropXNqH/lp+bqIyjIZVfOU1gEa6XJK7rVFyloQu0CTN0m/fjE/cTaZA0Jfsi
0UadnwruJdPAGO/VeIHO1+F8v5tKQ6JwXOo0WiJaaVlJGg190527JWQxfj82
Hi7KoKHi8xZe9vdWP8wO3izIouGs7VicGfrpnBzF/By8/iQdG4zWO/zEMfcW
DZErfHgT0JmNX9Jv5tGwQnKl0x20/3kVmRsFNNiT9+a9Rn/u32KXVYTxFgt2
HkJbGbsmZpTQoDJ2u3QGXZ0e9iqtlIY4hY3MXDmcX/Dkil0ro0FO08RWFp3A
bbJKKcf7X6sv1EDTVd+uJFXS0DlZLmSI7vNVE7r6COMRrfyZ/X3ZtlcmpnE1
NFR/vOXkiL6ne/RSTB0NxUYPRo+i5WPDG6/U08CjfTDcGx35K5+JekLD5Lpc
g9Pov+bPNkQ+pWH0TyTPRfShgpGz4c006PUu7IlAdwgK1Vx6RoOsj/mzGPTa
oxo8YS9o+Ge+6k0COr/JzPBiK37+q4uTil649HjA+XZsfx+1dqSjL1z8r/xc
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
       "]]},
     Annotation[#, "Charting`Private`Tag$19742#1"]& ]}, {}, {}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{0, 0.033238446423525844`},
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  ImagePadding->All,
  Method->{
   "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
    AbsolutePointSize[6], "ScalingFunctions" -> None, 
    "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
        (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
         Part[#, 1]], 
        (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
         Part[#, 2]]}& ), "CopiedValueFunction" -> ({
        (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
         Part[#, 1]], 
        (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
         Part[#, 2]]}& )}},
  PlotRange->
   NCache[{{0, Pi}, {0.033238446423525844`, 0.03469555162827186}}, {{
     0, 3.141592653589793}, {0.033238446423525844`, 0.03469555162827186}}],
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.05], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{{3.7587385826613894`*^9, 3.758738590271535*^9}, 
   3.758738799392047*^9, {3.758738842215343*^9, 3.758738881362754*^9}, {
   3.758740936092051*^9, 3.7587409636410913`*^9}, 3.758968274868733*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"pT1f", "=", 
  RowBox[{
   FractionBox["1", "\[Pi]"], 
   RowBox[{"NIntegrate", "[", 
    RowBox[{
     RowBox[{"pT1i", "[", "x", "]"}], ",", 
     RowBox[{"{", 
      RowBox[{"x", ",", "0", ",", "\[Pi]"}], "}"}]}], "]"}]}]}]], "Input",
 CellChangeTimes->{{3.758740967631975*^9, 3.758740979983018*^9}, {
  3.758741027562725*^9, 3.7587410297878923`*^9}}],

Cell[BoxData["0.03367591024736415`"], "Output",
 CellChangeTimes->{3.7587409804751987`*^9, 3.758741030367679*^9, 
  3.758968274938323*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"ListPlot", "[", 
  RowBox[{
   RowBox[{"R0", "[", 
    RowBox[{"[", "2", "]"}], "]"}], ",", 
   RowBox[{"PlotRange", "\[Rule]", "All"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.75873099371494*^9, 3.7587310186575737`*^9}, 
   3.7587369187222223`*^9, {3.758737714035736*^9, 3.7587377210266657`*^9}, {
   3.758738907615933*^9, 3.758738913586282*^9}}],

Cell[BoxData[
 GraphicsBox[{{}, {{}, 
    {RGBColor[0.368417, 0.506779, 0.709798], PointSize[0.011000000000000001`],
      AbsoluteThickness[1.6], PointBox[CompressedData["
1:eJw1kglIlEEYhtdz1Szzar3P1LwyS9Oo/IaUzZBlzSTJyvBY2rT1LsPSVNak
vDXdNrX9h1Iz1AzLMjHLA7OkgrTEDjex8ojyXI9Va4N/BoZh+Gbmfd/nG+uI
uCCeMoPB2KWY/1cyopou1TdcwWDiwCrpMGwCk4E8VCYk++eQvNJaXpWJofap
zXGJ1UuQXc2a0E8l9XfgJ145cTgCg3S68ryb6QAUBnqryR5Q9PkhWIpuYPcG
YBAI74KO/WeQiET5HgHkvhQkEyfTptgY1jaEClOMRuGDSWO1qgN5bwwMHDW0
Kndg6Boc4f80/wHcCweyrfWJn3FILB/UfrsRwzUJjxNiOwnzXSInvpCi9X7B
+N5D0mEDDIFnptx7t/0GO+QrdTEm+tPASZjlc3Ux5Iq9c01ZMzC/5OZZyiR+
ZsFsvwbqUccQl34x7b3xHAyc69/+cTPxNw8BY1EiS0U9KPJZXK7ZAmCPOk+W
AfErg6IEdjdPoefprxTha7kI16dq8LdwwmcJXkGe3yNbDEaufsFy62V4UZTn
mMGn6DwrkB7uzvuqyC/XzWE3b5UDut+2KX4f4bkKgvVxr9AUCkZkfd4xDmsQ
PtrAsY+m6LzrUPYnrNBQUe/8pO1s6/QX+jW1is0jSX4GWk63HBZkUXBEWlsg
KGcgW9dTPqmZFM1DCe0MWqjTvExBd1BfTp9ICTWG+8dzcwgfZcQa0ftumE3B
7p7JDDuxMup84trlgymalwpabVm8zStV9MtLOzXzpgpqE1QzuyoIP1V0zMVq
9CiFwfiea9KXClWkNepck/iGonmqoUaxhR73jqI/Ztyze6rU0DU1ymtLE+Gr
jjo4kvj2hxhWC+J5ZbfU0UKiTX5jPeHNRK2nY2KFrRhilUrCZiRMNKcjSxG0
kP+jgfQOpgUPtWEYSWoO4WANlPqaWraQU3Q/NFGyY/uN4scY/gG7s2nC
      
      "]]}, {}}, {}, {}, {{}, {}}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{0, 0.031864800945642105`},
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  ImagePadding->All,
  Method->{"CoordinatesToolOptions" -> {"DisplayFunction" -> ({
        (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
         Part[#, 1]], 
        (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
         Part[#, 2]]}& ), "CopiedValueFunction" -> ({
        (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
         Part[#, 1]], 
        (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
         Part[#, 2]]}& )}},
  PlotRange->{{0, 3.141592653589793}, {0.03199677561084183, 
    0.03463626891483619}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.05], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{{3.758730994282012*^9, 3.758731019469046*^9}, 
   3.7587369192483597`*^9, {3.7587377148271008`*^9, 3.758737721541231*^9}, 
   3.758738914070641*^9, 3.7589682750057898`*^9}]
}, Open  ]],

Cell[BoxData[{
 RowBox[{
  RowBox[{"pT2c", "=", 
   RowBox[{"DeleteCases", "[", 
    RowBox[{
     RowBox[{"R0", "[", 
      RowBox[{"[", "2", "]"}], "]"}], ",", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"x_", ",", "y_"}], "}"}], "/;", 
      RowBox[{"y", " ", "<", " ", "0.0332"}]}]}], "]"}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{"pT2i", "=", 
   RowBox[{"Interpolation", "[", "pT2c", "]"}]}], ";"}]}], "Input",
 CellChangeTimes->{{3.758740913092503*^9, 3.7587409557646627`*^9}, {
  3.758740995632971*^9, 3.758741003759659*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Plot", "[", 
  RowBox[{
   RowBox[{"pT2i", "[", "x", "]"}], ",", 
   RowBox[{"{", 
    RowBox[{"x", ",", "0", ",", "\[Pi]"}], "}"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.758738926536585*^9, 3.75873896510565*^9}, {
  3.758741007290229*^9, 3.7587410133511267`*^9}}],

Cell[BoxData[
 GraphicsBox[{{{}, {}, 
    TagBox[
     {RGBColor[0.368417, 0.506779, 0.709798], AbsoluteThickness[1.6], Opacity[
      1.], LineBox[CompressedData["
1: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
Kx3e8zJon2X5ShvL36BY8l5yiy4VXidz0B1z+A1bXKtXRk9TId90Rl307m+w
Mnyg8RU9XpyW2xb9G1xdpsT90Eb3JeNPdf2GEYe3ZxnRspuFHsqYN0L8dVOK
kA6un6K1Uia7RqB6Oy6S0ZfsOlYGPRuh63Sm8ag2FSLqIpyjXzcCJ1PbjVw0
fSjnpa0djfBPvLxWHy2sORc9NtYIcZb7VVXRqov1bVUrjeAouI17J9rROEj/
Hn8T2G47x/v3FNbbHcyHZ0ya4I7AD4036MXaEa/a603QU92w4yma/W5VQZJ7
E+hWhl52Rx/vfbj/4qsmkA+9ccAAffH5JTtIbgIRY65KDbTXkcNJfIVNwKgX
VbIXnRVPI9LQ2gRplfazW9C1hl1m6aNNMKyoJbOqRYVhxuKXj5ebgKl0d8MY
mq4g8vdVpmbQM23ob0cLXHdnO8rbDP/I2yy/o1X4z2sLSzaDhPLHmc/os9+V
H62qNIOZgfWrYrS91/aKlhPNIHY25+EHdIDsAk2ucTM4H8xNy0a7uZ7YM2jT
DDnkD3lp6GslkQZcHs3Ao1pBSUYbMUx5az5pBq0ai/B49PHTh5NcopphPnqL
TSxaOTysIT6tGcqo+u5RaImukbXG0maw+JhbFYFmsA/SV+prhvTBoS0h6IXc
Ps8rc81Q+K2E5hl6cE0xMZzSAoecq3YGohs1A+oruVpgrNrX7T/0l8COlUXx
Frha4L3ij85t3CsuodICF6SV3/mi3wo8OGN0sgXusih4PUA/SJWMz7dtge4K
1vC7aOcFz7phzxZwcVz87YW+qP5zmfspXldQkvNE6/mK7TwR0wKVq/rv3dEa
ta6n72S0QHNWvbobej/XtzvvylqgSEN5+DZaxFwgruVXCwiHbop3RZMmyv+q
LLQAhyydwS30lAK3qA1DK/zVUjjkjO72vK4dwd0KDE2DSjfRpVvYY5cPtMLZ
3rYDjmgvaQutQu9WMLsdfuYG2u5W5q0/Qa1wJkPnlC3arIgSwxfbClUp79Wu
o1W138+5l7fCxCuH5atoqdB1gfe/W2HWqrv0Cpq/Q+9E+2ArSLxgcrZG/7Nd
eq26qQ1qFqlhF9Gj2aeqbHnbIHiRm2SFbl2Jnonc0wbyW811LNHVR2b5v6u2
gZnUgrs5uuCx5rFV7TbIV7T2M0UnNbx0lLZogykeObvz6Jf846/MHNogrbRH
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
       "]]},
     Annotation[#, "Charting`Private`Tag$19850#1"]& ]}, {}, {}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{0, 0.033248107324687894`},
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  ImagePadding->All,
  Method->{
   "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
    AbsolutePointSize[6], "ScalingFunctions" -> None, 
    "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
        (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
         Part[#, 1]], 
        (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
         Part[#, 2]]}& ), "CopiedValueFunction" -> ({
        (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
         Part[#, 1]], 
        (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
         Part[#, 2]]}& )}},
  PlotRange->
   NCache[{{0, Pi}, {0.033248107324687894`, 0.03466506600707718}}, {{
     0, 3.141592653589793}, {0.033248107324687894`, 0.03466506600707718}}],
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.05], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{{3.75873892500565*^9, 3.75873896560713*^9}, 
   3.75874101416004*^9, 3.7589682751170683`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"pT2f", "=", 
  RowBox[{
   FractionBox["1", "\[Pi]"], 
   RowBox[{"NIntegrate", "[", 
    RowBox[{
     RowBox[{"pT2i", "[", "x", "]"}], ",", 
     RowBox[{"{", 
      RowBox[{"x", ",", "0", ",", "\[Pi]"}], "}"}]}], "]"}]}]}]], "Input",
 CellChangeTimes->{{3.758741023619193*^9, 3.7587410351610537`*^9}}],

Cell[BoxData["0.03390925527849605`"], "Output",
 CellChangeTimes->{{3.758741024180706*^9, 3.758741035896837*^9}, 
   3.758968275191785*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"ListPlot", "[", 
  RowBox[{
   RowBox[{"R0", "[", 
    RowBox[{"[", "3", "]"}], "]"}], ",", 
   RowBox[{"PlotRange", "\[Rule]", "All"}]}], "]"}]], "Input",
 CellChangeTimes->{3.758738975248681*^9}],

Cell[BoxData[
 GraphicsBox[{{}, {{}, 
    {RGBColor[0.368417, 0.506779, 0.709798], PointSize[0.011000000000000001`],
      AbsoluteThickness[1.6], PointBox[CompressedData["
1:eJw1kQ0s1GEcx++O64gNt7xclERpcsK8VvN7iplIQnbtmLZrl8Q5zRCHMWJz
zcaSjuL+z5KXm1xjiiwc4lZZSVvIS9HL3M3Iu0Nd2///bM+e/fZ79vt+v5+f
g0AcJWTQaDRP/f3/Uqdw7WzLOyYBB52tK3oslXDucFWCv0RO1r0g7ixjj7EJ
aOg6Glt3ZBiarrIbN25Q/Q/Ab/+mi7MhYHbpUcYp2zHwDpgMZTKo/1+AO+Gu
TkmRg6ioEcyOf4Xb9sHKPktKbxZ+aDSMriw57JrwizJtvkNzdtG4IEFOzpuH
zlaoH+UQ0P955uavQz/hntpnO8Oemv8bKtOr50b0+qV1wnCe4wKszyffXXEh
SD0t6MJGnJR+BFxO1HgMnViEaPbgpcUgSn8JtMXNsf4xBEhlflJb62UQ5g0f
eFtA+fkDwdUm1ua5BIjzJLmfOCvwkLU/jpdD5V2FrfoXM64qOURdfy2W2q2B
W28F30xBgHcIXRBovwFmhVpjhYryuwlBITljq9ME2HCDrugctsDFK/H0mWXK
/zZoePELlnsE6CxKgtucdGBVGSdMMsZknh2YUmbWZFpgmFlX+yU574Ig3b5N
5YHJfHvAyvIqb/HFoJo0Peno8hdePtlulQVgMi8NTQ/YaT0jMUTPNpSJHtAQ
+jjeEeGGyfx0NC3Ll/JFGAai1CXqKjqKdCUGDNIwyYOBuml9FrESDD6DC/nH
ZAzUXpWRx07GJB8DtL5pYlUixdDga5pdUG2Anvm5iYeKMcnLEHGVwvfxtRg4
zdy0qRpD5C4RYQ7GJD8mKg+bDY1U6P3YRST7P2ai6POpzvg5Jve/D93ZrLBt
9amFnbJUYWXtPqSIaXk1+hSTvFmoY25+N74bQwq9In65joVQf8E26sQkfyN0
/5bwmnmXnl9aGy+cMEKle1M9F99gch/GaKQpcOKCvv4HBjln6w==
      
      "]]}, {}}, {}, {}, {{}, {}}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{0, 0.029147293987107258`},
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  ImagePadding->All,
  Method->{"CoordinatesToolOptions" -> {"DisplayFunction" -> ({
        (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
         Part[#, 1]], 
        (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
         Part[#, 2]]}& ), "CopiedValueFunction" -> ({
        (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
         Part[#, 1]], 
        (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
         Part[#, 2]]}& )}},
  PlotRange->{{0, 3.141592653589793}, {0.02950547796057676, 
    0.03666915742996675}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.05], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{3.7587389757412043`*^9, 
  3.758968275291647*^9},ImageCache->GraphicsData["CompressedBitmap", "\<\
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\
\>"]]
}, Open  ]],

Cell[BoxData[{
 RowBox[{
  RowBox[{"pT3c", "=", 
   RowBox[{"DeleteCases", "[", 
    RowBox[{
     RowBox[{"R0", "[", 
      RowBox[{"[", "3", "]"}], "]"}], ",", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"x_", ",", "y_"}], "}"}], "/;", 
      RowBox[{"y", " ", "<", " ", "0.0328"}]}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"pT3i", "=", 
   RowBox[{"Interpolation", "[", "pT3c", "]"}]}], ";"}]}], "Input",
 CellChangeTimes->{{3.758741040247095*^9, 3.758741055515052*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Plot", "[", 
  RowBox[{
   RowBox[{"pT3i", "[", "x", "]"}], ",", 
   RowBox[{"{", 
    RowBox[{"x", ",", "0", ",", "\[Pi]"}], "}"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.758738989255033*^9, 3.758739008119787*^9}, {
  3.758741067775136*^9, 3.758741070598048*^9}}],

Cell[BoxData[
 GraphicsBox[{{{}, {}, 
    TagBox[
     {RGBColor[0.368417, 0.506779, 0.709798], AbsoluteThickness[1.6], Opacity[
      1.], LineBox[CompressedData["
1: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
ivJj2a21YKjiHXIY3V+Qk8Q4Vwu7vzos70OXvEoctNn4FY4qL/jtRPtEBlxk
PPoVHrlOBfGije+6Fdlc+ApDRjs2UtDSAVYM2ZFfYZC7N30U8/PnCbVwm4av
YOR68Es5OsdS/GcW/Sv8Y/hrmYEOMeIUZeT+BulJub+j0cT24ddZh77B2Gx8
vTNaUKZtap3XN8gtidM0RE8KVmnaPPwGG5IfRCuiUynJ1eu+fYOp30yCU7g/
r8084rQZ+QYf9vrsaUIfG7pqmbX+O4R1hxnnodnrbfqOGX2HH72vNvug+ysO
KGS5fYfLVvc7TNClhern1gV/h1SxrgA5dOxrqXfH/vsO5yqfLjGgzyfxkLOq
vsNKXYb1bzxvTKLI+9cNfgeXCpbwfHRkua/Ba2odVMrHP3+wdl4Vjw5Z8tSB
zn3rkBNojwKXUIpEHZgcmrjOt2mtvzATJavVwe0PKvaFG3G//NTKWdWrg187
Scm26POLPM1LJ+tAd8QsKAnPx8t7yjbPvqgDuVvcblJ4vt4pF3n9T/UH5J+3
DhbiToLEupYvjbr1sKQadHecLQmcHD/ZNVjUQ1Hmi8xQtAQ9Y+yHcz1oTmdt
2oZO5bnD8/1OPXzy9vrihvXn9VE1m+qaetA7vM57COuX58CWkcr2etipcc/5
PlrZj+3q5+F6CNm4rk4BnRvTQ/u0oQEKTMe2emN9fNcRNlRk3gDWP1tSSWv1
3CMg4MOJBsiNd9m41k9or5za8P58AwjdJe00XuvftoBqQXQD2J90fRLLkAQ3
suTK89MaoDfl3V9dtJ4O/9G8ggaopkkyDFOToNJp5FJOWwNQ3A0zCfTdyVa2
7H8NQLp1/+AwBffvrfL4zKUGyB4f/f4EvZ4vSymDvRH+Wqpr66O/pTz9+Eqk
EdLX+bWvkJMgbGeQxUulRniiuBLdhTar9On7j2gEprGMjeXoxsEDLGlOjUC7
2Gsdhh6Lkd1306cR5tvmIy6jWY2YrjvcaIS3AyrGJ9FSS30fNMMb4feJR1ct
0MTr8rmNtEbw5N8sr4u2sX+uNpXdCG6ffxqpoi9y3PCq+9gI9Rq1vyXW5lN6
/NWrHzg/jfkufvRLbxi8290IoyEupmzoz+Iiki4TjfB8jk+GjO5qWHLQITfB
Fz0OlzlSEizean+6masJTu06yjiB5t/5rmVetAl8Y8eY/qFVBp7wNCs3wZJK
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
NC+EKw5LB6PVN2SbzCzlhbLnq7uM0P8DP0ASBQ==
       "]]},
     Annotation[#, "Charting`Private`Tag$19948#1"]& ]}, {}, {}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{0, 0.03320981817387181},
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  ImagePadding->All,
  Method->{
   "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
    AbsolutePointSize[6], "ScalingFunctions" -> None, 
    "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
        (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
         Part[#, 1]], 
        (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
         Part[#, 2]]}& ), "CopiedValueFunction" -> ({
        (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
         Part[#, 1]], 
        (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
         Part[#, 2]]}& )}},
  PlotRange->
   NCache[{{0, Pi}, {0.03320981817387181, 0.03669222993729127}}, {{
     0, 3.141592653589793}, {0.03320981817387181, 0.03669222993729127}}],
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.05], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{{3.75873899029676*^9, 3.758739008529138*^9}, 
   3.75874107112325*^9, 
   3.758968275403721*^9},ImageCache->GraphicsData["CompressedBitmap", "\<\
eJzNnGd4VleS5y8Z3Ha7Z9zrmY3unfF0z3za9OyznzZ82N3ZMD0zO+PUzrSz
TRuDccBggg1O5JwzmGCSAJFEEllkkEAiiiSBAIFAoAg+W7+6VVdXel+Z3pnZ
eeY+j6RX573nnKo6Ff5V59z7y6693nztN117vfVK15/9ac+u77351ivv/+y/
d+8pTe3aRFGbN6MoKvpZxOcgH+2XXm/xy/65z+e/1D/tQmNjY7Ar6pCl7V9n
aftXP3Df3bt3M+5Lt/2C323DvXv3OmUZ5ScxcX+ufx4KN27cCBMnTgxffPFF
WLhwIb3CzZs3w+jRo8P169dDdXV1mDp1qn4/bty4UFZWFk8QPRguXrwY5s6d
G+rr63XslStXhtWrV+vnioqKMHbsWO23bNmy8P333xtdmzZtirroPfSbMGFC
OHv2bKitrQ1z5szR+0eNGhVKS0ujPzLy8/LywuDBg8M333wTteWOqLP22bJl
S1i6dKmOdfr06TB8+HDtLzPEXX8crl27FoYMGaI/X375ZRg0aFBYvHixsjlt
2rRQVFSksluyZIl2HTZsWCgsLPTuQrXOwldff/01I+ts+/fvDzNmzNDPIhGV
FvcgAeljMv4Do//WrVvhzp07+t+f2MgzZ84MkyZNUj7gLT8/PzQ0NIRt27ap
LPiedr5ftGhR+Oqrr0JdXd3PTfQnTpwIn332md7KdfTo0VBcXKwEjx8/XkV5
5syZMGDAgLBnzx5fsW+//TbMmzdPu8D2jh07lDrY//TTT5G6rmC/fv3C7du3
Hzdijx07Fl5//XUV9vHjx1Vq8nU4deoU0tKFhFi6QkWfPn2Y/XHjn6+hf+DA
gbJ+0jl6IJw7d06JLSgoCFeuXAlbt24NPXv2VMb43Lt3b3TIKTh58mR47733
wsGDB3X2Dz/8UP+Wl5eHvXv3KjMjR44MCxYsUKpg5tChQy0WgmUrKSnR//5Y
f3dU2+jbt68KmoslFkVqZ18zMUrEVVVVpRMLXT+3EfmahZd1iLwLkvnoo4+U
La4VK1ZgYr+wLlgZZMb/xV2QOxbj6/LJJ58wtBsAyoFAjhw5ErW3Lqjdxx9/
nBgfRpyTkxN3aa+TQ9isWbNQdu+FyZ4/f969Qfj888+R3+P29dWrV5kk+ZpV
W7t2bVv7GkGgUU7qd999h6K2kDJrhJY0SbmTig4pe899+/apQQlpkY9OH9rR
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
\
\>"]]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"pT3f", "=", 
  RowBox[{
   FractionBox["1", "\[Pi]"], 
   RowBox[{"NIntegrate", "[", 
    RowBox[{
     RowBox[{"pT3i", "[", "x", "]"}], ",", 
     RowBox[{"{", 
      RowBox[{"x", ",", "0", ",", "\[Pi]"}], "}"}]}], "]"}]}]}]], "Input",
 CellChangeTimes->{{3.758741087118709*^9, 3.758741089364423*^9}}],

Cell[BoxData["0.03491130985349676`"], "Output",
 CellChangeTimes->{3.758741089770492*^9, 3.75896827547526*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"ListPlot", "[", 
  RowBox[{
   RowBox[{"R0", "[", 
    RowBox[{"[", "4", "]"}], "]"}], ",", 
   RowBox[{"PlotRange", "\[Rule]", "All"}]}], "]"}]], "Input",
 CellChangeTimes->{3.758739016629176*^9}],

Cell[BoxData[
 GraphicsBox[{{}, {{}, 
    {RGBColor[0.368417, 0.506779, 0.709798], PointSize[0.011000000000000001`],
      AbsoluteThickness[1.6], PointBox[CompressedData["
1:eJw1kX0s1HEcx895OA1L8nxndJ4a0cw8FPX5LrE0po5mZVfD5PGcIuQ5KTpD
hObp+P2+Kw1t7JqWP0Qy3aXrQVpDnkbpsjzE5eFU2r733T777rPPd+/P+/36
HogS8mKYDAbDfbf+3+pjwO6UPTWmwNLRrOq5SScYFcrrTW3UfR+glFZ/Bw4F
rT3ciGabV1AxxmwKiW0h83fwJja07awzBdPLjemH2R+hP1M/IdJT/f4zHJvr
4nF9KBAUPYK9DhOwqeyeGfVU609DQDcOOBpEwY7ehaIM81kQyHOi+NktRG8O
5IXrXJucFhgYnYr7ZvUVysrs2iOz1PoL8FbIC3Qoo0DUHBMcbquAmI5RkR1W
71uEy5P21TIJBWfif7gNHfwJiujTqhmOev8yTI2X9AdPUlBa513KNlsBI+4J
37wCtZ9VYNcbePmxaBDmZeeOWPyCho1rH5Y4NPG3Bu1+PU2fnGjgRfcKSznr
cLWnYl4LaOJXCbODh9I0rWnwOKUR5Wf9GwasIP11Mk38bwDTxCc8PocGc5eT
YdsHNqFjEVk2VNIkzxbkHt+w7GqkYXtfcYDEbhtSTai1J49pkk8Fy3EOrneG
aJhSSr0THXdgib2yszpKk7x/QCZuEtUs0vBiXN/Z1ukv5OdHpA2paJKfger4
eg/AEEPodGu5oJaBFL38+BEuJjw0kOJ90bCtG4aXPGmx9L4Gcj0nEVgCJnyY
qGv4u4gfiMFzUFFgX8dE+2vuivKjMeGlifI6nY3FlzC0euln3ajXREkJ7kE5
cZjw00IWpRkS7ysYLNpcUr80aKFnIwJp0XVMeGqj9Qn/eWHerh9OSNKRJm2U
OT8oX76FCV8d5InPjyhvYlCVp8TUiHWQ2GMx1q8EE94sFLz2sJpVgSFZo+ri
SjMLyZi+hn1VmPDXRQ23E8cKazFMpUrCgyldZGjq0nKvDpP/2IPCurcWNCsx
/APsu2/d
      "]]}, {}}, {}, {}, {{}, {}}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{0, 0.031726056716043845`},
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  ImagePadding->All,
  Method->{"CoordinatesToolOptions" -> {"DisplayFunction" -> ({
        (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
         Part[#, 1]], 
        (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
         Part[#, 2]]}& ), "CopiedValueFunction" -> ({
        (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
         Part[#, 1]], 
        (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
         Part[#, 2]]}& )}},
  PlotRange->{{0, 3.141592653589793}, {0.03203820029869064, 
    0.038281071951626555`}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.05], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{3.7587390170811663`*^9, 3.7589682755686083`*^9}]
}, Open  ]],

Cell[BoxData[{
 RowBox[{
  RowBox[{"pT4c", "=", 
   RowBox[{"Delete", "[", 
    RowBox[{
     RowBox[{"DeleteCases", "[", 
      RowBox[{
       RowBox[{"R0", "[", 
        RowBox[{"[", "4", "]"}], "]"}], ",", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"x_", ",", "y_"}], "}"}], "/;", 
        RowBox[{"y", " ", "<", " ", "0.033"}]}]}], "]"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", "13", "}"}], ",", 
       RowBox[{"{", "15", "}"}]}], "}"}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"pT4i", "=", 
   RowBox[{"Interpolation", "[", "pT4c", "]"}]}], ";"}]}], "Input",
 CellChangeTimes->{{3.758741109799469*^9, 3.758741156070038*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Plot", "[", 
  RowBox[{
   RowBox[{"pT4i", "[", "x", "]"}], ",", 
   RowBox[{"{", 
    RowBox[{"x", ",", "0", ",", "\[Pi]"}], "}"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.75873902671437*^9, 3.758739032392531*^9}, {
  3.758741121016549*^9, 3.7587411222539873`*^9}, {3.7587411586793947`*^9, 
  3.758741162857502*^9}}],

Cell[BoxData[
 GraphicsBox[{{{}, {}, 
    TagBox[
     {RGBColor[0.368417, 0.506779, 0.709798], AbsoluteThickness[1.6], Opacity[
      1.], LineBox[CompressedData["
1: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
6IK3BiWRgxNw74zr2wuaDNgqvyWgZmQC9Ju08p+gU8N5jnBN4PoqbpdXo9cs
Dotrz0zAO8q+bwvoh9aff7ov4P2ORw+v38UAntqnWfksk5AW4fXDAO2z477r
KPskvArkyryGXmRe1JHnnASHFbsgEu3EfWCFFTf+PiB7+wX6t5NcSyzfJNwd
+XThC/p8FyezWWASSoa3d/ehv+n9urRSZBKO57q0zaGP5VSoHpSYBMcPsXGV
6GqxVBYf6Um4oPUlcyd6r49vZfG6SajL1bjwH65X5eTe00pbJuHPqtWRrrj/
p6WyGy4rTYL4vlSbLozf2k3UsWS1SciiFDO00KuW3t0VIZOwFFO2jAXzMZG4
+xmr0ST06Sv1nsP8XuKRct55dBImkobWv8T89ziz7L5+chKMGIX63Oi6/cX1
/WcnYUj4Fy1HGfP/R2Phy5VJODFsf3RWkQGOGuoHYsMnwc121bLHWM8sduG3
HkRNgm1k7fgS1ntQ3J8cz5hJeH5EzOU8Oo3yn9i5RIzHbPO4OvZLd4Xw7/Uv
JuEii+WPaexfh7nr0sIFk3CvhTJwGb0o//UYVyGuf/2m0j7sd9EHAcVD7ybB
KjLG6zvOgyNH54Oz6iYhuu6C0xLOk26f42WMpklocKzVCkY7FOTMhrVNgoVN
iYAs+r7oJQunH5Mw+iX7wr/5JHKoItL65ySe0ybV/uI8S/VY++nE4CRoD2um
MNFl39uVdo5jvpin2ZbW4PP4t9tsmp6EKAknzRfobu2IGPH5SdjYwJdjh3Zw
Gq3hWZoEm3O1AZvRiymHqCxsU5BrdWRwXBKf3/Lf9lHaFDje2DFfhBZZRrPr
5pqCeTWZ7w/QqRoWjDqeKcgmGe/Oo1Xtihrfr5yCqc2uH/eg38eJLMsTnIJ1
cRuF16ONa50gRWQKEhVOtvCiuyh1V6MkpkAr8a7lBrSd8pZUf+kpiJKVaF9E
L1jda7+5bgr6PS+2tOH6Ah7+5L0kNwWBare3FeN+U+biXPS3TYFOobVhFMZL
ddPCM1CdAu5A87eBa/H5Zie6t+6Ygsgi5z4/jH9XCe8Bfq0pMNEzT3qA+RLy
9RJrNpoChozVmVbMd3JBh+HHo1Ngv+ZV+wzWh/LA9ruvTk5Bo1/bG1Gcb4aH
xoZjzk7B94QWmh3OL3/+c8VnHafgm4i4BMF5NRenbTEYPAVbToS+uA4M2DWt
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
zNAa2WOdNmzsZLVUSkwC2mM+xfzEMnayUv30940OTGALWmmuJspOOLI27t7u
iOe3nJ9mkzvYiar+tpxLV5lgSm3QHNVgJ2/1JeweoJ8dLxUf3sVO9P9uFcxG
6y/EdPRosZN0k2m5aXSwjrFZ/X52ItOlddjzGhNWNRea5pxiJwzxdJag60wQ
/xti4niTnViuduwIccb8dh96+dCNnWg+Ur6eg772gXN1kQc76diys70eXRni
9ZXrNjvpvOayavUNJjitc9RLvIe/PwhZFY1OWKaQUhnITn581eZ+ia76088+
+oCd+A5yVTejZV6fKdEMx/3fUktc7fIvnmISlpHs5OVAbb4q+ubdZteAKHZi
xf3zwVF0km14y/NH7MSpM1j+GrrGwFCtKYad7OoOSn2AnldeHvE3lp0cWCbv
mIJeJ1IxJpPAToqjYxeL0G49kOGQxE4enDlmP4ze6LJFliuDnbz7xdemexPf
pwwefs1idvLTn+3aBPqZb6XDubfs5M7BGktOVyY0X/Kp9n/HTk6ZxKpJoDer
Lfo3fmAnFk1+Abrotk/DLA417KQ+Jl4oGq08WfWb8Z2dvFiQtdvuhvXc6nfw
4w92MlX29uQhdECxdtpILzvRKvXTPovu8i+00hjAfH3ulvBHB0o8bW8YYycZ
t2uEW9B9uvcq6exUMrSso8TVHc/PB86skaVRSaP/lFAwukNfxWk3nUpKJo7d
T0TXH+2UurmcSvIbv376jDY8+cI5kodKjjqcfdyN/mTq/zmbl0oENcQDp9Gl
55RcBldRydpMyjcpDzzPW9O/cKymEjaXOKKGfmnbsXatMJVseGVQdRCtbJd9
k4hSSRvbZ28L9HNH3xpTcSrR23lZzx0tf910nYskleio3ZuKQyffUHSLkKKS
wZrzVaXoJ7fa1lfLUsmfp2d76LeYIHT7ufvAeirZctxHchM63OduHU2OSurt
rl43QAcEbrkFm6mELy/rXCT6xuPbjc9VqeS2MVf/Wk8mHMmXvxumSyXFyv7e
u72wPl6xtGXqUQmT2+WDJfpAUcPWqgNU0hNqOuKL1iq71c5uSCU7r3C2fkZv
ratTcjpBJZe27X153Bv7bcS1+8QFKtGX+y/kzG08r44Zql+/SCU7pITOeaLZ
pmSDQi5TyU225M449NzCl+2VjlSSdXJjVQe6n2ttyM6bVLJpXpjv6B0mvFtX
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

       "]]},
     Annotation[#, "Charting`Private`Tag$20046#1"]& ]}, {}, {}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{0, 0.03336119050445926},
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  ImagePadding->All,
  Method->{
   "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
    AbsolutePointSize[6], "ScalingFunctions" -> None, 
    "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
        (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
         Part[#, 1]], 
        (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
         Part[#, 2]]}& ), "CopiedValueFunction" -> ({
        (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
         Part[#, 1]], 
        (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
         Part[#, 2]]}& )}},
  PlotRange->
   NCache[{{0, Pi}, {0.03336119050445926, 0.03828136061568159}}, {{
     0, 3.141592653589793}, {0.03336119050445926, 0.03828136061568159}}],
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.05], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{
  3.758739032904941*^9, {3.7587411227025347`*^9, 3.75874116332295*^9}, 
   3.7589682756592207`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"pT4f", "=", 
  RowBox[{
   FractionBox["1", "\[Pi]"], 
   RowBox[{"NIntegrate", "[", 
    RowBox[{
     RowBox[{"pT4i", "[", "x", "]"}], ",", 
     RowBox[{"{", 
      RowBox[{"x", ",", "0", ",", "\[Pi]"}], "}"}]}], "]"}]}]}]], "Input",
 CellChangeTimes->{{3.758741228223894*^9, 3.758741231078183*^9}}],

Cell[BoxData["0.03605250542974066`"], "Output",
 CellChangeTimes->{3.7587412315528297`*^9, 3.7589682757273417`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"ListPlot", "[", 
  RowBox[{
   RowBox[{"R0", "[", 
    RowBox[{"[", "5", "]"}], "]"}], ",", 
   RowBox[{"PlotRange", "\[Rule]", "All"}]}], "]"}]], "Input",
 CellChangeTimes->{3.7587390435018387`*^9}],

Cell[BoxData[
 GraphicsBox[{{}, {{}, 
    {RGBColor[0.368417, 0.506779, 0.709798], PointSize[0.011000000000000001`],
      AbsoluteThickness[1.6], PointBox[CompressedData["
1:eJw1kX0s1HEcx+84z/KQeTzNY7RKD8xDo32+S4k/TDsZo2ydxMV1bR7ykKel
ifMceTg59/vSeeiPlrDMSLHS5oaQecjNymPkJORwafved/vuu8/22efzer++
NmweK1KFRqO5HN7/r/Lo6DQNH0SLwMLRtLTH+BVw77KnsuLqSP0OymRLnhFh
IhB32oYJrT9BZZArsyNK2T8Eg1Ivo8qEOpCu1ySeZY6C6fgT7fmsOtI/AdpJ
SxbORSLgZjeCvsM03BJYxa22K+dLoSJH2qRfL4J9ndDsB2Zz4C3JL05oEJF5
30FviHVmdVAEH8ZmoxeOzQP7ZvQNxpySZxHc+00WXm+LIE8Y6R9stwx+gT5Y
YECRfT+hpN9Zj25BwTXOyvmPJ9bgKqdRrfQiRfavw7fpxSujVyjgV3nwmaYy
SOW15w7dpgjPBigK94X1aRTw0lPTvpj/hrZ5wWftEorwbQIz3pg5J6aAFdHN
41v+gWVGKudFL0V4t6BS/EauIqXA1ZfO9rbaBqv4Zi3mBkX4d2BIXaPHTx+D
mdPl63KbvxDFKAg2tMYkzy4k2vU1mF3CIDfM8Wm1l0N1jYFXZQgm+fZAMZac
YRmFYXZrwCPGcR+yJ/PGOAmY5D2Azka3lYxEDO+ndE/ZnVSAA8rf9CnAJD8N
ZUr0ivhCDIFScSH3GQ017ZxOGW7BxAcdNXSpxpzrwNDHGsgZqKAjRW9Xelsf
Jn5UEOvI27KWLgxu/cuZx6tUUH1IeFuZBBNfqkjt6Ez3xBgGsbtuSla1Kiof
DnqoP4uJPwaK4ArmpT8wmDc7xc0IGMi+O8D36RImPtVQbYOJS8mvQx7LgNgL
z9UQf7Ta8+saJn7V0WSMtPjRFoa9wvuR5bXqyOdO/+PQbUx8a6DhkfFc210M
9+il4TKhBtKUGb3M2MHEvyZan4iVGMoP/cW1BvuLNFGgU01J8r7yP7RQwohn
a5ICwz9tq3iN
      "]]}, {}}, {}, {}, {{}, {}}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{0, 0.031784889543426016`},
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  ImagePadding->All,
  Method->{"CoordinatesToolOptions" -> {"DisplayFunction" -> ({
        (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
         Part[#, 1]], 
        (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
         Part[#, 2]]}& ), "CopiedValueFunction" -> ({
        (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
         Part[#, 1]], 
        (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
         Part[#, 2]]}& )}},
  PlotRange->{{0, 3.141592653589793}, {0.03213125041039153, 
    0.03905846774970182}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.05], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{3.758739044117282*^9, 3.758968275796515*^9}]
}, Open  ]],

Cell[BoxData[{
 RowBox[{
  RowBox[{"pT5c", "=", 
   RowBox[{"DeleteCases", "[", 
    RowBox[{
     RowBox[{"R0", "[", 
      RowBox[{"[", "5", "]"}], "]"}], ",", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"x_", ",", "y_"}], "}"}], "/;", 
      RowBox[{"y", " ", "<", " ", "0.033"}]}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"pT5i", "=", 
   RowBox[{"Interpolation", "[", "pT5c", "]"}]}], ";"}]}], "Input",
 CellChangeTimes->{{3.7587411792325*^9, 3.758741194427833*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Plot", "[", 
  RowBox[{
   RowBox[{"pT5i", "[", "x", "]"}], ",", 
   RowBox[{"{", 
    RowBox[{"x", ",", "0", ",", "\[Pi]"}], "}"}]}], "]"}]], "Input",
 CellChangeTimes->{
  3.7587390520015574`*^9, {3.758741199107422*^9, 3.75874120786509*^9}}],

Cell[BoxData[
 GraphicsBox[{{{}, {}, 
    TagBox[
     {RGBColor[0.368417, 0.506779, 0.709798], AbsoluteThickness[1.6], Opacity[
      1.], LineBox[CompressedData["
1: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
Br8Dn3/SyPCj25wt6Dtvdz0b7qIRtcUz1w3Qbf75Z7b30Qh/sOVPH/R98ZSm
mjEa2WjSXTuA7t5zt5SHRid2q+uYz4cw/vZbrpZh0Il37OKed+jmQ2pOO3jo
RKTLzbYWXX20VdJ1IZ1UWt825xpmg/6xzGthi+hk4E9/kSD6i5l/efoSOvEb
WflBDl10SsWlX5BONP474a+H1rLmqWSuoJODf7T2WaFzbZqlpVfSSbOKy+Or
aNVL6a5ElE665RxcfdCv7H2rzFbRiaXz0WNBaAVHs7UuEvg9IvHCvJOcld1D
JelkxDqIf95S7oxvaWvohKrivDMQHX29UbZChk5i9ucKPEALe7/y6JOlEx1q
pvt9dIjP7e8MeTpxf/Kf31304jvH161RpJMPdw23+qPv3Fe6DhvoJHouO3R+
PIwgWo3pRjq5b3g41ht9M6Re3nkTnQjW3TS9gXZ+7F37ajOd/M6U4jijx2NM
FMvV6UQ/9XD//Pwus9Z79W6lk0MiIdF26LNPf6yXAjrZfK/Kwhp95LXC7Yd7
6GQ6MaTGAF2Vx9X4ci+dsKllJw6i9xfWbCzbTyecowKVe9DaxdebaPp0Uie1
02k7euP37ypOJnRitebVMRl0Sm2yf/BxOunl/hgqgZZt8GhNNcP+LNoaV6LF
22Xv/rKkkw0lL8MXoRcOu3WYnKeTb8rLdf/hfvuN6as7XqCTiuyGQ+No7j8y
AUG2dJKwleU1jJ6aqdQotaeTzhuvvbrRTlyJD7qv0Ilh5wfjDvQot2sX1Ql/
76d/oQV9kam3TcKZTo4X5r9vQPfwSQdtc6WTvzXWFj/Qpxf96zZ2p5M5iTTd
anSrQMX2q550MjYwefMr+rgQOzjwBrZ///HiSnStsHNPihedJB6exszA97nY
Qa3Pt+jE5o6Txhd0mYRUSJcPnazxu9jyGa27ZrKX4k8nRx9v7y1Bf1hbBuJ3
6eSGoM6Jee8LaN23/D6dfHXUJvOumhg7uugBnWg/5PGZt7E54yQjiE4iqTIq
8+21fFx5cTYY4+uY9P7S+fErrr/2J4ROhDc8/Drff/9D4jUURiflQrOfy9EO
04b3ux/Rya2k0S1V6L9W1o9aIumE7jQl/h3tWerKro2ik+UiiV7z+UbfFJBa
EUMnCm0aR/rQ9yLicz/F0Ulc2sBtKu7XUkrWx0IWnWyyXrhJFP3oXElldgKd
PPKkH1VFS1Q1NqQm0ckdx1398/GjGEsdjXmG+fJ39ykvdDpj+UxYCu73jXbN
aLTGpXXMB6l0ItF61SMHraOpv+p6On4XUls1gj7ZGL3XIo9OXiv8cz01gu+n
FRosiVLMtymPAONRvI9cP/BiRRmd3Ky1X3ANze62yFlcQSftp2Uyw9Cvsnwq
5r7SiXSAh2st+oth9VRrPZ28/1bpZDzGBq7Ay4ZxvXTSJd230Ow3vucmvU48
6qcTF/7MR+5ofouw84GDdHLWm74iGi2yoeD6jVE6WbdotKkZrVbGl2L5j05O
WpSsOzHOBhueJJokL4NIj55JMprA/qh+93cuYBC1DPNN19CKnPPLz/IzSNvp
Fptw9PDoernnAgzSJK1VWYvWH1icVr6MQYSmZkcn0OndoxojQgySf2DhS8E/
eH41Zu1XE2EQqb+VXfromprwamMxBvmy4pzRJfTmKhdzV3EGqV5KCnzQ4aWm
3VGrGeSmo6xmMPrvR83Lb6UYJDhdfHc0+thbib/t0gySIPbpxxN0Xi7lJk2W
QYwYhZNpaI/U4uC9CgwiyF7d9xHdkvxE9OJ6BjGb/vK+HE3Y/gkBSji+VXuV
a9HURwezv6swyI4FWzu60KeCleCPGoOw3IbkBtEf7wmUCKszSCjXH4FxtM/N
mnrz7QzyNPh6DdckG365vba6ocUgjN3aWQy0rlNEP4swyGWj+h0L0c/s3K4W
azPIjZVdHgLoBRfMOb92MUh9G/3icvTFM+DDt4dBVsw1LhJFV1hILl6/F79/
Yp6XQAce6VrtcJCB52X7QVn06KH/noboMcipw1XN8miDvU83vT6M/heqtAGd
ufPum3pDBuH8+rZbGS2kZbtr5iiDVF2WXaOKdlLXKxc3YRDXnyqlm9F1m5SN
dhxnkMjQR5oa6EjZCWufEwySOdf/UBM9LfljJNmSQfrMRN0BbSaW6/LFikEW
75TetgNduPwxdeg0g7ynPfmujZYQ8Li7xJpBosd36u5C31hgIahynkF2nnn8
eDe6g74j+ugFBtF/erBKB72Ta81aZ1sc/7Lpnj3ohCnay8jLDLLyz84eXTR9
ontLgT2DLE0oqdqLPjtc8q71CoMMXF6XuA9d0vtsL9WJQXalMM7tR6/rvPdN
2plBcp5ziR1A32m5ZLrHlUF63r3+MO+BOv3O8+4MYq9VdvIgOrVc8E/qDQbh
LQi4ewi9uOSP51cvBjE85SGmh7YrqmOO32IQu/x9qfP+mp8XuNwX11ckfKc+
etPrqJUa/gwS8ZXaOu+HaZ4s07sM0rFpg/dh9PhzSwXP+wziFJS7yQD9Ok5a
80MQg/wLtC80REvP7XJ7/5BBzt8kgUfm99v8TO7bUAZRipm6ehQ98+b2ZEE4
gwhzii4Zoc+JJKnlRzDIcEb+dWN0tfOnK3mPGcSrju+ZCXrHj+60nGgGibpR
NXxsfn5qzJHsWFzfdibXSbRIiOyGrHgG4Vt1/OZFtM/YnosZbIwPmU/izugx
/XPP0hIZpPX221pv9Bf+p2tTn2L7V+UCH6PdfeUlnqQxiIucE+cLuqdrn3li
BoPI8ozsrEMf3XXhMTsL1yvw4aNO9AZKyoq4XAbx+CBzloNudV2/JOI9g6yq
Wmmt9BfP50sbKXe/4vzPHUt8iE4t0wf/7wwSEhomGIcWVbD38K1hkBn+zS4p
6PFfaf+86xlEhddGrBideFJlzL2dQb7u3hs7geY5uvnnpVEGKcnnbDP4h/Un
w0jS9jeDPDnpt8cc3S5wzeLCBPY3/kLpHDqv4nWj9T8G2b7w0QMP9AVdjWpL
CpO8lbxrlYSuSzq21IKbSfQMAmVfoXfRXfXN6UyyrKgsPxctVpRXdoyXSdp8
cw+XoSu2bS82EGASxc/0qSH0nRzHaZ1lTEI5t2HwD3qP2kvlbUJM0l7mnzSL
pqX3WCutYJLWSyxpxhS+fzZIxaxZySR8xdSz/GiP56bVK0SZ5KqO2nlB9Fa5
UL6Fq5hkg81HRVH0n4QKwiXBJLpPtr6URGdI8lwbX80kIYw2Xwm0XcyOFz1S
TFIT/vfr/O8VRd1+NkkzSX4VpXkFOklwSK9Yjkky2FWai9FWQbI+ufI4H4e7
4XxoiUUn818oMkmvoWQeHf2IWS0XtpFJvmSVnJzG8R+9xW9xZxOu14XKvol/
8+ftnlBPVSYpiX68awR9dyqXYq3OJAfbLjl0oj0HYxu2ECZ5/un8UCn61PcL
9+r1mOT9kb9SwejV+olF5YeZmJ+ViXfQTWUtf98bMonAQaGV3mijT4fPPDNm
ErOd9XVX0Lq5W7TcLJjkkdvT8SPoDbHcI2KXmaTQKN1kBbpPVHOtgD2TDFPG
KxejnzxyMqNfYZIh10PGPPP9BfeWDDoxiT9Rj/mH8bPsdmV8oSeTFFB0dzWj
qyi8dek3mKSBmnulFn3PU3vREy8mvk9WfKhEM5yzXB/4MEmppt/nIvRfm8eG
lgFMsuZRbMoz9ANXNvN6IJPM3td9nIBee+f5m+hgJnFbbFYUgz769M2axjAm
OZnY8mE+/gdyPvz494hJytNM2QHoWyVf7go/xv3QsCj2n8+Huu+wJZpJojTs
FG+j0381/j4ayyTcL4Qab6D3Tv58cjWeSaJPRZl4o9sYA6YP2UwyxlVR4Id2
Xj6+OD2RSf5qsi7Mt7947cyHqidMIrriq2UIOkmN5jz8FOfjtzQqEq21e6Hi
ohQmufxAXCweffG0WMj+V0xieNCpKxXNfVVa1yadSS5ylBWz0ZHeijN+mUyi
pPoovQD9mbX99KccJjkvu8ulfH7+7WaqO94zSeA7jdJhdMHI6R6LD0zSueN8
31/0ES7bKM9iJtm3nptQcX+8JTxo+Z+ZhKNi5COEbjOPrt78jUm6oh6ZaqGv
2Sb6Ha1mkmd827j3ohd5vNh+tZZJfhUzaw3RmlEFCWkNTOK+nOvveXRkQ/NV
xZ9MMvnmLu8j9BFjcSGpcRzf5IJdU+gS/dij/Mt5CEU+XLwC493mY1chU5iH
jP6N+68Bza+uKEcV4SFr1sQ5/EIbSORO/VnFQ4Q8j5RyTeN7dPBbbJsMD4kI
DVdVRA/dYfRlqPEQqStPt7uhhYptPY8f5SFJujfKls9gvmlsf/IkhIfUmLSm
EA4bzg+WTzSF8ZBvTzte7EPbxVvsWhrBQwJWnX5yBH2d17vdPZqHXBoL8D6H
jqr/LGqQxEM+Tmi3PEDXuhgHzrzmIdVeKxc0o/flObgcbuQhr7PXpdvN4v3/
Eq3Ep5mHeDVzIl3QJlJhy/NbeYiqfr6LF9r6Tm7G2k4ecjEmUTgEfes419D0
AA/Z7NVTn40unLpvlTTLQ1R8pU2m0MWpEmmNXLzkCeN3KHUO3xNWaXNLuHlJ
SPfJEj50Y2l1lBuTl0wfqOATRf+NFP2hv4SXcJvEcW9Dzx16IeOzlJdsv76x
UxvN4IarbwR5yRaB/Jx9aMELVgJrV/KSsCkHzeNoUYlxC1NRXnJf0HHwJFrq
++3UwFW85IL46qDzaHnfFZxiCV7i7GIhZ49W3vZ0/7QkL5nzEc9wRv8PfpEV
BQ==
       "]]},
     Annotation[#, "Charting`Private`Tag$20145#1"]& ]}, {}, {}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{0, 0.03388003135133958},
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  ImagePadding->All,
  Method->{
   "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
    AbsolutePointSize[6], "ScalingFunctions" -> None, 
    "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
        (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
         Part[#, 1]], 
        (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
         Part[#, 2]]}& ), "CopiedValueFunction" -> ({
        (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
         Part[#, 1]], 
        (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
         Part[#, 2]]}& )}},
  PlotRange->
   NCache[{{0, Pi}, {0.03388003135133958, 0.0390584677363801}}, {{
     0, 3.141592653589793}, {0.03388003135133958, 0.0390584677363801}}],
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.05], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{3.7587390563638983`*^9, 3.758741208457192*^9, 
  3.75896827590557*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"pT5f", "=", 
  RowBox[{
   FractionBox["1", "\[Pi]"], 
   RowBox[{"NIntegrate", "[", 
    RowBox[{
     RowBox[{"pT5i", "[", "x", "]"}], ",", 
     RowBox[{"{", 
      RowBox[{"x", ",", "0", ",", "\[Pi]"}], "}"}]}], "]"}]}]}]], "Input",
 CellChangeTimes->{{3.7587412358910837`*^9, 3.7587412380912237`*^9}}],

Cell[BoxData["0.03693476339272421`"], "Output",
 CellChangeTimes->{3.75874123871413*^9, 3.7589682759380627`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"ListPlot", "[", 
  RowBox[{
   RowBox[{"R0", "[", 
    RowBox[{"[", "6", "]"}], "]"}], ",", 
   RowBox[{"PlotRange", "\[Rule]", "All"}]}], "]"}]], "Input",
 CellChangeTimes->{3.7587390656326227`*^9}],

Cell[BoxData[
 GraphicsBox[{{}, {{}, 
    {RGBColor[0.368417, 0.506779, 0.709798], PointSize[0.011000000000000001`],
      AbsoluteThickness[1.6], PointBox[CompressedData["
1:eJw1kQtI01EUxjed2koUC1HbrC0153yU1NQkO1cqMfJRyxTtSbrSnCkMVLRM
UVEa2MMsH5Xt/7+1clhDM8HKrOwxygelPdR0auVjaVrNfK+CuwuXw+Eezvd9
v8s/kiyWmDAYjA3/7v9qPBJ+uuS1QgErXe0uPLZVQ0FdOMNj+DrpmyBdbY1u
1CtA2bBmXyXvFbSp17WkaY3v7cDc/d63laEA7cSV1HWcDqgRdodv5xrnP8Jy
A3dVVYcCkvJugfXaHghYzAzz0Br1tMAu9Z+e1StgYVlMXpr9AIy9GOLtN6fI
vi8w3zW9t0tIwbPOvvghx2/whmKF5P8w7h+GFaDyrwuj4EylJDTKaRTYNbLS
oOMU0fsOaPvdqqVZFOxK0Hm/FIzDTqsBCauEIvoTkOFVKkyopUBe5ifn2E1C
15hNMecVRfz8BK+YY6GBOgqSszJPvXP4BXUv+r0EbJr4+w320QNZ39bQII5t
TJZz9RCdE8wr3kITv1NQZuh8MiKmQRTMPLJ19R+4JUgMOyulif9peMSKuc0t
pMHec1vEHH8GPuylxD3FNMkzC/k7jjavxTTM2RQE1TrPwf3y8APO92iSbx6k
5y82nXtOQ9+Uxi/RdQHol5CpbqVJ3kUQHXYUPeyl4Wm3pbuT0AD18dWnRSM0
yc9Aquqv57L1NOzRKouSLjFQ7rjBzX+aJjyYqJnf325riqFZrCnQXGaiWBzf
JrfAhI8JCvA5aam3xuDzfDTbpcwEzWpCllXZYcLLFKWrbop0XAxKX8uMnHJT
VBTWlhvHw4QfC51okcW6u2BwqPKUfa5gocbCt7oDAkx4mqEUHr/f1w2DnBsu
3XTVDKUqz0aqPDHha44iI9KkFR4Y5otSJCXXzJEhozz/znpMeFsgpceDT8gb
wwnmhYOTlRbIJW0wcHAjJvyXoMMrZDObRRj6ZLVRoYolaPIQO87KF5P/YKMa
zkJDrw+GvyfKbH8=
      "]]}, {}}, {}, {}, {{}, {}}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{0, 0.032636555196225554`},
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  ImagePadding->All,
  Method->{"CoordinatesToolOptions" -> {"DisplayFunction" -> ({
        (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
         Part[#, 1]], 
        (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
         Part[#, 2]]}& ), "CopiedValueFunction" -> ({
        (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
         Part[#, 1]], 
        (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
         Part[#, 2]]}& )}},
  PlotRange->{{0, 3.141592653589793}, {0.03296255473819231, 
    0.03948254557752751}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.05], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{3.758739066234107*^9, 
  3.7589682760441923`*^9},ImageCache->GraphicsData["CompressedBitmap", "\<\
eJzlnHeQVdd5wB8sYBXbkiaxE8VORhPHkpOME/uPlMnE+SsTx844zh+xZMuS
LVRBlq0OaogiUdRQA0RTRRICJFGXuvSlLb0usJRtwC67yzZYWNrJ9/vu+c47
7+19LIknmWRyZ2DfO/d893y9nXPfj/o+1u+eX/d9rP9dfW/4/iN9H+rX/65H
b/inBx+RoaIemUyPfplMpuqGDJ+dfPT/6dWf//yXbj7/nv4pchcvXnQXLlzQ
b3382Pnz552/Mt/yY+fOnQtjvVPGvuvH/LP023dS5n0nmsfaMWzaumfPng1j
fSJYG7s2Ieer+ueLbsOGDe6FF17Qfzt27NA5paWl7uOPP9bPlZWV7tVXX3Uj
RoxwixcvvknBvuSam5vd+PHjdfiTTz5RTFpbW90bb7zhmpqaXHt7u5s8ebLe
Hzt2rDty5IjH8Go+uw8//NB1dnbqEvPmzXPz58/Xz7t27XIvvfSSGzlypFu/
fr2H+aJS/vnnn+t9rpqaGl0Lao8ePerefPNNN2rUKPf222+7lpaWbyrYl5Vw
KOEWFA4fPty99tpriioobNy4MVBsc/bu3XujB9+5c6cOG0bDhg1TEJniJk6c
qKAVFRXulVde0Xks1dHRcaNnUmNjoxs3bpwyAWY1NDSoaPkMGNfWrVvdiy++
qOCbNm3KXJeI5yseA0CeeuopXRUkhwwZAn0qli1btujjAJ09e7bbt2+fe/rp
p/lrBLz//vtuwoQJOh3aV6xYoSxbvXq1O336tN5//vnn9f6MGTOUyDNnztzk
uQ6S0MxUrj179rjy8nJ36tQpN2jQILdq1Sq3bds2xbC+vt6UA2G9/vrrugoX
CIM8K0Mr9LMif2GjSCljEkMZ+vXrp/NZClYDt3nzZldbW8sybuDAgW779u1u
+fLlbujQoe7kyZMGzu0HH3xQHws/kCD6yLjok2IOj9BZUAAdITwBv0YxR63e
eustV1VVpfwZPXq0snnt2rX6KKiB+DVr1riysjL9LGIyw/qKtzwzLLuQnAi7
p7+NEZgwuVhp2rRp3/S3WRA8Dx8+rLchVbSsyN9GMGiXcXfAgAGurq7uJm/v
Bw4cUKUTuWUMBMtBBcxnYAZLly41ECgfM2YMVHmQL6j1IAPhr4KAzBNPPKGP
TRDtpYh+9NFHqkXHjx/v5VcDX2ySiylokWBwo18NRUJpli1bljEQ3AHj5sBQ
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
BsFrlBiny4ViUkZjcyStPjTm9SVy7Usn/DBgAc9hEHkSOVVOM+Q6FRFpKZZM
ugtGJBdgQbeHMfQUtw0h1m0gpcSE6OOnYfFVP3bu/AV3+GiLWrli9l2Pme7w
qa7jWBCjuPRQ5BKzybzJtoVBptX4GpJj/JZt+cETejVouyhNjltEOfmWFA29
XacY8PiZ29wdz813A8VYg1tMwkOO24ffFBIGe/io+KZhKb4pBRYlBheDxTkM
HLvS3SyKfPuQYrep/FgqbKxk1jCpPd7mPl++323aWxd63SlgaeJPu29jCObg
kRZQS2D+vCuMse9rxr6z5924z7Yo+waMgX3tCeyfdWUBkqMHa7CHZK07hhWL
HSfs+3zF/oKw+GfxEQFW2Sfrwb5fDC12W/bVp8LG7Pu6sa+h3c1cWQGM89xL
A+uOfcaKtPugjCeB3EL3UWZx4t0mEd2J7796vzv8sXNxuwXvU95KHvafwj/z
Jf1G5w3yMQrbiyLa2uY5tk7miQ+gJWXelSiAQyQhCd3UIs0GuZV8uzQHJJ2z
riT7QYQx/tqKtquDA8Td8922GMkvaLHi6MgniGnicixy0GbAD14WFtdrBoK7
xGmxOpEPZ2ZnI0hnuU+s52KbgEiKJcB6LjIfshViGBUpHh3XjJuWgJGDRpq4
/UZefrRcsWKFRUvyJXIgi5Z4ZokZ5n0p1mhVgCgel4URDmyjpy3ZYsaa+2YT
vmWhj/tBwANfHecUdMeF1GShazUE+ya53oYThEcughCf7777bg2TcA9OUNUh
03HjxvWKcCCCQhZt51wcuBNnY3yWByQ4fFk1lIjtK2hNaUm0kBRj8IgMzXId
ItmoUaN6glwcgvxWRr4kwIdYS5sCQ/AHAiwXRGvZSYAqMlam0keg84TMyQdZ
XYQZEmruwxXhQGptkINBEn6RDooP7fLZg12leb+d/sCRo6Z2QAUFIQeUsGwa
xxR4cznGYNiS0lhxZqd9oNqKOHsOfLbK3MZAx2C70/rYiZE6iCUWvI9KkNCk
3S8ky9Dl2bE9uKX4/tf8/bPnLrp5i1e7zdv2JPf/Jbn/B54DxNYxn213vxg4
2T086FVXtnlHznNsHsn6ncMX6byfPfSGe3d2Weq8k6fPuqHvrHe3PjrB3Tlo
itu8ryEVr6a2Tvfe9MVuWemmHLyMrl07d7iK/QldV/qxM4Lr7kONrv7EqQTm
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
71MvF8KfqsF+yym+n+nxH3VfbD4=\
\>"]]
}, Open  ]],

Cell[BoxData[{
 RowBox[{
  RowBox[{"pT6c", "=", 
   RowBox[{"Delete", "[", 
    RowBox[{
     RowBox[{"DeleteCases", "[", 
      RowBox[{
       RowBox[{"R0", "[", 
        RowBox[{"[", "6", "]"}], "]"}], ",", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"x_", ",", "y_"}], "}"}], "/;", 
        RowBox[{"y", " ", "<", " ", "0.034"}]}]}], "]"}], ",", "8"}], "]"}]}],
   ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"pT6i", "=", 
   RowBox[{"Interpolation", "[", "pT6c", "]"}]}], ";"}]}], "Input",
 CellChangeTimes->{{3.758741253521698*^9, 3.758741281152532*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Plot", "[", 
  RowBox[{
   RowBox[{"pT6i", "[", "x", "]"}], ",", 
   RowBox[{"{", 
    RowBox[{"x", ",", "0", ",", "\[Pi]"}], "}"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.758739074749745*^9, 3.758739078367517*^9}, {
  3.7587408810163717`*^9, 3.758740885572538*^9}, {3.7587412839693527`*^9, 
  3.758741295216885*^9}}],

Cell[BoxData[
 GraphicsBox[{{{}, {}, 
    TagBox[
     {RGBColor[0.368417, 0.506779, 0.709798], AbsoluteThickness[1.6], Opacity[
      1.], LineBox[CompressedData["
1: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
XYTeKXKRnX1XXV+hMwoNC18oc5G0IGftD2hxCRWneFUu0iPTOvsVPVo7/jVQ
k4v0bR7Y+QcdvfvaDSttLvKlqVBSTDwe/q5x61x+jIvoRBj98UGbupmEcBti
PHtWzYWgS2s1ybwRF1GIzuaLQ8cEzD7qOclFmJvspXPQejMeBz6d5SKKGvFK
g+hMI9OpLEsukh92WGUGvSYDEp+f4yJ29kFq3KuxnhcoHBE2XOT4vadaUugz
hc2p9y9ykde7u/S2oMvWfDpx056LWFk/MtyOVnaLY1xz5CLumfZWeui4Wq/X
dpe4CKNV4roReur8drNr01xEz296FWMtxpMjQy7P4n6Uf3YKox8vFlrjOM9F
nlbcjN+M1kwf+X2ei0qU+0+MHEF7TCeaGvNQienb8oLHaK6AZaYqIlRyr14+
ftO6eDjWPL9DQYxKsnUFqjXQ8dv6xeVXU8mO/XL9+9A6tV9+SUtRyX/3dX7Y
oP3WuJ9esQl9odn6GZo348+pf+pUkjHl9lxSOh5MaNXbhzWpRNCSrb4VnWqU
L9a/g0p6ji9OBfTBmaif7VpUYm82uN0EHbT76KkqPSp5dKhgUShaoO69ScYJ
/Pymy+vn0BYyzzRfmlCJ0uj7tkXrMf9uD0VTTlPJYg1Dr5VoQwmnJpY5fr4k
z3QLOsJ6vUmwNZXw6h+MN0OLzT446ehKJZZ+S6Ry0LqtB949dKOSRQ9S8ovQ
zl+4V37woJLA10XqP9ClD7x+LLpJJRfP+WZ0oV2kHffG36WSr+rsvOUbsD48
soml96nkW12cmDi6bKiLOhxIJcuKdxzZgJbKMcvbHkolEZlnNTTRB2NFxS3C
qcTp06Xh3WjX23XX/SOoJE9tm/sh9FPr0PpXkVRyaN3ZX8boikOHVWqjqCT2
52iXKXpakTdsNppKam67brZAS68qHpGKo5KdW3L2nEe7tcMLh6dUUqH9ktcB
nVgyzfMwkUq8eWjZl9A/Xry5kJtMJbfuH9e5gt54TX7dohdUEua2i8sDfex0
r/eWV1SyVee6ihfac1dis2E6lajdGjtyC12zeHUUO4tKklbMEH+0N2vJ8u0f
qaQgfq16GDrVt9Th7Ccq8ZQ4XvkQXWfrU37nM5U03zpxJhItpzJ3p+YLlbDf
Ms/GoBu/9lMcKqhkvm1UPhlNT0s+Hf6DSsKfOrBS0NvCLd+/r6ISRt4uoRdo
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
       "]]},
     Annotation[#, "Charting`Private`Tag$20243#1"]& ]}, {}, {}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{0, 0.03443751931765319},
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  ImagePadding->All,
  Method->{
   "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
    AbsolutePointSize[6], "ScalingFunctions" -> None, 
    "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
        (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
         Part[#, 1]], 
        (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
         Part[#, 2]]}& ), "CopiedValueFunction" -> ({
        (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
         Part[#, 1]], 
        (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
         Part[#, 2]]}& )}},
  PlotRange->
   NCache[{{0, Pi}, {0.03443751931765319, 0.03948540379178929}}, {{
     0, 3.141592653589793}, {0.03443751931765319, 0.03948540379178929}}],
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.05], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{3.7587390788449183`*^9, 3.758740886831647*^9, 
  3.758741295539702*^9, 
  3.7589682761128607`*^9},ImageCache->GraphicsData["CompressedBitmap", "\<\
eJzlnHl0V9dxxx8gvK9ZmjpJG/f0xG6a9NTpcrI13ds0bdN0sePEjuM4NjGQ
2JjFmNXsm9lt9n3H7ELsiwRCLALELkASEkgsAgFilQCJ5XY+8+Y+nvT7PTtp
/mlP3zna7u/OvXNn5s58Z+59+t4rHVq2eOOVDq1efeXJ77R75a2WrV5t/+Q/
tmknTc2aBEGTlkEQFD0Z8LuTX+2bPq34Zn98zO//oj+auZs3bzp7guZp2r5q
bbdv347anknT75lYvzt37jSgvXXrVtTvD6ytvr4+ZV7obJ7g8ZDN7+qPh93F
ixfduHHjXP/+/d2HH36oQ16+fNm9//77rrq62l29etVNmjRJPx89erQ7deqU
TfWgO3nypJs1a5arq6vT+ZYvX+5WrlypvxcWFrrBgwe7AQMGuPz8fKN5SFlZ
vHixfs5z4sQJnQu2Kysr3QcffOAGDhzoJk+e7C5duvRFJXtEuZ8zZ45+NGjQ
INevXz83YsQIZRUWdu7cqcNt3rw56lNUVPSUkR84cECbPUe9e/dWEuniJkyY
oKRHjhxxQ4cO1X5Mde3atadMSOfPn3djxoxRISCsc+fOqY74HTKePXv2uPfe
e0/JCwoKGsr5ETdt2jQ3fvx4V15ersxv3LhR15yXl+euX7/upk+f7vr27auf
L1iwQLm8cePG0yY2ZoFpuvIcOnTIHT582NXW1rru3bu7TZs2ub1797ouXbq4
qqqqp41xpD1y5EidhUckqiJiZphlAczIT7gTMQde5GizZcuW2p+pkBV0u3bt
Us3LNO6dd95x+/fvdxs2bHC9evVyNTU1npyP27Rpo+ItLi5WFWBQtItBKOdd
u3ZVo4MF2JGFh+SPKufYxdixY11FRYXKZ9iwYSr2rVu36lCsplu3bm7Lli1u
x44dKghRTfBYKPrPm/VfuXLFm2jwJf1+jw7D7MeOHVPBsABRfjP7GHGjdC+z
jh07ujNnzjxtI5aWlqotiDYCT4JBo1i/J7HO7OxsT8J6Ro0aBa9Gcq+2IVmR
mpLATKdOnXTYUA4Zyujs2bPVNkR0GTYb/LJVeOiCbQgHT9lsmAemkJOTE3gS
REC7dxDYv+jsizFm9u3bp8vlQd0sW7ZB0NSGQNXM5B+MVJTRSN7shKysLJZj
8r43UpUIUSkxInaKSCsaHSuRnaM2joUwu9B9lNDphlWYY3RTp051S5Ys8b7Q
BG5/hSTsEnQlm8stW7ZM1yMSfMrkjaNZuHCh6kGs3FPJoGqCPHTBkcjkcd7Y
CzJgNBGGgFXymd/hYhRP20TMz9bCU82dO9dT0cSK/IPPXbNmTSMRoyg87fHj
xxuIGJ2fPn060i8KYk+HIm7uMjMzXatWrZR9zF/MKHjKPmNZOLajR48qXVzO
27ZtUxofrPDOMpYXGlOLnaiPFHln2Ijs3bZt2+oSUb5wbdw2Y8luyJAhMe5C
IU+ZMiUSMi5h+/btXpt4ibfffhs7iUjohlEgfJjGCZWVlXkhs7PwbXBRUlLi
l4M7ZDn+wdGsXbu2kZCxFJTnYn4Dpb777ruqAB7sXFbdzOZD5qwWHUhoetoE
wQ5lsXw1NmFhS4WDPfDwuViWFy2OvU+fPq5Hjx5oIcOaly5d6iZOnKgTiSd9
2gZbsWKFy83N1YGIpu3atSOCe2mxF5ASD/piXlnhF+1jKIj13kMgolWrVvnF
sbnmz5+vc4oz8YsjkrEIHqLczJkzo8Xhb7AzBMAeRT3iHtIIGnfDX39oo65f
v163psyvVi3hIxpVrF4VTuAnUtNXRvciE4iivgUykaqnggcUje1ifRavPBXy
Z0u1aNHirqCbqzPDFxCm8MNij7Zj7lHdtG/fXo0A1eLyxUC8tIFOuG1kRhQc
Pnw4H3tpE5ZQAHEXj9OhQwfiTjObWGKHig5qFio+K9qqaJ/VEaL5eTeohG4e
B2KqUH2LhXysyDPUtlkSyxRx+7iBNaBjJsNh4gtE2t71sffXrVtHt8BbJ21s
5kWLFuHx/Z7H/PAuLnLHzXWHQs7oyFFCTLRMLIZAAUOoRiQWTYGtzps3TzmK
dlqGogtmRsGyPq9F0AKWxP5gFpFzNAt2gUNgFmaTWaNZoAOt8nX27NnHk4Wo
5v/Pv97n+/bddTDxzz/nFSJBbegkkbrIBpuPdfm0DYER7d69m6nCCSUQLFu7
2f3krffc8691dn2HT3UH9u9zhQf2u/3ifjOsJ/4L9kKKX63tvv+DtP+bePn/
JgPt1wQ32KSh0bLnLaOQv/h+vwT1Irdu7WrXd+RM92r3Oe7ZtpPcwAnL3PaC
fa6stEQiDEE/pADFCCbSv+61NjY9fiTexq71bfdZGy4J19q4Hx4u3kYOBsiO
0+KKia7xfvggnGa8jVgBjmtMS94S74eTatxGPMPDNm4D6cbHs1jUoB8u37La
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
Uw==\
\>"]]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"pT6f", "=", 
  RowBox[{
   FractionBox["1", "\[Pi]"], 
   RowBox[{"NIntegrate", "[", 
    RowBox[{
     RowBox[{"pT6i", "[", "x", "]"}], ",", 
     RowBox[{"{", 
      RowBox[{"x", ",", "0", ",", "\[Pi]"}], "}"}]}], "]"}]}]}]], "Input",
 CellChangeTimes->{{3.758740794386961*^9, 3.7587408109467907`*^9}, {
  3.7587413103947906`*^9, 3.7587413143272943`*^9}}],

Cell[BoxData["0.03758240317077947`"], "Output",
 CellChangeTimes->{{3.75874080603047*^9, 3.7587408115351477`*^9}, 
   3.758741314832943*^9, 3.758968276154204*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"ListPlot", "[", 
  RowBox[{
   RowBox[{"Transpose", "[", 
    RowBox[{"{", 
     RowBox[{"pT", ",", 
      RowBox[{"{", 
       RowBox[{
       "pT1f", ",", "pT2f", ",", "pT3f", ",", "pT4f", ",", "pT5f", ",", 
        "pT6f"}], "}"}]}], "}"}], "]"}], ",", 
   RowBox[{"AxesLabel", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"Style", "[", 
       RowBox[{
       "\"\<\!\(\*SubscriptBox[\(p\), \(T\)]\) [GeV]\>\"", ",", "25", ",", 
        "Black"}], "]"}], ",", 
      RowBox[{"Style", "[", 
       RowBox[{
       "\"\<\!\(\*SubscriptBox[\(n\), \
\(\[Psi]'\)]\)/\!\(\*SubscriptBox[\(n\), \(J/\[Psi]\)]\)\>\"", ",", "25", ",",
         "Black"}], "]"}]}], "}"}]}], ",", 
   RowBox[{"AxesStyle", "\[Rule]", 
    RowBox[{"Directive", "[", 
     RowBox[{
      RowBox[{"FontSize", "\[Rule]", "15"}], ",", 
      RowBox[{"Thickness", "\[Rule]", "0.004"}], ",", 
      RowBox[{"FontFamily", "\[Rule]", "\"\<Helvetica\>\""}], ",", "Black"}], 
     "]"}]}], ",", 
   RowBox[{"BaseStyle", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"FontSize", "\[Rule]", "14"}], "}"}]}], ",", 
   RowBox[{"AspectRatio", "\[Rule]", "0.85"}], ",", 
   RowBox[{"PlotStyle", "\[Rule]", 
    RowBox[{"PointSize", "[", "0.03", "]"}]}]}], "]"}]], "Input",
 CellChangeTimes->{{3.75874132289205*^9, 3.758741357550829*^9}, {
  3.7589683191046553`*^9, 3.758968385020372*^9}, {3.7589684154634333`*^9, 
  3.758968453512471*^9}}],

Cell[BoxData[
 GraphicsBox[{{}, {{}, 
    {RGBColor[0.368417, 0.506779, 0.709798], PointSize[0.03], 
     AbsoluteThickness[1.6], 
     StyleBox[
      PointBox[{{2., 0.03367591024736415}, {5., 0.03390925527849605}, {10., 
       0.03491130985349676}, {15., 0.03605250542974066}, {20., 
       0.03693476339272421}, {25., 0.03758240317077947}}],
      FontSize->14]}, {}}, {}, {}, {{}, {}}},
  AspectRatio->0.85,
  Axes->{True, True},
  AxesLabel->{
    FormBox[
     StyleBox["\"\\!\\(\\*SubscriptBox[\\(p\\), \\(T\\)]\\) [GeV]\"", 25, 
      GrayLevel[0], StripOnInput -> False], TraditionalForm], 
    FormBox[
     StyleBox[
     "\"\\!\\(\\*SubscriptBox[\\(n\\), \
\\(\[Psi]'\\)]\\)/\\!\\(\\*SubscriptBox[\\(n\\), \\(J/\[Psi]\\)]\\)\"", 25, 
      GrayLevel[0], StripOnInput -> False], TraditionalForm]},
  AxesOrigin->{0, 0.033480585601193394`},
  AxesStyle->Directive[
   FontSize -> 15, Thickness -> 0.004, FontFamily -> "Helvetica", 
    GrayLevel[0]],
  BaseStyle->{FontSize -> 14},
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  ImagePadding->All,
  ImageSize->{598.828125, Automatic},
  Method->{"CoordinatesToolOptions" -> {"DisplayFunction" -> ({
        (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
         Part[#, 1]], 
        (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
         Part[#, 2]]}& ), "CopiedValueFunction" -> ({
        (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
         Part[#, 1]], 
        (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
         Part[#, 2]]}& )}},
  PlotRange->{{0, 25.}, {0.03367591024736415, 0.03758240317077947}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.05], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{
  3.758741358288892*^9, 3.758968276225131*^9, {3.758968337076189*^9, 
   3.758968361149523*^9}, {3.758968419759016*^9, 3.7589684540243177`*^9}}]
}, Open  ]]
}, Open  ]]
}, Open  ]]
},
WindowSize->{1280, 694},
WindowMargins->{{0, Automatic}, {0, 20}},
FrontEndVersion->"11.0 for Linux x86 (64-bit) (September 21, 2016)",
StyleDefinitions->"Default.nb"
]
(* End of Notebook Content *)

(* Internal cache information *)
(*CellTagsOutline
CellTagsIndex->{}
*)
(*CellTagsIndex
CellTagsIndex->{}
*)
(*NotebookFileOutline
Notebook[{
Cell[558, 20, 240, 5, 31, "Input"],
Cell[CellGroupData[{
Cell[823, 29, 207, 3, 64, "Section"],
Cell[1033, 34, 17342, 501, 983, "Input"]
}, Closed]],
Cell[CellGroupData[{
Cell[18412, 540, 267, 4, 50, "Section"],
Cell[18682, 546, 2009, 60, 312, "Input"],
Cell[20694, 608, 1712, 44, 81, "Input"],
Cell[CellGroupData[{
Cell[22431, 656, 101, 1, 43, "Subsection"],
Cell[22535, 659, 2736, 81, 195, "Input"],
Cell[25274, 742, 5589, 131, 204, "Input"]
}, Closed]],
Cell[CellGroupData[{
Cell[30900, 878, 175, 2, 35, "Subsection"],
Cell[CellGroupData[{
Cell[31100, 884, 101, 1, 34, "Subsubsection"],
Cell[31204, 887, 1680, 44, 95, "Input"],
Cell[32887, 933, 5664, 147, 332, "Input"]
}, Open  ]],
Cell[CellGroupData[{
Cell[38588, 1085, 156, 2, 34, "Subsubsection"],
Cell[38747, 1089, 11363, 260, 527, "Input"],
Cell[CellGroupData[{
Cell[50135, 1353, 1373, 36, 50, "Input"],
Cell[51511, 1391, 1219, 27, 70, "Output"]
}, Open  ]],
Cell[52745, 1421, 2167, 55, 157, "Input"]
}, Open  ]]
}, Closed]],
Cell[CellGroupData[{
Cell[54961, 1482, 139, 2, 35, "Subsection"],
Cell[55103, 1486, 5575, 114, 210, "Input"],
Cell[60681, 1602, 6043, 127, 245, "Input"]
}, Open  ]],
Cell[CellGroupData[{
Cell[66761, 1734, 210, 3, 43, "Subsection"],
Cell[CellGroupData[{
Cell[66996, 1741, 739, 18, 31, "Input"],
Cell[67738, 1761, 173, 2, 70, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[67948, 1768, 1007, 25, 52, "Input"],
Cell[68958, 1795, 150, 3, 31, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[69145, 1803, 2536, 62, 164, "Input"],
Cell[71684, 1867, 175, 4, 31, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[71896, 1876, 2090, 51, 92, "Input"],
Cell[73989, 1929, 151, 3, 31, "Output"]
}, Open  ]]
}, Closed]],
Cell[CellGroupData[{
Cell[74189, 1938, 260, 3, 35, "Subsection"],
Cell[CellGroupData[{
Cell[74474, 1945, 354, 8, 31, "Input"],
Cell[74831, 1955, 3537, 103, 79, "Output"]
}, Open  ]],
Cell[78383, 2061, 629, 10, 31, "Input"],
Cell[79015, 2073, 7570, 186, 350, "Input"],
Cell[86588, 2261, 220, 3, 132, "Input"],
Cell[86811, 2266, 8995, 223, 470, "Input"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[95855, 2495, 166, 2, 64, "Section"],
Cell[CellGroupData[{
Cell[96046, 2501, 98, 1, 44, "Subsection"],
Cell[96147, 2504, 2221, 44, 75, "Input"],
Cell[98371, 2550, 2169, 43, 75, "Input"],
Cell[100543, 2595, 2221, 44, 75, "Input"],
Cell[102767, 2641, 2214, 44, 75, "Input"],
Cell[CellGroupData[{
Cell[105006, 2689, 354, 10, 48, "Input"],
Cell[105363, 2701, 7690, 140, 232, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[113090, 2846, 402, 11, 48, "Input"],
Cell[113495, 2859, 6509, 122, 251, "Output"]
}, Open  ]],
Cell[120019, 2984, 246, 6, 54, "Input"],
Cell[120268, 2992, 412, 9, 73, "Input"],
Cell[120683, 3003, 136, 3, 32, "Input"],
Cell[120822, 3008, 14097, 281, 442, "Input"],
Cell[134922, 3291, 135, 2, 32, "Input"]
}, Closed]],
Cell[CellGroupData[{
Cell[135094, 3298, 244, 3, 36, "Subsection"],
Cell[CellGroupData[{
Cell[135363, 3305, 96, 1, 35, "Subsubsection"],
Cell[135462, 3308, 6607, 164, 369, "Input"],
Cell[142072, 3474, 246, 6, 54, "Input"],
Cell[142321, 3482, 412, 9, 73, "Input"],
Cell[142736, 3493, 14405, 289, 442, "Input"]
}, Closed]],
Cell[CellGroupData[{
Cell[157178, 3787, 96, 1, 29, "Subsubsection"],
Cell[157277, 3790, 450, 11, 75, "Input"],
Cell[157730, 3803, 497, 11, 75, "Input"]
}, Open  ]]
}, Closed]]
}, Closed]],
Cell[CellGroupData[{
Cell[158288, 3821, 190, 3, 50, "Section"],
Cell[CellGroupData[{
Cell[158503, 3828, 152, 2, 43, "Subsection"],
Cell[158658, 3832, 58606, 1463, 2509, "Input"]
}, Closed]],
Cell[CellGroupData[{
Cell[217301, 5300, 152, 2, 35, "Subsection"],
Cell[217456, 5304, 2415, 59, 264, "Input"],
Cell[219874, 5365, 2342, 58, 264, "Input"],
Cell[222219, 5425, 2344, 58, 264, "Input"],
Cell[224566, 5485, 2396, 59, 264, "Input"],
Cell[226965, 5546, 2398, 59, 264, "Input"],
Cell[229366, 5607, 2396, 59, 264, "Input"]
}, Closed]],
Cell[CellGroupData[{
Cell[231799, 5671, 157, 2, 35, "Subsection"],
Cell[231959, 5675, 592, 15, 32, "Input"],
Cell[CellGroupData[{
Cell[232576, 5694, 3451, 87, 138, "Input"],
Cell[236030, 5783, 210224, 3463, 236, "Output"]
}, Open  ]]
}, Closed]],
Cell[CellGroupData[{
Cell[446303, 9252, 113, 1, 35, "Subsection"],
Cell[446419, 9255, 354, 8, 31, "Input"],
Cell[446776, 9265, 700, 17, 152, "Input"],
Cell[447479, 9284, 3221, 103, 152, "Input"],
Cell[450703, 9389, 6111, 199, 152, "Input"]
}, Open  ]],
Cell[CellGroupData[{
Cell[456851, 9593, 252, 3, 44, "Subsection"],
Cell[457106, 9598, 437, 13, 54, "Input"],
Cell[457546, 9613, 2498, 70, 186, "Input"],
Cell[460047, 9685, 3413, 78, 75, "Input"],
Cell[463463, 9765, 2236, 62, 96, "Input"],
Cell[465702, 9829, 469, 14, 54, "Input"],
Cell[CellGroupData[{
Cell[466196, 9847, 1056, 17, 32, "Input"],
Cell[467255, 9866, 2730, 56, 240, "Output"]
}, Open  ]],
Cell[470000, 9925, 486, 14, 54, "Input"],
Cell[CellGroupData[{
Cell[470511, 9943, 388, 8, 32, "Input"],
Cell[470902, 9953, 32688, 549, 227, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[503627, 10507, 377, 10, 50, "Input"],
Cell[504007, 10519, 138, 2, 32, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[504182, 10526, 372, 8, 32, "Input"],
Cell[504557, 10536, 2566, 54, 236, "Output"]
}, Open  ]],
Cell[507138, 10593, 536, 15, 54, "Input"],
Cell[CellGroupData[{
Cell[507699, 10612, 291, 7, 32, "Input"],
Cell[507993, 10621, 27410, 463, 227, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[535440, 11089, 328, 9, 50, "Input"],
Cell[535771, 11100, 139, 2, 32, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[535947, 11107, 221, 6, 32, "Input"],
Cell[536171, 11115, 14557, 252, 244, 2370, 51, "CachedBoxData", "BoxData", \
"Output"]
}, Open  ]],
Cell[550743, 11370, 505, 15, 54, "Input"],
Cell[CellGroupData[{
Cell[551273, 11389, 290, 7, 32, "Input"],
Cell[551566, 11398, 45630, 764, 227, 31305, 527, "CachedBoxData", "BoxData", \
"Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[597233, 12167, 326, 9, 50, "Input"],
Cell[597562, 12178, 110, 1, 32, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[597709, 12184, 221, 6, 32, "Input"],
Cell[597933, 12192, 2450, 52, 240, "Output"]
}, Open  ]],
Cell[600398, 12247, 690, 21, 54, "Input"],
Cell[CellGroupData[{
Cell[601113, 12272, 342, 8, 32, "Input"],
Cell[601458, 12282, 21442, 367, 231, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[622937, 12654, 326, 9, 50, "Input"],
Cell[623266, 12665, 115, 1, 32, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[623418, 12671, 223, 6, 32, "Input"],
Cell[623644, 12679, 2448, 52, 240, "Output"]
}, Open  ]],
Cell[626107, 12734, 502, 15, 54, "Input"],
Cell[CellGroupData[{
Cell[626634, 12753, 267, 7, 32, "Input"],
Cell[626904, 12762, 23610, 402, 231, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[650551, 13169, 330, 9, 50, "Input"],
Cell[650884, 13180, 112, 1, 32, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[651033, 13186, 223, 6, 32, "Input"],
Cell[651259, 13194, 14193, 246, 240, 2388, 51, "CachedBoxData", "BoxData", \
"Output"]
}, Open  ]],
Cell[665467, 13443, 579, 17, 54, "Input"],
Cell[CellGroupData[{
Cell[666071, 13464, 343, 8, 32, "Input"],
Cell[666417, 13474, 31618, 534, 231, 19971, 341, "CachedBoxData", "BoxData", \
"Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[698072, 14013, 381, 10, 50, "Input"],
Cell[698456, 14025, 162, 2, 32, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[698655, 14032, 1430, 37, 79, "Input"],
Cell[700088, 14071, 2209, 53, 458, "Output"]
}, Open  ]]
}, Open  ]]
}, Open  ]]
}
]
*)

