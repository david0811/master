(* Content-type: application/vnd.wolfram.mathematica *)

(*** Wolfram Notebook File ***)
(* http://www.wolfram.com/nb *)

(* CreatedBy='Mathematica 11.0' *)

(*CacheID: 234*)
(* Internal cache information:
NotebookFileLineBreakTest
NotebookFileLineBreakTest
NotebookDataPosition[       158,          7]
NotebookDataLength[    639787,      13330]
NotebookOptionsPosition[    631017,      13049]
NotebookOutlinePosition[    631375,      13065]
CellTagsIndexPosition[    631332,      13062]
WindowFrame->Normal*)

(* Beginning of Notebook Content *)
Notebook[{
Cell[BoxData[
 RowBox[{
  RowBox[{"SetDirectory", "[", 
   RowBox[{"NotebookDirectory", "[", "]"}], "]"}], ";"}]], "Input",
 CellChangeTimes->{{3.7491538644493732`*^9, 3.749153865833027*^9}, {
  3.749850941905223*^9, 3.749850942924405*^9}}],

Cell[CellGroupData[{

Cell["4 loop running coupling", "Section",
 CellChangeTimes->{{3.733038025331724*^9, 3.733038035264956*^9}, {
  3.7330493983743973`*^9, 3.733049402685856*^9}, {3.73312956042422*^9, 
  3.733129564816101*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", " ", 
   RowBox[{
    RowBox[{
     RowBox[{"form", " ", "hep"}], "-", 
     RowBox[{"ph", " ", "9703284"}]}], ",", " ", "vermaseren", ",", " ", 
    "larin", ",", " ", "Ritbergen"}], " ", "*)"}], "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{"\[CapitalLambda]QCD", "=", "0.2145"}], ";"}], " ", 
   "\[IndentingNewLine]", 
   RowBox[{"(*", " ", 
    RowBox[{
     RowBox[{"so", " ", "that", " ", "for", " ", "nF"}], "=", 
     RowBox[{
      RowBox[{"5", " ", "we", " ", "get", " ", "alpha_s", 
       RowBox[{"(", 
        RowBox[{"mz", "=", "91.188"}], ")"}]}], "=", 
      RowBox[{
       RowBox[{"0.1185", " ", 
        RowBox[{"(", 
         RowBox[{"PDG", " ", "value"}], ")"}], " ", "\[IndentingNewLine]", 
        "note", " ", "that", " ", "pdg", " ", "also", " ", "quotes", " ", 
        "\[Lambda]qcd"}], "=", 
       RowBox[{
        RowBox[{"0.214", " ", "for", " ", "nf"}], "=", 
        RowBox[{
        "5", " ", "everything", " ", "seems", " ", "consistent"}]}]}]}]}], 
    "*)"}], "\[IndentingNewLine]", "\[IndentingNewLine]", 
   RowBox[{"(*", "QCD", "*)"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"Nc", "=", "3."}], ";", 
    RowBox[{"CA", "=", "Nc"}], ";", " ", 
    RowBox[{"nF", "=", "3"}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"CF", "=", 
     RowBox[{
      RowBox[{"(", 
       RowBox[{
        SuperscriptBox["Nc", "2"], "-", "1"}], ")"}], "/", 
      RowBox[{"(", 
       RowBox[{"2", " ", "Nc"}], ")"}]}]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{"(*", 
    RowBox[{
    "coeft", " ", "of", " ", "the", " ", "renormalization", " ", "group", " ",
      "equations"}], "*)"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"\[Beta]0", "[", "Nf_", "]"}], "=", 
     RowBox[{
      RowBox[{"(", 
       RowBox[{
        RowBox[{
         RowBox[{"-", "11"}], "Nc"}], "+", 
        RowBox[{"2", "Nf"}]}], ")"}], "/", "12"}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"\[Beta]1", "[", "Nf_", "]"}], "=", 
     RowBox[{
      RowBox[{"(", 
       RowBox[{
        RowBox[{
         RowBox[{"-", "68"}], 
         SuperscriptBox["Nc", "2"]}], "+", 
        RowBox[{"20", "Nc", " ", "Nf"}], "+", 
        RowBox[{"12", "CF", " ", "Nf"}]}], ")"}], "/", 
      RowBox[{"(", 
       RowBox[{"3", " ", "32"}], ")"}]}]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"\[Beta]2", "[", "Nf_", "]"}], "=", 
     RowBox[{"-", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{"(", 
         RowBox[{"2857", "-", 
          RowBox[{
           RowBox[{"(", 
            RowBox[{"5033", "/", "9"}], ")"}], "Nf"}], "+", 
          RowBox[{
           RowBox[{"(", 
            RowBox[{"325", "/", "27"}], ")"}], " ", 
           SuperscriptBox["Nf", "2"]}]}], ")"}], "/", "128"}], ")"}]}]}], 
    ";"}], " ", 
   RowBox[{"(*", 
    RowBox[{
     RowBox[{"for", " ", "Nc"}], "=", 
     RowBox[{"3", " ", "only"}]}], "*)"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"\[Beta]3", "[", "Nf_", "]"}], "=", 
     RowBox[{
      RowBox[{"(", 
       RowBox[{
        RowBox[{"(", 
         RowBox[{"-", "1"}], ")"}], "/", "256"}], ")"}], 
      RowBox[{"(", 
       RowBox[{
        RowBox[{"(", 
         RowBox[{
          RowBox[{"149753", "/", "6"}], "+", 
          RowBox[{"3564", " ", 
           RowBox[{"Zeta", "[", "3", "]"}]}]}], ")"}], "-", 
        RowBox[{
         RowBox[{"(", 
          RowBox[{
           RowBox[{"1078361", "/", "162"}], "+", 
           RowBox[{
            RowBox[{"(", 
             RowBox[{"6508", "/", "27"}], ")"}], " ", 
            RowBox[{"Zeta", "[", "3", "]"}]}]}], ")"}], "Nf"}], "+", 
        RowBox[{
         RowBox[{"(", 
          RowBox[{
           RowBox[{"50065", "/", "162"}], "+", 
           RowBox[{
            RowBox[{"(", 
             RowBox[{"6472", "/", "81"}], ")"}], 
            RowBox[{"Zeta", "[", "3", "]"}]}]}], ")"}], 
         SuperscriptBox["Nf", "2"]}], "+", 
        RowBox[{
         RowBox[{"(", 
          RowBox[{"1093", "/", "729"}], ")"}], " ", 
         SuperscriptBox["Nf", "3"]}]}], ")"}]}]}], ";"}], 
   RowBox[{"(*", 
    RowBox[{
     RowBox[{"for", " ", "Nc"}], "=", 
     RowBox[{"3", " ", "only"}]}], "*)"}], "\[IndentingNewLine]", 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"\[Gamma]0", "[", "Nf_", "]"}], "=", 
     RowBox[{
      FractionBox["3", "4"], " ", "CF"}]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"\[Gamma]1", "[", "Nf_", "]"}], "=", 
     RowBox[{
      RowBox[{"(", 
       RowBox[{"1", "/", "16"}], ")"}], 
      RowBox[{"(", 
       RowBox[{
        RowBox[{"202", "/", "3"}], "-", 
        RowBox[{
         RowBox[{"(", 
          RowBox[{"20", "/", "9"}], ")"}], "Nf"}]}], ")"}]}]}], ";"}], 
   RowBox[{"(*", 
    RowBox[{
     RowBox[{"for", " ", "Nc"}], "=", 
     RowBox[{"3", " ", "only"}]}], "*)"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"\[Gamma]2", "[", "Nf_", "]"}], "=", 
     RowBox[{
      RowBox[{"(", 
       RowBox[{"1", "/", "64"}], ")"}], 
      RowBox[{"(", 
       RowBox[{"1249", "+", 
        RowBox[{
         RowBox[{"(", 
          RowBox[{
           RowBox[{"-", 
            RowBox[{"(", 
             RowBox[{"2216", "/", "27"}], ")"}]}], "-", 
           RowBox[{
            RowBox[{"(", 
             RowBox[{"160", "/", "3"}], ")"}], " ", 
            RowBox[{"Zeta", "[", "3", "]"}]}]}], ")"}], "Nf"}], "-", 
        RowBox[{
         RowBox[{"(", 
          RowBox[{"140", "/", "81"}], ")"}], " ", 
         SuperscriptBox["Nf", "2"]}]}], ")"}]}]}], ";"}], 
   RowBox[{"(*", 
    RowBox[{
     RowBox[{"for", " ", "Nc"}], "=", 
     RowBox[{"3", " ", "only"}]}], "*)"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"\[Gamma]3", "[", "Nf_", "]"}], "=", 
     RowBox[{
      RowBox[{"(", 
       RowBox[{"1", "/", "256"}], ")"}], 
      RowBox[{"(", 
       RowBox[{
        RowBox[{"4603055", "/", "162"}], "+", 
        RowBox[{
         RowBox[{"(", 
          RowBox[{"135680", "/", "27"}], ")"}], " ", 
         RowBox[{"Zeta", "[", "3", "]"}]}], "-", 
        RowBox[{"8800", 
         RowBox[{"Zeta", "[", "5", "]"}]}], "+", 
        RowBox[{
         RowBox[{"(", 
          RowBox[{
           RowBox[{"-", 
            RowBox[{"(", 
             RowBox[{"91723", "/", "27"}], ")"}]}], "-", 
           RowBox[{
            RowBox[{"(", 
             RowBox[{"34192", "/", "9"}], ")"}], " ", 
            RowBox[{"Zeta", "[", "3", "]"}]}], "+", 
           RowBox[{"880", " ", 
            RowBox[{"Zeta", "[", "4", "]"}]}], "+", 
           RowBox[{
            RowBox[{"(", 
             RowBox[{"18400", "/", "9"}], ")"}], 
            RowBox[{"Zeta", "[", "5", "]"}]}]}], ")"}], "Nf"}], "+", 
        RowBox[{
         RowBox[{"(", 
          RowBox[{
           RowBox[{"5242", "/", "243"}], "+", 
           RowBox[{
            RowBox[{"(", 
             RowBox[{"800", "/", "9"}], ")"}], " ", 
            RowBox[{"Zeta", "[", "3", "]"}]}], "-", 
           RowBox[{
            RowBox[{"(", 
             RowBox[{"160", "/", "3"}], ")"}], 
            RowBox[{"Zeta", "[", "4", "]"}]}]}], ")"}], 
         SuperscriptBox["Nf", "2"]}], "+", 
        RowBox[{
         RowBox[{"(", 
          RowBox[{
           RowBox[{"-", 
            RowBox[{"(", 
             RowBox[{"332", "/", "243"}], ")"}]}], "+", 
           RowBox[{
            RowBox[{"(", 
             RowBox[{"64", "/", "27"}], ")"}], " ", 
            RowBox[{"Zeta", "[", "3", "]"}]}]}], ")"}], 
         SuperscriptBox["Nf", "3"]}]}], ")"}]}]}], ";"}], 
   "\[IndentingNewLine]", "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"b0", "[", "Nf_", "]"}], "=", 
     RowBox[{"-", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{"(", 
         RowBox[{"8", 
          RowBox[{"\[Beta]0", "[", "Nf", "]"}]}], ")"}], "/", 
        RowBox[{"(", 
         RowBox[{"2", 
          SuperscriptBox[
           RowBox[{"(", 
            RowBox[{"4", "\[Pi]"}], ")"}], "2"]}], ")"}]}], ")"}]}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"b1", "[", "Nf_", "]"}], "=", 
     RowBox[{"-", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{"(", 
         RowBox[{"32", " ", 
          RowBox[{"\[Beta]1", "[", "Nf", "]"}]}], ")"}], "/", 
        RowBox[{"(", 
         RowBox[{"2", 
          SuperscriptBox[
           RowBox[{"(", 
            RowBox[{"4", "\[Pi]"}], ")"}], "2"]}], ")"}]}], ")"}]}]}], ";"}], 
   "\[IndentingNewLine]", "\[IndentingNewLine]", 
   RowBox[{"(*", " ", 
    RowBox[{
     RowBox[{
     "Initial", " ", "conditions", " ", "of", " ", "the", " ", "RG", " ", 
      "equations"}], ",", " ", 
     RowBox[{
     "\[Mu]", " ", "in", " ", "units", " ", "of", " ", 
      "\[CapitalLambda]_MSbar"}]}], " ", "*)"}], "\[IndentingNewLine]", 
   "\[IndentingNewLine]", 
   RowBox[{"(*", 
    RowBox[{
     RowBox[{
      RowBox[{"gf", "[", "\[Mu]_", "]"}], "=", 
      RowBox[{"1", "/", 
       RowBox[{"\[Sqrt]", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"2", " ", "b0", " ", 
           RowBox[{"Log", "[", "\[Mu]", "]"}]}], "+", 
          RowBox[{"b1", " ", 
           RowBox[{
            RowBox[{"Log", "[", 
             RowBox[{"2", " ", 
              RowBox[{"Log", "[", "\[Mu]", "]"}]}], "]"}], "/", "b0"}]}]}], 
         ")"}]}]}]}], ";"}], "*)"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"gf", "[", "t_", "]"}], "=", 
     RowBox[{"1", "/", 
      RowBox[{"(", 
       RowBox[{"\[Sqrt]", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{
           RowBox[{"b0", "[", "Nf", "]"}], " ", "t"}], "+", 
          RowBox[{
           RowBox[{"b1", "[", "Nf", "]"}], " ", 
           RowBox[{
            RowBox[{"Log", "[", "t", "]"}], "/", 
            RowBox[{"b0", "[", "Nf", "]"}]}]}]}], ")"}]}], ")"}]}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"asf", "[", 
      RowBox[{"t_", ",", "Nf_"}], "]"}], "=", 
     RowBox[{
      RowBox[{
       RowBox[{"(", 
        RowBox[{"-", "1"}], ")"}], "/", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"\[Beta]0", "[", "Nf", "]"}], " ", "t"}], ")"}]}], "-", 
      RowBox[{
       RowBox[{"(", 
        RowBox[{
         RowBox[{"\[Beta]1", "[", "Nf", "]"}], " ", 
         RowBox[{"Log", "[", "t", "]"}]}], ")"}], "/", 
       RowBox[{"(", 
        RowBox[{
         SuperscriptBox[
          RowBox[{"\[Beta]0", "[", "Nf", "]"}], "3"], " ", 
         SuperscriptBox["t", "2"]}], ")"}]}], "-", 
      RowBox[{
       RowBox[{"(", " ", 
        RowBox[{
         RowBox[{
          SuperscriptBox[
           RowBox[{"\[Beta]1", "[", "Nf", "]"}], "2"], 
          RowBox[{"(", 
           RowBox[{
            SuperscriptBox[
             RowBox[{"Log", "[", "t", "]"}], "2"], "-", 
            RowBox[{"Log", "[", "t", "]"}], "-", "1"}], ")"}]}], "+", 
         RowBox[{
          RowBox[{"\[Beta]2", "[", "Nf", "]"}], " ", 
          RowBox[{"\[Beta]0", "[", "Nf", "]"}]}]}], ")"}], "/", 
       RowBox[{"(", 
        RowBox[{
         SuperscriptBox[
          RowBox[{"\[Beta]0", "[", "Nf", "]"}], "5"], 
         SuperscriptBox["t", "3"]}], ")"}]}], "+", 
      RowBox[{
       RowBox[{"(", 
        RowBox[{"1", "/", 
         RowBox[{"(", 
          RowBox[{
           SuperscriptBox[
            RowBox[{"\[Beta]0", "[", "Nf", "]"}], "7"], 
           SuperscriptBox["t", "4"]}], ")"}]}], ")"}], 
       RowBox[{"(", " ", 
        RowBox[{
         RowBox[{
          SuperscriptBox[
           RowBox[{"\[Beta]1", "[", "Nf", "]"}], "3"], 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"-", 
             SuperscriptBox[
              RowBox[{"Log", "[", "t", "]"}], "3"]}], "+", 
            RowBox[{
             FractionBox["5", "2"], 
             SuperscriptBox[
              RowBox[{"Log", "[", "t", "]"}], "2"]}], "+", 
            RowBox[{"2", 
             RowBox[{"Log", "[", "t", "]"}]}], "-", 
            FractionBox["1", "2"]}], ")"}]}], "-", 
         RowBox[{"3", " ", 
          RowBox[{"\[Beta]1", "[", "Nf", "]"}], " ", 
          RowBox[{"\[Beta]2", "[", "Nf", "]"}], " ", 
          RowBox[{"\[Beta]0", "[", "Nf", "]"}], " ", 
          RowBox[{"Log", "[", "t", "]"}]}], "+", 
         RowBox[{
          FractionBox["1", "2"], 
          RowBox[{"\[Beta]3", "[", "Nf", "]"}], " ", 
          SuperscriptBox[
           RowBox[{"\[Beta]0", "[", "Nf", "]"}], "2"]}]}], ")"}]}]}]}], ";"}],
    "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"\[Mu]0", "=", "2"}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"t0", "=", 
     RowBox[{"Log", "[", 
      SuperscriptBox["\[Mu]0", "2"], "]"}]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"tf", "=", 
     RowBox[{"10000", " ", "t0"}]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{"(*", 
    RowBox[{
    "solution", " ", "of", " ", "the", " ", "RG", " ", "equation", " ", "to", 
     " ", "3", " ", "loop"}], "*)"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"mcharm", "=", "1.275"}], ";"}], 
   RowBox[{"(*", 
    RowBox[{"m", 
     RowBox[{"(", "m", ")"}], " ", "in", " ", "msbar"}], "*)"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"mbottom", "=", "4.18"}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"nf", "[", "t_", "]"}], "=", 
     RowBox[{"If", "[", 
      RowBox[{
       RowBox[{"t", "<", 
        RowBox[{"Log", "[", 
         RowBox[{
          SuperscriptBox["mcharm", "2"], "/", 
          SuperscriptBox["\[CapitalLambda]QCD", "2"]}], "]"}]}], ",", "3", 
       ",", 
       RowBox[{"If", "[", 
        RowBox[{
         RowBox[{"t", "<", 
          RowBox[{"Log", "[", 
           RowBox[{
            SuperscriptBox["mbottom", "2"], "/", 
            SuperscriptBox["\[CapitalLambda]QCD", "2"]}], "]"}]}], ",", "4", 
         ",", "5"}], "]"}]}], "]"}]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"sg4", "=", 
     RowBox[{"Quiet", "[", 
      RowBox[{"NDSolve", "[", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{
          RowBox[{
           RowBox[{"D", "[", 
            RowBox[{
             RowBox[{"as", "[", "t", "]"}], ",", "t"}], "]"}], "\[Equal]", 
           RowBox[{
            RowBox[{
             RowBox[{"+", 
              RowBox[{"\[Beta]0", "[", 
               RowBox[{"nf", "[", "t", "]"}], "]"}]}], " ", 
             SuperscriptBox[
              RowBox[{"as", "[", "t", "]"}], "2"]}], "+", 
            RowBox[{
             RowBox[{"\[Beta]1", "[", 
              RowBox[{"nf", "[", "t", "]"}], "]"}], " ", 
             SuperscriptBox[
              RowBox[{"as", "[", "t", "]"}], "3"]}], "+", " ", 
            RowBox[{
             RowBox[{"\[Beta]2", "[", 
              RowBox[{"nf", "[", "t", "]"}], "]"}], " ", 
             SuperscriptBox[
              RowBox[{"as", "[", "t", "]"}], "4"]}], "+", " ", 
            RowBox[{
             RowBox[{"\[Beta]3", "[", 
              RowBox[{"nf", "[", "t", "]"}], "]"}], " ", 
             SuperscriptBox[
              RowBox[{"as", "[", "t", "]"}], "5"]}]}]}], ",", 
          RowBox[{
           RowBox[{"as", "[", "tf", "]"}], "\[Equal]", 
           RowBox[{"asf", "[", 
            RowBox[{"tf", ",", 
             RowBox[{"nf", "[", "tf", "]"}]}], "]"}]}]}], "}"}], ",", "as", 
        ",", 
        RowBox[{"{", 
         RowBox[{"t", ",", "t0", ",", "tf"}], "}"}], ",", 
        RowBox[{"AccuracyGoal", "\[Rule]", "14"}], ",", 
        RowBox[{"WorkingPrecision", "\[Rule]", "32"}], ",", 
        RowBox[{"MaxSteps", "\[Rule]", "10000000"}]}], "]"}], "]"}]}], ";"}], 
   "\[IndentingNewLine]", "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"a4t", "[", "t_", "]"}], "=", " ", 
     RowBox[{"Part", "[", 
      RowBox[{
       RowBox[{"Evaluate", "[", 
        RowBox[{
         RowBox[{"as", "[", "t", "]"}], "/.", "sg4"}], "]"}], ",", "1"}], 
      "]"}]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"g4", "[", "\[Mu]_", "]"}], "=", 
     RowBox[{"2", " ", "\[Pi]", " ", 
      RowBox[{"\[Sqrt]", 
       RowBox[{"Part", "[", 
        RowBox[{
         RowBox[{"Evaluate", "[", 
          RowBox[{
           RowBox[{"as", "[", 
            RowBox[{"Log", "[", 
             RowBox[{
              SuperscriptBox["\[Mu]", "2"], "/", 
              SuperscriptBox["\[CapitalLambda]QCD", "2"]}], "]"}], "]"}], "/.",
            "sg4"}], "]"}], ",", "1"}], "]"}]}]}]}], ";"}], " "}]}]], "Input",\

 CellChangeTimes->{{3.722603722510141*^9, 3.72260372344028*^9}, {
   3.722604106111541*^9, 3.722604106838868*^9}, {3.722758514249189*^9, 
   3.72275851575694*^9}, {3.722759338268147*^9, 3.7227593794887047`*^9}, 
   3.722941350741787*^9, 3.725272685733177*^9, {3.7257977704878893`*^9, 
   3.725797773117529*^9}, {3.728106253645876*^9, 3.728106267238208*^9}, {
   3.728106981843108*^9, 3.72810698836581*^9}, {3.728107035483563*^9, 
   3.728107083980345*^9}, {3.728107191150432*^9, 3.7281072205275097`*^9}, {
   3.7289260533327723`*^9, 3.728926057125319*^9}, {3.728926987957735*^9, 
   3.728927012966138*^9}, {3.733038068527727*^9, 3.733038137498209*^9}, {
   3.733038320612577*^9, 3.7330383210148697`*^9}, {3.7330540354197693`*^9, 
   3.7330540356914186`*^9}, {3.733129571506283*^9, 3.73312957588968*^9}}]
}, Closed]],

Cell[CellGroupData[{

Cell["Functions", "Section",
 CellChangeTimes->{{3.721037028308626*^9, 3.72103703898452*^9}, {
   3.725797990517199*^9, 3.725797994993998*^9}, {3.746174948979287*^9, 
   3.746174951979061*^9}, 3.7461750131323338`*^9, {3.748450442925918*^9, 
   3.748450454117791*^9}}],

Cell[BoxData[{
 RowBox[{
  RowBox[{"R", "=", "20000"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Mc", "=", "1.4691897661033038`"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Mb", "=", "4.882"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"kfinal", "=", 
    RowBox[{"{", 
     RowBox[{"0.6856700331366409`", ",", 
      RowBox[{"-", "0.31661256911352553`"}]}], "}"}]}], ";"}], 
  RowBox[{"(*", 
   RowBox[{"100", "k", " ", "run"}], "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"kfinalu", "=", 
   RowBox[{"{", 
    RowBox[{"0.9065399936425322`", ",", 
     RowBox[{"-", "0.36858869824209667`"}]}], "}"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"kfinall", "=", 
   RowBox[{"{", 
    RowBox[{"0.4648000726307495`", ",", 
     RowBox[{"-", "0.2646364399849544`"}]}], "}"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"\[Alpha]cont", "=", 
    RowBox[{"{", 
     RowBox[{"0.5129548374487685`", ",", "0.002435119807500435`"}], "}"}]}], 
   ";"}], 
  RowBox[{"(*", 
   RowBox[{"10", "k", " ", "run"}], "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"\[Sigma]cont", "=", 
   RowBox[{"{", 
    RowBox[{"0.16999653850906107`", ",", "0.000838106749908169`"}], "}"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"ccont", "=", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"-", "0.1611740456186636`"}], ",", "0.002474788649682089`"}], 
    "}"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"conv", "=", "0.197327"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"ReVsbVac", "=", 
   RowBox[{"8", "/", "10"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Tlim", "=", 
   RowBox[{"1584", "/", "10000"}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{"w", "=", "0.66"}], ";"}], "\n", 
 RowBox[{
  RowBox[{"Jpsimass", "=", "3.0969"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Psi2smass", "=", "3.6632"}], ";"}]}], "Input",
 CellChangeTimes->{{3.754205518606386*^9, 3.7542055189640083`*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"v", "[", 
    RowBox[{"\[Phi]_", ",", "pT_", ",", "Jpsi_", ",", "Psi2s_"}], "]"}], ":=", 
   SqrtBox[
    RowBox[{"1", "-", 
     FractionBox[
      RowBox[{
       RowBox[{"(", 
        RowBox[{"1", "-", 
         SuperscriptBox["w", "2"]}], ")"}], 
       SuperscriptBox[
        RowBox[{"(", 
         RowBox[{
          RowBox[{"Jpsi", " ", "Jpsimass"}], " ", "+", " ", 
          RowBox[{"Psi2s", " ", "Psi2smass"}]}], ")"}], "2"]}], 
      RowBox[{
       SuperscriptBox[
        RowBox[{"(", 
         RowBox[{
          RowBox[{"Jpsi", " ", "Jpsimass"}], " ", "+", " ", 
          RowBox[{"Psi2s", " ", "Psi2smass"}]}], ")"}], "2"], "-", 
       RowBox[{"2", 
        SqrtBox[
         RowBox[{
          SuperscriptBox[
           RowBox[{"(", 
            RowBox[{
             RowBox[{"Jpsi", " ", "Jpsimass"}], " ", "+", " ", 
             RowBox[{"Psi2s", " ", "Psi2smass"}]}], ")"}], "2"], "+", 
          SuperscriptBox["pT", "2"]}]], "w", " ", "pT", " ", 
        RowBox[{"Cos", "[", "\[Phi]", "]"}]}], "+", 
       RowBox[{
        SuperscriptBox["w", "2"], 
        SuperscriptBox["pT", "2"], 
        SuperscriptBox[
         RowBox[{"Cos", "[", "\[Phi]", "]"}], "2"]}], "+", 
       SuperscriptBox["pT", "2"]}]]}]]}], ";"}]], "Input",
 CellChangeTimes->{{3.7540527382967653`*^9, 3.754052779961562*^9}, {
  3.754052845197363*^9, 3.7540529113806143`*^9}, {3.754052959020022*^9, 
  3.754052959269107*^9}, {3.754053344365959*^9, 3.754053348103874*^9}, {
  3.7541319760677233`*^9, 3.754131988792005*^9}, {3.754132020282806*^9, 
  3.7541320366896677`*^9}, {3.754132066952615*^9, 3.754132069804583*^9}, {
  3.754132163995335*^9, 3.754132169345207*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"ang", "=", 
  RowBox[{"Table", "[", 
   RowBox[{"i", ",", 
    RowBox[{"{", 
     RowBox[{"i", ",", "0", ",", "\[Pi]", ",", 
      RowBox[{"\[Pi]", "/", "50"}]}], "}"}]}], "]"}]}]], "Input",
 CellChangeTimes->{{3.754205565159699*^9, 3.7542055836700783`*^9}, {
   3.7542060604339323`*^9, 3.7542060621952*^9}, 3.754206094674316*^9}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"0", ",", 
   FractionBox["\[Pi]", "50"], ",", 
   FractionBox["\[Pi]", "25"], ",", 
   FractionBox[
    RowBox[{"3", " ", "\[Pi]"}], "50"], ",", 
   FractionBox[
    RowBox[{"2", " ", "\[Pi]"}], "25"], ",", 
   FractionBox["\[Pi]", "10"], ",", 
   FractionBox[
    RowBox[{"3", " ", "\[Pi]"}], "25"], ",", 
   FractionBox[
    RowBox[{"7", " ", "\[Pi]"}], "50"], ",", 
   FractionBox[
    RowBox[{"4", " ", "\[Pi]"}], "25"], ",", 
   FractionBox[
    RowBox[{"9", " ", "\[Pi]"}], "50"], ",", 
   FractionBox["\[Pi]", "5"], ",", 
   FractionBox[
    RowBox[{"11", " ", "\[Pi]"}], "50"], ",", 
   FractionBox[
    RowBox[{"6", " ", "\[Pi]"}], "25"], ",", 
   FractionBox[
    RowBox[{"13", " ", "\[Pi]"}], "50"], ",", 
   FractionBox[
    RowBox[{"7", " ", "\[Pi]"}], "25"], ",", 
   FractionBox[
    RowBox[{"3", " ", "\[Pi]"}], "10"], ",", 
   FractionBox[
    RowBox[{"8", " ", "\[Pi]"}], "25"], ",", 
   FractionBox[
    RowBox[{"17", " ", "\[Pi]"}], "50"], ",", 
   FractionBox[
    RowBox[{"9", " ", "\[Pi]"}], "25"], ",", 
   FractionBox[
    RowBox[{"19", " ", "\[Pi]"}], "50"], ",", 
   FractionBox[
    RowBox[{"2", " ", "\[Pi]"}], "5"], ",", 
   FractionBox[
    RowBox[{"21", " ", "\[Pi]"}], "50"], ",", 
   FractionBox[
    RowBox[{"11", " ", "\[Pi]"}], "25"], ",", 
   FractionBox[
    RowBox[{"23", " ", "\[Pi]"}], "50"], ",", 
   FractionBox[
    RowBox[{"12", " ", "\[Pi]"}], "25"], ",", 
   FractionBox["\[Pi]", "2"], ",", 
   FractionBox[
    RowBox[{"13", " ", "\[Pi]"}], "25"], ",", 
   FractionBox[
    RowBox[{"27", " ", "\[Pi]"}], "50"], ",", 
   FractionBox[
    RowBox[{"14", " ", "\[Pi]"}], "25"], ",", 
   FractionBox[
    RowBox[{"29", " ", "\[Pi]"}], "50"], ",", 
   FractionBox[
    RowBox[{"3", " ", "\[Pi]"}], "5"], ",", 
   FractionBox[
    RowBox[{"31", " ", "\[Pi]"}], "50"], ",", 
   FractionBox[
    RowBox[{"16", " ", "\[Pi]"}], "25"], ",", 
   FractionBox[
    RowBox[{"33", " ", "\[Pi]"}], "50"], ",", 
   FractionBox[
    RowBox[{"17", " ", "\[Pi]"}], "25"], ",", 
   FractionBox[
    RowBox[{"7", " ", "\[Pi]"}], "10"], ",", 
   FractionBox[
    RowBox[{"18", " ", "\[Pi]"}], "25"], ",", 
   FractionBox[
    RowBox[{"37", " ", "\[Pi]"}], "50"], ",", 
   FractionBox[
    RowBox[{"19", " ", "\[Pi]"}], "25"], ",", 
   FractionBox[
    RowBox[{"39", " ", "\[Pi]"}], "50"], ",", 
   FractionBox[
    RowBox[{"4", " ", "\[Pi]"}], "5"], ",", 
   FractionBox[
    RowBox[{"41", " ", "\[Pi]"}], "50"], ",", 
   FractionBox[
    RowBox[{"21", " ", "\[Pi]"}], "25"], ",", 
   FractionBox[
    RowBox[{"43", " ", "\[Pi]"}], "50"], ",", 
   FractionBox[
    RowBox[{"22", " ", "\[Pi]"}], "25"], ",", 
   FractionBox[
    RowBox[{"9", " ", "\[Pi]"}], "10"], ",", 
   FractionBox[
    RowBox[{"23", " ", "\[Pi]"}], "25"], ",", 
   FractionBox[
    RowBox[{"47", " ", "\[Pi]"}], "50"], ",", 
   FractionBox[
    RowBox[{"24", " ", "\[Pi]"}], "25"], ",", 
   FractionBox[
    RowBox[{"49", " ", "\[Pi]"}], "50"], ",", "\[Pi]"}], "}"}]], "Output",
 CellChangeTimes->{{3.754205580526496*^9, 3.754205584066511*^9}, 
   3.7542060631688747`*^9, 3.7542060950139923`*^9, 3.7542065417533503`*^9, 
   3.754206675223402*^9, 3.755246612703364*^9, 3.755247474307499*^9, 
   3.7553685836555557`*^9, 3.755368712492278*^9, 3.755368849106421*^9, 
   3.755433031044141*^9, 3.7570913504683867`*^9, 3.7574429034443502`*^9, 
   3.757804641277463*^9, 3.757807658172935*^9, 3.757807839072074*^9, 
   3.758977434692173*^9, 3.759058199437129*^9, 3.759058417841412*^9, 
   3.759757159600732*^9, 3.759857390925118*^9, 3.7600204533316393`*^9, 
   3.760113866017836*^9, 3.760794318721751*^9, 3.760962451621245*^9, 
   3.761239042678924*^9, 3.762090160853291*^9, 3.7620902466680098`*^9, 
   3.7621743421686897`*^9, 3.762791250400279*^9, 3.7630312602828293`*^9, 
   3.763207281870446*^9, 3.763556265983572*^9, 3.763562518306594*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell["Self energies", "Subsection",
 CellChangeTimes->{{3.748450427476173*^9, 3.748450462407011*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"mDcalmu", "[", 
    RowBox[{"T_", ",", "\[Mu]_", ",", "c_", ",", "d_"}], "]"}], ":=", 
   RowBox[{"SetPrecision", "[", 
    RowBox[{
     RowBox[{"Re", "[", 
      RowBox[{
       RowBox[{
        RowBox[{"Sqrt", "[", 
         RowBox[{
          FractionBox["Nc", "3"], "+", 
          FractionBox["nF", "6"], "+", 
          RowBox[{
           FractionBox["nF", 
            RowBox[{"2", 
             SuperscriptBox["\[Pi]", "2"]}]], 
           FractionBox[
            SuperscriptBox[
             RowBox[{"(", 
              RowBox[{"\[Mu]", "/", "3"}], ")"}], "2"], 
            SuperscriptBox["T", "2"]]}]}], "]"}], 
        RowBox[{"g4", "[", 
         RowBox[{"2", "\[Pi]", 
          SqrtBox[
           RowBox[{
            SuperscriptBox["T", "2"], "+", 
            FractionBox[
             SuperscriptBox["\[Mu]", "2"], 
             SuperscriptBox["\[Pi]", "2"]]}]]}], "]"}], "T"}], "+", 
       RowBox[{
        FractionBox["1", 
         RowBox[{"4", "\[Pi]"}]], "Nc", " ", 
        SuperscriptBox[
         RowBox[{"g4", "[", 
          RowBox[{"2", "\[Pi]", 
           SqrtBox[
            RowBox[{
             SuperscriptBox["T", "2"], "+", 
             FractionBox[
              SuperscriptBox["\[Mu]", "2"], 
              SuperscriptBox["\[Pi]", "2"]]}]]}], "]"}], "2"], " ", "T", " ", 
        
        RowBox[{"Log", "[", 
         FractionBox[
          RowBox[{"Sqrt", "[", 
           RowBox[{
            FractionBox["Nc", "3"], "+", 
            FractionBox["nF", "6"]}], "]"}], 
          RowBox[{"g4", "[", 
           RowBox[{"2", "\[Pi]", 
            SqrtBox[
             RowBox[{
              SuperscriptBox["T", "2"], "+", 
              FractionBox[
               SuperscriptBox["\[Mu]", "2"], 
               SuperscriptBox["\[Pi]", "2"]]}]]}], "]"}]], "]"}]}], "+", 
       RowBox[{"c", " ", 
        SuperscriptBox[
         RowBox[{"g4", "[", 
          RowBox[{"2", "\[Pi]", 
           SqrtBox[
            RowBox[{
             SuperscriptBox["T", "2"], "+", 
             FractionBox[
              SuperscriptBox["\[Mu]", "2"], 
              SuperscriptBox["\[Pi]", "2"]]}]]}], "]"}], "2"], " ", "T"}], 
       "+", 
       RowBox[{"d", " ", 
        SuperscriptBox[
         RowBox[{"g4", "[", 
          RowBox[{"2", "\[Pi]", 
           SqrtBox[
            RowBox[{
             SuperscriptBox["T", "2"], "+", 
             FractionBox[
              SuperscriptBox["\[Mu]", "2"], 
              SuperscriptBox["\[Pi]", "2"]]}]]}], "]"}], "3"], "T"}]}], " ", 
      "]"}], ",", "30"}], "]"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.74845188564533*^9, 3.7484518857590313`*^9}, {
  3.749836672252359*^9, 3.749836673028408*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"\[CapitalPi]per", "[", 
    RowBox[{
    "\[Theta]_", ",", "\[Phi]_", ",", "\[Beta]_", ",", "mD_", ",", "u_"}], 
    "]"}], ":=", 
   RowBox[{"SetPrecision", "[", 
    RowBox[{
     RowBox[{
      FractionBox[
       SuperscriptBox["mD", "2"], "2"], 
      RowBox[{"(", 
       RowBox[{
        FractionBox[
         RowBox[{"2", "-", 
          RowBox[{"2", 
           SuperscriptBox["u", "2"]}], "-", 
          RowBox[{
           SuperscriptBox["u", "4"], 
           SuperscriptBox[
            RowBox[{"Sin", "[", "\[Theta]", "]"}], "2"], 
           SuperscriptBox[
            RowBox[{"Cos", "[", 
             RowBox[{"\[Phi]", "-", "\[Beta]"}], "]"}], "2"], 
           RowBox[{"(", 
            RowBox[{"1", "-", 
             RowBox[{
              SuperscriptBox[
               RowBox[{"Cos", "[", 
                RowBox[{"\[Phi]", "-", "\[Beta]"}], "]"}], "2"], 
              SuperscriptBox[
               RowBox[{"Sin", "[", "\[Theta]", "]"}], "2"]}]}], ")"}]}]}], 
         SuperscriptBox[
          RowBox[{"(", 
           RowBox[{"1", "-", 
            SuperscriptBox["u", "2"], "+", 
            RowBox[{
             SuperscriptBox["u", "2"], 
             SuperscriptBox[
              RowBox[{"Cos", "[", 
               RowBox[{"\[Phi]", "-", "\[Beta]"}], "]"}], "2"], 
             SuperscriptBox[
              RowBox[{"Sin", "[", "\[Theta]", "]"}], "2"]}]}], ")"}], "2"]], 
        "-", 
        RowBox[{
         FractionBox[
          RowBox[{
           RowBox[{"(", 
            RowBox[{"2", "+", 
             SuperscriptBox["u", "2"], "-", 
             RowBox[{
              SuperscriptBox["u", "2"], 
              SuperscriptBox[
               RowBox[{"Sin", "[", "\[Theta]", "]"}], "2"], 
              SuperscriptBox[
               RowBox[{"Cos", "[", 
                RowBox[{"\[Phi]", "-", "\[Beta]"}], "]"}], "2"]}]}], ")"}], 
           RowBox[{"(", 
            RowBox[{"1", "-", 
             SuperscriptBox["u", "2"]}], ")"}], "u", " ", 
           RowBox[{"Cos", "[", 
            RowBox[{"\[Phi]", "-", "\[Beta]"}], "]"}], 
           RowBox[{"Sin", "[", "\[Theta]", "]"}]}], 
          RowBox[{"2", 
           SuperscriptBox[
            RowBox[{"(", 
             RowBox[{"1", "-", 
              SuperscriptBox["u", "2"], "+", 
              RowBox[{
               SuperscriptBox["u", "2"], 
               SuperscriptBox[
                RowBox[{"Cos", "[", 
                 RowBox[{"\[Phi]", "-", "\[Beta]"}], "]"}], "2"], 
               SuperscriptBox[
                RowBox[{"Sin", "[", "\[Theta]", "]"}], "2"]}]}], ")"}], 
            RowBox[{"5", "/", "2"}]]}]], 
         RowBox[{"Log", "[", 
          FractionBox[
           RowBox[{
            RowBox[{"u", " ", 
             RowBox[{"Cos", "[", 
              RowBox[{"\[Phi]", "-", "\[Beta]"}], "]"}], " ", 
             RowBox[{"Sin", "[", "\[Theta]", "]"}]}], "+", 
            SqrtBox[
             RowBox[{"1", "-", 
              SuperscriptBox["u", "2"], "+", 
              RowBox[{
               SuperscriptBox["u", "2"], 
               SuperscriptBox[
                RowBox[{"Cos", "[", 
                 RowBox[{"\[Phi]", "-", "\[Beta]"}], "]"}], "2"], 
               SuperscriptBox[
                RowBox[{"Sin", "[", "\[Theta]", "]"}], "2"]}]}]]}], 
           RowBox[{
            RowBox[{"u", " ", 
             RowBox[{"Cos", "[", 
              RowBox[{"\[Phi]", "-", "\[Beta]"}], "]"}], 
             RowBox[{"Sin", "[", "\[Theta]", "]"}]}], "-", 
            SqrtBox[
             RowBox[{"1", "-", 
              SuperscriptBox["u", "2"], "+", 
              RowBox[{
               SuperscriptBox["u", "2"], 
               SuperscriptBox[
                RowBox[{"Cos", "[", 
                 RowBox[{"\[Phi]", "-", "\[Beta]"}], "]"}], "2"], 
               SuperscriptBox[
                RowBox[{"Sin", "[", "\[Theta]", "]"}], "2"]}]}]]}]], 
          "]"}]}]}], ")"}]}], ",", "30"}], "]"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.7453831005455914`*^9, 3.745383138661728*^9}, {
   3.745383312376183*^9, 3.74538334437337*^9}, {3.7453836903426113`*^9, 
   3.745383700509996*^9}, {3.745383888049996*^9, 3.7453838920497932`*^9}, {
   3.745384456942053*^9, 3.745384462717682*^9}, {3.745385041376384*^9, 
   3.7453850447607927`*^9}, {3.745385110730214*^9, 3.745385155644156*^9}, {
   3.745385388111433*^9, 3.745385411593401*^9}, {3.7453875595914288`*^9, 
   3.745387568075132*^9}, 3.745389177212406*^9, {3.7453901984733753`*^9, 
   3.745390202887982*^9}, {3.745390355427387*^9, 3.745390388219348*^9}, {
   3.7453977096680326`*^9, 3.745397725914731*^9}, {3.745397755948641*^9, 
   3.745397756084126*^9}, {3.7453980995991077`*^9, 3.745398113870977*^9}, {
   3.745399156102378*^9, 3.745399178169222*^9}, {3.745399342881937*^9, 
   3.745399361912752*^9}, {3.745401796965457*^9, 3.7454018195641527`*^9}, {
   3.745401971762494*^9, 3.745401971914714*^9}, {3.745404041771303*^9, 
   3.745404151470154*^9}, {3.745404384229478*^9, 3.745404389436048*^9}, {
   3.7454045122009163`*^9, 3.7454045237036552`*^9}, {3.745404614275045*^9, 
   3.7454046169752293`*^9}, {3.745404890358831*^9, 3.745404914872879*^9}, {
   3.7454740207870693`*^9, 3.745474024498345*^9}, {3.745477052572796*^9, 
   3.745477084925427*^9}, {3.745583208377653*^9, 3.74558321316575*^9}, {
   3.7461777044683733`*^9, 3.746177794182501*^9}, {3.746360152439383*^9, 
   3.746360194120142*^9}, 3.747138517796213*^9, {3.747139364508655*^9, 
   3.7471393719485703`*^9}, {3.747462249636409*^9, 3.747462256108732*^9}, 
   3.758976293479493*^9}]
}, Closed]],

Cell[CellGroupData[{

Cell["IIT paper", "Subsection",
 CellChangeTimes->{{3.7484504686955633`*^9, 3.7484504994467287`*^9}, {
   3.748450538599163*^9, 3.748450542903339*^9}, 3.7484506025366297`*^9}],

Cell[CellGroupData[{

Cell["Potentials", "Subsubsection",
 CellChangeTimes->{{3.748450854391089*^9, 3.748450864793952*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"ReVcp", "[", 
     RowBox[{"r_", ",", "mD_", ",", "u_", ",", "\[Alpha]_", ",", "c_"}], 
     "]"}], ":=", 
    RowBox[{"c", "-", 
     RowBox[{"\[Alpha]", " ", "mD"}], "-", 
     FractionBox["\[Alpha]", "r"], "+", 
     RowBox[{
      FractionBox["\[Alpha]", 
       RowBox[{"2", "\[Pi]"}]], " ", 
      RowBox[{"NIntegrate", "[", 
       RowBox[{
        RowBox[{
         RowBox[{"Sin", "[", "\[Theta]", "]"}], 
         RowBox[{"Re", "[", 
          SqrtBox[
           RowBox[{"\[CapitalPi]per", "[", 
            RowBox[{
            "\[Theta]", ",", "\[Phi]", ",", "0", ",", "mD", ",", "u"}], 
            "]"}]], "]"}], 
         RowBox[{"Exp", "[", 
          RowBox[{
           RowBox[{"-", 
            RowBox[{"Re", "[", 
             SqrtBox[
              RowBox[{"\[CapitalPi]per", "[", 
               RowBox[{
               "\[Theta]", ",", "\[Phi]", ",", "0", ",", "mD", ",", "u"}], 
               "]"}]], "]"}]}], "r", " ", 
           RowBox[{"Cos", "[", "\[Theta]", "]"}]}], "]"}]}], ",", 
        RowBox[{"{", 
         RowBox[{"\[Theta]", ",", "0", ",", 
          RowBox[{"\[Pi]", "/", "2"}]}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"\[Phi]", ",", "0", ",", 
          RowBox[{"2", "\[Pi]"}]}], "}"}]}], "]"}]}]}]}], ";"}], 
  RowBox[{"(*", 
   RowBox[{"WE", " ", "USE", " ", "THIS", " ", "ONE"}], "*)"}]}]], "Input",
 CellChangeTimes->{{3.7484505453298197`*^9, 3.748450550153339*^9}, {
  3.748450609967485*^9, 3.748450634795309*^9}, {3.748941399694872*^9, 
  3.748941419583263*^9}, {3.7489414699950314`*^9, 3.748941476587145*^9}, {
  3.758976348665812*^9, 3.758976374950508*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"ImVcp", "[", 
     RowBox[{"r_", ",", "mD_", ",", "u_", ",", "\[Alpha]_", ",", "T_"}], 
     "]"}], ":=", 
    RowBox[{
     FractionBox[
      RowBox[{"2", " ", "\[Alpha]", " ", "T", " "}], 
      RowBox[{"2", "\[Pi]"}]], 
     RowBox[{"Quiet", "[", 
      RowBox[{"NIntegrate", "[", 
       RowBox[{
        RowBox[{
         RowBox[{"Sin", "[", "\[Theta]", "]"}], 
         FractionBox[
          RowBox[{
           RowBox[{"(", 
            RowBox[{"2", "+", 
             SuperscriptBox["u", "2"], "-", 
             RowBox[{
              SuperscriptBox["u", "2"], 
              SuperscriptBox[
               RowBox[{"Sin", "[", "\[Theta]", "]"}], "2"], 
              SuperscriptBox[
               RowBox[{"Cos", "[", 
                RowBox[{"\[Phi]", "-", "0"}], "]"}], "2"]}]}], ")"}], 
           SuperscriptBox[
            RowBox[{"(", 
             RowBox[{"1", "-", 
              SuperscriptBox["u", "2"]}], ")"}], 
            RowBox[{"3", "/", "2"}]]}], 
          RowBox[{"2", 
           SuperscriptBox[
            RowBox[{"(", 
             RowBox[{"1", "-", 
              SuperscriptBox["u", "2"], "+", 
              RowBox[{
               SuperscriptBox["u", "2"], 
               SuperscriptBox[
                RowBox[{"Sin", "[", "\[Theta]", "]"}], "2"], 
               SuperscriptBox[
                RowBox[{"Cos", "[", 
                 RowBox[{"\[Phi]", "-", "0"}], "]"}], "2"]}]}], ")"}], 
            RowBox[{"5", "/", "2"}]]}]], 
         FractionBox[
          SuperscriptBox["mD", "2"], 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"\[CapitalPi]per", "[", 
             RowBox[{
             "\[Theta]", ",", "\[Phi]", ",", "0", ",", "mD", ",", "u"}], 
             "]"}], "-", 
            RowBox[{"Conjugate", "[", 
             RowBox[{"\[CapitalPi]per", "[", 
              RowBox[{
              "\[Theta]", ",", "\[Phi]", ",", "0", ",", "mD", ",", "u"}], 
              "]"}], "]"}]}], ")"}]], 
         RowBox[{"(", 
          RowBox[{
           RowBox[{
            RowBox[{"Sinh", "[", 
             RowBox[{
              SqrtBox[
               RowBox[{"\[CapitalPi]per", "[", 
                RowBox[{
                "\[Theta]", ",", "\[Phi]", ",", "0", ",", "mD", ",", "u"}], 
                "]"}]], "r", " ", 
              RowBox[{"Cos", "[", "\[Theta]", "]"}]}], "]"}], 
            RowBox[{"SinhIntegral", "[", 
             RowBox[{
              SqrtBox[
               RowBox[{"\[CapitalPi]per", "[", 
                RowBox[{
                "\[Theta]", ",", "\[Phi]", ",", "0", ",", "mD", ",", "u"}], 
                "]"}]], "r", " ", 
              RowBox[{"Cos", "[", "\[Theta]", "]"}]}], "]"}]}], "-", 
           RowBox[{
            RowBox[{"Cosh", "[", 
             RowBox[{
              SqrtBox[
               RowBox[{"\[CapitalPi]per", "[", 
                RowBox[{
                "\[Theta]", ",", "\[Phi]", ",", "0", ",", "mD", ",", "u"}], 
                "]"}]], "r", " ", 
              RowBox[{"Cos", "[", "\[Theta]", "]"}]}], "]"}], 
            RowBox[{"CoshIntegral", "[", 
             RowBox[{
              SqrtBox[
               RowBox[{"\[CapitalPi]per", "[", 
                RowBox[{
                "\[Theta]", ",", "\[Phi]", ",", "0", ",", "mD", ",", "u"}], 
                "]"}]], "r", " ", 
              RowBox[{"Cos", "[", "\[Theta]", "]"}]}], "]"}]}], "-", 
           RowBox[{
            RowBox[{"Sinh", "[", 
             RowBox[{
              SqrtBox[
               RowBox[{"Conjugate", "[", 
                RowBox[{"\[CapitalPi]per", "[", 
                 RowBox[{
                 "\[Theta]", ",", "\[Phi]", ",", "0", ",", "mD", ",", "u"}], 
                 "]"}], "]"}]], "r", " ", 
              RowBox[{"Cos", "[", "\[Theta]", "]"}]}], "]"}], 
            RowBox[{"SinhIntegral", "[", 
             RowBox[{
              SqrtBox[
               RowBox[{"Conjugate", "[", 
                RowBox[{"\[CapitalPi]per", "[", 
                 RowBox[{
                 "\[Theta]", ",", "\[Phi]", ",", "0", ",", "mD", ",", "u"}], 
                 "]"}], "]"}]], "r", " ", 
              RowBox[{"Cos", "[", "\[Theta]", "]"}]}], "]"}]}], "+", 
           RowBox[{
            RowBox[{"Cosh", "[", 
             RowBox[{
              SqrtBox[
               RowBox[{"Conjugate", "[", 
                RowBox[{"\[CapitalPi]per", "[", 
                 RowBox[{
                 "\[Theta]", ",", "\[Phi]", ",", "0", ",", "mD", ",", "u"}], 
                 "]"}], "]"}]], "r", " ", 
              RowBox[{"Cos", "[", "\[Theta]", "]"}]}], "]"}], 
            RowBox[{"CoshIntegral", "[", 
             RowBox[{
              SqrtBox[
               RowBox[{"Conjugate", "[", 
                RowBox[{"\[CapitalPi]per", "[", 
                 RowBox[{
                 "\[Theta]", ",", "\[Phi]", ",", "0", ",", "mD", ",", "u"}], 
                 "]"}], "]"}]], "r", " ", 
              RowBox[{"Cos", "[", "\[Theta]", "]"}]}], "]"}]}]}], ")"}]}], 
        ",", 
        RowBox[{"{", 
         RowBox[{"\[Theta]", ",", "0", ",", 
          RowBox[{"\[Pi]", "/", "2"}]}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"\[Phi]", ",", "0", ",", 
          RowBox[{"2", "\[Pi]"}]}], "}"}], ",", 
        RowBox[{"WorkingPrecision", "\[Rule]", "15"}], ",", 
        RowBox[{"PrecisionGoal", "\[Rule]", "2"}]}], "]"}], "]"}]}]}], ";"}], 
  
  RowBox[{"(*", 
   RowBox[{"WE", " ", "USE", " ", "THIS", " ", "ONE"}], "*)"}]}]], "Input",
 CellChangeTimes->{
  3.749153483191208*^9, {3.749612550086121*^9, 3.749612557069746*^9}, 
   3.749835673861014*^9, 3.758976365350589*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell["Permittivities", "Subsubsection",
 CellChangeTimes->{{3.748450869220883*^9, 3.748450881592766*^9}, {
  3.748450915542739*^9, 3.7484509164068193`*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"\[Epsilon]Imp", "[", 
     RowBox[{"r_", ",", "mD_", ",", "u_", ",", "T_"}], "]"}], ":=", 
    "\[IndentingNewLine]", 
    RowBox[{
     FractionBox["1", 
      SuperscriptBox[
       RowBox[{"(", 
        RowBox[{"2", "\[Pi]"}], ")"}], "2"]], 
     RowBox[{"Quiet", "[", 
      RowBox[{"Re", "[", 
       RowBox[{"T", " ", 
        RowBox[{"NIntegrate", "[", 
         RowBox[{
          RowBox[{
           RowBox[{"Sin", "[", "\[Theta]", "]"}], 
           FractionBox[
            RowBox[{
             RowBox[{"(", 
              RowBox[{"2", "+", 
               SuperscriptBox["u", "2"], "-", 
               RowBox[{
                SuperscriptBox["u", "2"], 
                SuperscriptBox[
                 RowBox[{"Sin", "[", "\[Theta]", "]"}], "2"], 
                SuperscriptBox[
                 RowBox[{"Cos", "[", 
                  RowBox[{"\[Phi]", "-", "0"}], "]"}], "2"]}]}], ")"}], 
             SuperscriptBox[
              RowBox[{"(", 
               RowBox[{"1", "-", 
                SuperscriptBox["u", "2"]}], ")"}], 
              RowBox[{"3", "/", "2"}]]}], 
            RowBox[{"2", 
             SuperscriptBox[
              RowBox[{"(", 
               RowBox[{"1", "-", 
                SuperscriptBox["u", "2"], "+", 
                RowBox[{
                 SuperscriptBox["u", "2"], 
                 SuperscriptBox[
                  RowBox[{"Sin", "[", "\[Theta]", "]"}], "2"], 
                 SuperscriptBox[
                  RowBox[{"Cos", "[", 
                   RowBox[{"\[Phi]", "-", "0"}], "]"}], "2"]}]}], ")"}], 
              RowBox[{"5", "/", "2"}]]}]], 
           FractionBox[
            SuperscriptBox["mD", "2"], 
            RowBox[{"(", 
             RowBox[{
              RowBox[{"\[CapitalPi]per", "[", 
               RowBox[{
               "\[Theta]", ",", "\[Phi]", ",", "0", ",", "mD", ",", "u"}], 
               "]"}], "-", 
              RowBox[{"Conjugate", "[", 
               RowBox[{"\[CapitalPi]per", "[", 
                RowBox[{
                "\[Theta]", ",", "\[Phi]", ",", "0", ",", "mD", ",", "u"}], 
                "]"}], "]"}]}], ")"}]], 
           FractionBox["1", "r"], 
           RowBox[{"Cos", "[", "\[Theta]", "]"}], " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"2", " ", 
              SqrtBox[
               RowBox[{"Conjugate", "[", 
                RowBox[{"\[CapitalPi]per", "[", 
                 RowBox[{
                 "\[Theta]", ",", "\[Phi]", ",", "0", ",", "mD", ",", "u"}], 
                 "]"}], "]"}]], " ", 
              RowBox[{"(", 
               RowBox[{
                RowBox[{
                 RowBox[{"CoshIntegral", "[", 
                  RowBox[{"r", " ", 
                   SqrtBox[
                    RowBox[{"Conjugate", "[", 
                    RowBox[{"\[CapitalPi]per", "[", 
                    RowBox[{
                    "\[Theta]", ",", "\[Phi]", ",", "0", ",", "mD", ",", 
                    "u"}], "]"}], "]"}]], " ", 
                   RowBox[{"Cos", "[", "\[Theta]", "]"}]}], "]"}], " ", 
                 RowBox[{"Sinh", "[", 
                  RowBox[{"r", " ", 
                   SqrtBox[
                    RowBox[{"Conjugate", "[", 
                    RowBox[{"\[CapitalPi]per", "[", 
                    RowBox[{
                    "\[Theta]", ",", "\[Phi]", ",", "0", ",", "mD", ",", 
                    "u"}], "]"}], "]"}]], " ", 
                   RowBox[{"Cos", "[", "\[Theta]", "]"}]}], "]"}]}], "-", 
                RowBox[{
                 RowBox[{"Cosh", "[", 
                  RowBox[{"r", " ", 
                   SqrtBox[
                    RowBox[{"Conjugate", "[", 
                    RowBox[{"\[CapitalPi]per", "[", 
                    RowBox[{
                    "\[Theta]", ",", "\[Phi]", ",", "0", ",", "mD", ",", 
                    "u"}], "]"}], "]"}]], " ", 
                   RowBox[{"Cos", "[", "\[Theta]", "]"}]}], "]"}], " ", 
                 RowBox[{"SinhIntegral", "[", 
                  RowBox[{"r", " ", 
                   SqrtBox[
                    RowBox[{"Conjugate", "[", 
                    RowBox[{"\[CapitalPi]per", "[", 
                    RowBox[{
                    "\[Theta]", ",", "\[Phi]", ",", "0", ",", "mD", ",", 
                    "u"}], "]"}], "]"}]], " ", 
                   RowBox[{"Cos", "[", "\[Theta]", "]"}]}], "]"}]}]}], 
               ")"}]}], "+", 
             RowBox[{"r", " ", 
              RowBox[{"Conjugate", "[", 
               RowBox[{"\[CapitalPi]per", "[", 
                RowBox[{
                "\[Theta]", ",", "\[Phi]", ",", "0", ",", "mD", ",", "u"}], 
                "]"}], "]"}], " ", 
              RowBox[{"Cos", "[", "\[Theta]", "]"}], " ", 
              RowBox[{"(", 
               RowBox[{
                RowBox[{
                 RowBox[{"Cosh", "[", 
                  RowBox[{"r", " ", 
                   SqrtBox[
                    RowBox[{"Conjugate", "[", 
                    RowBox[{"\[CapitalPi]per", "[", 
                    RowBox[{
                    "\[Theta]", ",", "\[Phi]", ",", "0", ",", "mD", ",", 
                    "u"}], "]"}], "]"}]], " ", 
                   RowBox[{"Cos", "[", "\[Theta]", "]"}]}], "]"}], " ", 
                 RowBox[{"CoshIntegral", "[", 
                  RowBox[{"r", " ", 
                   SqrtBox[
                    RowBox[{"Conjugate", "[", 
                    RowBox[{"\[CapitalPi]per", "[", 
                    RowBox[{
                    "\[Theta]", ",", "\[Phi]", ",", "0", ",", "mD", ",", 
                    "u"}], "]"}], "]"}]], " ", 
                   RowBox[{"Cos", "[", "\[Theta]", "]"}]}], "]"}]}], "-", 
                RowBox[{
                 RowBox[{"Sinh", "[", 
                  RowBox[{"r", " ", 
                   SqrtBox[
                    RowBox[{"Conjugate", "[", 
                    RowBox[{"\[CapitalPi]per", "[", 
                    RowBox[{
                    "\[Theta]", ",", "\[Phi]", ",", "0", ",", "mD", ",", 
                    "u"}], "]"}], "]"}]], " ", 
                   RowBox[{"Cos", "[", "\[Theta]", "]"}]}], "]"}], " ", 
                 RowBox[{"SinhIntegral", "[", 
                  RowBox[{"r", " ", 
                   SqrtBox[
                    RowBox[{"Conjugate", "[", 
                    RowBox[{"\[CapitalPi]per", "[", 
                    RowBox[{
                    "\[Theta]", ",", "\[Phi]", ",", "0", ",", "mD", ",", 
                    "u"}], "]"}], "]"}]], " ", 
                   RowBox[{"Cos", "[", "\[Theta]", "]"}]}], "]"}]}]}], 
               ")"}]}], "+", 
             RowBox[{
              SqrtBox[
               RowBox[{"\[CapitalPi]per", "[", 
                RowBox[{
                "\[Theta]", ",", "\[Phi]", ",", "0", ",", "mD", ",", "u"}], 
                "]"}]], " ", 
              RowBox[{"(", 
               RowBox[{
                RowBox[{
                 RowBox[{"-", 
                  RowBox[{"CoshIntegral", "[", 
                   RowBox[{"r", " ", 
                    RowBox[{"Cos", "[", "\[Theta]", "]"}], " ", 
                    SqrtBox[
                    RowBox[{"\[CapitalPi]per", "[", 
                    RowBox[{
                    "\[Theta]", ",", "\[Phi]", ",", "0", ",", "mD", ",", 
                    "u"}], "]"}]]}], "]"}]}], " ", 
                 RowBox[{"(", 
                  RowBox[{
                   RowBox[{"r", " ", 
                    RowBox[{"Cos", "[", "\[Theta]", "]"}], " ", 
                    RowBox[{"Cosh", "[", 
                    RowBox[{"r", " ", 
                    RowBox[{"Cos", "[", "\[Theta]", "]"}], " ", 
                    SqrtBox[
                    RowBox[{"\[CapitalPi]per", "[", 
                    RowBox[{
                    "\[Theta]", ",", "\[Phi]", ",", "0", ",", "mD", ",", 
                    "u"}], "]"}]]}], "]"}], " ", 
                    SqrtBox[
                    RowBox[{"\[CapitalPi]per", "[", 
                    RowBox[{
                    "\[Theta]", ",", "\[Phi]", ",", "0", ",", "mD", ",", 
                    "u"}], "]"}]]}], "+", 
                   RowBox[{"2", " ", 
                    RowBox[{"Sinh", "[", 
                    RowBox[{"r", " ", 
                    RowBox[{"Cos", "[", "\[Theta]", "]"}], " ", 
                    SqrtBox[
                    RowBox[{"\[CapitalPi]per", "[", 
                    RowBox[{
                    "\[Theta]", ",", "\[Phi]", ",", "0", ",", "mD", ",", 
                    "u"}], "]"}]]}], "]"}]}]}], ")"}]}], "+", 
                RowBox[{
                 RowBox[{"(", 
                  RowBox[{
                   RowBox[{"2", " ", 
                    RowBox[{"Cosh", "[", 
                    RowBox[{"r", " ", 
                    RowBox[{"Cos", "[", "\[Theta]", "]"}], " ", 
                    SqrtBox[
                    RowBox[{"\[CapitalPi]per", "[", 
                    RowBox[{
                    "\[Theta]", ",", "\[Phi]", ",", "0", ",", "mD", ",", 
                    "u"}], "]"}]]}], "]"}]}], "+", 
                   RowBox[{"r", " ", 
                    RowBox[{"Cos", "[", "\[Theta]", "]"}], " ", 
                    SqrtBox[
                    RowBox[{"\[CapitalPi]per", "[", 
                    RowBox[{
                    "\[Theta]", ",", "\[Phi]", ",", "0", ",", "mD", ",", 
                    "u"}], "]"}]], " ", 
                    RowBox[{"Sinh", "[", 
                    RowBox[{"r", " ", 
                    RowBox[{"Cos", "[", "\[Theta]", "]"}], " ", 
                    SqrtBox[
                    RowBox[{"\[CapitalPi]per", "[", 
                    RowBox[{
                    "\[Theta]", ",", "\[Phi]", ",", "0", ",", "mD", ",", 
                    "u"}], "]"}]]}], "]"}]}]}], ")"}], " ", 
                 RowBox[{"SinhIntegral", "[", 
                  RowBox[{"r", " ", 
                   RowBox[{"Cos", "[", "\[Theta]", "]"}], " ", 
                   SqrtBox[
                    RowBox[{"\[CapitalPi]per", "[", 
                    RowBox[{
                    "\[Theta]", ",", "\[Phi]", ",", "0", ",", "mD", ",", 
                    "u"}], "]"}]]}], "]"}]}]}], ")"}]}]}], ")"}]}], ",", 
          RowBox[{"{", 
           RowBox[{"\[Theta]", ",", "0", ",", 
            RowBox[{"\[Pi]", "/", "2"}]}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{"\[Phi]", ",", "0", ",", 
            RowBox[{"2", "\[Pi]"}]}], "}"}], ",", 
          RowBox[{"WorkingPrecision", "\[Rule]", "20"}], ",", 
          RowBox[{"PrecisionGoal", "\[Rule]", "1"}]}], "]"}]}], "]"}], 
      "]"}]}]}], ";"}], 
  RowBox[{"(*", "UNREGULATED", "*)"}]}]], "Input",
 CellChangeTimes->{{3.74845092703507*^9, 3.748450937685601*^9}, {
   3.7489433167977753`*^9, 3.748943332355961*^9}, {3.7489433646776752`*^9, 
   3.7489433741412687`*^9}, {3.748943423038916*^9, 3.748943440837915*^9}, 
   3.749188428401885*^9, {3.7497089098283443`*^9, 3.749708923236423*^9}, {
   3.7497091774322777`*^9, 3.749709212211916*^9}, {3.7497092493751917`*^9, 
   3.749709257229188*^9}, {3.749709316478237*^9, 3.749709316685458*^9}, {
   3.7497093806393633`*^9, 3.7497093807583437`*^9}, {3.749709480016882*^9, 
   3.749709480118947*^9}, {3.749709892472438*^9, 3.7497098951298313`*^9}, {
   3.7497099353614264`*^9, 3.749710025988022*^9}, {3.751270699080003*^9, 
   3.751270702968403*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"D", "[", 
    RowBox[{
     RowBox[{
      RowBox[{"Sin", "[", "\[Theta]", "]"}], 
      RowBox[{"f", "[", 
       RowBox[{"\[Theta]", ",", "mD", ",", "u"}], "]"}], 
      RowBox[{"Exp", "[", 
       RowBox[{
        RowBox[{"-", 
         RowBox[{"f", "[", 
          RowBox[{"\[Theta]", ",", "mD", ",", "u"}], "]"}]}], "r", " ", 
        RowBox[{"Cos", "[", "\[Theta]", "]"}]}], "]"}]}], ",", 
     RowBox[{"{", 
      RowBox[{"r", ",", "2"}], "}"}]}], "]"}], "+", 
   RowBox[{
    FractionBox["2", "r"], 
    RowBox[{"D", "[", 
     RowBox[{
      RowBox[{
       RowBox[{"Sin", "[", "\[Theta]", "]"}], 
       RowBox[{"f", "[", 
        RowBox[{"\[Theta]", ",", "mD", ",", "u"}], "]"}], 
       RowBox[{"Exp", "[", 
        RowBox[{
         RowBox[{"-", 
          RowBox[{"f", "[", 
           RowBox[{"\[Theta]", ",", "mD", ",", "u"}], "]"}]}], "r", " ", 
         RowBox[{"Cos", "[", "\[Theta]", "]"}]}], "]"}]}], ",", "r"}], 
     "]"}]}]}], "//", "FullSimplify"}]], "Input",
 CellChangeTimes->{{3.7491887080606737`*^9, 3.7491887791180353`*^9}, {
   3.749188853108238*^9, 3.749188865319393*^9}, 3.749202545203722*^9, {
   3.749202631773013*^9, 3.749202663257951*^9}, {3.749202717614155*^9, 
   3.7492027221255093`*^9}, {3.7492027977213593`*^9, 3.749202798502303*^9}, {
   3.749218162223762*^9, 3.749218182439782*^9}}],

Cell[BoxData[
 FractionBox[
  RowBox[{
   SuperscriptBox["\[ExponentialE]", 
    RowBox[{
     RowBox[{"-", "r"}], " ", 
     RowBox[{"Cos", "[", "\[Theta]", "]"}], " ", 
     RowBox[{"f", "[", 
      RowBox[{"\[Theta]", ",", "mD", ",", "u"}], "]"}]}]], " ", 
   RowBox[{"Cos", "[", "\[Theta]", "]"}], " ", 
   SuperscriptBox[
    RowBox[{"f", "[", 
     RowBox[{"\[Theta]", ",", "mD", ",", "u"}], "]"}], "2"], " ", 
   RowBox[{"(", 
    RowBox[{
     RowBox[{"-", "2"}], "+", 
     RowBox[{"r", " ", 
      RowBox[{"Cos", "[", "\[Theta]", "]"}], " ", 
      RowBox[{"f", "[", 
       RowBox[{"\[Theta]", ",", "mD", ",", "u"}], "]"}]}]}], ")"}], " ", 
   RowBox[{"Sin", "[", "\[Theta]", "]"}]}], "r"]], "Output",
 CellChangeTimes->{{3.7491887385473623`*^9, 3.7491887599064903`*^9}, {
   3.749188854699538*^9, 3.7491888664680147`*^9}, 3.749202481958252*^9, 
   3.749202545885826*^9, {3.749202639706296*^9, 3.749202664022654*^9}, {
   3.7492027187612143`*^9, 3.749202722771459*^9}, 3.7492027997176743`*^9, {
   3.7492181797414083`*^9, 3.749218183624193*^9}, 3.74932748207344*^9, 
   3.749368546098016*^9, 3.758976526148282*^9, 3.758977401516849*^9, 
   3.759058188936419*^9, 3.7590584083960123`*^9, 3.759757045524378*^9, 
   3.759857371102981*^9, 3.760020442433179*^9, 3.760113859060617*^9, 
   3.760794311573998*^9, 3.760962438985332*^9, 3.761239036400069*^9, 
   3.762791237353414*^9}]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"\[Epsilon]Rep1", "[", 
     RowBox[{"r_", ",", "mD_", ",", "u_"}], "]"}], ":=", 
    RowBox[{"Quiet", "[", 
     RowBox[{
      FractionBox["1", 
       RowBox[{"2", "\[Pi]", " ", "r"}]], 
      RowBox[{"NIntegrate", "[", 
       RowBox[{
        RowBox[{
         RowBox[{"Exp", "[", 
          RowBox[{
           RowBox[{"-", "r"}], " ", 
           RowBox[{"Cos", "[", "\[Theta]", "]"}], " ", 
           RowBox[{"Re", "[", 
            SqrtBox[
             RowBox[{"\[CapitalPi]per", "[", 
              RowBox[{
              "\[Theta]", ",", "\[Phi]", ",", "0", ",", "mD", ",", "u"}], 
              "]"}]], "]"}]}], "]"}], " ", 
         RowBox[{"Cos", "[", "\[Theta]", "]"}], " ", 
         SuperscriptBox[
          RowBox[{"Re", "[", 
           SqrtBox[
            RowBox[{"\[CapitalPi]per", "[", 
             RowBox[{
             "\[Theta]", ",", "\[Phi]", ",", "0", ",", "mD", ",", "u"}], 
             "]"}]], "]"}], "2"], " ", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{"-", "2"}], "+", 
           RowBox[{"r", " ", 
            RowBox[{"Cos", "[", "\[Theta]", "]"}], " ", 
            RowBox[{"Re", "[", 
             SqrtBox[
              RowBox[{"\[CapitalPi]per", "[", 
               RowBox[{
               "\[Theta]", ",", "\[Phi]", ",", "0", ",", "mD", ",", "u"}], 
               "]"}]], "]"}]}]}], ")"}], " ", 
         RowBox[{"Sin", "[", "\[Theta]", "]"}]}], ",", 
        RowBox[{"{", 
         RowBox[{"\[Theta]", ",", "0", ",", 
          RowBox[{"\[Pi]", "/", "2"}]}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"\[Phi]", ",", "0", ",", 
          RowBox[{"2", "\[Pi]"}]}], "}"}]}], "]"}]}], "]"}]}], ";"}], 
  RowBox[{"(*", 
   RowBox[{"WE", " ", "USE", " ", "THIS", " ", "ONE"}], "*)"}]}]], "Input",
 CellChangeTimes->{{3.749327484051489*^9, 3.7493275713487663`*^9}, {
   3.749485052704666*^9, 3.7494850595025578`*^9}, 3.749485216747398*^9, {
   3.749612579357493*^9, 3.749612589237705*^9}, {3.749709506317957*^9, 
   3.7497095711675253`*^9}, {3.749709606999859*^9, 3.749709607975741*^9}, {
   3.749709644177043*^9, 3.749709644360722*^9}}]
}, Open  ]]
}, Closed]],

Cell[CellGroupData[{

Cell["Tabs", "Subsection",
 CellChangeTimes->{{3.74845078759194*^9, 3.748450827213127*^9}, 
   3.748451123843587*^9, 3.748941360059739*^9}],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"ReVsTab", "[", 
    RowBox[{"mD1_", ",", "u1_", ",", "\[Sigma]1_"}], "]"}], ":=", 
   RowBox[{"Block", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{"u", "=", "u1"}], ",", 
       RowBox[{"mD", "=", "mD1"}], ",", 
       RowBox[{"\[Sigma]", "=", "\[Sigma]1"}], ",", "inter0", ",", "inter1", 
       ",", "tab", ",", "inter2", ",", "inter3", ",", "tab1", ",", "tab0"}], 
      "}"}], ",", 
     RowBox[{
      RowBox[{"tab0", "=", 
       RowBox[{"ParallelTable", "[", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"r", ",", 
           RowBox[{"\[Sigma]", " ", 
            SuperscriptBox["r", "2"], 
            RowBox[{"\[Epsilon]Rep1", "[", 
             RowBox[{"r", ",", "mD", ",", "u"}], "]"}]}]}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"r", ",", 
           SuperscriptBox["10", 
            RowBox[{"-", "10"}]], ",", "100", ",", 
           RowBox[{"1", "/", "20"}]}], "}"}]}], "]"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"inter0", "=", 
       RowBox[{"Interpolation", "[", "tab0", "]"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"inter1", "[", "r_", "]"}], ":=", 
       RowBox[{"Quiet", "[", 
        RowBox[{"NIntegrate", "[", 
         RowBox[{
          RowBox[{"inter0", "[", "r1", "]"}], ",", 
          RowBox[{"{", 
           RowBox[{"r1", ",", "0", ",", "r"}], "}"}]}], "]"}], "]"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"tab", "=", 
       RowBox[{"ParallelTable", "[", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"r", ",", 
           RowBox[{
            RowBox[{"inter1", "[", "r", "]"}], "+", "\[Sigma]"}]}], "}"}], 
         ",", 
         RowBox[{"{", 
          RowBox[{"r", ",", "0", ",", "100", ",", 
           RowBox[{"1", "/", "20"}]}], "}"}]}], "]"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"inter2", "=", 
       RowBox[{"Interpolation", "[", "tab", "]"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"inter3", "[", "r_", "]"}], ":=", 
       RowBox[{"Quiet", "[", 
        RowBox[{"NIntegrate", "[", 
         RowBox[{
          RowBox[{"inter2", "[", "r1", "]"}], ",", 
          RowBox[{"{", 
           RowBox[{"r1", ",", "0", ",", "r"}], "}"}]}], "]"}], "]"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"tab1", "=", 
       RowBox[{"ParallelTable", "[", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"r", ",", 
           RowBox[{"inter3", "[", "r", "]"}]}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"r", ",", "0", ",", "100", ",", 
           RowBox[{"1", "/", "20"}]}], "}"}]}], "]"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"Return", "[", "tab1", "]"}]}]}], "]"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.7453831005455914`*^9, 3.745383138661728*^9}, {
   3.745383312376183*^9, 3.74538334437337*^9}, {3.7453836903426113`*^9, 
   3.745383700509996*^9}, {3.745383888049996*^9, 3.7453838920497932`*^9}, {
   3.745384456942053*^9, 3.745384462717682*^9}, {3.745385041376384*^9, 
   3.7453850447607927`*^9}, {3.745385110730214*^9, 3.745385155644156*^9}, {
   3.745385388111433*^9, 3.745385411593401*^9}, {3.7453875595914288`*^9, 
   3.745387568075132*^9}, 3.745389177212406*^9, {3.7453901984733753`*^9, 
   3.745390202887982*^9}, {3.745390355427387*^9, 3.745390388219348*^9}, {
   3.7453977096680326`*^9, 3.745397725914731*^9}, {3.745397755948641*^9, 
   3.745397756084126*^9}, {3.7453980995991077`*^9, 3.745398113870977*^9}, {
   3.745399156102378*^9, 3.745399178169222*^9}, {3.745399342881937*^9, 
   3.745399361912752*^9}, {3.745401796965457*^9, 3.7454018195641527`*^9}, {
   3.745401971762494*^9, 3.745401971914714*^9}, {3.745404041771303*^9, 
   3.745404151470154*^9}, {3.745404384229478*^9, 3.745404389436048*^9}, {
   3.7454045122009163`*^9, 3.7454045237036552`*^9}, {3.745404614275045*^9, 
   3.7454046169752293`*^9}, {3.745404890358831*^9, 3.745404914872879*^9}, {
   3.7454740207870693`*^9, 3.745474024498345*^9}, {3.745477052572796*^9, 
   3.745477084925427*^9}, {3.745583208377653*^9, 3.74558321316575*^9}, {
   3.7461777044683733`*^9, 3.746177794182501*^9}, {3.746360152439383*^9, 
   3.746360194120142*^9}, 3.747138517796213*^9, {3.74714032667677*^9, 
   3.747140489547065*^9}, {3.747141354076187*^9, 3.747141359156494*^9}, {
   3.747141522823501*^9, 3.7471415310553417`*^9}, {3.749153891123*^9, 
   3.749153917106997*^9}, {3.749188604635096*^9, 3.749188604733561*^9}, {
   3.749203474410091*^9, 3.74920347448274*^9}, {3.749327310427429*^9, 
   3.74932731652871*^9}, {3.749327586006402*^9, 3.749327601454776*^9}, {
   3.7493277640253353`*^9, 3.749327852961533*^9}, {3.7493685883698683`*^9, 
   3.749368662570149*^9}, {3.749485109282816*^9, 3.749485111617383*^9}, {
   3.749485235084844*^9, 3.749485244893777*^9}, {3.749485546554497*^9, 
   3.749485566713616*^9}, {3.749485957914177*^9, 3.749485962777535*^9}, {
   3.749486298776033*^9, 3.7494863062313766`*^9}, 3.74948637708932*^9, {
   3.749486433762805*^9, 3.749486436801955*^9}, {3.7494871232714567`*^9, 
   3.749487132335362*^9}, 3.749487430829056*^9, 3.7494874656849194`*^9, 
   3.749487748002528*^9, {3.749489632672646*^9, 3.749489655684531*^9}, {
   3.749556105432901*^9, 3.74955611540036*^9}, {3.749556147985692*^9, 
   3.74955614880967*^9}, {3.74958184621616*^9, 3.749581854013291*^9}, {
   3.749612596013793*^9, 3.749612623366857*^9}, {3.749659261553111*^9, 
   3.749659261874166*^9}, 3.7496593149860153`*^9, {3.754132800057769*^9, 
   3.754132830883422*^9}, {3.7541333178478327`*^9, 3.754133320282439*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"ImVsTab", "[", 
    RowBox[{"mD1_", ",", "u1_", ",", "\[Sigma]1_", ",", "T1_"}], "]"}], ":=", 
   
   RowBox[{"Block", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{"u", "=", "u1"}], ",", 
       RowBox[{"mD", "=", "mD1"}], ",", 
       RowBox[{"\[Sigma]", "=", "\[Sigma]1"}], ",", 
       RowBox[{"T", "=", "T1"}], ",", "tab0", ",", "tab1", ",", "inter0", ",",
        "inter1", ",", "inter2", ",", "temp", ",", "tab2"}], "}"}], ",", 
     RowBox[{
      RowBox[{"tab0", "=", 
       RowBox[{"ParallelTable", "[", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"r", ",", 
           RowBox[{"4", "\[Pi]", " ", "\[Sigma]", " ", 
            SuperscriptBox["r", "2"], 
            RowBox[{"\[Epsilon]Imp", "[", 
             RowBox[{"r", ",", "mD", ",", "u", ",", "T"}], "]"}]}]}], "}"}], 
         ",", 
         RowBox[{"{", 
          RowBox[{"r", ",", 
           SuperscriptBox["10", 
            RowBox[{"-", "10"}]], ",", "50", ",", 
           RowBox[{"1", "/", "2"}]}], "}"}]}], "]"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"inter0", "=", 
       RowBox[{"Interpolation", "[", "tab0", "]"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"inter1", "[", "r_", "]"}], ":=", 
       RowBox[{"Quiet", "[", 
        RowBox[{"NIntegrate", "[", 
         RowBox[{
          RowBox[{"inter0", "[", "r1", "]"}], ",", 
          RowBox[{"{", 
           RowBox[{"r1", ",", 
            SuperscriptBox["10", 
             RowBox[{"-", "10"}]], ",", "r"}], "}"}]}], "]"}], "]"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"temp", "=", 
       RowBox[{"inter1", "[", 
        SuperscriptBox["10", 
         RowBox[{"-", "10"}]], "]"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"tab1", "=", 
       RowBox[{"ParallelTable", "[", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"r", ",", 
           RowBox[{
            RowBox[{"inter1", "[", "r", "]"}], "-", "temp"}]}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"r", ",", 
           SuperscriptBox["10", 
            RowBox[{"-", "10"}]], ",", "50", ",", 
           RowBox[{"1", "/", "2"}]}], "}"}]}], "]"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"inter1", "=", 
       RowBox[{"Interpolation", "[", "tab1", "]"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"inter2", "[", "r_", "]"}], ":=", 
       RowBox[{"Quiet", "[", 
        RowBox[{"NIntegrate", "[", 
         RowBox[{
          RowBox[{"inter1", "[", "r1", "]"}], ",", 
          RowBox[{"{", 
           RowBox[{"r1", ",", 
            SuperscriptBox["10", 
             RowBox[{"-", "10"}]], ",", "r"}], "}"}]}], "]"}], "]"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"tab2", "=", 
       RowBox[{"ParallelTable", "[", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"r", ",", 
           RowBox[{"inter2", "[", "r", "]"}]}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"r", ",", 
           SuperscriptBox["10", 
            RowBox[{"-", "10"}]], ",", "50", ",", 
           RowBox[{"1", "/", "2"}]}], "}"}]}], "]"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"Return", "[", "tab2", "]"}]}]}], "]"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.7453831005455914`*^9, 3.745383138661728*^9}, {
   3.745383312376183*^9, 3.74538334437337*^9}, {3.7453836903426113`*^9, 
   3.745383700509996*^9}, {3.745383888049996*^9, 3.7453838920497932`*^9}, {
   3.745384456942053*^9, 3.745384462717682*^9}, {3.745385041376384*^9, 
   3.7453850447607927`*^9}, {3.745385110730214*^9, 3.745385155644156*^9}, {
   3.745385388111433*^9, 3.745385411593401*^9}, {3.7453875595914288`*^9, 
   3.745387568075132*^9}, 3.745389177212406*^9, {3.7453901984733753`*^9, 
   3.745390202887982*^9}, {3.745390355427387*^9, 3.745390388219348*^9}, {
   3.7453977096680326`*^9, 3.745397725914731*^9}, {3.745397755948641*^9, 
   3.745397756084126*^9}, {3.7453980995991077`*^9, 3.745398113870977*^9}, {
   3.745399156102378*^9, 3.745399178169222*^9}, {3.745399342881937*^9, 
   3.745399361912752*^9}, {3.745401796965457*^9, 3.7454018195641527`*^9}, {
   3.745401971762494*^9, 3.745401971914714*^9}, {3.745404041771303*^9, 
   3.745404151470154*^9}, {3.745404384229478*^9, 3.745404389436048*^9}, {
   3.7454045122009163`*^9, 3.7454045237036552`*^9}, {3.745404614275045*^9, 
   3.7454046169752293`*^9}, {3.745404890358831*^9, 3.745404914872879*^9}, {
   3.7454740207870693`*^9, 3.745474024498345*^9}, {3.745477052572796*^9, 
   3.745477084925427*^9}, {3.745583208377653*^9, 3.74558321316575*^9}, {
   3.7461777044683733`*^9, 3.746177794182501*^9}, {3.746360152439383*^9, 
   3.746360194120142*^9}, 3.747138517796213*^9, {3.74714032667677*^9, 
   3.747140456145793*^9}, {3.747142006921813*^9, 3.7471420095970497`*^9}, {
   3.7471420459327374`*^9, 3.747142070011909*^9}, {3.747142963611829*^9, 
   3.7471429679068823`*^9}, {3.747329490809226*^9, 3.7473294977769136`*^9}, {
   3.747458708309948*^9, 3.747458716523738*^9}, {3.747458783591525*^9, 
   3.747458787423175*^9}, {3.747458847768239*^9, 3.747458887920331*^9}, {
   3.747458940561996*^9, 3.747458944633296*^9}, {3.7474592066074753`*^9, 
   3.74745921250218*^9}, {3.747459387579301*^9, 3.747459391009719*^9}, {
   3.748450903768133*^9, 3.748450907542585*^9}, {3.7484510000627728`*^9, 
   3.748451033580184*^9}, {3.748456282411323*^9, 3.7484562828912697`*^9}, {
   3.748456340716448*^9, 3.748456344192161*^9}, {3.748456392965889*^9, 
   3.748456393348927*^9}, {3.748456492880068*^9, 3.748456541864429*^9}, {
   3.748456593905673*^9, 3.748456610377811*^9}, {3.749153597093884*^9, 
   3.749153621958075*^9}, {3.749153935907349*^9, 3.749153941020252*^9}, {
   3.749187135207795*^9, 3.74918713553677*^9}, {3.749581856519682*^9, 
   3.749581857664353*^9}, {3.749612630887063*^9, 3.7496126481429253`*^9}, {
   3.749659264625359*^9, 3.749659265160788*^9}, {3.75413450859312*^9, 
   3.7541345118604507`*^9}, {3.754140304208478*^9, 3.7541403085533447`*^9}, {
   3.759757109350052*^9, 3.759757127037065*^9}, {3.759857377175271*^9, 
   3.759857381537204*^9}, {3.7627912428409233`*^9, 3.762791245436858*^9}}]
}, Closed]],

Cell[CellGroupData[{

Cell["Make potentials for pT=0", "Subsection",
 CellChangeTimes->{{3.745471833598156*^9, 3.745471838992208*^9}, {
  3.747482702323744*^9, 3.747482702739996*^9}, {3.754205546964004*^9, 
  3.754205548851056*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"Export", "[", 
    RowBox[{"\"\<pots/perp/ReVspT0.dat\>\"", ",", 
     RowBox[{"ReVsTab", "[", 
      RowBox[{
       RowBox[{"mDcalmu", "[", 
        RowBox[{"Tlim", ",", "0", ",", 
         RowBox[{"kfinal", "[", 
          RowBox[{"[", "1", "]"}], "]"}], ",", 
         RowBox[{"kfinal", "[", 
          RowBox[{"[", "2", "]"}], "]"}]}], "]"}], ",", "w", ",", 
       RowBox[{"\[Sigma]cont", "[", 
        RowBox[{"[", "1", "]"}], "]"}]}], "]"}]}], "]"}], ";"}], "//", 
  "AbsoluteTiming"}]], "Input",
 CellChangeTimes->{{3.754132846598811*^9, 3.754132854011059*^9}, {
   3.754132888585803*^9, 3.754132915394245*^9}, {3.754132974292364*^9, 
   3.754133018639119*^9}, 3.758976484853301*^9}],

Cell[BoxData["$Aborted"], "Output",
 CellChangeTimes->{3.7541329885216007`*^9, 3.7541332973445063`*^9, 
  3.7541339808117437`*^9, 3.75414087573284*^9, 3.759757154805504*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"Export", "[", 
    RowBox[{"\"\<pots/perp/ImVspT0.dat\>\"", ",", 
     RowBox[{"ImVsTab", "[", 
      RowBox[{
       RowBox[{"SetPrecision", "[", 
        RowBox[{
         RowBox[{"mDcalmu", "[", 
          RowBox[{"Tlim", ",", "0", ",", 
           RowBox[{"kfinal", "[", 
            RowBox[{"[", "1", "]"}], "]"}], ",", 
           RowBox[{"kfinal", "[", 
            RowBox[{"[", "2", "]"}], "]"}]}], "]"}], ",", "30"}], "]"}], ",", 
       
       RowBox[{"SetPrecision", "[", 
        RowBox[{"w", ",", "30"}], "]"}], ",", 
       RowBox[{"SetPrecision", "[", 
        RowBox[{
         RowBox[{"\[Sigma]cont", "[", 
          RowBox[{"[", "1", "]"}], "]"}], ",", "30"}], "]"}], ",", "Tlim"}], 
      "]"}]}], "]"}], ";"}], "//", "AbsoluteTiming"}]], "Input",
 CellChangeTimes->{{3.754134524715332*^9, 3.7541345455332413`*^9}, {
   3.7541346019198513`*^9, 3.754134602444612*^9}, {3.754134692801319*^9, 
   3.7541347004534388`*^9}, 3.75897648486193*^9}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"2331.569506`", ",", "Null"}], "}"}]], "Output",
 CellChangeTimes->{3.754136034283772*^9, 3.75414320738932*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"Block", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"temp", ",", "temp1"}], "}"}], ",", 
    RowBox[{
     RowBox[{"temp", "=", 
      RowBox[{"ImVcp", "[", 
       RowBox[{
        SuperscriptBox["10", 
         RowBox[{"-", "10"}]], ",", 
        RowBox[{"SetPrecision", "[", 
         RowBox[{
          RowBox[{"mDcalmu", "[", 
           RowBox[{"Tlim", ",", "0", ",", 
            RowBox[{"kfinal", "[", 
             RowBox[{"[", "1", "]"}], "]"}], ",", 
            RowBox[{"kfinal", "[", 
             RowBox[{"[", "2", "]"}], "]"}]}], "]"}], ",", "30"}], "]"}], ",", 
        RowBox[{"SetPrecision", "[", 
         RowBox[{"w", ",", "30"}], "]"}], ",", 
        RowBox[{"SetPrecision", "[", 
         RowBox[{
          RowBox[{"\[Alpha]cont", "[", 
           RowBox[{"[", "1", "]"}], "]"}], ",", "30"}], "]"}], ",", "Tlim"}], 
       "]"}]}], ";", 
     RowBox[{"temp1", "=", 
      RowBox[{"ParallelTable", "[", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"r", ",", 
          RowBox[{
           RowBox[{"ImVcp", "[", 
            RowBox[{"r", ",", 
             RowBox[{"SetPrecision", "[", 
              RowBox[{
               RowBox[{"mDcalmu", "[", 
                RowBox[{"Tlim", ",", "0", ",", 
                 RowBox[{"kfinal", "[", 
                  RowBox[{"[", "1", "]"}], "]"}], ",", 
                 RowBox[{"kfinal", "[", 
                  RowBox[{"[", "2", "]"}], "]"}]}], "]"}], ",", "30"}], "]"}],
              ",", 
             RowBox[{"SetPrecision", "[", 
              RowBox[{"w", ",", "30"}], "]"}], ",", 
             RowBox[{"SetPrecision", "[", 
              RowBox[{
               RowBox[{"\[Alpha]cont", "[", 
                RowBox[{"[", "1", "]"}], "]"}], ",", "30"}], "]"}], ",", 
             "Tlim"}], "]"}], "-", "temp"}]}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"r", ",", 
          RowBox[{"1", "/", "1000"}], ",", "100", ",", 
          RowBox[{"1", "/", "20"}]}], "}"}]}], "]"}]}], ";", "\n", 
     RowBox[{"Export", "[", 
      RowBox[{"\"\<pots/perp/ImVcpT0.dat\>\"", ",", "temp1"}], "]"}], ";"}]}],
    "]"}], "//", "AbsoluteTiming"}]], "Input",
 CellChangeTimes->{{3.749612777504025*^9, 3.749612885682765*^9}, {
   3.749613092055283*^9, 3.749613094167004*^9}, {3.749659333672391*^9, 
   3.7496593429443293`*^9}, 3.749659381104273*^9, {3.754134767940505*^9, 
   3.754134858928797*^9}, {3.754134921800688*^9, 3.754134924568582*^9}, {
   3.7541403237422132`*^9, 3.754140325984097*^9}, 3.758976484870515*^9}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"795.082403`", ",", "Null"}], "}"}]], "Output",
 CellChangeTimes->{3.754138049775752*^9, 3.754140329240665*^9, 
  3.754144002558165*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"Block", "[", 
   RowBox[{
    RowBox[{"{", "temp", "}"}], ",", 
    RowBox[{
     RowBox[{"temp", "=", 
      RowBox[{"Join", "[", 
       RowBox[{
        RowBox[{"ParallelTable", "[", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{"r", ",", 
            RowBox[{"ReVcp", "[", 
             RowBox[{"r", ",", 
              RowBox[{"mDcalmu", "[", 
               RowBox[{"Tlim", ",", "0", ",", 
                RowBox[{"kfinal", "[", 
                 RowBox[{"[", "1", "]"}], "]"}], ",", 
                RowBox[{"kfinal", "[", 
                 RowBox[{"[", "2", "]"}], "]"}]}], "]"}], ",", "w", ",", 
              RowBox[{"\[Alpha]cont", "[", 
               RowBox[{"[", "1", "]"}], "]"}], ",", 
              RowBox[{"ccont", "[", 
               RowBox[{"[", "1", "]"}], "]"}]}], "]"}]}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{"r", ",", 
            RowBox[{"1", "/", "1000"}], ",", "100", ",", 
            RowBox[{"1", "/", "20"}]}], "}"}]}], "]"}], ",", 
        RowBox[{"{", 
         RowBox[{"{", 
          RowBox[{"500", ",", 
           RowBox[{"ReVcp", "[", 
            RowBox[{"500", ",", 
             RowBox[{"mDcalmu", "[", 
              RowBox[{"Tlim", ",", "0", ",", 
               RowBox[{"kfinal", "[", 
                RowBox[{"[", "1", "]"}], "]"}], ",", 
               RowBox[{"kfinal", "[", 
                RowBox[{"[", "2", "]"}], "]"}]}], "]"}], ",", "w", ",", 
             RowBox[{"\[Alpha]cont", "[", 
              RowBox[{"[", "1", "]"}], "]"}], ",", 
             RowBox[{"ccont", "[", 
              RowBox[{"[", "1", "]"}], "]"}]}], "]"}]}], "}"}], "}"}]}], 
       "]"}]}], ";", 
     RowBox[{"Export", "[", 
      RowBox[{"\"\<pots/perp/ReVcpT0.dat\>\"", ",", "temp"}], "]"}], ";"}]}], 
   "]"}], "//", "AbsoluteTiming"}]], "Input",
 CellChangeTimes->{{3.7496129670279913`*^9, 3.749613117007798*^9}, {
   3.749659400628265*^9, 3.749659413224476*^9}, {3.7541349288792467`*^9, 
   3.754135036051675*^9}, {3.75414033460714*^9, 3.754140334833804*^9}, 
   3.7589764848791018`*^9}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"35.992766`", ",", "Null"}], "}"}]], "Output",
 CellChangeTimes->{3.7541382318616943`*^9, 3.754144038704768*^9}]
}, Open  ]]
}, Closed]],

Cell[CellGroupData[{

Cell["Make potentials for pT=/=0", "Subsection",
 CellChangeTimes->{{3.745471833598156*^9, 3.745471838992208*^9}, {
  3.747482702323744*^9, 3.747482702739996*^9}, {3.754205546964004*^9, 
  3.754205562236405*^9}, {3.7542057252933807`*^9, 3.754205727407052*^9}}],

Cell[BoxData[{
 RowBox[{
  RowBox[{"pT", "=", "25"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"Do", "[", 
    RowBox[{
     RowBox[{"Export", "[", 
      RowBox[{
       RowBox[{"\"\<pots/perp/pT\>\"", "<>", 
        RowBox[{"ToString", "[", "pT", "]"}], "<>", "\"\</ReVspT\>\"", "<>", 
        RowBox[{"ToString", "[", "pT", "]"}], "<>", "\"\<ang\>\"", "<>", 
        RowBox[{"ToString", "[", "i", "]"}], "<>", "\"\<Jpsi.dat\>\""}], ",", 
       
       RowBox[{"ReVsTab", "[", 
        RowBox[{
         RowBox[{"mDcalmu", "[", 
          RowBox[{"Tlim", ",", "0", ",", 
           RowBox[{"kfinal", "[", 
            RowBox[{"[", "1", "]"}], "]"}], ",", 
           RowBox[{"kfinal", "[", 
            RowBox[{"[", "2", "]"}], "]"}]}], "]"}], ",", 
         RowBox[{"v", "[", 
          RowBox[{
           RowBox[{"ang", "[", 
            RowBox[{"[", "i", "]"}], "]"}], ",", "pT", ",", "1", ",", "0"}], 
          "]"}], ",", 
         RowBox[{"\[Sigma]cont", "[", 
          RowBox[{"[", "1", "]"}], "]"}]}], "]"}]}], "]"}], ",", 
     RowBox[{"{", 
      RowBox[{"i", ",", "51", ",", 
       RowBox[{"Length", "[", "ang", "]"}]}], "}"}]}], "]"}], ";"}], 
  "\[IndentingNewLine]"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"Block", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"temp", ",", "temp1"}], "}"}], ",", 
     RowBox[{"Do", "[", 
      RowBox[{
       RowBox[{
        RowBox[{"temp", "=", 
         RowBox[{"ImVcp", "[", 
          RowBox[{
           SuperscriptBox["10", 
            RowBox[{"-", "10"}]], ",", 
           RowBox[{"SetPrecision", "[", 
            RowBox[{
             RowBox[{"mDcalmu", "[", 
              RowBox[{"Tlim", ",", "0", ",", 
               RowBox[{"kfinal", "[", 
                RowBox[{"[", "1", "]"}], "]"}], ",", 
               RowBox[{"kfinal", "[", 
                RowBox[{"[", "2", "]"}], "]"}]}], "]"}], ",", "30"}], "]"}], 
           ",", 
           RowBox[{"SetPrecision", "[", 
            RowBox[{
             RowBox[{"v", "[", 
              RowBox[{
               RowBox[{"ang", "[", 
                RowBox[{"[", "i", "]"}], "]"}], ",", "pT", ",", "1", ",", 
               "0"}], "]"}], ",", "30"}], "]"}], ",", 
           RowBox[{"SetPrecision", "[", 
            RowBox[{
             RowBox[{"\[Alpha]cont", "[", 
              RowBox[{"[", "1", "]"}], "]"}], ",", "30"}], "]"}], ",", 
           "Tlim"}], "]"}]}], ";", 
        RowBox[{"temp1", "=", 
         RowBox[{"ParallelTable", "[", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{"r", ",", 
             RowBox[{
              RowBox[{"ImVcp", "[", 
               RowBox[{"r", ",", 
                RowBox[{"SetPrecision", "[", 
                 RowBox[{
                  RowBox[{"mDcalmu", "[", 
                   RowBox[{"Tlim", ",", "0", ",", 
                    RowBox[{"kfinal", "[", 
                    RowBox[{"[", "1", "]"}], "]"}], ",", 
                    RowBox[{"kfinal", "[", 
                    RowBox[{"[", "2", "]"}], "]"}]}], "]"}], ",", "30"}], 
                 "]"}], ",", 
                RowBox[{"SetPrecision", "[", 
                 RowBox[{
                  RowBox[{"v", "[", 
                   RowBox[{
                    RowBox[{"ang", "[", 
                    RowBox[{"[", "i", "]"}], "]"}], ",", "pT", ",", "1", ",", 
                    "0"}], "]"}], ",", "30"}], "]"}], ",", 
                RowBox[{"SetPrecision", "[", 
                 RowBox[{
                  RowBox[{"\[Alpha]cont", "[", 
                   RowBox[{"[", "1", "]"}], "]"}], ",", "30"}], "]"}], ",", 
                "Tlim"}], "]"}], "-", "temp"}]}], "}"}], ",", 
           RowBox[{"{", 
            RowBox[{"r", ",", 
             RowBox[{"1", "/", "1000"}], ",", "50", ",", 
             RowBox[{"1", "/", "10"}]}], "}"}]}], "]"}]}], ";", "\n", 
        RowBox[{"Export", "[", 
         RowBox[{
          RowBox[{"\"\<pots/perp/pT\>\"", "<>", 
           RowBox[{"ToString", "[", "pT", "]"}], "<>", "\"\</ImVcpT\>\"", "<>", 
           RowBox[{"ToString", "[", "pT", "]"}], "<>", "\"\<ang\>\"", "<>", 
           RowBox[{"ToString", "[", "i", "]"}], "<>", "\"\<Jpsi.dat\>\""}], 
          ",", "temp1"}], "]"}], ";"}], ",", 
       RowBox[{"{", 
        RowBox[{"i", ",", "1", ",", 
         RowBox[{"Length", "[", "ang", "]"}]}], "}"}]}], "]"}]}], "]"}], 
   ";"}], "\[IndentingNewLine]"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"Block", "[", 
    RowBox[{
     RowBox[{"{", "temp", "}"}], ",", 
     RowBox[{"Do", "[", 
      RowBox[{
       RowBox[{
        RowBox[{"temp", "=", 
         RowBox[{"Join", "[", 
          RowBox[{
           RowBox[{"ParallelTable", "[", 
            RowBox[{
             RowBox[{"{", 
              RowBox[{"r", ",", 
               RowBox[{"ReVcp", "[", 
                RowBox[{"r", ",", 
                 RowBox[{"mDcalmu", "[", 
                  RowBox[{"Tlim", ",", "0", ",", 
                   RowBox[{"kfinal", "[", 
                    RowBox[{"[", "1", "]"}], "]"}], ",", 
                   RowBox[{"kfinal", "[", 
                    RowBox[{"[", "2", "]"}], "]"}]}], "]"}], ",", 
                 RowBox[{"v", "[", 
                  RowBox[{
                   RowBox[{"ang", "[", 
                    RowBox[{"[", "i", "]"}], "]"}], ",", "pT", ",", "1", ",", 
                   "0"}], "]"}], ",", 
                 RowBox[{"\[Alpha]cont", "[", 
                  RowBox[{"[", "1", "]"}], "]"}], ",", 
                 RowBox[{"ccont", "[", 
                  RowBox[{"[", "1", "]"}], "]"}]}], "]"}]}], "}"}], ",", 
             RowBox[{"{", 
              RowBox[{"r", ",", 
               RowBox[{"1", "/", "1000"}], ",", "100", ",", 
               RowBox[{"1", "/", "20"}]}], "}"}]}], "]"}], ",", 
           RowBox[{"{", 
            RowBox[{"{", 
             RowBox[{"500", ",", 
              RowBox[{"ReVcp", "[", 
               RowBox[{"500", ",", 
                RowBox[{"mDcalmu", "[", 
                 RowBox[{"Tlim", ",", "0", ",", 
                  RowBox[{"kfinal", "[", 
                   RowBox[{"[", "1", "]"}], "]"}], ",", 
                  RowBox[{"kfinal", "[", 
                   RowBox[{"[", "2", "]"}], "]"}]}], "]"}], ",", 
                RowBox[{"v", "[", 
                 RowBox[{
                  RowBox[{"ang", "[", 
                   RowBox[{"[", "i", "]"}], "]"}], ",", "pT", ",", "1", ",", 
                  "0"}], "]"}], ",", 
                RowBox[{"\[Alpha]cont", "[", 
                 RowBox[{"[", "1", "]"}], "]"}], ",", 
                RowBox[{"ccont", "[", 
                 RowBox[{"[", "1", "]"}], "]"}]}], "]"}]}], "}"}], "}"}]}], 
          "]"}]}], ";", 
        RowBox[{"Export", "[", 
         RowBox[{
          RowBox[{"\"\<pots/perp/pT\>\"", "<>", 
           RowBox[{"ToString", "[", "pT", "]"}], "<>", "\"\</ReVcpT\>\"", "<>", 
           RowBox[{"ToString", "[", "pT", "]"}], "<>", "\"\<ang\>\"", "<>", 
           RowBox[{"ToString", "[", "i", "]"}], "<>", "\"\<Jpsi.dat\>\""}], 
          ",", "temp"}], "]"}], ";"}], ",", 
       RowBox[{"{", 
        RowBox[{"i", ",", "1", ",", 
         RowBox[{"Length", "[", "ang", "]"}]}], "}"}]}], "]"}]}], "]"}], 
   ";"}], "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Do", "[", 
   RowBox[{
    RowBox[{"Export", "[", 
     RowBox[{
      RowBox[{"\"\<pots/perp/pT\>\"", "<>", 
       RowBox[{"ToString", "[", "pT", "]"}], "<>", "\"\</ImVspT\>\"", "<>", 
       RowBox[{"ToString", "[", "pT", "]"}], "<>", "\"\<ang\>\"", "<>", 
       RowBox[{"ToString", "[", "i", "]"}], "<>", "\"\<Jpsi.dat\>\""}], ",", 
      RowBox[{"ImVsTab", "[", 
       RowBox[{
        RowBox[{"SetPrecision", "[", 
         RowBox[{
          RowBox[{"mDcalmu", "[", 
           RowBox[{"Tlim", ",", "0", ",", 
            RowBox[{"kfinal", "[", 
             RowBox[{"[", "1", "]"}], "]"}], ",", 
            RowBox[{"kfinal", "[", 
             RowBox[{"[", "2", "]"}], "]"}]}], "]"}], ",", "30"}], "]"}], ",", 
        RowBox[{"SetPrecision", "[", 
         RowBox[{
          RowBox[{"v", "[", 
           RowBox[{
            RowBox[{"ang", "[", 
             RowBox[{"[", "i", "]"}], "]"}], ",", "pT", ",", "1", ",", "0"}], 
           "]"}], ",", "30"}], "]"}], ",", 
        RowBox[{"SetPrecision", "[", 
         RowBox[{
          RowBox[{"\[Sigma]cont", "[", 
           RowBox[{"[", "1", "]"}], "]"}], ",", "30"}], "]"}], ",", "Tlim"}], 
       "]"}]}], "]"}], ",", 
    RowBox[{"{", 
     RowBox[{"i", ",", "1", ",", 
      RowBox[{"Length", "[", "ang", "]"}]}], "}"}]}], "]"}], 
  ";"}], "\[IndentingNewLine]"}], "Input",
 CellChangeTimes->{{3.7552469023018303`*^9, 3.7552469041058073`*^9}, {
  3.7553685865964003`*^9, 3.755368586793284*^9}, {3.755368662836259*^9, 
  3.7553686824026337`*^9}, {3.7553687248118773`*^9, 3.755368725205554*^9}, {
  3.755368851378283*^9, 3.755368851616117*^9}, {3.757091352484736*^9, 
  3.75709135255781*^9}, {3.758976571717352*^9, 3.758976571998925*^9}, {
  3.758977436989893*^9, 3.758977437143642*^9}, {3.758977724708551*^9, 
  3.7589777608004513`*^9}, {3.759857500069096*^9, 3.7598575115726433`*^9}, {
  3.7600205035556*^9, 3.7600205468334846`*^9}, {3.760113874193907*^9, 
  3.7601138793595*^9}, {3.760794324673171*^9, 3.760794331204726*^9}}]
}, Closed]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Spectra", "Section",
 CellChangeTimes->{{3.745472165420155*^9, 3.745472170532083*^9}, {
   3.7578068654594812`*^9, 3.757806877651998*^9}, 3.757807915717453*^9}],

Cell[CellGroupData[{

Cell["pT = 0", "Subsection",
 CellChangeTimes->{{3.7578047134492683`*^9, 3.7578047416705647`*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"Block", "[", 
   RowBox[{
    RowBox[{"{", "data", "}"}], ",", 
    RowBox[{
     RowBox[{"data", "=", 
      RowBox[{"ToExpression", "[", 
       RowBox[{"Import", "[", "\"\<pots/perp/pT0/ReVspT0.dat\>\"", "]"}], 
       "]"}]}], ";", 
     RowBox[{"data", "=", 
      RowBox[{"Append", "[", 
       RowBox[{"data", ",", 
        RowBox[{"{", 
         RowBox[{"20000", ",", 
          RowBox[{"data", "[", 
           RowBox[{"[", 
            RowBox[{
             RowBox[{"-", "1"}], ",", "2"}], "]"}], "]"}]}], "}"}]}], "]"}]}],
      ";", 
     RowBox[{"ReVs", "=", 
      RowBox[{"Interpolation", "[", 
       RowBox[{"data", ",", 
        RowBox[{"InterpolationOrder", "\[Rule]", "1"}]}], "]"}]}]}]}], "]"}], 
  ";"}]], "Input",
 CellChangeTimes->{{3.746273043134018*^9, 3.7462731014710627`*^9}, {
   3.746273301287758*^9, 3.746273304882516*^9}, {3.746273761020192*^9, 
   3.746273876685227*^9}, {3.7462744640649643`*^9, 3.746274465417224*^9}, {
   3.746349735495809*^9, 3.746349736436407*^9}, 3.746349774584558*^9, {
   3.747480794219287*^9, 3.747480812144912*^9}, {3.747546497327075*^9, 
   3.747546502341762*^9}, {3.7477311702504187`*^9, 3.747731172776266*^9}, {
   3.747933590766211*^9, 3.7479335908605967`*^9}, {3.747933831643701*^9, 
   3.7479338321885357`*^9}, {3.747935743003852*^9, 3.747935745435129*^9}, {
   3.747980226650998*^9, 3.747980227430276*^9}, {3.74819373389242*^9, 
   3.748193736020507*^9}, {3.74955561414298*^9, 3.749555616431025*^9}, {
   3.749555735339233*^9, 3.749555770441473*^9}, {3.749563199290225*^9, 
   3.7495632002283087`*^9}, {3.749582016224145*^9, 3.7495820173360643`*^9}, 
   3.7496465801174393`*^9, 3.749655737246266*^9, {3.749676660140545*^9, 
   3.7496766705804367`*^9}, 3.749707823586372*^9, 3.749831719792158*^9, {
   3.749835469145554*^9, 3.749835470031209*^9}, {3.749835778375493*^9, 
   3.7498357790711718`*^9}, {3.749835993135953*^9, 3.749835993954405*^9}, 
   3.749851496421886*^9, {3.754139882828698*^9, 3.754139908225337*^9}, 
   3.754139940263101*^9, {3.757804680404768*^9, 3.757804683275345*^9}, {
   3.757805059006091*^9, 3.7578050593888407`*^9}, {3.758209979509252*^9, 
   3.7582100351236277`*^9}, 3.7589764849317713`*^9, 3.762090296486682*^9}],

Cell[BoxData[
 RowBox[{
  RowBox[{"Block", "[", 
   RowBox[{
    RowBox[{"{", "data", "}"}], ",", 
    RowBox[{
     RowBox[{"data", "=", 
      RowBox[{"ToExpression", "[", 
       RowBox[{"Import", "[", "\"\<pots/perp/pT0/ReVcpT0.dat\>\"", "]"}], 
       "]"}]}], ";", 
     RowBox[{"data", "=", 
      RowBox[{"Append", "[", 
       RowBox[{"data", ",", 
        RowBox[{"{", 
         RowBox[{"20000", ",", 
          RowBox[{"data", "[", 
           RowBox[{"[", 
            RowBox[{
             RowBox[{"-", "1"}], ",", "2"}], "]"}], "]"}]}], "}"}]}], "]"}]}],
      ";", 
     RowBox[{"ReVc", "=", 
      RowBox[{"Interpolation", "[", 
       RowBox[{"data", ",", 
        RowBox[{"InterpolationOrder", "\[Rule]", "1"}]}], "]"}]}]}]}], "]"}], 
  ";"}]], "Input",
 CellChangeTimes->{{3.746273043134018*^9, 3.7462731014710627`*^9}, {
   3.746273301287758*^9, 3.746273304882516*^9}, {3.746273761020192*^9, 
   3.746273876685227*^9}, {3.7462744640649643`*^9, 3.746274465417224*^9}, {
   3.746349735495809*^9, 3.746349736436407*^9}, 3.746349774584558*^9, {
   3.747480794219287*^9, 3.747480812144912*^9}, {3.747546497327075*^9, 
   3.747546502341762*^9}, {3.7477311702504187`*^9, 3.747731172776266*^9}, {
   3.747933590766211*^9, 3.7479335908605967`*^9}, {3.747933831643701*^9, 
   3.7479338321885357`*^9}, {3.747935743003852*^9, 3.747935745435129*^9}, {
   3.747980226650998*^9, 3.747980227430276*^9}, {3.74819373389242*^9, 
   3.748193736020507*^9}, {3.74955561414298*^9, 3.749555616431025*^9}, {
   3.749555735339233*^9, 3.749555770441473*^9}, {3.749563199290225*^9, 
   3.7495632002283087`*^9}, {3.749582016224145*^9, 3.7495820173360643`*^9}, 
   3.7496465801174393`*^9, 3.749655737246266*^9, {3.749676660140545*^9, 
   3.7496766705804367`*^9}, 3.749707823586372*^9, 3.749831719792158*^9, {
   3.749835469145554*^9, 3.749835470031209*^9}, {3.749835778375493*^9, 
   3.7498357790711718`*^9}, {3.749835993135953*^9, 3.749835993954405*^9}, 
   3.749851496421886*^9, {3.754139882828698*^9, 3.754139942863409*^9}, {
   3.757804691721692*^9, 3.757804692636195*^9}, 3.7578050636583776`*^9, {
   3.758210040115294*^9, 3.7582100412726183`*^9}, 3.758976484943364*^9, 
   3.762090313156419*^9}],

Cell[BoxData[
 RowBox[{
  RowBox[{"Block", "[", 
   RowBox[{
    RowBox[{"{", "data", "}"}], ",", 
    RowBox[{
     RowBox[{"data", "=", 
      RowBox[{"ToExpression", "[", 
       RowBox[{"Import", "[", "\"\<pots/perp/pT0/ImVspT0.dat\>\"", "]"}], 
       "]"}]}], ";", 
     RowBox[{"data", "=", 
      RowBox[{"Append", "[", 
       RowBox[{"data", ",", 
        RowBox[{"{", 
         RowBox[{"20000", ",", 
          RowBox[{"data", "[", 
           RowBox[{"[", 
            RowBox[{
             RowBox[{"-", "1"}], ",", "2"}], "]"}], "]"}]}], "}"}]}], "]"}]}],
      ";", 
     RowBox[{"ImVs", "=", 
      RowBox[{"Interpolation", "[", 
       RowBox[{"data", ",", 
        RowBox[{"InterpolationOrder", "\[Rule]", "1"}]}], "]"}]}]}]}], "]"}], 
  ";"}]], "Input",
 CellChangeTimes->{{3.746273043134018*^9, 3.7462731014710627`*^9}, {
   3.746273301287758*^9, 3.746273304882516*^9}, {3.746273761020192*^9, 
   3.746273876685227*^9}, {3.7462744640649643`*^9, 3.746274465417224*^9}, {
   3.746349735495809*^9, 3.746349736436407*^9}, 3.746349774584558*^9, {
   3.747480794219287*^9, 3.747480812144912*^9}, {3.747546497327075*^9, 
   3.747546502341762*^9}, {3.7477311702504187`*^9, 3.747731172776266*^9}, {
   3.747933590766211*^9, 3.7479335908605967`*^9}, {3.747933831643701*^9, 
   3.7479338321885357`*^9}, {3.747935743003852*^9, 3.747935745435129*^9}, {
   3.747980226650998*^9, 3.747980227430276*^9}, {3.74819373389242*^9, 
   3.748193736020507*^9}, {3.74955561414298*^9, 3.749555616431025*^9}, {
   3.749555735339233*^9, 3.749555770441473*^9}, {3.749563199290225*^9, 
   3.7495632002283087`*^9}, {3.749582016224145*^9, 3.7495820173360643`*^9}, 
   3.7496465801174393`*^9, 3.749655737246266*^9, {3.749676660140545*^9, 
   3.7496766705804367`*^9}, 3.749707823586372*^9, 3.749831719792158*^9, {
   3.749835469145554*^9, 3.749835470031209*^9}, {3.749835778375493*^9, 
   3.7498357790711718`*^9}, {3.749835993135953*^9, 3.749835993954405*^9}, 
   3.749851496421886*^9, {3.754139882828698*^9, 3.754139908225337*^9}, {
   3.754139946081867*^9, 3.754139952671867*^9}, {3.757804695535633*^9, 
   3.7578046959247437`*^9}, 3.757805065025539*^9, {3.7582100445633097`*^9, 
   3.758210045526239*^9}, 3.7589764849534607`*^9, 3.762090307203218*^9}],

Cell[BoxData[
 RowBox[{
  RowBox[{"Block", "[", 
   RowBox[{
    RowBox[{"{", "data", "}"}], ",", 
    RowBox[{
     RowBox[{"data", "=", 
      RowBox[{"ToExpression", "[", 
       RowBox[{"Import", "[", "\"\<pots/perp/pT0/ImVcpT0.dat\>\"", "]"}], 
       "]"}]}], ";", 
     RowBox[{"data", "=", 
      RowBox[{"Append", "[", 
       RowBox[{"data", ",", 
        RowBox[{"{", 
         RowBox[{"20000", ",", 
          RowBox[{"data", "[", 
           RowBox[{"[", 
            RowBox[{
             RowBox[{"-", "1"}], ",", "2"}], "]"}], "]"}]}], "}"}]}], "]"}]}],
      ";", 
     RowBox[{"ImVc", "=", 
      RowBox[{"Interpolation", "[", 
       RowBox[{"data", ",", 
        RowBox[{"InterpolationOrder", "\[Rule]", "1"}]}], "]"}]}]}]}], "]"}], 
  ";"}]], "Input",
 CellChangeTimes->{{3.746273043134018*^9, 3.7462731014710627`*^9}, {
   3.746273301287758*^9, 3.746273304882516*^9}, {3.746273761020192*^9, 
   3.746273876685227*^9}, {3.7462744640649643`*^9, 3.746274465417224*^9}, {
   3.746349735495809*^9, 3.746349736436407*^9}, 3.746349774584558*^9, {
   3.747480794219287*^9, 3.747480812144912*^9}, {3.747546497327075*^9, 
   3.747546502341762*^9}, {3.7477311702504187`*^9, 3.747731172776266*^9}, {
   3.747933590766211*^9, 3.7479335908605967`*^9}, {3.747933831643701*^9, 
   3.7479338321885357`*^9}, {3.747935743003852*^9, 3.747935745435129*^9}, {
   3.747980226650998*^9, 3.747980227430276*^9}, {3.74819373389242*^9, 
   3.748193736020507*^9}, {3.74955561414298*^9, 3.749555616431025*^9}, {
   3.749555735339233*^9, 3.749555770441473*^9}, {3.749563199290225*^9, 
   3.7495632002283087`*^9}, {3.749582016224145*^9, 3.7495820173360643`*^9}, 
   3.7496465801174393`*^9, 3.749655737246266*^9, {3.749676660140545*^9, 
   3.7496766705804367`*^9}, 3.749707823586372*^9, 3.749831719792158*^9, {
   3.749835469145554*^9, 3.749835470031209*^9}, {3.749835778375493*^9, 
   3.7498357790711718`*^9}, {3.749835993135953*^9, 3.749835993954405*^9}, 
   3.749851496421886*^9, {3.754139882828698*^9, 3.754139908225337*^9}, {
   3.75413995558912*^9, 3.754139971121129*^9}, {3.757804698154974*^9, 
   3.757804698504745*^9}, 3.757805066336375*^9, {3.758210049695629*^9, 
   3.758210050646735*^9}, 3.758976484963566*^9, 3.762090320126115*^9}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Plot", "[", 
  RowBox[{
   RowBox[{
    RowBox[{"ReVs", "[", 
     FractionBox["r", "0.197"], "]"}], "+", 
    RowBox[{"ReVc", "[", 
     FractionBox["r", "0.197"], "]"}]}], ",", 
   RowBox[{"{", 
    RowBox[{"r", ",", "0", ",", "30"}], "}"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.754139985269348*^9, 3.7541400185617247`*^9}}],

Cell[BoxData[
 GraphicsBox[{{{}, {}, 
    TagBox[
     {RGBColor[0.368417, 0.506779, 0.709798], AbsoluteThickness[1.6], Opacity[
      1.], LineBox[CompressedData["
1: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
       "]]},
     Annotation[#, "Charting`Private`Tag$1120#1"]& ]}, {}, {}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{0, 0.7839962314226427},
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  ImagePadding->All,
  Method->{
   "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
    AbsolutePointSize[6], "ScalingFunctions" -> None, 
    "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
        (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
         Part[#, 1]], 
        (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
         Part[#, 2]]}& ), "CopiedValueFunction" -> ({
        (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
         Part[#, 1]], 
        (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
         Part[#, 2]]}& )}},
  PlotRange->{{0, 30}, {0.7839962314226427, 1.79057223809367}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.05], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{{3.7541399964152412`*^9, 3.754140019098102*^9}, 
   3.7541466044779463`*^9, 3.7578047048121357`*^9, 3.762090198243705*^9, 
   3.762090329171908*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Plot", "[", 
  RowBox[{
   RowBox[{
    RowBox[{"ImVc", "[", 
     FractionBox["r", "0.197"], "]"}], "+", 
    RowBox[{"ImVs", "[", 
     FractionBox["r", "0.197"], "]"}]}], ",", 
   RowBox[{"{", 
    RowBox[{"r", ",", "0", ",", "30"}], "}"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.754140027954275*^9, 3.754140032501*^9}, {
  3.7541466155326023`*^9, 3.7541466254445457`*^9}}],

Cell[BoxData[
 TemplateBox[{
  "Append","normal",
   "\"Nonatomic expression expected at position \
\\!\\(\\*RowBox[{\\\"1\\\"}]\\) in \\!\\(\\*RowBox[{\\\"Append\\\", \
\\\"[\\\", RowBox[{\\\"$Failed\\\", \\\",\\\", RowBox[{\\\"{\\\", \
RowBox[{\\\"20000.`\\\", \\\",\\\", RowBox[{\\\"$Failed\\\", \\\"\
\[LeftDoubleBracket]\\\", RowBox[{RowBox[{\\\"-\\\", \\\"1\\\"}], \\\",\\\", \
\\\"2\\\"}], \\\"\[RightDoubleBracket]\\\"}]}], \\\"}\\\"}]}], \
\\\"]\\\"}]\\).\"",2,48,27,29416251058776910475,"Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.7620901995952787`*^9}],

Cell[BoxData[
 TemplateBox[{
  "Interpolation","innd",
   "\"First argument in \\!\\(\\*RowBox[{\\\"Append\\\", \\\"[\\\", \
RowBox[{\\\"$Failed\\\", \\\",\\\", RowBox[{\\\"{\\\", \
RowBox[{\\\"20000.`\\\", \\\",\\\", RowBox[{\\\"$Failed\\\", \\\"\
\[LeftDoubleBracket]\\\", RowBox[{RowBox[{\\\"-\\\", \\\"1\\\"}], \\\",\\\", \
\\\"2\\\"}], \\\"\[RightDoubleBracket]\\\"}]}], \\\"}\\\"}]}], \\\"]\\\"}]\\) \
does not contain a list of data and coordinates.\"",2,48,28,
   29416251058776910475,"Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.7620901996570263`*^9}],

Cell[BoxData[
 TemplateBox[{
  "Append","normal",
   "\"Nonatomic expression expected at position \
\\!\\(\\*RowBox[{\\\"1\\\"}]\\) in \\!\\(\\*RowBox[{\\\"Append\\\", \
\\\"[\\\", RowBox[{\\\"$Failed\\\", \\\",\\\", RowBox[{\\\"{\\\", \
RowBox[{\\\"20000.`\\\", \\\",\\\", RowBox[{\\\"$Failed\\\", \\\"\
\[LeftDoubleBracket]\\\", RowBox[{RowBox[{\\\"-\\\", \\\"1\\\"}], \\\",\\\", \
\\\"2\\\"}], \\\"\[RightDoubleBracket]\\\"}]}], \\\"}\\\"}]}], \
\\\"]\\\"}]\\).\"",2,48,29,29416251058776910475,"Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.7620901997250023`*^9}],

Cell[BoxData[
 TemplateBox[{
  "Interpolation","innd",
   "\"First argument in \\!\\(\\*RowBox[{\\\"Append\\\", \\\"[\\\", \
RowBox[{\\\"$Failed\\\", \\\",\\\", RowBox[{\\\"{\\\", \
RowBox[{\\\"20000.`\\\", \\\",\\\", RowBox[{\\\"$Failed\\\", \\\"\
\[LeftDoubleBracket]\\\", RowBox[{RowBox[{\\\"-\\\", \\\"1\\\"}], \\\",\\\", \
\\\"2\\\"}], \\\"\[RightDoubleBracket]\\\"}]}], \\\"}\\\"}]}], \\\"]\\\"}]\\) \
does not contain a list of data and coordinates.\"",2,48,30,
   29416251058776910475,"Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.762090199784925*^9}],

Cell[BoxData[
 TemplateBox[{
  "Append","normal",
   "\"Nonatomic expression expected at position \
\\!\\(\\*RowBox[{\\\"1\\\"}]\\) in \\!\\(\\*RowBox[{\\\"Append\\\", \
\\\"[\\\", RowBox[{\\\"$Failed\\\", \\\",\\\", RowBox[{\\\"{\\\", \
RowBox[{\\\"20000.`\\\", \\\",\\\", RowBox[{\\\"$Failed\\\", \\\"\
\[LeftDoubleBracket]\\\", RowBox[{RowBox[{\\\"-\\\", \\\"1\\\"}], \\\",\\\", \
\\\"2\\\"}], \\\"\[RightDoubleBracket]\\\"}]}], \\\"}\\\"}]}], \
\\\"]\\\"}]\\).\"",2,48,31,29416251058776910475,"Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.762090199844996*^9}],

Cell[BoxData[
 TemplateBox[{
  "General","stop",
   "\"Further output of \\!\\(\\*StyleBox[RowBox[{\\\"Append\\\", \\\"::\\\", \
\\\"normal\\\"}], \\\"MessageName\\\"]\\) will be suppressed during this \
calculation.\"",2,48,32,29416251058776910475,"Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.762090200847926*^9}],

Cell[BoxData[
 TemplateBox[{
  "Interpolation","innd",
   "\"First argument in \\!\\(\\*RowBox[{\\\"Append\\\", \\\"[\\\", \
RowBox[{\\\"$Failed\\\", \\\",\\\", RowBox[{\\\"{\\\", \
RowBox[{\\\"20000.`\\\", \\\",\\\", RowBox[{\\\"$Failed\\\", \\\"\
\[LeftDoubleBracket]\\\", RowBox[{RowBox[{\\\"-\\\", \\\"1\\\"}], \\\",\\\", \
\\\"2\\\"}], \\\"\[RightDoubleBracket]\\\"}]}], \\\"}\\\"}]}], \\\"]\\\"}]\\) \
does not contain a list of data and coordinates.\"",2,48,33,
   29416251058776910475,"Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.762090200913107*^9}],

Cell[BoxData[
 TemplateBox[{
  "General","stop",
   "\"Further output of \\!\\(\\*StyleBox[RowBox[{\\\"Interpolation\\\", \
\\\"::\\\", \\\"innd\\\"}], \\\"MessageName\\\"]\\) will be suppressed during \
this calculation.\"",2,48,34,29416251058776910475,"Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.762090200981221*^9}],

Cell[BoxData[
 GraphicsBox[{{}, {}, {}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{0, 0},
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  ImagePadding->All,
  ImageSize->{374.7578125, Automatic},
  Method->{
   "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
    AbsolutePointSize[6], "ScalingFunctions" -> None, 
    "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
        (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
         Part[#, 1]], 
        (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
         Part[#, 2]]}& ), "CopiedValueFunction" -> ({
        (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
         Part[#, 1]], 
        (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
         Part[#, 2]]}& )}},
  PlotRange->{{0, 30}, {0., 0.}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.05], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{
  3.75414003307718*^9, {3.754146607120152*^9, 3.7541466257101517`*^9}, 
   3.7578047068111134`*^9, 3.7620902010422077`*^9}]
}, Open  ]],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"ParallelSow", "[", "expr_", "]"}], ":=", 
   RowBox[{"Sow", "[", "expr", "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"SetSharedFunction", "[", "ParallelSow", "]"}], ";"}]}], "Input"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"\[Delta]", "=", 
    FractionBox["1", "100"]}], ";"}], " "}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"d\[Omega]", "=", "0.0002"}], ";"}]}], "Input",
 CellChangeTimes->{{3.74228955582731*^9, 3.742289558498271*^9}, {
  3.742298662461986*^9, 3.742298684870023*^9}, {3.742298729927827*^9, 
  3.7422987328788557`*^9}, {3.742299426624055*^9, 3.742299459795083*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"pT", "=", "0"}], ";"}]], "Input",
 CellChangeTimes->{{3.7582101475547533`*^9, 3.758210151228115*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"swaveccspectra", "[", "ang_", "]"}], ":=", 
   RowBox[{"Block", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{"\[Alpha]", "=", 
        RowBox[{"\[Alpha]cont", "[", 
         RowBox[{"[", "1", "]"}], "]"}]}], ",", 
       RowBox[{"c", "=", 
        RowBox[{"ccont", "[", 
         RowBox[{"[", "1", "]"}], "]"}]}], ",", 
       RowBox[{"M", "=", "Mc"}], ",", 
       RowBox[{"l", "=", "0"}], ",", 
       RowBox[{"\[Omega]min", "=", 
        RowBox[{"-", "1"}]}], ",", 
       RowBox[{"\[Omega]max", "=", "2"}], ",", "ccss", ",", "inf", ",", 
       "\[Rho]table", ",", "\[Omega]", ",", "rhow", ",", "gr0", ",", "s1", 
       ",", "V"}], "}"}], ",", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{
       RowBox[{"V", "[", "r_", "]"}], ":=", 
       RowBox[{
        RowBox[{"ReVs", "[", "r", "]"}], "+", 
        RowBox[{"ReVc", "[", "r", "]"}], "+", 
        RowBox[{"\[ImaginaryI]", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{"ImVs", "[", "r", "]"}], "+", 
           RowBox[{"ImVc", "[", "r", "]"}]}], ")"}]}]}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"\[Rho]table", "=", 
       RowBox[{
        RowBox[{
         RowBox[{
          RowBox[{"ParallelDo", "[", 
           RowBox[{
            RowBox[{
             RowBox[{"\[Omega]", "=", 
              RowBox[{"\[Omega]min", "+", 
               RowBox[{
                RowBox[{"(", 
                 RowBox[{"it", "-", "1"}], ")"}], " ", "d\[Omega]", " ", 
                "M"}]}]}], ";", 
             RowBox[{"inf", "=", 
              RowBox[{"40", "+", 
               RowBox[{"500", "*", "it", "*", "d\[Omega]"}]}]}], ";", 
             "\[IndentingNewLine]", 
             RowBox[{"s01", "=", 
              RowBox[{"NDSolve", "[", 
               RowBox[{
                RowBox[{"{", 
                 RowBox[{
                  RowBox[{
                   RowBox[{
                    RowBox[{
                    RowBox[{"(", 
                    RowBox[{"\[Omega]", "-", 
                    FractionBox[
                    RowBox[{"l", 
                    RowBox[{"(", 
                    RowBox[{"l", "+", "1"}], ")"}]}], 
                    RowBox[{"M", " ", 
                    SuperscriptBox["r", "2"]}]], "-", 
                    RowBox[{"Re", "[", 
                    RowBox[{"V", "[", "r", "]"}], "]"}], "+", 
                    RowBox[{"\[ImaginaryI]", " ", 
                    RowBox[{"Abs", "[", 
                    RowBox[{"Im", "[", 
                    RowBox[{"V", "[", "r", "]"}], "]"}], "]"}]}]}], ")"}], 
                    RowBox[{"gr", "[", "r", "]"}]}], "+", 
                    RowBox[{
                    FractionBox["1", "M"], 
                    RowBox[{
                    RowBox[{"gr", "''"}], "[", "r", "]"}]}]}], "\[Equal]", 
                   "0"}], ",", " ", "\[IndentingNewLine]", 
                  RowBox[{
                   RowBox[{
                    RowBox[{"gr", "'"}], "[", "\[Delta]", "]"}], "\[Equal]", 
                   RowBox[{
                    RowBox[{"(", 
                    RowBox[{"\[Alpha]", " ", "M"}], ")"}], "-", 
                    RowBox[{"\[Delta]", 
                    SuperscriptBox[
                    RowBox[{"(", 
                    RowBox[{"M", " ", "\[Alpha]"}], ")"}], "2"]}]}]}], ",", 
                  "\[IndentingNewLine]", " ", 
                  RowBox[{
                   RowBox[{"gr", "[", "\[Delta]", "]"}], "\[Equal]", 
                   RowBox[{
                    RowBox[{"\[Delta]", 
                    RowBox[{"(", 
                    RowBox[{"\[Alpha]", " ", "M"}], ")"}]}], "-", " ", 
                    RowBox[{
                    FractionBox["1", "2"], 
                    SuperscriptBox["\[Delta]", "2"], 
                    SuperscriptBox[
                    RowBox[{"(", 
                    RowBox[{"\[Alpha]", " ", "M"}], ")"}], "2"]}]}]}]}], 
                 "}"}], ",", "gr", ",", 
                RowBox[{"{", 
                 RowBox[{"r", ",", "\[Delta]", ",", "inf"}], "}"}]}], "]"}]}],
              ";", "\[IndentingNewLine]", 
             RowBox[{
              RowBox[{"gr0", "[", "r_", "]"}], "=", 
              SubscriptBox[
               RowBox[{"(", 
                RowBox[{
                 RowBox[{"gr", "[", "r", "]"}], "/.", "s01"}], ")"}], 
               RowBox[{
               "\[LeftDoubleBracket]", "1", "\[RightDoubleBracket]"}]]}], ";",
              "\[IndentingNewLine]", 
             RowBox[{"s1", "=", 
              RowBox[{"NDSolve", "[", 
               RowBox[{
                RowBox[{"{", 
                 RowBox[{
                  RowBox[{
                   RowBox[{
                    RowBox[{"rho", "'"}], "[", "x", "]"}], "\[Equal]", 
                   RowBox[{
                    RowBox[{"-", 
                    FractionBox[
                    RowBox[{" ", 
                    RowBox[{"6", " ", "Nc", " ", 
                    SuperscriptBox["M", "2"], " ", "\[Alpha]"}]}], 
                    RowBox[{"4", "\[Pi]"}]]}], 
                    RowBox[{"Im", "[", 
                    FractionBox["1", 
                    SuperscriptBox[
                    RowBox[{"(", 
                    RowBox[{"gr0", "[", "x", "]"}], ")"}], "2"]], 
                    RowBox[{"(*", 
                    RowBox[{"+", 
                    FractionBox["36", 
                    SuperscriptBox[
                    RowBox[{"(", 
                    RowBox[{"gr1", "[", "x", "]"}], ")"}], "2"]]}], "*)"}], 
                    "]"}]}]}], ",", 
                  RowBox[{
                   RowBox[{"rho", "[", "\[Delta]", "]"}], "\[Equal]", "0"}]}],
                  "}"}], ",", "rho", ",", 
                RowBox[{"{", 
                 RowBox[{"x", ",", "\[Delta]", ",", "inf"}], "}"}]}], "]"}]}],
              ";", "\[IndentingNewLine]", 
             RowBox[{
              RowBox[{"rhow", "[", "r_", "]"}], "=", 
              SubscriptBox[
               RowBox[{"(", 
                RowBox[{
                 RowBox[{"rho", "[", "r", "]"}], "/.", "s1"}], ")"}], 
               RowBox[{
               "\[LeftDoubleBracket]", "1", "\[RightDoubleBracket]"}]]}], ";",
              "\[IndentingNewLine]", 
             RowBox[{"ParallelSow", "[", 
              RowBox[{"{", 
               RowBox[{
                RowBox[{"\[Omega]", "+", 
                 RowBox[{"2", "M"}]}], ",", 
                RowBox[{"rhow", "[", "inf", "]"}]}], "}"}], "]"}]}], ",", 
            RowBox[{"{", 
             RowBox[{"it", ",", "1", ",", 
              FractionBox[
               RowBox[{"\[Omega]max", "-", "\[Omega]min"}], 
               RowBox[{"d\[Omega]", " ", "M"}]]}], "}"}]}], "]"}], "//", 
          "Reap"}], "//", "Last"}], "//", "First"}]}], ";", 
      "\[IndentingNewLine]", "\[IndentingNewLine]", 
      RowBox[{"ccss", "=", 
       RowBox[{"ParallelTable", "[", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{
           RowBox[{"\[Rho]table", "[", 
            RowBox[{"[", 
             RowBox[{"i", ",", "1"}], "]"}], "]"}], ",", 
           FractionBox[
            RowBox[{"-", 
             RowBox[{"\[Rho]table", "[", 
              RowBox[{"[", 
               RowBox[{"i", ",", "2"}], "]"}], "]"}]}], 
            SuperscriptBox[
             RowBox[{"\[Rho]table", "[", 
              RowBox[{"[", 
               RowBox[{"i", ",", "1"}], "]"}], "]"}], "2"]]}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"i", ",", "1", ",", 
           RowBox[{"Length", "[", "\[Rho]table", "]"}]}], "}"}]}], "]"}]}], 
      ";", "\[IndentingNewLine]", 
      RowBox[{"Export", "[", 
       RowBox[{
        RowBox[{"\"\<cc/perp/pT\>\"", "<>", 
         RowBox[{"ToString", "[", "pT", "]"}], "<>", "\"\</swccpT\>\"", "<>", 
         
         RowBox[{"ToString", "[", "pT", "]"}], "<>", 
         "\"\<spectraJpsi.dat\>\""}], ",", 
        RowBox[{"Sort", "[", "ccss", "]"}]}], "]"}], ";"}]}], 
    "\[IndentingNewLine]", "]"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.724397604460712*^9, 3.724397621092863*^9}, {
   3.724398705481254*^9, 3.724398705798315*^9}, {3.72440624506767*^9, 
   3.7244062457361317`*^9}, {3.7244423136168756`*^9, 3.724442340980721*^9}, {
   3.7244423712224417`*^9, 3.724442377050403*^9}, {3.724442465925974*^9, 
   3.724442518695669*^9}, {3.7244426255599117`*^9, 3.724442639076613*^9}, {
   3.724443729204352*^9, 3.724443729749022*^9}, {3.724443881656342*^9, 
   3.7244438842850027`*^9}, 3.725261621115453*^9, 3.72526166634648*^9, {
   3.725271550289123*^9, 3.7252715504130163`*^9}, {3.725271609402791*^9, 
   3.7252716095188437`*^9}, {3.7252717762497*^9, 3.725271782362536*^9}, {
   3.725271824500347*^9, 3.725271826035269*^9}, {3.725271857701564*^9, 
   3.725271858192912*^9}, {3.725271928114049*^9, 3.7252719496618757`*^9}, {
   3.725271981807578*^9, 3.725271987122878*^9}, {3.725273718896678*^9, 
   3.72527377251343*^9}, {3.725273963159111*^9, 3.725273966198284*^9}, {
   3.725364382855975*^9, 3.725364384697238*^9}, {3.725364432753635*^9, 
   3.725364433681274*^9}, {3.725364595553596*^9, 3.725364595868292*^9}, {
   3.725364661141473*^9, 3.725364661301785*^9}, {3.725365068510941*^9, 
   3.7253650691073112`*^9}, {3.7256202924505177`*^9, 
   3.7256202938854313`*^9}, {3.7256265502253428`*^9, 3.725626559021003*^9}, {
   3.725798091627001*^9, 3.725798108963685*^9}, {3.725798150844287*^9, 
   3.725798156038417*^9}, {3.726312422974263*^9, 3.726312439922279*^9}, {
   3.726313778060986*^9, 3.726313794010726*^9}, {3.726313854887352*^9, 
   3.726313855417986*^9}, {3.726377533478507*^9, 3.726377535012369*^9}, {
   3.726379310729051*^9, 3.726379315935656*^9}, {3.726379351066524*^9, 
   3.7263793563685627`*^9}, 3.7263814533362722`*^9, {3.726468979312665*^9, 
   3.726469044993416*^9}, {3.726564279540083*^9, 3.726564288774165*^9}, {
   3.726564330005303*^9, 3.726564342424973*^9}, {3.7265645007454853`*^9, 
   3.7265645054085903`*^9}, 3.726565145221386*^9, {3.726836923420138*^9, 
   3.726836925204391*^9}, {3.7268417497448387`*^9, 3.726841749854889*^9}, {
   3.727357927216405*^9, 3.7273579306359463`*^9}, 3.72735811608375*^9, {
   3.7273582875862513`*^9, 3.727358296888235*^9}, {3.727520051444908*^9, 
   3.7275200665503483`*^9}, {3.727539483513708*^9, 3.72753949210455*^9}, {
   3.7275398377710333`*^9, 3.727539869000495*^9}, {3.7275879806550293`*^9, 
   3.727587984698921*^9}, {3.727606150288821*^9, 3.727606150994812*^9}, {
   3.728932814314426*^9, 3.728932860160056*^9}, 3.7289333254815903`*^9, 
   3.7299208725344887`*^9, {3.730007040539275*^9, 3.7300070509717903`*^9}, {
   3.730007357183831*^9, 3.7300073662633142`*^9}, {3.7331192829046183`*^9, 
   3.733119300197537*^9}, {3.733120717385792*^9, 3.733120717697629*^9}, {
   3.7331222711038847`*^9, 3.733122272703622*^9}, {3.733211538849382*^9, 
   3.7332115515038567`*^9}, {3.7332289443370447`*^9, 
   3.7332289447842827`*^9}, {3.742215948846467*^9, 3.742215959437643*^9}, {
   3.742216025305929*^9, 3.742216093257207*^9}, {3.7422172078868933`*^9, 
   3.7422172275906973`*^9}, 3.74221727383118*^9, {3.742217585069265*^9, 
   3.742217591716959*^9}, {3.7422176229823923`*^9, 3.742217653035615*^9}, {
   3.742269341112874*^9, 3.742269371527761*^9}, 3.742275694936644*^9, {
   3.742289467062118*^9, 3.742289486771803*^9}, {3.742289520463562*^9, 
   3.7422896027136*^9}, {3.7422896364561243`*^9, 3.74228964347093*^9}, {
   3.742289678232355*^9, 3.742289708137301*^9}, {3.7422897506101*^9, 
   3.7422897587096577`*^9}, {3.7422920316457787`*^9, 3.742292034487727*^9}, 
   3.742292186682322*^9, {3.742292303240778*^9, 3.742292303483521*^9}, {
   3.742292362481593*^9, 3.742292372544711*^9}, {3.742292408813004*^9, 
   3.742292447857381*^9}, {3.7422968206130743`*^9, 3.742296843480155*^9}, {
   3.7422970160890417`*^9, 3.742297024417719*^9}, {3.742297074890059*^9, 
   3.74229711910509*^9}, {3.7422973083294992`*^9, 3.742297309298213*^9}, {
   3.742297354168077*^9, 3.742297359897736*^9}, {3.742297415918168*^9, 
   3.7422974232482452`*^9}, {3.742297467739311*^9, 3.742297612963316*^9}, {
   3.7422977860232887`*^9, 3.7422977903561068`*^9}, {3.74229798181938*^9, 
   3.742298023677857*^9}, {3.7422980561712513`*^9, 3.74229805925661*^9}, 
   3.742298106308654*^9, {3.742300221204397*^9, 3.742300269720365*^9}, {
   3.742300416216001*^9, 3.742300416917211*^9}, {3.742300536315893*^9, 
   3.742300546756034*^9}, {3.742300626604027*^9, 3.742300638323701*^9}, {
   3.7423006769018583`*^9, 3.7423007163572683`*^9}, {3.7435037431402884`*^9, 
   3.743503799356997*^9}, {3.7435038425347443`*^9, 3.743503908279688*^9}, {
   3.7435046316079397`*^9, 3.743504651390107*^9}, 3.745326235801956*^9, {
   3.745577559422867*^9, 3.745577586968154*^9}, {3.745580528080043*^9, 
   3.74558059234057*^9}, {3.745580690187639*^9, 3.745580708875317*^9}, {
   3.745642437900836*^9, 3.745642442612089*^9}, {3.745642493682754*^9, 
   3.7456425382868767`*^9}, {3.74627352599397*^9, 3.7462735295622587`*^9}, {
   3.7462736076039886`*^9, 3.7462736659082212`*^9}, {3.746273697621533*^9, 
   3.746273736166617*^9}, {3.7462741385800743`*^9, 3.746274142868767*^9}, {
   3.746274228830742*^9, 3.746274248310967*^9}, {3.7462743303367853`*^9, 
   3.7462743498486643`*^9}, {3.746274405954569*^9, 3.746274407722952*^9}, {
   3.74627803681008*^9, 3.746278037153131*^9}, {3.747887414650214*^9, 
   3.747887423938949*^9}, {3.7481674233164043`*^9, 3.7481674506752663`*^9}, {
   3.749554891486802*^9, 3.749554922961441*^9}, {3.749555089233777*^9, 
   3.749555119969118*^9}, {3.749563528737471*^9, 3.7495636549318132`*^9}, {
   3.749582048761517*^9, 3.749582052529887*^9}, 3.749646995985099*^9, 
   3.749655798300173*^9, 3.74970789643521*^9, {3.75414665053309*^9, 
   3.754146706624938*^9}, {3.757807031207905*^9, 3.757807040656314*^9}, {
   3.757807702967629*^9, 3.7578077038242903`*^9}, {3.7578078882965317`*^9, 
   3.757807902315524*^9}, {3.75780798833467*^9, 3.7578079890797157`*^9}, {
   3.757808051229706*^9, 3.757808087763713*^9}, {3.757810418692294*^9, 
   3.757810421517911*^9}, 3.757886527824544*^9, {3.7582101069685717`*^9, 
   3.758210139938016*^9}, 3.758976484977076*^9}],

Cell[BoxData[
 RowBox[{"swaveccspectra", "[", "0", "]"}]], "Input",
 CellChangeTimes->{{3.758210161218617*^9, 3.7582101678789587`*^9}}]
}, Closed]],

Cell[CellGroupData[{

Cell["pT =/= 0", "Subsection",
 CellChangeTimes->{{3.7578047134492683`*^9, 3.7578047416705647`*^9}, {
  3.75780499622071*^9, 3.7578049963390636`*^9}, {3.75780669430044*^9, 
  3.757806695337428*^9}, {3.757806984086646*^9, 3.757806985529924*^9}}],

Cell[CellGroupData[{

Cell["Funcs", "Subsubsection",
 CellChangeTimes->{{3.757807926662183*^9, 3.757807934194962*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"PotsIn", "[", "pT1_", "]"}], ":=", 
  RowBox[{"Block", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"pT", "=", "pT1"}], "}"}], ",", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"ReVs", "=", 
      RowBox[{"ConstantArray", "[", 
       RowBox[{"0", ",", "51"}], "]"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"ReVc", "=", 
      RowBox[{"ConstantArray", "[", 
       RowBox[{"0", ",", "51"}], "]"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"ImVc", "=", 
      RowBox[{"ConstantArray", "[", 
       RowBox[{"0", ",", "51"}], "]"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"ImVs", "=", 
      RowBox[{"ConstantArray", "[", 
       RowBox[{"0", ",", "51"}], "]"}]}], ";", "\n", 
     RowBox[{
      RowBox[{"Do", "[", 
       RowBox[{
        RowBox[{
         RowBox[{"Block", "[", 
          RowBox[{
           RowBox[{"{", "data", "}"}], ",", 
           RowBox[{
            RowBox[{"data", "=", 
             RowBox[{"ToExpression", "[", 
              RowBox[{"Import", "[", 
               RowBox[{"\"\<pots/perp/pT\>\"", "<>", 
                RowBox[{"ToString", "[", "pT", "]"}], "<>", "\"\</ReVspT\>\"",
                 "<>", 
                RowBox[{"ToString", "[", "pT", "]"}], "<>", "\"\<ang\>\"", "<>", 
                RowBox[{"ToString", "[", "i", "]"}], "<>", 
                "\"\<Jpsi.dat\>\""}], "]"}], "]"}]}], ";", 
            RowBox[{"data", "=", 
             RowBox[{"Append", "[", 
              RowBox[{"data", ",", 
               RowBox[{"{", 
                RowBox[{"20000", ",", 
                 RowBox[{"data", "[", 
                  RowBox[{"[", 
                   RowBox[{
                    RowBox[{"-", "1"}], ",", "2"}], "]"}], "]"}]}], "}"}]}], 
              "]"}]}], ";", 
            RowBox[{
             RowBox[{"ReVs", "[", 
              RowBox[{"[", "i", "]"}], "]"}], "=", 
             RowBox[{"Interpolation", "[", 
              RowBox[{"data", ",", 
               RowBox[{"InterpolationOrder", "\[Rule]", "1"}]}], "]"}]}]}]}], 
          "]"}], ";"}], ",", 
        RowBox[{"{", 
         RowBox[{"i", ",", "1", ",", "51"}], "}"}]}], "]"}], "\n", 
      RowBox[{"Do", "[", 
       RowBox[{
        RowBox[{
         RowBox[{"Block", "[", 
          RowBox[{
           RowBox[{"{", "data", "}"}], ",", 
           RowBox[{
            RowBox[{"data", "=", 
             RowBox[{"ToExpression", "[", 
              RowBox[{"Import", "[", 
               RowBox[{"\"\<pots/perp/pT\>\"", "<>", 
                RowBox[{"ToString", "[", "pT", "]"}], "<>", "\"\</ReVcpT\>\"",
                 "<>", 
                RowBox[{"ToString", "[", "pT", "]"}], "<>", "\"\<ang\>\"", "<>", 
                RowBox[{"ToString", "[", "i", "]"}], "<>", 
                "\"\<Jpsi.dat\>\""}], "]"}], "]"}]}], ";", 
            RowBox[{"data", "=", 
             RowBox[{"Append", "[", 
              RowBox[{"data", ",", 
               RowBox[{"{", 
                RowBox[{"20000", ",", 
                 RowBox[{"data", "[", 
                  RowBox[{"[", 
                   RowBox[{
                    RowBox[{"-", "1"}], ",", "2"}], "]"}], "]"}]}], "}"}]}], 
              "]"}]}], ";", 
            RowBox[{
             RowBox[{"ReVc", "[", 
              RowBox[{"[", "i", "]"}], "]"}], "=", 
             RowBox[{"Interpolation", "[", 
              RowBox[{"data", ",", 
               RowBox[{"InterpolationOrder", "\[Rule]", "1"}]}], "]"}]}]}]}], 
          "]"}], ";"}], ",", 
        RowBox[{"{", 
         RowBox[{"i", ",", "1", ",", "51"}], "}"}]}], "]"}], "\n", 
      RowBox[{"Do", "[", 
       RowBox[{
        RowBox[{
         RowBox[{"Block", "[", 
          RowBox[{
           RowBox[{"{", "data", "}"}], ",", 
           RowBox[{
            RowBox[{"data", "=", 
             RowBox[{"ToExpression", "[", 
              RowBox[{"Import", "[", 
               RowBox[{"\"\<pots/perp/pT\>\"", "<>", 
                RowBox[{"ToString", "[", "pT", "]"}], "<>", "\"\</ImVspT\>\"",
                 "<>", 
                RowBox[{"ToString", "[", "pT", "]"}], "<>", "\"\<ang\>\"", "<>", 
                RowBox[{"ToString", "[", "i", "]"}], "<>", 
                "\"\<Jpsi.dat\>\""}], "]"}], "]"}]}], ";", 
            RowBox[{"data", "=", 
             RowBox[{"Append", "[", 
              RowBox[{"data", ",", 
               RowBox[{"{", 
                RowBox[{"20000", ",", 
                 RowBox[{"data", "[", 
                  RowBox[{"[", 
                   RowBox[{
                    RowBox[{"-", "1"}], ",", "2"}], "]"}], "]"}]}], "}"}]}], 
              "]"}]}], ";", 
            RowBox[{
             RowBox[{"ImVs", "[", 
              RowBox[{"[", "i", "]"}], "]"}], "=", 
             RowBox[{"Interpolation", "[", 
              RowBox[{"data", ",", 
               RowBox[{"InterpolationOrder", "\[Rule]", "1"}]}], "]"}]}]}]}], 
          "]"}], ";"}], ",", 
        RowBox[{"{", 
         RowBox[{"i", ",", "1", ",", "51"}], "}"}]}], "]"}], "\n", 
      RowBox[{"Do", "[", 
       RowBox[{
        RowBox[{
         RowBox[{"Block", "[", 
          RowBox[{
           RowBox[{"{", "data", "}"}], ",", 
           RowBox[{
            RowBox[{"data", "=", 
             RowBox[{"ToExpression", "[", 
              RowBox[{"Import", "[", 
               RowBox[{"\"\<pots/perp/pT\>\"", "<>", 
                RowBox[{"ToString", "[", "pT", "]"}], "<>", "\"\</ImVcpT\>\"",
                 "<>", 
                RowBox[{"ToString", "[", "pT", "]"}], "<>", "\"\<ang\>\"", "<>", 
                RowBox[{"ToString", "[", "i", "]"}], "<>", 
                "\"\<Jpsi.dat\>\""}], "]"}], "]"}]}], ";", 
            RowBox[{"data", "=", 
             RowBox[{"Append", "[", 
              RowBox[{"data", ",", 
               RowBox[{"{", 
                RowBox[{"20000", ",", 
                 RowBox[{"data", "[", 
                  RowBox[{"[", 
                   RowBox[{
                    RowBox[{"-", "1"}], ",", "2"}], "]"}], "]"}]}], "}"}]}], 
              "]"}]}], ";", 
            RowBox[{
             RowBox[{"ImVc", "[", 
              RowBox[{"[", "i", "]"}], "]"}], "=", 
             RowBox[{"Interpolation", "[", 
              RowBox[{"data", ",", 
               RowBox[{"InterpolationOrder", "\[Rule]", "1"}]}], "]"}]}]}]}], 
          "]"}], ";"}], ",", 
        RowBox[{"{", 
         RowBox[{"i", ",", "1", ",", "51"}], "}"}]}], "]"}]}], ";"}]}], 
   "]"}]}]], "Input",
 CellChangeTimes->{{3.757807732289682*^9, 3.7578077927944403`*^9}, {
  3.7578079676897383`*^9, 3.757807971862171*^9}, {3.758976484989546*^9, 
  3.758976485004064*^9}}],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"ParallelSow", "[", "expr_", "]"}], ":=", 
   RowBox[{"Sow", "[", "expr", "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"SetSharedFunction", "[", "ParallelSow", "]"}], ";"}]}], "Input"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"\[Delta]", "=", 
    FractionBox["1", "100"]}], ";"}], " "}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"d\[Omega]", "=", "0.0002"}], ";"}]}], "Input",
 CellChangeTimes->{{3.74228955582731*^9, 3.742289558498271*^9}, {
  3.742298662461986*^9, 3.742298684870023*^9}, {3.742298729927827*^9, 
  3.7422987328788557`*^9}, {3.742299426624055*^9, 3.742299459795083*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"swaveccspectra", "[", "ang_", "]"}], ":=", 
   RowBox[{"Block", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{"\[Alpha]", "=", 
        RowBox[{"\[Alpha]cont", "[", 
         RowBox[{"[", "1", "]"}], "]"}]}], ",", 
       RowBox[{"c", "=", 
        RowBox[{"ccont", "[", 
         RowBox[{"[", "1", "]"}], "]"}]}], ",", 
       RowBox[{"M", "=", "Mc"}], ",", 
       RowBox[{"l", "=", "0"}], ",", 
       RowBox[{"\[Omega]min", "=", 
        RowBox[{"-", "1"}]}], ",", 
       RowBox[{"\[Omega]max", "=", "2"}], ",", "ccss", ",", "inf", ",", 
       "\[Rho]table", ",", "\[Omega]", ",", "rhow", ",", "gr0", ",", "s1", 
       ",", "V"}], "}"}], ",", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{
       RowBox[{"V", "[", "r_", "]"}], ":=", 
       RowBox[{
        RowBox[{
         RowBox[{"ReVs", "[", 
          RowBox[{"[", "ang", "]"}], "]"}], "[", "r", "]"}], "+", 
        RowBox[{
         RowBox[{"ReVc", "[", 
          RowBox[{"[", "ang", "]"}], "]"}], "[", "r", "]"}], "+", 
        RowBox[{"\[ImaginaryI]", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{
            RowBox[{"ImVs", "[", 
             RowBox[{"[", "ang", "]"}], "]"}], "[", "r", "]"}], "+", 
           RowBox[{
            RowBox[{"ImVc", "[", 
             RowBox[{"[", "ang", "]"}], "]"}], "[", "r", "]"}]}], ")"}]}]}]}],
       ";", "\[IndentingNewLine]", 
      RowBox[{"\[Rho]table", "=", 
       RowBox[{
        RowBox[{
         RowBox[{
          RowBox[{"ParallelDo", "[", 
           RowBox[{
            RowBox[{
             RowBox[{"\[Omega]", "=", 
              RowBox[{"\[Omega]min", "+", 
               RowBox[{
                RowBox[{"(", 
                 RowBox[{"it", "-", "1"}], ")"}], " ", "d\[Omega]", " ", 
                "M"}]}]}], ";", 
             RowBox[{"inf", "=", 
              RowBox[{"40", "+", 
               RowBox[{"500", "*", "it", "*", "d\[Omega]"}]}]}], ";", 
             "\[IndentingNewLine]", 
             RowBox[{"s01", "=", 
              RowBox[{"NDSolve", "[", 
               RowBox[{
                RowBox[{"{", 
                 RowBox[{
                  RowBox[{
                   RowBox[{
                    RowBox[{
                    RowBox[{"(", 
                    RowBox[{"\[Omega]", "-", 
                    FractionBox[
                    RowBox[{"l", 
                    RowBox[{"(", 
                    RowBox[{"l", "+", "1"}], ")"}]}], 
                    RowBox[{"M", " ", 
                    SuperscriptBox["r", "2"]}]], "-", 
                    RowBox[{"Re", "[", 
                    RowBox[{"V", "[", "r", "]"}], "]"}], "+", 
                    RowBox[{"\[ImaginaryI]", " ", 
                    RowBox[{"Abs", "[", 
                    RowBox[{"Im", "[", 
                    RowBox[{"V", "[", "r", "]"}], "]"}], "]"}]}]}], ")"}], 
                    RowBox[{"gr", "[", "r", "]"}]}], "+", 
                    RowBox[{
                    FractionBox["1", "M"], 
                    RowBox[{
                    RowBox[{"gr", "''"}], "[", "r", "]"}]}]}], "\[Equal]", 
                   "0"}], ",", " ", "\[IndentingNewLine]", 
                  RowBox[{
                   RowBox[{
                    RowBox[{"gr", "'"}], "[", "\[Delta]", "]"}], "\[Equal]", 
                   RowBox[{
                    RowBox[{"(", 
                    RowBox[{"\[Alpha]", " ", "M"}], ")"}], "-", 
                    RowBox[{"\[Delta]", 
                    SuperscriptBox[
                    RowBox[{"(", 
                    RowBox[{"M", " ", "\[Alpha]"}], ")"}], "2"]}]}]}], ",", 
                  "\[IndentingNewLine]", " ", 
                  RowBox[{
                   RowBox[{"gr", "[", "\[Delta]", "]"}], "\[Equal]", 
                   RowBox[{
                    RowBox[{"\[Delta]", 
                    RowBox[{"(", 
                    RowBox[{"\[Alpha]", " ", "M"}], ")"}]}], "-", " ", 
                    RowBox[{
                    FractionBox["1", "2"], 
                    SuperscriptBox["\[Delta]", "2"], 
                    SuperscriptBox[
                    RowBox[{"(", 
                    RowBox[{"\[Alpha]", " ", "M"}], ")"}], "2"]}]}]}]}], 
                 "}"}], ",", "gr", ",", 
                RowBox[{"{", 
                 RowBox[{"r", ",", "\[Delta]", ",", "inf"}], "}"}]}], "]"}]}],
              ";", "\[IndentingNewLine]", 
             RowBox[{
              RowBox[{"gr0", "[", "r_", "]"}], "=", 
              SubscriptBox[
               RowBox[{"(", 
                RowBox[{
                 RowBox[{"gr", "[", "r", "]"}], "/.", "s01"}], ")"}], 
               RowBox[{
               "\[LeftDoubleBracket]", "1", "\[RightDoubleBracket]"}]]}], ";",
              "\[IndentingNewLine]", 
             RowBox[{"s1", "=", 
              RowBox[{"NDSolve", "[", 
               RowBox[{
                RowBox[{"{", 
                 RowBox[{
                  RowBox[{
                   RowBox[{
                    RowBox[{"rho", "'"}], "[", "x", "]"}], "\[Equal]", 
                   RowBox[{
                    RowBox[{"-", 
                    FractionBox[
                    RowBox[{" ", 
                    RowBox[{"6", " ", "Nc", " ", 
                    SuperscriptBox["M", "2"], " ", "\[Alpha]"}]}], 
                    RowBox[{"4", "\[Pi]"}]]}], 
                    RowBox[{"Im", "[", 
                    FractionBox["1", 
                    SuperscriptBox[
                    RowBox[{"(", 
                    RowBox[{"gr0", "[", "x", "]"}], ")"}], "2"]], 
                    RowBox[{"(*", 
                    RowBox[{"+", 
                    FractionBox["36", 
                    SuperscriptBox[
                    RowBox[{"(", 
                    RowBox[{"gr1", "[", "x", "]"}], ")"}], "2"]]}], "*)"}], 
                    "]"}]}]}], ",", 
                  RowBox[{
                   RowBox[{"rho", "[", "\[Delta]", "]"}], "\[Equal]", "0"}]}],
                  "}"}], ",", "rho", ",", 
                RowBox[{"{", 
                 RowBox[{"x", ",", "\[Delta]", ",", "inf"}], "}"}]}], "]"}]}],
              ";", "\[IndentingNewLine]", 
             RowBox[{
              RowBox[{"rhow", "[", "r_", "]"}], "=", 
              SubscriptBox[
               RowBox[{"(", 
                RowBox[{
                 RowBox[{"rho", "[", "r", "]"}], "/.", "s1"}], ")"}], 
               RowBox[{
               "\[LeftDoubleBracket]", "1", "\[RightDoubleBracket]"}]]}], ";",
              "\[IndentingNewLine]", 
             RowBox[{"ParallelSow", "[", 
              RowBox[{"{", 
               RowBox[{
                RowBox[{"\[Omega]", "+", 
                 RowBox[{"2", "M"}]}], ",", 
                RowBox[{"rhow", "[", "inf", "]"}]}], "}"}], "]"}]}], ",", 
            RowBox[{"{", 
             RowBox[{"it", ",", "1", ",", 
              FractionBox[
               RowBox[{"\[Omega]max", "-", "\[Omega]min"}], 
               RowBox[{"d\[Omega]", " ", "M"}]]}], "}"}]}], "]"}], "//", 
          "Reap"}], "//", "Last"}], "//", "First"}]}], ";", 
      "\[IndentingNewLine]", "\[IndentingNewLine]", 
      RowBox[{"ccss", "=", 
       RowBox[{"ParallelTable", "[", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{
           RowBox[{"\[Rho]table", "[", 
            RowBox[{"[", 
             RowBox[{"i", ",", "1"}], "]"}], "]"}], ",", 
           FractionBox[
            RowBox[{"-", 
             RowBox[{"\[Rho]table", "[", 
              RowBox[{"[", 
               RowBox[{"i", ",", "2"}], "]"}], "]"}]}], 
            SuperscriptBox[
             RowBox[{"\[Rho]table", "[", 
              RowBox[{"[", 
               RowBox[{"i", ",", "1"}], "]"}], "]"}], "2"]]}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"i", ",", "1", ",", 
           RowBox[{"Length", "[", "\[Rho]table", "]"}]}], "}"}]}], "]"}]}], 
      ";", "\[IndentingNewLine]", 
      RowBox[{"Export", "[", 
       RowBox[{
        RowBox[{"\"\<cc/perp/pT\>\"", "<>", 
         RowBox[{"ToString", "[", "pT", "]"}], "<>", "\"\</swccpT\>\"", "<>", 
         
         RowBox[{"ToString", "[", "pT", "]"}], "<>", "\"\<ang\>\"", "<>", 
         RowBox[{"ToString", "[", "ang", "]"}], "<>", 
         "\"\<spectraJpsi.dat\>\""}], ",", 
        RowBox[{"Sort", "[", "ccss", "]"}]}], "]"}], ";"}]}], 
    "\[IndentingNewLine]", "]"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.724397604460712*^9, 3.724397621092863*^9}, {
   3.724398705481254*^9, 3.724398705798315*^9}, {3.72440624506767*^9, 
   3.7244062457361317`*^9}, {3.7244423136168756`*^9, 3.724442340980721*^9}, {
   3.7244423712224417`*^9, 3.724442377050403*^9}, {3.724442465925974*^9, 
   3.724442518695669*^9}, {3.7244426255599117`*^9, 3.724442639076613*^9}, {
   3.724443729204352*^9, 3.724443729749022*^9}, {3.724443881656342*^9, 
   3.7244438842850027`*^9}, 3.725261621115453*^9, 3.72526166634648*^9, {
   3.725271550289123*^9, 3.7252715504130163`*^9}, {3.725271609402791*^9, 
   3.7252716095188437`*^9}, {3.7252717762497*^9, 3.725271782362536*^9}, {
   3.725271824500347*^9, 3.725271826035269*^9}, {3.725271857701564*^9, 
   3.725271858192912*^9}, {3.725271928114049*^9, 3.7252719496618757`*^9}, {
   3.725271981807578*^9, 3.725271987122878*^9}, {3.725273718896678*^9, 
   3.72527377251343*^9}, {3.725273963159111*^9, 3.725273966198284*^9}, {
   3.725364382855975*^9, 3.725364384697238*^9}, {3.725364432753635*^9, 
   3.725364433681274*^9}, {3.725364595553596*^9, 3.725364595868292*^9}, {
   3.725364661141473*^9, 3.725364661301785*^9}, {3.725365068510941*^9, 
   3.7253650691073112`*^9}, {3.7256202924505177`*^9, 
   3.7256202938854313`*^9}, {3.7256265502253428`*^9, 3.725626559021003*^9}, {
   3.725798091627001*^9, 3.725798108963685*^9}, {3.725798150844287*^9, 
   3.725798156038417*^9}, {3.726312422974263*^9, 3.726312439922279*^9}, {
   3.726313778060986*^9, 3.726313794010726*^9}, {3.726313854887352*^9, 
   3.726313855417986*^9}, {3.726377533478507*^9, 3.726377535012369*^9}, {
   3.726379310729051*^9, 3.726379315935656*^9}, {3.726379351066524*^9, 
   3.7263793563685627`*^9}, 3.7263814533362722`*^9, {3.726468979312665*^9, 
   3.726469044993416*^9}, {3.726564279540083*^9, 3.726564288774165*^9}, {
   3.726564330005303*^9, 3.726564342424973*^9}, {3.7265645007454853`*^9, 
   3.7265645054085903`*^9}, 3.726565145221386*^9, {3.726836923420138*^9, 
   3.726836925204391*^9}, {3.7268417497448387`*^9, 3.726841749854889*^9}, {
   3.727357927216405*^9, 3.7273579306359463`*^9}, 3.72735811608375*^9, {
   3.7273582875862513`*^9, 3.727358296888235*^9}, {3.727520051444908*^9, 
   3.7275200665503483`*^9}, {3.727539483513708*^9, 3.72753949210455*^9}, {
   3.7275398377710333`*^9, 3.727539869000495*^9}, {3.7275879806550293`*^9, 
   3.727587984698921*^9}, {3.727606150288821*^9, 3.727606150994812*^9}, {
   3.728932814314426*^9, 3.728932860160056*^9}, 3.7289333254815903`*^9, 
   3.7299208725344887`*^9, {3.730007040539275*^9, 3.7300070509717903`*^9}, {
   3.730007357183831*^9, 3.7300073662633142`*^9}, {3.7331192829046183`*^9, 
   3.733119300197537*^9}, {3.733120717385792*^9, 3.733120717697629*^9}, {
   3.7331222711038847`*^9, 3.733122272703622*^9}, {3.733211538849382*^9, 
   3.7332115515038567`*^9}, {3.7332289443370447`*^9, 
   3.7332289447842827`*^9}, {3.742215948846467*^9, 3.742215959437643*^9}, {
   3.742216025305929*^9, 3.742216093257207*^9}, {3.7422172078868933`*^9, 
   3.7422172275906973`*^9}, 3.74221727383118*^9, {3.742217585069265*^9, 
   3.742217591716959*^9}, {3.7422176229823923`*^9, 3.742217653035615*^9}, {
   3.742269341112874*^9, 3.742269371527761*^9}, 3.742275694936644*^9, {
   3.742289467062118*^9, 3.742289486771803*^9}, {3.742289520463562*^9, 
   3.7422896027136*^9}, {3.7422896364561243`*^9, 3.74228964347093*^9}, {
   3.742289678232355*^9, 3.742289708137301*^9}, {3.7422897506101*^9, 
   3.7422897587096577`*^9}, {3.7422920316457787`*^9, 3.742292034487727*^9}, 
   3.742292186682322*^9, {3.742292303240778*^9, 3.742292303483521*^9}, {
   3.742292362481593*^9, 3.742292372544711*^9}, {3.742292408813004*^9, 
   3.742292447857381*^9}, {3.7422968206130743`*^9, 3.742296843480155*^9}, {
   3.7422970160890417`*^9, 3.742297024417719*^9}, {3.742297074890059*^9, 
   3.74229711910509*^9}, {3.7422973083294992`*^9, 3.742297309298213*^9}, {
   3.742297354168077*^9, 3.742297359897736*^9}, {3.742297415918168*^9, 
   3.7422974232482452`*^9}, {3.742297467739311*^9, 3.742297612963316*^9}, {
   3.7422977860232887`*^9, 3.7422977903561068`*^9}, {3.74229798181938*^9, 
   3.742298023677857*^9}, {3.7422980561712513`*^9, 3.74229805925661*^9}, 
   3.742298106308654*^9, {3.742300221204397*^9, 3.742300269720365*^9}, {
   3.742300416216001*^9, 3.742300416917211*^9}, {3.742300536315893*^9, 
   3.742300546756034*^9}, {3.742300626604027*^9, 3.742300638323701*^9}, {
   3.7423006769018583`*^9, 3.7423007163572683`*^9}, {3.7435037431402884`*^9, 
   3.743503799356997*^9}, {3.7435038425347443`*^9, 3.743503908279688*^9}, {
   3.7435046316079397`*^9, 3.743504651390107*^9}, 3.745326235801956*^9, {
   3.745577559422867*^9, 3.745577586968154*^9}, {3.745580528080043*^9, 
   3.74558059234057*^9}, {3.745580690187639*^9, 3.745580708875317*^9}, {
   3.745642437900836*^9, 3.745642442612089*^9}, {3.745642493682754*^9, 
   3.7456425382868767`*^9}, {3.74627352599397*^9, 3.7462735295622587`*^9}, {
   3.7462736076039886`*^9, 3.7462736659082212`*^9}, {3.746273697621533*^9, 
   3.746273736166617*^9}, {3.7462741385800743`*^9, 3.746274142868767*^9}, {
   3.746274228830742*^9, 3.746274248310967*^9}, {3.7462743303367853`*^9, 
   3.7462743498486643`*^9}, {3.746274405954569*^9, 3.746274407722952*^9}, {
   3.74627803681008*^9, 3.746278037153131*^9}, {3.747887414650214*^9, 
   3.747887423938949*^9}, {3.7481674233164043`*^9, 3.7481674506752663`*^9}, {
   3.749554891486802*^9, 3.749554922961441*^9}, {3.749555089233777*^9, 
   3.749555119969118*^9}, {3.749563528737471*^9, 3.7495636549318132`*^9}, {
   3.749582048761517*^9, 3.749582052529887*^9}, 3.749646995985099*^9, 
   3.749655798300173*^9, 3.74970789643521*^9, {3.75414665053309*^9, 
   3.754146706624938*^9}, {3.757807031207905*^9, 3.757807040656314*^9}, {
   3.757807702967629*^9, 3.7578077038242903`*^9}, {3.7578078882965317`*^9, 
   3.757807902315524*^9}, {3.75780798833467*^9, 3.7578079890797157`*^9}, {
   3.757808051229706*^9, 3.757808087763713*^9}, {3.757810418692294*^9, 
   3.757810421517911*^9}, 3.757886527824544*^9, 3.758976485017486*^9}]
}, Closed]],

Cell[CellGroupData[{

Cell["Run", "Subsubsection",
 CellChangeTimes->{{3.7578081214207697`*^9, 3.757808141886427*^9}}],

Cell[BoxData[{
 RowBox[{
  RowBox[{"pT", "=", "10"}], ";"}], "\n", 
 RowBox[{"PotsIn", "[", "pT", "]"}], "\n", 
 RowBox[{"Do", "[", 
  RowBox[{
   RowBox[{"swaveccspectra", "[", "i", "]"}], ",", 
   RowBox[{"{", 
    RowBox[{"i", ",", "15", ",", "51"}], "}"}]}], "]"}]}], "Input",
 CellChangeTimes->{{3.7578081466759377`*^9, 3.757808148691277*^9}, {
  3.7578105174307537`*^9, 3.757810525123972*^9}, {3.757886597992675*^9, 
  3.7578866045682163`*^9}}],

Cell[BoxData[{
 RowBox[{
  RowBox[{"pT", "=", "15"}], ";"}], "\n", 
 RowBox[{"PotsIn", "[", "pT", "]"}], "\n", 
 RowBox[{"Do", "[", 
  RowBox[{
   RowBox[{"swaveccspectra", "[", "i", "]"}], ",", 
   RowBox[{"{", 
    RowBox[{"i", ",", "1", ",", "51"}], "}"}]}], "]"}]}], "Input",
 CellChangeTimes->{{3.7578081466759377`*^9, 3.757808148691277*^9}, {
  3.7578105174307537`*^9, 3.757810525123972*^9}, {3.7578105562680473`*^9, 
  3.757810561207963*^9}, {3.757886613095357*^9, 3.7578866221907787`*^9}}]
}, Open  ]]
}, Open  ]]
}, Closed]],

Cell[CellGroupData[{

Cell["Fitting", "Section",
 CellChangeTimes->{{3.745472165420155*^9, 3.745472170532083*^9}, {
  3.749554829941771*^9, 3.749554831005995*^9}, {3.754164996727846*^9, 
  3.754165004375143*^9}}],

Cell[CellGroupData[{

Cell["Functions", "Subsection",
 CellChangeTimes->{{3.758213222941469*^9, 3.7582132236487617`*^9}, {
  3.7582132989687757`*^9, 3.7582133099013567`*^9}}],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"BW", "[", 
    RowBox[{
    "w_", ",", "wr_", ",", "\[CapitalGamma]_", ",", "\[Delta]bg_", ",", 
     "const_", ",", "shift_", ",", "shift2_"}], "]"}], ":=", 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"const", 
     RowBox[{"(", 
      FractionBox[
       SuperscriptBox[
        RowBox[{"(", 
         RowBox[{"\[CapitalGamma]", "/", "2"}], ")"}], "2"], 
       RowBox[{
        SuperscriptBox[
         RowBox[{"(", 
          RowBox[{"w", "-", "wr"}], ")"}], "2"], "+", 
        SuperscriptBox[
         RowBox[{"(", 
          RowBox[{"\[CapitalGamma]", "/", "2"}], ")"}], "2"]}]], ")"}]}], "+",
     " ", 
    RowBox[{"\[Delta]bg", 
     FractionBox[
      RowBox[{
       RowBox[{"(", 
        RowBox[{"\[CapitalGamma]", "/", "2"}], ")"}], 
       RowBox[{"(", 
        RowBox[{"w", "-", "wr"}], ")"}]}], 
      RowBox[{
       SuperscriptBox[
        RowBox[{"(", 
         RowBox[{"w", "-", "wr"}], ")"}], "2"], "+", 
       SuperscriptBox[
        RowBox[{"(", 
         RowBox[{"\[CapitalGamma]", "/", "2"}], ")"}], "2"]}]]}], "+", 
    RowBox[{"0", " ", 
     FractionBox[
      RowBox[{
       RowBox[{"(", 
        RowBox[{
         RowBox[{"4", " ", 
          SuperscriptBox[
           RowBox[{"(", 
            RowBox[{"w", "-", "wr"}], ")"}], "2"]}], "-", " ", 
         SuperscriptBox["\[CapitalGamma]", "2"]}], ")"}], " ", 
       SuperscriptBox["\[Delta]bg", "2"]}], 
      RowBox[{
       RowBox[{"4", " ", 
        SuperscriptBox[
         RowBox[{"(", 
          RowBox[{"w", "-", "wr"}], ")"}], "2"]}], "+", 
       SuperscriptBox["\[CapitalGamma]", "2"]}]]}], "+", 
    RowBox[{"shift", " ", 
     RowBox[{"(", 
      RowBox[{"w", "-", "wr"}], ")"}]}], "+", "shift2"}]}], " ", 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"BWi", "[", 
    RowBox[{"w_", ",", "wr_", ",", "\[CapitalGamma]_", ",", "const_"}], "]"}],
    ":=", 
   RowBox[{"const", 
    RowBox[{"(", 
     FractionBox[
      SuperscriptBox[
       RowBox[{"(", 
        RowBox[{"\[CapitalGamma]", "/", "2"}], ")"}], "2"], 
      RowBox[{
       SuperscriptBox[
        RowBox[{"(", 
         RowBox[{"w", "-", "wr"}], ")"}], "2"], "+", 
       SuperscriptBox[
        RowBox[{"(", 
         RowBox[{"\[CapitalGamma]", "/", "2"}], ")"}], "2"]}]], ")"}]}]}], 
  " ", ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"fit", "[", 
     RowBox[{"input_", ",", "output_", ",", "scan_"}], "]"}], ":=", 
    RowBox[{"Module", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
        RowBox[{"temp", "=", 
         RowBox[{"Range", "[", 
          RowBox[{"1", ",", "scan"}], "]"}]}], ",", "n", ",", "maxx", ",", 
        "minx", ",", "maxy", ",", "maxyx", ",", "maxyi", ",", "maxxy", ",", 
        "inter", ",", "maxxs", ",", "maxxis", ",", "maxys", ",", "mins", ",", 
        "hwhmi", ",", "gammas", ",", "inputc", ",", "bad"}], "}"}], ",", 
      "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"SetSharedVariable", "[", "temp", "]"}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{"ParallelDo", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"n", "=", 
           RowBox[{"temp", "[", 
            RowBox[{"[", "ii", "]"}], "]"}]}], ";", "\[IndentingNewLine]", 
          RowBox[{"maxx", "=", 
           RowBox[{"Max", "[", 
            RowBox[{
             RowBox[{"input", "[", "n", "]"}], "[", 
             RowBox[{"[", 
              RowBox[{"All", ",", "1"}], "]"}], "]"}], "]"}]}], ";", 
          "\[IndentingNewLine]", 
          RowBox[{"minx", "=", 
           RowBox[{"Min", "[", 
            RowBox[{
             RowBox[{"input", "[", "n", "]"}], "[", 
             RowBox[{"[", 
              RowBox[{"All", ",", "1"}], "]"}], "]"}], "]"}]}], ";", 
          "\[IndentingNewLine]", 
          RowBox[{"maxy", "=", 
           RowBox[{"Max", "[", 
            RowBox[{
             RowBox[{"input", "[", "n", "]"}], "[", 
             RowBox[{"[", 
              RowBox[{"All", ",", "2"}], "]"}], "]"}], "]"}]}], ";", 
          "\[IndentingNewLine]", 
          RowBox[{"maxyx", "=", 
           RowBox[{
            RowBox[{"input", "[", "n", "]"}], "[", 
            RowBox[{"[", 
             RowBox[{
              RowBox[{
               RowBox[{"Position", "[", 
                RowBox[{
                 RowBox[{"input", "[", "n", "]"}], ",", 
                 RowBox[{"Max", "[", 
                  RowBox[{
                   RowBox[{"input", "[", "n", "]"}], "[", 
                   RowBox[{"[", 
                    RowBox[{"All", ",", "2"}], "]"}], "]"}], "]"}]}], "]"}], 
               "[", 
               RowBox[{"[", 
                RowBox[{"1", ",", "1"}], "]"}], "]"}], ",", "1"}], "]"}], 
            "]"}]}], ";", "\[IndentingNewLine]", 
          RowBox[{"maxyi", "=", 
           RowBox[{
            RowBox[{"Position", "[", 
             RowBox[{
              RowBox[{
               RowBox[{"input", "[", "n", "]"}], "[", 
               RowBox[{"[", 
                RowBox[{"All", ",", "1"}], "]"}], "]"}], ",", "maxyx"}], 
             "]"}], "[", 
            RowBox[{"[", 
             RowBox[{"1", ",", "1"}], "]"}], "]"}]}], ";", 
          "\[IndentingNewLine]", 
          RowBox[{"maxxy", "=", 
           RowBox[{
            RowBox[{"input", "[", "n", "]"}], "[", 
            RowBox[{"[", 
             RowBox[{
              RowBox[{
               RowBox[{"Position", "[", 
                RowBox[{
                 RowBox[{"input", "[", "n", "]"}], ",", 
                 RowBox[{"Max", "[", 
                  RowBox[{
                   RowBox[{"input", "[", "n", "]"}], "[", 
                   RowBox[{"[", 
                    RowBox[{"All", ",", "1"}], "]"}], "]"}], "]"}]}], "]"}], 
               "[", 
               RowBox[{"[", 
                RowBox[{"1", ",", "1"}], "]"}], "]"}], ",", "2"}], "]"}], 
            "]"}]}], ";", "\[IndentingNewLine]", 
          RowBox[{"inter", "=", 
           RowBox[{"Interpolation", "[", 
            RowBox[{
             RowBox[{"input", "[", "n", "]"}], ",", 
             RowBox[{"InterpolationOrder", "\[Rule]", "1"}]}], "]"}]}], ";", 
          "\[IndentingNewLine]", 
          RowBox[{"maxxs", "=", 
           RowBox[{"Sort", "[", 
            RowBox[{"Quiet", "[", 
             RowBox[{
              RowBox[{"DeleteDuplicatesBy", "[", 
               RowBox[{
                RowBox[{"Table", "[", 
                 RowBox[{
                  RowBox[{"{", 
                   RowBox[{
                    RowBox[{"Round", "[", 
                    RowBox[{
                    RowBox[{"FindMaxValue", "[", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"inter", "[", "x", "]"}], ",", 
                    RowBox[{
                    "maxyx", "\[LessEqual]", "x", "\[LessEqual]", "maxx"}]}], 
                    "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"x", ",", "a"}], "}"}]}], "]"}], ",", "maxxy"}], 
                    "]"}], ",", 
                    RowBox[{
                    RowBox[{"FindArgMax", "[", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"inter", "[", "x", "]"}], ",", 
                    RowBox[{
                    "maxyx", "\[LessEqual]", "x", "\[LessEqual]", "maxx"}]}], 
                    "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"x", ",", "a"}], "}"}]}], "]"}], "[", 
                    RowBox[{"[", "1", "]"}], "]"}]}], "}"}], ",", 
                  RowBox[{"{", 
                   RowBox[{"a", ",", "maxyx", ",", "maxx", ",", 
                    FractionBox[
                    RowBox[{"maxx", "-", "maxyx"}], "50"]}], "}"}]}], "]"}], 
                ",", "First"}], "]"}], "[", 
              RowBox[{"[", 
               RowBox[{"All", ",", "2"}], "]"}], "]"}], "]"}], "]"}]}], ";", 
          RowBox[{"bad", "=", 
           RowBox[{"{", "}"}]}], ";", "\[IndentingNewLine]", 
          RowBox[{"If", "[", 
           RowBox[{
            RowBox[{
             RowBox[{"Length", "[", "maxxs", "]"}], ">", "1"}], ",", 
            RowBox[{"Do", "[", 
             RowBox[{
              RowBox[{"If", "[", 
               RowBox[{
                RowBox[{
                 RowBox[{
                  RowBox[{"maxxs", "[", 
                   RowBox[{"[", 
                    RowBox[{"i", "+", "1"}], "]"}], "]"}], "/", 
                  RowBox[{"maxxs", "[", 
                   RowBox[{"[", "i", "]"}], "]"}]}], "\[LessEqual]", 
                 "1.001"}], ",", 
                RowBox[{"bad", "=", 
                 RowBox[{"Append", "[", 
                  RowBox[{"bad", ",", 
                   RowBox[{"{", "i", "}"}]}], "]"}]}]}], "]"}], ",", 
              RowBox[{"{", 
               RowBox[{"i", ",", 
                RowBox[{
                 RowBox[{"Length", "[", "maxxs", "]"}], "-", "1"}]}], "}"}]}],
              "]"}]}], "]"}], ";", "\[IndentingNewLine]", 
          RowBox[{"maxxs", "=", 
           RowBox[{"Delete", "[", 
            RowBox[{"maxxs", ",", "bad"}], "]"}]}], ";", 
          RowBox[{"maxxis", "=", 
           RowBox[{"Sort", "[", 
            RowBox[{"Table", "[", 
             RowBox[{
              RowBox[{
               RowBox[{"Position", "[", 
                RowBox[{
                 RowBox[{
                  RowBox[{"input", "[", "n", "]"}], "[", 
                  RowBox[{"[", 
                   RowBox[{"All", ",", "1"}], "]"}], "]"}], ",", 
                 RowBox[{
                  RowBox[{"Nearest", "[", 
                   RowBox[{
                    RowBox[{
                    RowBox[{"input", "[", "n", "]"}], "[", 
                    RowBox[{"[", 
                    RowBox[{"All", ",", "1"}], "]"}], "]"}], ",", 
                    RowBox[{"maxxs", "[", 
                    RowBox[{"[", "i", "]"}], "]"}]}], "]"}], "[", 
                  RowBox[{"[", "1", "]"}], "]"}]}], "]"}], "[", 
               RowBox[{"[", 
                RowBox[{"1", ",", "1"}], "]"}], "]"}], ",", 
              RowBox[{"{", 
               RowBox[{"i", ",", 
                RowBox[{"Length", "[", "maxxs", "]"}]}], "}"}]}], "]"}], 
            "]"}]}], ";", "\[IndentingNewLine]", 
          RowBox[{"bad", "=", 
           RowBox[{"{", "}"}]}], ";", "\[IndentingNewLine]", 
          RowBox[{"Do", "[", 
           RowBox[{
            RowBox[{"If", "[", 
             RowBox[{
              RowBox[{"Or", "[", 
               RowBox[{
                RowBox[{
                 RowBox[{
                  RowBox[{"input", "[", "n", "]"}], "[", 
                  RowBox[{"[", 
                   RowBox[{
                    RowBox[{
                    RowBox[{"maxxis", "[", 
                    RowBox[{"[", "i", "]"}], "]"}], "-", "30"}], ",", "2"}], 
                   "]"}], "]"}], ">", 
                 RowBox[{
                  RowBox[{"input", "[", "n", "]"}], "[", 
                  RowBox[{"[", 
                   RowBox[{
                    RowBox[{"maxxis", "[", 
                    RowBox[{"[", "i", "]"}], "]"}], ",", "2"}], "]"}], 
                  "]"}]}], ",", 
                RowBox[{
                 RowBox[{
                  RowBox[{"input", "[", "n", "]"}], "[", 
                  RowBox[{"[", 
                   RowBox[{
                    RowBox[{
                    RowBox[{"maxxis", "[", 
                    RowBox[{"[", "i", "]"}], "]"}], "+", "30"}], ",", "2"}], 
                   "]"}], "]"}], ">", 
                 RowBox[{
                  RowBox[{"input", "[", "n", "]"}], "[", 
                  RowBox[{"[", 
                   RowBox[{
                    RowBox[{"maxxis", "[", 
                    RowBox[{"[", "i", "]"}], "]"}], ",", "2"}], "]"}], 
                  "]"}]}]}], "]"}], ",", 
              RowBox[{"bad", "=", 
               RowBox[{"Append", "[", 
                RowBox[{"bad", ",", 
                 RowBox[{"{", "i", "}"}]}], "]"}]}]}], "]"}], ",", 
            RowBox[{"{", 
             RowBox[{"i", ",", 
              RowBox[{"Length", "[", "maxxis", "]"}]}], "}"}]}], "]"}], ";", 
          RowBox[{"maxxs", "=", 
           RowBox[{"Delete", "[", 
            RowBox[{"maxxs", ",", "bad"}], "]"}]}], ";", 
          RowBox[{"maxxis", "=", 
           RowBox[{"Delete", "[", 
            RowBox[{"maxxis", ",", "bad"}], "]"}]}], ";", 
          "\[IndentingNewLine]", 
          RowBox[{"maxys", "=", 
           RowBox[{"Table", "[", 
            RowBox[{
             RowBox[{
              RowBox[{"input", "[", "n", "]"}], "[", 
              RowBox[{"[", 
               RowBox[{
                RowBox[{"maxxis", "[", 
                 RowBox[{"[", "i", "]"}], "]"}], ",", "2"}], "]"}], "]"}], 
             ",", 
             RowBox[{"{", 
              RowBox[{"i", ",", 
               RowBox[{"Length", "[", "maxxs", "]"}]}], "}"}]}], "]"}]}], ";",
           "\[IndentingNewLine]", 
          RowBox[{"If", "[", 
           RowBox[{
            RowBox[{
             RowBox[{"Length", "[", "maxxs", "]"}], ">", "1"}], ",", 
            "\[IndentingNewLine]", 
            RowBox[{
             RowBox[{"mins", "=", 
              RowBox[{"Range", "[", 
               RowBox[{
                RowBox[{"Length", "[", "maxxs", "]"}], "-", "1"}], "]"}]}], 
             ";", "\[IndentingNewLine]", 
             RowBox[{"Do", "[", 
              RowBox[{
               RowBox[{
                RowBox[{"mins", "[", 
                 RowBox[{"[", "i", "]"}], "]"}], "=", 
                RowBox[{
                 RowBox[{"Position", "[", 
                  RowBox[{
                   RowBox[{
                    RowBox[{"input", "[", "n", "]"}], "[", 
                    RowBox[{"[", 
                    RowBox[{"All", ",", "2"}], "]"}], "]"}], ",", 
                   RowBox[{"Min", "[", 
                    RowBox[{
                    RowBox[{"input", "[", "n", "]"}], "[", 
                    RowBox[{"[", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"maxxis", "[", 
                    RowBox[{"[", "i", "]"}], "]"}], ";;", 
                    RowBox[{"maxxis", "[", 
                    RowBox[{"[", 
                    RowBox[{"i", "+", "1"}], "]"}], "]"}]}], ",", "2"}], 
                    "]"}], "]"}], "]"}]}], "]"}], "[", 
                 RowBox[{"[", 
                  RowBox[{"1", ",", "1"}], "]"}], "]"}]}], ",", 
               RowBox[{"{", 
                RowBox[{"i", ",", 
                 RowBox[{
                  RowBox[{"Length", "[", "maxxs", "]"}], "-", "1"}]}], 
                "}"}]}], "]"}], ";", 
             RowBox[{"mins", "=", 
              RowBox[{"Append", "[", 
               RowBox[{
                RowBox[{"Prepend", "[", 
                 RowBox[{"mins", ",", 
                  RowBox[{
                   RowBox[{"maxxis", "[", 
                    RowBox[{"[", "1", "]"}], "]"}], "-", 
                   RowBox[{"(", 
                    RowBox[{
                    RowBox[{"mins", "[", 
                    RowBox[{"[", "1", "]"}], "]"}], "-", 
                    RowBox[{"maxxis", "[", 
                    RowBox[{"[", "1", "]"}], "]"}]}], ")"}]}]}], "]"}], ",", 
                RowBox[{"If", "[", 
                 RowBox[{
                  RowBox[{
                   RowBox[{
                    RowBox[{"maxxis", "[", 
                    RowBox[{"[", 
                    RowBox[{"-", "1"}], "]"}], "]"}], "+", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"maxxis", "[", 
                    RowBox[{"[", 
                    RowBox[{"-", "1"}], "]"}], "]"}], "-", 
                    RowBox[{"mins", "[", 
                    RowBox[{"[", 
                    RowBox[{"-", "1"}], "]"}], "]"}]}], ")"}]}], 
                   "\[LessEqual]", " ", 
                   RowBox[{"Length", "[", 
                    RowBox[{"input", "[", "n", "]"}], "]"}]}], ",", 
                  RowBox[{
                   RowBox[{"maxxis", "[", 
                    RowBox[{"[", 
                    RowBox[{"-", "1"}], "]"}], "]"}], "+", 
                   RowBox[{"(", 
                    RowBox[{
                    RowBox[{"maxxis", "[", 
                    RowBox[{"[", 
                    RowBox[{"-", "1"}], "]"}], "]"}], "-", 
                    RowBox[{"mins", "[", 
                    RowBox[{"[", 
                    RowBox[{"-", "1"}], "]"}], "]"}]}], ")"}]}], ",", 
                  RowBox[{"Length", "[", 
                   RowBox[{"input", "[", "n", "]"}], "]"}]}], "]"}]}], 
               "]"}]}], ";"}], ",", "\[IndentingNewLine]", 
            RowBox[{
             RowBox[{"hwhmi", "=", 
              RowBox[{
               RowBox[{"Position", "[", 
                RowBox[{
                 RowBox[{"input", "[", "n", "]"}], ",", 
                 RowBox[{
                  RowBox[{"Nearest", "[", 
                   RowBox[{
                    RowBox[{
                    RowBox[{"input", "[", "n", "]"}], "[", 
                    RowBox[{"[", 
                    RowBox[{
                    RowBox[{";;", "maxyi"}], ",", "2"}], "]"}], "]"}], ",", 
                    RowBox[{"maxy", "/", "2"}]}], "]"}], "[", 
                  RowBox[{"[", "1", "]"}], "]"}]}], "]"}], "[", 
               RowBox[{"[", 
                RowBox[{"1", ",", "1"}], "]"}], "]"}]}], ";", 
             "\[IndentingNewLine]", 
             RowBox[{"mins", "=", 
              RowBox[{"{", 
               RowBox[{
                RowBox[{"maxyi", "-", 
                 RowBox[{"3", 
                  RowBox[{"(", 
                   RowBox[{"maxyi", "-", "hwhmi"}], ")"}]}]}], ",", 
                RowBox[{"If", "[", 
                 RowBox[{
                  RowBox[{
                   RowBox[{"maxyi", "+", 
                    RowBox[{"3", 
                    RowBox[{"(", 
                    RowBox[{"maxyi", "-", "hwhmi"}], ")"}]}]}], 
                   "\[LessEqual]", 
                   RowBox[{"Length", "[", 
                    RowBox[{"input", "[", "n", "]"}], "]"}]}], ",", 
                  RowBox[{"maxyi", "+", 
                   RowBox[{"3", 
                    RowBox[{"(", 
                    RowBox[{"maxyi", "-", "hwhmi"}], ")"}]}]}], ",", 
                  RowBox[{"Length", "[", 
                   RowBox[{"input", "[", "n", "]"}], "]"}]}], "]"}]}], 
               "}"}]}], ";"}]}], "]"}], ";", "\[IndentingNewLine]", 
          RowBox[{"If", "[", 
           RowBox[{
            RowBox[{
             RowBox[{"mins", "[", 
              RowBox[{"[", "1", "]"}], "]"}], "\[LessEqual]", "0"}], ",", 
            RowBox[{
             RowBox[{"mins", "[", 
              RowBox[{"[", "1", "]"}], "]"}], "=", "1"}]}], "]"}], ";", "\n", 
          
          RowBox[{"hwhmi", "=", 
           RowBox[{"Range", "[", 
            RowBox[{"Length", "[", "maxxs", "]"}], "]"}]}], ";", "\n", 
          RowBox[{"Do", "[", 
           RowBox[{
            RowBox[{
             RowBox[{"hwhmi", "[", 
              RowBox[{"[", "i", "]"}], "]"}], "=", 
             RowBox[{
              RowBox[{"Position", "[", 
               RowBox[{
                RowBox[{"input", "[", "n", "]"}], ",", 
                RowBox[{
                 RowBox[{"Nearest", "[", 
                  RowBox[{
                   RowBox[{
                    RowBox[{"input", "[", "n", "]"}], "[", 
                    RowBox[{"[", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"mins", "[", 
                    RowBox[{"[", "i", "]"}], "]"}], ";;", 
                    RowBox[{"maxxis", "[", 
                    RowBox[{"[", "i", "]"}], "]"}]}], ",", "2"}], "]"}], 
                    "]"}], ",", 
                   RowBox[{
                    RowBox[{"inter", "[", 
                    RowBox[{"maxxs", "[", 
                    RowBox[{"[", "i", "]"}], "]"}], "]"}], "/", "2"}]}], 
                  "]"}], "[", 
                 RowBox[{"[", "1", "]"}], "]"}]}], "]"}], "[", 
              RowBox[{"[", 
               RowBox[{"1", ",", "1"}], "]"}], "]"}]}], ",", 
            RowBox[{"{", 
             RowBox[{"i", ",", 
              RowBox[{"Length", "[", "maxxs", "]"}]}], "}"}]}], "]"}], ";", 
          "\[IndentingNewLine]", 
          RowBox[{"gammas", "=", 
           RowBox[{"Range", "[", 
            RowBox[{"Length", "[", "hwhmi", "]"}], "]"}]}], ";", 
          "\[IndentingNewLine]", 
          RowBox[{"Do", "[", 
           RowBox[{
            RowBox[{
             RowBox[{"gammas", "[", 
              RowBox[{"[", "i", "]"}], "]"}], "=", 
             RowBox[{"2", 
              RowBox[{"(", 
               RowBox[{
                RowBox[{"maxxs", "[", 
                 RowBox[{"[", "i", "]"}], "]"}], "-", 
                RowBox[{
                 RowBox[{"input", "[", "n", "]"}], "[", 
                 RowBox[{"[", 
                  RowBox[{
                   RowBox[{"hwhmi", "[", 
                    RowBox[{"[", "i", "]"}], "]"}], ",", "1"}], "]"}], 
                 "]"}]}], ")"}]}]}], ",", 
            RowBox[{"{", 
             RowBox[{"i", ",", 
              RowBox[{"Length", "[", "hwhmi", "]"}]}], "}"}]}], "]"}], ";", 
          "\[IndentingNewLine]", 
          RowBox[{"inputc", "=", 
           RowBox[{"Range", "[", 
            RowBox[{"Length", "[", "maxxs", "]"}], "]"}]}], ";", 
          "\[IndentingNewLine]", 
          RowBox[{"Do", "[", 
           RowBox[{
            RowBox[{
             RowBox[{"inputc", "[", 
              RowBox[{"[", "i", "]"}], "]"}], "=", 
             RowBox[{
              RowBox[{"input", "[", "n", "]"}], "[", 
              RowBox[{"[", 
               RowBox[{
                RowBox[{"If", "[", 
                 RowBox[{
                  RowBox[{"i", "\[GreaterEqual]", "2"}], ",", 
                  RowBox[{"If", "[", 
                   RowBox[{
                    RowBox[{
                    RowBox[{
                    RowBox[{"maxxis", "[", 
                    RowBox[{"[", "i", "]"}], "]"}], "-", 
                    RowBox[{"3", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"maxxis", "[", 
                    RowBox[{"[", "i", "]"}], "]"}], "-", 
                    RowBox[{"hwhmi", "[", 
                    RowBox[{"[", "i", "]"}], "]"}]}], ")"}]}]}], "<", 
                    RowBox[{"mins", "[", 
                    RowBox[{"[", "i", "]"}], "]"}]}], ",", 
                    RowBox[{"mins", "[", 
                    RowBox[{"[", "i", "]"}], "]"}], ",", 
                    RowBox[{
                    RowBox[{"maxxis", "[", 
                    RowBox[{"[", "i", "]"}], "]"}], "-", 
                    RowBox[{"3", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"maxxis", "[", 
                    RowBox[{"[", "i", "]"}], "]"}], "-", 
                    RowBox[{"hwhmi", "[", 
                    RowBox[{"[", "i", "]"}], "]"}]}], ")"}]}]}]}], "]"}], ",", 
                  RowBox[{"If", "[", 
                   RowBox[{
                    RowBox[{
                    RowBox[{
                    RowBox[{"maxxis", "[", 
                    RowBox[{"[", "i", "]"}], "]"}], "-", 
                    RowBox[{"3", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"maxxis", "[", 
                    RowBox[{"[", "i", "]"}], "]"}], "-", 
                    RowBox[{"hwhmi", "[", 
                    RowBox[{"[", "i", "]"}], "]"}]}], ")"}]}]}], ">", "0"}], 
                    ",", 
                    RowBox[{
                    RowBox[{"maxxis", "[", 
                    RowBox[{"[", "i", "]"}], "]"}], "-", 
                    RowBox[{"3", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"maxxis", "[", 
                    RowBox[{"[", "i", "]"}], "]"}], "-", 
                    RowBox[{"hwhmi", "[", 
                    RowBox[{"[", "i", "]"}], "]"}]}], ")"}]}]}], ",", "1"}], 
                   "]"}]}], "]"}], ";;", 
                RowBox[{"If", "[", 
                 RowBox[{
                  RowBox[{
                   RowBox[{
                    RowBox[{"maxxis", "[", 
                    RowBox[{"[", "i", "]"}], "]"}], "+", 
                    RowBox[{"3", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"maxxis", "[", 
                    RowBox[{"[", "i", "]"}], "]"}], "-", 
                    RowBox[{"hwhmi", "[", 
                    RowBox[{"[", "i", "]"}], "]"}]}], ")"}]}]}], "<", 
                   RowBox[{"mins", "[", 
                    RowBox[{"[", 
                    RowBox[{"i", "+", "1"}], "]"}], "]"}]}], ",", 
                  RowBox[{
                   RowBox[{"maxxis", "[", 
                    RowBox[{"[", "i", "]"}], "]"}], "+", 
                   RowBox[{"3", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"maxxis", "[", 
                    RowBox[{"[", "i", "]"}], "]"}], "-", 
                    RowBox[{"hwhmi", "[", 
                    RowBox[{"[", "i", "]"}], "]"}]}], ")"}]}]}], ",", 
                  RowBox[{"mins", "[", 
                   RowBox[{"[", 
                    RowBox[{"i", "+", "1"}], "]"}], "]"}]}], "]"}]}], "]"}], 
              "]"}]}], ",", 
            RowBox[{"{", 
             RowBox[{"i", ",", 
              RowBox[{"Length", "[", "maxxs", "]"}]}], "}"}]}], "]"}], ";", 
          "\[IndentingNewLine]", 
          RowBox[{
           RowBox[{"temp", "[", 
            RowBox[{"[", "ii", "]"}], "]"}], "=", 
           RowBox[{"Range", "[", 
            RowBox[{"Length", "[", "hwhmi", "]"}], "]"}]}], ";", 
          "\[IndentingNewLine]", 
          RowBox[{"Do", "[", 
           RowBox[{
            RowBox[{
             RowBox[{"temp", "[", 
              RowBox[{"[", 
               RowBox[{"ii", ",", "i"}], "]"}], "]"}], "=", 
             RowBox[{"NonlinearModelFit", "[", 
              RowBox[{
               RowBox[{"inputc", "[", 
                RowBox[{"[", "i", "]"}], "]"}], ",", 
               RowBox[{"{", 
                RowBox[{
                 RowBox[{"BW", "[", 
                  RowBox[{
                  "w1", ",", "wr1", ",", "\[CapitalGamma]", ",", "\[Delta]bg",
                    ",", "const", ",", "shift", ",", "shift2"}], "]"}], ",", 
                 RowBox[{"const", ">", "0"}], ",", 
                 RowBox[{"\[CapitalGamma]", ">", "0"}]}], "}"}], ",", 
               RowBox[{"{", 
                RowBox[{
                 RowBox[{"{", 
                  RowBox[{"wr1", ",", 
                   RowBox[{"maxxs", "[", 
                    RowBox[{"[", "i", "]"}], "]"}]}], "}"}], ",", 
                 RowBox[{"{", 
                  RowBox[{"\[CapitalGamma]", ",", 
                   RowBox[{"gammas", "[", 
                    RowBox[{"[", "i", "]"}], "]"}]}], "}"}], ",", 
                 RowBox[{"{", 
                  RowBox[{"const", ",", 
                   RowBox[{"maxys", "[", 
                    RowBox[{"[", "i", "]"}], "]"}]}], "}"}], ",", 
                 RowBox[{"{", 
                  RowBox[{"\[Delta]bg", ",", "0.0"}], "}"}], ",", 
                 RowBox[{"{", 
                  RowBox[{"shift", ",", "0.0"}], "}"}], ",", 
                 RowBox[{"{", 
                  RowBox[{"shift2", ",", "0.0"}], "}"}]}], "}"}], ",", "w1", 
               ",", 
               RowBox[{"MaxIterations", "\[Rule]", "1000"}]}], "]"}]}], ",", 
            RowBox[{"{", 
             RowBox[{"i", ",", 
              RowBox[{"Length", "[", "hwhmi", "]"}]}], "}"}]}], "]"}], ";"}], 
         ",", 
         RowBox[{"{", 
          RowBox[{"ii", ",", "scan"}], "}"}]}], "]"}], ";", 
       RowBox[{"output", "=", "temp"}], ";"}]}], "]"}]}], ";"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"fitONE", "[", 
    RowBox[{"input_", ",", "output_"}], "]"}], ":=", 
   RowBox[{"Module", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
      "temp", ",", "maxx", ",", "minx", ",", "maxy", ",", "maxyx", ",", 
       "maxyi", ",", "maxxy", ",", "inter", ",", "maxxs", ",", "maxxis", ",", 
       "maxys", ",", "mins", ",", "hwhmi", ",", "gammas", ",", "inputc", ",", 
       "bad"}], "}"}], ",", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"maxx", "=", 
       RowBox[{"Max", "[", 
        RowBox[{"input", "[", 
         RowBox[{"[", 
          RowBox[{"All", ",", "1"}], "]"}], "]"}], "]"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"minx", "=", 
       RowBox[{"Min", "[", 
        RowBox[{"input", "[", 
         RowBox[{"[", 
          RowBox[{"All", ",", "1"}], "]"}], "]"}], "]"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"maxy", "=", 
       RowBox[{"Max", "[", 
        RowBox[{"input", "[", 
         RowBox[{"[", 
          RowBox[{"All", ",", "2"}], "]"}], "]"}], "]"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"maxyx", "=", 
       RowBox[{"input", "[", 
        RowBox[{"[", 
         RowBox[{
          RowBox[{
           RowBox[{"Position", "[", 
            RowBox[{"input", ",", 
             RowBox[{"Max", "[", 
              RowBox[{"input", "[", 
               RowBox[{"[", 
                RowBox[{"All", ",", "2"}], "]"}], "]"}], "]"}]}], "]"}], "[", 
           
           RowBox[{"[", 
            RowBox[{"1", ",", "1"}], "]"}], "]"}], ",", "1"}], "]"}], "]"}]}],
       ";", "\[IndentingNewLine]", 
      RowBox[{"maxyi", "=", 
       RowBox[{
        RowBox[{"Position", "[", 
         RowBox[{
          RowBox[{"input", "[", 
           RowBox[{"[", 
            RowBox[{"All", ",", "1"}], "]"}], "]"}], ",", "maxyx"}], "]"}], 
        "[", 
        RowBox[{"[", 
         RowBox[{"1", ",", "1"}], "]"}], "]"}]}], ";", "\[IndentingNewLine]", 
      
      RowBox[{"maxxy", "=", 
       RowBox[{"input", "[", 
        RowBox[{"[", 
         RowBox[{
          RowBox[{
           RowBox[{"Position", "[", 
            RowBox[{"input", ",", 
             RowBox[{"Max", "[", 
              RowBox[{"input", "[", 
               RowBox[{"[", 
                RowBox[{"All", ",", "1"}], "]"}], "]"}], "]"}]}], "]"}], "[", 
           
           RowBox[{"[", 
            RowBox[{"1", ",", "1"}], "]"}], "]"}], ",", "2"}], "]"}], "]"}]}],
       ";", "\[IndentingNewLine]", 
      RowBox[{"inter", "=", 
       RowBox[{"Interpolation", "[", 
        RowBox[{"input", ",", 
         RowBox[{"InterpolationOrder", "\[Rule]", "1"}]}], "]"}]}], ";", 
      RowBox[{"maxxs", "=", 
       RowBox[{"Sort", "[", 
        RowBox[{"Quiet", "[", 
         RowBox[{
          RowBox[{"DeleteDuplicatesBy", "[", 
           RowBox[{
            RowBox[{"Table", "[", 
             RowBox[{
              RowBox[{"{", 
               RowBox[{
                RowBox[{"Round", "[", 
                 RowBox[{
                  RowBox[{"FindMaxValue", "[", 
                   RowBox[{
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"inter", "[", "x", "]"}], ",", 
                    RowBox[{
                    "maxyx", "\[LessEqual]", "x", "\[LessEqual]", "maxx"}]}], 
                    "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"x", ",", "a"}], "}"}]}], "]"}], ",", "maxxy"}], 
                 "]"}], ",", 
                RowBox[{
                 RowBox[{"FindArgMax", "[", 
                  RowBox[{
                   RowBox[{"{", 
                    RowBox[{
                    RowBox[{"inter", "[", "x", "]"}], ",", 
                    RowBox[{
                    "maxyx", "\[LessEqual]", "x", "\[LessEqual]", "maxx"}]}], 
                    "}"}], ",", 
                   RowBox[{"{", 
                    RowBox[{"x", ",", "a"}], "}"}]}], "]"}], "[", 
                 RowBox[{"[", "1", "]"}], "]"}]}], "}"}], ",", 
              RowBox[{"{", 
               RowBox[{"a", ",", "maxyx", ",", "maxx", ",", 
                FractionBox[
                 RowBox[{"maxx", "-", "maxyx"}], "50"]}], "}"}]}], "]"}], ",",
             "First"}], "]"}], "[", 
          RowBox[{"[", 
           RowBox[{"All", ",", "2"}], "]"}], "]"}], "]"}], "]"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"bad", "=", 
       RowBox[{"{", "}"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"If", "[", 
       RowBox[{
        RowBox[{
         RowBox[{"Length", "[", "maxxs", "]"}], ">", "1"}], ",", 
        RowBox[{"Do", "[", 
         RowBox[{
          RowBox[{"If", "[", 
           RowBox[{
            RowBox[{
             RowBox[{
              RowBox[{"maxxs", "[", 
               RowBox[{"[", 
                RowBox[{"i", "+", "1"}], "]"}], "]"}], "/", 
              RowBox[{"maxxs", "[", 
               RowBox[{"[", "i", "]"}], "]"}]}], "\[LessEqual]", "1.001"}], 
            ",", 
            RowBox[{"bad", "=", 
             RowBox[{"Append", "[", 
              RowBox[{"bad", ",", 
               RowBox[{"{", "i", "}"}]}], "]"}]}]}], "]"}], ",", 
          RowBox[{"{", 
           RowBox[{"i", ",", 
            RowBox[{
             RowBox[{"Length", "[", "maxxs", "]"}], "-", "1"}]}], "}"}]}], 
         "]"}]}], "]"}], ";", "\[IndentingNewLine]", 
      RowBox[{"maxxs", "=", 
       RowBox[{"Delete", "[", 
        RowBox[{"maxxs", ",", "bad"}], "]"}]}], ";", 
      RowBox[{"maxxis", "=", 
       RowBox[{"Sort", "[", 
        RowBox[{"Table", "[", 
         RowBox[{
          RowBox[{
           RowBox[{"Position", "[", 
            RowBox[{
             RowBox[{"input", "[", 
              RowBox[{"[", 
               RowBox[{"All", ",", "1"}], "]"}], "]"}], ",", 
             RowBox[{
              RowBox[{"Nearest", "[", 
               RowBox[{
                RowBox[{"input", "[", 
                 RowBox[{"[", 
                  RowBox[{"All", ",", "1"}], "]"}], "]"}], ",", 
                RowBox[{"maxxs", "[", 
                 RowBox[{"[", "i", "]"}], "]"}]}], "]"}], "[", 
              RowBox[{"[", "1", "]"}], "]"}]}], "]"}], "[", 
           RowBox[{"[", 
            RowBox[{"1", ",", "1"}], "]"}], "]"}], ",", 
          RowBox[{"{", 
           RowBox[{"i", ",", 
            RowBox[{"Length", "[", "maxxs", "]"}]}], "}"}]}], "]"}], "]"}]}], 
      ";", "\[IndentingNewLine]", 
      RowBox[{"bad", "=", 
       RowBox[{"{", "}"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"Do", "[", 
       RowBox[{
        RowBox[{"If", "[", 
         RowBox[{
          RowBox[{"Or", "[", 
           RowBox[{
            RowBox[{
             RowBox[{"input", "[", 
              RowBox[{"[", 
               RowBox[{
                RowBox[{
                 RowBox[{"maxxis", "[", 
                  RowBox[{"[", "i", "]"}], "]"}], "-", "30"}], ",", "2"}], 
               "]"}], "]"}], ">", 
             RowBox[{"input", "[", 
              RowBox[{"[", 
               RowBox[{
                RowBox[{"maxxis", "[", 
                 RowBox[{"[", "i", "]"}], "]"}], ",", "2"}], "]"}], "]"}]}], 
            ",", 
            RowBox[{
             RowBox[{"input", "[", 
              RowBox[{"[", 
               RowBox[{
                RowBox[{
                 RowBox[{"maxxis", "[", 
                  RowBox[{"[", "i", "]"}], "]"}], "+", "30"}], ",", "2"}], 
               "]"}], "]"}], ">", 
             RowBox[{"input", "[", 
              RowBox[{"[", 
               RowBox[{
                RowBox[{"maxxis", "[", 
                 RowBox[{"[", "i", "]"}], "]"}], ",", "2"}], "]"}], "]"}]}]}],
            "]"}], ",", 
          RowBox[{"bad", "=", 
           RowBox[{"Append", "[", 
            RowBox[{"bad", ",", 
             RowBox[{"{", "i", "}"}]}], "]"}]}]}], "]"}], ",", 
        RowBox[{"{", 
         RowBox[{"i", ",", 
          RowBox[{"Length", "[", "maxxis", "]"}]}], "}"}]}], "]"}], ";", 
      RowBox[{"maxxs", "=", 
       RowBox[{"Delete", "[", 
        RowBox[{"maxxs", ",", "bad"}], "]"}]}], ";", 
      RowBox[{"maxxis", "=", 
       RowBox[{"Delete", "[", 
        RowBox[{"maxxis", ",", "bad"}], "]"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"maxys", "=", 
       RowBox[{"Table", "[", 
        RowBox[{
         RowBox[{"input", "[", 
          RowBox[{"[", 
           RowBox[{
            RowBox[{"maxxis", "[", 
             RowBox[{"[", "i", "]"}], "]"}], ",", "2"}], "]"}], "]"}], ",", 
         RowBox[{"{", 
          RowBox[{"i", ",", 
           RowBox[{"Length", "[", "maxxs", "]"}]}], "}"}]}], "]"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"If", "[", 
       RowBox[{
        RowBox[{
         RowBox[{"Length", "[", "maxxs", "]"}], ">", "1"}], ",", 
        "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{"mins", "=", 
          RowBox[{"Range", "[", 
           RowBox[{
            RowBox[{"Length", "[", "maxxs", "]"}], "-", "1"}], "]"}]}], ";", 
         "\[IndentingNewLine]", 
         RowBox[{"Do", "[", 
          RowBox[{
           RowBox[{
            RowBox[{"mins", "[", 
             RowBox[{"[", "i", "]"}], "]"}], "=", 
            RowBox[{
             RowBox[{"Position", "[", 
              RowBox[{
               RowBox[{"input", "[", 
                RowBox[{"[", 
                 RowBox[{"All", ",", "2"}], "]"}], "]"}], ",", 
               RowBox[{"Min", "[", 
                RowBox[{"input", "[", 
                 RowBox[{"[", 
                  RowBox[{
                   RowBox[{
                    RowBox[{"maxxis", "[", 
                    RowBox[{"[", "i", "]"}], "]"}], ";;", 
                    RowBox[{"maxxis", "[", 
                    RowBox[{"[", 
                    RowBox[{"i", "+", "1"}], "]"}], "]"}]}], ",", "2"}], 
                  "]"}], "]"}], "]"}]}], "]"}], "[", 
             RowBox[{"[", 
              RowBox[{"1", ",", "1"}], "]"}], "]"}]}], ",", 
           RowBox[{"{", 
            RowBox[{"i", ",", 
             RowBox[{
              RowBox[{"Length", "[", "maxxs", "]"}], "-", "1"}]}], "}"}]}], 
          "]"}], ";", 
         RowBox[{"mins", "=", 
          RowBox[{"Append", "[", 
           RowBox[{
            RowBox[{"Prepend", "[", 
             RowBox[{"mins", ",", 
              RowBox[{
               RowBox[{"maxxis", "[", 
                RowBox[{"[", "1", "]"}], "]"}], "-", 
               RowBox[{"(", 
                RowBox[{
                 RowBox[{"mins", "[", 
                  RowBox[{"[", "1", "]"}], "]"}], "-", 
                 RowBox[{"maxxis", "[", 
                  RowBox[{"[", "1", "]"}], "]"}]}], ")"}]}]}], "]"}], ",", 
            RowBox[{"If", "[", 
             RowBox[{
              RowBox[{
               RowBox[{
                RowBox[{"maxxis", "[", 
                 RowBox[{"[", 
                  RowBox[{"-", "1"}], "]"}], "]"}], "+", 
                RowBox[{"(", 
                 RowBox[{
                  RowBox[{"maxxis", "[", 
                   RowBox[{"[", 
                    RowBox[{"-", "1"}], "]"}], "]"}], "-", 
                  RowBox[{"mins", "[", 
                   RowBox[{"[", 
                    RowBox[{"-", "1"}], "]"}], "]"}]}], ")"}]}], 
               "\[LessEqual]", " ", 
               RowBox[{"Length", "[", "input", "]"}]}], ",", 
              RowBox[{
               RowBox[{"maxxis", "[", 
                RowBox[{"[", 
                 RowBox[{"-", "1"}], "]"}], "]"}], "+", 
               RowBox[{"(", 
                RowBox[{
                 RowBox[{"maxxis", "[", 
                  RowBox[{"[", 
                   RowBox[{"-", "1"}], "]"}], "]"}], "-", 
                 RowBox[{"mins", "[", 
                  RowBox[{"[", 
                   RowBox[{"-", "1"}], "]"}], "]"}]}], ")"}]}], ",", 
              RowBox[{"Length", "[", "input", "]"}]}], "]"}]}], "]"}]}], 
         ";"}], ",", "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{"hwhmi", "=", 
          RowBox[{
           RowBox[{"Position", "[", 
            RowBox[{"input", ",", 
             RowBox[{
              RowBox[{"Nearest", "[", 
               RowBox[{
                RowBox[{"input", "[", 
                 RowBox[{"[", 
                  RowBox[{
                   RowBox[{";;", "maxyi"}], ",", "2"}], "]"}], "]"}], ",", 
                RowBox[{"maxy", "/", "2"}]}], "]"}], "[", 
              RowBox[{"[", "1", "]"}], "]"}]}], "]"}], "[", 
           RowBox[{"[", 
            RowBox[{"1", ",", "1"}], "]"}], "]"}]}], ";", 
         "\[IndentingNewLine]", 
         RowBox[{"mins", "=", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"maxyi", "-", 
             RowBox[{"2", 
              RowBox[{"(", 
               RowBox[{"maxyi", "-", "hwhmi"}], ")"}]}]}], ",", 
            RowBox[{"If", "[", 
             RowBox[{
              RowBox[{
               RowBox[{"maxyi", "+", 
                RowBox[{"2", 
                 RowBox[{"(", 
                  RowBox[{"maxyi", "-", "hwhmi"}], ")"}]}]}], "\[LessEqual]", 
               
               RowBox[{"Length", "[", "input", "]"}]}], ",", 
              RowBox[{"maxyi", "+", 
               RowBox[{"2", 
                RowBox[{"(", 
                 RowBox[{"maxyi", "-", "hwhmi"}], ")"}]}]}], ",", 
              RowBox[{"Length", "[", "input", "]"}]}], "]"}]}], "}"}]}], 
         ";"}]}], "]"}], ";", "\[IndentingNewLine]", 
      RowBox[{"If", "[", 
       RowBox[{
        RowBox[{
         RowBox[{"mins", "[", 
          RowBox[{"[", "1", "]"}], "]"}], "<", "0"}], ",", 
        RowBox[{
         RowBox[{"mins", "[", 
          RowBox[{"[", "1", "]"}], "]"}], "=", "1"}]}], "]"}], ";", "\n", 
      RowBox[{"hwhmi", "=", 
       RowBox[{"Range", "[", 
        RowBox[{"Length", "[", "maxxs", "]"}], "]"}]}], ";", "\n", 
      RowBox[{"Do", "[", 
       RowBox[{
        RowBox[{
         RowBox[{"hwhmi", "[", 
          RowBox[{"[", "i", "]"}], "]"}], "=", 
         RowBox[{
          RowBox[{"Position", "[", 
           RowBox[{"input", ",", 
            RowBox[{
             RowBox[{"Nearest", "[", 
              RowBox[{
               RowBox[{"input", "[", 
                RowBox[{"[", 
                 RowBox[{
                  RowBox[{
                   RowBox[{"mins", "[", 
                    RowBox[{"[", "i", "]"}], "]"}], ";;", 
                   RowBox[{"maxxis", "[", 
                    RowBox[{"[", "i", "]"}], "]"}]}], ",", "2"}], "]"}], 
                "]"}], ",", 
               RowBox[{
                RowBox[{"inter", "[", 
                 RowBox[{"maxxs", "[", 
                  RowBox[{"[", "i", "]"}], "]"}], "]"}], "/", "2"}]}], "]"}], 
             "[", 
             RowBox[{"[", "1", "]"}], "]"}]}], "]"}], "[", 
          RowBox[{"[", 
           RowBox[{"1", ",", "1"}], "]"}], "]"}]}], ",", 
        RowBox[{"{", 
         RowBox[{"i", ",", 
          RowBox[{"Length", "[", "maxxs", "]"}]}], "}"}]}], "]"}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"gammas", "=", 
       RowBox[{"Range", "[", 
        RowBox[{"Length", "[", "hwhmi", "]"}], "]"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"Do", "[", 
       RowBox[{
        RowBox[{
         RowBox[{"gammas", "[", 
          RowBox[{"[", "i", "]"}], "]"}], "=", 
         RowBox[{"2", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"maxxs", "[", 
             RowBox[{"[", "i", "]"}], "]"}], "-", 
            RowBox[{"input", "[", 
             RowBox[{"[", 
              RowBox[{
               RowBox[{"hwhmi", "[", 
                RowBox[{"[", "i", "]"}], "]"}], ",", "1"}], "]"}], "]"}]}], 
           ")"}]}]}], ",", 
        RowBox[{"{", 
         RowBox[{"i", ",", 
          RowBox[{"Length", "[", "hwhmi", "]"}]}], "}"}]}], "]"}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"inputc", "=", 
       RowBox[{"Range", "[", 
        RowBox[{"Length", "[", "maxxs", "]"}], "]"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"Do", "[", 
       RowBox[{
        RowBox[{
         RowBox[{"inputc", "[", 
          RowBox[{"[", "i", "]"}], "]"}], "=", 
         RowBox[{"input", "[", 
          RowBox[{"[", 
           RowBox[{
            RowBox[{"If", "[", 
             RowBox[{
              RowBox[{"i", "\[GreaterEqual]", "2"}], ",", 
              RowBox[{"If", "[", 
               RowBox[{
                RowBox[{
                 RowBox[{
                  RowBox[{"maxxis", "[", 
                   RowBox[{"[", "i", "]"}], "]"}], "-", 
                  RowBox[{"2", 
                   RowBox[{"(", 
                    RowBox[{
                    RowBox[{"maxxis", "[", 
                    RowBox[{"[", "i", "]"}], "]"}], "-", 
                    RowBox[{"hwhmi", "[", 
                    RowBox[{"[", "i", "]"}], "]"}]}], ")"}]}]}], "<", 
                 RowBox[{"mins", "[", 
                  RowBox[{"[", "i", "]"}], "]"}]}], ",", 
                RowBox[{"mins", "[", 
                 RowBox[{"[", "i", "]"}], "]"}], ",", 
                RowBox[{
                 RowBox[{"maxxis", "[", 
                  RowBox[{"[", "i", "]"}], "]"}], "-", 
                 RowBox[{"2", 
                  RowBox[{"(", 
                   RowBox[{
                    RowBox[{"maxxis", "[", 
                    RowBox[{"[", "i", "]"}], "]"}], "-", 
                    RowBox[{"hwhmi", "[", 
                    RowBox[{"[", "i", "]"}], "]"}]}], ")"}]}]}]}], "]"}], ",", 
              RowBox[{"If", "[", 
               RowBox[{
                RowBox[{
                 RowBox[{
                  RowBox[{"maxxis", "[", 
                   RowBox[{"[", "i", "]"}], "]"}], "-", 
                  RowBox[{"2", 
                   RowBox[{"(", 
                    RowBox[{
                    RowBox[{"maxxis", "[", 
                    RowBox[{"[", "i", "]"}], "]"}], "-", 
                    RowBox[{"hwhmi", "[", 
                    RowBox[{"[", "i", "]"}], "]"}]}], ")"}]}]}], ">", "0"}], 
                ",", 
                RowBox[{
                 RowBox[{"maxxis", "[", 
                  RowBox[{"[", "i", "]"}], "]"}], "-", 
                 RowBox[{"2", 
                  RowBox[{"(", 
                   RowBox[{
                    RowBox[{"maxxis", "[", 
                    RowBox[{"[", "i", "]"}], "]"}], "-", 
                    RowBox[{"hwhmi", "[", 
                    RowBox[{"[", "i", "]"}], "]"}]}], ")"}]}]}], ",", "1"}], 
               "]"}]}], "]"}], ";;", 
            RowBox[{"If", "[", 
             RowBox[{
              RowBox[{
               RowBox[{
                RowBox[{"maxxis", "[", 
                 RowBox[{"[", "i", "]"}], "]"}], "+", 
                RowBox[{"2", 
                 RowBox[{"(", 
                  RowBox[{
                   RowBox[{"maxxis", "[", 
                    RowBox[{"[", "i", "]"}], "]"}], "-", 
                   RowBox[{"hwhmi", "[", 
                    RowBox[{"[", "i", "]"}], "]"}]}], ")"}]}]}], "<", 
               RowBox[{"mins", "[", 
                RowBox[{"[", 
                 RowBox[{"i", "+", "1"}], "]"}], "]"}]}], ",", 
              RowBox[{
               RowBox[{"maxxis", "[", 
                RowBox[{"[", "i", "]"}], "]"}], "+", 
               RowBox[{"2", 
                RowBox[{"(", 
                 RowBox[{
                  RowBox[{"maxxis", "[", 
                   RowBox[{"[", "i", "]"}], "]"}], "-", 
                  RowBox[{"hwhmi", "[", 
                   RowBox[{"[", "i", "]"}], "]"}]}], ")"}]}]}], ",", 
              RowBox[{"mins", "[", 
               RowBox[{"[", 
                RowBox[{"i", "+", "1"}], "]"}], "]"}]}], "]"}]}], "]"}], 
          "]"}]}], ",", 
        RowBox[{"{", 
         RowBox[{"i", ",", 
          RowBox[{"Length", "[", "maxxs", "]"}]}], "}"}]}], "]"}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"temp", "=", 
       RowBox[{"Range", "[", 
        RowBox[{"Length", "[", "hwhmi", "]"}], "]"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"Do", "[", 
       RowBox[{
        RowBox[{
         RowBox[{"temp", "[", 
          RowBox[{"[", "i", "]"}], "]"}], "=", 
         RowBox[{"NonlinearModelFit", "[", 
          RowBox[{
           RowBox[{"inputc", "[", 
            RowBox[{"[", "i", "]"}], "]"}], ",", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{"BW", "[", 
              RowBox[{
              "x", ",", "wr1", ",", "\[CapitalGamma]", ",", "\[Delta]bg", ",",
                "const", ",", "shift", ",", "shift2"}], "]"}], ",", 
             RowBox[{"const", ">", "0"}], ",", 
             RowBox[{"\[CapitalGamma]", ">", "0"}]}], "}"}], ",", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{"{", 
              RowBox[{"wr1", ",", 
               RowBox[{"maxxs", "[", 
                RowBox[{"[", "i", "]"}], "]"}]}], "}"}], ",", 
             RowBox[{"{", 
              RowBox[{"\[CapitalGamma]", ",", 
               RowBox[{"gammas", "[", 
                RowBox[{"[", "i", "]"}], "]"}]}], "}"}], ",", 
             RowBox[{"{", 
              RowBox[{"const", ",", 
               RowBox[{"maxys", "[", 
                RowBox[{"[", "i", "]"}], "]"}]}], "}"}], ",", 
             RowBox[{"{", 
              RowBox[{"\[Delta]bg", ",", "0.0"}], "}"}], ",", 
             RowBox[{"{", 
              RowBox[{"shift", ",", "0.0"}], "}"}], ",", 
             RowBox[{"{", 
              RowBox[{"shift2", ",", "0.0"}], "}"}]}], "}"}], ",", "x", ",", 
           RowBox[{"MaxIterations", "\[Rule]", "1000"}]}], "]"}]}], ",", 
        RowBox[{"{", 
         RowBox[{"i", ",", 
          RowBox[{"Length", "[", "hwhmi", "]"}]}], "}"}]}], "]"}], ";", 
      RowBox[{"output", "=", "temp"}], ";"}]}], "]"}]}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"store", "[", 
     RowBox[{"param_", ",", "res_", ",", "model_", ",", "pT_"}], "]"}], ":=", 
    
    RowBox[{"Module", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"temp", "=", 
        RowBox[{"ToString", "[", "res", "]"}]}], "}"}], ",", 
      RowBox[{
       RowBox[{"res", "=", 
        RowBox[{"Range", "[", 
         RowBox[{"Length", "[", "model", "]"}], "]"}]}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{"Do", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"res", "[", 
           RowBox[{"[", "ii", "]"}], "]"}], "=", 
          RowBox[{"Range", "[", 
           RowBox[{"Length", "[", 
            RowBox[{"model", "[", 
             RowBox[{"[", "ii", "]"}], "]"}], "]"}], "]"}]}], ",", 
         RowBox[{"{", 
          RowBox[{"ii", ",", 
           RowBox[{"Length", "[", "res", "]"}]}], "}"}]}], "]"}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{"Do", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"res", "[", 
           RowBox[{"[", 
            RowBox[{"i", ",", "j"}], "]"}], "]"}], "=", 
          RowBox[{"param", "/.", 
           RowBox[{
            RowBox[{"model", "[", 
             RowBox[{"[", 
              RowBox[{"i", ",", "j"}], "]"}], "]"}], "[", 
            "\"\<BestFitParameters\>\"", "]"}]}]}], ",", 
         RowBox[{"{", 
          RowBox[{"i", ",", 
           RowBox[{"Length", "[", "res", "]"}]}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"j", ",", 
           RowBox[{"Length", "[", 
            RowBox[{"res", "[", 
             RowBox[{"[", "i", "]"}], "]"}], "]"}]}], "}"}]}], "]"}], ";", 
       RowBox[{"Export", "[", 
        RowBox[{
         RowBox[{"\"\<results/perp/pT\>\"", "<>", 
          RowBox[{"ToString", "[", "pT", "]"}], "<>", "temp", "<>", 
          "\"\<.dat\>\""}], ",", "res"}], "]"}], ";"}]}], "]"}]}], ";"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"storearea", "[", 
    RowBox[{"res_", ",", "model_", ",", "pT_"}], "]"}], ":=", 
   RowBox[{"Module", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"temp", "=", 
       RowBox[{"ToString", "[", "res", "]"}]}], "}"}], ",", 
     RowBox[{
      RowBox[{"res", "=", 
       RowBox[{"Range", "[", 
        RowBox[{"Length", "[", "model", "]"}], "]"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"Do", "[", 
       RowBox[{
        RowBox[{
         RowBox[{"res", "[", 
          RowBox[{"[", "ii", "]"}], "]"}], "=", 
         RowBox[{"Range", "[", 
          RowBox[{"Length", "[", 
           RowBox[{"model", "[", 
            RowBox[{"[", "ii", "]"}], "]"}], "]"}], "]"}]}], ",", 
        RowBox[{"{", 
         RowBox[{"ii", ",", 
          RowBox[{"Length", "[", "res", "]"}]}], "}"}]}], "]"}], ";", 
      RowBox[{"Do", "[", 
       RowBox[{
        RowBox[{
         RowBox[{"res", "[", 
          RowBox[{"[", 
           RowBox[{"i", ",", "j"}], "]"}], "]"}], "=", 
         RowBox[{
          FractionBox["\[Pi]", "2"], 
          RowBox[{"(", 
           RowBox[{"\[CapitalGamma]", "/.", 
            RowBox[{
             RowBox[{"model", "[", 
              RowBox[{"[", 
               RowBox[{"i", ",", "j"}], "]"}], "]"}], "[", 
             "\"\<BestFitParameters\>\"", "]"}]}], ")"}], 
          RowBox[{"(", " ", 
           RowBox[{"const", "/.", 
            RowBox[{
             RowBox[{"model", "[", 
              RowBox[{"[", 
               RowBox[{"i", ",", "j"}], "]"}], "]"}], "[", 
             "\"\<BestFitParameters\>\"", "]"}]}], ")"}]}]}], ",", 
        RowBox[{"{", 
         RowBox[{"i", ",", 
          RowBox[{"Length", "[", "res", "]"}]}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"j", ",", 
          RowBox[{"Length", "[", 
           RowBox[{"res", "[", 
            RowBox[{"[", "i", "]"}], "]"}], "]"}]}], "}"}]}], "]"}], ";", 
      RowBox[{"Export", "[", 
       RowBox[{
        RowBox[{"\"\<results/perp/pT\>\"", "<>", 
         RowBox[{"ToString", "[", "pT", "]"}], "<>", "temp", "<>", 
         "\"\<.dat\>\""}], ",", "res"}], "]"}], ";"}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"import", "[", 
    RowBox[{"res_", ",", "pT_"}], "]"}], ":=", 
   RowBox[{"Import", "[", 
    RowBox[{"\"\<results/perp/pT\>\"", "<>", 
     RowBox[{"ToString", "[", "pT", "]"}], "<>", 
     RowBox[{"ToString", "[", "res", "]"}], "<>", "\"\<.dat\>\""}], "]"}]}], 
  ";"}]}], "Input",
 CellChangeTimes->{{3.725011819995084*^9, 3.725011822739936*^9}, {
   3.7277029516093273`*^9, 3.7277029707983103`*^9}, {3.72770377220212*^9, 
   3.727703774851506*^9}, {3.727704183456113*^9, 3.727704235986051*^9}, {
   3.727704293099452*^9, 3.7277043013170643`*^9}, {3.727704650937663*^9, 
   3.7277046563118553`*^9}, {3.7277047089071817`*^9, 3.727704722605954*^9}, {
   3.7277593468476477`*^9, 3.72775937353994*^9}, {3.727767951399776*^9, 
   3.7277679609665327`*^9}, {3.727786365837351*^9, 3.7277863661113586`*^9}, {
   3.7277876777187643`*^9, 3.727787689465622*^9}, {3.72784572190436*^9, 
   3.7278457561920156`*^9}, {3.727845811991851*^9, 3.727845812747995*^9}, {
   3.727845884529807*^9, 3.7278459276116*^9}, 3.727942661840372*^9, 
   3.727943172599392*^9, 3.727943318747197*^9, 3.727943484079109*^9, {
   3.727943910169404*^9, 3.727943913531708*^9}, {3.727944406421103*^9, 
   3.727944434023428*^9}, {3.727944642717669*^9, 3.727944652632021*^9}, {
   3.727944696805109*^9, 3.727944714237059*^9}, {3.727944857864943*^9, 
   3.727944943236537*^9}, {3.727945112002225*^9, 3.727945153556973*^9}, {
   3.7279465536173477`*^9, 3.727946576509602*^9}, {3.7279466219931993`*^9, 
   3.727946641020568*^9}, {3.727946745022765*^9, 3.7279467510016947`*^9}, {
   3.727948915813862*^9, 3.7279489220518103`*^9}, {3.727950853888091*^9, 
   3.727950855689782*^9}, {3.7279510545527267`*^9, 3.72795105953828*^9}, {
   3.727951246850439*^9, 3.727951258187858*^9}, {3.727951425412133*^9, 
   3.7279514307077436`*^9}, {3.727953623055787*^9, 3.727953626390915*^9}, 
   3.72795366203069*^9, {3.7279537225963783`*^9, 3.727953726617856*^9}, {
   3.727971101664791*^9, 3.727971105199127*^9}, {3.728011848410287*^9, 
   3.728011850788999*^9}, {3.728029731549341*^9, 3.728029761112349*^9}, {
   3.728052836065872*^9, 3.728052836664957*^9}, {3.728052982785912*^9, 
   3.7280529955647783`*^9}, {3.7280569478616657`*^9, 
   3.7280569604976397`*^9}, {3.7281028074097033`*^9, 
   3.7281028134452477`*^9}, {3.728114140884417*^9, 3.728114141976523*^9}, {
   3.728114191643759*^9, 3.7281142098598423`*^9}, {3.7281196714668207`*^9, 
   3.728119673841776*^9}, {3.728119709731044*^9, 3.728119744682604*^9}, 
   3.7281200289127502`*^9, {3.728120100939199*^9, 3.728120213460887*^9}, {
   3.728120354706056*^9, 3.7281204271928177`*^9}, {3.728120767910965*^9, 
   3.728120773809227*^9}, {3.728121918899763*^9, 3.728121922795506*^9}, {
   3.7281258608721027`*^9, 3.728125884184536*^9}, 3.728125981202344*^9, {
   3.7281314407612658`*^9, 3.728131447169196*^9}, {3.728131583460206*^9, 
   3.7281315859399033`*^9}, 3.728136871222497*^9, {3.733047794520813*^9, 
   3.7330478032220993`*^9}, {3.733048347176607*^9, 3.733048365643635*^9}, {
   3.7334588769411993`*^9, 3.733458887750147*^9}, {3.733463834816124*^9, 
   3.73346384694232*^9}, 3.733475403391897*^9, {3.733483354962577*^9, 
   3.733483367644465*^9}, 3.733483410112524*^9, {3.743766043857224*^9, 
   3.743766050772669*^9}, {3.7437661984151*^9, 3.7437661998625927`*^9}, {
   3.7437662502422028`*^9, 3.743766276321958*^9}, {3.745381707796076*^9, 
   3.745381736594418*^9}, {3.745381844997349*^9, 3.745381850348784*^9}, {
   3.7456021906057167`*^9, 3.745602199698488*^9}, {3.746074558196645*^9, 
   3.74607456890853*^9}, {3.7460748831207237`*^9, 3.746074901632012*^9}, {
   3.746349235340336*^9, 3.746349239141835*^9}, {3.747200645231229*^9, 
   3.747200649387951*^9}, {3.747886690619404*^9, 3.747886699125519*^9}, 
   3.7479347748373947`*^9, {3.754165153509651*^9, 3.754165202142518*^9}, {
   3.754165249427388*^9, 3.754165276872505*^9}, {3.754165340674152*^9, 
   3.754165347748952*^9}, {3.754165460514566*^9, 3.754165462487852*^9}, {
   3.754166225004891*^9, 3.754166265330785*^9}, {3.754205422570629*^9, 
   3.75420546693386*^9}, {3.758211666220532*^9, 3.7582118057759647`*^9}, {
   3.758213315225675*^9, 3.7582133170992947`*^9}, {3.758400506587027*^9, 
   3.7584005071175327`*^9}, {3.7584006374108067`*^9, 
   3.7584006380326967`*^9}, {3.758400904764585*^9, 3.75840091383716*^9}, {
   3.7584816472183323`*^9, 3.758481716692812*^9}, {3.7584817697460213`*^9, 
   3.758481796972303*^9}, {3.758481855393854*^9, 3.758481925844903*^9}, {
   3.7586633344215727`*^9, 3.7586633351556997`*^9}, {3.758664021597375*^9, 
   3.758664021810163*^9}, {3.758664774837081*^9, 3.758664860252309*^9}, {
   3.758665058549572*^9, 3.758665066621266*^9}, {3.7589764850392513`*^9, 
   3.758976485051512*^9}, {3.763556282831799*^9, 3.763556317342701*^9}, {
   3.7635644441951513`*^9, 3.763564456409052*^9}, {3.763566078813693*^9, 
   3.763566090511623*^9}, {3.76356646842772*^9, 3.76356648173708*^9}, {
   3.7635667113922033`*^9, 3.763566731896783*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell["Perform fitting", "Subsection",
 CellChangeTimes->{{3.758213324471237*^9, 3.758213329591319*^9}, {
  3.758213386644705*^9, 3.758213388500249*^9}}],

Cell[BoxData[{
 RowBox[{
  RowBox[{"pT", "=", "0"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"ccdata", "=", 
   RowBox[{"Import", "[", 
    RowBox[{"\"\<cc/perp/pT\>\"", "<>", 
     RowBox[{"ToString", "[", "pT", "]"}], "<>", "\"\</swccpT\>\"", "<>", 
     RowBox[{"ToString", "[", "pT", "]"}], "<>", "\"\<spectraJpsi.dat\>\""}], 
    "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{"Clear", "[", "ccmodel0", "]"}], "\[IndentingNewLine]", 
 RowBox[{"fitONE", "[", 
  RowBox[{"ccdata", ",", "ccmodel0"}], "]"}]}], "Input",
 CellChangeTimes->{{3.763564333313298*^9, 3.7635643344328833`*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"ccmodel0", "[", 
   RowBox[{"[", "1", "]"}], "]"}], "[", "\"\<BestFitParameters\>\"", 
  "]"}]], "Input",
 CellChangeTimes->{{3.759951254793231*^9, 3.759951256499831*^9}, {
  3.7599512949891567`*^9, 3.7599513056027193`*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"wr1", "\[Rule]", "3.0548291207967466`"}], ",", 
   RowBox[{"\[CapitalGamma]", "\[Rule]", "0.052836148853298195`"}], ",", 
   RowBox[{"const", "\[Rule]", "12.582277273985879`"}], ",", 
   RowBox[{"\[Delta]bg", "\[Rule]", "0.9757141018903605`"}], ",", 
   RowBox[{"shift", "\[Rule]", "0.2663037024712936`"}], ",", 
   RowBox[{"shift2", "\[Rule]", "0.09332747129445869`"}]}], "}"}]], "Output",
 CellChangeTimes->{
  3.759951256943219*^9, {3.759951295954108*^9, 3.759951306045025*^9}, 
   3.763564690389353*^9, 3.7635662335996532`*^9, 3.7635666201254463`*^9, 
   3.7635673432361937`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"wr0", "=", 
  RowBox[{"{", 
   RowBox[{
    RowBox[{"wr1", "/.", 
     RowBox[{
      RowBox[{"ccmodel0", "[", 
       RowBox[{"[", "1", "]"}], "]"}], "[", "\"\<BestFitParameters\>\"", 
      "]"}]}], ",", 
    RowBox[{"wr1", "/.", 
     RowBox[{
      RowBox[{"ccmodel0", "[", 
       RowBox[{"[", "2", "]"}], "]"}], "[", "\"\<BestFitParameters\>\"", 
      "]"}]}]}], "}"}]}]], "Input",
 CellChangeTimes->{{3.7599512202139587`*^9, 3.75995131051123*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"3.0548291207967466`", ",", "3.561190514106466`"}], "}"}]], "Output",\

 CellChangeTimes->{
  3.7599512505118504`*^9, {3.75995129111143*^9, 3.759951311285684*^9}, 
   3.763564699555006*^9, 3.7635662358427563`*^9, 3.7635666217213984`*^9, 
   3.763567344972101*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"\[CapitalGamma]0", "=", 
  RowBox[{"{", 
   RowBox[{
    RowBox[{"\[CapitalGamma]", "/.", 
     RowBox[{
      RowBox[{"ccmodel0", "[", 
       RowBox[{"[", "1", "]"}], "]"}], "[", "\"\<BestFitParameters\>\"", 
      "]"}]}], ",", 
    RowBox[{"\[CapitalGamma]", "/.", 
     RowBox[{
      RowBox[{"ccmodel0", "[", 
       RowBox[{"[", "2", "]"}], "]"}], "[", "\"\<BestFitParameters\>\"", 
      "]"}]}]}], "}"}]}]], "Input",
 CellChangeTimes->{{3.7599513186128273`*^9, 3.759951341025028*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"0.052836148853298195`", ",", "0.22549391545380132`"}], 
  "}"}]], "Output",
 CellChangeTimes->{3.759951341912105*^9, 3.763564701547552*^9, 
  3.7635662382485456`*^9, 3.763566624319055*^9, 3.7635673464815493`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"const0", "=", 
  RowBox[{"{", 
   RowBox[{
    RowBox[{"const", "/.", 
     RowBox[{
      RowBox[{"ccmodel0", "[", 
       RowBox[{"[", "1", "]"}], "]"}], "[", "\"\<BestFitParameters\>\"", 
      "]"}]}], ",", 
    RowBox[{"const", "/.", 
     RowBox[{
      RowBox[{"ccmodel0", "[", 
       RowBox[{"[", "2", "]"}], "]"}], "[", "\"\<BestFitParameters\>\"", 
      "]"}]}]}], "}"}]}]], "Input",
 CellChangeTimes->{{3.7599513452017317`*^9, 3.759951364858029*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"12.582277273985879`", ",", "0.9224149963643553`"}], 
  "}"}]], "Output",
 CellChangeTimes->{3.7599513654399967`*^9, 3.763564703526389*^9, 
  3.763566240807231*^9, 3.763566626286495*^9, 3.7635673487788057`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"\[Delta]bg0", "=", 
  RowBox[{"{", 
   RowBox[{
    RowBox[{"\[Delta]bg", "/.", 
     RowBox[{
      RowBox[{"ccmodel0", "[", 
       RowBox[{"[", "1", "]"}], "]"}], "[", "\"\<BestFitParameters\>\"", 
      "]"}]}], ",", 
    RowBox[{"\[Delta]bg", "/.", 
     RowBox[{
      RowBox[{"ccmodel0", "[", 
       RowBox[{"[", "2", "]"}], "]"}], "[", "\"\<BestFitParameters\>\"", 
      "]"}]}]}], "}"}]}]], "Input",
 CellChangeTimes->{{3.7599513735594683`*^9, 3.7599513859494267`*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"0.9757141018903605`", ",", "0.3335395042057831`"}], 
  "}"}]], "Output",
 CellChangeTimes->{3.7599513864026423`*^9, 3.763564706925887*^9, 
  3.7635662431461897`*^9, 3.7635666284737387`*^9, 3.76356735064091*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"shift0", "=", 
  RowBox[{"{", 
   RowBox[{
    RowBox[{"shift", "/.", 
     RowBox[{
      RowBox[{"ccmodel0", "[", 
       RowBox[{"[", "1", "]"}], "]"}], "[", "\"\<BestFitParameters\>\"", 
      "]"}]}], ",", 
    RowBox[{"shift", "/.", 
     RowBox[{
      RowBox[{"ccmodel0", "[", 
       RowBox[{"[", "2", "]"}], "]"}], "[", "\"\<BestFitParameters\>\"", 
      "]"}]}]}], "}"}]}]], "Input",
 CellChangeTimes->{{3.75995138861519*^9, 3.7599514025016527`*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"0.2663037024712936`", ",", "0.5742207302658243`"}], 
  "}"}]], "Output",
 CellChangeTimes->{3.759951402782998*^9, 3.763564708898967*^9, 
  3.763566244917408*^9, 3.763566630395344*^9, 3.7635673518096457`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"shift20", "=", 
  RowBox[{"{", 
   RowBox[{
    RowBox[{"shift2", "/.", 
     RowBox[{
      RowBox[{"ccmodel0", "[", 
       RowBox[{"[", "1", "]"}], "]"}], "[", "\"\<BestFitParameters\>\"", 
      "]"}]}], ",", 
    RowBox[{"shift2", "/.", 
     RowBox[{
      RowBox[{"ccmodel0", "[", 
       RowBox[{"[", "2", "]"}], "]"}], "[", "\"\<BestFitParameters\>\"", 
      "]"}]}]}], "}"}]}]], "Input",
 CellChangeTimes->{{3.759951405157754*^9, 3.759951418549077*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"0.09332747129445869`", ",", "0.5684470007582126`"}], 
  "}"}]], "Output",
 CellChangeTimes->{{3.759951416406701*^9, 3.759951419422698*^9}, 
   3.763564710668304*^9, 3.7635662467512302`*^9, 3.763566632021102*^9, 
   3.7635673537999773`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"area0", "=", 
  RowBox[{"{", 
   RowBox[{
    RowBox[{
     FractionBox["\[Pi]", "2"], 
     RowBox[{"(", 
      RowBox[{"\[CapitalGamma]", "/.", 
       RowBox[{
        RowBox[{"ccmodel0", "[", 
         RowBox[{"[", "1", "]"}], "]"}], "[", "\"\<BestFitParameters\>\"", 
        "]"}]}], ")"}], 
     RowBox[{"(", " ", 
      RowBox[{"const", "/.", 
       RowBox[{
        RowBox[{"ccmodel0", "[", 
         RowBox[{"[", "1", "]"}], "]"}], "[", "\"\<BestFitParameters\>\"", 
        "]"}]}], ")"}]}], ",", 
    RowBox[{
     FractionBox["\[Pi]", "2"], 
     RowBox[{"(", 
      RowBox[{"\[CapitalGamma]", "/.", 
       RowBox[{
        RowBox[{"ccmodel0", "[", 
         RowBox[{"[", "2", "]"}], "]"}], "[", "\"\<BestFitParameters\>\"", 
        "]"}]}], ")"}], 
     RowBox[{"(", " ", 
      RowBox[{"const", "/.", 
       RowBox[{
        RowBox[{"ccmodel0", "[", 
         RowBox[{"[", "2", "]"}], "]"}], "[", "\"\<BestFitParameters\>\"", 
        "]"}]}], ")"}]}]}], "}"}]}]], "Input",
 CellChangeTimes->{{3.7599514257027884`*^9, 3.7599514838559933`*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"1.0442639450066231`", ",", "0.32672401680198637`"}], 
  "}"}]], "Output",
 CellChangeTimes->{3.759951484918544*^9, 3.763564712577516*^9, 
  3.7635662494302073`*^9, 3.763566633754528*^9, 3.763567356714181*^9}]
}, Open  ]],

Cell[BoxData[{
 RowBox[{
  RowBox[{"pT", "=", "2"}], ";"}], "\n", 
 RowBox[{
  RowBox[{"Do", "[", 
   RowBox[{
    RowBox[{
     RowBox[{
      RowBox[{"ccdata", "[", "i", "]"}], "=", 
      RowBox[{"Import", "[", 
       RowBox[{"\"\<cc/perp/pT\>\"", "<>", 
        RowBox[{"ToString", "[", "pT", "]"}], "<>", "\"\</swccpT\>\"", "<>", 
        RowBox[{"ToString", "[", "pT", "]"}], "<>", "\"\<ang\>\"", "<>", 
        RowBox[{"ToString", "[", "i", "]"}], "<>", 
        "\"\<spectraJpsi.dat\>\""}], "]"}]}], ";"}], ",", 
    RowBox[{"{", 
     RowBox[{"i", ",", "51"}], "}"}]}], "]"}], ";"}], "\n", 
 RowBox[{"Clear", "[", "ccmodel", "]"}], "\n", 
 RowBox[{
  RowBox[{"fit", "[", 
   RowBox[{"ccdata", ",", "ccmodel", ",", "51"}], "]"}], ";"}], "\n", 
 RowBox[{
  RowBox[{"Clear", "[", 
   RowBox[{
   "wrfitcc", ",", "gfitcc", ",", "areafitcc", ",", "cfitcc", ",", "dfitcc", 
    ",", "sfitcc", ",", "s2fitcc"}], "]"}], ";"}], "\n", 
 RowBox[{
  RowBox[{"store", "[", 
   RowBox[{"wr", ",", "wrfitcc", ",", "ccmodel", ",", "pT"}], "]"}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"store", "[", 
   RowBox[{"\[CapitalGamma]", ",", "gfitcc", ",", "ccmodel", ",", "pT"}], 
   "]"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"store", "[", 
   RowBox[{"const", ",", "cfitcc", ",", "ccmodel", ",", "pT"}], "]"}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"store", "[", 
   RowBox[{"\[Delta]bg", ",", "dfitcc", ",", "ccmodel", ",", "pT"}], "]"}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"store", "[", 
   RowBox[{"shift", ",", "sfitcc", ",", "ccmodel", ",", "pT"}], "]"}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"store", "[", 
   RowBox[{"shift2", ",", "s2fitcc", ",", "ccmodel", ",", "pT"}], "]"}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"storearea", "[", 
   RowBox[{"areafitcc", ",", "ccmodel", ",", "pT"}], "]"}], ";"}]}], "Input",
 CellChangeTimes->{{3.758212605017861*^9, 3.7582126082721233`*^9}, {
   3.758212689544549*^9, 3.75821269125163*^9}, {3.758212915864624*^9, 
   3.758212972172599*^9}, {3.758213047374237*^9, 3.758213047694623*^9}, {
   3.7582130788043833`*^9, 3.758213164924611*^9}, {3.758400362388665*^9, 
   3.758400362585599*^9}, {3.758401132221274*^9, 3.758401140493024*^9}, 
   3.758481096751586*^9, {3.758481258450405*^9, 3.758481275734441*^9}, {
   3.7584820000641003`*^9, 3.758482004948923*^9}, 3.758976485062586*^9}],

Cell[BoxData[{
 RowBox[{
  RowBox[{"pT", "=", "5"}], ";"}], "\n", 
 RowBox[{
  RowBox[{"Do", "[", 
   RowBox[{
    RowBox[{
     RowBox[{
      RowBox[{"ccdata", "[", "i", "]"}], "=", 
      RowBox[{"Import", "[", 
       RowBox[{"\"\<cc/perp/pT\>\"", "<>", 
        RowBox[{"ToString", "[", "pT", "]"}], "<>", "\"\</swccpT\>\"", "<>", 
        RowBox[{"ToString", "[", "pT", "]"}], "<>", "\"\<ang\>\"", "<>", 
        RowBox[{"ToString", "[", "i", "]"}], "<>", 
        "\"\<spectraJpsi.dat\>\""}], "]"}]}], ";"}], ",", 
    RowBox[{"{", 
     RowBox[{"i", ",", "51"}], "}"}]}], "]"}], ";"}], "\n", 
 RowBox[{"Clear", "[", "ccmodel", "]"}], "\n", 
 RowBox[{
  RowBox[{"fit", "[", 
   RowBox[{"ccdata", ",", "ccmodel", ",", "51"}], "]"}], ";"}], "\n", 
 RowBox[{
  RowBox[{"Clear", "[", 
   RowBox[{
   "wrfitcc", ",", "gfitcc", ",", "areafitcc", ",", "cfitcc", ",", "dfitcc", 
    ",", "sfitcc", ",", "s2fitcc"}], "]"}], ";"}], "\n", 
 RowBox[{
  RowBox[{"store", "[", 
   RowBox[{"wr", ",", "wrfitcc", ",", "ccmodel", ",", "pT"}], "]"}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"store", "[", 
   RowBox[{"\[CapitalGamma]", ",", "gfitcc", ",", "ccmodel", ",", "pT"}], 
   "]"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"store", "[", 
   RowBox[{"const", ",", "cfitcc", ",", "ccmodel", ",", "pT"}], "]"}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"store", "[", 
   RowBox[{"\[Delta]bg", ",", "dfitcc", ",", "ccmodel", ",", "pT"}], "]"}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"store", "[", 
   RowBox[{"shift", ",", "sfitcc", ",", "ccmodel", ",", "pT"}], "]"}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"store", "[", 
   RowBox[{"shift2", ",", "s2fitcc", ",", "ccmodel", ",", "pT"}], "]"}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"storearea", "[", 
   RowBox[{"areafitcc", ",", "ccmodel", ",", "pT"}], "]"}], ";"}]}], "Input",
 CellChangeTimes->{{3.758212605017861*^9, 3.7582126082721233`*^9}, {
   3.758212689544549*^9, 3.75821269125163*^9}, {3.758212915864624*^9, 
   3.758212972172599*^9}, {3.758213047374237*^9, 3.758213047694623*^9}, {
   3.7582130788043833`*^9, 3.758213164924611*^9}, {3.758400362388665*^9, 
   3.758400362585599*^9}, {3.758401132221274*^9, 3.758401158300662*^9}, {
   3.7584819805018272`*^9, 3.758481982495976*^9}, 3.75897648507298*^9}],

Cell[BoxData[{
 RowBox[{
  RowBox[{"pT", "=", "10"}], ";"}], "\n", 
 RowBox[{
  RowBox[{"Do", "[", 
   RowBox[{
    RowBox[{
     RowBox[{
      RowBox[{"ccdata", "[", "i", "]"}], "=", 
      RowBox[{"Import", "[", 
       RowBox[{"\"\<cc/perp/pT\>\"", "<>", 
        RowBox[{"ToString", "[", "pT", "]"}], "<>", "\"\</swccpT\>\"", "<>", 
        RowBox[{"ToString", "[", "pT", "]"}], "<>", "\"\<ang\>\"", "<>", 
        RowBox[{"ToString", "[", "i", "]"}], "<>", 
        "\"\<spectraJpsi.dat\>\""}], "]"}]}], ";"}], ",", 
    RowBox[{"{", 
     RowBox[{"i", ",", "51"}], "}"}]}], "]"}], ";"}], "\n", 
 RowBox[{"Clear", "[", "ccmodel", "]"}], "\n", 
 RowBox[{
  RowBox[{"fit", "[", 
   RowBox[{"ccdata", ",", "ccmodel", ",", "51"}], "]"}], ";"}], "\n", 
 RowBox[{
  RowBox[{"Clear", "[", 
   RowBox[{
   "wrfitcc", ",", "gfitcc", ",", "areafitcc", ",", "cfitcc", ",", "dfitcc", 
    ",", "sfitcc", ",", "s2fitcc"}], "]"}], ";"}], "\n", 
 RowBox[{
  RowBox[{"store", "[", 
   RowBox[{"wr", ",", "wrfitcc", ",", "ccmodel", ",", "pT"}], "]"}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"store", "[", 
   RowBox[{"\[CapitalGamma]", ",", "gfitcc", ",", "ccmodel", ",", "pT"}], 
   "]"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"store", "[", 
   RowBox[{"const", ",", "cfitcc", ",", "ccmodel", ",", "pT"}], "]"}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"store", "[", 
   RowBox[{"\[Delta]bg", ",", "dfitcc", ",", "ccmodel", ",", "pT"}], "]"}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"store", "[", 
   RowBox[{"shift", ",", "sfitcc", ",", "ccmodel", ",", "pT"}], "]"}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"store", "[", 
   RowBox[{"shift2", ",", "s2fitcc", ",", "ccmodel", ",", "pT"}], "]"}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"storearea", "[", 
   RowBox[{"areafitcc", ",", "ccmodel", ",", "pT"}], "]"}], ";"}]}], "Input",
 CellChangeTimes->{{3.758212605017861*^9, 3.7582126082721233`*^9}, {
   3.758212689544549*^9, 3.75821269125163*^9}, {3.758212915864624*^9, 
   3.758212972172599*^9}, {3.758213047374237*^9, 3.758213047694623*^9}, {
   3.7582130788043833`*^9, 3.758213164924611*^9}, {3.758400362388665*^9, 
   3.758400362585599*^9}, {3.758401132221274*^9, 3.758401167138772*^9}, {
   3.758481983104192*^9, 3.7584819890367203`*^9}, 3.758976485083692*^9}],

Cell[BoxData[{
 RowBox[{
  RowBox[{"pT", "=", "15"}], ";"}], "\n", 
 RowBox[{
  RowBox[{"Do", "[", 
   RowBox[{
    RowBox[{
     RowBox[{
      RowBox[{"ccdata", "[", "i", "]"}], "=", 
      RowBox[{"Import", "[", 
       RowBox[{"\"\<cc/perp/pT\>\"", "<>", 
        RowBox[{"ToString", "[", "pT", "]"}], "<>", "\"\</swccpT\>\"", "<>", 
        RowBox[{"ToString", "[", "pT", "]"}], "<>", "\"\<ang\>\"", "<>", 
        RowBox[{"ToString", "[", "i", "]"}], "<>", 
        "\"\<spectraJpsi.dat\>\""}], "]"}]}], ";"}], ",", 
    RowBox[{"{", 
     RowBox[{"i", ",", "51"}], "}"}]}], "]"}], ";"}], "\n", 
 RowBox[{"Clear", "[", "ccmodel", "]"}], "\n", 
 RowBox[{
  RowBox[{"fit", "[", 
   RowBox[{"ccdata", ",", "ccmodel", ",", "51"}], "]"}], ";"}], "\n", 
 RowBox[{
  RowBox[{"Clear", "[", 
   RowBox[{
   "wrfitcc", ",", "gfitcc", ",", "areafitcc", ",", "cfitcc", ",", "dfitcc", 
    ",", "sfitcc", ",", "s2fitcc"}], "]"}], ";"}], "\n", 
 RowBox[{
  RowBox[{"store", "[", 
   RowBox[{"wr", ",", "wrfitcc", ",", "ccmodel", ",", "pT"}], "]"}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"store", "[", 
   RowBox[{"\[CapitalGamma]", ",", "gfitcc", ",", "ccmodel", ",", "pT"}], 
   "]"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"store", "[", 
   RowBox[{"const", ",", "cfitcc", ",", "ccmodel", ",", "pT"}], "]"}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"store", "[", 
   RowBox[{"\[Delta]bg", ",", "dfitcc", ",", "ccmodel", ",", "pT"}], "]"}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"store", "[", 
   RowBox[{"shift", ",", "sfitcc", ",", "ccmodel", ",", "pT"}], "]"}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"store", "[", 
   RowBox[{"shift2", ",", "s2fitcc", ",", "ccmodel", ",", "pT"}], "]"}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"storearea", "[", 
   RowBox[{"areafitcc", ",", "ccmodel", ",", "pT"}], "]"}], ";"}]}], "Input",
 CellChangeTimes->{{3.758212605017861*^9, 3.7582126082721233`*^9}, {
   3.758212689544549*^9, 3.75821269125163*^9}, {3.758212915864624*^9, 
   3.758212972172599*^9}, {3.758213047374237*^9, 3.758213047694623*^9}, {
   3.7582130788043833`*^9, 3.758213164924611*^9}, {3.758400362388665*^9, 
   3.758400362585599*^9}, {3.758401132221274*^9, 3.758401167138772*^9}, {
   3.758481983104192*^9, 3.7584819890367203`*^9}, {3.7584821961592093`*^9, 
   3.758482196252659*^9}, 3.758976485094345*^9}],

Cell[BoxData[{
 RowBox[{
  RowBox[{"pT", "=", "20"}], ";"}], "\n", 
 RowBox[{
  RowBox[{"Do", "[", 
   RowBox[{
    RowBox[{
     RowBox[{
      RowBox[{"ccdata", "[", "i", "]"}], "=", 
      RowBox[{"Import", "[", 
       RowBox[{"\"\<cc/perp/pT\>\"", "<>", 
        RowBox[{"ToString", "[", "pT", "]"}], "<>", "\"\</swccpT\>\"", "<>", 
        RowBox[{"ToString", "[", "pT", "]"}], "<>", "\"\<ang\>\"", "<>", 
        RowBox[{"ToString", "[", "i", "]"}], "<>", 
        "\"\<spectraJpsi.dat\>\""}], "]"}]}], ";"}], ",", 
    RowBox[{"{", 
     RowBox[{"i", ",", "51"}], "}"}]}], "]"}], ";"}], "\n", 
 RowBox[{"Clear", "[", "ccmodel", "]"}], "\n", 
 RowBox[{
  RowBox[{"fit", "[", 
   RowBox[{"ccdata", ",", "ccmodel", ",", "51"}], "]"}], ";"}], "\n", 
 RowBox[{
  RowBox[{"Clear", "[", 
   RowBox[{
   "wrfitcc", ",", "gfitcc", ",", "areafitcc", ",", "cfitcc", ",", "dfitcc", 
    ",", "sfitcc", ",", "s2fitcc"}], "]"}], ";"}], "\n", 
 RowBox[{
  RowBox[{"store", "[", 
   RowBox[{"wr", ",", "wrfitcc", ",", "ccmodel", ",", "pT"}], "]"}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"store", "[", 
   RowBox[{"\[CapitalGamma]", ",", "gfitcc", ",", "ccmodel", ",", "pT"}], 
   "]"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"store", "[", 
   RowBox[{"const", ",", "cfitcc", ",", "ccmodel", ",", "pT"}], "]"}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"store", "[", 
   RowBox[{"\[Delta]bg", ",", "dfitcc", ",", "ccmodel", ",", "pT"}], "]"}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"store", "[", 
   RowBox[{"shift", ",", "sfitcc", ",", "ccmodel", ",", "pT"}], "]"}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"store", "[", 
   RowBox[{"shift2", ",", "s2fitcc", ",", "ccmodel", ",", "pT"}], "]"}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"storearea", "[", 
   RowBox[{"areafitcc", ",", "ccmodel", ",", "pT"}], "]"}], ";"}]}], "Input",
 CellChangeTimes->{{3.758212605017861*^9, 3.7582126082721233`*^9}, {
   3.758212689544549*^9, 3.75821269125163*^9}, {3.758212915864624*^9, 
   3.758212972172599*^9}, {3.758213047374237*^9, 3.758213047694623*^9}, {
   3.7582130788043833`*^9, 3.758213164924611*^9}, {3.758400362388665*^9, 
   3.758400362585599*^9}, {3.758401132221274*^9, 3.758401167138772*^9}, {
   3.758481983104192*^9, 3.7584819890367203`*^9}, {3.758482201865794*^9, 
   3.7584822019641123`*^9}, 3.7589764851050053`*^9}],

Cell[BoxData[{
 RowBox[{
  RowBox[{"pT", "=", "25"}], ";"}], "\n", 
 RowBox[{
  RowBox[{"Do", "[", 
   RowBox[{
    RowBox[{
     RowBox[{
      RowBox[{"ccdata", "[", "i", "]"}], "=", 
      RowBox[{"Import", "[", 
       RowBox[{"\"\<cc/perp/pT\>\"", "<>", 
        RowBox[{"ToString", "[", "pT", "]"}], "<>", "\"\</swccpT\>\"", "<>", 
        RowBox[{"ToString", "[", "pT", "]"}], "<>", "\"\<ang\>\"", "<>", 
        RowBox[{"ToString", "[", "i", "]"}], "<>", 
        "\"\<spectraJpsi.dat\>\""}], "]"}]}], ";"}], ",", 
    RowBox[{"{", 
     RowBox[{"i", ",", "51"}], "}"}]}], "]"}], ";"}], "\n", 
 RowBox[{"Clear", "[", "ccmodel", "]"}], "\n", 
 RowBox[{
  RowBox[{"fit", "[", 
   RowBox[{"ccdata", ",", "ccmodel", ",", "51"}], "]"}], ";"}], "\n", 
 RowBox[{
  RowBox[{"Clear", "[", 
   RowBox[{
   "wrfitcc", ",", "gfitcc", ",", "areafitcc", ",", "cfitcc", ",", "dfitcc", 
    ",", "sfitcc", ",", "s2fitcc"}], "]"}], ";"}], "\n", 
 RowBox[{
  RowBox[{"store", "[", 
   RowBox[{"wr", ",", "wrfitcc", ",", "ccmodel", ",", "pT"}], "]"}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"store", "[", 
   RowBox[{"\[CapitalGamma]", ",", "gfitcc", ",", "ccmodel", ",", "pT"}], 
   "]"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"store", "[", 
   RowBox[{"const", ",", "cfitcc", ",", "ccmodel", ",", "pT"}], "]"}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"store", "[", 
   RowBox[{"\[Delta]bg", ",", "dfitcc", ",", "ccmodel", ",", "pT"}], "]"}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"store", "[", 
   RowBox[{"shift", ",", "sfitcc", ",", "ccmodel", ",", "pT"}], "]"}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"store", "[", 
   RowBox[{"shift2", ",", "s2fitcc", ",", "ccmodel", ",", "pT"}], "]"}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"storearea", "[", 
   RowBox[{"areafitcc", ",", "ccmodel", ",", "pT"}], "]"}], ";"}]}], "Input",
 CellChangeTimes->{{3.758212605017861*^9, 3.7582126082721233`*^9}, {
   3.758212689544549*^9, 3.75821269125163*^9}, {3.758212915864624*^9, 
   3.758212972172599*^9}, {3.758213047374237*^9, 3.758213047694623*^9}, {
   3.7582130788043833`*^9, 3.758213164924611*^9}, {3.758400362388665*^9, 
   3.758400362585599*^9}, {3.758401132221274*^9, 3.758401167138772*^9}, {
   3.758481983104192*^9, 3.7584819890367203`*^9}, {3.7584822073006697`*^9, 
   3.758482207838153*^9}, 3.758976485115325*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell["View results (old)", "Subsection",
 CellChangeTimes->{{3.733198514173415*^9, 3.7331985248017063`*^9}, {
  3.758665621944891*^9, 3.758665623871488*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"Do", "[", 
   RowBox[{
    RowBox[{
     RowBox[{
      RowBox[{"ccdata", "[", "i", "]"}], "=", 
      RowBox[{"Import", "[", 
       RowBox[{"\"\<cc/perp/pT\>\"", "<>", 
        RowBox[{"ToString", "[", "pT", "]"}], "<>", "\"\</swccpT\>\"", "<>", 
        RowBox[{"ToString", "[", "pT", "]"}], "<>", "\"\<ang\>\"", "<>", 
        RowBox[{"ToString", "[", "i", "]"}], "<>", 
        "\"\<spectraJpsi.dat\>\""}], "]"}]}], ";"}], ",", 
    RowBox[{"{", 
     RowBox[{"i", ",", "51"}], "}"}]}], "]"}], ";"}]], "Input",
 CellChangeTimes->{3.758976485125208*^9}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Block", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{"i", "=", "5"}], ",", 
     RowBox[{"ii", "=", "2"}]}], "}"}], ",", 
   RowBox[{"Show", "[", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"ListPlot", "[", 
       RowBox[{
        RowBox[{"ccdata", "[", "i", "]"}], ",", 
        RowBox[{"Joined", "\[Rule]", "True"}]}], "]"}], ",", 
      RowBox[{"Plot", "[", 
       RowBox[{
        RowBox[{"BW", "[", 
         RowBox[{"x", ",", 
          RowBox[{"wrfitcc", "[", 
           RowBox[{"[", 
            RowBox[{"i", ",", "ii"}], "]"}], "]"}], ",", 
          RowBox[{"gfitcc", "[", 
           RowBox[{"[", 
            RowBox[{"i", ",", "ii"}], "]"}], "]"}], ",", 
          RowBox[{"dfitcc", "[", 
           RowBox[{"[", 
            RowBox[{"i", ",", "ii"}], "]"}], "]"}], ",", 
          RowBox[{"cfitcc", "[", 
           RowBox[{"[", 
            RowBox[{"i", ",", "ii"}], "]"}], "]"}], ",", 
          RowBox[{"sfitcc", "[", 
           RowBox[{"[", 
            RowBox[{"i", ",", "ii"}], "]"}], "]"}], ",", 
          RowBox[{"s2fitcc", "[", 
           RowBox[{"[", 
            RowBox[{"i", ",", "ii"}], "]"}], "]"}]}], "]"}], ",", 
        RowBox[{"{", 
         RowBox[{"x", ",", 
          RowBox[{"0.7", 
           RowBox[{"wrfitcc", "[", 
            RowBox[{"[", 
             RowBox[{"i", ",", "ii"}], "]"}], "]"}]}], ",", 
          RowBox[{"1.3", 
           RowBox[{"wrfitcc", "[", 
            RowBox[{"[", 
             RowBox[{"i", ",", "ii"}], "]"}], "]"}]}]}], "}"}], ",", 
        RowBox[{"PlotStyle", "\[Rule]", 
         RowBox[{"{", 
          RowBox[{"Red", ",", "Dashed"}], "}"}]}], ",", 
        RowBox[{"PlotRange", "\[Rule]", "All"}]}], "]"}], ",", 
      RowBox[{"Plot", "[", 
       RowBox[{
        RowBox[{"BWi", "[", 
         RowBox[{"x", ",", 
          RowBox[{"wrfitcc", "[", 
           RowBox[{"[", 
            RowBox[{"i", ",", "ii"}], "]"}], "]"}], ",", 
          RowBox[{"gfitcc", "[", 
           RowBox[{"[", 
            RowBox[{"i", ",", "ii"}], "]"}], "]"}], ",", 
          RowBox[{"cfitcc", "[", 
           RowBox[{"[", 
            RowBox[{"i", ",", "ii"}], "]"}], "]"}]}], "]"}], ",", 
        RowBox[{"{", 
         RowBox[{"x", ",", 
          RowBox[{"0.7", 
           RowBox[{"wrfitcc", "[", 
            RowBox[{"[", 
             RowBox[{"i", ",", "ii"}], "]"}], "]"}]}], ",", 
          RowBox[{"1.3", 
           RowBox[{"wrfitcc", "[", 
            RowBox[{"[", 
             RowBox[{"i", ",", "ii"}], "]"}], "]"}]}]}], "}"}], ",", 
        RowBox[{"PlotStyle", "\[Rule]", 
         RowBox[{"{", 
          RowBox[{"Green", ",", "Dashed"}], "}"}]}], ",", 
        RowBox[{"PlotRange", "\[Rule]", "All"}]}], "]"}]}], "}"}], "]"}]}], 
  "]"}]], "Input",
 CellChangeTimes->{{3.727702145749645*^9, 3.727702164858941*^9}, {
   3.727786599290174*^9, 3.7277866016307077`*^9}, {3.727786661496475*^9, 
   3.727786790870613*^9}, {3.727786832271*^9, 3.7277868362431602`*^9}, {
   3.727846443680401*^9, 3.727846455749556*^9}, {3.728063498543194*^9, 
   3.7280635009451942`*^9}, {3.72925714204338*^9, 3.729257175627865*^9}, {
   3.7301863648013363`*^9, 3.730186368349718*^9}, {3.733474578105546*^9, 
   3.733474613225963*^9}, {3.748240543336813*^9, 3.748240558602428*^9}, 
   3.758540112190514*^9, {3.7585404653772697`*^9, 3.7585404794290113`*^9}, {
   3.758540575319294*^9, 3.758540577800462*^9}, {3.75854068526296*^9, 
   3.75854071749393*^9}}],

Cell[BoxData[
 GraphicsBox[{{{}, {{}, {}, 
     {RGBColor[0.368417, 0.506779, 0.709798], PointSize[0.002777777777777778],
       AbsoluteThickness[1.6], LineBox[CompressedData["
1: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
1Rlzkk855u1zDycLHjLgblailFgFPt/+u99/P2FAeVunfBZ669CZ48YNDCiZ
u3Lzntskgkln7M1tYUCh1rE9HejliwfdfrUzIN/zsvGZO9jvsu37rLsZkJvW
f2T+XRKx4SDzS2EvA7KeK7vnoPcNGzDnf2JAxj/PAN1KzN86WYUnhxiQsq2Q
04VeELjk8NNRBiS5jsX53cPvC+7fv/kHA+KStl9acB/nn6HqcMJvBkTVnSvM
RTM2GsD4PwaE/bp7Dx6QiKTpbbLH5jKBt+lP/Wu0xwb3u4/FmcA6Rrw6W4X9
x/ZBs7oUExix3M8LH+LnD+26krWUCcHVtZNX0QFjih2LVjEhYGI+ee8j3Het
PYroCkzwXW+6+A06uUdceXw9E7yPxK05V43Pa8zc6bOJCR7hbZulajCfq9T/
6lRngtu9ZToF6Ceh1on2O5ng9M3ugMFjrN9HIqGde5jgsCbD9h36hMB/l7Ue
E2wPv3cPfkIilj0XK2/ezwQrrmLgkqfYv2xyQg6YMMG83J17A636yvVr02Em
mAzkx++vxX4WJvvy6BEmGK34duk9urK34EGPAxMMDqoX0epIRErQW7KHCxMI
5tn7Ms9wn/SS0Bg5yYQ9xRUNRWjBqqJhtg8TtD78emVUj+9LLExn4VkmbJfW
HehD9znJNaUFM2HrPtYPRgOJOP3t3v0tIUzYFPSYLNuI+eFxfvIjLhM25Isu
KUHHFrHP2oYzQbHHWOFgE9a3qsXsrxgmrFkYveUT2snHMjD6PBNWwQud0Ock
ImzUwko1lQmyftIHVzRjXlq9/+azS0xYkmNjV4ZOY48HncxlwqKOiydNW0hE
19Hwj3OvM0Fc7G3gANplt5hiyU0miO5S4LFfYH5ONgqyrmAC6ZRrwqqXuK+w
njz5e48Jf9PzLpejuZ7iW3KrmfC7ebDIrBXnyQ7Wdos6JkyJbH4wiO415I+J
PmfCuIZvI7cN84O1dWhFKxNG3Mpey7Vjvuv68vHkKyYMJU8N3EZvEBzeuvwd
Ez4/2zV1uAP3catV7e39TOj7zaAMo5lNagfjBpnwTu3REkEnzofup6H7R5nQ
7Uheq9CF9/Hj342iP5jQGbd/ayW64SyZ9OQ3E1prwnWtXpEI9eSP7UKREGie
bDo4gtas/jnPRDQEGpSl7MNeYx5XEZFcIBECtbaWHuu6cT8f0Z3TtjgEaiKS
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
NEi5zTBddsDnfUXN3NwzGkQL+I/NY7s7UFJu+UeD0PQd0ScP8HxyCLALjIwG
gQP5cNiRhFyn1VeFUqOB99yPS+XY6XWvbgwVRMNRJ4mb6k64Hz6eY3OviQaO
LKc7i9ictvEi4q+jgfVdtfNTZ5z3uFa0fg5Fw8E9O96cD3H+tXkSV/ohGvbD
mbBKbDPGXYPei9Gwx/ZpisYjEtqgzjS6/isaaFNeFy1h6wZN2IlRxQBplK7R
2wXXR7yYJwtDDFCSL/dxuZJQxiFmazJbDGyffvW+Gvt9eIPeL94Y2Lgzsqjl
RkIsoncU10RjYC2W5c8y9pO1cwLr8jGw0qdLfvGYhEgzcmyUF2JgiSL+4DF3
ErKU2EvPrB0D82LTx+qwDyWrzokZx8CMKY/YdQ9c79/2n755Pwamwi3QD+y3
UJD47FEMvO/Ivuznie/XV+UT1d4xML757SbvE1y/XHUnN4NjYOSkqFUDdplu
4w2ZhBgY0Hd4eMML593ioqTnOTHQE1Tx/Cd21Dd62/cVMdDRvBkW8BT3R0PT
iTOtMdC6Jp/K/wzn3wqa+fiBGGjk8yxuwlaSfavEOBkDtTqtjXreuL7JhyR8
FmKg0pfcv469tKh3bvevGCitvTAZ+JyEVgoZ/gRTxULhcsDXEz54fjz1jeDb
Gwu5XIN/WrA1HBaP1LHHQoYG0y79F/j9rn5c0j8eCylPrzNvYB8S1GQlS8ZC
Ynk0T7Avnu/nN/+rORMLMfOTYif9SCjCbYTH6XIsRLAdPdOOrXwpdlVBLxZC
LppeMfQnISfTVkpay1gIfJxxaxPb5EWK1QeHWPArXLQKDcDzP5n5S71nLDz/
dOqR0Eu8jy4fFMx4GQteTLY+HdhN7r090TGx4K5cGm4ciPcvKevU8MxYeOT8
O3ULu51LKSi8LBYcs2VLwoNwPXzJc0hujgX7925NIq9I6PeTHvba/li4z9DU
34W9ri+zZ+R9LNxBNB9Mg3Geuv6q6O9CLJjbqSztYK+oO/uc/B0Lxqm+m5Eh
eF8RFfEzpIkD/Te9u8RD8TzM8JlK3x8Hurv2s/Rit/Kut3znjANtWS1eizAS
OmVTwqpyMg407kaIU4bjfh3BWhUnEweX49+eicHuebBwjVYlDi4McKhLRuB9
tpzR3kErDpSpjPT7senVssVXjeJAUSL17u1IXP8Ku8zuW8eBgvncI+ooEvr1
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
TygbaZQxsWpBO3mkX5WJZyP/A+vqhQs=
       "]], LineBox[CompressedData["
1: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
P3yxaGMz1psNkhsdxjHvN94870FffBvu5zyGef8g8/HsV8wvUS2PGsa8/93S
rtSCeUt9nDk6IAJf46uDxeg/M7bcvYX15Ih7M2/zNwqZc+3jl54ezPv1OdP7
0DMv2TyM+o15f+OiENZKIduSXdrFujDv/Js6c9twHv2PZdnxE/O+sNu4DL2W
2WGu/APzvnee9dbvWI9cO37ZtGLe4w/ZDaDt38y6mPkV+/uLh3vCf+D9aje9
mNCE/Z054q3WjvVvqXJl/Sfs7/ONT5ejn1Xu7P6O9Zc4BURt/4n7+7RpAS+w
PltFl18fQqsMN87Px/ptUSm4G9GB83/V01dhtSIwG1lVrNFJIZtu6tkcqBGB
iUZYzRO08srzlmeqsb9vr/u4owvnHc8DLkNPsL+HT/85gt5XUmrXWIb9vWzj
UFQ3hSz20J8fXSwCrb7LfK1fFHJy1fM5pgXY35U/T69C57q8eVWYKwKVTbMV
HX9TSESY5CTBfqZ4xmneOHppiDQ/DvudfEG6SUwP3peeseIh7Idy3T+t5/Vi
PXl18Iz6TRFIz9La+gxdcHtgZUcq9vd1Hnt3/cH5wcJy9d8k7O+B/x1hoIca
JXSuXhWBKGfwdFwffj5IYqznMvb374sv6fZj/dYQO9V8Cfu77PHkGvTM26uv
hGN/p1uVZrsM4HwprrK3Bfv/iB+3mIW+Nv7O1OIM9vcsixdXBinEfMNfQ+4p
7O/NZz4tGKKQ1ZqbyrMCsL9Lvvj5Et397mZ4lh/29+Xiw3uGsZ7bq5d/OYL9
3Xu9gIPWoqoYrz6E/T0jRurqCM6DphPL5+A80/jxg+LCUXy+nu8X3+C80zBF
m/8KLVs3iyfugv3dZOfSfWNYv3l+pjIO2N89UoCP/vtXlLt1O/b35O9br41T
iNzx98sUNmN/r1dzXUynEPELrj+D1ougQrD/6Bv0/SdXDVUI9vdF2cEHGBQS
/FHsqD3Ob4WufZeE6Egj194ny7G/JxikXGfiPtNkyGhZiv395bF7Rizc//5m
ql0yEsFdVmHJW/QCiTTJhQYiyNRlvXBn43xR7HZ3+nwRZOwyb5xAuzf8M3qs
gXmPCe5I4eB8pFCVZonzaFJV9bAxl0LWb7+v/Ge2COJHpwTv0W9ufQ5Jo2Le
NddKe/Jwf7+iseysDObdPmrOFHpGyLnCWAnM+8V389P5uF9cWKPkMCWEs4/l
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
9k9L9zdcWS5cWqFzuwrttg7qtKdz4eIRz0eOR6hEdST/QvgUB87ffFA5jrby
iqvi8DkQ8mn4bcxRKln66vJJJyYHgv4Ztc47RiVfLD4kqo9w4MTSE3+eob0O
Sacq/uGA38HHrF0+VDLTyHjjp04OHE3hizHRswSDZ3e2ceDQ25UzL/tiv1Cd
/6+9iQPuwnMaen5Ucvu+o8Toew7sW1y7+AU61H7VWrXXHNi9T3Ll7uP4fndm
lWU954Dj1Q0b2WibFF/91U84YF8btyveH88jA3SgmAN27E+e+ieoxPXh3uCQ
PA5s1Jt1shYdM/Vom/J9Dqx3dgzfG0AlkSYDhWW3OUBi065y0cu1dU6eSOOA
VXX77asnqWR47k6vnkQOWIxp5C8MpJL5toHBLnEcMNNyr3qF1ptluq42kgMm
O+6/2xeE/fBoXeLs8xwwjBho5aMFE342y4M5YFC+qO/aKZx/Fc5N6gZwQHfA
l734NJWYTRsudT7GAe25JdPq0exj1SlLD3FAfQtnplswlVhKTX+ieoADKudW
aIrQyzQ3+bW5cECxKNQwOQTzKek6/HInB+R/P1+5JBTn123Bzul2HKAoTNv0
Du1effjLX1sOyKy3cfY4QyUyUdNTjhEOSJ6OPjSJLvw1PqKwkgNiuQ0nU89i
/mt6xK+bcWCinXrR5ByVbNJ8qnBhCQf4lB2JDehThsmmxw04wLZOzvQ8j/1a
y0nSTocDDP+2/Cn0emaJ71s1Doxmq1anh+F888Ko67ISBwZa9r03vUAlUlu/
7daS50Cv1N22j2jhF8uW3hkc6Lb40+cVTiX7pn5IsyQ48POoPkfsIt4/WsHu
iik2tN46Kn4TzX/Is58nYENzY4G8eQSV1E+P8JnJYkOjGFPzM7qRR5HfNsqG
BlMzoyOReJ9SO8b39bPhrefpVRJReP9O1g2r/mbDq9SqTbfR81sfP/7bzoaa
d3+dV1zC9zv6qHB5CxuqRMTrC1pu1Pt62Gc2VBhGBh6LppICc3GJ/96zoXT/
24vTY7C/zCUWvFdsKEyUvXYHHap3uvb2czbk1W29YxlLJV+3xc18+4QNOZzE
gq+x/38fNds8StmQvaCl2jeOSpos9b+tyWdDpotyg/RlKkk+VuB2K4cNGXF7
vt9Fa9nPnWZ4lw2pz273r7pCJZc138evu8mGpPFfnG9oXl3OPZ1UNiRo60r4
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
zaOzXaauou9NmdHrhbBfTtwt1Y9A350a4rzhaYteA3+4ZMFo8hu4/MYfz5gr
6Hsc/xN+YRqVKMBZHBCOvqso5x6CT79uaeHBen69eXEGbNW+95vcZfT92NlX
v+DKePPOZ2Ho+/zt6l3LadSo63nBh5fQ9zsl9TdhZWuVugeh6LtSd+tneEOV
4QtpOP39n+4NK2iU13K1vQ8uou/2a776wOsaksQ+h6Dvf7SHq+HMpCzvfDgl
5uhPAREapfL88pjgBfR9Y8ivI/C2XOcgf/j+29T5LDjAQeRRchD6fqSa8zds
WyTzalMg+j4zyKu/kkYtZi9c/g2+e5NbKAbme3tGMDUAfcfG+QKb3jAzugfH
vDGU3CRKo4yXym7e64++27qtPw8/rk203HAefZ+6oVQDH5dJqdf2Q99v5G4V
XoXXcxts8/FF3+VatO1hX4eEnj0+6HvFhG4O7HbLM4N5Dn0/KGw8B3O5D1A2
cNi4msXu1fh84kNE07zR96sHbG7DS5vZD1WcRd+l/ey/wcfzsk0c4OCX8c5K
a2iUi0SJswIcaPnSIwAO3v16e84Z9H3087lamPn84J8yT/Q9nC1ohRiNihP/
3MEP+0hIhjnCqcKHrm70QN/Ldl7Pg0PPzgcFwl7mx2Lm4Yo3/1YuOYW+M8Pi
DdfSKN6YmyYysMel9JS7cF2t2qrb7ui7WO2T7/DyrtDKBW7oezEjV1mcRg36
9nPZujKJs+nSkiBYw+8bPf0kkzgNbyqvh7lXHSs7Cx8PMX27UgLrNBPpOy5M
4rjKs+E4/GVNkOAfZyaxfxbdVgBfut4ibAcfNS7sYcMI6/Pt5dAuJ/R9sP2r
MZyUV8NTcwJ9D5oZjoONokeytsMHRUTHfsBr+5RCVI6j73maM1ukaNQamvVl
q2Po+55D/y7Any2LtXMd0fdvgVxN/6+bHnhhAO/zf7B0tTSN8q7XeW/kgL4L
vxZyhv9Vhp/wt2cS4+xvq4pgVrNneKQdkxjqc0pxyNAodkn19Dvw7n5ZeVNY
PupP6qGj6LuvweZEeD5omW3iESbZJeCiTocnTcfOTB5G3zOvkq2y2G9ZXwzF
YWrXU71QOEyFalE7xCTkU6NxM5wrNy/ua8sk271/WojJ4flqjj723IZJNJcJ
2J6El63U+LEOVk9XcSiBYzP38Q4eRN919rtwrqNRRxmHdcLhLd3ep83gj3S7
RcLW6PuZuz5JsPp6LY6AA+g7b1kQE5be02NPs0LfH/aEaaynUSt1mr/JWqLv
2n+vh8GTNAkPXli+Qyy2FQ4JHv28Al7nQSWIy9MopdaTPNcs0PfF9qlucMVC
bn1BWDrlYkbZ/17OJbzDHH3XfJi3aAON6vBwmbKAxdvelljATMFdOSxT9N1t
qDwZfiK5X+4JvJqL590IbKW6Zd9aWDRpQ6OmAp7n3/baIrCIuvHHcNgietu2
xSboe7N770f4zPdI80lj9N0l6pvkRhol1/p3vwkswJFPPwW3nZzh2GSEvie0
jr2ApTxHwiIM0XfVqZnFm3Ce2O9vFYF5G5ezWcFT17IDlu1B30+oL0qDtc4O
rUzdjb6zWfONwXsnhaYGDND3e+eFtRXxfFxRydoHL1ROXH0VHlokx9ivj77X
vZLqhFu3tsqP6KHvjv3yMkqYhwyP1LPB83MLlD3hFbvlqRRd9D1WSqMcTk5i
OO6Ef2/SpXg306iykztmTuxE398d1z8IH9q37osVPH00fO8juITrXf+dHej7
7JP9E/C1enuXIh30/VadLaVMow6WBV/PgX9uYDlch/P9Hb2nKfS9iu9kNxxp
lB1eqI2+H1LylFPB+RPyz7sTpk/v8/WCj7LHLBeAhyLPBFfCX3TqEqThwXWx
l/m20Kier1IPpLTQ98qiGzaw7s+FlmOa6Lt1Z2w6vND9n7863DcxmzAF7x0N
Ct63DX2/tipthyr+fS4Xe6c6+i6zPTMSfpfBLfwT7n51OL8Xbtn1b7k93GkV
XLpejUYd5st5vwdu/5lc4Q3LWEsXcG5F36+8efcGnjkycj9QFX2X/N7Iv5VG
TVBrVRLgpudc7YfgijH+fZZb0HeLdZ8y/vfcl5G/Kug7a/fAL1j2qI6wO/w+
7CRjlzp6xicgLa6Mvq+9Pn4Tjgrj+rUEri7Jnv0M54suGTXZjPv7vg9sCho0
KshzjWeDEpNU0scW+cLiL5vX2sLlFwWXvYVjL7z4zKPIJC9Xqy4X3Eajqp5+
yh3YxCTPCy3XHIWTJEXdczai73t9pJ/Chk8eneeBi37c2/AbltS7PLVTAX0P
fq6sr4n7hMCK7PwN6PvKTxox8BbRFyFz8uh7/jz1BTZnt5HWgrMNxQ02aeG8
XbFAaNd69H1Ax+Q8/Ftqr+Wvdeh7gINlDXyAY/ibMZy+/NIh4e00SsK+da+A
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
       
       "]]}}, {}, {}, {{}, {}}}, {{{}, {}, 
     TagBox[
      {RGBColor[1, 0, 0], AbsoluteThickness[1.6], Opacity[1.], 
       Dashing[{Small, Small}], LineBox[CompressedData["
1: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
HjSmXl5QTfHqVSn/bQzkwf+7WIxU
        "]]},
      Annotation[#, "Charting`Private`Tag$18084#1"]& ]}, {}, {}}, {{{}, {}, 
     TagBox[
      {RGBColor[0, 1, 0], AbsoluteThickness[1.6], Opacity[1.], 
       Dashing[{Small, Small}], LineBox[CompressedData["
1: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
sw==
        "]]},
      Annotation[#, "Charting`Private`Tag$18123#1"]& ]}, {}, {}}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{1.8915123786679122`, 0},
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  ImagePadding->All,
  Method->{"CoordinatesToolOptions" -> {"DisplayFunction" -> ({
        (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
         Part[#, 1]], 
        (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
         Part[#, 2]]}& ), "CopiedValueFunction" -> ({
        (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
         Part[#, 1]], 
        (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
         Part[#, 2]]}& )}},
  PlotRange->{{1.9383795322066075`, 4.937877358683113}, {
    0, 2.455634077675246}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.02], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{
  3.747201610406764*^9, 3.74793478819197*^9, {3.748240532617337*^9, 
   3.7482405595694847`*^9}, 3.748272560577919*^9, 3.748358177322434*^9, {
   3.758540110199819*^9, 3.758540112911421*^9}, {3.758540466113153*^9, 
   3.758540480106937*^9}, {3.758540573893509*^9, 3.758540578519273*^9}, {
   3.758540685936466*^9, 3.75854071827212*^9}, 3.75854088530591*^9}]
}, Open  ]]
}, Closed]],

Cell[CellGroupData[{

Cell["Import previous results", "Subsection",
 CellChangeTimes->{{3.7331984924213877`*^9, 3.733198499329225*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"pT", "=", 
   RowBox[{"{", 
    RowBox[{"2", ",", "5", ",", "10", ",", "15", ",", "20", ",", "25"}], 
    "}"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.758540085834176*^9, 3.758540087246873*^9}, 
   3.758540724566971*^9, {3.758663881175562*^9, 3.758663881401053*^9}, {
   3.758664028278373*^9, 3.758664035965467*^9}}],

Cell[BoxData[{
 RowBox[{
  RowBox[{"wr", "=", "pT"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"g", "=", "pT"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"c", "=", "pT"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"d", "=", "pT"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"s", "=", "pT"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"s2", "=", "pT"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"a", "=", "pT"}], ";"}]}], "Input",
 CellChangeTimes->{{3.758664050779393*^9, 3.7586640770645733`*^9}, {
  3.758664789126011*^9, 3.758664789206045*^9}, {3.758665000837781*^9, 
  3.758665000944419*^9}, {3.7586650874539824`*^9, 3.758665087754162*^9}}],

Cell[BoxData[{
 RowBox[{
  RowBox[{"Do", "[", 
   RowBox[{
    RowBox[{
     RowBox[{"wr", "[", 
      RowBox[{"[", "i", "]"}], "]"}], "=", 
     RowBox[{"import", "[", 
      RowBox[{"wrfitcc", ",", 
       RowBox[{"pT", "[", 
        RowBox[{"[", "i", "]"}], "]"}]}], "]"}]}], ",", 
    RowBox[{"{", 
     RowBox[{"i", ",", 
      RowBox[{"Length", "[", "pT", "]"}]}], "}"}]}], "]"}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Do", "[", 
   RowBox[{
    RowBox[{
     RowBox[{"g", "[", 
      RowBox[{"[", "i", "]"}], "]"}], "=", 
     RowBox[{"import", "[", 
      RowBox[{"gfitcc", ",", 
       RowBox[{"pT", "[", 
        RowBox[{"[", "i", "]"}], "]"}]}], "]"}]}], ",", 
    RowBox[{"{", 
     RowBox[{"i", ",", 
      RowBox[{"Length", "[", "pT", "]"}]}], "}"}]}], "]"}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Do", "[", 
   RowBox[{
    RowBox[{
     RowBox[{"c", "[", 
      RowBox[{"[", "i", "]"}], "]"}], "=", 
     RowBox[{"import", "[", 
      RowBox[{"cfitcc", ",", 
       RowBox[{"pT", "[", 
        RowBox[{"[", "i", "]"}], "]"}]}], "]"}]}], ",", 
    RowBox[{"{", 
     RowBox[{"i", ",", 
      RowBox[{"Length", "[", "pT", "]"}]}], "}"}]}], "]"}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Do", "[", 
   RowBox[{
    RowBox[{
     RowBox[{"d", "[", 
      RowBox[{"[", "i", "]"}], "]"}], "=", 
     RowBox[{"import", "[", 
      RowBox[{"dfitcc", ",", 
       RowBox[{"pT", "[", 
        RowBox[{"[", "i", "]"}], "]"}]}], "]"}]}], ",", 
    RowBox[{"{", 
     RowBox[{"i", ",", 
      RowBox[{"Length", "[", "pT", "]"}]}], "}"}]}], "]"}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Do", "[", 
   RowBox[{
    RowBox[{
     RowBox[{"s", "[", 
      RowBox[{"[", "i", "]"}], "]"}], "=", 
     RowBox[{"import", "[", 
      RowBox[{"sfitcc", ",", 
       RowBox[{"pT", "[", 
        RowBox[{"[", "i", "]"}], "]"}]}], "]"}]}], ",", 
    RowBox[{"{", 
     RowBox[{"i", ",", 
      RowBox[{"Length", "[", "pT", "]"}]}], "}"}]}], "]"}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Do", "[", 
   RowBox[{
    RowBox[{
     RowBox[{"s2", "[", 
      RowBox[{"[", "i", "]"}], "]"}], "=", 
     RowBox[{"import", "[", 
      RowBox[{"s2fitcc", ",", 
       RowBox[{"pT", "[", 
        RowBox[{"[", "i", "]"}], "]"}]}], "]"}]}], ",", 
    RowBox[{"{", 
     RowBox[{"i", ",", 
      RowBox[{"Length", "[", "pT", "]"}]}], "}"}]}], "]"}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Do", "[", 
   RowBox[{
    RowBox[{
     RowBox[{"a", "[", 
      RowBox[{"[", "i", "]"}], "]"}], "=", 
     RowBox[{"import", "[", 
      RowBox[{"areafitcc", ",", 
       RowBox[{"pT", "[", 
        RowBox[{"[", "i", "]"}], "]"}]}], "]"}]}], ",", 
    RowBox[{"{", 
     RowBox[{"i", ",", 
      RowBox[{"Length", "[", "pT", "]"}]}], "}"}]}], "]"}], ";"}]}], "Input",
 CellChangeTimes->{{3.758540852957193*^9, 3.758540878282516*^9}, {
   3.758664095057042*^9, 3.75866411241998*^9}, {3.75866427301894*^9, 
   3.7586642732516623`*^9}, {3.758664390770547*^9, 3.758664394762322*^9}, {
   3.758664432077305*^9, 3.7586644427707453`*^9}, 3.7586647950975313`*^9, {
   3.758665093901272*^9, 3.758665151267565*^9}, {3.758665244111827*^9, 
   3.758665318568083*^9}}],

Cell[BoxData[{
 RowBox[{
  RowBox[{"Do", "[", 
   RowBox[{
    RowBox[{
     RowBox[{"If", "[", 
      RowBox[{
       RowBox[{
        RowBox[{"Length", "[", 
         RowBox[{"wr", "[", 
          RowBox[{"[", 
           RowBox[{"i", ",", "j"}], "]"}], "]"}], "]"}], ">", "2"}], ",", 
       RowBox[{
        RowBox[{"wr", "[", 
         RowBox[{"[", 
          RowBox[{"i", ",", "j"}], "]"}], "]"}], "=", 
        RowBox[{"wr", "[", 
         RowBox[{"[", 
          RowBox[{"i", ",", "j", ",", 
           RowBox[{";;", "2"}]}], "]"}], "]"}]}]}], "]"}], ";"}], ",", 
    RowBox[{"{", 
     RowBox[{"i", ",", 
      RowBox[{"Length", "[", "wr", "]"}]}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"j", ",", 
      RowBox[{"Length", "[", 
       RowBox[{"wr", "[", 
        RowBox[{"[", "i", "]"}], "]"}], "]"}]}], "}"}]}], "]"}], 
  ";"}], "\n", 
 RowBox[{
  RowBox[{"Do", "[", 
   RowBox[{
    RowBox[{
     RowBox[{"If", "[", 
      RowBox[{
       RowBox[{
        RowBox[{"Length", "[", 
         RowBox[{"g", "[", 
          RowBox[{"[", 
           RowBox[{"i", ",", "j"}], "]"}], "]"}], "]"}], ">", "2"}], ",", 
       RowBox[{
        RowBox[{"g", "[", 
         RowBox[{"[", 
          RowBox[{"i", ",", "j"}], "]"}], "]"}], "=", 
        RowBox[{"g", "[", 
         RowBox[{"[", 
          RowBox[{"i", ",", "j", ",", 
           RowBox[{";;", "2"}]}], "]"}], "]"}]}]}], "]"}], ";"}], ",", 
    RowBox[{"{", 
     RowBox[{"i", ",", 
      RowBox[{"Length", "[", "g", "]"}]}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"j", ",", 
      RowBox[{"Length", "[", 
       RowBox[{"wr", "[", 
        RowBox[{"[", "i", "]"}], "]"}], "]"}]}], "}"}]}], "]"}], 
  ";"}], "\n", 
 RowBox[{
  RowBox[{"Do", "[", 
   RowBox[{
    RowBox[{
     RowBox[{"If", "[", 
      RowBox[{
       RowBox[{
        RowBox[{"Length", "[", 
         RowBox[{"c", "[", 
          RowBox[{"[", 
           RowBox[{"i", ",", "j"}], "]"}], "]"}], "]"}], ">", "2"}], ",", 
       RowBox[{
        RowBox[{"c", "[", 
         RowBox[{"[", 
          RowBox[{"i", ",", "j"}], "]"}], "]"}], "=", 
        RowBox[{"c", "[", 
         RowBox[{"[", 
          RowBox[{"i", ",", "j", ",", 
           RowBox[{";;", "2"}]}], "]"}], "]"}]}]}], "]"}], ";"}], ",", 
    RowBox[{"{", 
     RowBox[{"i", ",", 
      RowBox[{"Length", "[", "c", "]"}]}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"j", ",", 
      RowBox[{"Length", "[", 
       RowBox[{"wr", "[", 
        RowBox[{"[", "i", "]"}], "]"}], "]"}]}], "}"}]}], "]"}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Do", "[", 
   RowBox[{
    RowBox[{
     RowBox[{"If", "[", 
      RowBox[{
       RowBox[{
        RowBox[{"Length", "[", 
         RowBox[{"d", "[", 
          RowBox[{"[", 
           RowBox[{"i", ",", "j"}], "]"}], "]"}], "]"}], ">", "2"}], ",", 
       RowBox[{
        RowBox[{"d", "[", 
         RowBox[{"[", 
          RowBox[{"i", ",", "j"}], "]"}], "]"}], "=", 
        RowBox[{"d", "[", 
         RowBox[{"[", 
          RowBox[{"i", ",", "j", ",", 
           RowBox[{";;", "2"}]}], "]"}], "]"}]}]}], "]"}], ";"}], ",", 
    RowBox[{"{", 
     RowBox[{"i", ",", 
      RowBox[{"Length", "[", "d", "]"}]}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"j", ",", 
      RowBox[{"Length", "[", 
       RowBox[{"wr", "[", 
        RowBox[{"[", "i", "]"}], "]"}], "]"}]}], "}"}]}], "]"}], 
  ";"}], "\n", 
 RowBox[{
  RowBox[{"Do", "[", 
   RowBox[{
    RowBox[{
     RowBox[{"If", "[", 
      RowBox[{
       RowBox[{
        RowBox[{"Length", "[", 
         RowBox[{"s", "[", 
          RowBox[{"[", 
           RowBox[{"i", ",", "j"}], "]"}], "]"}], "]"}], ">", "2"}], ",", 
       RowBox[{
        RowBox[{"s", "[", 
         RowBox[{"[", 
          RowBox[{"i", ",", "j"}], "]"}], "]"}], "=", 
        RowBox[{"s", "[", 
         RowBox[{"[", 
          RowBox[{"i", ",", "j", ",", 
           RowBox[{";;", "2"}]}], "]"}], "]"}]}]}], "]"}], ";"}], ",", 
    RowBox[{"{", 
     RowBox[{"i", ",", 
      RowBox[{"Length", "[", "s", "]"}]}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"j", ",", 
      RowBox[{"Length", "[", 
       RowBox[{"wr", "[", 
        RowBox[{"[", "i", "]"}], "]"}], "]"}]}], "}"}]}], "]"}], 
  ";"}], "\n", 
 RowBox[{
  RowBox[{"Do", "[", 
   RowBox[{
    RowBox[{
     RowBox[{"If", "[", 
      RowBox[{
       RowBox[{
        RowBox[{"Length", "[", 
         RowBox[{"s2", "[", 
          RowBox[{"[", 
           RowBox[{"i", ",", "j"}], "]"}], "]"}], "]"}], ">", "2"}], ",", 
       RowBox[{
        RowBox[{"s2", "[", 
         RowBox[{"[", 
          RowBox[{"i", ",", "j"}], "]"}], "]"}], "=", 
        RowBox[{"s2", "[", 
         RowBox[{"[", 
          RowBox[{"i", ",", "j", ",", 
           RowBox[{";;", "2"}]}], "]"}], "]"}]}]}], "]"}], ";"}], ",", 
    RowBox[{"{", 
     RowBox[{"i", ",", 
      RowBox[{"Length", "[", "s2", "]"}]}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"j", ",", 
      RowBox[{"Length", "[", 
       RowBox[{"wr", "[", 
        RowBox[{"[", "i", "]"}], "]"}], "]"}]}], "}"}]}], "]"}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Do", "[", 
   RowBox[{
    RowBox[{
     RowBox[{"If", "[", 
      RowBox[{
       RowBox[{
        RowBox[{"Length", "[", 
         RowBox[{"a", "[", 
          RowBox[{"[", 
           RowBox[{"i", ",", "j"}], "]"}], "]"}], "]"}], ">", "2"}], ",", 
       RowBox[{
        RowBox[{"a", "[", 
         RowBox[{"[", 
          RowBox[{"i", ",", "j"}], "]"}], "]"}], "=", 
        RowBox[{"a", "[", 
         RowBox[{"[", 
          RowBox[{"i", ",", "j", ",", 
           RowBox[{";;", "2"}]}], "]"}], "]"}]}]}], "]"}], ";"}], ",", 
    RowBox[{"{", 
     RowBox[{"i", ",", 
      RowBox[{"Length", "[", "a", "]"}]}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"j", ",", 
      RowBox[{"Length", "[", 
       RowBox[{"wr", "[", 
        RowBox[{"[", "i", "]"}], "]"}], "]"}]}], "}"}]}], "]"}], 
  ";"}]}], "Input",
 CellChangeTimes->{{3.758540516420115*^9, 3.7585405706173887`*^9}, {
  3.7586653519511433`*^9, 3.758665420281527*^9}, {3.7586654626973257`*^9, 
  3.7586655419735928`*^9}, {3.758665575466548*^9, 3.7586655895795507`*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell["DiLetpon Ratio", "Subsection",
 CellChangeTimes->{{3.7331987336614323`*^9, 3.733198736845319*^9}, {
  3.733198830885355*^9, 3.733198838082015*^9}, {3.733459297753614*^9, 
  3.7334593163300467`*^9}, {3.7334604259209223`*^9, 3.733460433088826*^9}}],

Cell[BoxData[{
 RowBox[{
  RowBox[{"ang", "=", 
   RowBox[{"Table", "[", 
    RowBox[{"i", ",", 
     RowBox[{"{", 
      RowBox[{"i", ",", "0", ",", "\[Pi]", ",", 
       RowBox[{"\[Pi]", "/", "50"}]}], "}"}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Tlim", "=", 
   RowBox[{"1584", "/", "10000"}]}], ";"}]}], "Input",
 CellChangeTimes->{
  3.7585402190230703`*^9, {3.758540339431052*^9, 3.758540339666197*^9}}],

Cell[BoxData[{
 RowBox[{
  RowBox[{"Emfactor", "=", "2.5078109618879587`"}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"nB", "[", 
    RowBox[{"w_", ",", "T_"}], "]"}], ":=", 
   FractionBox["1", 
    RowBox[{
     RowBox[{"Exp", "[", 
      FractionBox["w", "T"], "]"}], "-", "1"}]]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"nBi", "[", 
    RowBox[{"w_", ",", "T_"}], "]"}], ":=", 
   RowBox[{"NIntegrate", "[", 
    RowBox[{
     RowBox[{
      SuperscriptBox["p", "2"], 
      RowBox[{"nB", "[", 
       RowBox[{
        SqrtBox[
         RowBox[{
          SuperscriptBox["w", "2"], "+", 
          SuperscriptBox["p", "2"]}]], ",", "T"}], "]"}], 
      FractionBox["w", 
       SqrtBox[
        RowBox[{
         SuperscriptBox["w", "2"], "+", 
         SuperscriptBox["p", "2"]}]]]}], ",", 
     RowBox[{"{", 
      RowBox[{"p", ",", "0", ",", "\[Infinity]"}], "}"}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"nBf", "[", 
   RowBox[{"wr_", ",", "g_", ",", "c_", ",", "T_"}], "]"}], ":=", 
  RowBox[{"NIntegrate", "[", 
   RowBox[{
    RowBox[{
     RowBox[{"BWi", "[", 
      RowBox[{"w", ",", "wr", ",", "g", ",", "c"}], "]"}], 
     SuperscriptBox["p", "2"], 
     RowBox[{"nB", "[", 
      RowBox[{
       SqrtBox[
        RowBox[{
         SuperscriptBox["w", "2"], "+", 
         SuperscriptBox["p", "2"]}]], ",", "T"}], "]"}], 
     FractionBox["w", 
      SqrtBox[
       RowBox[{
        SuperscriptBox["w", "2"], "+", 
        SuperscriptBox["p", "2"]}]]]}], ",", 
    RowBox[{"{", 
     RowBox[{"p", ",", "0", ",", "\[Infinity]"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"w", ",", 
      RowBox[{"-", "\[Infinity]"}], ",", "\[Infinity]"}], "}"}]}], 
   "]"}]}]}], "Input",
 CellChangeTimes->{{3.7330486092807407`*^9, 3.733048610560197*^9}, 
   3.7437686620496483`*^9, 3.745381990213436*^9, {3.745395241151095*^9, 
   3.745395241505988*^9}, {3.745395985284416*^9, 3.745395994925745*^9}, {
   3.745396205346902*^9, 3.745396293529339*^9}, {3.7453963433634243`*^9, 
   3.745396345826552*^9}, {3.745396734234511*^9, 3.745396737777822*^9}, {
   3.745396837451665*^9, 3.745396837587263*^9}, {3.745396988400182*^9, 
   3.745396990367051*^9}, {3.7453970485284443`*^9, 3.745397067305369*^9}, {
   3.747934825973832*^9, 3.747934834018952*^9}, {3.749118169718378*^9, 
   3.7491181726457233`*^9}, {3.749118347040814*^9, 3.749118347176548*^9}, {
   3.749118529764544*^9, 3.74911853315576*^9}, 3.749118565196313*^9}],

Cell[BoxData[{
 RowBox[{
  RowBox[{"R0", "=", 
   RowBox[{"ConstantArray", "[", 
    RowBox[{"0", ",", 
     RowBox[{"Dimensions", "[", "wr", "]"}]}], "]"}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{"Do", "[", 
   RowBox[{
    RowBox[{"If", "[", 
     RowBox[{
      RowBox[{
       RowBox[{"Length", "[", 
        RowBox[{"wr", "[", 
         RowBox[{"[", 
          RowBox[{"ii", ",", "i"}], "]"}], "]"}], "]"}], "==", "2"}], ",", 
      RowBox[{
       RowBox[{"R0", "[", 
        RowBox[{"[", 
         RowBox[{"ii", ",", "i"}], "]"}], "]"}], "=", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"ang", "[", 
          RowBox[{"[", "i", "]"}], "]"}], ",", 
         RowBox[{"Emfactor", " ", 
          RowBox[{
           RowBox[{"(", 
            RowBox[{
             RowBox[{"a", "[", 
              RowBox[{"[", 
               RowBox[{"ii", ",", "i", ",", "2"}], "]"}], "]"}], 
             RowBox[{"nB", "[", 
              RowBox[{
               RowBox[{"wr", "[", 
                RowBox[{"[", 
                 RowBox[{"ii", ",", "i", ",", "2"}], "]"}], "]"}], ",", 
               "Tlim"}], "]"}]}], ")"}], "/", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"a", "[", 
              RowBox[{"[", 
               RowBox[{"ii", ",", "i", ",", "1"}], "]"}], "]"}], 
             RowBox[{"nB", "[", 
              RowBox[{
               RowBox[{"wr", "[", 
                RowBox[{"[", 
                 RowBox[{"ii", ",", "i", ",", "1"}], "]"}], "]"}], ",", 
               "Tlim"}], "]"}]}], ")"}]}]}]}], "}"}]}]}], "]"}], ",", 
    RowBox[{"{", 
     RowBox[{"ii", ",", 
      RowBox[{"Length", "[", "R0", "]"}]}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"i", ",", 
      RowBox[{"Length", "[", 
       RowBox[{"wr", "[", 
        RowBox[{"[", "ii", "]"}], "]"}], "]"}]}], "}"}]}], "]"}], 
  ";"}]}], "Input",
 CellChangeTimes->{{3.725361225914867*^9, 3.7253613103526297`*^9}, {
   3.725361342615449*^9, 3.725361363368341*^9}, {3.725361486279459*^9, 
   3.7253615682605352`*^9}, {3.725362762652525*^9, 3.72536276293797*^9}, {
   3.725362868989019*^9, 3.725362900512672*^9}, {3.726826853448038*^9, 
   3.726826891448366*^9}, {3.727701263154799*^9, 3.727701293345373*^9}, {
   3.727701505972157*^9, 3.727701541402749*^9}, {3.7280503071108313`*^9, 
   3.728050310285368*^9}, {3.728100694882288*^9, 3.72810072340024*^9}, {
   3.728123742805819*^9, 3.72812375254177*^9}, {3.729257212860208*^9, 
   3.729257314430148*^9}, {3.729257354005527*^9, 3.729257369791445*^9}, 
   3.729257419602573*^9, {3.730185804743245*^9, 3.7301858492477293`*^9}, {
   3.730185951645503*^9, 3.730185957980616*^9}, {3.733049225876031*^9, 
   3.733049302348743*^9}, 3.733116873806835*^9, {3.7331186202704268`*^9, 
   3.733118701855221*^9}, 3.733132139145953*^9, 3.733198906041408*^9, {
   3.733459388417635*^9, 3.733459405592067*^9}, {3.733463683410904*^9, 
   3.733463688877591*^9}, {3.7334637639001007`*^9, 3.7334637858530827`*^9}, {
   3.733463876654224*^9, 3.73346388059013*^9}, {3.733464877935026*^9, 
   3.733464953947959*^9}, {3.733465010580366*^9, 3.733465010716201*^9}, {
   3.75854022208773*^9, 3.7585402634383507`*^9}, {3.758540355079153*^9, 
   3.758540359994171*^9}, {3.758665640941058*^9, 3.758665700587578*^9}, {
   3.758665748372254*^9, 3.758665756181169*^9}, {3.758730285224304*^9, 
   3.75873029626014*^9}, {3.7587307491536903`*^9, 3.758730780157983*^9}, 
   3.758730845080389*^9}],

Cell[BoxData[{
 RowBox[{
  RowBox[{"R0i", "=", 
   RowBox[{"ConstantArray", "[", 
    RowBox[{"0", ",", 
     RowBox[{"Dimensions", "[", "wr", "]"}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Do", "[", 
   RowBox[{
    RowBox[{"If", "[", 
     RowBox[{
      RowBox[{
       RowBox[{"Length", "[", 
        RowBox[{"wr", "[", 
         RowBox[{"[", 
          RowBox[{"ii", ",", "i"}], "]"}], "]"}], "]"}], "==", "2"}], ",", 
      RowBox[{
       RowBox[{"R0i", "[", 
        RowBox[{"[", 
         RowBox[{"ii", ",", "i"}], "]"}], "]"}], "=", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"ang", "[", 
          RowBox[{"[", "i", "]"}], "]"}], ",", 
         RowBox[{"Emfactor", " ", 
          RowBox[{
           RowBox[{"(", 
            RowBox[{
             RowBox[{"a", "[", 
              RowBox[{"[", 
               RowBox[{"ii", ",", "i", ",", "2"}], "]"}], "]"}], 
             RowBox[{"nBi", "[", 
              RowBox[{
               RowBox[{"wr", "[", 
                RowBox[{"[", 
                 RowBox[{"ii", ",", "i", ",", "2"}], "]"}], "]"}], ",", 
               "Tlim"}], "]"}]}], ")"}], "/", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"a", "[", 
              RowBox[{"[", 
               RowBox[{"ii", ",", "i", ",", "1"}], "]"}], "]"}], 
             RowBox[{"nBi", "[", 
              RowBox[{
               RowBox[{"wr", "[", 
                RowBox[{"[", 
                 RowBox[{"ii", ",", "i", ",", "1"}], "]"}], "]"}], ",", 
               "Tlim"}], "]"}]}], ")"}]}]}]}], "}"}]}]}], "]"}], ",", 
    RowBox[{"{", 
     RowBox[{"ii", ",", 
      RowBox[{"Length", "[", "R0", "]"}]}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"i", ",", 
      RowBox[{"Length", "[", 
       RowBox[{"wr", "[", 
        RowBox[{"[", "ii", "]"}], "]"}], "]"}]}], "}"}]}], "]"}], 
  ";"}]}], "Input",
 CellChangeTimes->{{3.745395368409327*^9, 3.745395420666432*^9}, {
  3.7453954580837307`*^9, 3.745395535677684*^9}, {3.74539568097589*^9, 
  3.745395778816997*^9}, {3.745396455989843*^9, 3.745396458157371*^9}, {
  3.758540249808035*^9, 3.758540272940054*^9}, {3.7585403668410807`*^9, 
  3.7585403754948397`*^9}, {3.758730915267996*^9, 3.758730941173774*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"R00", "=", 
  RowBox[{"Emfactor", " ", 
   RowBox[{"area0", "[", 
    RowBox[{"[", "2", "]"}], "]"}], 
   RowBox[{
    RowBox[{"nB", "[", 
     RowBox[{
      RowBox[{"wr0", "[", 
       RowBox[{"[", "2", "]"}], "]"}], ",", "Tlim"}], "]"}], "/", 
    RowBox[{"(", 
     RowBox[{
      RowBox[{"area0", "[", 
       RowBox[{"[", "1", "]"}], "]"}], 
      RowBox[{"nB", "[", 
       RowBox[{
        RowBox[{"wr0", "[", 
         RowBox[{"[", "1", "]"}], "]"}], ",", "Tlim"}], "]"}]}], 
     ")"}]}]}]}]], "Input",
 CellChangeTimes->{{3.7635650308604813`*^9, 3.7635650399371567`*^9}}],

Cell[BoxData["0.03208818278477162`"], "Output",
 CellChangeTimes->{
  3.763564737966445*^9, 3.763564888765237*^9, {3.763565034010687*^9, 
   3.763565040237599*^9}, 3.7635662561864977`*^9, 3.763566639026434*^9, 
   3.763567363695468*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"ListPlot", "[", 
  RowBox[{
   RowBox[{"R0", "[", 
    RowBox[{"[", "1", "]"}], "]"}], ",", 
   RowBox[{"PlotRange", "\[Rule]", "All"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.745396671472126*^9, 3.745396673344348*^9}, {
   3.7453971986671057`*^9, 3.7453972024664707`*^9}, {3.7482406142475443`*^9, 
   3.74824061445008*^9}, {3.748240901613481*^9, 3.7482409033167562`*^9}, {
   3.748242391976287*^9, 3.748242410811722*^9}, {3.748242948186721*^9, 
   3.748242990938891*^9}, {3.748272917392021*^9, 3.748272942840837*^9}, {
   3.74827353418021*^9, 3.748273547619947*^9}, {3.74835840131942*^9, 
   3.7483584041992607`*^9}, {3.748358595947406*^9, 3.748358652100362*^9}, {
   3.758540614313897*^9, 3.758540621207955*^9}, {3.7585406622947474`*^9, 
   3.75854067861274*^9}, 3.758540897341943*^9, {3.758730953034718*^9, 
   3.7587309840101957`*^9}, 3.758736915709669*^9, {3.758737684928097*^9, 
   3.758737694477242*^9}, 3.75873853569104*^9, {3.758738900117858*^9, 
   3.7587389030101013`*^9}, {3.758970052901951*^9, 3.758970055830435*^9}, {
   3.763562599283313*^9, 3.763562615877829*^9}}],

Cell[BoxData[
 GraphicsBox[{{}, {{}, 
    {RGBColor[0.368417, 0.506779, 0.709798], PointSize[0.011000000000000001`],
      AbsoluteThickness[1.6], PointBox[CompressedData["
1:eJw1kQ0s1GEcx48jR2eKzPvOS+fEjpkuZ5nfs4XZ2k3eRrEcOdW8XHZeFhMn
Zd5HQ/Ly/I/WKUqhZlkxaZwkrS5Z7AypkHnJW4e61v//bM+ePXue5/f7fD+P
Xaw4WKRNo9E8NPPfSg2DpzqfsttkYMkxq+w1fQw77KCrpjJq3wcTjV+F9kME
yJ/bR2LbIfDrYB5xvU2dj8Ho1oifR5MMplfq092sPkKf22yd6LqMvP8ZanTL
xFG9BCTlt4CR4ySIDKp3DaOp99OwOLzBFUTIYO/gufwM8xlgT/XQ2+4RZL05
4IWHtjXJCXilVF36ZjMP5cqe7cg2iuc72NqMRQ3qy6AIiwThDgvgzHw0Xl9B
9VuC+JJbSb4TBJy5vOg+6LQMT8ZMko1GCLL/CrSwHHhLSQQU1/KLrcxWIS6+
dL05hiB51sD1R9hPHEGA+FpW9geLdVA4VJ5NiaH4fkFVi/4+P4CA4AsvxcXW
GzBAf5YsDKB4N2E9btZylEMAL0Ar9hRrCzx9XBJOm1H828B6ZyxMYxFgzvUN
VdvtwCbbW23Sgck8v8EdiORcAwLUhwv8O4+qoYKZIOwKxGS+XXjjWJdlRydA
tangJ3D2wMarg2Gxhsm8+xA6196Qs4Ch/wvTxcH5D0j9lM1F45jMT0NIP7Eb
lBhCpuVlSdU0lNq42cXtx6QPLcQ7NDnuOYhhIFhRoKjRQoaiEpmAwKQfbcTh
+xxvkmM48Xohl12rjWwvDuZwizDpi45Mgx7OvJdikHsyM6V36Mg7tds17C4m
/emgG92KaDnGYPGAK5mq00EnxRZsxk1M+tRFb8UJhcpCDY91YKJXgy5SLavW
MlMx6fcAGpbO5w1r6u+WXRFVNR5A6ccYXtvlmPSth0KcpIL2NAzJWpXnV7Ee
KvEX1dfmYdI/A6lWMiQZKRhUks5wgYyBSlujfHM1+///oY/uG7e2vpBg+AvL
GGuR
      "]]}, {}}, {}, {}, {{}, {}}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{0, 0.030380404172303956`},
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  ImagePadding->All,
  Method->{"CoordinatesToolOptions" -> {"DisplayFunction" -> ({
        (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
         Part[#, 1]], 
        (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
         Part[#, 2]]}& ), "CopiedValueFunction" -> ({
        (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
         Part[#, 1]], 
        (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
         Part[#, 2]]}& )}},
  PlotRange->{{0, 3.141592653589793}, {0.03057748640527486, 
    0.03451913106469291}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.05], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{{3.75873096967093*^9, 3.758730984797496*^9}, {
   3.75873684333741*^9, 3.758736873037519*^9}, {3.758736913281145*^9, 
   3.758736916276401*^9}, {3.758737686322576*^9, 3.7587376951757*^9}, 
   3.758738536694086*^9, {3.758738901719633*^9, 3.7587389034104033`*^9}, 
   3.7589682632846527`*^9, {3.758970053760968*^9, 3.7589700563048*^9}, {
   3.7635625819045153`*^9, 3.763562616584641*^9}, {3.7635653316690283`*^9, 
   3.763565343372671*^9}}]
}, Open  ]],

Cell[BoxData[{
 RowBox[{
  RowBox[{"pT1c", "=", 
   RowBox[{"Delete", "[", 
    RowBox[{
     RowBox[{"R0", "[", 
      RowBox[{"[", "1", "]"}], "]"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", "3", "}"}], ",", 
       RowBox[{"{", "7", "}"}], ",", 
       RowBox[{"{", "10", "}"}], ",", 
       RowBox[{"{", "11", "}"}], ",", 
       RowBox[{"{", "12", "}"}], ",", 
       RowBox[{"{", "14", "}"}], ",", 
       RowBox[{"{", "17", "}"}], ",", 
       RowBox[{"{", "18", "}"}], ",", 
       RowBox[{"{", "19", "}"}], ",", 
       RowBox[{"{", "26", "}"}], ",", 
       RowBox[{"{", "28", "}"}]}], "}"}]}], "]"}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{"pT1i", "=", 
   RowBox[{"Interpolation", "[", 
    RowBox[{"pT1c", ",", 
     RowBox[{"InterpolationOrder", "\[Rule]", "1"}]}], "]"}]}], 
  ";"}]}], "Input",
 CellChangeTimes->{{3.758740913092503*^9, 3.7587409557646627`*^9}, {
   3.7635626417599993`*^9, 3.763562673661241*^9}, 3.763562723643507*^9, {
   3.763562767588649*^9, 3.7635628038142157`*^9}, {3.7635629052732077`*^9, 
   3.763562980632472*^9}, {3.7635653459538918`*^9, 3.763565433374639*^9}, {
   3.763565815828553*^9, 3.763565823995633*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Plot", "[", 
  RowBox[{
   RowBox[{"pT1i", "[", "x", "]"}], ",", 
   RowBox[{"{", 
    RowBox[{"x", ",", "0", ",", "\[Pi]"}], "}"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.758738576980749*^9, 3.758738589721599*^9}, {
  3.758738747249559*^9, 3.758738798846086*^9}, {3.758738841212369*^9, 
  3.7587388808530807`*^9}, {3.75874093456365*^9, 3.7587409630185833`*^9}}],

Cell[BoxData[
 GraphicsBox[{{{}, {}, 
    TagBox[
     {RGBColor[0.368417, 0.506779, 0.709798], AbsoluteThickness[1.6], Opacity[
      1.], LineBox[CompressedData["
1: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
       "]]},
     Annotation[#, "Charting`Private`Tag$292616#1"]& ]}, {}, {}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{0, 0.03070627957610225},
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  ImagePadding->All,
  Method->{
   "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
    AbsolutePointSize[6], "ScalingFunctions" -> None, 
    "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
        (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
         Part[#, 1]], 
        (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
         Part[#, 2]]}& ), "CopiedValueFunction" -> ({
        (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
         Part[#, 1]], 
        (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
         Part[#, 2]]}& )}},
  PlotRange->
   NCache[{{0, Pi}, {0.03070627957610225, 0.03451913097588314}}, {{
     0, 3.141592653589793}, {0.03070627957610225, 0.03451913097588314}}],
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.05], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{{3.7587385826613894`*^9, 3.758738590271535*^9}, 
   3.758738799392047*^9, {3.758738842215343*^9, 3.758738881362754*^9}, {
   3.758740936092051*^9, 3.7587409636410913`*^9}, 3.758968274868733*^9, {
   3.7635626331489162`*^9, 3.763562644889491*^9}, {3.763562799700004*^9, 
   3.763562805922318*^9}, 3.763562838560216*^9, 3.763562922093388*^9, 
   3.7635629525137053`*^9, 3.763562983482606*^9, {3.763565397311335*^9, 
   3.7635654354017076`*^9}, 3.763565825863306*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"pT1f", "=", 
  RowBox[{
   FractionBox["1", "\[Pi]"], 
   RowBox[{"NIntegrate", "[", 
    RowBox[{
     RowBox[{"pT1i", "[", "x", "]"}], ",", 
     RowBox[{"{", 
      RowBox[{"x", ",", "0", ",", "\[Pi]"}], "}"}]}], "]"}]}]}]], "Input",
 CellChangeTimes->{{3.758740967631975*^9, 3.758740979983018*^9}, {
  3.758741027562725*^9, 3.7587410297878923`*^9}}],

Cell[BoxData["0.0320055116562302`"], "Output",
 CellChangeTimes->{
  3.7587409804751987`*^9, 3.758741030367679*^9, 3.758968274938323*^9, 
   3.7635629574932404`*^9, 3.7635629876829777`*^9, {3.763565437870666*^9, 
   3.7635654394692097`*^9}, 3.763565828096946*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"ListPlot", "[", 
  RowBox[{
   RowBox[{"R0", "[", 
    RowBox[{"[", "2", "]"}], "]"}], ",", 
   RowBox[{"PlotRange", "\[Rule]", "All"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.75873099371494*^9, 3.7587310186575737`*^9}, 
   3.7587369187222223`*^9, {3.758737714035736*^9, 3.7587377210266657`*^9}, {
   3.758738907615933*^9, 3.758738913586282*^9}}],

Cell[BoxData[
 GraphicsBox[{{}, {{}, 
    {RGBColor[0.368417, 0.506779, 0.709798], PointSize[0.011000000000000001`],
      AbsoluteThickness[1.6], PointBox[CompressedData["
1:eJw9Ug0s1GEYPxwurslKvuUQplmRfKzseev6OCFcPlZtN9EtjXNGWHcjjFnO
zDSdr7z/v/IRK5Y2ZvlYiciKlaWj3c3Od9ohX91J2v7/3u3Zu2d79nt+Hw8n
TswX6jMYDO+9+vfTT3g6VCwJJ8HGzbKs16INvHw0NmMtBNX3QXrRxGw/kNDY
5XQDO74HkDhb1/vS86NQMcDqUTcRoNLUZBy3/QJOggZXH316fgLk3PEChzwC
RPlNYOY6Bc0H5JyRuzS+CgS2jpNrbQTsmF7Pz7SahtJebTtHROOpgSNL5YsQ
AW/HlQlz9rNQGJ1++eUVgsKfhyjThvAiIKAIC0NjnBfh0Pbmh+5NTO37Acql
ueGsYgzhd5a8Bt1/QrqK+XRah6n9GghROxzMW8Agq/SX2VquQEtnab2iF1N8
VoFsNZFHvsIgzpZmfbZeg1EP+3pNHqb4/YLY+vwaqRgDP75HLLNbh4/rt++r
+ZjiuwERFq9nooWY4rsF/UGTUxXKWrDyPB+p5WxDluTWi8EkTPH/DQ+u1bKD
QzBozQsvtrtoYXi/KpATQ+vRwcK3raAFNQblxpB/otsO1FnlKmT/9f2B3VxF
Z/kyhjeT7GPOHrvgMsC8lNlF62UgaeiyrC6IgKuqxhLRIwYyGno23iwgKP16
qGMQ8cySCejnDxUOyfVQN6sv+F41nY8++uQsOOtqSoDvu8Wco5X6KMOdxZ0d
JSh/DJBZq8lhY81ePn5sSW6VARr/WrBqqaPzZKIRj3OBtVYkWDd7pn2vZiKV
oup5YgBJ+WeIZlLC5rk8EmR2YUkBjw3RQ6Z5LPsCSflphOIWm9JlUSToSlKE
5bVGyJPXnZoTT8Ipnl4c94gx6rArjphJICFZr0ywgo2RaPiEt1MafY8sdFM0
dpItJUGZ1h4TSrJQe6X8SVs2SeWxD02kBPmdySXhL1xTanQ=
      
      "]]}, {}}, {}, {}, {{}, {}}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{0, 0.029947866264889964`},
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  ImagePadding->All,
  Method->{"CoordinatesToolOptions" -> {"DisplayFunction" -> ({
        (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
         Part[#, 1]], 
        (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
         Part[#, 2]]}& ), "CopiedValueFunction" -> ({
        (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
         Part[#, 1]], 
        (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
         Part[#, 2]]}& )}},
  PlotRange->{{0, 3.141592653589793}, {0.030149830322281593`, 
    0.03418911147011422}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.05], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{{3.758730994282012*^9, 3.758731019469046*^9}, 
   3.7587369192483597`*^9, {3.7587377148271008`*^9, 3.758737721541231*^9}, 
   3.758738914070641*^9, 3.7589682750057898`*^9, 3.763562989995171*^9, 
   3.763563904344727*^9}]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{"pT2i", "=", 
   RowBox[{"Interpolation", "[", 
    RowBox[{
     RowBox[{"Delete", "[", 
      RowBox[{
       RowBox[{"R0", "[", 
        RowBox[{"[", "2", "]"}], "]"}], ",", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"{", "24", "}"}], ",", 
         RowBox[{"{", "2", "}"}], ",", 
         RowBox[{"{", "5", "}"}], ",", 
         RowBox[{"{", "7", "}"}], ",", 
         RowBox[{"{", "8", "}"}], ",", 
         RowBox[{"{", "11", "}"}], ",", 
         RowBox[{"{", "14", "}"}], ",", 
         RowBox[{"{", "15", "}"}], ",", 
         RowBox[{"{", "25", "}"}], ",", 
         RowBox[{"{", "26", "}"}], ",", 
         RowBox[{"{", "27", "}"}], ",", 
         RowBox[{"{", "29", "}"}], ",", 
         RowBox[{"{", "31", "}"}], ",", 
         RowBox[{"{", "37", "}"}]}], "}"}]}], "]"}], ",", 
     RowBox[{"InterpolationOrder", "\[Rule]", "1"}]}], "]"}]}], 
  ";"}]], "Input",
 CellChangeTimes->{{3.758740913092503*^9, 3.7587409557646627`*^9}, {
  3.758740995632971*^9, 3.758741003759659*^9}, {3.7635629959296417`*^9, 
  3.76356300125667*^9}, {3.763563932961089*^9, 3.763563935905362*^9}, {
  3.7635639761034937`*^9, 3.7635639886775923`*^9}, {3.763565585912415*^9, 
  3.763565682566395*^9}, {3.763565888104884*^9, 3.763565900209362*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Plot", "[", 
  RowBox[{
   RowBox[{"pT2i", "[", "x", "]"}], ",", 
   RowBox[{"{", 
    RowBox[{"x", ",", "0", ",", "\[Pi]"}], "}"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.758738926536585*^9, 3.75873896510565*^9}, {
  3.758741007290229*^9, 3.7587410133511267`*^9}}],

Cell[BoxData[
 GraphicsBox[{{{}, {}, 
    TagBox[
     {RGBColor[0.368417, 0.506779, 0.709798], AbsoluteThickness[1.6], Opacity[
      1.], LineBox[CompressedData["
1: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
rrKf/CRsBlKy0Dfz9J/1/eYnhrM9a8bQLTfenNTp5icJNCNl1y08uLP0xfea
QX5ix+CTcdnKg3bDW+Ucfibp5zjPc9zGA5udVstXsJjk77WfxxPRP4w3uupx
mKRzZn/OX3T1gWYZT0EmaRnWOHHWgAd7D6e7hc1jku/nn+bEoz8cvfExdQGT
1HdLzG9HFxxX9fgjyiSVLdM5NoY82Hya85ktziQV5ufn89A5tj/k5ZcwSWlt
y4lmtJpDqieRZJLCfSavpLfzINnJv/KoNJOoJ+97sRmtcvGogscyJjGVBeX1
6Dj39d73ZZjkfOiqBDl05OVGxU8rmCTBnf2Eg158LdmnW5FJirqHZSbx+aF+
/31lKTNJ29E2bg/65p21l2ENk0jqvX1chXZ/fK02WZ1JAgUu3ItA789S+e+e
IZNceNTkuw5d+YrWmLSDSe4KVtDk0Dtza9ZV7GSSF5dyLomhtxRd/s6/l0l+
24R6TuD81339qup6iEkOqRg5F6IF+7zaDp1lEt03GdaH0AGDezUv2jHJ4TUx
zUZoxuiKwOBzTOJKBVnooiemPmuVOzFJ0nW7w7LozjnywZs8mUR2t8y+/+fj
vUIFLL3FJOym2+QK2iiw2WjRHSbx/PU27gK6cmTwwLy7TNLb3St4Gt1UuMR+
JoRJasf2NuxGn1i12m00lEmMZq6CHvrPPeLbG8YkufxpsWpo50nTO+3hTLJh
7q+5Suh/NqfDmx4xSaywmLMk+lK5Z0xtBJMsWWxQPw/N3BCY+CkKn/9i0X6C
vv2Ql1NMMcmJRaKD/x+fCD2jMDeaSQYuCwe9Q4efKf2c+YRJLnfNW8OH81tW
2fgtMY5JhEwFK7agV3H5BqKeMclKBTbn//FLZS2aCnvBJFl3+eP4Md5aDivZ
dxOZZNs4XX8b2kB3r/TlVCaxrpi6XIy2bozcYfmKScKdB8dKsR7CxLWil5Uz
CSfvR8dHIx5IXd71UryCScKUGv+bt5MHMe2W2fM/MYl8SL3cHnRyht+n2S9M
Qk5+taxEfzCtnmhuYBK3uWV1Vbt4QAs6b0p1MUmHWXpJnTEPbDlx/DICLFLc
fzO+1QTv5wu4s3Uui9Di52QrmuJ8ps8uOiXEIpssbpaeQ/cNrFZ6LswiKWU3
usbRLo0ZOzdKsMjj6AAVkQM88EksCtmhwiJp6tYiswex3+7/vdx5N4t8ancK
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
jACRaJLW0EH/D2g75Tk=
       "]]},
     Annotation[#, "Charting`Private`Tag$292819#1"]& ]}, {}, {}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{0, 0.030590126886037003`},
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  ImagePadding->All,
  Method->{
   "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
    AbsolutePointSize[6], "ScalingFunctions" -> None, 
    "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
        (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
         Part[#, 1]], 
        (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
         Part[#, 2]]}& ), "CopiedValueFunction" -> ({
        (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
         Part[#, 1]], 
        (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
         Part[#, 2]]}& )}},
  PlotRange->
   NCache[{{0, Pi}, {0.030590126886037003`, 0.03418911145029942}}, {{
     0, 3.141592653589793}, {0.030590126886037003`, 0.03418911145029942}}],
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.05], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{{3.75873892500565*^9, 3.75873896560713*^9}, 
   3.75874101416004*^9, 3.7589682751170683`*^9, 3.763563002897319*^9, {
   3.763563909620913*^9, 3.763563937808153*^9}, 3.763563991216733*^9, {
   3.763565654956279*^9, 3.763565684292261*^9}, {3.763565891029356*^9, 
   3.763565902369157*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"pT2f", "=", 
  RowBox[{
   FractionBox["1", "\[Pi]"], 
   RowBox[{"NIntegrate", "[", 
    RowBox[{
     RowBox[{"pT2i", "[", "x", "]"}], ",", 
     RowBox[{"{", 
      RowBox[{"x", ",", "0", ",", "\[Pi]"}], "}"}]}], "]"}]}]}]], "Input",
 CellChangeTimes->{{3.758741023619193*^9, 3.7587410351610537`*^9}}],

Cell[BoxData["0.03226279214299149`"], "Output",
 CellChangeTimes->{{3.758741024180706*^9, 3.758741035896837*^9}, 
   3.758968275191785*^9, 3.76356300767935*^9, 3.763563995996172*^9, 
   3.763565686444861*^9, {3.76356590591121*^9, 3.763565926986273*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"ListPlot", "[", 
  RowBox[{
   RowBox[{"R0", "[", 
    RowBox[{"[", "3", "]"}], "]"}], ",", 
   RowBox[{"PlotRange", "\[Rule]", "All"}]}], "]"}]], "Input",
 CellChangeTimes->{3.758738975248681*^9}],

Cell[BoxData[
 GraphicsBox[{{}, {{}, 
    {RGBColor[0.368417, 0.506779, 0.709798], PointSize[0.011000000000000001`],
      AbsoluteThickness[1.6], PointBox[CompressedData["
1:eJw1kQ0s1HEYx+9wuUIqyYlwp0iy8lJcWs+v0a2s63KKKCpcdUmMibioiOaW
mjpS6X93//+mzNC8ja2UlznWSkWyvJW8jGYO6Tgvafvdb3v227Pn+T3P9/v5
scNjhCI9Go3mvhL/b93ZZJTAKN8gh82OFrn15uWwv+per52+Ln8L+7qlzm3j
BBTVcU4TdipgcC8ozdoJXG+H6yTQp0cJGJh8dm2XVQeEGduamXfo+r8BBGcm
MGoIiM54AaYOPaA3KrqcX657PwDqu9rCuBwCFo1CMhJZP8FmaTnlR5pu3i9w
G52Se4sJaOzsvzSyZRiEYZKJykDd/FEoef0hsu08AdmEiB9kPwZ5UUfZnSG6
fb+hivrU/DCSgOPicdeW7RMQ6p82W1es2z8JcGr6VdYjAqQFXlIrCzUMW3gl
evDkWM8UMEsGC02S5BCTmnLji+U0aN0q9MlmOdY3AzWMCEYqTQHCiDcxUus/
4NpNChk8BdY7CzUhg0PT6QrYc5ge7mP7F86i3ibNRwXWrwHPWqfH4rVKYLn4
ntCy58CqgefjdVKJ/czDGi2n8f0DJWjXZ/EqtmrB1eOzfOGdEvtbgDM9WnrY
jBL6Z1u9ohwXgdunsTHdqcB+l0A84hQwZ0ZAw3djZ/sdy9CX5buxLJnE/mmI
lXNonV86CQEDRTnReTTEU8Qy3UpJzIOOgl7eySRrSGgStma15tPRwSSBbL6H
xHz0kOx+IqdSQ8Le5rGb2wr0UMAxn4uCRRLz0kdELPtAugkFRZ7Gybee6COb
ZL/aelsK8zNABaxargmHAstil/jepwZoWCXp3W1FYZ4MFJpr7d7gQIHUWnCF
W8hAqjS+Su1JYb6rUKi2Wt0VQMFCTqxI9nwVCm5URZ3jU5i3IeqyL2uVCCi4
Ss8NUxOGaCgzw6HFn8L8mUgmzZ5LCqSgP74iiK9gIkl16W1hEIX/YzWK8/56
JHKl/x8nvW1e
      "]]}, {}}, {}, {}, {{}, {}}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{0, 0.02988067776044042},
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  ImagePadding->All,
  Method->{"CoordinatesToolOptions" -> {"DisplayFunction" -> ({
        (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
         Part[#, 1]], 
        (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
         Part[#, 2]]}& ), "CopiedValueFunction" -> ({
        (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
         Part[#, 1]], 
        (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
         Part[#, 2]]}& )}},
  PlotRange->{{0, 3.141592653589793}, {0.030349631977947853`, 
    0.039728716328096575`}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.05], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{3.7587389757412043`*^9, 3.758968275291647*^9, 
  3.763563010842537*^9}]
}, Open  ]],

Cell[BoxData[{
 RowBox[{
  RowBox[{"pT3c", "=", 
   RowBox[{"Delete", "[", 
    RowBox[{
     RowBox[{"R0", "[", 
      RowBox[{"[", "3", "]"}], "]"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", "30", "}"}], ",", 
       RowBox[{"{", "31", "}"}]}], "}"}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"pT3i", "=", 
   RowBox[{"Interpolation", "[", "pT3c", "]"}]}], ";"}]}], "Input",
 CellChangeTimes->{{3.758741040247095*^9, 3.758741055515052*^9}, {
  3.763563019142413*^9, 3.7635630262362432`*^9}, {3.7635631045108433`*^9, 
  3.763563113625621*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Plot", "[", 
  RowBox[{
   RowBox[{"pT3i", "[", "x", "]"}], ",", 
   RowBox[{"{", 
    RowBox[{"x", ",", "0", ",", "\[Pi]"}], "}"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.758738989255033*^9, 3.758739008119787*^9}, {
  3.758741067775136*^9, 3.758741070598048*^9}}],

Cell[BoxData[
 GraphicsBox[{{{}, {}, 
    TagBox[
     {RGBColor[0.368417, 0.506779, 0.709798], AbsoluteThickness[1.6], Opacity[
      1.], LineBox[CompressedData["
1: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
iy5IONnnq48+J/B5PSOmCwxNuGlvTPB7ppBsd6+4C25NipxUvYj3Vben0vu5
uiHKW7oyypABW7mPf97F2w19G0REzqElntMuSK3thm+Vxy040aJRju5rJbtB
a2z5ppsGDOAvud4xfbQbLJnfnh/Wx3n5zBb7kVPdUJQy4bWgh/NEc9uKHp1u
uP2qLSULTR/WUaq92g2fTjQk7ETP8B55kereDXyhsX93XMB++5J9R9yzblD5
5Sg5eZ4B42I5RRHB3eAeF5GeiR6QlZ30e9MNkoezVhxG9+aMenomdsNELnc/
D7rrSJyoW2Y3xIs4KDXoMuCnrpiG1dduKB+zs7JGN7X/7Lpa2Q0Ry6/pEXSd
2UtHo/puOGSh1MSLrnLifavR2w0l6vrxGTqYPxxlcGS0G9Y7LlnmjS7xca9T
+tMNqw+brDVFFzAXqNs5e6Bzya9Tq9G5Utkhm1f0wOaUS+4T5xjwIeX2LqE1
PTB42vBhFTrrwK5ifpGef+OHWSY6rXDIcKlED/ydz1EvQSerx0xRdvRAuzf3
VAv6XZ2p99zeHigYuaz9b703fU3v+4/ger+mlonh8yKtgzTbNXrAspjtlCKa
OXe6t+FcD5js/yqoiw5ZVrKq+EoP8Frs2RiADgp8GJdn0QMcTxJV09DPhYlK
pl0P/Op5/rkW7b0z0zL6cQ+k8alECWE8SnfX99z26YFybeHdB9Fccn8MDgf1
QNlP77Yr6IcK+052RfWAV5KjXTraUSVTUqyoBxw6hM4a4nmYaWe2h1J7Iebz
6dO1eL4x5+p1by7thf+uzTXS8fx7dP9UKvL3gi1veK08+qLBvtxmsV7o1T40
F4rWvZIZsk6lF1SUdL/ewPw6ejdTK9C1F47Xv+laivn40KG+9JJHL9RHNLgA
usDpz0FZ314ok77VaoNWdtu3s5rRC9NmJL8BvdcrcxlfXi/krcuqYxjh/cq7
/kHbl14YuphqWoVO8fkzl1jRC4wjFQZsxgzY/nxfv8avXoiqyblpiN78OrPI
+y++jzfbNz6sH5OwekV9jj6wVbn9TBHNZP5J3cbTB902edevoH9FrNn236o+
yG+c0niGForaF1Eq1AfFu3fIZqIvvNFZF7K5D07Dt7YC9Iu3d3yvS/eByquN
OqnourhgTgVZXH9UoSQCzf8u05lLsQ96erjAD62ZVD9Vf6gPXko/yHdG+6T8
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
bAMtEkbmzZyo0xQiNedSY8oVCed11aRm/1BIzYb3b9+iC1O31Y3MUsjyZWsL
R9EvzYZ2NP2lkK9F5nlOSyJBteFmZxIHlaRsuOv/kjsSXqVanTAUoBLFpuPZ
Lcsi4ZiZ3dr3slTyU8bu4Ce+SEgtOlf0bi+VbI3JF+NdGQnCG/fZRMpTyYPG
jG5D9GT9n2/PFKmk9A2VbR4ddtje5YoqlYSXxvHJroqE36JOPfzaVKLT/5rj
xepICK93S7O4RSUdnvL8K9dHQk/Rzlaf21SiTBP7dAEtnda6JPEOlXDY67+L
QGf4KhmNOlLJL1nPXTuFIqHs+OwSq4dUMr1185GDGyJhpXyMrO9jKulN+HP+
AVpHXMcoyYNKzo5H3S9Ed1DS08a8qSThtc7fQ8KRIDlu2sr7jErW2+Wo3kff
bF3JvcuPSpZPFjzJQ898sDKyDqQSz2xr6j6RSFCOFfHyC6aSILt7UtboBy8q
0pJfUsmO98MKsejix/dav7+ikmPvvK/Vo5ffluaeCKUSkwd61fNoLdNm2ZVM
Ktn55fbmjaKR8OK0l9HuCCrhsmk2UEVvkulLs4mmErkJDz939DWh4Fb/GCpR
yKl69gb9jvsId2oslUT+MnX+gpbvZRlNvqOSFSvNZdk3RoIG04jbNpNKcrOo
imboAJ/lcgHvcf9pUb/d0I1OOUZpH6jErt0/4QX60vn16b/zqIT3o4bkZ/Tb
o6WtqwqoxNx4w0gdekTOnluukEqObtr3sR9tv7Le6HYxldSMq9kvE4uEXLbH
XoGluN/fR8yF0LRR2fT0Miqxpjy13IY+/rOztbaCStrWCD9SQPt88+eerqKS
hh1z746ga94flFtdTSXJhzeOnkGvixkz2ltLJZ+1nx81RBsGMbzO1VOJqa5m
9jV05EONdLtGKhlU0z1ugx6w+dsa1EwlSVvjph3QOy7Gc2f+pBLusWOF99G2
p/Tk6lupRDN4V5onOluJ2/hPO5U0rb9c/Ay9uO2915ouKlm420kJRKsKXkvf
10Mlq2LjL79Ee3GtadPpoxLb2PyJ1+jK6SLuuwPo2yLxDPSqblu5F0NUcoNe
8jwcfaF6k3HWCL6Pbk5cBJrx6YdXwxiVhF6dn/rnrkS39JkJKnGXeWz7z1vD
dratnaKSopgLUv/+39K7lVvhD5W8+26/+t/6aQ4+cudnqeRVZKfSv+fPXVMy
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
N6dZtLOwrYV9N9azrtw0FfPjXHPawO1+OnmYOBq+Ds11dm+nxTidPFq8GX4U
bZt6buPNSTpx51vG0kK3890xujFFJ6kld2uM0NkVmc1XZ7Fe257l3kXfOKZQ
Y8zOSZxeWNnFoysOKBad4eMkvWHNseswf72ybv93hJ+T7FTYflMCfVQucdcB
AU4i0MSpLIfOlxEL27SOk9xYiKCeRt+L06tZs56T7O33+G2I3i8ZyL1sAyfR
fKsyZI6ejqwgbCKc5PpER58DOnUj153fopxkfajx5P1/9RR2MKFPjJMckwpa
5YWWXu/Y2bKZk4x72in4oaNXjZwqkuQkQ9Yqvgz0C84ayaCdnIRy77TrR/TZ
hzxGXrs5iYe6ZPnnU/++p0cDnWU5yZRq3sZv6Cdz79mvynOS/NPyXY1o52FG
0z7CSTwfhLf8QZtW3/BuPMVJvqlF8ezF+hfVjCooP81JpI1y+ZXRLWW/Zj5p
cRJ15QKpI+hzX05fjtXhJNxLAt3PoY+936fsaMRJOqyS195FyzCoY0KWnGTw
qSA1Dz2wXkmcz5qTpO8SPVyMfvPCTp/jFidZd+QA4/u/5/n3Fw/bcZLO6x9D
u9D8jyrDc505Cbuy3I+l2L9mzF5pGftwEiWhc0+M0M8cWJwuvpyk/lKS0w20
uFfch1B/TqK8YnnAHfTZtx82NQdxEhlOy32+6KGsz/WzLzhJAH9+4Wv0w+Jv
T9a+4iQPFxMd3qLXN1TDvlA8z9ju8xnolN7mybMMTpI1yWn6GX38T+cb23BO
Yi2VVleDbqMP6T1ncZINcQ6SfegV4vOfq95wkoRvKw+uwP5sfkkoQC2Jkxxh
SfEboam2m4+ZpeDzXJq1bv3r7w+k5z3SOIlss16iO7okQvHSlyxOIjFum5iE
Fm/Xlz34CeOZVcCk4veizSC0Zu8PTrKvMDQhDn3nZpTH2RpOcu6XfV4+evm9
BEXbOk5SNlNfUYtWep0TmdzESeaWf/21iA5p+mkr3Yn53b7VVwu/p9o6wgJi
vznJM5mmsD/owSviJWSak/wKWJuw9CzOA3Yy94xmOImZk/crEXRyoHL363lO
YpP4ie8oenmNYfoaDi5S+WX9zgB0sSbjLM9qLnL0q1HIlnN4nynszuVcy0VU
yu3j5NA88tKSFEEu8rX2nvth9BmR93PTG7jIrsuaIZfQv/0XTcdFuMgdiS0V
t9BB9CPlgxu5yKP2zPNu6ObhH4y2LVzEg3QohaCdL65b0izBReKuyWlHo0Vr
jWxqpbiI19+b0inoSx+HVEu3cxGLgs8iJegRL/pAqhwXMVtqtTCJ9l04qfVu
HxfhHtLnXUDvsXn+MUaBixzvDP7FqYP3+/Oiz0KVuEiwmXSCIFqw/MpMMHAR
kS2i8ZvQOSThov9BLqKgFnRJGk2R3C/rfpiL8O1QXlRER75yDXU7ykWOreFu
U0UfXfGV7nSci1Dyve+cRHtPazVaqXOR8TcDXy+gZcxCVG6c4iIMPmOXi+iq
n21xl09zkU+++QNX0QJFN50vnOUiZzffabqFzpJP69XW4SLE9KqBPfpC/Jzm
qfNcxG/ZHT9n9LzIwezjelzkodzk7QfosOfum1QNuIjOpCS3B5pwVngrG3GR
w3qX1b3RnQ6rpuUvcpEn96f+r7j+g5qswwCAq+zc83YoY0EcEe6YiAtuKnpZ
XSufWR4MOkA0JahbTASBA9GIHE5IweEB0iAEhSFtEmNciaA2HT80dtvBDAqZ
gY4fZ0kc0Ja/yBKVnvfPzz/v+3yfX9/7vqchq92J8k17AFMLQia+IYsUuj7x
XkB+yrbQWrL91nS4KA3QHtkorCNnydbVC9MBB6RHbVoyrzuXE5gJuCvlLd9G
cseGziy/LECd1XuljryzaemI937AufzEC3ryE79I9DwAmHNGvnCOXFdWYVz+
OdVvc7a7iSxZdPCXfkH5Txs+8R154mCAaiEPsBfH+lkf/TN5av4QnX/01gXW
wYktMffzKb73V7zL2jbgNs2qAI21v2Sx39snfSNoqoD6YSZ9K/u/ly4fLp38
CjAq5nUzG9/3ot5Ht48Bqp2JDjb+WC186igGTGiO1jSQH3rF2gbVgIuWSBd7
/uqiU+v7TwCaZI2zbH42P3GetpQCdn6oLakmj2YIl/WUU3/9Xm5h85s/sS/z
SgVgg6Cngc1/YHybo0MD+ND/iC9bH8XbEoOhGrCmbvTOEXK6a2B+rAYwZLc5
70tyjk7+Af8MoCH44+octl8/elAVUQ+4JqhrYzq5kCm6q2oAbM2YjWP7Sd3t
s6GjEVAqmHMlkCsONBdM6wDnP7FCHFl7uz8gvhlwck54ie3fcyeTMkpaAMOU
l7ZuJLdKXVe6WgF7uJLoteSrRt6utW2AM9/KbF7k35S7Nc9MgCrPENkdmqdx
8cxEuBnwTde68hvke3fzxWldVJ9rqdIu8iPZWfvQdcDo9sIX9eSnz9f7cy1U
T8/9nDLyso6f0iRWmpebxkNKMu/VKY6hH9CTv6plJ9lvMG/H2A3A2b69yVLy
qmOg9x6k+JJ9j4vJ4tmwLaqb1E/tfVwOOcp8ULndCSjmR0waaV9tz+b0qccB
/wg69WslOUFY80rXJOCUR3GwkpxWevViyD3Af3787P42cnHiEvfCX4CFwvFn
I7Qvy1ZWScL/pvlc8d+0mVzVu7os9QFgU6db3MC+X0IjREPzlI+RIpuc3PP0
pKL5BaA+4TWvcdrH1vOCducSBoX6gctm8s+K9kWeB4P1ZyvbaslOu0N7mMug
XpR9OpZ9f9UFjMTxGNxkx2AT3Q+LMT+sUfMZNDyOifyavNxjS26nD4PpvS2m
VLJPpsI7xJ9B7vWk3JfJAYLH8qQABv8Ns1xj7yvh8PHzmkAG91ysiu8mh5b4
PbcKGNyROxRWSQ5/xxi9EMTgcLk6KoX8P6WZtHU=
       "]]},
     Annotation[#, "Charting`Private`Tag$59326#1"]& ]}, {}, {}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{0, 0.03060423455214464},
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  ImagePadding->All,
  Method->{
   "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
    AbsolutePointSize[6], "ScalingFunctions" -> None, 
    "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
        (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
         Part[#, 1]], 
        (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
         Part[#, 2]]}& ), "CopiedValueFunction" -> ({
        (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
         Part[#, 1]], 
        (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
         Part[#, 2]]}& )}},
  PlotRange->
   NCache[{{0, Pi}, {0.03060423455214464, 0.03973119820705186}}, {{
     0, 3.141592653589793}, {0.03060423455214464, 0.03973119820705186}}],
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.05], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{{3.75873899029676*^9, 3.758739008529138*^9}, 
   3.75874107112325*^9, 3.758968275403721*^9, 3.763563116076125*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"pT3f", "=", 
  RowBox[{
   FractionBox["1", "\[Pi]"], 
   RowBox[{"NIntegrate", "[", 
    RowBox[{
     RowBox[{"pT3i", "[", "x", "]"}], ",", 
     RowBox[{"{", 
      RowBox[{"x", ",", "0", ",", "\[Pi]"}], "}"}]}], "]"}]}]}]], "Input",
 CellChangeTimes->{{3.758741087118709*^9, 3.758741089364423*^9}}],

Cell[BoxData["0.035252053835958745`"], "Output",
 CellChangeTimes->{3.758741089770492*^9, 3.75896827547526*^9, 
  3.7635631218310204`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"ListPlot", "[", 
  RowBox[{
   RowBox[{"R0", "[", 
    RowBox[{"[", "4", "]"}], "]"}], ",", 
   RowBox[{"PlotRange", "\[Rule]", "All"}]}], "]"}]], "Input",
 CellChangeTimes->{3.758739016629176*^9}],

Cell[BoxData[
 GraphicsBox[{{}, {{}, 
    {RGBColor[0.368417, 0.506779, 0.709798], PointSize[0.011000000000000001`],
      AbsoluteThickness[1.6], PointBox[CompressedData["
1:eJw1kX8s1GEcx+8O+dHFaqvzc+LyIz/XtcQ/fZ7G/Khux5Hbsrhpt7HiihUp
DZ2uIpqdpPC9O4/p2pxwshgi4fqjZf2YkEMmw8mlhPMjbc8922fPnj2f5/N+
v1+PW7KYL2LQaDTOTv3fTWtygVNulUyBoxerrHv/a1jDfHmUiIL6dvcE6uAg
1Bj5dd5xpvsP4MhStgTFUzCxVHUt0OkTjO37vr1lbeofhhH96a2tMxSkSZ6B
necY+GZIGk/KTO8n4OXPwMgrbRRs7j4nybKfgupCgzDDVk7mTYOPkKXX8OXw
5rMu5YfLDMiD3Fw8b8rJ/FnIsdno7xqSw31KxBWw5+AdyjOoWAqitwBpS9lN
Ep4ColPnjwx4L8J2vGw4VK0g+ksg4/gdzbNTQlFlcJETywCR/cWlJ84riZ9f
EBDrF3OgSQniWzdyPzosQ25pZ0ioQUn8/QZlr6rsFFIA/0KXuMj5D+jp2ub2
9FridwWyuK7MkLpaOBZJTw51/QuPm+ZtE3tqif9VSBQ15k6u1IK9f1ic0W0N
hMvCsClHTPKsw6Z4dnKcjcG4VxrecsgI2QKbHkEEJvk2gO8a0H07CoNuRRt8
0WsT2BzKMiMFk7xb0BMzXXE1E0PvKNOX7bMNPXOqkocyTPLT0KzD+9GCBxhi
J+pL0h7RkKHVT/1FigkPOiq+58jruIuhj6+VaivoaKaQad9RgQkfBnJ/Vb+w
SmEIejuX51HJQMKEJMuAGkx4maE7Q5UjuVUY6o8zc/KfmKGYvtSUPAUm/MzR
2p4KvY0Kg8Nz/8xvT83RV3lSdLYGE54WSOrBOxuh3vHjzLsUUm2B8g2+4w0v
MOG7Cw1KF6W6RgwbJZdF5TW70EBBOKO5FRPelqivWa0p6sCQTi9LNFCWqBgN
0kY6MeFvhQ6vl3YpdvR0mS0CrsIKXa/jauraMPkPa5Ti2yDL2Dn/A7DjcW8=

      "]]}, {}}, {}, {}, {{}, {}}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{0, 0.029801600414976325`},
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  ImagePadding->All,
  Method->{"CoordinatesToolOptions" -> {"DisplayFunction" -> ({
        (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
         Part[#, 1]], 
        (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
         Part[#, 2]]}& ), "CopiedValueFunction" -> ({
        (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
         Part[#, 1]], 
        (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
         Part[#, 2]]}& )}},
  PlotRange->{{0, 3.141592653589793}, {0.03031156956491797, 
    0.040510952563750896`}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.05], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{
  3.7587390170811663`*^9, 3.7589682755686083`*^9, 3.763563123496625*^9, {
   3.7635631954972258`*^9, 3.763563215846097*^9}}]
}, Open  ]],

Cell[BoxData[{
 RowBox[{
  RowBox[{"pT4c", "=", 
   RowBox[{"Delete", "[", 
    RowBox[{
     RowBox[{"R0", "[", 
      RowBox[{"[", "4", "]"}], "]"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", "21", "}"}], ",", 
       RowBox[{"{", "2", "}"}]}], "}"}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"pT4i", "=", 
   RowBox[{"Interpolation", "[", 
    RowBox[{"pT4c", ",", 
     RowBox[{"InterpolationOrder", "\[Rule]", "1"}]}], "]"}]}], 
  ";"}]}], "Input",
 CellChangeTimes->{{3.758741109799469*^9, 3.758741156070038*^9}, {
  3.763563137058544*^9, 3.763563184717849*^9}, {3.763563230974164*^9, 
  3.7635632436506233`*^9}, {3.763563420919189*^9, 3.763563422603154*^9}, {
  3.763563534522991*^9, 3.763563544628352*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Plot", "[", 
  RowBox[{
   RowBox[{"pT4i", "[", "x", "]"}], ",", 
   RowBox[{"{", 
    RowBox[{"x", ",", "0", ",", "\[Pi]"}], "}"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.75873902671437*^9, 3.758739032392531*^9}, {
  3.758741121016549*^9, 3.7587411222539873`*^9}, {3.7587411586793947`*^9, 
  3.758741162857502*^9}, {3.76356348448624*^9, 3.763563486452825*^9}, {
  3.763563554386705*^9, 3.76356355764552*^9}}],

Cell[BoxData[
 GraphicsBox[{{{}, {}, 
    TagBox[
     {RGBColor[0.368417, 0.506779, 0.709798], AbsoluteThickness[1.6], Opacity[
      1.], LineBox[CompressedData["
1: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
vqYMN7nx+cA7XTRbo09WXY6bFH3c+e0kevv3khal5dxkb5IGTz7aT/6apdhK
bmJ7k+Z88QXe39L+WIxt4Cb3VyeR5pdsOEb9tmlIj5t8VYg5uugVGxLNCmT6
9LmJ+NInF3XQxrPhzb+3cJNoLu+EB+igbfstandzkzffTQW3J7JhSf37Y2lH
uUmr11xrUhIbZOYemDu7cxONOqPrN1JwP7XvyX7swU1eOxCrFPTFEh7xXE9u
soqiBe3o8gdeXxfd5CZKa6QWtqbi97mS8y72PVz/3b+e9DTcL7yr48vvc5PH
8s2WuuiKwS7uoUBuIppZrX8GPfmNbSMezE2C9xTKPkUvf2edvymEmwj8zpwv
T/tXT9KytqHcxN/9ZcsM2v12/dW7T7gJjxAzd1U6G2LtQxqSn3ITn/jgSAt0
9V4Tne/h3OS/LYOGDugZLb5Hc5HcJG3XQPU+tJJk6fDyKG6yaV+/qQ7a4zck
nY/lJvuse6240P9dUVdclMRNrnh2XXiC43lHLxbZlMdNyt+2PSvE9SX6lp8/
8YGbHCxolX+Brnfw+XznIzdpKWuJDUSr6czfqSvB+qlven0U3fipj+N8NcZj
ov7jIMZLa6yiP/onN7HX/NIjjbb64WdU9oubjG6oPs+Fvptn8GKgg5t4bqka
+5OM95s770/qdWN89lUupKLvy75q+jbMTd6dKxPZhe7cca+cwU0lvK8+bHR9
jfVoaC2vSKOSS7rGeuboZuN1bpsZVPK78IfeZnStaesydz4qyWke2cSPNjmS
fil0MZX8Z39DfwTz/+nYncpUQSp5NM4HDeiCE5pXepZQiZOAEolF69sxquji
VNL4LJXcQ2fbN69YIUElO1RgszNayynVnUhRSVr6p81m6GRn3+pjMlTySlZv
kyF6pesxpStyVLKZ/mafKTru8lqPR8uo5PuA+ikrdMT1RuXPilTC9WF54AX0
0pvJ17qVqeTJ84iYa+gQn9s1NFUqUQsWz/JF372vfh3UqOTICd6fz9CXn92s
S9amktfUEY1C9MHMlbcf7qCSY7sL6pbgeqvfcjS+3kUlwxp6PbJow9xvayoM
qcRP6s2CCnpL0fUmbhOcf+9zlU3oNTU1mm6HqYQn8IH7STTfwNX2w2eoJLPG
WvYN2m/YRNf1LJUYvf+hkY+mjCsGPHCkknb2wR3l6OnZqvXlzlTC77bzfAu6
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

       "]]},
     Annotation[#, "Charting`Private`Tag$60648#1"]& ]}, {}, {}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{0, 0.03031243590589485},
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  ImagePadding->All,
  Method->{
   "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
    AbsolutePointSize[6], "ScalingFunctions" -> None, 
    "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
        (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
         Part[#, 1]], 
        (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
         Part[#, 2]]}& ), "CopiedValueFunction" -> ({
        (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
         Part[#, 1]], 
        (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
         Part[#, 2]]}& )}},
  PlotRange->
   NCache[{{0, Pi}, {0.03031243590589485, 0.04051086956545588}}, {{
     0, 3.141592653589793}, {0.03031243590589485, 0.04051086956545588}}],
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.05], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{
  3.758739032904941*^9, {3.7587411227025347`*^9, 3.75874116332295*^9}, 
   3.7589682756592207`*^9, {3.763563157486538*^9, 3.7635632463001013`*^9}, 
   3.763563287870043*^9, 3.763563426471178*^9, 3.763563487032942*^9, {
   3.763563542777368*^9, 3.763563558301515*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"pT4f", "=", 
  RowBox[{
   FractionBox["1", "\[Pi]"], 
   RowBox[{"NIntegrate", "[", 
    RowBox[{
     RowBox[{"pT4i", "[", "x", "]"}], ",", 
     RowBox[{"{", 
      RowBox[{"x", ",", "0", ",", "\[Pi]"}], "}"}]}], "]"}]}]}]], "Input",
 CellChangeTimes->{{3.758741228223894*^9, 3.758741231078183*^9}}],

Cell[BoxData["0.03701305825858704`"], "Output",
 CellChangeTimes->{3.7587412315528297`*^9, 3.7589682757273417`*^9, 
  3.763563561807149*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"ListPlot", "[", 
  RowBox[{
   RowBox[{"R0", "[", 
    RowBox[{"[", "5", "]"}], "]"}], ",", 
   RowBox[{"PlotRange", "\[Rule]", "All"}]}], "]"}]], "Input",
 CellChangeTimes->{3.7587390435018387`*^9}],

Cell[BoxData[
 GraphicsBox[{{}, {{}, 
    {RGBColor[0.368417, 0.506779, 0.709798], PointSize[0.011000000000000001`],
      AbsoluteThickness[1.6], PointBox[CompressedData["
1:eJw1kQ0s1GEcx+/Oa0OyOkcYucLoqC6h4feYU2qzOJbmJS+lMV3URXWN0URR
iuY15148OzJkblnrhRvZpayUbI2Tk0vtepmXovLWtT3/Z3v27Lff83x/3+/n
2ZaaxU9j0Gg0rmH/P6nVXxFW2mstha3urMpeZicIva+N1dpStQqq2d9TxN0S
aH7kGi9xeQ5TTOY91oCE9IehLUeX0ZckBe1sQ66Pwzvw8Pd6nFAsJfffg1kN
L3HPfSkIilrA2k0DvKO2syI2pa+FVlXxUmGgDFYt4oou2H0EhjClrTNdRvR0
EGy8HshVyaB/dDL9s9MMTI697OpylhP9L3DzfCuXkS6HUklaRCxbD6IpR4WX
Sk7mfQNB3infs+4yiMz4ulvt8QM4VplZ3KgmMn8W2iM6PziXN0FZnX+ZA2sO
err0MequJuJnHpQh5xSRi02QlX85b8R+AXQTPDTkhIm/n3BSabl0zA0D/0RP
VpnjL7C0KhjaH4WJ30VgfxIEaQUYfMPpqaHOS2CtvThSexUT/78hySqjb7oC
gx2HF7O87Q+Uq1mcqTJM8vyFvJWduYk1GJZtSg4oty/D8BgzwESOSb4VmJeI
3XQYw+TioH+m+yp4Jibo23swybsGay+8GWEdGPrGLb3YnuvgkxPJdHiASX4a
KvEcq1eqMURrm8sF1TSkculuiX2LCQ86CrK48eT2KIZn/MGSwRo6SuN7J8+8
wYQPA8klr6X20xj2DegLdtQx0HwHnxM+gQkvI5R9qD+k0fC+2c9SVFhvhBYO
T+VvfkXxM0aK68EPSwcw2LdyhBN3jZHmVuic31OKpwkSe/DGuQUGP45HTgeI
TdAdafrBOBHF1xTVXNGpzVkYVsqz06oaTZHYQRMt3ELxNkNVDX4WwY4YztAr
j89JzFAGX7MrZRPF3xzRXW3oBRsN/ITK2AiZOTLdO6ROtqb+YwOKp19S6A39
f0/Gahk=
      "]]}, {}}, {}, {}, {{}, {}}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{0, 0.03047880364707307},
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  ImagePadding->All,
  Method->{"CoordinatesToolOptions" -> {"DisplayFunction" -> ({
        (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
         Part[#, 1]], 
        (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
         Part[#, 2]]}& ), "CopiedValueFunction" -> ({
        (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
         Part[#, 1]], 
        (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
         Part[#, 2]]}& )}},
  PlotRange->{{0, 3.141592653589793}, {0.03097005758471346, 
    0.0407951363375212}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.05], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{3.758739044117282*^9, 3.758968275796515*^9, 
  3.7635635645686293`*^9}]
}, Open  ]],

Cell[BoxData[{
 RowBox[{
  RowBox[{"pT5c", "=", 
   RowBox[{"Delete", "[", 
    RowBox[{
     RowBox[{"R0", "[", 
      RowBox[{"[", "5", "]"}], "]"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", "3", "}"}], ",", 
       RowBox[{"{", "4", "}"}], ",", 
       RowBox[{"{", "8", "}"}], ",", 
       RowBox[{"{", "15", "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"-", "1"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"-", "2"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"-", "3"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"-", "4"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"-", "5"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"-", "6"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"-", "7"}], "}"}]}], "}"}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"pT5i", "=", 
   RowBox[{"Interpolation", "[", 
    RowBox[{"pT5c", ",", 
     RowBox[{"InterpolationOrder", "\[Rule]", "1"}]}], "]"}]}], 
  ";"}]}], "Input",
 CellChangeTimes->{{3.7587411792325*^9, 3.758741194427833*^9}, {
  3.763563621881916*^9, 3.7635637286728067`*^9}, {3.763563806425756*^9, 
  3.763563831789303*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Plot", "[", 
  RowBox[{
   RowBox[{"pT5i", "[", "x", "]"}], ",", 
   RowBox[{"{", 
    RowBox[{"x", ",", "0", ",", "\[Pi]"}], "}"}]}], "]"}]], "Input",
 CellChangeTimes->{
  3.7587390520015574`*^9, {3.758741199107422*^9, 3.75874120786509*^9}}],

Cell[BoxData[
 GraphicsBox[{{{}, {}, 
    TagBox[
     {RGBColor[0.368417, 0.506779, 0.709798], AbsoluteThickness[1.6], Opacity[
      1.], LineBox[CompressedData["
1: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
sYKC8Ack4vBj5vvP0GsXz7H6P8L43V1urUCbvOc77h5JIuDWzMZRdCJ7Cf1c
NIl4f230okgT1pul66TlExKx0/l3PoHWThPda/yURNx1UdewRYfPVj3SiyMR
+3fmF1xEd+y79kP1GdbLgupuL7T8E+ntsokYn5KcwkB0lZpvzToaidA6klX0
DM3krsrSkU4iFJxefKpDm5X+sKjNIBGDyvL7OtHU9fdTSl6RCPpMatUgWi9r
EFJzSIREEOPLGtp7+Jn31XckgicpuUG1Ge83R9Zx7moSMdX8pOsJesCqq1P/
N4n4AIFTti04j+paptn/JREXt1wLdkHv2th81X+YRIhwnBe5iQ77r4arcAzj
23RQ+zFaxbVQT3Ue1+fIF1SDPmmisc50kUR8P8gs1I4O3JH33XWZRAQrz6T+
QrdNv3BLJ5GJ/rn2GlIr3l9+cSkbOchEbDiVXxOdelroiu46MrHvShTDEN2w
N1LbmptMTFnc0TBHz2/mZr+5nkzQtLyqT6NlWO+2xPCRCVNJJ6tL6MN/KLTX
AmRihWw14o32rLl9qUmITGQMGvuHoZNeLe8eFyETLGuJmeHo6oc3WHnEyMT6
v3l6PuhJt+kmRQkyIdr8ucEFLW7hlnxQikxsKeq2t0FfFnHSCpYhE1qRrEG6
aCGqpfOyApk4s9vq8xruTy+wWUNsO5lw2Xzl5Dja6Zwps5YKmfDivvO3D/1R
3ijhqhqZCO/PXFeOdsjVqB/SJhP5d8lH76CzyoV2dhzG9XWmt7OjD/xqXnhz
mUy88J77y4f58lN86JPtRia6X+UFMaPz3A+spHvg+nsvSc5gvsVXP5ISvMiE
p8HPo+3oUeFUtkB/MkFwfStIQm+2tb/rc5tMXNW7bxaBPkkXW+cZSCZS3YyG
A9BlKo94nELIBFdrkZQj+vGBG0ImD8lEe2JGsCL6y8OdT40iyARno+NGSfRq
y8iGvVFkQpdJ+j0Peqd4Wvyex2TCTb3bnIS+cOaMhHoMmaCffzoygecnIU08
aXssmeg9w1E2hW7817pRLp5MiGe2mGvi8yzqEbRNCWTi5HzyT2/0Hu9Dm8WS
yMRjAxevYvSVUspzASqZ+PZQg50J989gLdnKnUImeDrJ8fvQ3NFqCqRUMhHq
FltUi+57KaE6mEkmbiZWUrownkKTbXm92WTi7Z+IGCnM3yGtSPWOXKwvNRt5
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
       "]]},
     Annotation[#, "Charting`Private`Tag$61092#1"]& ]}, {}, {}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{0, 0.0313701493118149},
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  ImagePadding->All,
  Method->{
   "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
    AbsolutePointSize[6], "ScalingFunctions" -> None, 
    "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
        (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
         Part[#, 1]], 
        (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
         Part[#, 2]]}& ), "CopiedValueFunction" -> ({
        (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
         Part[#, 1]], 
        (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
         Part[#, 2]]}& )}},
  PlotRange->
   NCache[{{0, Pi}, {0.0313701493118149, 0.040794593496360866`}}, {{
     0, 3.141592653589793}, {0.0313701493118149, 0.040794593496360866`}}],
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.05], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{
  3.7587390563638983`*^9, 3.758741208457192*^9, 3.75896827590557*^9, 
   3.76356367934623*^9, 3.763563731930334*^9, {3.763563801693684*^9, 
   3.763563834157486*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"pT5f", "=", 
  RowBox[{
   FractionBox["1", "\[Pi]"], 
   RowBox[{"NIntegrate", "[", 
    RowBox[{
     RowBox[{"pT5i", "[", "x", "]"}], ",", 
     RowBox[{"{", 
      RowBox[{"x", ",", "0", ",", "\[Pi]"}], "}"}]}], "]"}]}]}]], "Input",
 CellChangeTimes->{{3.7587412358910837`*^9, 3.7587412380912237`*^9}}],

Cell[BoxData[
 TemplateBox[{
  "InterpolatingFunction","dmvali",
   "\"The integration endpoint \\!\\(\\*RowBox[{\\\"\[Pi]\\\"}]\\) in \
dimension \\!\\(\\*RowBox[{\\\"1\\\"}]\\) lies outside the range of data in \
the interpolating function. Extrapolation will be used.\"",2,217,40,
   16158304280150975867,"Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.763563837234284*^9}],

Cell[BoxData["0.03815249596580111`"], "Output",
 CellChangeTimes->{3.75874123871413*^9, 3.7589682759380627`*^9, 
  3.7635638372431927`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"ListPlot", "[", 
  RowBox[{
   RowBox[{"R0", "[", 
    RowBox[{"[", "6", "]"}], "]"}], ",", 
   RowBox[{"PlotRange", "\[Rule]", "All"}]}], "]"}]], "Input",
 CellChangeTimes->{3.7587390656326227`*^9}],

Cell[BoxData[
 GraphicsBox[{{}, {{}, 
    {RGBColor[0.368417, 0.506779, 0.709798], PointSize[0.011000000000000001`],
      AbsoluteThickness[1.6], PointBox[CompressedData["
1:eJw1kQ0s1GEcx++O895MmNdw5MhL3ipqy+9ZFIlwRN7ScIXDtUTrpJBRNDWN
y/Wiu3s21kZMo5iSXHfWZpqXZWlOR14zrg51pGv7/5/t2bPffs/z+36/n4eR
xmWxaRQKxU+z/5/kGplqOTXNFIK1i0XtW/M28J+TsC/6kHUfeIVzmQPHhdDU
7ZjU6CCD5Hwlckog+8PQObFC67kuBPnq40Ivm1EwfLfMvdxO3v8MG961zu1q
IeSWN4MxcxLSZ3Jype4i4r0cskUtqahABNuGieVXLb9BRHaGJa9bRMybgd7z
srBAXQG8H5vKnNvzHcLNzNKYVwTE/HlQtWYyOLfEUNXIjoh3WgTDoMgtWaeY
0FuGUgmvyEclhqisJR+p6wp84rfXOdhhQn8VpBVHCqiuGKobAqptLNbAvrm4
a/w0Jvwo4WbsK19TDgbujaLiEauf8FDZL0m4jwl/v+CAXYXiRyUGVvobbrWt
Cp61ThiENGDC7zp0eC+YhwoxHAylpgXZb0Czc2ED9wUm/G9CSMtsRqCmtvQM
jlUzfoM1S63d04WJPH/AI/XBzkw/BrVJ5YmOvWoIwzlhgnFM5NuChJdnTyqH
MUytDwZwXLZBMaBNH5JgIu9fkCbZbs5q9Pu/GLk7ue0Amh9M/thH5qegMr7t
mYprGGLkTTW59RS0WNUrMDEmeVBRVFa2wwd9DAOswcpBPhV5SDqjkygkHxqK
VpbPBSnFcEiyWOLcQENxo3Gv45fEBC8txBlaUJT5a/L6G/FKBVqoP2Ws7ZgX
yU8bUXvu6Q45YrB67pn/9ZE2MmPsujNrRfKko25aMM9ot8aPbWTO4Sd0pBpO
rDcwJPnqoLt+a/RJawxbNZfYdU91EL/eTZkyIyZ466Kjsjzfkmkx5FFrz601
6qI0P4X9hgHJXw/tN+2NSdXT8MvviI8Q6qGqiX3yAh3yP/TRhdvr+qN0DP8A
iIttaw==
      "]]}, {}}, {}, {}, {{}, {}}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{0, 0.024654179478496328`},
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  ImagePadding->All,
  Method->{"CoordinatesToolOptions" -> {"DisplayFunction" -> ({
        (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
         Part[#, 1]], 
        (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
         Part[#, 2]]}& ), "CopiedValueFunction" -> ({
        (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
         Part[#, 1]], 
        (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
         Part[#, 2]]}& )}},
  PlotRange->{{0, 3.141592653589793}, {0.025418256105780957`, 
    0.04069978865147357}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.05], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{3.758739066234107*^9, 3.7589682760441923`*^9, 
  3.763563839649063*^9}]
}, Open  ]],

Cell[BoxData[{
 RowBox[{
  RowBox[{"pT6c", "=", 
   RowBox[{"DeleteCases", "[", 
    RowBox[{
     RowBox[{"R0", "[", 
      RowBox[{"[", "6", "]"}], "]"}], ",", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"x_", ",", "y_"}], "}"}], "/;", 
      RowBox[{"y", " ", "<", " ", "0.03"}]}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"pT6i", "=", 
   RowBox[{"Interpolation", "[", "pT6c", "]"}]}], ";"}]}], "Input",
 CellChangeTimes->{{3.758741253521698*^9, 3.758741281152532*^9}, {
  3.763563845557589*^9, 3.763563851966282*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Plot", "[", 
  RowBox[{
   RowBox[{"pT6i", "[", "x", "]"}], ",", 
   RowBox[{"{", 
    RowBox[{"x", ",", "0", ",", "\[Pi]"}], "}"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.758739074749745*^9, 3.758739078367517*^9}, {
  3.7587408810163717`*^9, 3.758740885572538*^9}, {3.7587412839693527`*^9, 
  3.758741295216885*^9}}],

Cell[BoxData[
 GraphicsBox[{{{}, {}, 
    TagBox[
     {RGBColor[0.368417, 0.506779, 0.709798], AbsoluteThickness[1.6], Opacity[
      1.], LineBox[CompressedData["
1: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
       "]]},
     Annotation[#, "Charting`Private`Tag$61222#1"]& ]}, {}, {}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{0, 0.03349975634047279},
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  ImagePadding->All,
  Method->{
   "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
    AbsolutePointSize[6], "ScalingFunctions" -> None, 
    "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
        (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
         Part[#, 1]], 
        (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
         Part[#, 2]]}& ), "CopiedValueFunction" -> ({
        (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
         Part[#, 1]], 
        (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
         Part[#, 2]]}& )}},
  PlotRange->
   NCache[{{0, Pi}, {0.03349975634047279, 0.04070194612955133}}, {{
     0, 3.141592653589793}, {0.03349975634047279, 0.04070194612955133}}],
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.05], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{3.7587390788449183`*^9, 3.758740886831647*^9, 
  3.758741295539702*^9, 3.7589682761128607`*^9, 3.763563854308795*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"pT6f", "=", 
  RowBox[{
   FractionBox["1", "\[Pi]"], 
   RowBox[{"NIntegrate", "[", 
    RowBox[{
     RowBox[{"pT6i", "[", "x", "]"}], ",", 
     RowBox[{"{", 
      RowBox[{"x", ",", "0", ",", "\[Pi]"}], "}"}]}], "]"}]}]}]], "Input",
 CellChangeTimes->{{3.758740794386961*^9, 3.7587408109467907`*^9}, {
  3.7587413103947906`*^9, 3.7587413143272943`*^9}}],

Cell[BoxData["0.038575612391774525`"], "Output",
 CellChangeTimes->{{3.75874080603047*^9, 3.7587408115351477`*^9}, 
   3.758741314832943*^9, 3.758968276154204*^9, 3.7635638659330273`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"ListPlot", "[", 
  RowBox[{
   RowBox[{"Transpose", "[", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"Join", "[", 
       RowBox[{
        RowBox[{"{", "0", "}"}], ",", "pT"}], "]"}], ",", 
      RowBox[{"{", 
       RowBox[{
       "R00", ",", "pT1f", ",", "pT2f", ",", "pT3f", ",", "pT4f", ",", "pT5f",
         ",", "pT6f"}], "}"}]}], "}"}], "]"}], ",", 
   RowBox[{"AxesLabel", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"Style", "[", 
       RowBox[{
       "\"\<\!\(\*SubscriptBox[\(p\), \(T\)]\) [GeV]\>\"", ",", "25", ",", 
        "Black"}], "]"}], ",", 
      RowBox[{"Style", "[", 
       RowBox[{
       "\"\<\!\(\*SubscriptBox[\(n\), \
\(\[Psi]'\)]\)/\!\(\*SubscriptBox[\(n\), \(J/\[Psi]\)]\)\>\"", ",", "25", ",",
         "Black"}], "]"}]}], "}"}]}], ",", 
   RowBox[{"AxesStyle", "\[Rule]", 
    RowBox[{"Directive", "[", 
     RowBox[{
      RowBox[{"FontSize", "\[Rule]", "15"}], ",", 
      RowBox[{"Thickness", "\[Rule]", "0.004"}], ",", 
      RowBox[{"FontFamily", "\[Rule]", "\"\<Helvetica\>\""}], ",", "Black"}], 
     "]"}]}], ",", 
   RowBox[{"BaseStyle", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"FontSize", "\[Rule]", "14"}], "}"}]}], ",", 
   RowBox[{"AspectRatio", "\[Rule]", "0.85"}], ",", 
   RowBox[{"PlotStyle", "\[Rule]", 
    RowBox[{"PointSize", "[", "0.03", "]"}]}]}], "]"}]], "Input",
 CellChangeTimes->{{3.75874132289205*^9, 3.758741357550829*^9}, {
  3.7589683191046553`*^9, 3.758968385020372*^9}, {3.7589684154634333`*^9, 
  3.758968453512471*^9}, {3.763564744541711*^9, 3.763564763779591*^9}, {
  3.763566336900011*^9, 3.76356633987851*^9}}],

Cell[BoxData[
 GraphicsBox[{{}, {{}, 
    {RGBColor[0.368417, 0.506779, 0.709798], PointSize[0.03], 
     AbsoluteThickness[1.6], 
     StyleBox[
      PointBox[{{0., 0.03208818278477162}, {2., 0.0320055116562302}, {5., 
       0.03226279214299149}, {10., 0.035252053835958745`}, {15., 
       0.03701305825858704}, {20., 0.03815249596580111}, {25., 
       0.038575612391774525`}}],
      FontSize->14]}, {}}, {}, {}, {{}, {}}},
  AspectRatio->0.85,
  Axes->{True, True},
  AxesLabel->{
    FormBox[
     StyleBox["\"\\!\\(\\*SubscriptBox[\\(p\\), \\(T\\)]\\) [GeV]\"", 25, 
      GrayLevel[0], StripOnInput -> False], TraditionalForm], 
    FormBox[
     StyleBox[
     "\"\\!\\(\\*SubscriptBox[\\(n\\), \
\\(\[Psi]'\\)]\\)/\\!\\(\\*SubscriptBox[\\(n\\), \\(J/\[Psi]\\)]\\)\"", 25, 
      GrayLevel[0], StripOnInput -> False], TraditionalForm]},
  AxesOrigin->{0, 0.03167700661945299},
  AxesStyle->Directive[
   FontSize -> 15, Thickness -> 0.004, FontFamily -> "Helvetica", 
    GrayLevel[0]],
  BaseStyle->{FontSize -> 14},
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  ImagePadding->All,
  ImageSize->{671.99609375, Automatic},
  Method->{"CoordinatesToolOptions" -> {"DisplayFunction" -> ({
        (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
         Part[#, 1]], 
        (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
         Part[#, 2]]}& ), "CopiedValueFunction" -> ({
        (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
         Part[#, 1]], 
        (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
         Part[#, 2]]}& )}},
  PlotRange->{{0, 25.}, {0.0320055116562302, 0.038575612391774525`}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.05], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{
  3.758741358288892*^9, 3.758968276225131*^9, {3.758968337076189*^9, 
   3.758968361149523*^9}, {3.758968419759016*^9, 3.7589684540243177`*^9}, 
   3.7635638696840887`*^9, 3.76356400008611*^9, 3.763564765084526*^9, 
   3.7635647973088827`*^9, 3.763564845545369*^9, 3.763564893060156*^9, 
   3.7635654455415363`*^9, 3.7635656943352003`*^9, 3.763565833870844*^9, 
   3.763565909864524*^9, 3.763566051064183*^9, {3.76356626479235*^9, 
   3.7635662845571136`*^9}, 3.7635663521754417`*^9, {3.763566645023452*^9, 
   3.763566652979542*^9}, 3.763567370811833*^9}]
}, Open  ]]
}, Open  ]]
}, Open  ]]
},
WindowSize->{1280, 755},
WindowMargins->{{0, Automatic}, {Automatic, 0}},
FrontEndVersion->"11.0 for Mac OS X x86 (32-bit, 64-bit Kernel) (September \
21, 2016)",
StyleDefinitions->"Default.nb"
]
(* End of Notebook Content *)

(* Internal cache information *)
(*CellTagsOutline
CellTagsIndex->{}
*)
(*CellTagsIndex
CellTagsIndex->{}
*)
(*NotebookFileOutline
Notebook[{
Cell[558, 20, 240, 5, 32, "Input"],
Cell[CellGroupData[{
Cell[823, 29, 207, 3, 64, "Section"],
Cell[1033, 34, 17342, 501, 983, "Input"]
}, Closed]],
Cell[CellGroupData[{
Cell[18412, 540, 267, 4, 50, "Section"],
Cell[18682, 546, 2009, 60, 327, "Input"],
Cell[20694, 608, 1712, 44, 77, "Input"],
Cell[CellGroupData[{
Cell[22431, 656, 354, 8, 32, "Input"],
Cell[22788, 666, 3869, 107, 79, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[26694, 778, 101, 1, 44, "Subsection"],
Cell[26798, 781, 2736, 81, 195, "Input"],
Cell[29537, 864, 5589, 131, 204, "Input"]
}, Closed]],
Cell[CellGroupData[{
Cell[35163, 1000, 175, 2, 36, "Subsection"],
Cell[CellGroupData[{
Cell[35363, 1006, 101, 1, 34, "Subsubsection"],
Cell[35467, 1009, 1680, 44, 95, "Input"],
Cell[37150, 1055, 5664, 147, 332, "Input"]
}, Open  ]],
Cell[CellGroupData[{
Cell[42851, 1207, 156, 2, 34, "Subsubsection"],
Cell[43010, 1211, 11363, 260, 527, "Input"],
Cell[CellGroupData[{
Cell[54398, 1475, 1373, 36, 50, "Input"],
Cell[55774, 1513, 1385, 30, 70, "Output"]
}, Open  ]],
Cell[57174, 1546, 2167, 55, 157, "Input"]
}, Open  ]]
}, Closed]],
Cell[CellGroupData[{
Cell[59390, 1607, 139, 2, 36, "Subsection"],
Cell[59532, 1611, 5575, 114, 210, "Input"],
Cell[65110, 1727, 6146, 128, 245, "Input"]
}, Closed]],
Cell[CellGroupData[{
Cell[71293, 1860, 210, 3, 36, "Subsection"],
Cell[CellGroupData[{
Cell[71528, 1867, 739, 18, 32, "Input"],
Cell[72270, 1887, 173, 2, 32, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[72480, 1894, 1007, 25, 54, "Input"],
Cell[73490, 1921, 150, 3, 32, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[73677, 1929, 2536, 62, 144, "Input"],
Cell[76216, 1993, 175, 4, 32, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[76428, 2002, 2090, 51, 75, "Input"],
Cell[78521, 2055, 151, 3, 32, "Output"]
}, Open  ]]
}, Closed]],
Cell[CellGroupData[{
Cell[78721, 2064, 260, 3, 36, "Subsection"],
Cell[78984, 2069, 9258, 223, 490, "Input"]
}, Closed]]
}, Open  ]],
Cell[CellGroupData[{
Cell[88291, 2298, 166, 2, 64, "Section"],
Cell[CellGroupData[{
Cell[88482, 2304, 98, 1, 43, "Subsection"],
Cell[88583, 2307, 2239, 44, 72, "Input"],
Cell[90825, 2353, 2191, 44, 72, "Input"],
Cell[93019, 2399, 2239, 44, 72, "Input"],
Cell[95261, 2445, 2232, 44, 72, "Input"],
Cell[CellGroupData[{
Cell[97518, 2493, 354, 10, 48, "Input"],
Cell[97875, 2505, 4673, 90, 234, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[102585, 2600, 402, 11, 48, "Input"],
Cell[102990, 2613, 591, 11, 23, "Message"],
Cell[103584, 2626, 587, 11, 23, "Message"],
Cell[104174, 2639, 591, 11, 23, "Message"],
Cell[104768, 2652, 585, 11, 23, "Message"],
Cell[105356, 2665, 589, 11, 23, "Message"],
Cell[105948, 2678, 341, 7, 23, "Message"],
Cell[106292, 2687, 585, 11, 23, "Message"],
Cell[106880, 2700, 346, 7, 23, "Message"],
Cell[107229, 2709, 1457, 37, 237, "Output"]
}, Open  ]],
Cell[108701, 2749, 246, 6, 54, "Input"],
Cell[108950, 2757, 412, 9, 73, "Input"],
Cell[109365, 2768, 136, 3, 31, "Input"],
Cell[109504, 2773, 14097, 281, 458, "Input"],
Cell[123604, 3056, 135, 2, 31, "Input"]
}, Closed]],
Cell[CellGroupData[{
Cell[123776, 3063, 244, 3, 35, "Subsection"],
Cell[CellGroupData[{
Cell[124045, 3070, 96, 1, 34, "Subsubsection"],
Cell[124144, 3073, 6607, 164, 369, "Input"],
Cell[130754, 3239, 246, 6, 54, "Input"],
Cell[131003, 3247, 412, 9, 73, "Input"],
Cell[131418, 3258, 14405, 289, 442, "Input"]
}, Closed]],
Cell[CellGroupData[{
Cell[145860, 3552, 96, 1, 28, "Subsubsection"],
Cell[145959, 3555, 450, 11, 72, "Input"],
Cell[146412, 3568, 497, 11, 72, "Input"]
}, Open  ]]
}, Open  ]]
}, Closed]],
Cell[CellGroupData[{
Cell[146970, 3586, 190, 3, 50, "Section"],
Cell[CellGroupData[{
Cell[147185, 3593, 152, 2, 44, "Subsection"],
Cell[147340, 3597, 58859, 1466, 2509, "Input"]
}, Open  ]],
Cell[CellGroupData[{
Cell[206236, 5068, 152, 2, 44, "Subsection"],
Cell[206391, 5072, 601, 13, 96, "Input"],
Cell[CellGroupData[{
Cell[207017, 5089, 259, 6, 32, "Input"],
Cell[207279, 5097, 635, 12, 32, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[207951, 5114, 479, 14, 32, "Input"],
Cell[208433, 5130, 302, 7, 32, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[208772, 5142, 517, 14, 32, "Input"],
Cell[209292, 5158, 252, 5, 32, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[209581, 5168, 487, 14, 32, "Input"],
Cell[210071, 5184, 249, 5, 32, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[210357, 5194, 504, 14, 32, "Input"],
Cell[210864, 5210, 250, 5, 32, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[211151, 5220, 486, 14, 32, "Input"],
Cell[211640, 5236, 247, 5, 32, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[211924, 5246, 488, 14, 32, "Input"],
Cell[212415, 5262, 279, 6, 32, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[212731, 5273, 1086, 32, 81, "Input"],
Cell[213820, 5307, 248, 5, 32, "Output"]
}, Open  ]],
Cell[214083, 5315, 2415, 59, 264, "Input"],
Cell[216501, 5376, 2342, 58, 264, "Input"],
Cell[218846, 5436, 2344, 58, 264, "Input"],
Cell[221193, 5496, 2396, 59, 264, "Input"],
Cell[223592, 5557, 2398, 59, 264, "Input"],
Cell[225993, 5618, 2396, 59, 264, "Input"]
}, Open  ]],
Cell[CellGroupData[{
Cell[228426, 5682, 157, 2, 44, "Subsection"],
Cell[228586, 5686, 592, 15, 31, "Input"],
Cell[CellGroupData[{
Cell[229203, 5705, 3451, 87, 132, "Input"],
Cell[232657, 5794, 210224, 3463, 234, "Output"]
}, Open  ]]
}, Closed]],
Cell[CellGroupData[{
Cell[442930, 9263, 113, 1, 36, "Subsection"],
Cell[443046, 9266, 354, 8, 32, "Input"],
Cell[443403, 9276, 700, 17, 159, "Input"],
Cell[444106, 9295, 3221, 103, 159, "Input"],
Cell[447330, 9400, 6111, 199, 159, "Input"]
}, Open  ]],
Cell[CellGroupData[{
Cell[453478, 9604, 252, 3, 44, "Subsection"],
Cell[453733, 9609, 437, 13, 54, "Input"],
Cell[454173, 9624, 2498, 70, 186, "Input"],
Cell[456674, 9696, 3413, 78, 75, "Input"],
Cell[460090, 9776, 2236, 62, 96, "Input"],
Cell[CellGroupData[{
Cell[462351, 9842, 606, 19, 32, "Input"],
Cell[462960, 9863, 236, 4, 32, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[463233, 9872, 1106, 18, 32, "Input"],
Cell[464342, 9892, 2834, 58, 240, "Output"]
}, Open  ]],
Cell[467191, 9953, 1169, 30, 54, "Input"],
Cell[CellGroupData[{
Cell[468385, 9987, 388, 8, 32, "Input"],
Cell[468776, 9997, 22107, 375, 231, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[490920, 10377, 377, 10, 50, "Input"],
Cell[491300, 10389, 263, 4, 32, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[491600, 10398, 372, 8, 32, "Input"],
Cell[491975, 10408, 2608, 55, 240, "Output"]
}, Open  ]],
Cell[494598, 10466, 1282, 31, 32, "Input"],
Cell[CellGroupData[{
Cell[495905, 10501, 291, 7, 32, "Input"],
Cell[496199, 10510, 19277, 330, 227, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[515513, 10845, 328, 9, 50, "Input"],
Cell[515844, 10856, 253, 3, 32, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[516134, 10864, 221, 6, 32, "Input"],
Cell[516358, 10872, 2477, 53, 241, "Output"]
}, Open  ]],
Cell[518850, 10928, 587, 17, 54, "Input"],
Cell[CellGroupData[{
Cell[519462, 10949, 290, 7, 32, "Input"],
Cell[519755, 10958, 25461, 431, 232, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[545253, 11394, 326, 9, 50, "Input"],
Cell[545582, 11405, 138, 2, 32, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[545757, 11412, 221, 6, 32, "Input"],
Cell[545981, 11420, 2519, 54, 240, "Output"]
}, Open  ]],
Cell[548515, 11477, 756, 21, 54, "Input"],
Cell[CellGroupData[{
Cell[549296, 11502, 435, 9, 32, "Input"],
Cell[549734, 11513, 21366, 365, 231, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[571137, 11883, 326, 9, 50, "Input"],
Cell[571466, 11894, 140, 2, 32, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[571643, 11901, 223, 6, 32, "Input"],
Cell[571869, 11909, 2468, 53, 240, "Output"]
}, Open  ]],
Cell[574352, 11965, 1169, 36, 54, "Input"],
Cell[CellGroupData[{
Cell[575546, 12005, 267, 7, 32, "Input"],
Cell[575816, 12014, 18146, 312, 231, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[593999, 12331, 330, 9, 50, "Input"],
Cell[594332, 12342, 400, 8, 24, "Message"],
Cell[594735, 12352, 139, 2, 32, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[594911, 12359, 223, 6, 32, "Input"],
Cell[595137, 12367, 2473, 53, 240, "Output"]
}, Open  ]],
Cell[597625, 12423, 552, 16, 54, "Input"],
Cell[CellGroupData[{
Cell[598202, 12443, 343, 8, 32, "Input"],
Cell[598548, 12453, 27493, 464, 231, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[626078, 12922, 381, 10, 50, "Input"],
Cell[626462, 12934, 187, 2, 32, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[626686, 12941, 1628, 41, 79, "Input"],
Cell[628317, 12984, 2660, 60, 521, "Output"]
}, Open  ]]
}, Open  ]]
}, Open  ]]
}
]
*)

