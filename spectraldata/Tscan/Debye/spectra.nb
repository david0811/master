(* Content-type: application/vnd.wolfram.mathematica *)

(*** Wolfram Notebook File ***)
(* http://www.wolfram.com/nb *)

(* CreatedBy='Mathematica 11.0' *)

(*CacheID: 234*)
(* Internal cache information:
NotebookFileLineBreakTest
NotebookFileLineBreakTest
NotebookDataPosition[       158,          7]
NotebookDataLength[    638082,      13371]
NotebookOptionsPosition[    632190,      13181]
NotebookOutlinePosition[    632522,      13196]
CellTagsIndexPosition[    632479,      13193]
WindowFrame->Normal*)

(* Beginning of Notebook Content *)
Notebook[{
Cell[BoxData[
 RowBox[{
  RowBox[{"SetDirectory", "[", 
   RowBox[{"NotebookDirectory", "[", "]"}], "]"}], ";"}]], "Input",
 CellChangeTimes->{{3.726830841029643*^9, 3.7268308412828083`*^9}, {
  3.7422157674558773`*^9, 3.742215769884161*^9}, {3.742217260745666*^9, 
  3.74221726600983*^9}, {3.745325859439938*^9, 3.74532586674417*^9}, {
  3.7477189468982477`*^9, 3.7477189517220097`*^9}, {3.748193660548594*^9, 
  3.748193661754385*^9}}],

Cell[CellGroupData[{

Cell["4 loop running coupling", "Section",
 CellChangeTimes->{{3.733038025331724*^9, 3.733038035264956*^9}, {
  3.7330493983743973`*^9, 3.733049402685856*^9}, {3.73312956042422*^9, 
  3.733129594184086*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", " ", 
   RowBox[{
    RowBox[{
     RowBox[{"form", " ", "hep"}], "-", 
     RowBox[{"ph", " ", "9703284"}]}], ",", " ", "vermaseren", ",", " ", 
    "larin", ",", " ", "Ritbergen"}], " ", "*)"}], "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{"\[CapitalLambda]QCD", "=", "0.2145"}], ";"}], " ", 
   "\[IndentingNewLine]", 
   RowBox[{"(*", " ", 
    RowBox[{
     RowBox[{"so", " ", "that", " ", "for", " ", "nF"}], "=", 
     RowBox[{
      RowBox[{"5", " ", "we", " ", "get", " ", "alpha_s", 
       RowBox[{"(", 
        RowBox[{"mz", "=", "91.188"}], ")"}]}], "=", 
      RowBox[{
       RowBox[{"0.1185", " ", 
        RowBox[{"(", 
         RowBox[{"PDG", " ", "value"}], ")"}], " ", "\[IndentingNewLine]", 
        "note", " ", "that", " ", "pdg", " ", "also", " ", "quotes", " ", 
        "\[Lambda]qcd"}], "=", 
       RowBox[{
        RowBox[{"0.214", " ", "for", " ", "nf"}], "=", 
        RowBox[{
        "5", " ", "everything", " ", "seems", " ", "consistent"}]}]}]}]}], 
    "*)"}], "\[IndentingNewLine]", "\[IndentingNewLine]", 
   RowBox[{"(*", "QCD", "*)"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"Nc", "=", "3."}], ";", 
    RowBox[{"CA", "=", "Nc"}], ";", " ", 
    RowBox[{"nF", "=", "3"}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"CF", "=", 
     FractionBox[
      RowBox[{
       SuperscriptBox["Nc", "2"], "-", "1"}], 
      RowBox[{"2", " ", "Nc"}]]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{"(*", 
    RowBox[{
    "coeft", " ", "of", " ", "the", " ", "renormalization", " ", "group", " ",
      "equations"}], "*)"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"\[Beta]0", "[", "Nf_", "]"}], "=", 
     FractionBox[
      RowBox[{
       RowBox[{
        RowBox[{"-", "11"}], "Nc"}], "+", 
       RowBox[{"2", "Nf"}]}], "12"]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"\[Beta]1", "[", "Nf_", "]"}], "=", 
     FractionBox[
      RowBox[{
       RowBox[{
        RowBox[{"-", "68"}], 
        SuperscriptBox["Nc", "2"]}], "+", 
       RowBox[{"20", "Nc", " ", "Nf"}], "+", 
       RowBox[{"12", "CF", " ", "Nf"}]}], 
      RowBox[{"3", " ", "32"}]]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"\[Beta]2", "[", "Nf_", "]"}], "=", 
     RowBox[{"-", 
      FractionBox[
       RowBox[{"(", 
        RowBox[{"2857", "-", 
         RowBox[{
          FractionBox["5033", "9"], "Nf"}], "+", 
         RowBox[{
          FractionBox["325", "27"], " ", 
          SuperscriptBox["Nf", "2"]}]}], ")"}], "128"]}]}], ";"}], " ", 
   RowBox[{"(*", 
    RowBox[{
     RowBox[{"for", " ", "Nc"}], "=", 
     RowBox[{"3", " ", "only"}]}], "*)"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"\[Beta]3", "[", "Nf_", "]"}], "=", 
     RowBox[{
      FractionBox[
       RowBox[{"-", "1"}], "256"], 
      RowBox[{"(", 
       RowBox[{
        RowBox[{"(", 
         RowBox[{
          FractionBox["149753", "6"], "+", 
          RowBox[{"3564", " ", 
           RowBox[{"Zeta", "[", "3", "]"}]}]}], ")"}], "-", 
        RowBox[{
         RowBox[{"(", 
          RowBox[{
           FractionBox["1078361", "162"], "+", 
           RowBox[{
            FractionBox["6508", "27"], " ", 
            RowBox[{"Zeta", "[", "3", "]"}]}]}], ")"}], "Nf"}], "+", 
        RowBox[{
         RowBox[{"(", 
          RowBox[{
           FractionBox["50065", "162"], "+", 
           RowBox[{
            FractionBox["6472", "81"], 
            RowBox[{"Zeta", "[", "3", "]"}]}]}], ")"}], 
         SuperscriptBox["Nf", "2"]}], "+", 
        RowBox[{
         FractionBox["1093", "729"], " ", 
         SuperscriptBox["Nf", "3"]}]}], ")"}]}]}], ";"}], 
   RowBox[{"(*", 
    RowBox[{
     RowBox[{"for", " ", "Nc"}], "=", 
     RowBox[{"3", " ", "only"}]}], "*)"}], "\[IndentingNewLine]", 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"\[Gamma]0", "[", "Nf_", "]"}], "=", 
     RowBox[{
      FractionBox["3", "4"], " ", "CF"}]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"\[Gamma]1", "[", "Nf_", "]"}], "=", 
     RowBox[{
      FractionBox["1", "16"], 
      RowBox[{"(", 
       RowBox[{
        FractionBox["202", "3"], "-", 
        RowBox[{
         FractionBox["20", "9"], "Nf"}]}], ")"}]}]}], ";"}], 
   RowBox[{"(*", 
    RowBox[{
     RowBox[{"for", " ", "Nc"}], "=", 
     RowBox[{"3", " ", "only"}]}], "*)"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"\[Gamma]2", "[", "Nf_", "]"}], "=", 
     RowBox[{
      FractionBox["1", "64"], 
      RowBox[{"(", 
       RowBox[{"1249", "+", 
        RowBox[{
         RowBox[{"(", 
          RowBox[{
           RowBox[{"-", 
            FractionBox["2216", "27"]}], "-", 
           RowBox[{
            FractionBox["160", "3"], " ", 
            RowBox[{"Zeta", "[", "3", "]"}]}]}], ")"}], "Nf"}], "-", 
        RowBox[{
         FractionBox["140", "81"], " ", 
         SuperscriptBox["Nf", "2"]}]}], ")"}]}]}], ";"}], 
   RowBox[{"(*", 
    RowBox[{
     RowBox[{"for", " ", "Nc"}], "=", 
     RowBox[{"3", " ", "only"}]}], "*)"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"\[Gamma]3", "[", "Nf_", "]"}], "=", 
     RowBox[{
      FractionBox["1", "256"], 
      RowBox[{"(", 
       RowBox[{
        FractionBox["4603055", "162"], "+", 
        RowBox[{
         FractionBox["135680", "27"], " ", 
         RowBox[{"Zeta", "[", "3", "]"}]}], "-", 
        RowBox[{"8800", 
         RowBox[{"Zeta", "[", "5", "]"}]}], "+", 
        RowBox[{
         RowBox[{"(", 
          RowBox[{
           RowBox[{"-", 
            FractionBox["91723", "27"]}], "-", 
           RowBox[{
            FractionBox["34192", "9"], " ", 
            RowBox[{"Zeta", "[", "3", "]"}]}], "+", 
           RowBox[{"880", " ", 
            RowBox[{"Zeta", "[", "4", "]"}]}], "+", 
           RowBox[{
            FractionBox["18400", "9"], 
            RowBox[{"Zeta", "[", "5", "]"}]}]}], ")"}], "Nf"}], "+", 
        RowBox[{
         RowBox[{"(", 
          RowBox[{
           FractionBox["5242", "243"], "+", 
           RowBox[{
            FractionBox["800", "9"], " ", 
            RowBox[{"Zeta", "[", "3", "]"}]}], "-", 
           RowBox[{
            FractionBox["160", "3"], 
            RowBox[{"Zeta", "[", "4", "]"}]}]}], ")"}], 
         SuperscriptBox["Nf", "2"]}], "+", 
        RowBox[{
         RowBox[{"(", 
          RowBox[{
           RowBox[{"-", 
            FractionBox["332", "243"]}], "+", 
           RowBox[{
            FractionBox["64", "27"], " ", 
            RowBox[{"Zeta", "[", "3", "]"}]}]}], ")"}], 
         SuperscriptBox["Nf", "3"]}]}], ")"}]}]}], ";"}], 
   "\[IndentingNewLine]", "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"b0", "[", "Nf_", "]"}], "=", 
     RowBox[{"-", 
      FractionBox[
       RowBox[{"8", 
        RowBox[{"\[Beta]0", "[", "Nf", "]"}]}], 
       RowBox[{"2", 
        SuperscriptBox[
         RowBox[{"(", 
          RowBox[{"4", "\[Pi]"}], ")"}], "2"]}]]}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"b1", "[", "Nf_", "]"}], "=", 
     RowBox[{"-", 
      FractionBox[
       RowBox[{"32", " ", 
        RowBox[{"\[Beta]1", "[", "Nf", "]"}]}], 
       RowBox[{"2", 
        SuperscriptBox[
         RowBox[{"(", 
          RowBox[{"4", "\[Pi]"}], ")"}], "2"]}]]}]}], ";"}], 
   "\[IndentingNewLine]", "\[IndentingNewLine]", 
   RowBox[{"(*", " ", 
    RowBox[{
     RowBox[{
     "Initial", " ", "conditions", " ", "of", " ", "the", " ", "RG", " ", 
      "equations"}], ",", " ", 
     RowBox[{
     "\[Mu]", " ", "in", " ", "units", " ", "of", " ", 
      "\[CapitalLambda]_MSbar"}]}], " ", "*)"}], "\[IndentingNewLine]", 
   "\[IndentingNewLine]", 
   RowBox[{"(*", 
    RowBox[{
     RowBox[{
      RowBox[{"gf", "[", "\[Mu]_", "]"}], "=", 
      RowBox[{"1", "/", 
       SqrtBox[
        RowBox[{
         RowBox[{"2", " ", "b0", " ", 
          RowBox[{"Log", "[", "\[Mu]", "]"}]}], "+", 
         RowBox[{"b1", " ", 
          RowBox[{
           RowBox[{"Log", "[", 
            RowBox[{"2", " ", 
             RowBox[{"Log", "[", "\[Mu]", "]"}]}], "]"}], "/", 
           "b0"}]}]}]]}]}], ";"}], "*)"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"gf", "[", "t_", "]"}], "=", 
     FractionBox["1", 
      SqrtBox[
       RowBox[{
        RowBox[{
         RowBox[{"b0", "[", "Nf", "]"}], " ", "t"}], "+", 
        RowBox[{
         RowBox[{"b1", "[", "Nf", "]"}], " ", 
         RowBox[{
          RowBox[{"Log", "[", "t", "]"}], "/", 
          RowBox[{"b0", "[", "Nf", "]"}]}]}]}]]]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"asf", "[", 
      RowBox[{"t_", ",", "Nf_"}], "]"}], "=", 
     RowBox[{
      FractionBox[
       RowBox[{"-", "1"}], 
       RowBox[{
        RowBox[{"\[Beta]0", "[", "Nf", "]"}], " ", "t"}]], "-", 
      FractionBox[
       RowBox[{
        RowBox[{"\[Beta]1", "[", "Nf", "]"}], " ", 
        RowBox[{"Log", "[", "t", "]"}]}], 
       RowBox[{
        SuperscriptBox[
         RowBox[{"\[Beta]0", "[", "Nf", "]"}], "3"], " ", 
        SuperscriptBox["t", "2"]}]], "-", 
      FractionBox[
       RowBox[{" ", 
        RowBox[{
         RowBox[{
          SuperscriptBox[
           RowBox[{"\[Beta]1", "[", "Nf", "]"}], "2"], 
          RowBox[{"(", 
           RowBox[{
            SuperscriptBox[
             RowBox[{"Log", "[", "t", "]"}], "2"], "-", 
            RowBox[{"Log", "[", "t", "]"}], "-", "1"}], ")"}]}], "+", 
         RowBox[{
          RowBox[{"\[Beta]2", "[", "Nf", "]"}], " ", 
          RowBox[{"\[Beta]0", "[", "Nf", "]"}]}]}]}], 
       RowBox[{
        SuperscriptBox[
         RowBox[{"\[Beta]0", "[", "Nf", "]"}], "5"], 
        SuperscriptBox["t", "3"]}]], "+", 
      RowBox[{
       FractionBox["1", 
        RowBox[{
         SuperscriptBox[
          RowBox[{"\[Beta]0", "[", "Nf", "]"}], "7"], 
         SuperscriptBox["t", "4"]}]], 
       RowBox[{"(", " ", 
        RowBox[{
         RowBox[{
          SuperscriptBox[
           RowBox[{"\[Beta]1", "[", "Nf", "]"}], "3"], 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"-", 
             SuperscriptBox[
              RowBox[{"Log", "[", "t", "]"}], "3"]}], "+", 
            RowBox[{
             FractionBox["5", "2"], 
             SuperscriptBox[
              RowBox[{"Log", "[", "t", "]"}], "2"]}], "+", 
            RowBox[{"2", 
             RowBox[{"Log", "[", "t", "]"}]}], "-", 
            FractionBox["1", "2"]}], ")"}]}], "-", 
         RowBox[{"3", " ", 
          RowBox[{"\[Beta]1", "[", "Nf", "]"}], " ", 
          RowBox[{"\[Beta]2", "[", "Nf", "]"}], " ", 
          RowBox[{"\[Beta]0", "[", "Nf", "]"}], " ", 
          RowBox[{"Log", "[", "t", "]"}]}], "+", 
         RowBox[{
          FractionBox["1", "2"], 
          RowBox[{"\[Beta]3", "[", "Nf", "]"}], " ", 
          SuperscriptBox[
           RowBox[{"\[Beta]0", "[", "Nf", "]"}], "2"]}]}], ")"}]}]}]}], ";"}],
    "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"\[Mu]0", "=", "2"}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"t0", "=", 
     RowBox[{"Log", "[", 
      SuperscriptBox["\[Mu]0", "2"], "]"}]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"tf", "=", 
     RowBox[{"10000", " ", "t0"}]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{"(*", 
    RowBox[{
    "solution", " ", "of", " ", "the", " ", "RG", " ", "equation", " ", "to", 
     " ", "3", " ", "loop"}], "*)"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"mcharm", "=", "1.275"}], ";"}], 
   RowBox[{"(*", 
    RowBox[{"m", 
     RowBox[{"(", "m", ")"}], " ", "in", " ", "msbar"}], "*)"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"mbottom", "=", "4.18"}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"nf", "[", "t_", "]"}], "=", 
     RowBox[{"If", "[", 
      RowBox[{
       RowBox[{"t", "<", 
        RowBox[{"Log", "[", 
         FractionBox[
          SuperscriptBox["mcharm", "2"], 
          SuperscriptBox["\[CapitalLambda]QCD", "2"]], "]"}]}], ",", "3", ",", 
       RowBox[{"If", "[", 
        RowBox[{
         RowBox[{"t", "<", 
          RowBox[{"Log", "[", 
           FractionBox[
            SuperscriptBox["mbottom", "2"], 
            SuperscriptBox["\[CapitalLambda]QCD", "2"]], "]"}]}], ",", "4", 
         ",", "5"}], "]"}]}], "]"}]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"sg4", "=", 
     RowBox[{"Quiet", "[", 
      RowBox[{"NDSolve", "[", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{
          RowBox[{
           RowBox[{"D", "[", 
            RowBox[{
             RowBox[{"as", "[", "t", "]"}], ",", "t"}], "]"}], "\[Equal]", 
           RowBox[{
            RowBox[{
             RowBox[{"+", 
              RowBox[{"\[Beta]0", "[", 
               RowBox[{"nf", "[", "t", "]"}], "]"}]}], " ", 
             SuperscriptBox[
              RowBox[{"as", "[", "t", "]"}], "2"]}], "+", 
            RowBox[{
             RowBox[{"\[Beta]1", "[", 
              RowBox[{"nf", "[", "t", "]"}], "]"}], " ", 
             SuperscriptBox[
              RowBox[{"as", "[", "t", "]"}], "3"]}], "+", " ", 
            RowBox[{
             RowBox[{"\[Beta]2", "[", 
              RowBox[{"nf", "[", "t", "]"}], "]"}], " ", 
             SuperscriptBox[
              RowBox[{"as", "[", "t", "]"}], "4"]}], "+", " ", 
            RowBox[{
             RowBox[{"\[Beta]3", "[", 
              RowBox[{"nf", "[", "t", "]"}], "]"}], " ", 
             SuperscriptBox[
              RowBox[{"as", "[", "t", "]"}], "5"]}]}]}], ",", 
          RowBox[{
           RowBox[{"as", "[", "tf", "]"}], "\[Equal]", 
           RowBox[{"asf", "[", 
            RowBox[{"tf", ",", 
             RowBox[{"nf", "[", "tf", "]"}]}], "]"}]}]}], "}"}], ",", "as", 
        ",", 
        RowBox[{"{", 
         RowBox[{"t", ",", "t0", ",", "tf"}], "}"}], ",", 
        RowBox[{"AccuracyGoal", "\[Rule]", "14"}], ",", 
        RowBox[{"WorkingPrecision", "\[Rule]", "32"}], ",", 
        RowBox[{"MaxSteps", "\[Rule]", "10000000"}]}], "]"}], "]"}]}], ";"}], 
   "\[IndentingNewLine]", "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"a4t", "[", "t_", "]"}], "=", " ", 
     RowBox[{"Part", "[", 
      RowBox[{
       RowBox[{"Evaluate", "[", 
        RowBox[{
         RowBox[{"as", "[", "t", "]"}], "/.", "sg4"}], "]"}], ",", "1"}], 
      "]"}]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"g4", "[", "\[Mu]_", "]"}], "=", 
     RowBox[{"2", " ", "\[Pi]", " ", 
      SqrtBox[
       RowBox[{"Part", "[", 
        RowBox[{
         RowBox[{"Evaluate", "[", 
          RowBox[{
           RowBox[{"as", "[", 
            RowBox[{"Log", "[", 
             FractionBox[
              SuperscriptBox["\[Mu]", "2"], 
              SuperscriptBox["\[CapitalLambda]QCD", "2"]], "]"}], "]"}], "/.",
            "sg4"}], "]"}], ",", "1"}], "]"}]]}]}], ";"}]}]}]], "Input",
 CellChangeTimes->{{3.722603722510141*^9, 3.72260372344028*^9}, {
   3.722604106111541*^9, 3.722604106838868*^9}, {3.722758514249189*^9, 
   3.72275851575694*^9}, {3.722759338268147*^9, 3.7227593794887047`*^9}, 
   3.722941350741787*^9, 3.725272685733177*^9, {3.7257977704878893`*^9, 
   3.725797773117529*^9}, {3.728106253645876*^9, 3.728106267238208*^9}, {
   3.728106981843108*^9, 3.72810698836581*^9}, {3.728107035483563*^9, 
   3.728107083980345*^9}, {3.728107191150432*^9, 3.7281072205275097`*^9}, {
   3.7289260533327723`*^9, 3.728926057125319*^9}, {3.728926987957735*^9, 
   3.728927012966138*^9}, {3.733038068527727*^9, 3.733038137498209*^9}, {
   3.733038320612577*^9, 3.7330383210148697`*^9}, {3.7330540354197693`*^9, 
   3.7330540356914186`*^9}, {3.733129571506283*^9, 3.73312957588968*^9}, {
   3.7422918081618557`*^9, 3.742291816377472*^9}, {3.742300291771085*^9, 
   3.742300292679388*^9}}]
}, Closed]],

Cell[CellGroupData[{

Cell["Generate Spectral Functions", "Section",
 CellChangeTimes->{{3.721037028308626*^9, 3.72103703898452*^9}, {
  3.725797990517199*^9, 3.725797994993998*^9}}],

Cell[BoxData[{
 RowBox[{
  RowBox[{"R", "=", "20000"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Mc", "=", "1.4691897661033038`"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Mb", "=", "4.882"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"kfinal", "=", 
    RowBox[{"{", 
     RowBox[{"0.6856700331366409`", ",", 
      RowBox[{"-", "0.31661256911352553`"}]}], "}"}]}], ";"}], 
  RowBox[{"(*", 
   RowBox[{"100", "k", " ", "run"}], "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"kfinalu", "=", 
   RowBox[{"{", 
    RowBox[{"0.9065399936425322`", ",", 
     RowBox[{"-", "0.36858869824209667`"}]}], "}"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"kfinall", "=", 
   RowBox[{"{", 
    RowBox[{"0.4648000726307495`", ",", 
     RowBox[{"-", "0.2646364399849544`"}]}], "}"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"\[Alpha]cont", "=", 
    RowBox[{"{", 
     RowBox[{"0.5129548374487685`", ",", "0.002435119807500435`"}], "}"}]}], 
   ";"}], 
  RowBox[{"(*", 
   RowBox[{"10", "k", " ", "run"}], "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"\[Sigma]cont", "=", 
   RowBox[{"{", 
    RowBox[{"0.16999653850906107`", ",", "0.000838106749908169`"}], "}"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"ccont", "=", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"-", "0.1611740456186636`"}], ",", "0.002474788649682089`"}], 
    "}"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"conv", "=", "0.197327"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"ReVsbVac", "=", 
   RowBox[{"8", "/", "10"}]}], ";"}]}], "Input",
 CellChangeTimes->{{3.7422993784399157`*^9, 3.742299414675289*^9}, {
   3.7422995639032173`*^9, 3.742299568734294*^9}, {3.742300057817206*^9, 
   3.742300073064109*^9}, 3.745325935588238*^9, 3.7453259706451406`*^9, 
   3.7453260061502438`*^9, {3.7453261461583*^9, 3.745326156923254*^9}, {
   3.746440587352221*^9, 3.746440600159244*^9}, 3.7464409114150867`*^9, 
   3.74644466897504*^9, {3.747201796079535*^9, 3.7472018000794573`*^9}, {
   3.7477189622433243`*^9, 3.747718962498509*^9}, {3.747730496653521*^9, 
   3.747730499629366*^9}, 3.7478164036795177`*^9, {3.7478164359198914`*^9, 
   3.747816482005916*^9}}],

Cell[CellGroupData[{

Cell["Define required functions", "Subsection",
 CellChangeTimes->{{3.726381295754898*^9, 3.726381308641871*^9}}],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"ImVc1", "[", 
    RowBox[{"r_", ",", "mD_", ",", "\[Alpha]_", ",", "T_"}], "]"}], ":=", 
   RowBox[{"T", " ", "\[Alpha]", " ", 
    RowBox[{"(", 
     RowBox[{"1", "-", 
      RowBox[{
       FractionBox["1", "2"], " ", 
       SqrtBox["\[Pi]"], " ", 
       RowBox[{"MeijerG", "[", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{
           RowBox[{"{", "0", "}"}], ",", 
           RowBox[{"{", "}"}]}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{"0", ",", "1"}], "}"}], ",", 
           RowBox[{"{", 
            RowBox[{"-", 
             FractionBox["1", "2"]}], "}"}]}], "}"}], ",", 
         FractionBox[
          RowBox[{
           SuperscriptBox["mD", "2"], " ", 
           SuperscriptBox["r", "2"]}], "4"]}], "]"}]}]}], ")"}]}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"ImVc", "[", 
    RowBox[{"r_", ",", "mD_", ",", "\[Alpha]_", ",", "T_"}], "]"}], ":=", 
   RowBox[{"T", " ", "\[Alpha]", " ", 
    RowBox[{"Quiet", "[", 
     RowBox[{"2", 
      RowBox[{"NIntegrate", "[", 
       RowBox[{
        RowBox[{
         FractionBox["z", 
          SuperscriptBox[
           RowBox[{"(", 
            RowBox[{
             SuperscriptBox["z", "2"], "+", "1"}], ")"}], "2"]], 
         RowBox[{"(", 
          RowBox[{"1", "-", 
           RowBox[{"Sinc", "[", 
            RowBox[{"mD", " ", "r", " ", "z"}], "]"}]}], ")"}]}], ",", 
        RowBox[{"{", 
         RowBox[{"z", ",", "0", ",", "\[Infinity]"}], "}"}]}], "]"}]}], 
     "]"}]}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"ReVo", "[", 
    RowBox[{"r_", ",", "m_", ",", "\[Alpha]_", ",", "\[Sigma]_", ",", "c_"}], 
    "]"}], ":=", 
   RowBox[{"c", "-", 
    RowBox[{"\[Alpha]", " ", "m"}], "-", 
    RowBox[{"\[Alpha]", 
     FractionBox[
      RowBox[{"Exp", "[", 
       RowBox[{
        RowBox[{"-", "m"}], " ", "r"}], "]"}], "r"]}], "+", 
    FractionBox[
     RowBox[{"2", " ", "\[Sigma]"}], "m"], "-", 
    FractionBox[
     RowBox[{
      SuperscriptBox["\[ExponentialE]", 
       RowBox[{
        RowBox[{"-", "m"}], " ", "r"}]], " ", 
      RowBox[{"(", 
       RowBox[{"2", "+", 
        RowBox[{"m", " ", "r"}]}], ")"}], " ", "\[Sigma]"}], "m"]}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"ReV", "[", 
    RowBox[{"r_", ",", "m_", ",", "\[Alpha]_", ",", "\[Sigma]_", ",", "c_"}], 
    "]"}], ":=", 
   RowBox[{
    RowBox[{
     RowBox[{"-", "\[Alpha]"}], " ", "m"}], "-", 
    RowBox[{"\[Alpha]", 
     FractionBox[
      RowBox[{"Exp", "[", 
       RowBox[{
        RowBox[{"-", "m"}], " ", "r"}], "]"}], "r"]}], "-", 
    RowBox[{
     FractionBox[
      RowBox[{"Gamma", "[", 
       FractionBox["1", "4"], "]"}], 
      RowBox[{
       SuperscriptBox["2", 
        RowBox[{"3", "/", "4"}]], 
       SqrtBox["\[Pi]"]}]], 
     FractionBox["\[Sigma]", 
      SuperscriptBox[
       RowBox[{"(", 
        RowBox[{
         SuperscriptBox["m", "2"], 
         FractionBox["\[Sigma]", "\[Alpha]"]}], ")"}], 
       RowBox[{"1", "/", "4"}]]], 
     RowBox[{"ParabolicCylinderD", "[", 
      RowBox[{
       FractionBox[
        RowBox[{"-", "1"}], "2"], ",", 
       RowBox[{
        SqrtBox["2"], 
        SuperscriptBox[
         RowBox[{"(", 
          RowBox[{
           SuperscriptBox["m", "2"], 
           FractionBox["\[Sigma]", "\[Alpha]"]}], ")"}], 
         RowBox[{"1", "/", "4"}]], " ", "r"}]}], "]"}]}], "+", 
    RowBox[{
     FractionBox[
      RowBox[{"Gamma", "[", 
       FractionBox["1", "4"], "]"}], 
      RowBox[{"2", 
       RowBox[{"Gamma", "[", 
        FractionBox["3", "4"], "]"}]}]], 
     FractionBox["\[Sigma]", 
      SuperscriptBox[
       RowBox[{"(", 
        RowBox[{
         SuperscriptBox["m", "2"], 
         FractionBox["\[Sigma]", "\[Alpha]"]}], ")"}], 
       RowBox[{"1", "/", "4"}]]]}], "+", "c"}]}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"ReVsb", "[", 
     RowBox[{"r_", ",", "m_", ",", "\[Alpha]_", ",", "\[Sigma]_", ",", "c_"}],
      "]"}], ":=", 
    RowBox[{"If", "[", 
     RowBox[{
      RowBox[{
       RowBox[{"ReV", "[", 
        RowBox[{"r", ",", "m", ",", "\[Alpha]", ",", "\[Sigma]", ",", "c"}], 
        "]"}], "<", "ReVsbVac"}], ",", 
      RowBox[{"ReV", "[", 
       RowBox[{"r", ",", "m", ",", "\[Alpha]", ",", "\[Sigma]", ",", "c"}], 
       "]"}], ",", "ReVsbVac"}], "]"}]}], ";"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"ReVm0", "[", 
   RowBox[{"r_", ",", "\[Alpha]_", ",", "\[Sigma]_", ",", "c_"}], "]"}], ":=", 
  RowBox[{
   FractionBox[
    RowBox[{"-", "\[Alpha]"}], "r"], "+", 
   RowBox[{"\[Sigma]", " ", "r"}], "+", "c"}]}]}], "Input",
 CellChangeTimes->{{3.726314830177012*^9, 3.726314831502235*^9}, {
   3.727440050934029*^9, 3.72744006900066*^9}, {3.727440105160881*^9, 
   3.72744018557771*^9}, 3.742215933829735*^9, {3.742216557912931*^9, 
   3.7422165749213457`*^9}, {3.743503313030858*^9, 3.743503313892556*^9}, {
   3.743503595861423*^9, 3.743503635413424*^9}, {3.74350366900007*^9, 
   3.7435036693702087`*^9}, {3.745326036206037*^9, 3.7453260766277523`*^9}, {
   3.746183271972321*^9, 3.746183298270718*^9}, {3.746273575042926*^9, 
   3.7462735813289633`*^9}, {3.746347837763917*^9, 3.7463478787882967`*^9}, {
   3.746347920493272*^9, 3.7463479222779093`*^9}, {3.747134104940626*^9, 
   3.7471341878458548`*^9}, {3.7471346485267143`*^9, 
   3.7471346789507227`*^9}, {3.747134718391016*^9, 3.747134747815597*^9}, {
   3.7477189739313173`*^9, 3.7477189972440577`*^9}, {3.747730488878406*^9, 
   3.747730493869747*^9}, {3.7478235453335457`*^9, 3.7478235457925797`*^9}, 
   3.748517239543355*^9, {3.7485175505143843`*^9, 3.748517552763184*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Block", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"l", "=", "1"}], "}"}], ",", 
   RowBox[{"Plot", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{"ReV", "[", 
        RowBox[{
         FractionBox["r", "0.197"], ",", 
         RowBox[{"mDcal", "[", 
          RowBox[{
           RowBox[{"2", "\[Pi]"}], ",", 
           RowBox[{"Tscancorig", "[", 
            RowBox[{"[", 
             RowBox[{"5", " ", "l"}], "]"}], "]"}], ",", 
           RowBox[{"kfinal", "[", 
            RowBox[{"[", "1", "]"}], "]"}], ",", 
           RowBox[{"kfinal", "[", 
            RowBox[{"[", "2", "]"}], "]"}]}], "]"}], ",", 
         RowBox[{"\[Alpha]cont", "[", 
          RowBox[{"[", "1", "]"}], "]"}], ",", 
         RowBox[{"\[Sigma]cont", "[", 
          RowBox[{"[", "1", "]"}], "]"}], ",", 
         RowBox[{"ccont", "[", 
          RowBox[{"[", "1", "]"}], "]"}]}], "]"}], ",", 
       RowBox[{"ReVo", "[", 
        RowBox[{
         FractionBox["r", "0.197"], ",", 
         RowBox[{"mDcal", "[", 
          RowBox[{
           RowBox[{"2", "\[Pi]"}], ",", 
           RowBox[{"Tscancorig", "[", 
            RowBox[{"[", 
             RowBox[{"5", " ", "l"}], "]"}], "]"}], ",", 
           RowBox[{"kfinal", "[", 
            RowBox[{"[", "1", "]"}], "]"}], ",", 
           RowBox[{"kfinal", "[", 
            RowBox[{"[", "2", "]"}], "]"}]}], "]"}], ",", 
         RowBox[{"\[Alpha]cont", "[", 
          RowBox[{"[", "1", "]"}], "]"}], ",", 
         RowBox[{"\[Sigma]cont", "[", 
          RowBox[{"[", "1", "]"}], "]"}], ",", 
         RowBox[{"ccont", "[", 
          RowBox[{"[", "1", "]"}], "]"}]}], "]"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"r", ",", "0", ",", "10"}], "}"}]}], "]"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.748517563230991*^9, 3.748517600474476*^9}}],

Cell[BoxData[
 GraphicsBox[{{{}, {}, 
    TagBox[
     {RGBColor[0.368417, 0.506779, 0.709798], AbsoluteThickness[1.6], Opacity[
      1.], LineBox[CompressedData["
1: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
mOvmUfS2BjaGLVTE8aT3olfnPOqJk8rQ0KKijyc9pH4NzSMb8o0wCx0qYu4K
u5rHuIAiOwdvuu2jorSOvG1eOgsoVN43ZNKSiobayK/pqQvoi6RL+sWrVHQ/
LtPaNHsBvXNOXS25QUU7rHaz5hUuIC2HmhrOICoKaz3mGNexgCo0Dln4R1CR
ckuolCnPIlLzOv+uKImK3BrHo79dXUSF/sHpKt+oSCD6KlIKW0TpEjapFQVU
lGfG9ic2dhFVzH3ktymiIs4fMiae77HLRgttK6noXb0Fq9LgIkrb2Oc30kpF
f2q+Xo09uoSW78f/2/GHiuIjDJWZ7JeQWjy/l84UFekdam6/5L6E2vllBLbO
UtGD6rFtJqFLKKVr936WZSrSqCL9YSxYQq6LR8jGrDTkVR7ieElpGWWvn1w2
l6Ah0oAR2/y2ZaSz+5XQf1I0VMu08W0ALCOjsWP1MyQa2gRRU3dPLCNRkDoT
IE9DnXlxt9LuLaPwtVOr+9VoaF/2f8mdk8vIY+hITb4uDf1pcNV3WF1Gry9t
afygR0NPJlSGhthXkOkl3pupQENzKu+3zMquoGxOMWEfAxp6k/6lgMdyBXWF
BFZ0mtAQ/5Oqrv1fV9Bih/lQ/gka+v4tIrCmbAWpfnlm62RLQ+4dpnLmTSvI
WpTRnu0UDZULN523H11BWV5b9JADDV2N7lz0l1pFs4mBTTfO0lDvnVGRrFur
yCYqk3GXNw198OQ6Jmb8D430ZU7Oh9JQXZLg1Uzrf6grQdEBwmloqEwiRd/5
H6Kk79oVepeGJMQ3j124+Q8N3ZOy3BBJQyHFhsHFn/+h7aVnLvZE05C1wM1P
bnJr6OCTl98XHtOQp25o5/rWNRS2XXSS6wkNRZyNWo/du4aeFKxsk3lKQ5S8
JyYUmzVUcSpIdk8yDSk7fe0XfLCGYsszYsxTaWj505Rg4coaKi1ximN4S0NC
9MVdFhvXEc/0+JExbHV2BoffIusop1f0TUsGDTnZ8bzj11pHbnbh9s8ycT4s
qgZnXdeRmkhiqvAHGkq2cvbhbVtH4Ul7+lO+0NCL6+6jGscZgOtzoLhxKQ1p
FG1cDDvFAO5Rmh0j2EUsr1l/OTGAqEmHzt0yGuqJGiBHeTKA5FO/0dJy3C/P
Tx0fucsAZe8MojZX0VBSmVnZiwIGWG3LIH+royGVjX+aFksYoNDLtNiwnoa+
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
HowuvnYh/H1GcWl9XR6CvR64Ev4fLt+xPA==
       "]]},
     Annotation[#, "Charting`Private`Tag$73873#1"]& ], 
    TagBox[
     {RGBColor[0.880722, 0.611041, 0.142051], AbsoluteThickness[1.6], Opacity[
      1.], LineBox[CompressedData["
1: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
gsLy798sEA1OCSnE/h/fpmsP
       "]]},
     Annotation[#, "Charting`Private`Tag$73873#2"]& ]}, {}, {}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{0, 0},
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  ImagePadding->All,
  Method->{
   "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
    AbsolutePointSize[6], "ScalingFunctions" -> None, 
    "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
        (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
         Part[#, 1]], 
        (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
         Part[#, 2]]}& ), "CopiedValueFunction" -> ({
        (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
         Part[#, 1]], 
        (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
         Part[#, 2]]}& )}},
  PlotRange->{{0, 10}, {-0.9355520096813876, 1.4139876687044692`}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.05], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{3.748517601365967*^9}]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"mDcal", "[", 
    RowBox[{"\[Mu]_", ",", "T_", ",", "c_", ",", "d_"}], "]"}], ":=", 
   RowBox[{"Re", "[", 
    RowBox[{
     RowBox[{
      RowBox[{"Sqrt", "[", 
       RowBox[{
        FractionBox["Nc", "3"], "+", 
        FractionBox["nF", "6"]}], "]"}], 
      RowBox[{"g4", "[", 
       RowBox[{"\[Mu]", " ", "T"}], "]"}], "T"}], "+", 
     RowBox[{
      FractionBox["1", 
       RowBox[{"4", "\[Pi]"}]], "Nc", " ", 
      SuperscriptBox[
       RowBox[{"g4", "[", 
        RowBox[{"\[Mu]", " ", "T"}], "]"}], "2"], " ", "T", " ", 
      RowBox[{"Log", "[", 
       FractionBox[
        RowBox[{"Sqrt", "[", 
         RowBox[{
          FractionBox["Nc", "3"], "+", 
          FractionBox["nF", "6"]}], "]"}], 
        RowBox[{"g4", "[", 
         RowBox[{"\[Mu]", " ", "T"}], "]"}]], "]"}]}], "+", 
     RowBox[{"c", " ", 
      SuperscriptBox[
       RowBox[{"g4", "[", 
        RowBox[{"\[Mu]", " ", "T"}], "]"}], "2"], " ", "T"}], "+", 
     RowBox[{"d", " ", 
      SuperscriptBox[
       RowBox[{"g4", "[", 
        RowBox[{"\[Mu]", " ", "T"}], "]"}], "3"], "T"}]}], " ", "]"}]}], 
  ";"}]], "Input",
 CellChangeTimes->{{3.7462695451654787`*^9, 3.7462695485249968`*^9}, {
  3.746331282218299*^9, 3.7463312827465057`*^9}, {3.7472018088943663`*^9, 
  3.747201809834467*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"rsbvac", "=", 
  RowBox[{"r", "/.", 
   RowBox[{"FindRoot", "[", 
    RowBox[{
     RowBox[{
      RowBox[{"ReVm0", "[", 
       RowBox[{"r", ",", 
        RowBox[{"\[Alpha]cont", "[", 
         RowBox[{"[", "1", "]"}], "]"}], ",", 
        RowBox[{"\[Sigma]cont", "[", 
         RowBox[{"[", "1", "]"}], "]"}], ",", 
        RowBox[{"ccont", "[", 
         RowBox[{"[", "1", "]"}], "]"}]}], "]"}], "\[Equal]", 
      RowBox[{"8", "/", "10"}]}], ",", 
     RowBox[{"{", 
      RowBox[{"r", ",", "1"}], "}"}]}], "]"}]}]}]], "Input",
 CellChangeTimes->{{3.747730526834091*^9, 3.747730596929489*^9}}],

Cell[BoxData["6.145111521103572`"], "Output",
 CellChangeTimes->{{3.7477305759946404`*^9, 3.747730597830406*^9}, {
   3.747816466965385*^9, 3.747816485357333*^9}, 3.747888367028269*^9, 
   3.747914825078952*^9, 3.747923122299087*^9, 3.747934037734612*^9, 
   3.747935730275463*^9, 3.7479802139688597`*^9, 3.74798030006225*^9, 
   3.748009670140809*^9, 3.748015952061844*^9, 3.7480785864698133`*^9, 
   3.748193669941556*^9, 3.748262165046179*^9, 3.748517318702887*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Tscancorig", "=", 
  RowBox[{"Join", "[", 
   RowBox[{
    RowBox[{"Table", "[", 
     RowBox[{"i", ",", 
      RowBox[{"{", 
       RowBox[{"i", ",", "0.15", ",", "0.16", ",", "0.001"}], "}"}]}], "]"}], 
    ",", 
    RowBox[{"Table", "[", 
     RowBox[{"i", ",", 
      RowBox[{"{", 
       RowBox[{"i", ",", "0.162", ",", "0.3", ",", "0.003"}], "}"}]}], 
     "]"}]}], "]"}]}]], "Input"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
  "0.15`", ",", "0.151`", ",", "0.152`", ",", "0.153`", ",", "0.154`", ",", 
   "0.155`", ",", "0.156`", ",", "0.157`", ",", "0.158`", ",", "0.159`", ",", 
   "0.16`", ",", "0.162`", ",", "0.165`", ",", "0.168`", ",", "0.171`", ",", 
   "0.17400000000000002`", ",", "0.177`", ",", "0.18`", ",", "0.183`", ",", 
   "0.186`", ",", "0.189`", ",", "0.192`", ",", "0.195`", ",", "0.198`", ",", 
   "0.201`", ",", "0.20400000000000001`", ",", "0.20700000000000002`", ",", 
   "0.21000000000000002`", ",", "0.21300000000000002`", ",", "0.216`", ",", 
   "0.219`", ",", "0.222`", ",", "0.225`", ",", "0.228`", ",", "0.231`", ",", 
   "0.234`", ",", "0.237`", ",", "0.24`", ",", "0.243`", ",", "0.246`", ",", 
   "0.249`", ",", "0.252`", ",", "0.255`", ",", "0.258`", ",", "0.261`", ",", 
   "0.264`", ",", "0.267`", ",", "0.27`", ",", "0.273`", ",", "0.276`", ",", 
   "0.279`", ",", "0.28200000000000003`", ",", "0.28500000000000003`", ",", 
   "0.28800000000000003`", ",", "0.29100000000000004`", ",", 
   "0.29400000000000004`", ",", "0.29700000000000004`", ",", 
   "0.30000000000000004`"}], "}"}]], "Output",
 CellChangeTimes->{3.748517353894793*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Tscanborig", "=", 
  RowBox[{"Table", "[", 
   RowBox[{"i", ",", 
    RowBox[{"{", 
     RowBox[{"i", ",", "0.15", ",", "0.6", ",", "0.005"}], "}"}]}], 
   "]"}]}]], "Input"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
  "0.15`", ",", "0.155`", ",", "0.16`", ",", "0.16499999999999998`", ",", 
   "0.16999999999999998`", ",", "0.175`", ",", "0.18`", ",", "0.185`", ",", 
   "0.19`", ",", "0.195`", ",", "0.2`", ",", "0.205`", ",", "0.21`", ",", 
   "0.215`", ",", "0.22`", ",", "0.22499999999999998`", ",", 
   "0.22999999999999998`", ",", "0.235`", ",", "0.24`", ",", "0.245`", ",", 
   "0.25`", ",", "0.255`", ",", "0.26`", ",", "0.265`", ",", "0.27`", ",", 
   "0.275`", ",", "0.28`", ",", "0.28500000000000003`", ",", 
   "0.29000000000000004`", ",", "0.295`", ",", "0.3`", ",", "0.305`", ",", 
   "0.31`", ",", "0.315`", ",", "0.32`", ",", "0.325`", ",", 
   "0.32999999999999996`", ",", "0.33499999999999996`", ",", 
   "0.33999999999999997`", ",", "0.345`", ",", "0.35`", ",", "0.355`", ",", 
   "0.36`", ",", "0.365`", ",", "0.37`", ",", "0.375`", ",", "0.38`", ",", 
   "0.385`", ",", "0.39`", ",", "0.395`", ",", "0.4`", ",", "0.405`", ",", 
   "0.41000000000000003`", ",", "0.41500000000000004`", ",", 
   "0.42000000000000004`", ",", "0.42500000000000004`", ",", 
   "0.43000000000000005`", ",", "0.43500000000000005`", ",", 
   "0.43999999999999995`", ",", "0.44499999999999995`", ",", 
   "0.44999999999999996`", ",", "0.45499999999999996`", ",", 
   "0.45999999999999996`", ",", "0.46499999999999997`", ",", "0.47`", ",", 
   "0.475`", ",", "0.48`", ",", "0.485`", ",", "0.49`", ",", "0.495`", ",", 
   "0.5`", ",", "0.505`", ",", "0.51`", ",", "0.515`", ",", "0.52`", ",", 
   "0.525`", ",", "0.53`", ",", "0.535`", ",", "0.54`", ",", "0.545`", ",", 
   "0.55`", ",", "0.555`", ",", "0.56`", ",", "0.5650000000000001`", ",", 
   "0.57`", ",", "0.575`", ",", "0.58`", ",", "0.585`", ",", "0.59`", ",", 
   "0.595`", ",", "0.6`"}], "}"}]], "Output",
 CellChangeTimes->{3.748517355514187*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell["Imaginary part", "Subsubsection",
 CellChangeTimes->{{3.748517291681675*^9, 3.7485172948825073`*^9}}],

Cell[BoxData[{
 RowBox[{
  RowBox[{"Clear", "[", 
   RowBox[{"ParabolicCylinderI", ",", "ParabolicCylinderR"}], "]"}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"ParabolicCylinderI", "[", "r_", "]"}], "=", 
   RowBox[{"If", "[", 
    RowBox[{
     RowBox[{"r", "<", "20"}], ",", 
     RowBox[{"ParabolicCylinderD", "[", 
      RowBox[{
       RowBox[{"-", 
        FractionBox["1", "2"]}], ",", 
       RowBox[{"\[ImaginaryI]", " ", 
        SqrtBox["2"], " ", "r"}]}], "]"}], ",", 
     RowBox[{
      SuperscriptBox["\[ExponentialE]", 
       FractionBox[
        SuperscriptBox["r", "2"], "2"]], " ", 
      RowBox[{"(", 
       RowBox[{
        FractionBox[
         RowBox[{
          RowBox[{"(", 
           RowBox[{"1", "-", "\[ImaginaryI]"}], ")"}], " ", 
          SqrtBox[
           FractionBox["1", "r"]]}], 
         SuperscriptBox["2", 
          RowBox[{"3", "/", "4"}]]], "+", 
        FractionBox[
         RowBox[{
          RowBox[{"(", 
           RowBox[{
            FractionBox["3", "16"], "-", 
            FractionBox[
             RowBox[{"3", " ", "\[ImaginaryI]"}], "16"]}], ")"}], " ", 
          SuperscriptBox[
           RowBox[{"(", 
            FractionBox["1", "r"], ")"}], 
           RowBox[{"5", "/", "2"}]]}], 
         SuperscriptBox["2", 
          RowBox[{"3", "/", "4"}]]], "+", 
        FractionBox[
         RowBox[{
          RowBox[{"(", 
           RowBox[{
            FractionBox["105", "512"], "-", 
            FractionBox[
             RowBox[{"105", " ", "\[ImaginaryI]"}], "512"]}], ")"}], " ", 
          SuperscriptBox[
           RowBox[{"(", 
            FractionBox["1", "r"], ")"}], 
           RowBox[{"9", "/", "2"}]]}], 
         SuperscriptBox["2", 
          RowBox[{"3", "/", "4"}]]], "+", 
        FractionBox[
         RowBox[{
          RowBox[{"(", 
           RowBox[{
            FractionBox["3465", "8192"], "-", 
            FractionBox[
             RowBox[{"3465", " ", "\[ImaginaryI]"}], "8192"]}], ")"}], " ", 
          SuperscriptBox[
           RowBox[{"(", 
            FractionBox["1", "r"], ")"}], 
           RowBox[{"13", "/", "2"}]]}], 
         SuperscriptBox["2", 
          RowBox[{"3", "/", "4"}]]], "+", 
        FractionBox[
         RowBox[{
          RowBox[{"(", 
           RowBox[{
            FractionBox["675675", "524288"], "-", 
            FractionBox[
             RowBox[{"675675", " ", "\[ImaginaryI]"}], "524288"]}], ")"}], 
          " ", 
          SuperscriptBox[
           RowBox[{"(", 
            FractionBox["1", "r"], ")"}], 
           RowBox[{"17", "/", "2"}]]}], 
         SuperscriptBox["2", 
          RowBox[{"3", "/", "4"}]]]}], ")"}]}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"ParabolicCylinderR", "[", "r_", "]"}], "=", 
   RowBox[{"ParabolicCylinderD", "[", 
    RowBox[{
     RowBox[{"-", 
      FractionBox["1", "2"]}], ",", 
     RowBox[{
      SqrtBox["2"], " ", "r"}]}], "]"}]}], ";"}]}], "Input"],

Cell[BoxData[
 RowBox[{
  RowBox[{"\[Epsilon]", "=", 
   RowBox[{"1", "/", "1000"}]}], ";", 
  RowBox[{"\[Phi]1table", "=", 
   RowBox[{"Quiet", "[", " ", 
    RowBox[{"Join", "[", 
     RowBox[{
      RowBox[{"Parallelize", "[", 
       RowBox[{"Table", "[", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"x", ",", 
           RowBox[{"1", "-", 
            RowBox[{"\[Phi]", "[", "x", "]"}]}]}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"x", ",", 
           RowBox[{"\[Epsilon]", "/", "100"}], ",", "2", ",", 
           RowBox[{"10", "\[Epsilon]"}]}], "}"}]}], "]"}], "]"}], ",", 
      RowBox[{"Parallelize", "[", 
       RowBox[{"Table", "[", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"x", ",", 
           RowBox[{"1", "-", 
            RowBox[{"\[Phi]", "[", "x", "]"}]}]}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"x", ",", 
           RowBox[{"2", "+", 
            RowBox[{"100", "\[Epsilon]"}]}], ",", "10", ",", 
           RowBox[{"100", "\[Epsilon]"}]}], "}"}]}], "]"}], "]"}], ",", 
      RowBox[{"Parallelize", "[", 
       RowBox[{"Table", "[", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"x", ",", 
           RowBox[{"1", "-", 
            RowBox[{"\[Phi]", "[", "x", "]"}]}]}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"x", ",", 
           RowBox[{"10", "+", 
            RowBox[{"1000", "\[Epsilon]"}]}], ",", "100", ",", 
           RowBox[{"10000", "\[Epsilon]"}]}], "}"}]}], "]"}], "]"}], ",", 
      RowBox[{"Parallelize", "[", 
       RowBox[{"Table", "[", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"x", ",", 
           RowBox[{"1", "-", 
            RowBox[{"\[Phi]", "[", "x", "]"}]}]}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"x", ",", 
           RowBox[{"100", "+", 
            RowBox[{"100000", "\[Epsilon]"}]}], ",", "10000", ",", 
           RowBox[{"100000", "\[Epsilon]"}]}], "}"}]}], "]"}], "]"}], ",", 
      RowBox[{"Parallelize", "[", 
       RowBox[{"Table", "[", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"x", ",", 
           RowBox[{"1", "-", 
            RowBox[{"\[Phi]", "[", "x", "]"}]}]}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"x", ",", 
           RowBox[{"10000", "+", 
            RowBox[{"10000000", "\[Epsilon]"}]}], ",", "1000000", ",", 
           RowBox[{"10000000", "\[Epsilon]"}]}], "}"}]}], "]"}], "]"}]}], 
     "]"}], "]"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.632572265551511*^9, 3.632572270933271*^9}, {
   3.644644272900228*^9, 3.6446442988424683`*^9}, 3.644734427864142*^9, {
   3.644746581757272*^9, 3.644746666498979*^9}, 3.644746938852201*^9, 
   3.6447477257631683`*^9, {3.6447489892705793`*^9, 3.6447490660582237`*^9}, {
   3.648960726577338*^9, 3.6489607292047443`*^9}, {3.648983320530661*^9, 
   3.648983321000692*^9}, 3.648983721971321*^9, {3.648985059787443*^9, 
   3.6489850607959337`*^9}, {3.648985146926549*^9, 3.648985147255308*^9}, {
   3.6489854092768707`*^9, 3.648985414466682*^9}, 3.648985500201063*^9, {
   3.6491323520474577`*^9, 3.6491323525521812`*^9}, {3.6491323859245453`*^9, 
   3.649132391528507*^9}, {3.649132479585773*^9, 3.649132488960066*^9}, {
   3.649133138526581*^9, 3.649133259252693*^9}, {3.6491335528847933`*^9, 
   3.649133566258111*^9}, {3.649133700491228*^9, 3.649133702656405*^9}, 
   3.649394425767447*^9, {3.649397700857604*^9, 3.649397752687312*^9}, {
   3.649397855594214*^9, 3.649397893704474*^9}, {3.649398409929421*^9, 
   3.649398450114072*^9}, {3.649398482754527*^9, 3.64939851255097*^9}, 
   3.6496484992101297`*^9, {3.649648560356476*^9, 3.6496485669510307`*^9}, {
   3.6502604808542347`*^9, 3.650260484054597*^9}, {3.650260595308407*^9, 
   3.6502606275659323`*^9}, {3.720248390843458*^9, 3.720248402143998*^9}, 
   3.720850721976447*^9, 3.721037050936795*^9, {3.721112604066156*^9, 
   3.721112626801458*^9}, 3.721113663326041*^9, {3.72112801133357*^9, 
   3.7211280214919577`*^9}, {3.7211352051665573`*^9, 3.721135205305348*^9}, {
   3.721392705222499*^9, 3.721392713826612*^9}, {3.721393906164328*^9, 
   3.721393913873105*^9}, {3.722692022134712*^9, 3.722692028185206*^9}, {
   3.722756965595849*^9, 3.7227569686296377`*^9}, {3.722757359454644*^9, 
   3.722757359707952*^9}, {3.722757756403242*^9, 3.722757804286503*^9}, {
   3.722759521247472*^9, 3.722759525113584*^9}, {3.722941481399331*^9, 
   3.722941486615924*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"TableT", "[", 
    RowBox[{"\[Sigma]1_", ",", "\[Alpha]1_", ",", " ", "mD1_"}], "]"}], ":=", 
   
   RowBox[{"Module", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{"\[Sigma]", "=", "\[Sigma]1"}], ",", " ", 
       RowBox[{"\[Alpha]", "=", "\[Alpha]1"}], ",", 
       RowBox[{"mD", "=", "mD1"}], ",", "r", ",", "\[Mu]", ",", "c1"}], "}"}],
      ",", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"\[Mu]", "=", 
       SuperscriptBox[
        RowBox[{"(", 
         RowBox[{
          SuperscriptBox["mD", "2"], 
          FractionBox["\[Sigma]", "\[Alpha]"]}], ")"}], 
        RowBox[{"1", "/", "4"}]]}], ";", "\[IndentingNewLine]", 
      RowBox[{"r", "=", 
       FractionBox["mD", "\[Mu]"]}], ";", "\[IndentingNewLine]", 
      RowBox[{"pg", "=", "1"}], ";", "\[IndentingNewLine]", 
      RowBox[{"c1", "=", 
       RowBox[{"Re", "[", 
        RowBox[{
         RowBox[{"ParabolicCylinderI", "[", 
          FractionBox["\[Epsilon]", "100"], "]"}], 
         RowBox[{"NIntegrate", "[", 
          RowBox[{
           RowBox[{
            RowBox[{"ParabolicCylinderR", "[", "x", "]"}], 
            SuperscriptBox["x", "2"], 
            RowBox[{"g", "[", 
             RowBox[{"x", " ", "r"}], "]"}]}], ",", 
           RowBox[{"{", 
            RowBox[{"x", ",", "0", ",", "\[Infinity]"}], "}"}], ",", 
           RowBox[{"PrecisionGoal", "\[Rule]", "pg"}]}], "]"}]}], "]"}]}], 
      ";", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"\[Psi]1", "[", 
        RowBox[{"x_", ",", "r_"}], "]"}], ":=", 
       RowBox[{"c1", "-", 
        RowBox[{
         RowBox[{"ParabolicCylinderR", "[", "x", "]"}], 
         RowBox[{"NIntegrate", "[", 
          RowBox[{
           RowBox[{
            SuperscriptBox["y", "2"], 
            RowBox[{"g", "[", 
             RowBox[{"y", " ", "r"}], "]"}], 
            RowBox[{"Re", "[", 
             RowBox[{"ParabolicCylinderI", "[", "y", "]"}], "]"}]}], ",", 
           RowBox[{"{", 
            RowBox[{"y", ",", "0", ",", "x"}], "}"}], ",", 
           RowBox[{"PrecisionGoal", "\[Rule]", "pg"}]}], "]"}]}], "-", 
        RowBox[{
         RowBox[{"Re", "[", 
          RowBox[{"ParabolicCylinderI", "[", "x", "]"}], "]"}], 
         RowBox[{"NIntegrate", "[", 
          RowBox[{
           RowBox[{
            RowBox[{"ParabolicCylinderR", "[", "y", "]"}], 
            SuperscriptBox["y", "2"], 
            RowBox[{"g", "[", 
             RowBox[{"y", " ", "r"}], "]"}]}], ",", 
           RowBox[{"{", 
            RowBox[{"y", ",", "x", ",", "\[Infinity]"}], "}"}], ",", 
           RowBox[{"PrecisionGoal", "\[Rule]", "pg"}]}], "]"}]}]}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"\[Psi]1table", "=", 
       RowBox[{"Join", "[", 
        RowBox[{
         RowBox[{"Parallelize", "[", 
          RowBox[{"Table", "[", 
           RowBox[{
            RowBox[{"{", 
             RowBox[{"x", ",", 
              RowBox[{"Quiet", "[", 
               RowBox[{"\[Psi]1", "[", 
                RowBox[{"x", ",", "r"}], "]"}], "]"}]}], "}"}], ",", 
            RowBox[{"{", 
             RowBox[{"x", ",", 
              RowBox[{"\[Epsilon]", "/", "100"}], ",", "1", ",", 
              RowBox[{"10", "\[Epsilon]"}]}], "}"}]}], "]"}], "]"}], ",", 
         RowBox[{"Parallelize", "[", 
          RowBox[{"Table", "[", 
           RowBox[{
            RowBox[{"{", 
             RowBox[{"x", ",", 
              RowBox[{"Quiet", "[", 
               RowBox[{"\[Psi]1", "[", 
                RowBox[{"x", ",", "r"}], "]"}], "]"}]}], "}"}], ",", 
            RowBox[{"{", 
             RowBox[{"x", ",", 
              RowBox[{"1", "+", 
               RowBox[{"100", "\[Epsilon]"}]}], ",", 
              RowBox[{"10", "+", "\[Epsilon]"}], ",", 
              RowBox[{"100", "\[Epsilon]"}]}], "}"}]}], "]"}], "]"}], ",", 
         RowBox[{"Parallelize", "[", 
          RowBox[{"Table", "[", 
           RowBox[{
            RowBox[{"{", 
             RowBox[{"x", ",", 
              RowBox[{"Quiet", "[", 
               RowBox[{"\[Psi]1", "[", 
                RowBox[{"x", ",", "r"}], "]"}], "]"}]}], "}"}], ",", 
            RowBox[{"{", 
             RowBox[{"x", ",", "11", ",", "100", ",", "1"}], "}"}]}], "]"}], 
          "]"}], ",", 
         RowBox[{"Parallelize", "[", 
          RowBox[{"Table", "[", 
           RowBox[{
            RowBox[{"{", 
             RowBox[{"x", ",", 
              RowBox[{"Quiet", "[", 
               RowBox[{"\[Psi]1", "[", 
                RowBox[{"x", ",", "r"}], "]"}], "]"}]}], "}"}], ",", 
            RowBox[{"{", 
             RowBox[{"x", ",", "200", ",", "1000", ",", "100"}], "}"}]}], 
           "]"}], "]"}], ",", 
         RowBox[{"Parallelize", "[", 
          RowBox[{"Table", "[", 
           RowBox[{
            RowBox[{"{", 
             RowBox[{"x", ",", 
              RowBox[{"Quiet", "[", 
               RowBox[{"\[Psi]1", "[", 
                RowBox[{"x", ",", "r"}], "]"}], "]"}]}], "}"}], ",", 
            RowBox[{"{", 
             RowBox[{"x", ",", "2000", ",", "20000", ",", "1000"}], "}"}]}], 
           "]"}], "]"}]}], "]"}]}], ";"}]}], "]"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.632572265551511*^9, 3.632572270933271*^9}, {
   3.644644272900228*^9, 3.6446442988424683`*^9}, 3.644734427864142*^9, {
   3.644746581757272*^9, 3.644746666498979*^9}, 3.644746938852201*^9, 
   3.6447477257631683`*^9, {3.6447489892705793`*^9, 3.6447490660582237`*^9}, {
   3.648960726577338*^9, 3.6489607292047443`*^9}, {3.648983320530661*^9, 
   3.648983321000692*^9}, 3.648983721971321*^9, {3.648985059787443*^9, 
   3.6489850607959337`*^9}, {3.648985146926549*^9, 3.648985147255308*^9}, {
   3.6489854092768707`*^9, 3.648985414466682*^9}, 3.648985500201063*^9, {
   3.6491323520474577`*^9, 3.6491323525521812`*^9}, {3.6491323859245453`*^9, 
   3.649132391528507*^9}, {3.649132479585773*^9, 3.649132488960066*^9}, {
   3.649133138526581*^9, 3.649133259252693*^9}, {3.6491335528847933`*^9, 
   3.649133566258111*^9}, {3.649133700491228*^9, 3.649133702656405*^9}, 
   3.649394425767447*^9, {3.649397700857604*^9, 3.649397752687312*^9}, {
   3.649397855594214*^9, 3.649397893704474*^9}, {3.649398409929421*^9, 
   3.649398450114072*^9}, {3.649398482754527*^9, 3.64939851255097*^9}, 
   3.6496484992101297`*^9, {3.649648560356476*^9, 3.6496485669510307`*^9}, {
   3.6502604808542347`*^9, 3.650260484054597*^9}, {3.650260595308407*^9, 
   3.6502606275659323`*^9}, {3.720248390843458*^9, 3.720248402143998*^9}, 
   3.720850721976447*^9, 3.721037050936795*^9, {3.721112604066156*^9, 
   3.721112626801458*^9}, 3.721113663326041*^9, {3.72112801133357*^9, 
   3.7211280214919577`*^9}, {3.7211352051665573`*^9, 3.721135205305348*^9}, {
   3.721392705222499*^9, 3.721392713826612*^9}, {3.721393906164328*^9, 
   3.721393913873105*^9}, {3.722692022134712*^9, 3.722692028185206*^9}, {
   3.722756965595849*^9, 3.7227569686296377`*^9}, {3.722757359454644*^9, 
   3.722757359707952*^9}, {3.722757756403242*^9, 3.722757804286503*^9}, {
   3.722759521247472*^9, 3.722759525113584*^9}, 3.7256097141641273`*^9, {
   3.725619867174213*^9, 3.7256198938554163`*^9}}]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Plot potentials", "Subsection",
 CellChangeTimes->{{3.726381295754898*^9, 3.726381308641871*^9}, {
  3.7455753009095373`*^9, 3.745575306157651*^9}}],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"ReVplot", "=", 
   RowBox[{"Table", "[", 
    RowBox[{
     RowBox[{"ReV", "[", 
      RowBox[{
       FractionBox["r", "0.197"], ",", 
       RowBox[{"mDcal", "[", 
        RowBox[{
         RowBox[{"2", "\[Pi]"}], ",", 
         RowBox[{"Tscancorig", "[", 
          RowBox[{"[", 
           RowBox[{"5", " ", "l"}], "]"}], "]"}], ",", 
         RowBox[{"kfinal", "[", 
          RowBox[{"[", "1", "]"}], "]"}], ",", 
         RowBox[{"kfinal", "[", 
          RowBox[{"[", "2", "]"}], "]"}]}], "]"}], ",", 
       RowBox[{"\[Alpha]cont", "[", 
        RowBox[{"[", "1", "]"}], "]"}], ",", 
       RowBox[{"\[Sigma]cont", "[", 
        RowBox[{"[", "1", "]"}], "]"}], ",", 
       RowBox[{"ccont", "[", 
        RowBox[{"[", "1", "]"}], "]"}]}], "]"}], ",", 
     RowBox[{"{", 
      RowBox[{"l", ",", 
       RowBox[{
        RowBox[{"Length", "[", "Tscancorig", "]"}], "/", "5"}]}], "}"}]}], 
    "]"}]}], ";"}], "\n", 
 RowBox[{"Plot", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"ReVplot", ",", 
     RowBox[{"ReVm0", "[", 
      RowBox[{
       FractionBox["r", "0.197"], ",", 
       RowBox[{"\[Alpha]cont", "[", 
        RowBox[{"[", "1", "]"}], "]"}], ",", 
       RowBox[{"\[Sigma]cont", "[", 
        RowBox[{"[", "1", "]"}], "]"}], ",", 
       RowBox[{"ccont", "[", 
        RowBox[{"[", "1", "]"}], "]"}]}], "]"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"r", ",", "0", ",", "5"}], "}"}], ",", 
   RowBox[{"AxesStyle", "\[Rule]", 
    RowBox[{"Directive", "[", 
     RowBox[{
      RowBox[{"FontSize", "\[Rule]", "25"}], ",", 
      RowBox[{"Thickness", "\[Rule]", "0.004"}], ",", 
      RowBox[{"FontFamily", "\[Rule]", "\"\<Helvetica\>\""}], ",", "Black"}], 
     "]"}]}], ",", 
   RowBox[{"BaseStyle", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"FontSize", "\[Rule]", "14"}], "}"}]}], ",", 
   RowBox[{"AspectRatio", "\[Rule]", "0.85"}], ",", 
   RowBox[{"AxesLabel", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"\"\<r [fm]\>\"", ",", "\"\<Re[V]\>\""}], "}"}]}], ",", 
   RowBox[{"ImageSize", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"1200", ",", "1200"}], "}"}]}], ",", 
   RowBox[{"PlotRange", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"-", "1.5"}], ",", "2"}], "}"}]}], ",", 
   RowBox[{"GridLines", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"conv", " ", "rsbvac"}], "}"}], ",", 
      RowBox[{"{", "ReVsbVac", "}"}]}], "}"}]}], ",", 
   RowBox[{"GridLinesStyle", "\[Rule]", 
    RowBox[{"Directive", "[", 
     RowBox[{"Gray", ",", " ", "Dashed"}], "]"}]}], ",", 
   RowBox[{"BaseStyle", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"FontSize", "\[Rule]", "14"}], "}"}]}]}], "]"}]}], "Input",
 CellChangeTimes->{{3.746183624028306*^9, 3.74618366484877*^9}, {
   3.7463520913952417`*^9, 3.746352094451281*^9}, {3.746352176918899*^9, 
   3.746352188086228*^9}, 3.746440484221635*^9, {3.746440529996839*^9, 
   3.746440573505938*^9}, {3.747201884699161*^9, 3.7472018999565372`*^9}, {
   3.747730611769573*^9, 3.747730612592564*^9}}],

Cell[BoxData[
 GraphicsBox[{{{}, {}, 
    TagBox[
     {RGBColor[0.368417, 0.506779, 0.709798], AbsoluteThickness[1.6], Opacity[
      1.], LineBox[CompressedData["
1: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

       "]], LineBox[CompressedData["
1:eJwd1nk0lV0XAPBrbDC7JUlIZB4a3kLDfhBFUZmVFIUoUtGLpJCIzDJlllCk
hMyPeR6u6br3ocxkHq55/J73O/+c9Vtrr7PO2eecvfYR88c6FvQEAkGNjkD4
bz54dI2FyycbCP8fqyh3TB39fHc2uH15NoNFr6Ab7Hnp9ud+ggNTlcy+oyvo
sHvy9bmEnxCQ5vxuOGsZzbNyi5u1zoGDFsjDs+QlNB57qPa4JQes2WKOXXq8
hPpoGU/NnMgFhpq7z2ksS+jNk6eUZjZygdv7Qq/ltUVU9fORAdu7eeA0fOh4
xxINlT7I4TNdlQduUuQtiXgaur093jXl/wtKxGQL6NYX0MSG+CeTggVg2Wvz
pLZpHl2MzJXse18ARQbtyAH3eVTdqnGofa0AaEtSdjln5tEphhX9wo5CKCOa
Flh+nUMVzmsrvfMuBpffGbqzurOoH8t9mutiMVAubT0Y6JlB/1CdM+zNSoD8
a9l1y3IGffM8RcDobCmwbpcOSb6dRklZm/Risyh8dgiLZhiZRLlhjymbbBl8
FzO+0ucxiZ49Fqbkfb8MhnPGH+4IT6IBi+k0l7YyyPhybzXHegI9FdxlYf61
HPi5SL517OPoqwZpzeN3KkFpetBpb/oomvbj17GvHyrhD7OgZo35KNoeqcIg
2lQJQsEb9fWHR1ERK6NiXsUq0O5Hot0iRtAGhjeyBGI1vG39oRgeOYzynO/h
bq2pAcmo2Tu3GwZRRMRy9vJWDUzsK2rzDBtErVnmGytO1sK5Z2QTxzuDaDGV
2SsvoRYsa9+sJK8MoObPT6zEutRBnrfI40T5AfRb1rueR7INUER3Lu6ZRx86
wT3xXtOsAQZ2Hro4Hu9DxZ5rXhAPawAFV61a84E/aMI5lsShtQbYENk4Oan6
Bw2pf295s7oRpAvqjkoTf6PPhwLnL5k0g0BwxbVkMoZmq88liQY2Q4RMk+r5
EAydTb+ux1DRDCuP1bNfaWPoA3uuX6ViLfD3hhXDfB0VvbkV4voPrQXOjcF1
uWoKGs/S6MmlRgIxDh4knUJGL5x/YfLalATkbKUOu1gy2msn9c/svyRoMHub
/MOcjPK2+402fSGBhJTAvc8zXWhw5FUNH842qB20ZiWydqGeoi3sOz1tsI9g
YaF/qwO1graoqacdIJeVrGSLkFBC0nJhj18HCJ9KMLPhJqGRjPy9DZ86gK9m
eb9ZfStaV28pkE7uAFUN+Wmxfa2ouN5mkoVSJ7DndPspfm9G/z4Qy/hD1wW3
OK7JDRMaUZuQl6WkIDJMvn2Tn79WjdIvJfWh6WRQVj7IV5dRjUYb1hGyKsig
lOxwVOluNdrAT1T1XyQDfVHwlHJdFSqVmlarYdQNDW8MYytjKtGpog5ShSAF
zNi/quUblKN2IxJDOd+o8Gmnsn+ZsxDtN6XuLq+nwmZYgTazewGqS/GRbR6m
Qg6baSg6n48qNI45j/Bh4CCqZyzR9Qtl+JHCyeONAetP5vtZyblopOuRC//e
6QH5BasBddMfaDnxYJQi529wEuoq/O6ehO498kasT6EfysjBw6FzH6DuXLCc
m1o/vGa3qL/sHwFvjeLOHNbpB4LCkt078SigD8q/dOthP9zdv+aeezMG1ren
rLpj+yEhR4B92SARJnv101rpByChr9w50ycVmiLFJMqaBuBimsjzntwfEMDZ
KJl4dwjUrz6v3fxSDAVnDudq2w2BXThzSSVjCQybPobNF0OwOJTscdq0BM5m
EvUMI4aAxBGVKcRZCn81TF6ytQzBTRffVA57FFQ9p1udzw6DgMTHwCuc5bC6
xOGowzMCYg8NObiTK+HoYfOdnaMjUM9Sy7LcUAnaF3PeZR4fgbvLJ/hyFioh
JcQobrfWCBhtuw2UKleBjlxibannCFwaML7A/acKMh+c4JOaH4GoX/X5dRw1
YN6jhzI0jQKXio+yvFEd7P04YPuEOgoK8jcoo/g/zL5px983Ogorf82JrrF1
wIB5OxfSjQGTn1m7ymAdfKIUnnxyZgw27G4sqNrUw2iXUNqfpDHw4ci+K+7Q
ADakqaAC57+g5aY8xG3fBNxBziDm/RfIT4Vn6wKaoPAa80xY2F/QvcpkeDez
CVhaBa/YZ/2FQs4b/icnmiCjWYdJbOQvbDxMabc1b4aZhnznsOvjwN0v5K+q
1QJPqt+YPxabgAQvtdVXzCQQGFZnXj45AXoVq9L8RBI00u/54opMAK96knCG
IAlEEf/5d8YTYHfDwD5VgQTUwg+vP/lNQECR6BNWGxIof/8cR52dgC/+Xn3h
DSTg+liHqeZPwvh5Wu6QRxuUFvi6NVRNgvIPRsFdAW3wkHJV+EbbJGAv6hHB
qDao3t9mbToxCb/D/jbJZLWBcxB11Yl/CibH3vZWYW0w4DXB8+31FIwk/HQd
kGuHH/asurwa01DfXx6yp70dmqKJzpkG07ArOS88pbcdRqv44lXuT4NU2daz
f8bage+gxOSjV9Mg1OveL7/ZDm/K1TzLc6dhIWPVN0K0Awy4X/20EZ6BQsOs
R9LPO2D95zyxZGMGKMVbkMfeCfv+rCrq7JkFan5tTt+BTpDdTbg7xjMLNnXu
cttCnXDPhD2D68QsXN/Td4vvZCc0MUpdtHwwC+FrL0NJBp0Qp3/fgaNrFlxE
vwSfi+mExBcPJ+QN5yCMk7yoI9gF8mV7Vr1vzwFp79yH9GNdUMaYxtR3bw5E
DkZ+WpHpgn7/YSF/+zkINKaKuZzrAoGE24bj7+bgaX9SyEHjLoiuulaVWDwH
qjsNBnVBXRDCdiqOW3geMvUu8PCud4GwTvtXa/F5mL35yN6GQIYf4fYFZbLz
gKYZC+Qyk4EkmNlpd3YeyNtxwSeJZGA/cYylUW8eWjQ8o7ukyOBrwOvk6T0P
1vtbdHJukcEjfvPG4tQ8fFdDiljzyHBdPv+JFG0eJljNmm8VkUGg/Fmw+do8
ZKXa6n4qI0Ph4ASJxLQA9NbvO480kmFBlHotU2AB4ru4b7X2kcE8I1fL8voC
iG+Gzq/t6gblAjsNys8FSFhXssvX7QZ2TUlrjsIF4GFOY1DB62YvNuKjXrYA
Wpd82qpNusFp06Qup2kB+D5YyRZbdMN3uHIpeGQBlhd1Qu7/2w1CNWJqmgdo
MMPSJZoe1Q2Ejn6k2IUGFy39RiWwbngzXpro4k6DXTfHAoz/dMMeQiy9og8N
vLPeqngOdgO3jHFV7gcavJOpHaua6AZR77ZLWd9pwKNfPUO30Q2aZyu0k0Zp
0OVrSG/NR4HQ5GQTH51FcA99SeHTpwBvoXuJuvEiOGnLnokyokAM6Y4A091F
uK5v58xtQoHPW4f63W0XoZhDt2LJnAL5hmH3XvgsgpRCAO9rewr0snjZ2JUu
glxBo0m6LwWOOVg66UkugfGLi/eciyggo9SnGy+/BCtrhj9lSylwimAkN3F6
CZYkTJX6yyig8l5j9JXqEqTF7CEo1FDA9JO03leTJUgQt5sqJFEgvHNBjj5w
CVxe/L7OPUIBpn9ejWXRlkD4kXj2MRYqsG6sVKyvLcG64NvMh2xU4C63j1Mj
LIPXs6d2mRxUENIy1+9hXYa2BPSG2D4qnLNQq2Q+tgzPmhq4l/ip4PCBJf62
0TKIkRJ5NmWoMLwUYcBSsgw+jNU8nVpUSFI++ex35TJ8ERq4MHiNCnf8WwKz
GpZhT63K8ekbVMBEmOp1KcvAkJ7nvaZPhTbdp2djaMvQx2XkNnWbCqU/rgrJ
SK5AvSEtEmypEGFLN6EdsQJK61YpBe+ooFcQw3wkbgUKWou6rf3w/TMpHKV9
WoH27PtmB/ypEBBjZxKRvQI97HR+NkFUeNPY09LXvAJlwyZp8+FUsJfI+2nP
uApRWRKeb5OpoDli8zLkySowK91yHCmkgvrLoxkXnVah4vhyknIxFVT292LL
bqvAOyad+7GECkpqWgq33q8Cu0NImEYZFSRT5GhHU1dBv+hG9PtqKrBYLD7I
7V0Faynz99mtVGgafqlHubQGdQoy3qGDVKhzPe3pq70Gr6UPG2YPUaFq3+yP
c/prsDY59qgV7wOKL97lSDRfA6ZlcUfGMSpkfFJpsH65Bl2fQe3mJBX87+9C
NrLXoNjY4cIvGhW0h4OkBATWYT1NMPUyAwZNUsOdJiLr0HZBzEKUEYMrz864
fZRch8yID+MEJgwu0/8h8Z5ZBxKrnFYOMwYqQlLPidfXITjq1U/WvRj8Y1Jd
tttjHe76+n7w4sSAv3NNnzayDtJ7l2nJ/BhEH9LaOT61DidENZdMDmNw8F5C
mv3COjiUvF3cJ4ABz4L6xvT2Oshp7aG5C2LAyRmW8PfABni1DR26LowBw1XZ
yd8aG2DIzPmsVAyDiUrz13WZG1AhFug4fRwDwWCKTUDOBhzpYFIKP4GBnqm2
vl7RBgR6v2a6cBKD0lVFyf66DWhxPJ7vewqDEBmuzpWhDbB/nFPIewaDsxGo
mBjfJrz8yRy7+xwG7234W73eboIo/YswFTUMys+EFFzx3wQrU7eLrbiXGXd/
4grbhAzNPdK31DG4G09zik3chEjRI6n2lzA41dkgnFu8CfLrNU9DNDD4fd75
+fDCJjTzTXlma2Egy0U+rHpnC0jdP5Rs9TEY9R/1+GCxBTnNL516cMfuXRkb
e7gFWmo5EhoGeB/HyJv93mkLXPSnxoUN8fMvG6uTg/F4t93rrUYYpPT+trOu
2gJ1LwVeLhM8/2kjaKDENthzrW+dMsegU2RZZFBuG9LmedVDcfslMvueOr0N
GOvNQ/O416PF9Kgq22BsK2z/9R4GFH/rv8Im20DP/YnMZ4FB6LNpzryAbRCM
UzkxYoXBXlgy66VtA8lTs1TaFgMnZfHdeevbkB9mU/oG96jqrW+BdDuQcebo
9V7cFZfL11U4duDMl2tSvnYYuOj4h6ZL7sAFrcHO/scYTFqIVj8324ED38ZD
XJ7i7/G9vjhX6w5EXrK3vP8vBkqBPi0TXTvg4fR5Ogt3WnCRQ1XvDoSr+Bza
wP0m/Ej5vxM7MHMtwTbICQMB0rL0LD0BGfpHaCPPGQMytaJaX4CAXHtZeWbx
BQaXpm+uCOsTkNGvbsMnXmMQt8+z45URAemqDeR/hnvx7Nes3lt4vL8b+0/c
Cb4bVuHmBGS307cjJ9zxfInFUPbYE5A42lkuGQ8MMsx/F8z5EpA0ntAnPG/w
90u541paRkBiv7nSCvA+nFJxn+6mNB3i4NgQYRiAwZwyxvdSjg4JGXcY8sK9
q/zaqYQTdEiCkjpTDu7TqJLVqAIdoqBzrokjEIOwIs7mp2p0yD0hZ9tq3Ndy
iiP9TOkQPw2itEQwBjUp++RLguiQKyHc2x2hGOT6VJkKLdEhh6S/MJdH4vnS
bOT1XqVDerNX3MZxR7O2t09v0CH132w7uKIweB3Up15ET49IsPlxmeO+Grku
a8BJj0TruI8RojEYTJXf8ZOiRz4nEY4ofMSAvTYmfsWMHnlnHDbrH4uBJZNj
f0sLPXLVfgD6EjHgE6zv3mijR8A+vn0Ld4vC4VbxLnpE2fu8Nn8Sfr5H1SUe
PfRIr5sLwRg3c8f+j6f/0iNi9KG6bbhTEvL04+gYkAv9iXUlyRgMn11tsD3F
gKwEyPi+TcHg3tMXuazRDIiXRuBgTxq+3ok/uRKxDIiskh15EffeBSRPPYEB
UXw4lc+WjsH3J8y/Xn9mQNhuM2kC7k374PzFbAaE+tokLhF3+OPUot5GBmSu
jsZ/7wsG9Y86yjO2GJCECH0K9SsGclZSLVfNGJEWhU4k6hsGrdzSLI6KTIiS
ksR8508Mir55fJRmYEZ2p72XW/yFwQs6yetNv5kRYzVif3ERvp9el8t2ObuQ
r7yDXv2lGIx8PhIW77obYT2dOninHL9f8YOMBfp7kI9YNtP3SgyCoi1rzYT2
IqZpSRd8qjG4GXa7hXVsL2LB0cR2oBaD1Yspa/GlLEiJzock3zoMhkZUnCq8
WZHYjHadnHoMks4fP9RsxoYkBRwNrW/AINPLkctKhh0hPKKupjZi4K1/7wrD
EjuSGHO14H4TXr97E9O9mzmQZQ02o/3NGERKfMxsvsKJnCSf9EjG/arMP/JK
ASfy+ZS0tXgLBlqH9FMaRLiQ92yx7yJxK9vV3uJ6x4U4m0py0nDH85uLNC1x
IY7ooV2XWzEQqUwN177FjXzP3Uh7jztIpkKyvZQbSSgP16jFbUljbKuXJCI8
29ke27jNfywIvQskIkAtUZQiYfDIQ3dTM5iIpMIf2n921M3pZg0lIs1e/pnS
uH2WHAOCwolIS2OUoCzub4prGxGxRERkxn5bHvda+Q7581ciUvPMIPU07qB2
Vv+qWiJy/1NvqjLu6GTbB2/ricjnd6Z6KriTHVpULzcSke7mfwmquPN4gtYb
W4hIzL9PDC/i7r1JfNDRRURSrHwIl3CLDR1UHRwiIkLjrnAVt3yOi8CnESLS
Nhcy8p+VvHrWLMaICL3hRT8t3FfFYr+PTxCR04ouXdq4nz4UEpifJyLnRRQt
buB2Pee+lk0jIo/m5Hfr4PZiG+x0WCIiaSw1X/5zZFay3+oqEYkSqZ/RxZ30
mtGqcJ2IhMecCdLD/fWGhYrrJhGRNbp4XB93jnDN4QvbRORo2Gzbfy6lHVvb
2SEiHP6KTw1w/w/nYFaK
       "]], LineBox[CompressedData["
1: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
lu6dLv3JjsYM1Gi3YB9M1Xr9d5IdfS8avyGBbbdl9oisKAfSzw1kOYPdN6B6
r8SbA13Lzu0OwFaNrnsn+YwDedvKsgdjx1wyrA0J5EBSM1zyIdjXqh13mb/k
QJm6NI9eYbenx9TQx3GgbuPfzNHYTffXhdUKOVDpyZdVadglPHk/KmY50MM2
CekG7HfHZHfWmnIiz5jMKI5CHNdh81qx4ES1QnLaXNi9xn3De6040Rs6n+VN
2KKeL/Oe2nGiPUeKzlGw48uXLqP7nGhA3GV6O3aCbkn4l1BO5He8eE0cO8n0
PF9EBX6feZ8Kwk59cofHch8XkviQlmCP7W1gfoZ+jgu1bdBGFmMf6oj94F27
CT3QszHgIEgI3xuZWnuGG3Xb2o+pY8/OqCd4aXOjc/PWLaewdQun3yjqcqPa
zvxCDWym85r+CXrcqKjQMkAT+47b0s0Hl7mRxfWxXTrYevUX9+yz5EZ8cztl
DLA57myO8/fkRnJeZ+vNsN2LAsLP5HKjzWEnNdywhzuLQpfyuJGA7j7mB9gX
VmaCEwu40RmaoLJ/llYw9KUv4kaPmguRO3Zrsrhrfjk3uj7RfsATWy6MMJIi
udEa5fKiN/ag7ZQg+wT+fykaiRfY2jsNEqrEeFDqm898SdgqdhVGPL48yKjV
8FkVdjS/mVjNHA9SSJHnGMYW+574SseIFz09FU/SFeH1t69EsqmQF/kcaru3
FfvGDEPjD0kKOhp24KYkttnnaWHfIAoi2HIMFbFveZ5f1XxOQfRWfOH/fOd8
5k+OFxSU5a3R/M8+c3cCg19RkGbwHl0l7E+KSythbylIVecXOoq9VLzR8j6Z
guLtJPiP/Wu/iSOgtIKChCblvyDsiDhbq6c/KCilVGPkn+Oc6k5oVFNQ2TF5
URXsbL7g5eo6Cmp7ERLyzx2GFCtqMwUFMjnYq2JL9G0/0dtHQZLOFSInsQ9k
ugrGD1BQuYr5xX9WevJr6fofCtr0qNX/n7Uk3qYPDVOQZ7Xuwj/fthEWnJqi
IMVYpyo1bDflR0sZMxQkyt+1/s9POHtJpzkK0hgWPaiOHZ4W92xxkYI8xpUj
//mdB4Nl3jIFuRnx1P9z8rnrqm6rFOTrW0R3CjtzV7nA8XUK+vNCU+GfC2fE
lzY2KOj7yzTrf/4fxuYJUw==
       "]], LineBox[CompressedData["
1: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
dh1M/w/kKMBa
       "]], LineBox[CompressedData["
1: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
8PMy
       "]], LineBox[CompressedData["
1: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
DL8atskvw0ubCmPTRDw/Icm7lAvL4LtbpskimQqHjSpK2LyWYap05axmKhV2
tSzpzgwsg0u++kJiFhWid57dkBldhnlHh4DNH6mw3Tw+xWF6GaqdyoMfY2+Z
VlsZW1+GsH9PR80/UYFECo//u3UFNh+9x7sjhwqMmtL4qFgB+aSDhTZ5VBj5
Yub5LX0F9qXkaGVRqSAY2n7jafYK0B8TSdlO4HybnNPVKVyBkWcutx5iUxcV
JHq+rQDhb3z9fAkVwvbxtSz0rUAUp/tifykVlCIJMbEdq2CQzG6wUE6FwBu7
vj/2WQWx5PYP1GoqlMqH5Z8JWgUvvZdHttZQYZ6JLZEvfBUcbmmes8e+Gjfj
EvN6FS4tHhQVqKWCbEu1cE7RKgzKtkTfraNC91HXu/3Tq2BEltxLaaCCNN8P
ftUra1DaoCC20UKFwaBBr+fX1iCVIfT1yVYqxHAsDA3dXINZjutVAdhcTNs+
BrqswS4p/T1bf+D5zxuo/QhdAzWfA1wSbVRI6uq2u16+BoPN2rwqHXj9UwaI
4L3r0KbqmSDXjb9rReZFevevQ97wn8jb2AGvWfxl5dZhaVxP7QP2crSYTsfx
dXA70tck/osK7UHX/wobrcNn7mPZW35T4dntMdLnp+uQpL/UN9BDBQ6YM+2a
WQdhXVZlnX4quKiIs31eXoduZY0HQdiDqpczguk3QNb5scdX7LLTpcvHeTfA
S9U4WX6ACm5aQc/eSWzAtFth6ZZBKvy79l/FXdMN2HHtueW3IVyPgbrifN83
QNd36uvKCN4/wU/qR1o3wKHkz6zUPyqkhBY6lXdtwN68B0PG2N4Ru0udRzbg
dubSTgJboGFeaoKBDpVkH62+P0qFHx1lFboCdKhP+Py9mTEqnBozXBDWpUNG
tf4y2ZNUiN30qPmBPh16+ae0uBt7Vul9ZtdlOkTHfW476xQV4v1XrCLM6NBh
XX0wwF4We9XO7kCH5ErLz65gp5l150/606HyOzffys3g+m2/4kEtoUMj9Avt
AXNUsNzw1d9ZToc07XSITOwi0Q+yLpV0yP4Co0cz9vU7dGMy9XQo7s5u1x3z
eL3Ir42TOukQ4+F+32Rsp7O9xwLn6dDPxTrh3AWcnzILekMpepTAc/Rl4RIV
JlV+7ri3nx7VV1x73o7NWnpeNv4gPfrZe81hDluOULQaPEKPrINcqqSXqRBe
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
2rLSVIgD9SqdO7WO7XzX67bHHg6UfzSxdgPbRCtWMFKUAw0XuV+g34Trl+OH
c60UB2qSzNFmwq5yPSkur8CBOI+7n+bAZjAQ8ePS4kDmW16Obsa+s7VXI/cR
B3paSd4rhW00szbf6MOBDrZffbgP+8T37QmjfhzoxhXjdmlssu/Fld0hHKie
bOUlg50xX/I+8BUH0g7481UO+29rHJdZDgdiMQ0jq2AbhhvXcw3hePfFFOtg
7/rEsfPmCG7vysGmh/27MdeqaowDeZK3X7yEbcFLpveZ5UC8ZKHfBth2/l8P
bdBzomL19RETbC/P/S+mdnGiR5ePfbHGfmdDb/FDixO1WYQ+cMe2Ccj4IKvH
iTi4h+I9sKVTL6+FGXCiBk2O0nvYH4dyIs5f5UQjedS1B9hFZjeqvtlyIsU1
huve2A36zdKFTziRhzOZLQh78UTSUhyVE3FeaHCIwfYojHtUXsqJxBg1jWOx
6Q5Gcw+Xc6Jb3r9Ox2GzCgbvPljDiXZFnuF/jb1lyUW9vI0TBZy/UpiIfShd
88XfSU7057Vs3Xva/DbPHpHZw4UknyWezceeDhgv0xXlQmWi6QIFtPwwDGu6
7eVCHnR/x2n2mOi++mU/F1opXAgswg6oqnyiq8yFmGOeEwR2yr2X7a66XIj/
k9tGBXbfwHGXMl8u9Nzq2EQj9vG4+jcSAVyo5FpwbhN2vL5hXdhTLuS6i/NB
M7ZJjaOw+XMu9FbTh7MV++eH+FrGBC4k8SFxRzt2k/u60EkqFwrdpEb+hV3G
V1BVOcuFVkV5bIexd9ecnN2/iO8rm+0awfb0bhSIWsH9Ma1W03xs4e9tawZu
tFzPKDqKXdC1VYCdxI3yeNyax2n5eXvnloYkN/J6ksY1i/3mqMzOOlNuVJKo
v7ZGG+8cx6MVC27En/sxcB2790rfyF5rbrS9/v7ODew9Xs8LfOy40V9Ve3m6
zfg8/LpkgNy5EUNFiTUDdtL5sqhP4dxIeDEuiwU7xVR7S3QlN3qpTd/Dg/3t
ltT9b9XcSDI+yYQX++8j5sH5Om4U9rm2i2bx5Nwc7RZu9FAuqY2E/W5kpy73
H26kJBBUScZOvd3/zHMZt69JCNmCnf74Dp/VPh5UYbGvhh97VNnY6/EBHnTz
SP8RAWyp2RMzCYd40NGeA8k0p5ptau1R4EFhmkEPBGnxwacoQzUe5NJrvG83
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
PM3/Ay0+j/k=
       "]], LineBox[CompressedData["
1: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
ikLnNrSQ/jots7i2RkUJMsHtpP8HI8W8KA==
       "]], LineBox[CompressedData["
1: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
CCUK6bwp6YXVVSHUyDsgTPp/K7S0NQ==
       "]], LineBox[CompressedData["
1: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
O9xQYt9NCYr/ByZe07M=
       "]], LineBox[CompressedData["
1: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
       "]], 
      LineBox[CompressedData["
1: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
YUC+
       "]]},
     Annotation[#, "Charting`Private`Tag$5817#1"]& ], 
    TagBox[
     {RGBColor[0.880722, 0.611041, 0.142051], AbsoluteThickness[1.6], Opacity[
      1.], LineBox[CompressedData["
1:eJwllIk3FAgcgMdRK2yuDrUIufOsSCH6zWYrJG+USvPkmHVEJXnlJq2zWOLp
RbGuFElyH6mf+5gZkzE5xpV75RqDcdNe33vf+/6DT4Fy56IzP4FAuPKP/zaF
5pfS7VsEhP9YRcmUFn5udxHIkqtEdCJXcGN3Wa6nUTHs8g3QFhRbwbGHWaT5
9GIQTQ/zvv1iGctcg//kuJVAgOb9E8s1PEzrvXnmDqME3GofjT+/xsOoC9dm
5nRKwTioQG2It4Rk3WOGcxulUNk26BWuv4QmrxSGbzuUgYSkR9njwUXUPCAW
NdtQBmTZHR7+kYu4vf2tc+aPcli5PTsXOryAGdS0u9OHKsGKfrj9bREXl5JK
Nb7GVIJ1WltKjAsXz7rSRjvWKiFBj1xeKcPFGYGVy1WsKqDk6LyKjptHfWNL
w0eR1WDBa3hdKs3BaBGnxcClaphLRZumtDkcZPu99XT8CN4ea3SCxhyGeWfL
2Zz8BBVB2bru52axvWCTX5WD8HuBysPyzGmUhF12P2rVQJLDSHQBTONJlUTD
SKcaCGGT8qcHpzB2KXfRn1kD8zqV8j2Hp/BYfKczJa8WlhWuv7ZunMQHVE3z
o/b1YNrzIcrKZgJzCstV8p7Wg6/fAChKTGBH0mkBZXo9eMY1CxvSxlHJ1aZa
2qABKsSU4vaajCNVIEyLINUIJ1xaEryIY7jPuE/yc1MTaAYdD0x3H0GikgvH
dKsJGGUjIu26I+gmwqXV6TaD1uN9zNatYaxm7wwvS2+GjvXHCjsTh5HirbOS
6t8C/G62YVKtQ/iu4FHfLS0qjIYyx3WyBnFKcirG3JEK7IjkBVPSIKp6m59S
S6SCz6QH2XR7ANONRDJG16gQlLf/xZztACa0xriQG2nwRoNVR1LqR+/ROO45
2zaI6LxsltzNxqKz85nKcW1AuNesrhjPRk4uyVqgrg16m4InSefZeMNTovyT
KgPkblmMJtT2IHkrIVBvkQFdDqRyq9JuTBOhhUqcaYci5UPcX8o78ZRxgG2I
XTus91zKaPHrxH6PI3ocn3b4NabctdWoE6U7oifob9ph81twgHbDF4xPsjCL
EmdC+gVhH3IPC0OVGbu/9zFBOj7R2WtPB7oCM3nGiwUV4VejmtLbkJC5XNUX
zQIL23knL2jDJEGZfupLFsxfF5DOGaRjS6uLXG4XC6Y470dy5OioZr2Z6Wz4
BQgBNyitL6k4eUP17SBfJxxc6NLjNDeje0LQp/YnXSBvpM2ttqtDj3H10ZJ3
bKBXMhtWpQpxyI4tVNvKBqUHpODvXu/xUk+UVtsYG4SCxLgq2QWoT/vLb/xg
L6il0bMrVPJRoDBbfF9kL8iHi5hEHM/BpECFUz72fVCRqkj4STQVa6UOJBuI
D0BN4gtqX1UICCuEqX7VH4Ii4eu0+KJiiBWnaWQ4jMLFrQ/dQuMtQOmzRgH6
BFSZTAu5L7LgbmMY5Y7qFLieVWIuTfZCoafoJWmzWTjtHXoyNnEIMgJuTmlf
nYdA74XhvKFR+D1t02pphgs6fLWBGWMTQGANEav9F8GmPl9sL+MbqNxz8bXW
4IFWZhlDZnYGxnjProh8XAbLtT2ZHp85YD7uHpRwdxVIBl+yKu9xwXLsyRE5
uXVgcdQ7x1YWYKqeEtKSvwFOO2JnpeyXQEuiS9bEfgtK9otFzI3wQBh4jv2L
28DJWiA/Pb8C52bJK4qXCcRUSo+ZHHMVeuqc+MiafEQLP8sNX8t1KI1qsJPn
8RGNDVLpLoUb4LLj/hCDwU/8IY9Yc+voFvzmFVAq+lyAWGD3QOLis2342fUI
w8JRkHhA3VPmFe87FMvqi+u4ChL//ymB+Ddl49pI
       "]]},
     Annotation[#, "Charting`Private`Tag$5817#2"]& ]}, {}, {}},
  AspectRatio->0.85,
  Axes->{True, True},
  AxesLabel->{
    FormBox["\"r [fm]\"", TraditionalForm], 
    FormBox["\"Re[V]\"", TraditionalForm]},
  AxesOrigin->{0, 0},
  AxesStyle->Directive[
   FontSize -> 25, Thickness -> 0.004, FontFamily -> "Helvetica", 
    GrayLevel[0]],
  BaseStyle->{FontSize -> 14},
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->NCache[{{1.2125964211248046`}, {
      Rational[4, 5]}}, {{1.2125964211248046`}, {0.8}}],
  GridLinesStyle->Directive[
    GrayLevel[0.5], 
    Dashing[{Small, Small}]],
  ImagePadding->All,
  ImageSize->{1200, 1200},
  Method->{
   "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
    AbsolutePointSize[6], "ScalingFunctions" -> None, 
    "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
        (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
         Part[#, 1]], 
        (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
         Part[#, 2]]}& ), "CopiedValueFunction" -> ({
        (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
         Part[#, 1]], 
        (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
         Part[#, 2]]}& )}},
  PlotRange->{{0., 4.999999897959183}, {-1.5, 2}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {0, 0}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{
  3.746440606668041*^9, {3.747201820659586*^9, 3.747201822430647*^9}, {
   3.747201886464472*^9, 3.747201900576919*^9}, {3.747730606689108*^9, 
   3.7477306139466*^9}, 3.7485175027504168`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"ReVplotl", "=", 
   RowBox[{"Table", "[", 
    RowBox[{
     RowBox[{"ReV", "[", 
      RowBox[{
       FractionBox["r", "0.197"], ",", 
       RowBox[{"mDcal", "[", 
        RowBox[{
         RowBox[{"2", "\[Pi]"}], ",", 
         RowBox[{"Tscancorig", "[", 
          RowBox[{"[", 
           RowBox[{"5", " ", "l"}], "]"}], "]"}], ",", 
         RowBox[{"kfinall", "[", 
          RowBox[{"[", "1", "]"}], "]"}], ",", 
         RowBox[{"kfinall", "[", 
          RowBox[{"[", "2", "]"}], "]"}]}], "]"}], ",", 
       RowBox[{"\[Alpha]cont", "[", 
        RowBox[{"[", "1", "]"}], "]"}], ",", 
       RowBox[{"\[Sigma]cont", "[", 
        RowBox[{"[", "1", "]"}], "]"}], ",", 
       RowBox[{"ccont", "[", 
        RowBox[{"[", "1", "]"}], "]"}]}], "]"}], ",", 
     RowBox[{"{", 
      RowBox[{"l", ",", 
       RowBox[{
        RowBox[{"Length", "[", "Tscancorig", "]"}], "/", "5"}]}], "}"}]}], 
    "]"}]}], ";"}], "\n", 
 RowBox[{"Plot", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"ReVplotl", ",", 
     RowBox[{"ReVm0", "[", 
      RowBox[{
       FractionBox["r", "0.197"], ",", 
       RowBox[{"\[Alpha]cont", "[", 
        RowBox[{"[", "1", "]"}], "]"}], ",", 
       RowBox[{"\[Sigma]cont", "[", 
        RowBox[{"[", "1", "]"}], "]"}], ",", 
       RowBox[{"ccont", "[", 
        RowBox[{"[", "1", "]"}], "]"}]}], "]"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"r", ",", "0", ",", "5"}], "}"}], ",", 
   RowBox[{"AxesStyle", "\[Rule]", 
    RowBox[{"Directive", "[", 
     RowBox[{
      RowBox[{"FontSize", "\[Rule]", "25"}], ",", 
      RowBox[{"Thickness", "\[Rule]", "0.004"}], ",", 
      RowBox[{"FontFamily", "\[Rule]", "\"\<Helvetica\>\""}], ",", "Black"}], 
     "]"}]}], ",", 
   RowBox[{"BaseStyle", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"FontSize", "\[Rule]", "14"}], "}"}]}], ",", 
   RowBox[{"AspectRatio", "\[Rule]", "0.85"}], ",", 
   RowBox[{"AxesLabel", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"\"\<r [fm]\>\"", ",", "\"\<Re[V]\>\""}], "}"}]}], ",", 
   RowBox[{"ImageSize", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"1200", ",", "1200"}], "}"}]}], ",", 
   RowBox[{"PlotRange", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"-", "1.5"}], ",", "2"}], "}"}]}], ",", 
   RowBox[{"GridLines", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"conv", " ", "rsbvac"}], "}"}], ",", 
      RowBox[{"{", "ReVsbVac", "}"}]}], "}"}]}], ",", 
   RowBox[{"GridLinesStyle", "\[Rule]", 
    RowBox[{"Directive", "[", 
     RowBox[{"Gray", ",", " ", "Dashed"}], "]"}]}], ",", 
   RowBox[{"BaseStyle", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"FontSize", "\[Rule]", "14"}], "}"}]}]}], "]"}]}], "Input",
 CellChangeTimes->{{3.746440634234494*^9, 3.7464406389473248`*^9}, {
  3.747202468422739*^9, 3.747202484359954*^9}, {3.747730620808834*^9, 
  3.747730621344499*^9}}],

Cell[BoxData[
 GraphicsBox[{{{}, {}, 
    TagBox[
     {RGBColor[0.368417, 0.506779, 0.709798], AbsoluteThickness[1.6], Opacity[
      1.], LineBox[CompressedData["
1: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
btJdQfz/exLxN+lRIDk=
       "]], LineBox[CompressedData["
1:eJwllYk/1PkfgA1JYYeZbGlV4id3KrIkeX+xIcq2RULYsRhF7iixJfrRtU0T
hcjR2iXFYowlfNw0Y8aVNI5JrjRmjIlxH/s7ntfreT1/wqPmHXzGV1JCQiLg
P/632gWRpTbxpSDxPxYRMaNNUtRXCtF/6bnbJC+gFTy9IMS8DJToW6lfVBbQ
WNyL0zPZZaAXhHujlT+P6ORfnwsv0mCyVKLPhyVGWf0Bx4PZNPg2Tylt0leM
kk658qcNy4GbJrmoIClGbkaHzaZXyuFJvLow7oc5ZP2H2qfLP9NB9YxMdChv
FunvVEgSNNEh4H4q/9TjWbS+/qWX/6AChkWHm00EX1EOIyt0SrUScteYC0dq
RWgutVz34/1K+PGtiZtSmAjZkJmj3UuVEOy8RcpCW4T4UgvOVT1V8O5MSib+
2QwyPeZodiexGgaX/iJzDwjRPTmf2Zi5anB92uKxQZ9GXM61VyGkGlg3chg+
aTmNEiLz9pw/WgtU2vEzY54C1Fm8KqklRMAl/Yv5smoKEWGr5zcGdfDjyfaS
FpcpdFQz2SzRpw4Cel83aC/w0G9zBbPRXXUwo1wgSzbnocOPen29C+uBcJDi
lcmdRDcY+vaHvBqBKn5p4R4+gfJLKjQLUxph1NIy6ZL+BOpOtZLa194INekj
3zdMjCMN8vlq5SNNYL3GcVHzGkcMqQQDiW3NYCVpopnsMYa2HxsgdrS0wM3b
ZU3qd0cQpuEntFtrge/TDKVfnB1BF+VEzAajVuDiZsOmd4+gas7m2/TsVqjN
4PE7aZ+Qd6ThQmZ0G+z6QssznhpGRcV3BgINGFCBAh9oCbiIR+TdtycxYIA/
dGU6nYu0Iu0ttJMZsIOkvjv7BBdlm8vljC4xIDJCZrWoYAhR3973c2tmQsub
QsrX8EEUOfpQZHuBBWHEj7nm+/tRqc1M7r6HLKiZdAm695mDhAWnnaQaWCDt
iT8fl8tB/iGEilotNtC3Mb2dv+MgtzVqjPEsG+Km/JRtCR9QlhwznnC8EzSu
Ku3p2/keWRy7fuGmZydQ2z01TYZ60WCQnrEwqhMekxvCiTm9SLn73kT7y07Y
Qa1RNdTtRY9ST55IUuyCz0fHfAYs36H4fWz8xkAX+BCBr3O7G5GhK40f1gN4
0roNK5uNJHLnqwbu9UDEtWrHQEs2St20a5Dxew+sEtz8n46wUNtbvz0F73tg
79GKsjuaLKTttJrra/YOlh/m4/NpTDTpr/WKi+uF0IvRIcaTbegSNba2k/Ie
Mooe2P47pxEFjeuM0oo40G3apv3sEA0Ne3K21L/lgHnPrSLVJ2Xo7IckA9YY
B/wF58xMVkqRKfPztfHv+sGuUCVZubUESZXkKW5P7IfDsM+RzyhCqTFqFlFe
A3A6Aqd5KzIP1W/bmXZEcQjqMlFO3vYYJKuWoPXRdBgCD1TSVeWL4DdFpm7O
z6OgaCoyoOQ1g/eAE5Jqn4ASneD8+r+7ILQ5wTtYiwdtSVZ3m+f7oCRE/qzy
CQGYfViJbb48BDnXA3gHXWZAIciM2JzwCW5lrf40xxdBICWqQFdyDCR6hrHq
6Fl44oELynSZAM0Iv6tOumJQIShc+LtxEsbET8/J1cyDuzBdvljAA/vxS7HU
0EWo0Xzlw9QXgOMYRW/PnmUglHQ+F9oJgdfofbPt9QrwCmJJwykzYEB4v9va
aw3ijQ2kqygikAUxaXB2Hc5evvz7l5CvYCtwW1B3lsCMOrpcPVxn4UODD85N
H4c18PuLXY3moDypyXOvGId1EP+MHRbPgZ/0lWE2WxIz8dt+KBqJ4Zew6+Xy
6VJYje/SLqvweThA1mOfJG3CgrNTkgdVFqCDqC935Yg0lt4vyIljLMCbolvP
9KU2Y/OCpKEN30W4jtM93T60GUPtoFy4eQlkB6Ptgmgy2Ky/m1p9xhKM/6GW
nBWzBVMy6CjRV1+GZO2dmyqdt2LWzSKH5cJloKT7tZL2ymJaxRu2ZM0VcEv2
YMt/lsVShrqmelJXYPGHvKWsWjlMJveF7gp+FUbHra42JMpjYzoRuR1Rq5B7
7JAKi/QN1ofresweXYXXt68QyPvxmJ1J4CTVeg0SnX9xkBLjsU3+v6LJjDUw
HswpSGQpYArhFJJwcQ1SdZ69ZjkoYm8ecRPC7NfhRt2DVIdKRSxBoynA7Pk6
nFJxzmNoEDCNJLR3B38dLINa3Ql3CJjLbrO2lYMbkLXLW6NdTMBsndlO7VEb
oNH45xNHdyJGw98ICKJvAGV/g253LRGTod+lV85sAPuFYcm5fiL2/z9JYP8A
4pdyKg==
       "]], LineBox[CompressedData["
1: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
MqNiBa5mkRZXVwnEPlvQOSDwv6LMLgA=
       "]], LineBox[CompressedData["
1:eJwd0Hk01P0XB/CxtVgK399xSNmyJVHaVLif9kglIqGSMKGkMvSUrbIWGvFk
WmTJ+qBSlqh8bFnHWOYxwmQnOzNM1vjN73fPeZ97Xn+9z73KDjfNnQRJJFIE
P//bsS4Zi9qRH4H0/5nD0q+rBTmtH2Fz9qiLbdIsXlyXn+Fh8AnC7CPPGmvN
4v4Hb82mEj7B2pJ/9Jrzf+N8st+bSZdcoE58bk1m83B8u9vRm4xcsF+75vod
Cg+HnrowNqGXB8oTemkDUjxss3PX/onFPIi+6OY9fm4GH05V7rlhnw+C/l4k
zcVprC23PnS8Ih9IZ777nkmexsvLwy1jEQVgWaIb07DMxYm18bdGFQvhZcFl
3nIjB8/Q8rS6wgvBL2FJbWsQBx8j1/U1zxfCRquynNQDHDwmNGtZxCyC1OZU
C/n3U1jf8PT+sJCvkJc3q/HYZhI/EXOc9pn5CnYy8npmvRO4s+2vLI8r32DV
ZODyoRsTONArRcH6QDFwG5sy1cLHceP7JUGNSQyfbNdfDRoZxdKw9pKETgnE
GW/dcyJ0FB9Qj9kf4lgCKTx1ylnNURw5kzF9r6kEoh+u6+90H8G7olqcHDJL
gf4xpi2fGMb+tdomOy6Xw0n5Od/K7EGcnlOgnvl3OXjeMfV+QB7EzbRDQmr0
cpCKDdgWpDKIVcnWX2X3VUBRkZOr4esBXCsUqEMivsMvhUvVznH9WMawQ7qh
shLefJMXpjT0YqTqPHniTyVkKkSKp73oxS5inLqynVWgKXbjXbJjL/7atioo
P6EK8icX2saWerCDl95s3L1qEDXpMFDZ04PfvQ/ruK5TC1S6S/rNyC48Ij0S
bnKlFrT3vNpBNezCGl4mRpoxtdB/PMzq9XgnTjAQS+ybr4WHcjkMB7NO/Kwm
3Nnmex1YS1NASekn9up7yjluVw/d9vJ7H/e344/HppLUntaDgmLzkYMJ7Xgy
w+ycUFk9OArZuyTYteNrHlIFxRoMWEPTbTdubcM2f5757J5mQGWZ0kku8weO
F6t7JHW0EQJSgoeVhljYyPC+XcClRqCPPvabz2JhtvvW3ZPejcBup7qevs3C
ss1PBun/NIIqRDx1XG7BUTRT41DJJmDzDnWt3tiCH6kx1q10NMEM7e7mADcm
JkPTi7HbTFBA4dlTZxoxKel3UccTJngmJ79qUW7ENOGN7NpkJizRrEKFhhpw
dY2zQgaLCbRotud5vQaseW4pyWn/v0ANy5W3qq/HQ9c0sjoFWmBOQmznBvk6
7PrMt7iRygJ66ONhLFqJBXlJXTiDBZ8rEyykv33HL89Xk96XsaBCo3dz2c3v
uHYjcThihgXiWbEPdrMq8Na09Cpj61YQdmWtPZVWjse+MBvLFH+ArNgqht2F
Uuw+sKUv910bBERT07zGC3H3pbY1pTVtkJB6fOiETSG2+BGqU9/fBlPBG8Zy
qz5j/bpffw1saIfGdGkfi+QCLJSTIikT0g7IDC/5OOZhmo+ykfflDlCSUONq
rnzApYTci32SP8HeQNE0UTMRiyoHanTpdwMpdc714vIrqDaI0vU72g0lMXf7
zAvjINj6zd5N5ny3Z2ep3IkHQern47Zu3ZDgMtSddSsRFpbHyK1xfK9cNNje
kQyjbMv0BsEeKCHLfT0ekwl0msaWEnoPWLutV6Wa50KkZJ1Won0fzNH7CV3b
EnDoOIeF6IOwPawpvC2EDre+Bzrc1BgBku2FqdOxTMjxELeQNR6HY0vPiotl
f0DifbeR7eenIDUxQyQlkg0P45fOzoxxwCrF3zBIl38Hsxt9vTcNosEJ324O
9YC6p/Pdc1o8kKdTRq8n9EE/L9ZK7NtvMGo27e+UGwCTAVffZ7fmwDHwTmlV
1CCc7qduVVBYgMvnQwPL+37BSLlDQHX2IpSazrRYiAyDjhRr0+HLf+DzoM1z
f7UREAXeFfb0MmgXWhzgyo/C8XGbWRVLEtK65b7dTHIMfpQ5CthoC6CkXQsV
4qNjkBdacUmJJ4BWi99RzUgZB2cRSjeDIYgkW4p87lyagKu37+eJvxRC7G2t
zPrFCdAlb2WYXhFGpCMbUn6HTkKDtLYYZZ8I8iez5kxFp+DLu4evtIVWoZcC
wt6JR6fgvoCWGf3nKrQ5nCKjEDAFoux7J9xzV6MinBavnjsFA6nKMfE+a1Dl
hdW6xt1TEKMpJ1xouRZFfPGjl4txgPrSueqKkiiyU2wLer6dAzYxFxniv0QR
kb3D3OssB+aOpMzHF4shMwkzUdYtDvQNHLpbFiKOWkVeG+2N4ECS4Q75+isS
6MQBD1XZdA5kB1GkyNvWIUWZmYK6Yg6EWF49KcRbhzKQMEOAyYHd7MSMkPr1
aKX5aP+PQQ7QtrzKrj8piUQ+2M/8PcsB/5II2slCSbTJO4Axu5oLp+QtU2pV
pVCXIl7wkOHCQfcqW6kwKcT7y7LzrQoX4jc6qNJ5UsjGUakmRocLquVpz0/b
SqOQ5h1uSfpcoG4r02oulkZ6WU7WTw9ywXlauKlGi0AXHy0Wm5pwwSGHqxT2
lEC9FAOxtLNcuP7QYskkikA5o9oHKvmmWOS2ikcTaObPlosDfIfyKJHU5wTa
pO/gvdmcC+/2zS/GxhHo1V5PkXi+50tXWKmZBAquuhwRbcHvbxaPqKgikEfg
T8ptSy68fHvjWnANgYbJHO5Tvt96Mg6fqCOQrFaDQzbf+TLUhToGgV6fXtkw
xDfbhrjGbCFQWnbzuJ0VFzT65A739hGoOvqQypHzXNiee08heYBApf2JDHu+
9wd1zDv9IpDEenV3X75NNeI+DI8QSN/2U3A+37fdlBQ4HAIVgJ+CpjUXfAwe
zH+c5ve1JTge4TtIovdfTx6BVH/9540937T3b5/MzfH/47t6lMZ3UoAwuWiB
QPlSUcu5fGeedTrks0Qge52HIk1856pUbjJaJhDZontljO/iafX5lRUCkZY/
jK+5wIX/Ar8YhSw=
       "]], LineBox[CompressedData["
1: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
Efu/HoyUqg==
       "]], LineBox[CompressedData["
1:eJwdygk41PseBvBhVAqFf0TFoYORJC1Okfr+SpJICoVcRdnSom5U4rRIdInJ
IULZUmRLqRB+dtNgLHOQRhnMckkxzVgGcebe93ne530+z/Nqe1486iVNIpGo
kv5vFdQW3d6f+hpI/880Vk6lSQt6XsM6xr386yVTeHb5u9wA8zdQpCq/pNF8
CnNuZ9mPp7+BV1F+DgUfJ/E7nz+fjvmVgKqp/wfz8Qmc9tnf8iKjBOxVVub6
3Z/AkYdcRn9seQv6Y5amZnoT2HXrNrMfs29hmszMnfcTYYvn2gPnT72DWE7T
zURFETZUXxH5vf4dONK4BzTKhXh+frhr9MF7iN/aNOmiIsQZ9LRL334rA95h
9VTpYQEWJb016I8uA3ECVTXhiQDv92ke6hSXwdpvZj+DHAV4lDzlVM4sB/uS
LutS2jjescvO7H5EBWwD5bYp6hiOkjsjDBFVQHjq79JR6mP4a+/1/ACPSiBi
zirbZP/Ad4OyNZ13VkGlmm8areE7bi+ak6aMYVj8Y+eLk5RRrAxL3RWMqqGe
sSV/vOEb3qkXbxZxphpE42OWNO9vOEaUKwzuqAaSNu3bz8IRvO1hl5dnXg2k
h6KwJceH8U264cHNJ+sgSvNNVvIUD+cUv9fLS6gDI/oWLcprHu5M2kvWbamD
kz/YKXPneVjHx7lCzbQeSIaxxi7DXEwn3zUiEQ1wbkEzmfGdg0Ujy+WCrRtg
vpwcmlDMwRqdj/nCmw2wYt/PAbcgDg5IL0rnjzZARahBaJs0B6vuYim3NTZC
8LWEpDC9IYx0vMcO/GqEA9YKoijBIPaTEzTXbm0C6fLbe05VDuKK3sXh79Kb
wG4JwTx2fBB7Bm2ZehJMgztZzFPf/xrAhUX3WeeM6BAooLN6NrDxiPJI9EEP
OmQZbvtpIsPGlKCDu/Xj6eC4UcpvZXk/TjeXyxgS0yHm4QBLRasfx32M9nZt
aIa1VS89jk5+wUFDsQIrt1ZQHeHeZTex8Ov945m6sa2QuK+FBuEsPJZr70iu
bYXjLuwZKwsW9g1Qel9FYcCYhzyxv+Yzdv0VF2IiZMCKK+abMut7cZpcc5iS
ZTto1rhxPHk9ePeuG2633NshLMP2syC/B/dd2GAydrUdFg1rqM7/uwerdUbx
Wl62g3n/2/xwcg9+mGRrHanYAY8UK21X6XfjMF3G8gVWBzxtViOnhP+NfaDj
8ehlJtC0xELuvQ5MypwsZ0UxYSb0GCS5duAkmbV99GdMcNy/iRFn1IFpH701
c7uZIHrZWeTW0471Hecyvcz+Bp1Uv/P6hu34v76U/K9SXXAt1C4/v64Vn40L
rWqndsMnYQ/WGadh6YnMfpzbDY6WUruOP6fh5OM0UlFtN5wb5noMu9EwfS1h
8UDUDftMzLboNzfhDS9ymqyde0CWUsAR5DXi0Q/M9trfPoHirqULzNB6fIG7
fqiksBdKi8dqE9yqMdu9V7bmYy9olRpTw1ZVY4dPkUatnF5wfhGgdCcb4x3N
/Ovc1Z9huvCl+eH4KkwuzlZUjfgMAZx+bfXrFTgpRHv31ZMsUAvTayXcS3EN
of7YVPELjFOEJmrRr/Ay7buU/h1sIFHDaXqfbmOa+cNNf1qy4dabftvEU6H4
nvPT7RpHJS4YXdmkchVLU0utTvhL/sWV7ec0vPDM/KhPzxOJVZLzNkafg299
Tjlt0gOAFA/7vYmMhZYkyvrqlgEgGSdH2OZnQYxis0HGqSHQuuK9uoxTAp4s
R0xu4YFxnYV3ikIDXGq463mRMgLuBtN2djIMKA6Qd1Cz/g4vXmpm0PI6IeOG
/4jx8XE4O+46bL2hG+6kzR0RjQpg2NhiSk6hF0hMNqoIFoINaV1iUiwL9K54
X3M0mIBtIvarrukvwJlIPCZXOQl9TbNMlcl+OMg9Gxp3aRqI9Fl64w822HGo
GzQ1Z0D3p8Zr2ZoBGKnzvEUrmAWSibuC+oVBMFLq1rA4+QtYa2T9Q4khWAYT
Hn3CeVDZTlu/M2UIrL67Tq1zIqHzPWZpzms58Kn2jJSroRSa66TYLI3iwNvI
enetCSlUbm10MY3LAe9FgWwGQxr90XW+/9lOLpy+fOOtfDIZsW2c3Hpvc2GT
zwaGrYcM0v0663ikigttyoZygaaLUEx7WkPeFBc+FN5JMSQvRpvFzvmn9Hhw
Q8rAvuXLYtSxzoEWepQHy/qCD1woWYK2RsfYLb3GA+5z7fi0EFl0+bD66phH
PIjXV5cpc1qK3Cy7vdze8ICa7N3kobUMPZ8+dr2MzgPX+H8x5PnLkHhbbEHF
Vx5M78sWp1XJoUdxHYvSBDwY4u69Vhshj6on08dGSHzI3LV5TauHAvKzqfrd
dgUfCsIDlXw2LkdW4ppVo6v5EOF02oY8sRy9j7ITftLhg0lfRm5E6wqku0+x
dqMRH5LWpxS02iii5NN3NN6b8OFm9YMkmzJFdPJCUHijOR8OrXHKpusoocHE
/pcVe/mw50LTCaX7SuhMSsiRaCs+pK311GmZUEIbsdp/ltvyQafuxSO7E8qI
O913+dVhPlA31hp0VimjM8a9srSjfPAWynR8NCDQuusd+wqd+OBZ/FPrfiyB
Zi5FiMjOfDh3x2Hu4EMC8eYrnylIHOhQ0iP/F4G0fFrsVkkcOREYQ31EoDWb
b1ENJC40Fc8mPiHQ1blCur3E4pqF7ud5BKq1CdFIlZjaKf+gvolAfleFx4xc
+JCcdd733kcCub+/aL1d4qwrDIsDzQS6n2P2B5L4nSp1pplBIKdB+vwRiftc
CV9mF4HaiB22gRJThtQtBocI1HHIhVUusXFJsOYzLoF6lXyv1ElsFs4Se/EJ
lJP8a0mLxLaUJ6+GRwgUXkLX/CLxZX8tTYGAQP45tnILEoeY3xa/FhKoEQmu
LXHlQ7jC4N9XJggkx9o+sELipKKsqOlpAhlEl2ZoSZx5S8anfIZA+13EYn2J
84547Q2ZI1Br/LDtZolL1jVq7J4nUGl8dLKpxFVCPfHCAoHG87mDeyT+BwdU
nOA=
       "]], LineBox[CompressedData["
1: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
aMs3
       "]], LineBox[CompressedData["
1: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
       "]], 
      LineBox[CompressedData["
1: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
       "]], 
      LineBox[CompressedData["
1:eJwd13k4Vd/XAPDLNY+X24CfkAohSVSa1i5SNBsqEpkiMjRnKEKpb2SojJUK
pZAGyny45pl7D5kzi8zz7N2955/zfJ5znrXPWms/+zxrvaWzvg07hUIJZqNQ
/t33C6pt8s7+BpT/v2YJ0Zcl7GO/vgH/h1qT/LYZYkHox0eXvd8h9LChRp/t
DNF9P+bU6JvvsKV4Pjtuapr4YXvv9cjlFLCVN23uXDdNRDc5HHKuSoFbzpw6
vT+niEfHjQeH1VLhx9KZtQFGU4TJdvXdwwupsNIta7YUOUlovV/f4XjxBxA3
FyscDk4SyuLCj4YKfsCk78f5osEJYnm5v24w4CfkbaK2JOlOEG/Loq/+lU4H
nv1qBfEy48RkeKrib/90uFenvX99/RihY1vexZxLhy2XZwf/BIwRg9QZowxW
Brief+k4RR0jdu07sfuxXxZoufyMPc49Sjzht57wmMyCO0Etm2fDR4i2RtdE
F4tsqG/8k3xfboTwvRUndW5PDgg8iw4O1hsmapIX2eVHCDAx/2t49PsgIQq8
ZoIquaB+Vzot1mCQ2CP3fLefdS6csjAI057+Szyd/DjhVpsLk4cu+a8c+Euo
B9fZWCbkwZXlrzvVx/oJzzJlvW3m+eDfwDLiedNHxH/9KZfwIh94bmjqXDDt
I5jhB6mbKvKhL5fXYEG8j9hoey5LTLMA+qW7HPvDe4kyqq8KhV4I9WuLinxi
e4jJASF+N91CUNu1+vwq+x5iHTOib8KzECykNr6PU+0hXN4kv+kbLAS+AtaP
xNxuYs2+ZtHqoiIIPpSe5P+3i0AbL40cWSoChp9m4sW0LuIy/1g5Y3sxTH9J
66U87CKyGrke/HhTDGWdjruDNnQRlrfUZl65lcDYUZltpradxOfkx81XVMrA
gnenRL5gBzEgOuCvZ1EGobxDqay+dkL+lt5+hedl4CFb2WrCaCfe7OV/2zVX
BlxH6x4z7rQTIaX+l0wKy+GIidvcpbrfxK2uwLHDppXQftGsw47RSnzTGX23
KbASRAs4knf7tBIjH08ZUhmVoHHz+vkf2q2EnYvIzxz5KuhVzdN+XdpCmCyF
eGhMVEHFomB2Y1MzEc1f7iNyqAZGYkq2/yfWROzf527qZVYDFzcn9kV1NhIt
TkoaI7drYLRQbVYpqZEQYz7prfhUA3prCn1ztBqJ4PBjuo9otVCVvdH9+q0G
wmdTldBKcy2kLcluuTlaT9hCbcTgNRa4vm9nxSqRBOXddEbzExa0WAylDbGT
RDiHZEtZLAvowzpSXk0soqT0ktTHehZkFfvZ3v2PRSgYLr6z2U2CqrbXfM4Q
k/hjJ5/YxlYHkZLg8iK3lrAPuZtTE1QPn5hjzjs2VhPsU+9+Ex/rwcuAcP3T
UUVEni2hJDPqYdhZsnYxuoook6RrBUzWw72+5/OH11URSh/ii3XP/QKeL3NI
T7KSGMxk1TCkG0DCN+3qOqVywqlnc1fK50Yo47rlw3hQTLSbNfLklTaCol/v
4a26xYRBwyOVyu5GuCPj1TQsUEzsKu9z7ZFoAh7bFj6rF0UE9WscbY1fE7js
ZWbxfCokwj3W779t3gxMWir9VUc+kUcXj9CktYJYdN0hyQe5hHpASc4hpVZw
c93X6Ho6l3jPdaf7tE4rPDW2zV4llUv4z9VvtfdohdEPUEZxIYgzv58XRf5p
hSvv6zYfbM0mBj7RJhdy22DxhKa7ZmUGwbfeV/73rnb4wjl5bGAxhSjZG7z1
3qF2EAh7Jbn1Ywrx8Nzrnev020Fs6oZYsVEKwR6Udvi8QzvQ3gmZDyd/J+aX
B21/vWqHEiVjPn67b8TfFqP4avYOCDeZbRWpSiYqwuU351Z0wCmFVqf7mu+J
p7RyxbcXuyC3/ESEhLc3kb5zXeoJJ+y++fHJA15Et5kzLLpjm+ftIrk9iD1J
dMOzYdj82ufVJK8Tf3RN7wpWdQFF2TMU2e4ktHyGql33dIOM84W9PY+9YHZK
+Kb+mh5of5bf1lobDpbNhgS1oheycieTdsQlAF9Uh+PVxl740rhw4NiaRPhm
4iT5u7cXBmk5Iex+iUBt8nPNYOuDybN7uAxskyC2IWP71Z19YHcn8MTTDcnQ
WycT3/auD8TkIpwtD30F+5rBoHTXPyBwUzDK4kkKXC30tXSWH4AWAwdERmWA
VLcO1/T2AWgqupDFKMqAcnbeTx5oAD5FvxkJGsuATShg7LExft/q+d8KnUxo
zHjhFftkAJaNX+8rGsmEA1/ev24cGYBrTazZuj3ZIBJV0qSV9heCVnsaymQT
8NVFwEBMdwjKsuYsG9QZUBFJd006MwQnV6Z1FY8woLdAIvqg9RBs1rDJvXKe
ARLim/9e8RyC0Z2ngvLvM8A375BPXuoQaMqoKmZUMuCMqOd3e9lh2GY+6lNv
mQ/z38fo2QvDkGG945esdwG8dXcYUD07CpQVpfSwsCJQzeWd9bswCoNmUqXm
74sglyOe87fVKBDtUv2SqUXQHtAtE+AyChFuO91uMYtA6s2Fs/2PR6FOO6bw
g0AxRBacLHibNQoSr4xofJ7FECKo/lpUdgxeTtx24zAtAe/oxdOTg2Ow44aG
7PXZUjilmnZVaWIMStb6jt7lKAOpvOvBlnNj0KbeTvWilUFG50BNDec4DLhX
idorlMH4psaTSVLj0Mmo9Kw/WwaWianHL50aB2WrpNnVqWVwIN1Jt+H7ODw/
GO1pfLkcKKx2lOU2AfZs9L/qGRXg25/z1u3+BPxx730qXlgBvJRX7JqPJkDh
K0ROVVeA6BbjgtQXE2CnP8b2vKcCNvnVHk7+MgEP6pQr7WmVoLeHceJd7wS0
TTEpD60r4VlMjOkj/Uk4oix2IJqrCuRuXLpjqDgFs7N9l79sr4Ytu38bRKtO
gdfm9ytce6tBnXJu68COKWix3Gl3VrsaDvrr9npqTQGH1L38HsNqMItVNkww
nQLf+ch16TerIZQc38oeOAX6H6u37P9RDZwann3JE1Pgwj5f6CxeA91TYWf4
s6dh+tl1rm8BNfDuwPbrrfnTkJFGs70WXAPmAVWByWXT8LHsBrH1RQ00beQs
NWiYhgLqysW3L2ug1uDanpcT0xCvnBp/MaEGcr4ek9miOAMjhz+dPl1SA2GO
bAMnwmZg0Hqxl49SC3o99ndDrs7CmoOyz87Z1oLO3Q2J2ndmQUXoGN3EvhYO
rm5pmr43Cyv6dGVjx1rYfej4rvP++Hl7i8qp67WgGLd1YsOHWWDwMBLXe9YC
v82kXWrLLMjtC5cxDK2Fiu67hg2H54DXXdCYml8LJ7qDlKSk5sGNw+ziwGom
VCh1k6Yb50E7YdxGQ4wJR6/vvBelOA/ntPd+uyfBhCPsbTViO+dBQq9/g4A0
Ew7KKN2in5qHBt+zT0UVmKBhWpjL4z0P7fvXh1RpMkGSnDOa6JkH04ILOfym
TBjIt/QqSVqAylizI81RTJAObrB/mrIAP9c4nB54xQRDsxNGhpkLwDf67eNM
NBNyZjUV20sWoEX92HHBWCaEbBEhZ7oWQEe/5sHGRCbsCSPk5SUWYeqaRic1
iwn+9pLVDx4ugrwG81BgExNUROrXaZkvQeXtzsfr6CzoDej1fmGzBClWiwVJ
q1jwim+mr89hCfgrF8r2rmGBAIfYN/87SzB2RmvPWXEWDEwb69QHL8Evo4XC
u9IsiGtpdbpcsARcY8p6IUoskIzvIQI3L8Pn0t51vw+ygA+mLFomlsF8sct9
hxML7hxQ4Pkxvwz3OwPeRTnj9bXOfw5kW4EQ3XMvV1xYwDiSN39QeAWKr68X
LLjOAjf9gGcfFVegLU56eb8rC/7abCq8ZbECKh0ao0s+LKjwN1IQqV4BYRdN
7/fhLDg8ZDIja0RBT7VmPVk5LHi9yofleY6CvF4+PDhCsGByT0Jyy3kKensh
R4wvjwVv/luwDbWkoIX2DdR9+SyYl3/ZwOtCQSr67t1hxSxItGxNH/2Pguw2
yd6VrWEBrcHcIyeXgpSP7+IOamdBA8OazUSZDVnssckbX2bB6IEmibtb2VDI
39IHpSss4M47qf5GjQ1doe54F00hYQex27Z3Fxtybl/fo8tOwvNMWuW1Q2xo
23HZt6GcJJxMyQp/YsaGpsrszEUESCiKW6WaHcSGMu+8PRkoRkLqowIzmSk2
dOr3ckrRVhLi9crF/GbZ0Ov/AcdDVRIiBZjMoQU2ZCdm9kV7GwleQb91MtnZ
EeWn4fpcNRKOhc+rnKGxo8Qc1o1kDRI6P6iuPFFiR0lnNc647CFBqPhl9IwF
O3oWPxdwT4eES5w326uq2NFtqn1nnwkJEtKlvxZq2ZHRZ/E1d86TULVrXbVC
HTu6yjxWz22K87tSmO3dzI4EfOOWNl0ggYu1OmrHH3akldo/ZmpOQtybH0av
2agor0sxJ9WKhO49s2WO6lQ0c/Ge1uorJFhdc08ViKQiS1ltmdfuOJ5aW+rm
V1QkaFieK+JBAt84+qHzhooMFkS4HmB/ucr10+s9FRk6Tnva3yVh0SU4bfIb
FaWXZe/a5klCqPOHzJZyKjJCifNJ3iSUXmHlJS5R0eL9ivBLj0nYaqtUdcyC
Aw1e2WXV+YKEtsvSzknWHKj9fPEh3VAS/K/QaUJ2HGjT8K/qZOz+qwunq504
0EP5D83uYSTEeJTXnfbgQGQvrUk4goS1IQ6tZ8I4kNHxnq/yL0lYyUoYvFjJ
gbIZCrli70ioFlXmv6nJia5H+6gJJ5Gw39GxP2ovJ7Kaex9iiv25+HMxAzjR
xXnzlI/YTz22+dJ0OFFj9dl9Wp9x/3p3LCXoc6Kst2n215NJKEs/MNLpwIlM
Tjy7UPKVhMKLZ1mnXnMiRXrl8KEfJGR+9o5SpnIhrh7D2Igc3I9jRhJhXFzo
pc5VmTbs0/3yEWx8XOjJTqeLsgQJfRsqQ+tpXOikQ4PyJ2x6xNoQLykuFCHH
v/QjlwQHn8RHpCYXWtqj86GQQcL/ztXf9HDhQip+5nfTikhwZ1M8VdHKhYTr
rO4tV5LQq83fINfBhVYX7HFWryLh1KNB8/vdXGh/ssU2e+yNwsnOO/5yIfqo
hmIddoWkeuCbWS40rnJiPL6aBKld+6tu0LlR3rTW8uFaEhhO+sfW6XIjicQJ
IRsS74cWtyNOKdyoLTVkUbYJ75fbHwUDf3KjAdlit6PYFqINzOQMblQWIddw
HTvtiMaFsVxulCxdrVqAfSl15OqNSm607c4rU6tmEvKeWke59XKjgx2xKVEt
JD6vTgw/FONBfdyUNVNtJPS8X/882oMHXU8MbTnZRcKgb8cc1YsHXSmQ+3Id
e9zyrbmdDw/yei9hHYZNkV6vtO0/HrRsHOXYhi0RJsNghPGgEqt5XoduXA8/
6dGebzzo4t9vnvd6SMiyXXdMuZ8HhUYHrQnsw+eDgjhHuhEvyrTbYmv6lwRT
M7kPXed40Wi6pcZt7I3Pt+sJmfIi6jenoWDslJXjQVaWvCgkVv9/xdhkvbek
kDMvOswEF9VB3M8Hg+pWj3gRJU9RaAU7pIOwEczkRTltWs/8h0kIirxUbCHD
h4Z0n5pdGSPh9i3v6x4b+NCxJPaM+9hm+q+lw+T40E9dcY4wbGW++tsVynwo
iWFtnYdd6npIYacmHzK6NHNm9TgJ7MYbHwvo86H6V0vCGdg313bq/fThQ2sd
J1RmJkgweX6hSqCPDxlTNQcOTpMg+Z3vfw4DfOjJ2j/VRti/a3/alg7xoXjD
tlg7bGthUbaHk3woNqRJ8im2039F21fY+BHF+oNOA7a319aIMUl+lCu36unl
GRI+XmGzrtfnR53DVce9ZkmY1Y6bi87hR941l27fnyfBIzPapyCPH+nr8YYF
YlPUIgX7C/iR9djsp1fY3NKB69XK+dG1+Z7kdOw1c3d0C37xo/KvlK1j2NuT
jkX8GeVHNh8c+cwW8Pesnty1bYMAsuM7fGvrIgldPQfvMPwEUBny4/++RMLB
6Kp3ik8EkNovf3cC+805k8qQpwIooNW8vRzbrPyqrNULAWSy/OJRN3bTlzcV
1BgBVM5z1nD1MglM92WZQzkCiL/je8cNbIZIRmnxpACqjDJdo7xCwrt92/5X
aSGIdtDXdnhQ6oBxgs9nwVoQfWyJ2PQQu9O8a2CznSDK2H7MMhB7g/eLjIdO
gggCjAveYscWzRkjd0H0s65cqQg77iQj/PtzQVT6PTZAEM/F8RYGayKLBVGt
ZklJKHbSg5sitluE0NmYgMvP2etgcO8F7weqQohqYVEQha08qT0Rs10I6SdI
isdgf7JcVdeuKYR0my58+YodD9/DTXSEUIzzi9Aq7Ni5UekT5kJodbOsDjcV
z+GOV1Q0goUQc0zd4Aa2n5HVUeqUELIRr9u4n6MO3p1sMbWZFUL303OitbGz
dI2ciheE0Min2lVHscf3HQ5+wi6M6o8+GjqLbSqn9ItOE0aagqXGV7HVZsYt
NyoJo3KKkGwMdlu4t9shC2H0Phinw1kHGi1vP/pVCiOn/Hc837BpKnazyTXC
aIPMdPMP7EFPlcMNLGH0grIrIRM7dkNmt0KTMKpoeb6vEHuVAyld1iuMDM6K
qDVgz3tQj3JRaKh9ZNl0CbuRf0feEXEain/lUKvNVQfhm6OSKo/SkFb8fEcJ
9uSETpzPcRoy1XVbV4l9Mmf8peZJGuqZEjeqxeYy0POP06chlmtxWiP2TY85
+7vGNJSavld/AFu/+qzCFlsaMjMMqeHjrsNz5qoYf28acnhpKqqL7ZkbEH40
nYaOvnA1zcQeaM19PpdBQ82Cop9ysM8sTAR9yKIhhfQvk3nYyjtMHlNzaUhf
m/9+CXZDgpxbZhEN5Yzeu1WHrRZGnFciaUhb5UP9MHav45gU/wgNRS6m3ZXm
qYPj/zOKK9soggQjvg/dwQ7vVsk9LyeC2JGElTt2dxJP86C8CNqQ71R/F9sD
ZdGElUTQep0/P7yxE202eBhsE0EjR46b+2PzfRnTb9kngiQmTE5GYxdrP6UM
nxFB0lPiafnYB5yKz4s8FkGaajc5uHlx/Rv6dQr+E0FhgxPKvNgpWgJqt/1F
UOBmVwN+bDnx0zytgSJIy+B1pDC2QEFTSnyoCOrZ8EBEDLtBfFgQxYogKdfj
MQrYLoWrcp0IEeQRlG15BDta0nJjxZQIipluT/DG3r1dScVyRgT5XqXq+GKT
upM7Z2dFUHhLUdsDbJ7bD49uXBRBSooaAo//xav9dM2DXRRZLVafCcRGDydy
lYVFUd265YQo7M4R3wsBCqLIOY3b7Dv2xvwPoSfOiyIpO1XJ39hVyrOxLaai
aMfiu4vt2HdCj3y3NxNF0jUcsR3Y5Zf7qx9aiCKbggj5buxrNCVewlYUpQWt
l+3HJi58dt96QxQ5/HHoGcc2mU25SAsQRQa1vz9x8tVB0BaGIjNHFLmf+Gim
gB2/6zyvd64ochVmuG/GJrQm+7YxRJGZZX2YIvawsVxccKEoUnGcwr+JOjj6
8D/p0xWiSDlFTmkbNtdv/VU1jaJITlsmTRPbPahrqXJSFOVYhknoYV+a4Kgt
VaSjvf76qnbYZp+0q0yV6eic2Qj1MvYZC9/ykS109Nz1V/0/61RTi1Zvo6OX
I0/cHLDlEtgzLXbSkZZ7aLoTdo8lJW5Oi47Y3VPX3MS2Zi7c2XyBjt72S56+
j235dVzmcSAdzWSu7QnDvuJtsKgXTEebZApiwrFvGqT8EnhGR/P3MiwisB9N
3XwaFEpHnG1+zZHYnzXnFsJe0ZFmw8+iV9hzeSv17xPoaNUlikfMv/oxBQIK
inE+yl8vfcaOjHG0e1hKR0qqv4WTsWNuVGkdKaejHUEOaf/8Y03QfHkVHXmW
vuX+it1iQrdj1dGRdv7z19+x5bvEtTq76Gh4lVhyGrZqiptUbA8dTfteO5GO
vftB85xNH14vVn3on4/Jv/rSP0BHh9XGFTKxrznISI2N0ZHYHsuIbGyPvffn
vk3QUcAvXvUc7AeCneSNKTqiR6yr+ufw5Jgns7N0dCbrCSUX+50Xh23GPI6n
0Rf+zwmnbQ56LNJRKttX1TzsFNmidfuX6Wg8ob/4n3Mm5OZWVuioOjvYjIH9
f+WyQM4=
       "]], LineBox[CompressedData["
1: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
5syJbg==
       "]]},
     Annotation[#, "Charting`Private`Tag$2366#1"]& ], 
    TagBox[
     {RGBColor[0.880722, 0.611041, 0.142051], AbsoluteThickness[1.6], Opacity[
      1.], LineBox[CompressedData["
1:eJwllIk3FAgcgIeZtEWSWse2bMrNQ1Ir4jclObaoTZItVwydjkoRRWwzIpXS
0iokWZHcXpKfTINm0BzIuGWQaRyTceVor++9733/wafhE/irnzSBQHD9x3+r
P6oklRVZDIT/mEXFtAZp8YdiqLjUvTCVMIPz8uW5QTtKgEhyzQteN4OC6Kz9
ExklYOa+mUzLmMZy/yuPxk+UAtXEc3UoYwrTO07ZBjaXQn8aSYV7bApp+46I
xkzL4MJm90LOnATdt5hZjM2XwVe538STlhK0earRf8arHJY7SSW86p9EQ9XV
tNG35fCzd+W3wBuTuLQ00iq6WQGKaqefrxB8wUxmevDnn15C+4P9rJOlYpSk
lOn3JrwErUXbw6oBYtzjzxrgzr0ECyPV75XVxSgizhyq5FXCqpX7Hty6PYHm
Vk4WcdQq4Mb3zUSqjmO8rO9khKQKis8X9NpmjGEPPyw/yPs16GkyNlnoj2Fs
aLa6m2U1nNYdj1W3G0X2iwVpnXEEdZ+RcxGZn1ERVnisMqoBpw3ZxVbWn9FS
+54F1bcGfHUiBbu7hZgoyZ0M59QAyS+d0aghRLM7rX4+eW/gEbf2zt3aT3iV
aei42ZMOt+fmSikuQ/hXUYV2XjIdQuZKryivGkJuyi6iViMdxsw/BCjUD6Km
v1uVyva3ML8j2bjIehCZxFgjwloGpMpHj2ZZClDJqlPxfV0d8LhWuzX9PiJZ
kzJuv1gHXgeOuO00+ognZMWs2i31EKMhb683249VfJnfyzPqgSRX32ST2I8+
oaYzD8MboOG+bc46eh8WvIjrPG3EhMSMTYvn7/egUFGY4OjNhI8itauXbHpQ
J9TRWvceE0LorPUUcTdm7JDNHJhjAiFCRyJ07sakdwkUdwYLdjlT7yoqd2Ho
wC2x3dEmSPGtkyEx+Vi8Z+Kx1q0mkBfkJ8fG8HE8d78LsbYJ9O0V4/Os+BgQ
tKaiWqcZtK03RveWtKP7YlLE1slmyDd4bUnL+YDpsqyYNbZsCNDdPu+d24rW
VpePRnmwQXOTU9XwqVbsOmuwdfwiGxp92maGjVpRhRs/1PiMDYU51PXO5S14
J2WvA02BA4zshIeRTB7GaDXLf+vkgOG53JYCGS76AydVFMKDq/e53LXXm5Dw
eLqyM54Hym7vR9iaTZhC+rGL+YQHcbrh9ipvG7HhHUU9t40Hy5/ZVViRGlHX
ZeGxn0ULONurXc+/wcRPATr5PVKtYHVCgxFdUI8nkyKr2bfb4DnFOHRiTy2e
HdQbKC3gg8W+hzaxokLs8+B/9+YdH4oZ2vf4vxTiwXaaUZOADwKzVtOwwy/Q
nDUcNvhDBzQ4xtc4dOQjsShbQYnaATV6YaHpohxMidCwvujZCUG0uKiqa2n4
Zq1q6naFbvCqWVf3NDMaVmrE6vSa94Fo2+gZKr0EEhVY+pleA7Bs+Bjdrr8B
fDpdkNg4BI+iGGOeQh4EM2J9AnWEsJs1MZLQ3gFFQXIHVRxGAbNcAjm0Psi8
fEpocngCTNicJzKcAbiWvnBAIhJDRDVByYEzBAReH7kqfBIErvMtihUjoH2e
cslFfwoMk+MXVbgiEEz94Sr7ehpSQrd8yikcB8fBk5FJwbNQO63KdjguBifB
bQN19a8gN2FMDBJ8ASHdJ6rh+TyQZdMorxwkYLSmTc3GcxEoETslVNYUrIQp
767JJciLVsnfZToDdqPuMxsPEcj36IMuZWWz0F7rK+VuKEU2a61Jlt78Fcpo
bz02TEmRw6z/pC5LmgfKsgt9zc3S5JvX1dOnVy/C8ZDLZXIPiOQVJlKCkXNL
YOxv0LzXm0T2ZC2YH2J/A+Nt1A2pESTy/z8lkP8GkhrOzg==
       "]]},
     Annotation[#, "Charting`Private`Tag$2366#2"]& ]}, {}, {}},
  AspectRatio->0.85,
  Axes->{True, True},
  AxesLabel->{
    FormBox["\"r [fm]\"", TraditionalForm], 
    FormBox["\"Re[V]\"", TraditionalForm]},
  AxesOrigin->{0, 0},
  AxesStyle->Directive[
   FontSize -> 25, Thickness -> 0.004, FontFamily -> "Helvetica", 
    GrayLevel[0]],
  BaseStyle->{FontSize -> 14},
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->NCache[{{1.215596673924133}, {
      Rational[4, 5]}}, {{1.215596673924133}, {0.8}}],
  GridLinesStyle->Directive[
    GrayLevel[0.5], 
    Dashing[{Small, Small}]],
  ImagePadding->All,
  ImageSize->{1200, 1200},
  Method->{
   "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
    AbsolutePointSize[6], "ScalingFunctions" -> None, 
    "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
        (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
         Part[#, 1]], 
        (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
         Part[#, 2]]}& ), "CopiedValueFunction" -> ({
        (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
         Part[#, 1]], 
        (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
         Part[#, 2]]}& )}},
  PlotRange->{{0., 4.999999897959183}, {-1.5, 2}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {0, 0}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{3.746440640060033*^9, 3.746440698662326*^9, 
  3.7464407493276854`*^9, 3.746440916581668*^9, 3.747202390841036*^9, 
  3.7472024849386168`*^9, 3.747730622793737*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"ReVplotu", "=", 
   RowBox[{"Table", "[", 
    RowBox[{
     RowBox[{"ReV", "[", 
      RowBox[{
       FractionBox["r", "0.197"], ",", 
       RowBox[{"mDcal", "[", 
        RowBox[{
         RowBox[{"2", "\[Pi]"}], ",", 
         RowBox[{"Tscancorig", "[", 
          RowBox[{"[", 
           RowBox[{"5", " ", "l"}], "]"}], "]"}], ",", 
         RowBox[{"kfinalu", "[", 
          RowBox[{"[", "1", "]"}], "]"}], ",", 
         RowBox[{"kfinalu", "[", 
          RowBox[{"[", "2", "]"}], "]"}]}], "]"}], ",", 
       RowBox[{"\[Alpha]cont", "[", 
        RowBox[{"[", "1", "]"}], "]"}], ",", 
       RowBox[{"\[Sigma]cont", "[", 
        RowBox[{"[", "1", "]"}], "]"}], ",", 
       RowBox[{"ccont", "[", 
        RowBox[{"[", "1", "]"}], "]"}]}], "]"}], ",", 
     RowBox[{"{", 
      RowBox[{"l", ",", 
       RowBox[{
        RowBox[{"Length", "[", "Tscancorig", "]"}], "/", "5"}]}], "}"}]}], 
    "]"}]}], ";"}], "\n", 
 RowBox[{"Plot", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"ReVplotu", ",", 
     RowBox[{"ReVm0", "[", 
      RowBox[{
       FractionBox["r", "0.197"], ",", 
       RowBox[{"\[Alpha]cont", "[", 
        RowBox[{"[", "1", "]"}], "]"}], ",", 
       RowBox[{"\[Sigma]cont", "[", 
        RowBox[{"[", "1", "]"}], "]"}], ",", 
       RowBox[{"ccont", "[", 
        RowBox[{"[", "1", "]"}], "]"}]}], "]"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"r", ",", "0", ",", "5"}], "}"}], ",", 
   RowBox[{"AxesStyle", "\[Rule]", 
    RowBox[{"Directive", "[", 
     RowBox[{
      RowBox[{"FontSize", "\[Rule]", "25"}], ",", 
      RowBox[{"Thickness", "\[Rule]", "0.004"}], ",", 
      RowBox[{"FontFamily", "\[Rule]", "\"\<Helvetica\>\""}], ",", "Black"}], 
     "]"}]}], ",", 
   RowBox[{"BaseStyle", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"FontSize", "\[Rule]", "14"}], "}"}]}], ",", 
   RowBox[{"AspectRatio", "\[Rule]", "0.85"}], ",", 
   RowBox[{"AxesLabel", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"\"\<r [fm]\>\"", ",", "\"\<Re[V]\>\""}], "}"}]}], ",", 
   RowBox[{"ImageSize", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"1200", ",", "1200"}], "}"}]}], ",", 
   RowBox[{"PlotRange", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"-", "1.5"}], ",", "2"}], "}"}]}], ",", 
   RowBox[{"GridLines", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"conv", " ", "rsbvac"}], "}"}], ",", 
      RowBox[{"{", "ReVsbVac", "}"}]}], "}"}]}], ",", 
   RowBox[{"GridLinesStyle", "\[Rule]", 
    RowBox[{"Directive", "[", 
     RowBox[{"Gray", ",", " ", "Dashed"}], "]"}]}], ",", 
   RowBox[{"BaseStyle", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"FontSize", "\[Rule]", "14"}], "}"}]}]}], "]"}]}], "Input",
 CellChangeTimes->{{3.746440707908413*^9, 3.746440715563417*^9}, {
  3.747202489493669*^9, 3.747202497501773*^9}, {3.747730632513077*^9, 
  3.747730633057495*^9}}],

Cell[BoxData[
 GraphicsBox[{{{}, {}, 
    TagBox[
     {RGBColor[0.368417, 0.506779, 0.709798], AbsoluteThickness[1.6], Opacity[
      1.], LineBox[CompressedData["
1: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
AdPziCU=
       "]], LineBox[CompressedData["
1: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
5f8CFGqyNQ==
       "]], LineBox[CompressedData["
1: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
       "]], 
      LineBox[CompressedData["
1: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
       "]], 
      LineBox[CompressedData["
1:eJwd13c8Vt8fAHA8yPZ4ngayiii7aGh9ThQpUSpFIlvKakqURPZskEoSIlFf
GYVcZM/nWtkjKyJ7J7/jd/+5r/fr3PO5r3M+n3PPPZvMHfWtWJiYmKKZmZhW
7/O0Gi7dojRg+v81T9BelrFM/EiDN+uZfc8NzhFLfJlJTvs/w7b3Y1cSnOaI
vgdvT47HfIY226ChkH+zRKbNveixy+kwOCWTsVlmlnjdeuWIY0060Iv7Wk4W
zBC+JwxH/uzIgEgbF/3NpjOEkYrq3j9LGcBy7PenwbhpQiNhU4/9pUywTJwM
9dCZJuSF+H1HizKB62eQGPvcFPHv31DjSFAWTPIEBB06M0W8qXjt/Fv8K+yN
CK7rk5skpiMzZLsCv0Ib1Bf590wQmjaVvXULX0HVf6L1/vMJYoQydza7Phvi
o9oWBvgniD0HdPf6+eTCe63LWVP0cSKA23LKbToXtHX8jkenjRGdLXc+OJl9
AzuDLZ8foDHC61a82Pl9eaD2loP7iNUfgvHxL4vMGAEvKb0vLWtHCBpwmvAq
5oPOuqT9G5xGiH3ST/b6WOaDg9OABpU+QgRPJ025kvmgl2Ks6276m1ANa7Qy
Ty4AZbewE+uow4SJyyX19p4C+NIQZ1yUP0T4mP4WMxAshGfdJYqS14eIVgXm
Zm3vQvh+pqYqvf0Xcb9C/th20+8Q3eWjl1IwSCT+lyWd/PQ7XJV58sjo3iBR
F6lO2VL1Hf4ESDBO7h8kpGzO5wqqFYG1Bq/2WM4AUUHxUmSiF4OyQyDTcFk/
MT3Mx+2qXQyG6MjLuuB+QrTu+eDU/WII/nd6KOdsP+EU8zFmcKQYuFD32LWB
PmL9gTZabUkJNGmjxDRaH4GkrMeOLpfA2p5dYZ1dvcRl7onKQpVSiFsoTm9K
6SVyW9i9M2NKIRdpNq/T6SXMb+2Ye+VaBjw7RpwPhf0kUj/6tV1VrIDb0/J8
tnt7iGHacOAxswqINSxqr1jbQ8jcOnZw65MKSNspuj9urJuI2c/9pncBP7+J
2/pTQjcRXh5obVRcCdf0QyOHhbqJW70hE1rG1eDRGpD6b0snkaY5HrslpBr8
5QYzbw52EGNJJ89QCqtB4sGbj8+SOghbJ4GsPJkaiNUWtC1X6iCMlsPddk7V
wHCErNULjXbiNXflQ4EjDPA9RW91e9RKHDxw19jDhAFGGuxrd55qJdod5HaO
3WYAReRh4RWRVkKwLmCg6j0DQukcDcfTW4iwSB1tXyoJylYHmV8NNRMPt9Tw
rbSRoL65fF277Q/CBsjnI9fqoV/2AMfL1AaCKXY2uy2gHnxfzb0KeNRARLKK
tFfE1cOwsUhdkUkDUVZuLZbUVA9/ftXQqdQGYuuZv7FWextAf9KGfexmPfHL
VuZDJ3MjeJ9j4mXXrSPswt3zGKFN4ONKZknJMgiWmdguIqkJ1DKGjRI5GUTU
uTKmj4VNUEZ+98uuqyUqROgaQdNNcNSq/ep/+rWE3LvEUu3zP+DTVLcM37ka
YiSnnlEo3gyuM8IHYp2qCIf+bb3pqS3QZBRoOt9dRnSbtHAUlLdA4fLljq74
MuJ0s69idV8L/Gzf4Cx8pYzYUzl4p1+4FSpPPL7jPVtKUP6Lp673aQVjbR15
EYFSItJt08Hbpm0wdKzu0eszxUQBXei5GrUDZoVU7ipSCwnVoLK8I3IdsPfg
WSn+zgIigd2l75RmB9jeol9Q+FBABC40Kdm5dYD0tXpjCe0CwqDrSUnUrw7g
oW32rfPOJ4bfU6eX8jvhqplR0Rw9j+Da5CXTtacb5OXmnqXe+EKU7Q9Tunek
G/KzZZ3qJL8Qj85H7xbV7wY7TeFi7fosgiX0i9aFK90wX70lSVkli1j8N2Lz
41U3VNUelWLMZhC/288m1rL0AGuMrFpP4GeiKlJmW34VtvRcaWdPChFMrZR9
c6kXmEonJD6wRxFfd4tm6Dr0gq+W2bT6VCTRZ+IIf+/2gotKbMhgdwSxL4V+
5lxEL3TXf91+hnhK/NI2duet6YXQh2vuhPuGERoPR2vv7OuD0OMvO8lnnsT8
DP9N/fX9kN9u9Sm79Q6Yt50hKFUD0CAmnKue8ga4XvTYO7cMQBn9W5+MYCyk
GTmIdA0MALXdSzHVMxYorT53spkHod2tofy1wVuIa85Wcd49CKpP7W5sXoyD
gUaJxM7YQRCpq/i9rJQIdoyR0K93foFy1yv+FMNUcC72MneUGYb224sWK23p
INanyT6rMgwupZwcYqwZUMnC+d4NDYN1gH+xiHwGbEFBE36GwzCZoLqSfTcD
WrKfesQFDEPdzdPe7kKZcOhTQnTL2DBIMdNlVPSyQOBFWavGl9/wQbiNIhL3
Ff5z4jktqD0Kac9H284tfIOqKPqdFINR2B8jfZpfNA8GioRfq1uOwr2E7oBE
lAfCQtt+X70/CnFhvKkePnngVXDkYUHGKDCN/HpbQSfAgHb/s93mP+DXvlbF
gZ4Pi58n6N+W/kCMtUVfw8YCeHP3yrDyuXEYy01gfcL6HZTzOed9Lo7DwbaN
S3Tad8hnTWTrshiHU5IW5/3Ev0N3UJ9EkNM4uGvQLp/Z+x3EYi6eG/Ibh5oL
A1VXHb9DVJFe0ZvccQgwm29I+fEdwnlVo2mbJyDYl9yQFFMEnq//npoemYC+
pLQ9SutL4KTyF2e5qQl4v6uyg29TCYgVXA8zX5iA8GKQGpArgeyfwwwG2yRY
pXxKvXuoBCa3tOiliE1CnPIXO42rJWD+IeOE9clJOKGZOXssvwQOfXXQbv48
CfL6/jQr81Jgqu9Gua5TkLjJ3YI7tAy8hvLeuD6YgtZTeXLFz8uAk+kVi5rv
FBRxW1bfelsGNAXDooyn2C3uWQWZZbDFh9T6+GkKeMwEu2fby+DYvkLd2IEp
sOTX3dsnUw6P37419tWfhg5Hx/S5rHKQvmHtckZ2Bj4sJ68xKKwAhb1dp18r
z8B1fi2PT+UVoMp0Xml41wysXclUYiMrQD1Qe+C+xgx8iUo7/KqrAkzi5M8k
G8/AHZbkAt+/FfCsYVKJJWQGnIUdyJM7K4Ft5/3Bj1MzcDe9brQwthL6ZiIM
uL/NQildbDPNoQpiD6lc7/g+C5a99Psvb1SBaVBNyMeKWeCTfXFw090qaJVi
Kz/dPAvWMTNzQr5VQJ6+tu/l1CxEeyo0lr2pgrz/dCQUZOegSWrTHomGKoiw
Zx7WjZgDYd2wxgbVajjWb+ce7jwPLQZNHzQGq0HTXfLDYZd5yLsXZus0Ug3q
69pbZ+/NgwxdloicqIa9R07suRA4D+pMBsfbl6pBNl5pSvLdPOz9m6yhRK0B
bqtp24z2eRBW/lK5Zk8NVPW5n2nWWgC3dRqWL7xqQLcvVE5MbBGCGD9N2Gi1
UCXX12AstQiTH3Y7/V5XC8ev7773QnYRXlq2WNYI1cJRlk6G4O5F0H0ewRyw
qRbUJeRu0U8uAjUv6XiXci3sNC7O5/BchOw/37bP6taCSMPC2an+RRi7vd92
1LcWhr+be5SlLME3gUkJ9+laEA9rtgtOXwI7V8HKyblaOGOie/ZMzhL0mCo4
Wy3VQt68mmx32RK8dYrrkGBmQLiCQMNc7xKcFR3X/L2GAfsiCBkZ4b+gqXcx
RW0dAwLtRGq9H/0FVy9p3WJFBigKNIlqmC7DneYrPc0XGTAQNOD51GoZVhIL
fkuZMuAV19zg4JVlUD4/1O94iQE8rIJpgS7LYCnDm8JiwYDhWUPNprBlqHoq
HL3RlgHx7R0Ol4tw/4stRRuvMUAksZ8I2fYPpu++ZRh5M4ALZszap/6BOHuy
5koiA1wObeXIXPwHftwgIIX3+QGNC6khzCvgKL2hSSuZAYVHCxbV+Vdgx7Ko
fmAKA1z1gx4nya5AZ+YWec40Bvy22lJ8y2wF3vFlydZnM6Aq8OxWgdoV6Hhw
8FBqJQO0Ro3mNp9lQlJJm/hShxkQvfZh/f3zTGjQZfTT498MmN6X/LH9AhP6
tKvO12WEATH+SzbPzJnQOuPoVvjDgEWZl82cTkwoX3CbUPEEAz6Yd3wd92dC
zqY3I97PM4DabOqWl8+EuHjLZAbYSGgutGQ2kmdGyYrJBupiJIwfahV2V2JG
hnb3J0ax1xToqcbsYEZqBQvLkeIk7CL22gzsYUbRc8n2oxIkPMmhVl87woyY
/R+kh0iSoJeeGxlgwozOv3+nnr2VhJL4tcrfQpnRA+4Ky/c7SMjwLTKRmGFG
jXdkqnmPkJB4rFLQZ54ZlY6cbo3DjuKpqxtdYkYaGb9N9mmS4BHapZnDwoJO
6h1kWGuRoBO5qGhAZUFtAR6XsrRJ+PlOeSVAjgWNBaZHgy4JfKUvX8+ZsaCQ
62ZZYwYkWLPd7K6pYUHrfdGJAWsShMXLfyyRLIiv9lSagQ0JNXtEa7c2sqBI
45msEuxdV4u/ebaxoCEnpYR4WxLY69e92PWLBd37wL7B1I6E+JjMs9HMFCSp
oBCcb09C3775CntVCqp7L9QPN0iwuHY3gyeKgvwo7RzIA8fb0Zmx7RUFHY9Z
oT3H5ppEmZoxFBTa+K5uAvuTM3uWRwIFlT+4cz32AQl/ncK+TKdR0Fw0cYjp
IQnPHN/ltFdSEM+urUdSvUkov1pf8GGZgs4/OO/R6E+Cko1cjY4ZK1qysF4y
fkJC52VxxxRLVtQ0T9NMxg68Sqfy2bKib5Hm2gvYQ85Lp2odWNGI+5Drk6ck
vHWrbDzlxoqCHe+Hlj4jYUP4lQ6DCFbkl2iVK/GchJXc5JFL1axoXHgmP+YV
CbU0ee6bamzIWDRSsi+ehIP29kMv9rOhDRFlGmIJJKSWppYWAhvy1Dq+4zx2
sNt2L6omG7J/P+paia0zsGs5WZ8NNbyRIz6+I6Hi66Gxn1fYUP1jrd2OSSQU
XzpXfzKaDTk0Ci1XfCAhJ9XzhTyFHf24zKH8Lw3nQ+escAQ7O5IcDmbd/pmE
U0Myz5m52NHBztokC+xByepnTVR2tPaJgk0ZNv35hnAPMXYUN82eFpJOwpWH
H3wb1HD7FrmUdZkkbDzfdNPNiR2xZl42ZPpKwl1m2ZNVHewoSO/aesM8EgYO
czdL97Cj+MOWUR7YJ31HTB/0saPHmzYuvsOW4v/ouOs3O3rAYXRiFrtKRDUk
Zp4d8bi/0wwjSBDbc7DmBn0NoofejcnPJ6HQQV9HVHsN6qTIVbJ9x/XQ7nrU
IX0NCmjUuaVciuvldhJvSNYa9KDViDiBbUZrrvuYvQZtK9YYs8P+cnTnxYn8
NeiowhIlHts6Y8z5RvUadCRGlyJYRkJBsOUL14E1qHe84MoCtssh3T+PBDkQ
y6j8tfcVJPQnbHry2o0DzYiwhpdXkzDi1bNA8eBAjckjcr3Yk+ZvTG0fcqBd
z4dT/mIziW+S2+7PgSrv3LNTqsHrJ0KisDCCAxXYXC57jH3SR3y8P40D6btJ
yZ6vJSHXRlRHfogDDfxkF2Qw8PdhqxDr17OcqJ6Lbd6jngRjE+l3vec5UcVN
re7H2FJPVI7xGXOiPu/lrATs9JUToRbmnEjqzfLOKuyGJk8RPkdO1Hqt1X59
A86n94iqhS8nku083PIOO7yHsOLN4USa++z+5TWSEBplXWomwYVsg/wNC36Q
cPuW53U3SS5kE2Sxj4Ftoh8tHiHNhV7Y21O7sOW5mm5XyXOhCA148he7/M6R
rbvVuNDJe5ysu5tJYDGU8uPR50ILTwODkrBvbvh5LOshF9L4JRnm3UKC0ZOL
NTyDXCh+Q7T3RnyuE/nMtfHKMBcqCH/puxW7i8yyKR/lQi89rtzfiW3JT2N+
NM2FZrLeHdXDdvAvUVlh5kYvneuOeWJ7eig9nxDhRid/PNswgJ10ldmySZ8b
jYpQxOLbSZg/HL/wOo8bScu+EKR0kuCW8/phUQE3agkXT+PBZtoRxTtUxI2S
J9Q01mOvEQ/ZtKOSG11MPaGzDXv9got20Q9udDk8Z1EXWyVF5/mvcW7kcGm8
JhLbYd30nu2SPCiz3d1buouE3n51l0IfHrTbbX+0XDc+t76uiZUN4EEWTEbz
Ktgx542qw4N5UFy157H92CaVzpstnvKgge1rf+hgt36KqaK85UEOkuzh9th1
d/9JHMnjQTGHQ5+mYBcKZJeXTvMg3jJZtq09JMQe2L6x2owX7VpoY+L4idt1
uR4uWfKihSnNLXzYP017h7fZ8iIp7d2H12JLej7NfuTAi9JP5zhLYMeVLBii
u7yoe+ePgD3Y8XqFkZ+f4Hgznvk22Ilmp9dHlfIijotLxwuxU7xvCtgo8KG6
LoUe2168HvZf9PRW5kMVZS3/2WPLTx+eeqvCh3KYT9y7hv3efG1jtxofEmKP
5HLDToTPkUaafMhpo/REMHbcwri4rikfErysufAZO8r+quLOMD5kskaQbwnb
56zFccoMH0q2vs16rw+PV6/d2GqeD830BO30xM7VPutQusSHXnyJN3+EPXlA
KyyAhR9d9vn1KRjbWFruB53Kj2ROS4q9xt4xN2kuJcePcvzfHSSwOyM9XY+Y
8aMUUY7//mLvbH+T5FPNj64qugjZ95NAVbSd/8jgR7uSVRSdsEfuK2o11/Oj
5l4ldB07TjKnb2srP/pv7/SFO9hrrzSIVwzwo4GBsWve2ItulOPsTFSk+qZU
4hV2C/eugqNCVLTJWzmwAjty24uU6uNUZOG/W1RsgITpKc34hyeoKKU/pkwC
Wy9v8qWaHhW9ir7hLInNfvpYYLw+FTEErHK2Yt90W7BzN6Si5oZUZRVs/dpz
WxVsqKj9D+tbLWyem2vfBnpSkUrMgSwHbFvIj1L3oqL8lcdrnbG/c14Nn/em
otKU147XsV2jvz+w9KOiswVdYi7YQ6XXLu0PpaLNA2D+ALtEmBQdeUVFB8zN
7z3Gvp8fFHn8KxXtOdEsnIk93JH/ZCGbimQkVbd9wTZYmgp9l0tF2mFRO7Ox
5XcZ+VHysaOCj+ZhNydLu+aUUFFWjua5EuwdEcQFuQYqivAPFGrCHrCfEOMe
w+OzKTgwjX1i49n4CikB1LZVyVxuEM9fn2L+BWkBFDL1u08euy+Fo21ERgA1
GJy0VsR2Q7lUfjkBFJew1mo79gcrSbfT2wXQHocP+ruxuT5N6LcfEEDq50XH
1LFLDwcz/TEQQCNlM6qG2IccSi8I+Akgy0c/lT2xF5uHNIv8BdARQsvjIXa6
Bs+O24EC6ECobY0XtrTQKY6OEAF0oanH2gebp6g1PfGZALqU2eAbiN0s9IcX
xQkg8c0lYc+wnYrX5jsQAshPZpxIwn4tYi5VNSOACjvfVVRh71WRUzSfE0D9
Xub51dgN2tO75+cFEEf9wYwabI7bj45L/cXv9zZ9yViNR76/5sZCQ8O/DS41
YKNHU/ny/DRk01xGtGH/HPO6GLSVhpaz/vQMYUt9f/dM9wIN4c2jlfIL/9/J
z8e1G9MQl11LFCu2y7Ojn+1MaOiAjaoRG3bl5aHaR2Y0tLdlpIkd+xpVjpOw
oaGHE7fLOLGJi6l3lW7QUMb87UB+bKP59EvUIBq6fY/3pTB2qEKhbF0eDY1a
O84pYifuucDpmU9DEYbS0Uqr/TWmB7cX0hDLuf2HlbH/GErHhxXTUHarT/B2
7OOP/MVPVdGQYWHKRlVs9i79tYwWGtIT/Sqohn03tHe5epqGZK3IN+rY1lOs
ZLksHan52fKdwTZ5f7jGWJ6OSjwCfVdtYOZVOaZARzv3q7OcxdaspZSs205H
8X6W06uWTmbJMdtNR3J7QurPYfebM8UvaNDRq3DS/QK2Zd2Sy7aLdGSiF+1l
jm3st+9Wrgkd6eZ+nlj1GXT3ut4lOiqLtTaxwD6cumh/04KOYg8k7LLElvJf
MC+4TEc96s9+WmH3HprTMbxFR6DjvfUytvl/kxJ+IXQ0WD3q4Ih91fP032Nh
dETeTmhb9c3T6T94HtOR1o0JLSds35mbwaHP6EhCBIk7Y6eqLSxFvKKjp7Sq
smvYCwUrTQnJdHQ0/O+aW6v5qOMJKiqlozj+KDU37Ki39raPyukocOHy81W/
vVGjcbSSjjJlWuZXnbk+dLGyho6iGp5lumO3G9Ft6xvpaMfsc4X72DK9Qho/
e+moS4fG5YmtnO4qFtdPRzYyFMtV7/VuW7AaxJZ9/m3VOjKvPg0N09G29ZmO
D1fr6YqE2MQEHV20+Vbrhe22/8FC2hQd1dr1SHtje/P+bLgxQ0dHrFPcVx35
8W3A/Dwd2SUclH2EHevBapO9iOcnitVj1cmnrNTd/tJR6sD1xlWnby4RPfiP
jig9gbI+2HlT0gsrK3Tk1q13f9X/A13C65g=
       "]], LineBox[CompressedData["
1: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
       "]], 
      LineBox[CompressedData["
1:eJwd13c81d8bAHAre9xRGiSVEOJbREo9J0mRhFKSrKyGnZJUQlFmElJWWUX2
vjcfm6wkFJHs7L3F7/jdP+59vV/3jOf5POece+5OU1sdcyYGBoYb+G39M3Q2
sEiwNwMY/v9aIJZ5cz7YKWVCobbLcb2weaL38XutiehMCI0PPsYkNk/kWD6M
HL+eBdvS+LI3as8RUW03T9rWZwEphpeDaWSW8D57eWTsQDaM5cWpBD2fJfRl
5Q6PLWfDol738PdvM8SJ+J1d1sY5wBxnoivhMkNIbeXzHi3LgROer9ms98wQ
q6uDzSN+udDbZh6203OaiKmOsh/ekQ/z2RpZGYZTxExYtkSnbz60tvUM7No0
Raha1vQ0LuaD3NSe1q66SWKEeV634HsBOBAUz18nJ4lDRzUPP/Oig/df1kH2
sxOED5fZtOsMHZTqe6MkqRPE79Z7yXYmn6HlZI1PVfY44XknTkjvSCHscXDL
jusYIxpSV5jExgnwHQ+5PXl2lKAAhyGPdBGcc4P4fRMjxBHR4MNeZkVQqqaS
mho8QvjPfJh2+VYEm+/qbNvXO0zIvWg2N00qhkMWJR86w4cIQ2dj5fauYggW
ENiz8ewQ4WU0LHRxSwlYqI+NzDMMEW37GH+qPSmBO7+9hIKsB4lH1VLq+41K
QeeiUkGI3l8iMT1XNOlVKYilai+V8/8lGsOUmffUloJ4+MbRoy0DhIilHn2L
Yhlofgp8/1tvgKhm9pRmoJaD5q2C6tab/cTMEC+Xi1o5CLLJ5h+X7Se2N74e
mH5UDilOxjwfl/sIu+jU6IGRcsh7m3DaMKCP4D/6i/K1ogI6Gcgqr4p7CSRi
MX76XwWEc0WZHgvsJa5zTdaUyFbC5OX5x5lGvQS9lfVJTnQlkPt+zw8z9BKm
dw7MR7hUwfUkj1Y2jR4iJfXZr1vS1RBvLS3PxthNDFGGfNVNqsHCy8G2pr2L
ELujfkw8uBqk9F2FWfO7iGglrpiexWrYaDyZ0OTQRQR98bXQL6+BICb/6KDh
P8SdnoDJUwZ1UOivKKvX2UlkqE682xNQB1tMKrgD33cS4x+0LjCX1MHE2YQq
e6tOwsqOnFsoVg8pu3p698z8JvT/BbkenK4Hx2/3dJYov4korhoP8skGmIna
WfnnZjtx7Oh9AzfDBih2Nyq5rNhOtNtIHhy/2wBhRkbHtNnaiS2NPv21HxtA
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
7BXr/h//Q9zs
       "]], LineBox[CompressedData["
1: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
fHP/sTI/ChJW5LN1xM45wr/HJYCCaktDRlYttV6Lu+0pBcWw5Yw6YfOXteSk
hFPQrOCJQefVeqz/J4CSKai52qHUDduuXLjYlqCgmVtqy57Ysrv2pW0poSBm
sMQNL+zOKP3wxlIKyg91+rXq83axNsqfKEhjk/1bb+xDG7ev56ymoDe//lg8
wOa2P+gQ00JBxlwKaY+w40TNJL9OUVCs8K7GJ9jKe+UUzGYoaHlFX/4pduPJ
yX2zsxTErbfBZ9XcLg9PSS5SENde0z1Bq/nVpzp4sFJRjbGg37PVej+cKJYX
oqL2MBOpUOyOER+jwO1UlKVLEXm+Wj/OM5ZbZalou83Y5VWLbFprnydHRRJh
zumr1tB46dOtQEUi1fZHorCzk6vTVP6jogMh+65HY3vri8wPq1JRRZVhagy2
5Edm+JlLVJRy6Ud/AnaN/GxyqyEVmT5rkUnEdg0/8eaaMRVF+QRbr7rKur/2
4WUq8meT6Fu1A1mOh7CkIp7hz+1J2IRRhvtOJypaa+9ZQcc2mM0xJQdSkdbh
duOX2OxmHDdjn1AR/dzm8FVnVOndkQ+iIj8L0epVs8RNPz8RQkV7KnSVU7FT
1Pc33H9ORSPMT5Q07KngAvUxOhXxZY3kvMIO2lEq+62Iik7SNGter8bvv8Tj
VUxFVQ9YWDNX8zky2bu7lIpmR53+W/U/fSn6s3K8flJE9KpPPfTbrPWVimQ2
1l/Jwub8oy1c95OKvgRcGczGdg/qXKqepCKSikJVLnZwtEfrnWkqUnmtMrPq
VMaagh2zVNTSKLz17er+KzzuGrhARXYXN7qtWqk/bVyTlYZ+kJ5te4c9qurU
WyVEQyZZlxzeY1+dYK//IktDrHlHuvNXz1Pq0RpDeRryi9PkLljdj5d9qkZ2
0JDbOzm5VR+rZfu0ZjcNiardsFu1VBprweV9NHRiK9vcqrvNSPS5IzS0xiSZ
9QP2lW8LrjJGNNQfwDZXhG34+KBzoTGOj1RYS2DrInfHs6Y0pB7733+rPpox
f+OWOQ1pqDfbrVrSb86sxJqGghOdelbdqTqjqe9MQxVCClXF2GZZ4+KPn9LQ
RpcP7qXYNl46ixrPaMjTJT9y1bd0cn7wh+D+9UG5q340detJUDgNVZpU/lt1
xoG5hYgYGjpi72zyEXuuZKWJkUZDixNtB8pW6/uNP7Csgoakkg40lq/ef0k3
rB5+oaEqg+KhVSc51Rw5UUVD5fpSHJ+w34oEzVfV0JDLr6D/Vt1qQLNq+E5D
jgldoauW7lx/pKOThtaKvjpdgb0rx00suZuGJHYdvLJq5Qe/5ix6aYhN5pXb
qjWlYzL7B2hIyVqRuWqH6+JiY2M0JOvSsbxqj0Oec9kTNKTM9UD4M/YDgY5G
pykain/LK7vqyNdJ/rOzNNTMX6y76sT77Jb58zT0Z2XEetVpWhZqHos0xEhl
u7fqHIlPmw4v01DNnoWQVRdNSM2trNAQ8aEpZdX/A9cvSRE=
       "]], 
      LineBox[CompressedData["
1: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
       "]], 
      LineBox[CompressedData["
1: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
       "]], 
      LineBox[CompressedData["
1:eJwd13c8ld8fAHB7j4tSqVCEkBKJwjkpREqEVJQtGSkNFUUUZWWTskKy+pZU
1j3XtbdsUtl77+13nt/9497X+3We5znnM855XnefxW19azoaGho1/EX8/o42
8ao5nA1o/v9ZRmtc3z85K2eD++EJyjdmllC/54eL0/HZgIEzgprhuYS+2z6N
nbL7Bhp1b9PSfV5EcZ326rfrvgGzzfzYwHOLyPf8lfHJozmgwa2aWjC2gK7K
yZ+YXMsB1AsmUgoKC+h0yr4eR7PvYP8S7UOx7nkkvYvbd6LkO7C7KFxIGzCP
NjdHWsYDfgCTy4Pv+ibnUEJV3J0xoVxw1SnFkVI/i+ajciT/+ecCybHmfb0+
s0jDtrqvcSUX+AXGyOmpzaJx+iXDvKY80BDbwvexcAYpqlw48cqnADyXzQPu
1dPIj91qzm2+AHgL2tJphk6jvx2PMpzNC0GUtOKTZJNp5P0gWdD4JBkY7WpU
+jk0hRo+r9OJTyHQrnnAlMV6EvEC1uucMhTA453J5cE2iU6KhZ3wsaIAjYbh
Wye/TqDA+U9zj39RwDSM5z/AMoHkg1usLdKLQJ7z2q3I6jF03dVMraunCKyX
3+9a9BhDPjfGBI12UsHjx+zp9IpjqPMQbbvWCyr4GfpQcTRtFD2rktaWvVEM
JJezX9xJHEGpX36IpYcXA5cBR7pCyxHUGKVGf6CmGJRl3HbVFRtBorbGBTuV
SsB8m8x+4c/DqIreW4aGrxSQlhj9beuG0PwoF/tjrVJQIVoc/jdqCO1tjB6a
e1YK8lJFnhhYDSHn+M/xQ+OlYOdt54tCm4OIX+U3b31ZGaCOs87eUR5EUNRm
6uxGGUhUTbwtyDWI7Nhnqqly5UAuBAaEdw+ggg6mF9/jy0EUh9V0rc8Asnhw
dOn94wpw2d5zquNvP8r6/Oq3g0wVkDi3U/9peh8a5R311zavAqPpM5I0r/uQ
+ANtVYmwKlAUt+W5dLMPxSuzJ/StVIFEFu17yhJ9KKTS3+ZqaTU4e8GGvSu9
Fz3oC5rRNKkFjwZ2SwSW9qCvGtOJB4JqQUbM8JUraT1o6tNFA3pqLRj2j053
DepBN515fpDF64BJTNexzKs96OpGiNuxuTpgZW8yTZ3vRnHs1V486g1g99w9
BjuFbqSq8sTE43oDsLKtflsh1I26nKSOTT1sABsqtoU2rN1oZ6PfYE1aAyhR
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
PsU4
       "]]},
     Annotation[#, "Charting`Private`Tag$2433#1"]& ], 
    TagBox[
     {RGBColor[0.880722, 0.611041, 0.142051], AbsoluteThickness[1.6], Opacity[
      1.], LineBox[CompressedData["
1:eJwllIk3FAgcgIeZtEWSWse2bMrNQ1Ir4jclObaoTZItVwydjkoRRWwzIpXS
0iokWZHcXpKfTINm0BzIuGWQaRyTceVor++9733/wafhE/irnzSBQHD9x3+r
P6oklRVZDIT/mEXFtAZp8YdiqLjUvTCVMIPz8uW5QTtKgEhyzQteN4OC6Kz9
ExklYOa+mUzLmMZy/yuPxk+UAtXEc3UoYwrTO07ZBjaXQn8aSYV7bApp+46I
xkzL4MJm90LOnATdt5hZjM2XwVe538STlhK0earRf8arHJY7SSW86p9EQ9XV
tNG35fCzd+W3wBuTuLQ00iq6WQGKaqefrxB8wUxmevDnn15C+4P9rJOlYpSk
lOn3JrwErUXbw6oBYtzjzxrgzr0ECyPV75XVxSgizhyq5FXCqpX7Hty6PYHm
Vk4WcdQq4Mb3zUSqjmO8rO9khKQKis8X9NpmjGEPPyw/yPs16GkyNlnoj2Fs
aLa6m2U1nNYdj1W3G0X2iwVpnXEEdZ+RcxGZn1ERVnisMqoBpw3ZxVbWn9FS
+54F1bcGfHUiBbu7hZgoyZ0M59QAyS+d0aghRLM7rX4+eW/gEbf2zt3aT3iV
aei42ZMOt+fmSikuQ/hXUYV2XjIdQuZKryivGkJuyi6iViMdxsw/BCjUD6Km
v1uVyva3ML8j2bjIehCZxFgjwloGpMpHj2ZZClDJqlPxfV0d8LhWuzX9PiJZ
kzJuv1gHXgeOuO00+ognZMWs2i31EKMhb683249VfJnfyzPqgSRX32ST2I8+
oaYzD8MboOG+bc46eh8WvIjrPG3EhMSMTYvn7/egUFGY4OjNhI8itauXbHpQ
J9TRWvceE0LorPUUcTdm7JDNHJhjAiFCRyJ07sakdwkUdwYLdjlT7yoqd2Ho
wC2x3dEmSPGtkyEx+Vi8Z+Kx1q0mkBfkJ8fG8HE8d78LsbYJ9O0V4/Os+BgQ
tKaiWqcZtK03RveWtKP7YlLE1slmyDd4bUnL+YDpsqyYNbZsCNDdPu+d24rW
VpePRnmwQXOTU9XwqVbsOmuwdfwiGxp92maGjVpRhRs/1PiMDYU51PXO5S14
J2WvA02BA4zshIeRTB7GaDXLf+vkgOG53JYCGS76AydVFMKDq/e53LXXm5Dw
eLqyM54Hym7vR9iaTZhC+rGL+YQHcbrh9ipvG7HhHUU9t40Hy5/ZVViRGlHX
ZeGxn0ULONurXc+/wcRPATr5PVKtYHVCgxFdUI8nkyKr2bfb4DnFOHRiTy2e
HdQbKC3gg8W+hzaxokLs8+B/9+YdH4oZ2vf4vxTiwXaaUZOADwKzVtOwwy/Q
nDUcNvhDBzQ4xtc4dOQjsShbQYnaATV6YaHpohxMidCwvujZCUG0uKiqa2n4
Zq1q6naFbvCqWVf3NDMaVmrE6vSa94Fo2+gZKr0EEhVY+pleA7Bs+Bjdrr8B
fDpdkNg4BI+iGGOeQh4EM2J9AnWEsJs1MZLQ3gFFQXIHVRxGAbNcAjm0Psi8
fEpocngCTNicJzKcAbiWvnBAIhJDRDVByYEzBAReH7kqfBIErvMtihUjoH2e
cslFfwoMk+MXVbgiEEz94Sr7ehpSQrd8yikcB8fBk5FJwbNQO63KdjguBifB
bQN19a8gN2FMDBJ8ASHdJ6rh+TyQZdMorxwkYLSmTc3GcxEoETslVNYUrIQp
767JJciLVsnfZToDdqPuMxsPEcj36IMuZWWz0F7rK+VuKEU2a61Jlt78Fcpo
bz02TEmRw6z/pC5LmgfKsgt9zc3S5JvX1dOnVy/C8ZDLZXIPiOQVJlKCkXNL
YOxv0LzXm0T2ZC2YH2J/A+Nt1A2pESTy/z8lkP8GkhrOzg==
       "]]},
     Annotation[#, "Charting`Private`Tag$2433#2"]& ]}, {}, {}},
  AspectRatio->0.85,
  Axes->{True, True},
  AxesLabel->{
    FormBox["\"r [fm]\"", TraditionalForm], 
    FormBox["\"Re[V]\"", TraditionalForm]},
  AxesOrigin->{0, 0},
  AxesStyle->Directive[
   FontSize -> 25, Thickness -> 0.004, FontFamily -> "Helvetica", 
    GrayLevel[0]],
  BaseStyle->{FontSize -> 14},
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->NCache[{{1.215596673924133}, {
      Rational[4, 5]}}, {{1.215596673924133}, {0.8}}],
  GridLinesStyle->Directive[
    GrayLevel[0.5], 
    Dashing[{Small, Small}]],
  ImagePadding->All,
  ImageSize->{1200, 1200},
  Method->{
   "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
    AbsolutePointSize[6], "ScalingFunctions" -> None, 
    "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
        (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
         Part[#, 1]], 
        (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
         Part[#, 2]]}& ), "CopiedValueFunction" -> ({
        (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
         Part[#, 1]], 
        (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
         Part[#, 2]]}& )}},
  PlotRange->{{0., 4.999999897959183}, {-1.5, 2}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {0, 0}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{3.7464407177211514`*^9, 3.747202498877721*^9, 
  3.747730634169311*^9}]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Modules", "Subsection",
 CellChangeTimes->{{3.72656471093397*^9, 3.7265647203644247`*^9}, 
   3.747731247745932*^9}],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"ParallelSow", "[", "expr_", "]"}], ":=", 
   RowBox[{"Sow", "[", "expr", "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"SetSharedFunction", "[", "ParallelSow", "]"}], ";"}]}], "Input"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"\[Delta]", "=", 
    FractionBox["1", "100"]}], ";"}], " "}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"d\[Omega]", "=", "0.0002"}], ";"}]}], "Input",
 CellChangeTimes->{{3.74228955582731*^9, 3.742289558498271*^9}, {
  3.742298662461986*^9, 3.742298684870023*^9}, {3.742298729927827*^9, 
  3.7422987328788557`*^9}, {3.742299426624055*^9, 3.742299459795083*^9}}],

Cell[CellGroupData[{

Cell["Charmonium s - wave", "Subsubsection",
 CellChangeTimes->{{3.742291861612499*^9, 3.742291867360454*^9}, 
   3.742291901323778*^9, {3.7435061781726627`*^9, 3.7435061783084917`*^9}, {
   3.747731510774941*^9, 3.747731510855032*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"swaveccspectra", "[", 
    RowBox[{"n_", ",", "Tscan_"}], "]"}], ":=", 
   RowBox[{"Block", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{"T", "=", 
        RowBox[{"Tscan", "[", 
         RowBox[{"[", "n", "]"}], "]"}]}], ",", 
       RowBox[{"mD", "=", 
        RowBox[{"mDcal", "[", 
         RowBox[{
          RowBox[{"2", "\[Pi]"}], ",", 
          RowBox[{"Tscan", "[", 
           RowBox[{"[", "n", "]"}], "]"}], ",", 
          RowBox[{"kfinal", "[", 
           RowBox[{"[", "1", "]"}], "]"}], ",", 
          RowBox[{"kfinal", "[", 
           RowBox[{"[", "2", "]"}], "]"}]}], "]"}]}], ",", 
       RowBox[{"\[Sigma]", "=", 
        RowBox[{"\[Sigma]cont", "[", 
         RowBox[{"[", "1", "]"}], "]"}]}], ",", 
       RowBox[{"\[Alpha]", "=", 
        RowBox[{"\[Alpha]cont", "[", 
         RowBox[{"[", "1", "]"}], "]"}]}], ",", 
       RowBox[{"c", "=", 
        RowBox[{"ccont", "[", 
         RowBox[{"[", "1", "]"}], "]"}]}], ",", 
       RowBox[{"M", "=", "Mc"}], ",", 
       RowBox[{"l", "=", "0"}], ",", 
       RowBox[{"\[Omega]min", "=", 
        RowBox[{"-", "1"}]}], ",", 
       RowBox[{"\[Omega]max", "=", "2"}], ",", "inf", ",", "\[Rho]table", ",",
        "\[Omega]", ",", "rhow", ",", "gr0", ",", "s1", ",", "s01", ",", 
       "rev", ",", "imvc", ",", "V", ",", "ccsT"}], "}"}], ",", 
     "\[IndentingNewLine]", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"rev", "=", 
       RowBox[{"Interpolation", "[", 
        RowBox[{"Join", "[", 
         RowBox[{
          RowBox[{"ParallelTable", "[", 
           RowBox[{
            RowBox[{"{", 
             RowBox[{"r", ",", 
              RowBox[{"ReVsb", "[", 
               RowBox[{
               "r", ",", "mD", ",", "\[Alpha]", ",", "\[Sigma]", ",", "c"}], 
               "]"}]}], "}"}], ",", 
            RowBox[{"{", 
             RowBox[{"r", ",", 
              RowBox[{"1", "/", "1000"}], ",", "10", ",", 
              RowBox[{"1", "/", "100"}]}], "}"}]}], "]"}], ",", 
          RowBox[{"ParallelTable", "[", 
           RowBox[{
            RowBox[{"{", 
             RowBox[{"r", ",", 
              RowBox[{"ReVsb", "[", 
               RowBox[{
               "r", ",", "mD", ",", "\[Alpha]", ",", "\[Sigma]", ",", "c"}], 
               "]"}]}], "}"}], ",", 
            RowBox[{"{", 
             RowBox[{"r", ",", 
              RowBox[{"101", "/", "10"}], ",", "25", ",", 
              RowBox[{"1", "/", "10"}]}], "}"}]}], "]"}], ",", 
          RowBox[{"ParallelTable", "[", 
           RowBox[{
            RowBox[{"{", 
             RowBox[{"r", ",", 
              RowBox[{"ReVsb", "[", 
               RowBox[{
               "r", ",", "mD", ",", "\[Alpha]", ",", "\[Sigma]", ",", "c"}], 
               "]"}]}], "}"}], ",", 
            RowBox[{"{", 
             RowBox[{"r", ",", "26", ",", "1500", ",", "1"}], "}"}]}], "]"}], 
          ",", 
          RowBox[{"ParallelTable", "[", 
           RowBox[{
            RowBox[{"{", 
             RowBox[{"r", ",", 
              RowBox[{"ReVsb", "[", 
               RowBox[{
               "r", ",", "mD", ",", "\[Alpha]", ",", "\[Sigma]", ",", "c"}], 
               "]"}]}], "}"}], ",", 
            RowBox[{"{", 
             RowBox[{"r", ",", "1510", ",", "20000", ",", "1000"}], "}"}]}], 
           "]"}]}], "]"}], "]"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"imvc", "=", 
       RowBox[{"Interpolation", "[", 
        RowBox[{"Join", "[", 
         RowBox[{
          RowBox[{"ParallelTable", "[", 
           RowBox[{
            RowBox[{"{", 
             RowBox[{"r", ",", 
              RowBox[{"ImVc", "[", 
               RowBox[{"r", ",", "mD", ",", "\[Alpha]", ",", "T"}], "]"}]}], 
             "}"}], ",", 
            RowBox[{"{", 
             RowBox[{"r", ",", 
              RowBox[{"1", "/", "1000"}], ",", "10", ",", 
              RowBox[{"1", "/", "100"}]}], "}"}]}], "]"}], ",", 
          RowBox[{"ParallelTable", "[", 
           RowBox[{
            RowBox[{"{", 
             RowBox[{"r", ",", 
              RowBox[{"ImVc", "[", 
               RowBox[{"r", ",", "mD", ",", "\[Alpha]", ",", "T"}], "]"}]}], 
             "}"}], ",", 
            RowBox[{"{", 
             RowBox[{"r", ",", 
              RowBox[{"101", "/", "10"}], ",", "25", ",", 
              RowBox[{"1", "/", "10"}]}], "}"}]}], "]"}], ",", 
          RowBox[{"ParallelTable", "[", 
           RowBox[{
            RowBox[{"{", 
             RowBox[{"r", ",", 
              RowBox[{"ImVc", "[", 
               RowBox[{"r", ",", "mD", ",", "\[Alpha]", ",", "T"}], "]"}]}], 
             "}"}], ",", 
            RowBox[{"{", 
             RowBox[{"r", ",", "26", ",", "1500", ",", "1"}], "}"}]}], "]"}], 
          ",", 
          RowBox[{"ParallelTable", "[", 
           RowBox[{
            RowBox[{"{", 
             RowBox[{"r", ",", 
              RowBox[{"ImVc", "[", 
               RowBox[{"r", ",", "mD", ",", "\[Alpha]", ",", "T"}], "]"}]}], 
             "}"}], ",", 
            RowBox[{"{", 
             RowBox[{"r", ",", "1510", ",", "20000", ",", "1000"}], "}"}]}], 
           "]"}]}], "]"}], "]"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"V", "[", "x_", "]"}], ":=", 
       RowBox[{
        RowBox[{"rev", "[", "x", "]"}], "+", 
        RowBox[{"\[ImaginaryI]", " ", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{"imvc", "[", "x", "]"}], "+", 
           RowBox[{
            RowBox[{"ImVsregInter", "[", "n", "]"}], "[", "x", "]"}]}], 
          ")"}]}]}]}], ";", "\[IndentingNewLine]", "\[IndentingNewLine]", 
      RowBox[{"\[Rho]table", "=", 
       RowBox[{
        RowBox[{
         RowBox[{
          RowBox[{"ParallelDo", "[", 
           RowBox[{
            RowBox[{
             RowBox[{"\[Omega]", "=", 
              RowBox[{"\[Omega]min", "+", 
               RowBox[{
                RowBox[{"(", 
                 RowBox[{"it", "-", "1"}], ")"}], " ", "d\[Omega]", " ", 
                "M"}]}]}], ";", 
             RowBox[{"inf", "=", 
              RowBox[{"40", "+", 
               RowBox[{"500", "*", "it", "*", "d\[Omega]"}]}]}], ";", 
             "\[IndentingNewLine]", 
             RowBox[{"s01", "=", 
              RowBox[{"NDSolve", "[", 
               RowBox[{
                RowBox[{"{", 
                 RowBox[{
                  RowBox[{
                   RowBox[{
                    RowBox[{
                    RowBox[{"(", 
                    RowBox[{"\[Omega]", "-", 
                    FractionBox[
                    RowBox[{"l", 
                    RowBox[{"(", 
                    RowBox[{"l", "+", "1"}], ")"}]}], 
                    RowBox[{"M", " ", 
                    SuperscriptBox["r", "2"]}]], "-", 
                    RowBox[{"Re", "[", 
                    RowBox[{"V", "[", "r", "]"}], "]"}], "+", 
                    RowBox[{"\[ImaginaryI]", " ", 
                    RowBox[{"Abs", "[", 
                    RowBox[{"Im", "[", 
                    RowBox[{"V", "[", "r", "]"}], "]"}], "]"}]}]}], ")"}], 
                    RowBox[{"gr", "[", "r", "]"}]}], "+", 
                    RowBox[{
                    FractionBox["1", "M"], 
                    RowBox[{
                    RowBox[{"gr", "''"}], "[", "r", "]"}]}]}], "\[Equal]", 
                   "0"}], ",", " ", "\[IndentingNewLine]", 
                  RowBox[{
                   RowBox[{
                    RowBox[{"gr", "'"}], "[", "\[Delta]", "]"}], "\[Equal]", 
                   RowBox[{
                    RowBox[{"(", 
                    RowBox[{"\[Alpha]", " ", "M"}], ")"}], "-", 
                    RowBox[{"\[Delta]", 
                    SuperscriptBox[
                    RowBox[{"(", 
                    RowBox[{"M", " ", "\[Alpha]"}], ")"}], "2"]}]}]}], ",", 
                  "\[IndentingNewLine]", " ", 
                  RowBox[{
                   RowBox[{"gr", "[", "\[Delta]", "]"}], "\[Equal]", 
                   RowBox[{
                    RowBox[{"\[Delta]", 
                    RowBox[{"(", 
                    RowBox[{"\[Alpha]", " ", "M"}], ")"}]}], "-", " ", 
                    RowBox[{
                    FractionBox["1", "2"], 
                    SuperscriptBox["\[Delta]", "2"], 
                    SuperscriptBox[
                    RowBox[{"(", 
                    RowBox[{"\[Alpha]", " ", "M"}], ")"}], "2"]}]}]}]}], 
                 "}"}], ",", "gr", ",", 
                RowBox[{"{", 
                 RowBox[{"r", ",", "\[Delta]", ",", "inf"}], "}"}]}], "]"}]}],
              ";", "\[IndentingNewLine]", 
             RowBox[{
              RowBox[{"gr0", "[", "r_", "]"}], "=", 
              SubscriptBox[
               RowBox[{"(", 
                RowBox[{
                 RowBox[{"gr", "[", "r", "]"}], "/.", "s01"}], ")"}], 
               RowBox[{
               "\[LeftDoubleBracket]", "1", "\[RightDoubleBracket]"}]]}], ";",
              "\[IndentingNewLine]", 
             RowBox[{"s1", "=", 
              RowBox[{"NDSolve", "[", 
               RowBox[{
                RowBox[{"{", 
                 RowBox[{
                  RowBox[{
                   RowBox[{
                    RowBox[{"rho", "'"}], "[", "x", "]"}], "\[Equal]", 
                   RowBox[{
                    RowBox[{"-", 
                    FractionBox[
                    RowBox[{" ", 
                    RowBox[{"6", " ", "Nc", " ", 
                    SuperscriptBox["M", "2"], " ", "\[Alpha]"}]}], 
                    RowBox[{"4", "\[Pi]"}]]}], 
                    RowBox[{"Im", "[", 
                    FractionBox["1", 
                    SuperscriptBox[
                    RowBox[{"(", 
                    RowBox[{"gr0", "[", "x", "]"}], ")"}], "2"]], "]"}]}]}], 
                  ",", 
                  RowBox[{
                   RowBox[{"rho", "[", "\[Delta]", "]"}], "\[Equal]", "0"}]}],
                  "}"}], ",", "rho", ",", 
                RowBox[{"{", 
                 RowBox[{"x", ",", "\[Delta]", ",", "inf"}], "}"}]}], "]"}]}],
              ";", "\[IndentingNewLine]", 
             RowBox[{
              RowBox[{"rhow", "[", "r_", "]"}], "=", 
              SubscriptBox[
               RowBox[{"(", 
                RowBox[{
                 RowBox[{"rho", "[", "r", "]"}], "/.", "s1"}], ")"}], 
               RowBox[{
               "\[LeftDoubleBracket]", "1", "\[RightDoubleBracket]"}]]}], ";",
              "\[IndentingNewLine]", 
             RowBox[{"ParallelSow", "[", 
              RowBox[{"{", 
               RowBox[{
                RowBox[{"\[Omega]", "+", 
                 RowBox[{"2", "M"}]}], ",", 
                RowBox[{"rhow", "[", "inf", "]"}]}], "}"}], "]"}]}], ",", 
            RowBox[{"{", 
             RowBox[{"it", ",", "1", ",", 
              FractionBox[
               RowBox[{"\[Omega]max", "-", "\[Omega]min"}], 
               RowBox[{"d\[Omega]", " ", "M"}]]}], "}"}]}], "]"}], "//", 
          "Reap"}], "//", "Last"}], "//", "First"}]}], ";", 
      "\[IndentingNewLine]", "\[IndentingNewLine]", 
      RowBox[{"ccsT", "=", 
       RowBox[{"ParallelTable", "[", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{
           RowBox[{"\[Rho]table", "[", 
            RowBox[{"[", 
             RowBox[{"i", ",", "1"}], "]"}], "]"}], ",", 
           FractionBox[
            RowBox[{"\[Rho]table", "[", 
             RowBox[{"[", 
              RowBox[{"i", ",", "2"}], "]"}], "]"}], 
            SuperscriptBox[
             RowBox[{"\[Rho]table", "[", 
              RowBox[{"[", 
               RowBox[{"i", ",", "1"}], "]"}], "]"}], "2"]]}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"i", ",", "1", ",", 
           RowBox[{"Length", "[", "\[Rho]table", "]"}]}], "}"}]}], "]"}]}], 
      ";", "\[IndentingNewLine]", 
      RowBox[{"Export", "[", 
       RowBox[{
        RowBox[{"\"\<cc/swccT\>\"", "<>", 
         RowBox[{"ToString", "[", 
          RowBox[{"Round", "[", 
           RowBox[{"T", "*", "1000"}], "]"}], "]"}], "<>", 
         "\"\<spectra.dat\>\""}], ",", 
        RowBox[{"Sort", "[", "ccsT", "]"}]}], "]"}], ";"}]}], 
    "\[IndentingNewLine]", "]"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.724397604460712*^9, 3.724397621092863*^9}, {
   3.724398705481254*^9, 3.724398705798315*^9}, {3.72440624506767*^9, 
   3.7244062457361317`*^9}, {3.7244423136168756`*^9, 3.724442340980721*^9}, {
   3.7244423712224417`*^9, 3.724442377050403*^9}, {3.724442465925974*^9, 
   3.724442518695669*^9}, {3.7244426255599117`*^9, 3.724442639076613*^9}, {
   3.724443729204352*^9, 3.724443729749022*^9}, {3.724443881656342*^9, 
   3.7244438842850027`*^9}, 3.725261621115453*^9, 3.72526166634648*^9, {
   3.725271550289123*^9, 3.7252715504130163`*^9}, {3.725271609402791*^9, 
   3.7252716095188437`*^9}, {3.7252717762497*^9, 3.725271782362536*^9}, {
   3.725271824500347*^9, 3.725271826035269*^9}, {3.725271857701564*^9, 
   3.725271858192912*^9}, {3.725271928114049*^9, 3.7252719496618757`*^9}, {
   3.725271981807578*^9, 3.725271987122878*^9}, {3.725273718896678*^9, 
   3.72527377251343*^9}, {3.725273963159111*^9, 3.725273966198284*^9}, {
   3.725364382855975*^9, 3.725364384697238*^9}, {3.725364432753635*^9, 
   3.725364433681274*^9}, {3.725364595553596*^9, 3.725364595868292*^9}, {
   3.725364661141473*^9, 3.725364661301785*^9}, {3.725365068510941*^9, 
   3.7253650691073112`*^9}, {3.7256202924505177`*^9, 
   3.7256202938854313`*^9}, {3.7256265502253428`*^9, 3.725626559021003*^9}, {
   3.725798091627001*^9, 3.725798108963685*^9}, {3.725798150844287*^9, 
   3.725798156038417*^9}, {3.726312422974263*^9, 3.726312439922279*^9}, {
   3.726313778060986*^9, 3.726313794010726*^9}, {3.726313854887352*^9, 
   3.726313855417986*^9}, {3.726377533478507*^9, 3.726377535012369*^9}, {
   3.726379310729051*^9, 3.726379315935656*^9}, {3.726379351066524*^9, 
   3.7263793563685627`*^9}, 3.7263814533362722`*^9, {3.726468979312665*^9, 
   3.726469044993416*^9}, {3.726564279540083*^9, 3.726564288774165*^9}, {
   3.726564330005303*^9, 3.726564342424973*^9}, {3.7265645007454853`*^9, 
   3.7265645054085903`*^9}, 3.726565145221386*^9, {3.726836923420138*^9, 
   3.726836925204391*^9}, {3.7268417497448387`*^9, 3.726841749854889*^9}, {
   3.727357927216405*^9, 3.7273579306359463`*^9}, 3.72735811608375*^9, {
   3.7273582875862513`*^9, 3.727358296888235*^9}, {3.727520051444908*^9, 
   3.7275200665503483`*^9}, {3.727539483513708*^9, 3.72753949210455*^9}, {
   3.7275398377710333`*^9, 3.727539869000495*^9}, {3.7275879806550293`*^9, 
   3.727587984698921*^9}, {3.727606150288821*^9, 3.727606150994812*^9}, {
   3.728932814314426*^9, 3.728932860160056*^9}, 3.7289333254815903`*^9, 
   3.7299208725344887`*^9, {3.730007040539275*^9, 3.7300070509717903`*^9}, {
   3.730007357183831*^9, 3.7300073662633142`*^9}, {3.7331192829046183`*^9, 
   3.733119300197537*^9}, {3.733120717385792*^9, 3.733120717697629*^9}, {
   3.7331222711038847`*^9, 3.733122272703622*^9}, {3.733211538849382*^9, 
   3.7332115515038567`*^9}, {3.7332289443370447`*^9, 
   3.7332289447842827`*^9}, {3.742215948846467*^9, 3.742215959437643*^9}, {
   3.742216025305929*^9, 3.742216093257207*^9}, {3.7422172078868933`*^9, 
   3.7422172275906973`*^9}, 3.74221727383118*^9, {3.742217585069265*^9, 
   3.742217591716959*^9}, {3.7422176229823923`*^9, 3.742217653035615*^9}, {
   3.742269341112874*^9, 3.742269371527761*^9}, 3.742275694936644*^9, {
   3.742289467062118*^9, 3.742289486771803*^9}, {3.742289520463562*^9, 
   3.7422896027136*^9}, {3.7422896364561243`*^9, 3.74228964347093*^9}, {
   3.742289678232355*^9, 3.742289708137301*^9}, {3.7422897506101*^9, 
   3.7422897587096577`*^9}, {3.7422920316457787`*^9, 3.742292034487727*^9}, 
   3.742292186682322*^9, {3.742292303240778*^9, 3.742292303483521*^9}, {
   3.742292362481593*^9, 3.742292372544711*^9}, {3.742292408813004*^9, 
   3.742292447857381*^9}, {3.7422968206130743`*^9, 3.742296843480155*^9}, {
   3.7422970160890417`*^9, 3.742297024417719*^9}, {3.742297074890059*^9, 
   3.74229711910509*^9}, {3.7422973083294992`*^9, 3.742297309298213*^9}, {
   3.742297354168077*^9, 3.742297359897736*^9}, {3.742297415918168*^9, 
   3.7422974232482452`*^9}, {3.742297467739311*^9, 3.742297612963316*^9}, {
   3.7422977860232887`*^9, 3.7422977903561068`*^9}, {3.74229798181938*^9, 
   3.742298023677857*^9}, {3.7422980561712513`*^9, 3.74229805925661*^9}, 
   3.742298106308654*^9, {3.742300221204397*^9, 3.742300269720365*^9}, {
   3.742300416216001*^9, 3.742300416917211*^9}, {3.742300536315893*^9, 
   3.742300546756034*^9}, {3.742300626604027*^9, 3.742300638323701*^9}, {
   3.7423006769018583`*^9, 3.7423007163572683`*^9}, {3.7435037431402884`*^9, 
   3.743503799356997*^9}, {3.7435038425347443`*^9, 3.743503908279688*^9}, {
   3.7435046316079397`*^9, 3.743504651390107*^9}, {3.7435061817655*^9, 
   3.743506182021901*^9}, {3.743506221115732*^9, 3.743506260429055*^9}, 
   3.743506602721039*^9, {3.745326287005268*^9, 3.7453262895250797`*^9}, {
   3.7477314163437967`*^9, 3.7477314452856083`*^9}, {3.74773151705424*^9, 
   3.747731539145146*^9}, {3.747731590874587*^9, 3.7477316748879337`*^9}, {
   3.747823337661335*^9, 3.747823338165009*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"swavecclspectra", "[", 
    RowBox[{"n_", ",", "Tscan_"}], "]"}], ":=", 
   RowBox[{"Block", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{"T", "=", 
        RowBox[{"Tscan", "[", 
         RowBox[{"[", "n", "]"}], "]"}]}], ",", 
       RowBox[{"mD", "=", 
        RowBox[{"mDcal", "[", 
         RowBox[{
          RowBox[{"2", "\[Pi]"}], ",", 
          RowBox[{"Tscan", "[", 
           RowBox[{"[", "n", "]"}], "]"}], ",", 
          RowBox[{"kfinall", "[", 
           RowBox[{"[", "1", "]"}], "]"}], ",", 
          RowBox[{"kfinall", "[", 
           RowBox[{"[", "2", "]"}], "]"}]}], "]"}]}], ",", 
       RowBox[{"\[Sigma]", "=", 
        RowBox[{"\[Sigma]cont", "[", 
         RowBox[{"[", "1", "]"}], "]"}]}], ",", 
       RowBox[{"\[Alpha]", "=", 
        RowBox[{"\[Alpha]cont", "[", 
         RowBox[{"[", "1", "]"}], "]"}]}], ",", 
       RowBox[{"c", "=", 
        RowBox[{"ccont", "[", 
         RowBox[{"[", "1", "]"}], "]"}]}], ",", 
       RowBox[{"M", "=", "Mc"}], ",", 
       RowBox[{"l", "=", "0"}], ",", 
       RowBox[{"\[Omega]min", "=", 
        RowBox[{"-", "1"}]}], ",", 
       RowBox[{"\[Omega]max", "=", "2"}], ",", "inf", ",", "\[Rho]table", ",",
        "\[Omega]", ",", "rhow", ",", "gr0", ",", "s1", ",", "s01", ",", 
       "rev", ",", "imvc", ",", "V", ",", "ccsT"}], "}"}], ",", 
     "\[IndentingNewLine]", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"rev", "=", 
       RowBox[{"Interpolation", "[", 
        RowBox[{"Join", "[", 
         RowBox[{
          RowBox[{"ParallelTable", "[", 
           RowBox[{
            RowBox[{"{", 
             RowBox[{"r", ",", 
              RowBox[{"ReVsb", "[", 
               RowBox[{
               "r", ",", "mD", ",", "\[Alpha]", ",", "\[Sigma]", ",", "c"}], 
               "]"}]}], "}"}], ",", 
            RowBox[{"{", 
             RowBox[{"r", ",", 
              RowBox[{"1", "/", "1000"}], ",", "10", ",", 
              RowBox[{"1", "/", "100"}]}], "}"}]}], "]"}], ",", 
          RowBox[{"ParallelTable", "[", 
           RowBox[{
            RowBox[{"{", 
             RowBox[{"r", ",", 
              RowBox[{"ReVsb", "[", 
               RowBox[{
               "r", ",", "mD", ",", "\[Alpha]", ",", "\[Sigma]", ",", "c"}], 
               "]"}]}], "}"}], ",", 
            RowBox[{"{", 
             RowBox[{"r", ",", 
              RowBox[{"101", "/", "10"}], ",", "25", ",", 
              RowBox[{"1", "/", "10"}]}], "}"}]}], "]"}], ",", 
          RowBox[{"ParallelTable", "[", 
           RowBox[{
            RowBox[{"{", 
             RowBox[{"r", ",", 
              RowBox[{"ReVsb", "[", 
               RowBox[{
               "r", ",", "mD", ",", "\[Alpha]", ",", "\[Sigma]", ",", "c"}], 
               "]"}]}], "}"}], ",", 
            RowBox[{"{", 
             RowBox[{"r", ",", "26", ",", "1500", ",", "1"}], "}"}]}], "]"}], 
          ",", 
          RowBox[{"ParallelTable", "[", 
           RowBox[{
            RowBox[{"{", 
             RowBox[{"r", ",", 
              RowBox[{"ReVsb", "[", 
               RowBox[{
               "r", ",", "mD", ",", "\[Alpha]", ",", "\[Sigma]", ",", "c"}], 
               "]"}]}], "}"}], ",", 
            RowBox[{"{", 
             RowBox[{"r", ",", "1510", ",", "20000", ",", "1000"}], "}"}]}], 
           "]"}]}], "]"}], "]"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"imvc", "=", 
       RowBox[{"Interpolation", "[", 
        RowBox[{"Join", "[", 
         RowBox[{
          RowBox[{"ParallelTable", "[", 
           RowBox[{
            RowBox[{"{", 
             RowBox[{"r", ",", 
              RowBox[{"ImVc", "[", 
               RowBox[{"r", ",", "mD", ",", "\[Alpha]", ",", "T"}], "]"}]}], 
             "}"}], ",", 
            RowBox[{"{", 
             RowBox[{"r", ",", 
              RowBox[{"1", "/", "1000"}], ",", "10", ",", 
              RowBox[{"1", "/", "100"}]}], "}"}]}], "]"}], ",", 
          RowBox[{"ParallelTable", "[", 
           RowBox[{
            RowBox[{"{", 
             RowBox[{"r", ",", 
              RowBox[{"ImVc", "[", 
               RowBox[{"r", ",", "mD", ",", "\[Alpha]", ",", "T"}], "]"}]}], 
             "}"}], ",", 
            RowBox[{"{", 
             RowBox[{"r", ",", 
              RowBox[{"101", "/", "10"}], ",", "25", ",", 
              RowBox[{"1", "/", "10"}]}], "}"}]}], "]"}], ",", 
          RowBox[{"ParallelTable", "[", 
           RowBox[{
            RowBox[{"{", 
             RowBox[{"r", ",", 
              RowBox[{"ImVc", "[", 
               RowBox[{"r", ",", "mD", ",", "\[Alpha]", ",", "T"}], "]"}]}], 
             "}"}], ",", 
            RowBox[{"{", 
             RowBox[{"r", ",", "26", ",", "1500", ",", "1"}], "}"}]}], "]"}], 
          ",", 
          RowBox[{"ParallelTable", "[", 
           RowBox[{
            RowBox[{"{", 
             RowBox[{"r", ",", 
              RowBox[{"ImVc", "[", 
               RowBox[{"r", ",", "mD", ",", "\[Alpha]", ",", "T"}], "]"}]}], 
             "}"}], ",", 
            RowBox[{"{", 
             RowBox[{"r", ",", "1510", ",", "20000", ",", "1000"}], "}"}]}], 
           "]"}]}], "]"}], "]"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"V", "[", "x_", "]"}], ":=", 
       RowBox[{
        RowBox[{"rev", "[", "x", "]"}], "+", 
        RowBox[{"\[ImaginaryI]", " ", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{"imvc", "[", "x", "]"}], "+", 
           RowBox[{
            RowBox[{"ImVsreglInter", "[", "n", "]"}], "[", "x", "]"}]}], 
          ")"}]}]}]}], ";", "\[IndentingNewLine]", "\[IndentingNewLine]", 
      RowBox[{"\[Rho]table", "=", 
       RowBox[{
        RowBox[{
         RowBox[{
          RowBox[{"ParallelDo", "[", 
           RowBox[{
            RowBox[{
             RowBox[{"\[Omega]", "=", 
              RowBox[{"\[Omega]min", "+", 
               RowBox[{
                RowBox[{"(", 
                 RowBox[{"it", "-", "1"}], ")"}], " ", "d\[Omega]", " ", 
                "M"}]}]}], ";", 
             RowBox[{"inf", "=", 
              RowBox[{"40", "+", 
               RowBox[{"500", "*", "it", "*", "d\[Omega]"}]}]}], ";", 
             "\[IndentingNewLine]", 
             RowBox[{"s01", "=", 
              RowBox[{"NDSolve", "[", 
               RowBox[{
                RowBox[{"{", 
                 RowBox[{
                  RowBox[{
                   RowBox[{
                    RowBox[{
                    RowBox[{"(", 
                    RowBox[{"\[Omega]", "-", 
                    FractionBox[
                    RowBox[{"l", 
                    RowBox[{"(", 
                    RowBox[{"l", "+", "1"}], ")"}]}], 
                    RowBox[{"M", " ", 
                    SuperscriptBox["r", "2"]}]], "-", 
                    RowBox[{"Re", "[", 
                    RowBox[{"V", "[", "r", "]"}], "]"}], "+", 
                    RowBox[{"\[ImaginaryI]", " ", 
                    RowBox[{"Abs", "[", 
                    RowBox[{"Im", "[", 
                    RowBox[{"V", "[", "r", "]"}], "]"}], "]"}]}]}], ")"}], 
                    RowBox[{"gr", "[", "r", "]"}]}], "+", 
                    RowBox[{
                    FractionBox["1", "M"], 
                    RowBox[{
                    RowBox[{"gr", "''"}], "[", "r", "]"}]}]}], "\[Equal]", 
                   "0"}], ",", " ", "\[IndentingNewLine]", 
                  RowBox[{
                   RowBox[{
                    RowBox[{"gr", "'"}], "[", "\[Delta]", "]"}], "\[Equal]", 
                   RowBox[{
                    RowBox[{"(", 
                    RowBox[{"\[Alpha]", " ", "M"}], ")"}], "-", 
                    RowBox[{"\[Delta]", 
                    SuperscriptBox[
                    RowBox[{"(", 
                    RowBox[{"M", " ", "\[Alpha]"}], ")"}], "2"]}]}]}], ",", 
                  "\[IndentingNewLine]", " ", 
                  RowBox[{
                   RowBox[{"gr", "[", "\[Delta]", "]"}], "\[Equal]", 
                   RowBox[{
                    RowBox[{"\[Delta]", 
                    RowBox[{"(", 
                    RowBox[{"\[Alpha]", " ", "M"}], ")"}]}], "-", " ", 
                    RowBox[{
                    FractionBox["1", "2"], 
                    SuperscriptBox["\[Delta]", "2"], 
                    SuperscriptBox[
                    RowBox[{"(", 
                    RowBox[{"\[Alpha]", " ", "M"}], ")"}], "2"]}]}]}]}], 
                 "}"}], ",", "gr", ",", 
                RowBox[{"{", 
                 RowBox[{"r", ",", "\[Delta]", ",", "inf"}], "}"}]}], "]"}]}],
              ";", "\[IndentingNewLine]", 
             RowBox[{
              RowBox[{"gr0", "[", "r_", "]"}], "=", 
              SubscriptBox[
               RowBox[{"(", 
                RowBox[{
                 RowBox[{"gr", "[", "r", "]"}], "/.", "s01"}], ")"}], 
               RowBox[{
               "\[LeftDoubleBracket]", "1", "\[RightDoubleBracket]"}]]}], ";",
              "\[IndentingNewLine]", 
             RowBox[{"s1", "=", 
              RowBox[{"NDSolve", "[", 
               RowBox[{
                RowBox[{"{", 
                 RowBox[{
                  RowBox[{
                   RowBox[{
                    RowBox[{"rho", "'"}], "[", "x", "]"}], "\[Equal]", 
                   RowBox[{
                    RowBox[{"-", 
                    FractionBox[
                    RowBox[{" ", 
                    RowBox[{"6", " ", "Nc", " ", 
                    SuperscriptBox["M", "2"], " ", "\[Alpha]"}]}], 
                    RowBox[{"4", "\[Pi]"}]]}], 
                    RowBox[{"Im", "[", 
                    FractionBox["1", 
                    SuperscriptBox[
                    RowBox[{"(", 
                    RowBox[{"gr0", "[", "x", "]"}], ")"}], "2"]], "]"}]}]}], 
                  ",", 
                  RowBox[{
                   RowBox[{"rho", "[", "\[Delta]", "]"}], "\[Equal]", "0"}]}],
                  "}"}], ",", "rho", ",", 
                RowBox[{"{", 
                 RowBox[{"x", ",", "\[Delta]", ",", "inf"}], "}"}]}], "]"}]}],
              ";", "\[IndentingNewLine]", 
             RowBox[{
              RowBox[{"rhow", "[", "r_", "]"}], "=", 
              SubscriptBox[
               RowBox[{"(", 
                RowBox[{
                 RowBox[{"rho", "[", "r", "]"}], "/.", "s1"}], ")"}], 
               RowBox[{
               "\[LeftDoubleBracket]", "1", "\[RightDoubleBracket]"}]]}], ";",
              "\[IndentingNewLine]", 
             RowBox[{"ParallelSow", "[", 
              RowBox[{"{", 
               RowBox[{
                RowBox[{"\[Omega]", "+", 
                 RowBox[{"2", "M"}]}], ",", 
                RowBox[{"rhow", "[", "inf", "]"}]}], "}"}], "]"}]}], ",", 
            RowBox[{"{", 
             RowBox[{"it", ",", "1", ",", 
              FractionBox[
               RowBox[{"\[Omega]max", "-", "\[Omega]min"}], 
               RowBox[{"d\[Omega]", " ", "M"}]]}], "}"}]}], "]"}], "//", 
          "Reap"}], "//", "Last"}], "//", "First"}]}], ";", 
      "\[IndentingNewLine]", "\[IndentingNewLine]", 
      RowBox[{"ccsT", "=", 
       RowBox[{"ParallelTable", "[", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{
           RowBox[{"\[Rho]table", "[", 
            RowBox[{"[", 
             RowBox[{"i", ",", "1"}], "]"}], "]"}], ",", 
           FractionBox[
            RowBox[{"\[Rho]table", "[", 
             RowBox[{"[", 
              RowBox[{"i", ",", "2"}], "]"}], "]"}], 
            SuperscriptBox[
             RowBox[{"\[Rho]table", "[", 
              RowBox[{"[", 
               RowBox[{"i", ",", "1"}], "]"}], "]"}], "2"]]}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"i", ",", "1", ",", 
           RowBox[{"Length", "[", "\[Rho]table", "]"}]}], "}"}]}], "]"}]}], 
      ";", "\[IndentingNewLine]", 
      RowBox[{"Export", "[", 
       RowBox[{
        RowBox[{"\"\<cc/swccT\>\"", "<>", 
         RowBox[{"ToString", "[", 
          RowBox[{"Round", "[", 
           RowBox[{"T", "*", "1000"}], "]"}], "]"}], "<>", 
         "\"\<lspectra.dat\>\""}], ",", 
        RowBox[{"Sort", "[", "ccsT", "]"}]}], "]"}], ";"}]}], 
    "\[IndentingNewLine]", "]"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.747823284322794*^9, 3.747823291051662*^9}, {
   3.747823341589447*^9, 3.7478233420610533`*^9}, 3.747823647043998*^9}],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"swaveccuspectra", "[", 
    RowBox[{"n_", ",", "Tscan_"}], "]"}], ":=", 
   RowBox[{"Block", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{"T", "=", 
        RowBox[{"Tscan", "[", 
         RowBox[{"[", "n", "]"}], "]"}]}], ",", 
       RowBox[{"mD", "=", 
        RowBox[{"mDcal", "[", 
         RowBox[{
          RowBox[{"2", "\[Pi]"}], ",", 
          RowBox[{"Tscan", "[", 
           RowBox[{"[", "n", "]"}], "]"}], ",", 
          RowBox[{"kfinalu", "[", 
           RowBox[{"[", "1", "]"}], "]"}], ",", 
          RowBox[{"kfinalu", "[", 
           RowBox[{"[", "2", "]"}], "]"}]}], "]"}]}], ",", 
       RowBox[{"\[Sigma]", "=", 
        RowBox[{"\[Sigma]cont", "[", 
         RowBox[{"[", "1", "]"}], "]"}]}], ",", 
       RowBox[{"\[Alpha]", "=", 
        RowBox[{"\[Alpha]cont", "[", 
         RowBox[{"[", "1", "]"}], "]"}]}], ",", 
       RowBox[{"c", "=", 
        RowBox[{"ccont", "[", 
         RowBox[{"[", "1", "]"}], "]"}]}], ",", 
       RowBox[{"M", "=", "Mc"}], ",", 
       RowBox[{"l", "=", "0"}], ",", 
       RowBox[{"\[Omega]min", "=", 
        RowBox[{"-", "1"}]}], ",", 
       RowBox[{"\[Omega]max", "=", "2"}], ",", "inf", ",", "\[Rho]table", ",",
        "\[Omega]", ",", "rhow", ",", "gr0", ",", "s1", ",", "s01", ",", 
       "rev", ",", "imvc", ",", "V", ",", "ccsT"}], "}"}], ",", 
     "\[IndentingNewLine]", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"rev", "=", 
       RowBox[{"Interpolation", "[", 
        RowBox[{"Join", "[", 
         RowBox[{
          RowBox[{"ParallelTable", "[", 
           RowBox[{
            RowBox[{"{", 
             RowBox[{"r", ",", 
              RowBox[{"ReVsb", "[", 
               RowBox[{
               "r", ",", "mD", ",", "\[Alpha]", ",", "\[Sigma]", ",", "c"}], 
               "]"}]}], "}"}], ",", 
            RowBox[{"{", 
             RowBox[{"r", ",", 
              RowBox[{"1", "/", "1000"}], ",", "10", ",", 
              RowBox[{"1", "/", "100"}]}], "}"}]}], "]"}], ",", 
          RowBox[{"ParallelTable", "[", 
           RowBox[{
            RowBox[{"{", 
             RowBox[{"r", ",", 
              RowBox[{"ReVsb", "[", 
               RowBox[{
               "r", ",", "mD", ",", "\[Alpha]", ",", "\[Sigma]", ",", "c"}], 
               "]"}]}], "}"}], ",", 
            RowBox[{"{", 
             RowBox[{"r", ",", 
              RowBox[{"101", "/", "10"}], ",", "25", ",", 
              RowBox[{"1", "/", "10"}]}], "}"}]}], "]"}], ",", 
          RowBox[{"ParallelTable", "[", 
           RowBox[{
            RowBox[{"{", 
             RowBox[{"r", ",", 
              RowBox[{"ReVsb", "[", 
               RowBox[{
               "r", ",", "mD", ",", "\[Alpha]", ",", "\[Sigma]", ",", "c"}], 
               "]"}]}], "}"}], ",", 
            RowBox[{"{", 
             RowBox[{"r", ",", "26", ",", "1500", ",", "1"}], "}"}]}], "]"}], 
          ",", 
          RowBox[{"ParallelTable", "[", 
           RowBox[{
            RowBox[{"{", 
             RowBox[{"r", ",", 
              RowBox[{"ReVsb", "[", 
               RowBox[{
               "r", ",", "mD", ",", "\[Alpha]", ",", "\[Sigma]", ",", "c"}], 
               "]"}]}], "}"}], ",", 
            RowBox[{"{", 
             RowBox[{"r", ",", "1510", ",", "20000", ",", "1000"}], "}"}]}], 
           "]"}]}], "]"}], "]"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"imvc", "=", 
       RowBox[{"Interpolation", "[", 
        RowBox[{"Join", "[", 
         RowBox[{
          RowBox[{"ParallelTable", "[", 
           RowBox[{
            RowBox[{"{", 
             RowBox[{"r", ",", 
              RowBox[{"ImVc", "[", 
               RowBox[{"r", ",", "mD", ",", "\[Alpha]", ",", "T"}], "]"}]}], 
             "}"}], ",", 
            RowBox[{"{", 
             RowBox[{"r", ",", 
              RowBox[{"1", "/", "1000"}], ",", "10", ",", 
              RowBox[{"1", "/", "100"}]}], "}"}]}], "]"}], ",", 
          RowBox[{"ParallelTable", "[", 
           RowBox[{
            RowBox[{"{", 
             RowBox[{"r", ",", 
              RowBox[{"ImVc", "[", 
               RowBox[{"r", ",", "mD", ",", "\[Alpha]", ",", "T"}], "]"}]}], 
             "}"}], ",", 
            RowBox[{"{", 
             RowBox[{"r", ",", 
              RowBox[{"101", "/", "10"}], ",", "25", ",", 
              RowBox[{"1", "/", "10"}]}], "}"}]}], "]"}], ",", 
          RowBox[{"ParallelTable", "[", 
           RowBox[{
            RowBox[{"{", 
             RowBox[{"r", ",", 
              RowBox[{"ImVc", "[", 
               RowBox[{"r", ",", "mD", ",", "\[Alpha]", ",", "T"}], "]"}]}], 
             "}"}], ",", 
            RowBox[{"{", 
             RowBox[{"r", ",", "26", ",", "1500", ",", "1"}], "}"}]}], "]"}], 
          ",", 
          RowBox[{"ParallelTable", "[", 
           RowBox[{
            RowBox[{"{", 
             RowBox[{"r", ",", 
              RowBox[{"ImVc", "[", 
               RowBox[{"r", ",", "mD", ",", "\[Alpha]", ",", "T"}], "]"}]}], 
             "}"}], ",", 
            RowBox[{"{", 
             RowBox[{"r", ",", "1510", ",", "20000", ",", "1000"}], "}"}]}], 
           "]"}]}], "]"}], "]"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"V", "[", "x_", "]"}], ":=", 
       RowBox[{
        RowBox[{"rev", "[", "x", "]"}], "+", 
        RowBox[{"\[ImaginaryI]", " ", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{"imvc", "[", "x", "]"}], "+", 
           RowBox[{
            RowBox[{"ImVsreguInter", "[", "n", "]"}], "[", "x", "]"}]}], 
          ")"}]}]}]}], ";", "\[IndentingNewLine]", "\[IndentingNewLine]", 
      RowBox[{"\[Rho]table", "=", 
       RowBox[{
        RowBox[{
         RowBox[{
          RowBox[{"ParallelDo", "[", 
           RowBox[{
            RowBox[{
             RowBox[{"\[Omega]", "=", 
              RowBox[{"\[Omega]min", "+", 
               RowBox[{
                RowBox[{"(", 
                 RowBox[{"it", "-", "1"}], ")"}], " ", "d\[Omega]", " ", 
                "M"}]}]}], ";", 
             RowBox[{"inf", "=", 
              RowBox[{"40", "+", 
               RowBox[{"500", "*", "it", "*", "d\[Omega]"}]}]}], ";", 
             "\[IndentingNewLine]", 
             RowBox[{"s01", "=", 
              RowBox[{"NDSolve", "[", 
               RowBox[{
                RowBox[{"{", 
                 RowBox[{
                  RowBox[{
                   RowBox[{
                    RowBox[{
                    RowBox[{"(", 
                    RowBox[{"\[Omega]", "-", 
                    FractionBox[
                    RowBox[{"l", 
                    RowBox[{"(", 
                    RowBox[{"l", "+", "1"}], ")"}]}], 
                    RowBox[{"M", " ", 
                    SuperscriptBox["r", "2"]}]], "-", 
                    RowBox[{"Re", "[", 
                    RowBox[{"V", "[", "r", "]"}], "]"}], "+", 
                    RowBox[{"\[ImaginaryI]", " ", 
                    RowBox[{"Abs", "[", 
                    RowBox[{"Im", "[", 
                    RowBox[{"V", "[", "r", "]"}], "]"}], "]"}]}]}], ")"}], 
                    RowBox[{"gr", "[", "r", "]"}]}], "+", 
                    RowBox[{
                    FractionBox["1", "M"], 
                    RowBox[{
                    RowBox[{"gr", "''"}], "[", "r", "]"}]}]}], "\[Equal]", 
                   "0"}], ",", " ", "\[IndentingNewLine]", 
                  RowBox[{
                   RowBox[{
                    RowBox[{"gr", "'"}], "[", "\[Delta]", "]"}], "\[Equal]", 
                   RowBox[{
                    RowBox[{"(", 
                    RowBox[{"\[Alpha]", " ", "M"}], ")"}], "-", 
                    RowBox[{"\[Delta]", 
                    SuperscriptBox[
                    RowBox[{"(", 
                    RowBox[{"M", " ", "\[Alpha]"}], ")"}], "2"]}]}]}], ",", 
                  "\[IndentingNewLine]", " ", 
                  RowBox[{
                   RowBox[{"gr", "[", "\[Delta]", "]"}], "\[Equal]", 
                   RowBox[{
                    RowBox[{"\[Delta]", 
                    RowBox[{"(", 
                    RowBox[{"\[Alpha]", " ", "M"}], ")"}]}], "-", " ", 
                    RowBox[{
                    FractionBox["1", "2"], 
                    SuperscriptBox["\[Delta]", "2"], 
                    SuperscriptBox[
                    RowBox[{"(", 
                    RowBox[{"\[Alpha]", " ", "M"}], ")"}], "2"]}]}]}]}], 
                 "}"}], ",", "gr", ",", 
                RowBox[{"{", 
                 RowBox[{"r", ",", "\[Delta]", ",", "inf"}], "}"}]}], "]"}]}],
              ";", "\[IndentingNewLine]", 
             RowBox[{
              RowBox[{"gr0", "[", "r_", "]"}], "=", 
              SubscriptBox[
               RowBox[{"(", 
                RowBox[{
                 RowBox[{"gr", "[", "r", "]"}], "/.", "s01"}], ")"}], 
               RowBox[{
               "\[LeftDoubleBracket]", "1", "\[RightDoubleBracket]"}]]}], ";",
              "\[IndentingNewLine]", 
             RowBox[{"s1", "=", 
              RowBox[{"NDSolve", "[", 
               RowBox[{
                RowBox[{"{", 
                 RowBox[{
                  RowBox[{
                   RowBox[{
                    RowBox[{"rho", "'"}], "[", "x", "]"}], "\[Equal]", 
                   RowBox[{
                    RowBox[{"-", 
                    FractionBox[
                    RowBox[{" ", 
                    RowBox[{"6", " ", "Nc", " ", 
                    SuperscriptBox["M", "2"], " ", "\[Alpha]"}]}], 
                    RowBox[{"4", "\[Pi]"}]]}], 
                    RowBox[{"Im", "[", 
                    FractionBox["1", 
                    SuperscriptBox[
                    RowBox[{"(", 
                    RowBox[{"gr0", "[", "x", "]"}], ")"}], "2"]], "]"}]}]}], 
                  ",", 
                  RowBox[{
                   RowBox[{"rho", "[", "\[Delta]", "]"}], "\[Equal]", "0"}]}],
                  "}"}], ",", "rho", ",", 
                RowBox[{"{", 
                 RowBox[{"x", ",", "\[Delta]", ",", "inf"}], "}"}]}], "]"}]}],
              ";", "\[IndentingNewLine]", 
             RowBox[{
              RowBox[{"rhow", "[", "r_", "]"}], "=", 
              SubscriptBox[
               RowBox[{"(", 
                RowBox[{
                 RowBox[{"rho", "[", "r", "]"}], "/.", "s1"}], ")"}], 
               RowBox[{
               "\[LeftDoubleBracket]", "1", "\[RightDoubleBracket]"}]]}], ";",
              "\[IndentingNewLine]", 
             RowBox[{"ParallelSow", "[", 
              RowBox[{"{", 
               RowBox[{
                RowBox[{"\[Omega]", "+", 
                 RowBox[{"2", "M"}]}], ",", 
                RowBox[{"rhow", "[", "inf", "]"}]}], "}"}], "]"}]}], ",", 
            RowBox[{"{", 
             RowBox[{"it", ",", "1", ",", 
              FractionBox[
               RowBox[{"\[Omega]max", "-", "\[Omega]min"}], 
               RowBox[{"d\[Omega]", " ", "M"}]]}], "}"}]}], "]"}], "//", 
          "Reap"}], "//", "Last"}], "//", "First"}]}], ";", 
      "\[IndentingNewLine]", "\[IndentingNewLine]", 
      RowBox[{"ccsT", "=", 
       RowBox[{"ParallelTable", "[", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{
           RowBox[{"\[Rho]table", "[", 
            RowBox[{"[", 
             RowBox[{"i", ",", "1"}], "]"}], "]"}], ",", 
           FractionBox[
            RowBox[{"\[Rho]table", "[", 
             RowBox[{"[", 
              RowBox[{"i", ",", "2"}], "]"}], "]"}], 
            SuperscriptBox[
             RowBox[{"\[Rho]table", "[", 
              RowBox[{"[", 
               RowBox[{"i", ",", "1"}], "]"}], "]"}], "2"]]}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"i", ",", "1", ",", 
           RowBox[{"Length", "[", "\[Rho]table", "]"}]}], "}"}]}], "]"}]}], 
      ";", "\[IndentingNewLine]", 
      RowBox[{"Export", "[", 
       RowBox[{
        RowBox[{"\"\<cc/swccT\>\"", "<>", 
         RowBox[{"ToString", "[", 
          RowBox[{"Round", "[", 
           RowBox[{"T", "*", "1000"}], "]"}], "]"}], "<>", 
         "\"\<uspectra.dat\>\""}], ",", 
        RowBox[{"Sort", "[", "ccsT", "]"}]}], "]"}], ";"}]}], 
    "\[IndentingNewLine]", "]"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.7478232942598553`*^9, 3.747823305460693*^9}, {
   3.747823347581792*^9, 3.7478233478595*^9}, 3.747823643295945*^9}]
}, Closed]],

Cell[CellGroupData[{

Cell["Charmonium p - wave", "Subsubsection",
 CellChangeTimes->{{3.742291861612499*^9, 3.742291867360454*^9}, 
   3.742291901323778*^9, {3.7435061781726627`*^9, 3.7435061783084917`*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"pwaveccspectra", "[", 
    RowBox[{"n_", ",", "Tscan_"}], "]"}], ":=", 
   RowBox[{"Block", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{"T", "=", 
        RowBox[{"Tscan", "[", 
         RowBox[{"[", "n", "]"}], "]"}]}], ",", 
       RowBox[{"mD", "=", 
        RowBox[{"mDcal", "[", 
         RowBox[{
          RowBox[{"2", "\[Pi]"}], ",", 
          RowBox[{"Tscan", "[", 
           RowBox[{"[", "n", "]"}], "]"}], ",", 
          RowBox[{"kfinal", "[", 
           RowBox[{"[", "1", "]"}], "]"}], ",", 
          RowBox[{"kfinal", "[", 
           RowBox[{"[", "2", "]"}], "]"}]}], "]"}]}], ",", 
       RowBox[{"\[Sigma]", "=", 
        RowBox[{"\[Sigma]cont", "[", 
         RowBox[{"[", "1", "]"}], "]"}]}], ",", 
       RowBox[{"\[Alpha]", "=", 
        RowBox[{"\[Alpha]cont", "[", 
         RowBox[{"[", "1", "]"}], "]"}]}], ",", 
       RowBox[{"c", "=", 
        RowBox[{"ccont", "[", 
         RowBox[{"[", "1", "]"}], "]"}]}], ",", 
       RowBox[{"M", "=", "Mc"}], ",", 
       RowBox[{"l", "=", "1"}], ",", 
       RowBox[{"\[Omega]min", "=", 
        RowBox[{"-", "1"}]}], ",", 
       RowBox[{"\[Omega]max", "=", "2"}], ",", "ccsT", ",", "Tstring", ",", 
       "inf", ",", "rev", ",", "imvc", ",", "V", ",", "\[Rho]table", ",", 
       "\[Omega]", ",", "s0", ",", "gr", ",", "gr1", ",", "s01", ",", "gr0", 
       ",", "s1", ",", "rhow"}], "}"}], ",", "\[IndentingNewLine]", 
     "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"rev", "=", 
       RowBox[{"Interpolation", "[", 
        RowBox[{"Join", "[", 
         RowBox[{
          RowBox[{"ParallelTable", "[", 
           RowBox[{
            RowBox[{"{", 
             RowBox[{"r", ",", 
              RowBox[{"ReVsb", "[", 
               RowBox[{
               "r", ",", "mD", ",", "\[Alpha]", ",", "\[Sigma]", ",", "c"}], 
               "]"}]}], "}"}], ",", 
            RowBox[{"{", 
             RowBox[{"r", ",", 
              RowBox[{"1", "/", "1000"}], ",", "10", ",", 
              RowBox[{"1", "/", "100"}]}], "}"}]}], "]"}], ",", 
          RowBox[{"ParallelTable", "[", 
           RowBox[{
            RowBox[{"{", 
             RowBox[{"r", ",", 
              RowBox[{"ReVsb", "[", 
               RowBox[{
               "r", ",", "mD", ",", "\[Alpha]", ",", "\[Sigma]", ",", "c"}], 
               "]"}]}], "}"}], ",", 
            RowBox[{"{", 
             RowBox[{"r", ",", 
              RowBox[{"101", "/", "10"}], ",", "25", ",", 
              RowBox[{"1", "/", "10"}]}], "}"}]}], "]"}], ",", 
          RowBox[{"ParallelTable", "[", 
           RowBox[{
            RowBox[{"{", 
             RowBox[{"r", ",", 
              RowBox[{"ReVsb", "[", 
               RowBox[{
               "r", ",", "mD", ",", "\[Alpha]", ",", "\[Sigma]", ",", "c"}], 
               "]"}]}], "}"}], ",", 
            RowBox[{"{", 
             RowBox[{"r", ",", "26", ",", "1500", ",", "1"}], "}"}]}], "]"}], 
          ",", 
          RowBox[{"ParallelTable", "[", 
           RowBox[{
            RowBox[{"{", 
             RowBox[{"r", ",", 
              RowBox[{"ReVsb", "[", 
               RowBox[{
               "r", ",", "mD", ",", "\[Alpha]", ",", "\[Sigma]", ",", "c"}], 
               "]"}]}], "}"}], ",", 
            RowBox[{"{", 
             RowBox[{"r", ",", "1510", ",", "20000", ",", "1000"}], "}"}]}], 
           "]"}]}], "]"}], "]"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"imvc", "=", 
       RowBox[{"Interpolation", "[", 
        RowBox[{"Join", "[", 
         RowBox[{
          RowBox[{"ParallelTable", "[", 
           RowBox[{
            RowBox[{"{", 
             RowBox[{"r", ",", 
              RowBox[{"ImVc", "[", 
               RowBox[{"r", ",", "mD", ",", "\[Alpha]", ",", "T"}], "]"}]}], 
             "}"}], ",", 
            RowBox[{"{", 
             RowBox[{"r", ",", 
              RowBox[{"1", "/", "1000"}], ",", "10", ",", 
              RowBox[{"1", "/", "100"}]}], "}"}]}], "]"}], ",", 
          RowBox[{"ParallelTable", "[", 
           RowBox[{
            RowBox[{"{", 
             RowBox[{"r", ",", 
              RowBox[{"ImVc", "[", 
               RowBox[{"r", ",", "mD", ",", "\[Alpha]", ",", "T"}], "]"}]}], 
             "}"}], ",", 
            RowBox[{"{", 
             RowBox[{"r", ",", 
              RowBox[{"101", "/", "10"}], ",", "25", ",", 
              RowBox[{"1", "/", "10"}]}], "}"}]}], "]"}], ",", 
          RowBox[{"ParallelTable", "[", 
           RowBox[{
            RowBox[{"{", 
             RowBox[{"r", ",", 
              RowBox[{"ImVc", "[", 
               RowBox[{"r", ",", "mD", ",", "\[Alpha]", ",", "T"}], "]"}]}], 
             "}"}], ",", 
            RowBox[{"{", 
             RowBox[{"r", ",", "26", ",", "1500", ",", "1"}], "}"}]}], "]"}], 
          ",", 
          RowBox[{"ParallelTable", "[", 
           RowBox[{
            RowBox[{"{", 
             RowBox[{"r", ",", 
              RowBox[{"ImVc", "[", 
               RowBox[{"r", ",", "mD", ",", "\[Alpha]", ",", "T"}], "]"}]}], 
             "}"}], ",", 
            RowBox[{"{", 
             RowBox[{"r", ",", "1510", ",", "20000", ",", "1000"}], "}"}]}], 
           "]"}]}], "]"}], "]"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"V", "[", "x_", "]"}], ":=", 
       RowBox[{
        RowBox[{"rev", "[", "x", "]"}], "+", 
        RowBox[{"\[ImaginaryI]", " ", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{"imvc", "[", "x", "]"}], "+", 
           RowBox[{
            RowBox[{"ImVsregInter", "[", "n", "]"}], "[", "x", "]"}]}], 
          ")"}]}]}]}], ";", "\[IndentingNewLine]", "\[IndentingNewLine]", 
      RowBox[{"\[Rho]table", "=", 
       RowBox[{
        RowBox[{
         RowBox[{
          RowBox[{"ParallelDo", "[", 
           RowBox[{
            RowBox[{
             RowBox[{"\[Omega]", "=", 
              RowBox[{"\[Omega]min", "+", 
               RowBox[{
                RowBox[{"(", 
                 RowBox[{"it", "-", "1"}], ")"}], " ", "d\[Omega]", " ", 
                "M"}]}]}], ";", 
             RowBox[{"inf", "=", 
              RowBox[{"40", "+", 
               RowBox[{"500", "*", "it", "*", "d\[Omega]"}]}]}], ";", 
             "\[IndentingNewLine]", 
             RowBox[{"s0", "=", 
              RowBox[{"NDSolve", "[", 
               RowBox[{
                RowBox[{"{", 
                 RowBox[{
                  RowBox[{
                   RowBox[{
                    RowBox[{
                    RowBox[{"(", 
                    RowBox[{"\[Omega]", "-", 
                    FractionBox[
                    RowBox[{"l", 
                    RowBox[{"(", 
                    RowBox[{"l", "+", "1"}], ")"}]}], 
                    RowBox[{"M", " ", 
                    SuperscriptBox["r", "2"]}]], "-", 
                    RowBox[{"Re", "[", 
                    RowBox[{"V", "[", "r", "]"}], "]"}], "+", 
                    RowBox[{"\[ImaginaryI]", " ", 
                    RowBox[{"Abs", "[", 
                    RowBox[{"Im", "[", 
                    RowBox[{"V", "[", "r", "]"}], "]"}], "]"}]}]}], ")"}], 
                    RowBox[{"gr", "[", "r", "]"}]}], "+", 
                    RowBox[{
                    FractionBox["1", "M"], 
                    RowBox[{
                    RowBox[{"gr", "''"}], "[", "r", "]"}]}]}], "\[Equal]", 
                   "0"}], ",", " ", "\[IndentingNewLine]", 
                  RowBox[{
                   RowBox[{
                    RowBox[{"gr", "'"}], "[", "\[Delta]", "]"}], "\[Equal]", 
                   RowBox[{
                    RowBox[{"2", " ", "\[Delta]", 
                    SuperscriptBox[
                    RowBox[{"(", 
                    RowBox[{"\[Alpha]", " ", "M"}], ")"}], "2"]}], "-", 
                    RowBox[{
                    FractionBox["3", "4"], 
                    SuperscriptBox["\[Delta]", "2"], 
                    SuperscriptBox[
                    RowBox[{"(", 
                    RowBox[{"M", " ", "\[Alpha]"}], ")"}], "3"]}]}]}], ",", 
                  "\[IndentingNewLine]", " ", 
                  RowBox[{
                   RowBox[{"gr", "[", "\[Delta]", "]"}], "==", " ", 
                   RowBox[{
                    RowBox[{
                    SuperscriptBox["\[Delta]", "2"], 
                    SuperscriptBox[
                    RowBox[{"(", 
                    RowBox[{"\[Alpha]", " ", "M"}], ")"}], "2"]}], "-", 
                    RowBox[{
                    FractionBox["1", "4"], 
                    SuperscriptBox["\[Delta]", "3"], 
                    SuperscriptBox[
                    RowBox[{"(", 
                    RowBox[{"M", " ", "\[Alpha]"}], ")"}], "3"]}]}]}]}], 
                 "}"}], ",", "gr", ",", 
                RowBox[{"{", 
                 RowBox[{"r", ",", "\[Delta]", ",", "inf"}], "}"}], ",", 
                RowBox[{"PrecisionGoal", "\[Rule]", "10"}], ",", 
                RowBox[{"MaxSteps", "\[Rule]", "1000000"}]}], "]"}]}], ";", 
             "\[IndentingNewLine]", 
             RowBox[{
              RowBox[{"gr1", "[", "r_", "]"}], "=", 
              SubscriptBox[
               RowBox[{"(", 
                RowBox[{
                 RowBox[{"gr", "[", "r", "]"}], "/.", "s0"}], ")"}], 
               RowBox[{
               "\[LeftDoubleBracket]", "1", "\[RightDoubleBracket]"}]]}], ";",
              "\[IndentingNewLine]", 
             RowBox[{"s01", "=", 
              RowBox[{"NDSolve", "[", 
               RowBox[{
                RowBox[{"{", 
                 RowBox[{
                  RowBox[{
                   RowBox[{
                    RowBox[{
                    RowBox[{"(", 
                    RowBox[{"\[Omega]", "-", 
                    FractionBox[
                    RowBox[{"l", 
                    RowBox[{"(", 
                    RowBox[{"l", "+", "1"}], ")"}]}], 
                    RowBox[{"M", " ", 
                    SuperscriptBox["r", "2"]}]], "-", 
                    RowBox[{"Re", "[", 
                    RowBox[{"V", "[", "r", "]"}], "]"}], "+", 
                    RowBox[{"\[ImaginaryI]", " ", 
                    RowBox[{"Abs", "[", 
                    RowBox[{"Im", "[", 
                    RowBox[{"V", "[", "r", "]"}], "]"}], "]"}]}]}], ")"}], 
                    RowBox[{"gr", "[", "r", "]"}]}], "+", 
                    RowBox[{
                    FractionBox["1", "M"], 
                    RowBox[{
                    RowBox[{"gr", "''"}], "[", "r", "]"}]}]}], "\[Equal]", 
                   "0"}], ",", " ", "\[IndentingNewLine]", 
                  RowBox[{
                   RowBox[{
                    RowBox[{"gr", "'"}], "[", "\[Delta]", "]"}], "\[Equal]", 
                   RowBox[{
                    RowBox[{"(", 
                    RowBox[{"\[Alpha]", " ", "M"}], ")"}], "-", 
                    RowBox[{"\[Delta]", 
                    SuperscriptBox[
                    RowBox[{"(", 
                    RowBox[{"M", " ", "\[Alpha]"}], ")"}], "2"]}]}]}], ",", 
                  "\[IndentingNewLine]", " ", 
                  RowBox[{
                   RowBox[{"gr", "[", "\[Delta]", "]"}], "\[Equal]", 
                   RowBox[{
                    RowBox[{"\[Delta]", 
                    RowBox[{"(", 
                    RowBox[{"\[Alpha]", " ", "M"}], ")"}]}], "-", " ", 
                    RowBox[{
                    FractionBox["1", "2"], 
                    SuperscriptBox["\[Delta]", "2"], 
                    SuperscriptBox[
                    RowBox[{"(", 
                    RowBox[{"\[Alpha]", " ", "M"}], ")"}], "2"]}]}]}]}], 
                 "}"}], ",", "gr", ",", 
                RowBox[{"{", 
                 RowBox[{"r", ",", "\[Delta]", ",", "inf"}], "}"}]}], "]"}]}],
              ";", "\[IndentingNewLine]", 
             RowBox[{
              RowBox[{"gr0", "[", "r_", "]"}], "=", 
              SubscriptBox[
               RowBox[{"(", 
                RowBox[{
                 RowBox[{"gr", "[", "r", "]"}], "/.", "s01"}], ")"}], 
               RowBox[{
               "\[LeftDoubleBracket]", "1", "\[RightDoubleBracket]"}]]}], ";",
              "\[IndentingNewLine]", 
             RowBox[{"s1", "=", 
              RowBox[{"NDSolve", "[", 
               RowBox[{
                RowBox[{"{", 
                 RowBox[{
                  RowBox[{
                   RowBox[{
                    RowBox[{"rho", "'"}], "[", "x", "]"}], "\[Equal]", 
                   RowBox[{
                    FractionBox[
                    RowBox[{" ", 
                    RowBox[{"Nc", " ", 
                    SuperscriptBox["M", "2"], " ", 
                    SuperscriptBox["\[Alpha]", "3"]}]}], 
                    RowBox[{"8", "\[Pi]"}]], 
                    RowBox[{"Im", "[", 
                    RowBox[{
                    FractionBox["1", 
                    SuperscriptBox[
                    RowBox[{"(", 
                    RowBox[{"gr0", "[", "x", "]"}], ")"}], "2"]], "+", 
                    FractionBox["36", 
                    SuperscriptBox[
                    RowBox[{"(", 
                    RowBox[{"gr1", "[", "x", "]"}], ")"}], "2"]]}], "]"}]}]}],
                   ",", 
                  RowBox[{
                   RowBox[{"rho", "[", "\[Delta]", "]"}], "\[Equal]", "0"}]}],
                  "}"}], ",", "rho", ",", 
                RowBox[{"{", 
                 RowBox[{"x", ",", "\[Delta]", ",", "inf"}], "}"}]}], "]"}]}],
              ";", "\[IndentingNewLine]", 
             RowBox[{
              RowBox[{"rhow", "[", "r_", "]"}], "=", 
              SubscriptBox[
               RowBox[{"(", 
                RowBox[{
                 RowBox[{"rho", "[", "r", "]"}], "/.", "s1"}], ")"}], 
               RowBox[{
               "\[LeftDoubleBracket]", "1", "\[RightDoubleBracket]"}]]}], ";",
              "\[IndentingNewLine]", 
             RowBox[{"ParallelSow", "[", 
              RowBox[{"{", 
               RowBox[{
                RowBox[{"\[Omega]", "+", 
                 RowBox[{"2", "M"}]}], ",", 
                RowBox[{"rhow", "[", "inf", "]"}]}], "}"}], "]"}]}], ",", 
            RowBox[{"{", 
             RowBox[{"it", ",", "1", ",", 
              FractionBox[
               RowBox[{"\[Omega]max", "-", "\[Omega]min"}], 
               RowBox[{"d\[Omega]", " ", "M"}]]}], "}"}]}], "]"}], "//", 
          "Reap"}], "//", "Last"}], "//", "First"}]}], ";", 
      "\[IndentingNewLine]", "\[IndentingNewLine]", 
      RowBox[{"ccsT", "=", 
       RowBox[{"ParallelTable", "[", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{
           RowBox[{"\[Rho]table", "[", 
            RowBox[{"[", 
             RowBox[{"i", ",", "1"}], "]"}], "]"}], ",", 
           FractionBox[
            RowBox[{"\[Rho]table", "[", 
             RowBox[{"[", 
              RowBox[{"i", ",", "2"}], "]"}], "]"}], 
            SuperscriptBox[
             RowBox[{"\[Rho]table", "[", 
              RowBox[{"[", 
               RowBox[{"i", ",", "1"}], "]"}], "]"}], "2"]]}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"i", ",", "1", ",", 
           RowBox[{"Length", "[", "\[Rho]table", "]"}]}], "}"}]}], "]"}]}], 
      ";", "\[IndentingNewLine]", 
      RowBox[{"Tstring", "=", 
       RowBox[{"Round", "[", 
        RowBox[{"T", "*", "1000"}], "]"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"Export", "[", 
       RowBox[{
        RowBox[{"\"\<cc/pwccT\>\"", "<>", 
         RowBox[{"ToString", "[", "Tstring", "]"}], "<>", 
         "\"\<spectra.dat\>\""}], ",", 
        RowBox[{"Sort", "[", "ccsT", "]"}]}], "]"}], ";"}]}], 
    "\[IndentingNewLine]", "]"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.724397604460712*^9, 3.724397621092863*^9}, {
   3.724398705481254*^9, 3.724398705798315*^9}, {3.72440624506767*^9, 
   3.7244062457361317`*^9}, {3.7244423136168756`*^9, 3.724442340980721*^9}, {
   3.7244423712224417`*^9, 3.724442377050403*^9}, {3.724442465925974*^9, 
   3.724442518695669*^9}, {3.7244426255599117`*^9, 3.724442639076613*^9}, {
   3.724443729204352*^9, 3.724443729749022*^9}, {3.724443881656342*^9, 
   3.7244438842850027`*^9}, 3.725261621115453*^9, 3.72526166634648*^9, {
   3.725271550289123*^9, 3.7252715504130163`*^9}, {3.725271609402791*^9, 
   3.7252716095188437`*^9}, {3.7252717762497*^9, 3.725271782362536*^9}, {
   3.725271824500347*^9, 3.725271826035269*^9}, {3.725271857701564*^9, 
   3.725271858192912*^9}, {3.725271928114049*^9, 3.7252719496618757`*^9}, {
   3.725271981807578*^9, 3.725271987122878*^9}, {3.725273718896678*^9, 
   3.72527377251343*^9}, {3.725273963159111*^9, 3.725273966198284*^9}, {
   3.725364382855975*^9, 3.725364384697238*^9}, {3.725364432753635*^9, 
   3.725364433681274*^9}, {3.725364595553596*^9, 3.725364595868292*^9}, {
   3.725364661141473*^9, 3.725364661301785*^9}, {3.725365068510941*^9, 
   3.7253650691073112`*^9}, {3.7256202924505177`*^9, 
   3.7256202938854313`*^9}, {3.7256265502253428`*^9, 3.725626559021003*^9}, {
   3.725798091627001*^9, 3.725798108963685*^9}, {3.725798150844287*^9, 
   3.725798156038417*^9}, {3.726312422974263*^9, 3.726312439922279*^9}, {
   3.726313778060986*^9, 3.726313794010726*^9}, {3.726313854887352*^9, 
   3.726313855417986*^9}, {3.726377533478507*^9, 3.726377535012369*^9}, {
   3.726379310729051*^9, 3.726379315935656*^9}, {3.726379351066524*^9, 
   3.7263793563685627`*^9}, 3.7263814533362722`*^9, {3.726468979312665*^9, 
   3.726469044993416*^9}, {3.726564279540083*^9, 3.726564288774165*^9}, {
   3.726564330005303*^9, 3.726564342424973*^9}, {3.7265645007454853`*^9, 
   3.7265645054085903`*^9}, 3.726565145221386*^9, {3.726836923420138*^9, 
   3.726836925204391*^9}, {3.7268417497448387`*^9, 3.726841749854889*^9}, {
   3.727357927216405*^9, 3.7273579306359463`*^9}, 3.72735811608375*^9, {
   3.7273582875862513`*^9, 3.727358296888235*^9}, {3.727520051444908*^9, 
   3.7275200665503483`*^9}, {3.727539483513708*^9, 3.72753949210455*^9}, {
   3.7275398377710333`*^9, 3.727539869000495*^9}, {3.7275879806550293`*^9, 
   3.727587984698921*^9}, {3.727606150288821*^9, 3.727606150994812*^9}, {
   3.728932814314426*^9, 3.728932860160056*^9}, 3.7289333254815903`*^9, 
   3.7299208725344887`*^9, {3.730007040539275*^9, 3.7300070509717903`*^9}, {
   3.730007357183831*^9, 3.7300073662633142`*^9}, {3.7331192829046183`*^9, 
   3.733119300197537*^9}, {3.733120717385792*^9, 3.733120717697629*^9}, {
   3.7331222711038847`*^9, 3.733122272703622*^9}, {3.733211538849382*^9, 
   3.7332115515038567`*^9}, {3.7332289443370447`*^9, 
   3.7332289447842827`*^9}, {3.742215948846467*^9, 3.742215959437643*^9}, {
   3.742216025305929*^9, 3.742216093257207*^9}, {3.7422172078868933`*^9, 
   3.7422172275906973`*^9}, 3.74221727383118*^9, {3.742217585069265*^9, 
   3.742217591716959*^9}, {3.7422176229823923`*^9, 3.742217653035615*^9}, {
   3.742269341112874*^9, 3.742269371527761*^9}, 3.742275694936644*^9, {
   3.742289467062118*^9, 3.742289486771803*^9}, {3.742289520463562*^9, 
   3.7422896027136*^9}, {3.7422896364561243`*^9, 3.74228964347093*^9}, {
   3.742289678232355*^9, 3.742289708137301*^9}, {3.7422897506101*^9, 
   3.7422897587096577`*^9}, {3.7422920316457787`*^9, 3.742292034487727*^9}, 
   3.742292186682322*^9, {3.742292303240778*^9, 3.742292303483521*^9}, {
   3.742292362481593*^9, 3.742292372544711*^9}, {3.742292408813004*^9, 
   3.742292447857381*^9}, {3.7422968206130743`*^9, 3.742296843480155*^9}, {
   3.7422970160890417`*^9, 3.742297024417719*^9}, {3.742297074890059*^9, 
   3.74229711910509*^9}, {3.7422973083294992`*^9, 3.742297309298213*^9}, {
   3.742297354168077*^9, 3.742297359897736*^9}, {3.742297415918168*^9, 
   3.7422974232482452`*^9}, {3.742297467739311*^9, 3.742297612963316*^9}, {
   3.7422977860232887`*^9, 3.7422977903561068`*^9}, {3.74229798181938*^9, 
   3.742298023677857*^9}, {3.7422980561712513`*^9, 3.74229805925661*^9}, 
   3.742298106308654*^9, {3.742300221204397*^9, 3.742300269720365*^9}, {
   3.742300416216001*^9, 3.742300416917211*^9}, {3.742300536315893*^9, 
   3.742300546756034*^9}, {3.742300626604027*^9, 3.742300638323701*^9}, {
   3.7423006769018583`*^9, 3.7423007163572683`*^9}, {3.7435037431402884`*^9, 
   3.743503799356997*^9}, {3.7435038425347443`*^9, 3.743503908279688*^9}, {
   3.7435046316079397`*^9, 3.743504651390107*^9}, {3.7435061817655*^9, 
   3.743506182021901*^9}, {3.743506221115732*^9, 3.743506260429055*^9}, 
   3.743506602721039*^9, {3.745326287005268*^9, 3.7453262895250797`*^9}, 
   3.7477314163437967`*^9, {3.747835255812366*^9, 3.747835335858015*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"pwaveccuspectra", "[", 
    RowBox[{"n_", ",", "Tscan_"}], "]"}], ":=", 
   RowBox[{"Block", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{"T", "=", 
        RowBox[{"Tscan", "[", 
         RowBox[{"[", "n", "]"}], "]"}]}], ",", 
       RowBox[{"mD", "=", 
        RowBox[{"mDcal", "[", 
         RowBox[{
          RowBox[{"2", "\[Pi]"}], ",", 
          RowBox[{"Tscan", "[", 
           RowBox[{"[", "n", "]"}], "]"}], ",", 
          RowBox[{"kfinalu", "[", 
           RowBox[{"[", "1", "]"}], "]"}], ",", 
          RowBox[{"kfinalu", "[", 
           RowBox[{"[", "2", "]"}], "]"}]}], "]"}]}], ",", 
       RowBox[{"\[Sigma]", "=", 
        RowBox[{"\[Sigma]cont", "[", 
         RowBox[{"[", "1", "]"}], "]"}]}], ",", 
       RowBox[{"\[Alpha]", "=", 
        RowBox[{"\[Alpha]cont", "[", 
         RowBox[{"[", "1", "]"}], "]"}]}], ",", 
       RowBox[{"c", "=", 
        RowBox[{"ccont", "[", 
         RowBox[{"[", "1", "]"}], "]"}]}], ",", 
       RowBox[{"M", "=", "Mc"}], ",", 
       RowBox[{"l", "=", "1"}], ",", 
       RowBox[{"\[Omega]min", "=", 
        RowBox[{"-", "1"}]}], ",", 
       RowBox[{"\[Omega]max", "=", "2"}], ",", "ccsT", ",", "Tstring", ",", 
       "inf", ",", "rev", ",", "imvc", ",", "V", ",", "\[Rho]table", ",", 
       "\[Omega]", ",", "s0", ",", "gr", ",", "gr1", ",", "s01", ",", "gr0", 
       ",", "s1", ",", "rhow"}], "}"}], ",", "\[IndentingNewLine]", 
     "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"rev", "=", 
       RowBox[{"Interpolation", "[", 
        RowBox[{"Join", "[", 
         RowBox[{
          RowBox[{"ParallelTable", "[", 
           RowBox[{
            RowBox[{"{", 
             RowBox[{"r", ",", 
              RowBox[{"ReVsb", "[", 
               RowBox[{
               "r", ",", "mD", ",", "\[Alpha]", ",", "\[Sigma]", ",", "c"}], 
               "]"}]}], "}"}], ",", 
            RowBox[{"{", 
             RowBox[{"r", ",", 
              RowBox[{"1", "/", "1000"}], ",", "10", ",", 
              RowBox[{"1", "/", "100"}]}], "}"}]}], "]"}], ",", 
          RowBox[{"ParallelTable", "[", 
           RowBox[{
            RowBox[{"{", 
             RowBox[{"r", ",", 
              RowBox[{"ReVsb", "[", 
               RowBox[{
               "r", ",", "mD", ",", "\[Alpha]", ",", "\[Sigma]", ",", "c"}], 
               "]"}]}], "}"}], ",", 
            RowBox[{"{", 
             RowBox[{"r", ",", 
              RowBox[{"101", "/", "10"}], ",", "25", ",", 
              RowBox[{"1", "/", "10"}]}], "}"}]}], "]"}], ",", 
          RowBox[{"ParallelTable", "[", 
           RowBox[{
            RowBox[{"{", 
             RowBox[{"r", ",", 
              RowBox[{"ReVsb", "[", 
               RowBox[{
               "r", ",", "mD", ",", "\[Alpha]", ",", "\[Sigma]", ",", "c"}], 
               "]"}]}], "}"}], ",", 
            RowBox[{"{", 
             RowBox[{"r", ",", "26", ",", "1500", ",", "1"}], "}"}]}], "]"}], 
          ",", 
          RowBox[{"ParallelTable", "[", 
           RowBox[{
            RowBox[{"{", 
             RowBox[{"r", ",", 
              RowBox[{"ReVsb", "[", 
               RowBox[{
               "r", ",", "mD", ",", "\[Alpha]", ",", "\[Sigma]", ",", "c"}], 
               "]"}]}], "}"}], ",", 
            RowBox[{"{", 
             RowBox[{"r", ",", "1510", ",", "20000", ",", "1000"}], "}"}]}], 
           "]"}]}], "]"}], "]"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"imvc", "=", 
       RowBox[{"Interpolation", "[", 
        RowBox[{"Join", "[", 
         RowBox[{
          RowBox[{"ParallelTable", "[", 
           RowBox[{
            RowBox[{"{", 
             RowBox[{"r", ",", 
              RowBox[{"ImVc", "[", 
               RowBox[{"r", ",", "mD", ",", "\[Alpha]", ",", "T"}], "]"}]}], 
             "}"}], ",", 
            RowBox[{"{", 
             RowBox[{"r", ",", 
              RowBox[{"1", "/", "1000"}], ",", "10", ",", 
              RowBox[{"1", "/", "100"}]}], "}"}]}], "]"}], ",", 
          RowBox[{"ParallelTable", "[", 
           RowBox[{
            RowBox[{"{", 
             RowBox[{"r", ",", 
              RowBox[{"ImVc", "[", 
               RowBox[{"r", ",", "mD", ",", "\[Alpha]", ",", "T"}], "]"}]}], 
             "}"}], ",", 
            RowBox[{"{", 
             RowBox[{"r", ",", 
              RowBox[{"101", "/", "10"}], ",", "25", ",", 
              RowBox[{"1", "/", "10"}]}], "}"}]}], "]"}], ",", 
          RowBox[{"ParallelTable", "[", 
           RowBox[{
            RowBox[{"{", 
             RowBox[{"r", ",", 
              RowBox[{"ImVc", "[", 
               RowBox[{"r", ",", "mD", ",", "\[Alpha]", ",", "T"}], "]"}]}], 
             "}"}], ",", 
            RowBox[{"{", 
             RowBox[{"r", ",", "26", ",", "1500", ",", "1"}], "}"}]}], "]"}], 
          ",", 
          RowBox[{"ParallelTable", "[", 
           RowBox[{
            RowBox[{"{", 
             RowBox[{"r", ",", 
              RowBox[{"ImVc", "[", 
               RowBox[{"r", ",", "mD", ",", "\[Alpha]", ",", "T"}], "]"}]}], 
             "}"}], ",", 
            RowBox[{"{", 
             RowBox[{"r", ",", "1510", ",", "20000", ",", "1000"}], "}"}]}], 
           "]"}]}], "]"}], "]"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"V", "[", "x_", "]"}], ":=", 
       RowBox[{
        RowBox[{"rev", "[", "x", "]"}], "+", 
        RowBox[{"\[ImaginaryI]", " ", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{"imvc", "[", "x", "]"}], "+", 
           RowBox[{
            RowBox[{"ImVsreguInter", "[", "n", "]"}], "[", "x", "]"}]}], 
          ")"}]}]}]}], ";", "\[IndentingNewLine]", "\[IndentingNewLine]", 
      RowBox[{"\[Rho]table", "=", 
       RowBox[{
        RowBox[{
         RowBox[{
          RowBox[{"ParallelDo", "[", 
           RowBox[{
            RowBox[{
             RowBox[{"\[Omega]", "=", 
              RowBox[{"\[Omega]min", "+", 
               RowBox[{
                RowBox[{"(", 
                 RowBox[{"it", "-", "1"}], ")"}], " ", "d\[Omega]", " ", 
                "M"}]}]}], ";", 
             RowBox[{"inf", "=", 
              RowBox[{"40", "+", 
               RowBox[{"500", "*", "it", "*", "d\[Omega]"}]}]}], ";", 
             "\[IndentingNewLine]", 
             RowBox[{"s0", "=", 
              RowBox[{"NDSolve", "[", 
               RowBox[{
                RowBox[{"{", 
                 RowBox[{
                  RowBox[{
                   RowBox[{
                    RowBox[{
                    RowBox[{"(", 
                    RowBox[{"\[Omega]", "-", 
                    FractionBox[
                    RowBox[{"l", 
                    RowBox[{"(", 
                    RowBox[{"l", "+", "1"}], ")"}]}], 
                    RowBox[{"M", " ", 
                    SuperscriptBox["r", "2"]}]], "-", 
                    RowBox[{"Re", "[", 
                    RowBox[{"V", "[", "r", "]"}], "]"}], "+", 
                    RowBox[{"\[ImaginaryI]", " ", 
                    RowBox[{"Abs", "[", 
                    RowBox[{"Im", "[", 
                    RowBox[{"V", "[", "r", "]"}], "]"}], "]"}]}]}], ")"}], 
                    RowBox[{"gr", "[", "r", "]"}]}], "+", 
                    RowBox[{
                    FractionBox["1", "M"], 
                    RowBox[{
                    RowBox[{"gr", "''"}], "[", "r", "]"}]}]}], "\[Equal]", 
                   "0"}], ",", " ", "\[IndentingNewLine]", 
                  RowBox[{
                   RowBox[{
                    RowBox[{"gr", "'"}], "[", "\[Delta]", "]"}], "\[Equal]", 
                   RowBox[{
                    RowBox[{"2", " ", "\[Delta]", 
                    SuperscriptBox[
                    RowBox[{"(", 
                    RowBox[{"\[Alpha]", " ", "M"}], ")"}], "2"]}], "-", 
                    RowBox[{
                    FractionBox["3", "4"], 
                    SuperscriptBox["\[Delta]", "2"], 
                    SuperscriptBox[
                    RowBox[{"(", 
                    RowBox[{"M", " ", "\[Alpha]"}], ")"}], "3"]}]}]}], ",", 
                  "\[IndentingNewLine]", " ", 
                  RowBox[{
                   RowBox[{"gr", "[", "\[Delta]", "]"}], "==", " ", 
                   RowBox[{
                    RowBox[{
                    SuperscriptBox["\[Delta]", "2"], 
                    SuperscriptBox[
                    RowBox[{"(", 
                    RowBox[{"\[Alpha]", " ", "M"}], ")"}], "2"]}], "-", 
                    RowBox[{
                    FractionBox["1", "4"], 
                    SuperscriptBox["\[Delta]", "3"], 
                    SuperscriptBox[
                    RowBox[{"(", 
                    RowBox[{"M", " ", "\[Alpha]"}], ")"}], "3"]}]}]}]}], 
                 "}"}], ",", "gr", ",", 
                RowBox[{"{", 
                 RowBox[{"r", ",", "\[Delta]", ",", "inf"}], "}"}], ",", 
                RowBox[{"PrecisionGoal", "\[Rule]", "10"}], ",", 
                RowBox[{"MaxSteps", "\[Rule]", "1000000"}]}], "]"}]}], ";", 
             "\[IndentingNewLine]", 
             RowBox[{
              RowBox[{"gr1", "[", "r_", "]"}], "=", 
              SubscriptBox[
               RowBox[{"(", 
                RowBox[{
                 RowBox[{"gr", "[", "r", "]"}], "/.", "s0"}], ")"}], 
               RowBox[{
               "\[LeftDoubleBracket]", "1", "\[RightDoubleBracket]"}]]}], ";",
              "\[IndentingNewLine]", 
             RowBox[{"s01", "=", 
              RowBox[{"NDSolve", "[", 
               RowBox[{
                RowBox[{"{", 
                 RowBox[{
                  RowBox[{
                   RowBox[{
                    RowBox[{
                    RowBox[{"(", 
                    RowBox[{"\[Omega]", "-", 
                    FractionBox[
                    RowBox[{"l", 
                    RowBox[{"(", 
                    RowBox[{"l", "+", "1"}], ")"}]}], 
                    RowBox[{"M", " ", 
                    SuperscriptBox["r", "2"]}]], "-", 
                    RowBox[{"Re", "[", 
                    RowBox[{"V", "[", "r", "]"}], "]"}], "+", 
                    RowBox[{"\[ImaginaryI]", " ", 
                    RowBox[{"Abs", "[", 
                    RowBox[{"Im", "[", 
                    RowBox[{"V", "[", "r", "]"}], "]"}], "]"}]}]}], ")"}], 
                    RowBox[{"gr", "[", "r", "]"}]}], "+", 
                    RowBox[{
                    FractionBox["1", "M"], 
                    RowBox[{
                    RowBox[{"gr", "''"}], "[", "r", "]"}]}]}], "\[Equal]", 
                   "0"}], ",", " ", "\[IndentingNewLine]", 
                  RowBox[{
                   RowBox[{
                    RowBox[{"gr", "'"}], "[", "\[Delta]", "]"}], "\[Equal]", 
                   RowBox[{
                    RowBox[{"(", 
                    RowBox[{"\[Alpha]", " ", "M"}], ")"}], "-", 
                    RowBox[{"\[Delta]", 
                    SuperscriptBox[
                    RowBox[{"(", 
                    RowBox[{"M", " ", "\[Alpha]"}], ")"}], "2"]}]}]}], ",", 
                  "\[IndentingNewLine]", " ", 
                  RowBox[{
                   RowBox[{"gr", "[", "\[Delta]", "]"}], "\[Equal]", 
                   RowBox[{
                    RowBox[{"\[Delta]", 
                    RowBox[{"(", 
                    RowBox[{"\[Alpha]", " ", "M"}], ")"}]}], "-", " ", 
                    RowBox[{
                    FractionBox["1", "2"], 
                    SuperscriptBox["\[Delta]", "2"], 
                    SuperscriptBox[
                    RowBox[{"(", 
                    RowBox[{"\[Alpha]", " ", "M"}], ")"}], "2"]}]}]}]}], 
                 "}"}], ",", "gr", ",", 
                RowBox[{"{", 
                 RowBox[{"r", ",", "\[Delta]", ",", "inf"}], "}"}]}], "]"}]}],
              ";", "\[IndentingNewLine]", 
             RowBox[{
              RowBox[{"gr0", "[", "r_", "]"}], "=", 
              SubscriptBox[
               RowBox[{"(", 
                RowBox[{
                 RowBox[{"gr", "[", "r", "]"}], "/.", "s01"}], ")"}], 
               RowBox[{
               "\[LeftDoubleBracket]", "1", "\[RightDoubleBracket]"}]]}], ";",
              "\[IndentingNewLine]", 
             RowBox[{"s1", "=", 
              RowBox[{"NDSolve", "[", 
               RowBox[{
                RowBox[{"{", 
                 RowBox[{
                  RowBox[{
                   RowBox[{
                    RowBox[{"rho", "'"}], "[", "x", "]"}], "\[Equal]", 
                   RowBox[{
                    FractionBox[
                    RowBox[{" ", 
                    RowBox[{"Nc", " ", 
                    SuperscriptBox["M", "2"], " ", 
                    SuperscriptBox["\[Alpha]", "3"]}]}], 
                    RowBox[{"8", "\[Pi]"}]], 
                    RowBox[{"Im", "[", 
                    RowBox[{
                    FractionBox["1", 
                    SuperscriptBox[
                    RowBox[{"(", 
                    RowBox[{"gr0", "[", "x", "]"}], ")"}], "2"]], "+", 
                    FractionBox["36", 
                    SuperscriptBox[
                    RowBox[{"(", 
                    RowBox[{"gr1", "[", "x", "]"}], ")"}], "2"]]}], "]"}]}]}],
                   ",", 
                  RowBox[{
                   RowBox[{"rho", "[", "\[Delta]", "]"}], "\[Equal]", "0"}]}],
                  "}"}], ",", "rho", ",", 
                RowBox[{"{", 
                 RowBox[{"x", ",", "\[Delta]", ",", "inf"}], "}"}]}], "]"}]}],
              ";", "\[IndentingNewLine]", 
             RowBox[{
              RowBox[{"rhow", "[", "r_", "]"}], "=", 
              SubscriptBox[
               RowBox[{"(", 
                RowBox[{
                 RowBox[{"rho", "[", "r", "]"}], "/.", "s1"}], ")"}], 
               RowBox[{
               "\[LeftDoubleBracket]", "1", "\[RightDoubleBracket]"}]]}], ";",
              "\[IndentingNewLine]", 
             RowBox[{"ParallelSow", "[", 
              RowBox[{"{", 
               RowBox[{
                RowBox[{"\[Omega]", "+", 
                 RowBox[{"2", "M"}]}], ",", 
                RowBox[{"rhow", "[", "inf", "]"}]}], "}"}], "]"}]}], ",", 
            RowBox[{"{", 
             RowBox[{"it", ",", "1", ",", 
              FractionBox[
               RowBox[{"\[Omega]max", "-", "\[Omega]min"}], 
               RowBox[{"d\[Omega]", " ", "M"}]]}], "}"}]}], "]"}], "//", 
          "Reap"}], "//", "Last"}], "//", "First"}]}], ";", 
      "\[IndentingNewLine]", "\[IndentingNewLine]", 
      RowBox[{"ccsT", "=", 
       RowBox[{"ParallelTable", "[", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{
           RowBox[{"\[Rho]table", "[", 
            RowBox[{"[", 
             RowBox[{"i", ",", "1"}], "]"}], "]"}], ",", 
           FractionBox[
            RowBox[{"\[Rho]table", "[", 
             RowBox[{"[", 
              RowBox[{"i", ",", "2"}], "]"}], "]"}], 
            SuperscriptBox[
             RowBox[{"\[Rho]table", "[", 
              RowBox[{"[", 
               RowBox[{"i", ",", "1"}], "]"}], "]"}], "2"]]}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"i", ",", "1", ",", 
           RowBox[{"Length", "[", "\[Rho]table", "]"}]}], "}"}]}], "]"}]}], 
      ";", "\[IndentingNewLine]", 
      RowBox[{"Tstring", "=", 
       RowBox[{"Round", "[", 
        RowBox[{"T", "*", "1000"}], "]"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"Export", "[", 
       RowBox[{
        RowBox[{"\"\<cc/pwccT\>\"", "<>", 
         RowBox[{"ToString", "[", "Tstring", "]"}], "<>", 
         "\"\<uspectra.dat\>\""}], ",", 
        RowBox[{"Sort", "[", "ccsT", "]"}]}], "]"}], ";"}]}], 
    "\[IndentingNewLine]", "]"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.747936012789494*^9, 3.747936021629368*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"pwavecclspectra", "[", 
    RowBox[{"n_", ",", "Tscan_"}], "]"}], ":=", 
   RowBox[{"Block", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{"T", "=", 
        RowBox[{"Tscan", "[", 
         RowBox[{"[", "n", "]"}], "]"}]}], ",", 
       RowBox[{"mD", "=", 
        RowBox[{"mDcal", "[", 
         RowBox[{
          RowBox[{"2", "\[Pi]"}], ",", 
          RowBox[{"Tscan", "[", 
           RowBox[{"[", "n", "]"}], "]"}], ",", 
          RowBox[{"kfinall", "[", 
           RowBox[{"[", "1", "]"}], "]"}], ",", 
          RowBox[{"kfinall", "[", 
           RowBox[{"[", "2", "]"}], "]"}]}], "]"}]}], ",", 
       RowBox[{"\[Sigma]", "=", 
        RowBox[{"\[Sigma]cont", "[", 
         RowBox[{"[", "1", "]"}], "]"}]}], ",", 
       RowBox[{"\[Alpha]", "=", 
        RowBox[{"\[Alpha]cont", "[", 
         RowBox[{"[", "1", "]"}], "]"}]}], ",", 
       RowBox[{"c", "=", 
        RowBox[{"ccont", "[", 
         RowBox[{"[", "1", "]"}], "]"}]}], ",", 
       RowBox[{"M", "=", "Mc"}], ",", 
       RowBox[{"l", "=", "1"}], ",", 
       RowBox[{"\[Omega]min", "=", 
        RowBox[{"-", "1"}]}], ",", 
       RowBox[{"\[Omega]max", "=", "2"}], ",", "ccsT", ",", "Tstring", ",", 
       "inf", ",", "rev", ",", "imvc", ",", "V", ",", "\[Rho]table", ",", 
       "\[Omega]", ",", "s0", ",", "gr", ",", "gr1", ",", "s01", ",", "gr0", 
       ",", "s1", ",", "rhow"}], "}"}], ",", "\[IndentingNewLine]", 
     "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"rev", "=", 
       RowBox[{"Interpolation", "[", 
        RowBox[{"Join", "[", 
         RowBox[{
          RowBox[{"ParallelTable", "[", 
           RowBox[{
            RowBox[{"{", 
             RowBox[{"r", ",", 
              RowBox[{"ReVsb", "[", 
               RowBox[{
               "r", ",", "mD", ",", "\[Alpha]", ",", "\[Sigma]", ",", "c"}], 
               "]"}]}], "}"}], ",", 
            RowBox[{"{", 
             RowBox[{"r", ",", 
              RowBox[{"1", "/", "1000"}], ",", "10", ",", 
              RowBox[{"1", "/", "100"}]}], "}"}]}], "]"}], ",", 
          RowBox[{"ParallelTable", "[", 
           RowBox[{
            RowBox[{"{", 
             RowBox[{"r", ",", 
              RowBox[{"ReVsb", "[", 
               RowBox[{
               "r", ",", "mD", ",", "\[Alpha]", ",", "\[Sigma]", ",", "c"}], 
               "]"}]}], "}"}], ",", 
            RowBox[{"{", 
             RowBox[{"r", ",", 
              RowBox[{"101", "/", "10"}], ",", "25", ",", 
              RowBox[{"1", "/", "10"}]}], "}"}]}], "]"}], ",", 
          RowBox[{"ParallelTable", "[", 
           RowBox[{
            RowBox[{"{", 
             RowBox[{"r", ",", 
              RowBox[{"ReVsb", "[", 
               RowBox[{
               "r", ",", "mD", ",", "\[Alpha]", ",", "\[Sigma]", ",", "c"}], 
               "]"}]}], "}"}], ",", 
            RowBox[{"{", 
             RowBox[{"r", ",", "26", ",", "1500", ",", "1"}], "}"}]}], "]"}], 
          ",", 
          RowBox[{"ParallelTable", "[", 
           RowBox[{
            RowBox[{"{", 
             RowBox[{"r", ",", 
              RowBox[{"ReVsb", "[", 
               RowBox[{
               "r", ",", "mD", ",", "\[Alpha]", ",", "\[Sigma]", ",", "c"}], 
               "]"}]}], "}"}], ",", 
            RowBox[{"{", 
             RowBox[{"r", ",", "1510", ",", "20000", ",", "1000"}], "}"}]}], 
           "]"}]}], "]"}], "]"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"imvc", "=", 
       RowBox[{"Interpolation", "[", 
        RowBox[{"Join", "[", 
         RowBox[{
          RowBox[{"ParallelTable", "[", 
           RowBox[{
            RowBox[{"{", 
             RowBox[{"r", ",", 
              RowBox[{"ImVc", "[", 
               RowBox[{"r", ",", "mD", ",", "\[Alpha]", ",", "T"}], "]"}]}], 
             "}"}], ",", 
            RowBox[{"{", 
             RowBox[{"r", ",", 
              RowBox[{"1", "/", "1000"}], ",", "10", ",", 
              RowBox[{"1", "/", "100"}]}], "}"}]}], "]"}], ",", 
          RowBox[{"ParallelTable", "[", 
           RowBox[{
            RowBox[{"{", 
             RowBox[{"r", ",", 
              RowBox[{"ImVc", "[", 
               RowBox[{"r", ",", "mD", ",", "\[Alpha]", ",", "T"}], "]"}]}], 
             "}"}], ",", 
            RowBox[{"{", 
             RowBox[{"r", ",", 
              RowBox[{"101", "/", "10"}], ",", "25", ",", 
              RowBox[{"1", "/", "10"}]}], "}"}]}], "]"}], ",", 
          RowBox[{"ParallelTable", "[", 
           RowBox[{
            RowBox[{"{", 
             RowBox[{"r", ",", 
              RowBox[{"ImVc", "[", 
               RowBox[{"r", ",", "mD", ",", "\[Alpha]", ",", "T"}], "]"}]}], 
             "}"}], ",", 
            RowBox[{"{", 
             RowBox[{"r", ",", "26", ",", "1500", ",", "1"}], "}"}]}], "]"}], 
          ",", 
          RowBox[{"ParallelTable", "[", 
           RowBox[{
            RowBox[{"{", 
             RowBox[{"r", ",", 
              RowBox[{"ImVc", "[", 
               RowBox[{"r", ",", "mD", ",", "\[Alpha]", ",", "T"}], "]"}]}], 
             "}"}], ",", 
            RowBox[{"{", 
             RowBox[{"r", ",", "1510", ",", "20000", ",", "1000"}], "}"}]}], 
           "]"}]}], "]"}], "]"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"V", "[", "x_", "]"}], ":=", 
       RowBox[{
        RowBox[{"rev", "[", "x", "]"}], "+", 
        RowBox[{"\[ImaginaryI]", " ", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{"imvc", "[", "x", "]"}], "+", 
           RowBox[{
            RowBox[{"ImVsreglInter", "[", "n", "]"}], "[", "x", "]"}]}], 
          ")"}]}]}]}], ";", "\[IndentingNewLine]", "\[IndentingNewLine]", 
      RowBox[{"\[Rho]table", "=", 
       RowBox[{
        RowBox[{
         RowBox[{
          RowBox[{"ParallelDo", "[", 
           RowBox[{
            RowBox[{
             RowBox[{"\[Omega]", "=", 
              RowBox[{"\[Omega]min", "+", 
               RowBox[{
                RowBox[{"(", 
                 RowBox[{"it", "-", "1"}], ")"}], " ", "d\[Omega]", " ", 
                "M"}]}]}], ";", 
             RowBox[{"inf", "=", 
              RowBox[{"40", "+", 
               RowBox[{"500", "*", "it", "*", "d\[Omega]"}]}]}], ";", 
             "\[IndentingNewLine]", 
             RowBox[{"s0", "=", 
              RowBox[{"NDSolve", "[", 
               RowBox[{
                RowBox[{"{", 
                 RowBox[{
                  RowBox[{
                   RowBox[{
                    RowBox[{
                    RowBox[{"(", 
                    RowBox[{"\[Omega]", "-", 
                    FractionBox[
                    RowBox[{"l", 
                    RowBox[{"(", 
                    RowBox[{"l", "+", "1"}], ")"}]}], 
                    RowBox[{"M", " ", 
                    SuperscriptBox["r", "2"]}]], "-", 
                    RowBox[{"Re", "[", 
                    RowBox[{"V", "[", "r", "]"}], "]"}], "+", 
                    RowBox[{"\[ImaginaryI]", " ", 
                    RowBox[{"Abs", "[", 
                    RowBox[{"Im", "[", 
                    RowBox[{"V", "[", "r", "]"}], "]"}], "]"}]}]}], ")"}], 
                    RowBox[{"gr", "[", "r", "]"}]}], "+", 
                    RowBox[{
                    FractionBox["1", "M"], 
                    RowBox[{
                    RowBox[{"gr", "''"}], "[", "r", "]"}]}]}], "\[Equal]", 
                   "0"}], ",", " ", "\[IndentingNewLine]", 
                  RowBox[{
                   RowBox[{
                    RowBox[{"gr", "'"}], "[", "\[Delta]", "]"}], "\[Equal]", 
                   RowBox[{
                    RowBox[{"2", " ", "\[Delta]", 
                    SuperscriptBox[
                    RowBox[{"(", 
                    RowBox[{"\[Alpha]", " ", "M"}], ")"}], "2"]}], "-", 
                    RowBox[{
                    FractionBox["3", "4"], 
                    SuperscriptBox["\[Delta]", "2"], 
                    SuperscriptBox[
                    RowBox[{"(", 
                    RowBox[{"M", " ", "\[Alpha]"}], ")"}], "3"]}]}]}], ",", 
                  "\[IndentingNewLine]", " ", 
                  RowBox[{
                   RowBox[{"gr", "[", "\[Delta]", "]"}], "==", " ", 
                   RowBox[{
                    RowBox[{
                    SuperscriptBox["\[Delta]", "2"], 
                    SuperscriptBox[
                    RowBox[{"(", 
                    RowBox[{"\[Alpha]", " ", "M"}], ")"}], "2"]}], "-", 
                    RowBox[{
                    FractionBox["1", "4"], 
                    SuperscriptBox["\[Delta]", "3"], 
                    SuperscriptBox[
                    RowBox[{"(", 
                    RowBox[{"M", " ", "\[Alpha]"}], ")"}], "3"]}]}]}]}], 
                 "}"}], ",", "gr", ",", 
                RowBox[{"{", 
                 RowBox[{"r", ",", "\[Delta]", ",", "inf"}], "}"}], ",", 
                RowBox[{"PrecisionGoal", "\[Rule]", "10"}], ",", 
                RowBox[{"MaxSteps", "\[Rule]", "1000000"}]}], "]"}]}], ";", 
             "\[IndentingNewLine]", 
             RowBox[{
              RowBox[{"gr1", "[", "r_", "]"}], "=", 
              SubscriptBox[
               RowBox[{"(", 
                RowBox[{
                 RowBox[{"gr", "[", "r", "]"}], "/.", "s0"}], ")"}], 
               RowBox[{
               "\[LeftDoubleBracket]", "1", "\[RightDoubleBracket]"}]]}], ";",
              "\[IndentingNewLine]", 
             RowBox[{"s01", "=", 
              RowBox[{"NDSolve", "[", 
               RowBox[{
                RowBox[{"{", 
                 RowBox[{
                  RowBox[{
                   RowBox[{
                    RowBox[{
                    RowBox[{"(", 
                    RowBox[{"\[Omega]", "-", 
                    FractionBox[
                    RowBox[{"l", 
                    RowBox[{"(", 
                    RowBox[{"l", "+", "1"}], ")"}]}], 
                    RowBox[{"M", " ", 
                    SuperscriptBox["r", "2"]}]], "-", 
                    RowBox[{"Re", "[", 
                    RowBox[{"V", "[", "r", "]"}], "]"}], "+", 
                    RowBox[{"\[ImaginaryI]", " ", 
                    RowBox[{"Abs", "[", 
                    RowBox[{"Im", "[", 
                    RowBox[{"V", "[", "r", "]"}], "]"}], "]"}]}]}], ")"}], 
                    RowBox[{"gr", "[", "r", "]"}]}], "+", 
                    RowBox[{
                    FractionBox["1", "M"], 
                    RowBox[{
                    RowBox[{"gr", "''"}], "[", "r", "]"}]}]}], "\[Equal]", 
                   "0"}], ",", " ", "\[IndentingNewLine]", 
                  RowBox[{
                   RowBox[{
                    RowBox[{"gr", "'"}], "[", "\[Delta]", "]"}], "\[Equal]", 
                   RowBox[{
                    RowBox[{"(", 
                    RowBox[{"\[Alpha]", " ", "M"}], ")"}], "-", 
                    RowBox[{"\[Delta]", 
                    SuperscriptBox[
                    RowBox[{"(", 
                    RowBox[{"M", " ", "\[Alpha]"}], ")"}], "2"]}]}]}], ",", 
                  "\[IndentingNewLine]", " ", 
                  RowBox[{
                   RowBox[{"gr", "[", "\[Delta]", "]"}], "\[Equal]", 
                   RowBox[{
                    RowBox[{"\[Delta]", 
                    RowBox[{"(", 
                    RowBox[{"\[Alpha]", " ", "M"}], ")"}]}], "-", " ", 
                    RowBox[{
                    FractionBox["1", "2"], 
                    SuperscriptBox["\[Delta]", "2"], 
                    SuperscriptBox[
                    RowBox[{"(", 
                    RowBox[{"\[Alpha]", " ", "M"}], ")"}], "2"]}]}]}]}], 
                 "}"}], ",", "gr", ",", 
                RowBox[{"{", 
                 RowBox[{"r", ",", "\[Delta]", ",", "inf"}], "}"}]}], "]"}]}],
              ";", "\[IndentingNewLine]", 
             RowBox[{
              RowBox[{"gr0", "[", "r_", "]"}], "=", 
              SubscriptBox[
               RowBox[{"(", 
                RowBox[{
                 RowBox[{"gr", "[", "r", "]"}], "/.", "s01"}], ")"}], 
               RowBox[{
               "\[LeftDoubleBracket]", "1", "\[RightDoubleBracket]"}]]}], ";",
              "\[IndentingNewLine]", 
             RowBox[{"s1", "=", 
              RowBox[{"NDSolve", "[", 
               RowBox[{
                RowBox[{"{", 
                 RowBox[{
                  RowBox[{
                   RowBox[{
                    RowBox[{"rho", "'"}], "[", "x", "]"}], "\[Equal]", 
                   RowBox[{
                    FractionBox[
                    RowBox[{" ", 
                    RowBox[{"Nc", " ", 
                    SuperscriptBox["M", "2"], " ", 
                    SuperscriptBox["\[Alpha]", "3"]}]}], 
                    RowBox[{"8", "\[Pi]"}]], 
                    RowBox[{"Im", "[", 
                    RowBox[{
                    FractionBox["1", 
                    SuperscriptBox[
                    RowBox[{"(", 
                    RowBox[{"gr0", "[", "x", "]"}], ")"}], "2"]], "+", 
                    FractionBox["36", 
                    SuperscriptBox[
                    RowBox[{"(", 
                    RowBox[{"gr1", "[", "x", "]"}], ")"}], "2"]]}], "]"}]}]}],
                   ",", 
                  RowBox[{
                   RowBox[{"rho", "[", "\[Delta]", "]"}], "\[Equal]", "0"}]}],
                  "}"}], ",", "rho", ",", 
                RowBox[{"{", 
                 RowBox[{"x", ",", "\[Delta]", ",", "inf"}], "}"}]}], "]"}]}],
              ";", "\[IndentingNewLine]", 
             RowBox[{
              RowBox[{"rhow", "[", "r_", "]"}], "=", 
              SubscriptBox[
               RowBox[{"(", 
                RowBox[{
                 RowBox[{"rho", "[", "r", "]"}], "/.", "s1"}], ")"}], 
               RowBox[{
               "\[LeftDoubleBracket]", "1", "\[RightDoubleBracket]"}]]}], ";",
              "\[IndentingNewLine]", 
             RowBox[{"ParallelSow", "[", 
              RowBox[{"{", 
               RowBox[{
                RowBox[{"\[Omega]", "+", 
                 RowBox[{"2", "M"}]}], ",", 
                RowBox[{"rhow", "[", "inf", "]"}]}], "}"}], "]"}]}], ",", 
            RowBox[{"{", 
             RowBox[{"it", ",", "1", ",", 
              FractionBox[
               RowBox[{"\[Omega]max", "-", "\[Omega]min"}], 
               RowBox[{"d\[Omega]", " ", "M"}]]}], "}"}]}], "]"}], "//", 
          "Reap"}], "//", "Last"}], "//", "First"}]}], ";", 
      "\[IndentingNewLine]", "\[IndentingNewLine]", 
      RowBox[{"ccsT", "=", 
       RowBox[{"ParallelTable", "[", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{
           RowBox[{"\[Rho]table", "[", 
            RowBox[{"[", 
             RowBox[{"i", ",", "1"}], "]"}], "]"}], ",", 
           FractionBox[
            RowBox[{"\[Rho]table", "[", 
             RowBox[{"[", 
              RowBox[{"i", ",", "2"}], "]"}], "]"}], 
            SuperscriptBox[
             RowBox[{"\[Rho]table", "[", 
              RowBox[{"[", 
               RowBox[{"i", ",", "1"}], "]"}], "]"}], "2"]]}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"i", ",", "1", ",", 
           RowBox[{"Length", "[", "\[Rho]table", "]"}]}], "}"}]}], "]"}]}], 
      ";", "\[IndentingNewLine]", 
      RowBox[{"Tstring", "=", 
       RowBox[{"Round", "[", 
        RowBox[{"T", "*", "1000"}], "]"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"Export", "[", 
       RowBox[{
        RowBox[{"\"\<cc/pwccT\>\"", "<>", 
         RowBox[{"ToString", "[", "Tstring", "]"}], "<>", 
         "\"\<lspectra.dat\>\""}], ",", 
        RowBox[{"Sort", "[", "ccsT", "]"}]}], "]"}], ";"}]}], 
    "\[IndentingNewLine]", "]"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.7479360266125097`*^9, 3.747936037653606*^9}}]
}, Closed]],

Cell[CellGroupData[{

Cell["Bottomonium s - wave", "Subsubsection",
 CellChangeTimes->{{3.742291861612499*^9, 3.742291867360454*^9}, 
   3.742291901323778*^9, {3.7435061781726627`*^9, 3.7435061783084917`*^9}, {
   3.743506307127768*^9, 3.743506311615374*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"swavebbspectra", "[", 
    RowBox[{"n_", ",", "Tscan_"}], "]"}], ":=", 
   RowBox[{"Block", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{"T", "=", 
        RowBox[{"Tscan", "[", 
         RowBox[{"[", "n", "]"}], "]"}]}], ",", 
       RowBox[{"mD", "=", 
        RowBox[{"mDcal", "[", 
         RowBox[{
          RowBox[{"2", "\[Pi]"}], ",", 
          RowBox[{"Tscan", "[", 
           RowBox[{"[", "n", "]"}], "]"}], ",", 
          RowBox[{"kfinal", "[", 
           RowBox[{"[", "1", "]"}], "]"}], ",", 
          RowBox[{"kfinal", "[", 
           RowBox[{"[", "2", "]"}], "]"}]}], "]"}]}], ",", 
       RowBox[{"\[Sigma]", "=", 
        RowBox[{"\[Sigma]cont", "[", 
         RowBox[{"[", "1", "]"}], "]"}]}], ",", 
       RowBox[{"\[Alpha]", "=", 
        RowBox[{"\[Alpha]cont", "[", 
         RowBox[{"[", "1", "]"}], "]"}]}], ",", 
       RowBox[{"c", "=", 
        RowBox[{"ccont", "[", 
         RowBox[{"[", "1", "]"}], "]"}]}], ",", 
       RowBox[{"M", "=", "Mb"}], ",", 
       RowBox[{"l", "=", "0"}], ",", 
       RowBox[{"\[Omega]min", "=", 
        RowBox[{"-", "1"}]}], ",", 
       RowBox[{"\[Omega]max", "=", "3"}], ",", "inf", ",", "\[Rho]table", ",",
        "\[Omega]", ",", "rhow", ",", "gr0", ",", "s1", ",", "s01", ",", 
       "rev", ",", "imvc", ",", "V", ",", "bbsT"}], "}"}], ",", 
     "\[IndentingNewLine]", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"rev", "=", 
       RowBox[{"Interpolation", "[", 
        RowBox[{"Join", "[", 
         RowBox[{
          RowBox[{"ParallelTable", "[", 
           RowBox[{
            RowBox[{"{", 
             RowBox[{"r", ",", 
              RowBox[{"ReVsb", "[", 
               RowBox[{
               "r", ",", "mD", ",", "\[Alpha]", ",", "\[Sigma]", ",", "c"}], 
               "]"}]}], "}"}], ",", 
            RowBox[{"{", 
             RowBox[{"r", ",", 
              RowBox[{"1", "/", "1000"}], ",", "10", ",", 
              RowBox[{"1", "/", "100"}]}], "}"}]}], "]"}], ",", 
          RowBox[{"ParallelTable", "[", 
           RowBox[{
            RowBox[{"{", 
             RowBox[{"r", ",", 
              RowBox[{"ReVsb", "[", 
               RowBox[{
               "r", ",", "mD", ",", "\[Alpha]", ",", "\[Sigma]", ",", "c"}], 
               "]"}]}], "}"}], ",", 
            RowBox[{"{", 
             RowBox[{"r", ",", 
              RowBox[{"101", "/", "10"}], ",", "25", ",", 
              RowBox[{"1", "/", "10"}]}], "}"}]}], "]"}], ",", 
          RowBox[{"ParallelTable", "[", 
           RowBox[{
            RowBox[{"{", 
             RowBox[{"r", ",", 
              RowBox[{"ReVsb", "[", 
               RowBox[{
               "r", ",", "mD", ",", "\[Alpha]", ",", "\[Sigma]", ",", "c"}], 
               "]"}]}], "}"}], ",", 
            RowBox[{"{", 
             RowBox[{"r", ",", "26", ",", "1500", ",", "1"}], "}"}]}], "]"}], 
          ",", 
          RowBox[{"ParallelTable", "[", 
           RowBox[{
            RowBox[{"{", 
             RowBox[{"r", ",", 
              RowBox[{"ReVsb", "[", 
               RowBox[{
               "r", ",", "mD", ",", "\[Alpha]", ",", "\[Sigma]", ",", "c"}], 
               "]"}]}], "}"}], ",", 
            RowBox[{"{", 
             RowBox[{"r", ",", "1510", ",", "20000", ",", "1000"}], "}"}]}], 
           "]"}]}], "]"}], "]"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"imvc", "=", 
       RowBox[{"Interpolation", "[", 
        RowBox[{"Join", "[", 
         RowBox[{
          RowBox[{"ParallelTable", "[", 
           RowBox[{
            RowBox[{"{", 
             RowBox[{"r", ",", 
              RowBox[{"ImVc", "[", 
               RowBox[{"r", ",", "mD", ",", "\[Alpha]", ",", "T"}], "]"}]}], 
             "}"}], ",", 
            RowBox[{"{", 
             RowBox[{"r", ",", 
              RowBox[{"1", "/", "1000"}], ",", "10", ",", 
              RowBox[{"1", "/", "100"}]}], "}"}]}], "]"}], ",", 
          RowBox[{"ParallelTable", "[", 
           RowBox[{
            RowBox[{"{", 
             RowBox[{"r", ",", 
              RowBox[{"ImVc", "[", 
               RowBox[{"r", ",", "mD", ",", "\[Alpha]", ",", "T"}], "]"}]}], 
             "}"}], ",", 
            RowBox[{"{", 
             RowBox[{"r", ",", 
              RowBox[{"101", "/", "10"}], ",", "25", ",", 
              RowBox[{"1", "/", "10"}]}], "}"}]}], "]"}], ",", 
          RowBox[{"ParallelTable", "[", 
           RowBox[{
            RowBox[{"{", 
             RowBox[{"r", ",", 
              RowBox[{"ImVc", "[", 
               RowBox[{"r", ",", "mD", ",", "\[Alpha]", ",", "T"}], "]"}]}], 
             "}"}], ",", 
            RowBox[{"{", 
             RowBox[{"r", ",", "26", ",", "1500", ",", "1"}], "}"}]}], "]"}], 
          ",", 
          RowBox[{"ParallelTable", "[", 
           RowBox[{
            RowBox[{"{", 
             RowBox[{"r", ",", 
              RowBox[{"ImVc", "[", 
               RowBox[{"r", ",", "mD", ",", "\[Alpha]", ",", "T"}], "]"}]}], 
             "}"}], ",", 
            RowBox[{"{", 
             RowBox[{"r", ",", "1510", ",", "20000", ",", "1000"}], "}"}]}], 
           "]"}]}], "]"}], "]"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"V", "[", "x_", "]"}], ":=", 
       RowBox[{
        RowBox[{"rev", "[", "x", "]"}], "+", 
        RowBox[{"\[ImaginaryI]", " ", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{"imvc", "[", "x", "]"}], "+", 
           RowBox[{
            RowBox[{"ImVsregInter", "[", "n", "]"}], "[", "x", "]"}]}], 
          ")"}]}]}]}], ";", "\[IndentingNewLine]", "\[IndentingNewLine]", 
      RowBox[{"\[Rho]table", "=", 
       RowBox[{
        RowBox[{
         RowBox[{
          RowBox[{"ParallelDo", "[", 
           RowBox[{
            RowBox[{
             RowBox[{"\[Omega]", "=", 
              RowBox[{"\[Omega]min", "+", 
               RowBox[{
                RowBox[{"(", 
                 RowBox[{"it", "-", "1"}], ")"}], " ", "d\[Omega]", " ", 
                "M"}]}]}], ";", 
             RowBox[{"inf", "=", 
              RowBox[{"40", "+", 
               RowBox[{"500", "*", "it", "*", "d\[Omega]"}]}]}], ";", 
             "\[IndentingNewLine]", 
             RowBox[{"s01", "=", 
              RowBox[{"NDSolve", "[", 
               RowBox[{
                RowBox[{"{", 
                 RowBox[{
                  RowBox[{
                   RowBox[{
                    RowBox[{
                    RowBox[{"(", 
                    RowBox[{"\[Omega]", "-", 
                    FractionBox[
                    RowBox[{"l", 
                    RowBox[{"(", 
                    RowBox[{"l", "+", "1"}], ")"}]}], 
                    RowBox[{"M", " ", 
                    SuperscriptBox["r", "2"]}]], "-", 
                    RowBox[{"Re", "[", 
                    RowBox[{"V", "[", "r", "]"}], "]"}], "+", 
                    RowBox[{"\[ImaginaryI]", " ", 
                    RowBox[{"Abs", "[", 
                    RowBox[{"Im", "[", 
                    RowBox[{"V", "[", "r", "]"}], "]"}], "]"}]}]}], ")"}], 
                    RowBox[{"gr", "[", "r", "]"}]}], "+", 
                    RowBox[{
                    FractionBox["1", "M"], 
                    RowBox[{
                    RowBox[{"gr", "''"}], "[", "r", "]"}]}]}], "\[Equal]", 
                   "0"}], ",", " ", "\[IndentingNewLine]", 
                  RowBox[{
                   RowBox[{
                    RowBox[{"gr", "'"}], "[", "\[Delta]", "]"}], "\[Equal]", 
                   RowBox[{
                    RowBox[{"(", 
                    RowBox[{"\[Alpha]", " ", "M"}], ")"}], "-", 
                    RowBox[{"\[Delta]", 
                    SuperscriptBox[
                    RowBox[{"(", 
                    RowBox[{"M", " ", "\[Alpha]"}], ")"}], "2"]}]}]}], ",", 
                  "\[IndentingNewLine]", " ", 
                  RowBox[{
                   RowBox[{"gr", "[", "\[Delta]", "]"}], "\[Equal]", 
                   RowBox[{
                    RowBox[{"\[Delta]", 
                    RowBox[{"(", 
                    RowBox[{"\[Alpha]", " ", "M"}], ")"}]}], "-", " ", 
                    RowBox[{
                    FractionBox["1", "2"], 
                    SuperscriptBox["\[Delta]", "2"], 
                    SuperscriptBox[
                    RowBox[{"(", 
                    RowBox[{"\[Alpha]", " ", "M"}], ")"}], "2"]}]}]}]}], 
                 "}"}], ",", "gr", ",", 
                RowBox[{"{", 
                 RowBox[{"r", ",", "\[Delta]", ",", "inf"}], "}"}]}], "]"}]}],
              ";", "\[IndentingNewLine]", 
             RowBox[{
              RowBox[{"gr0", "[", "r_", "]"}], "=", 
              SubscriptBox[
               RowBox[{"(", 
                RowBox[{
                 RowBox[{"gr", "[", "r", "]"}], "/.", "s01"}], ")"}], 
               RowBox[{
               "\[LeftDoubleBracket]", "1", "\[RightDoubleBracket]"}]]}], ";",
              "\[IndentingNewLine]", 
             RowBox[{"s1", "=", 
              RowBox[{"NDSolve", "[", 
               RowBox[{
                RowBox[{"{", 
                 RowBox[{
                  RowBox[{
                   RowBox[{
                    RowBox[{"rho", "'"}], "[", "x", "]"}], "\[Equal]", 
                   RowBox[{
                    RowBox[{"-", 
                    FractionBox[
                    RowBox[{" ", 
                    RowBox[{"6", " ", "Nc", " ", 
                    SuperscriptBox["M", "2"], " ", "\[Alpha]"}]}], 
                    RowBox[{"4", "\[Pi]"}]]}], 
                    RowBox[{"Im", "[", 
                    FractionBox["1", 
                    SuperscriptBox[
                    RowBox[{"(", 
                    RowBox[{"gr0", "[", "x", "]"}], ")"}], "2"]], "]"}]}]}], 
                  ",", 
                  RowBox[{
                   RowBox[{"rho", "[", "\[Delta]", "]"}], "\[Equal]", "0"}]}],
                  "}"}], ",", "rho", ",", 
                RowBox[{"{", 
                 RowBox[{"x", ",", "\[Delta]", ",", "inf"}], "}"}]}], "]"}]}],
              ";", "\[IndentingNewLine]", 
             RowBox[{
              RowBox[{"rhow", "[", "r_", "]"}], "=", 
              SubscriptBox[
               RowBox[{"(", 
                RowBox[{
                 RowBox[{"rho", "[", "r", "]"}], "/.", "s1"}], ")"}], 
               RowBox[{
               "\[LeftDoubleBracket]", "1", "\[RightDoubleBracket]"}]]}], ";",
              "\[IndentingNewLine]", 
             RowBox[{"ParallelSow", "[", 
              RowBox[{"{", 
               RowBox[{
                RowBox[{"\[Omega]", "+", 
                 RowBox[{"2", "M"}]}], ",", 
                RowBox[{"rhow", "[", "inf", "]"}]}], "}"}], "]"}]}], ",", 
            RowBox[{"{", 
             RowBox[{"it", ",", "1", ",", 
              FractionBox[
               RowBox[{"\[Omega]max", "-", "\[Omega]min"}], 
               RowBox[{"d\[Omega]", " ", "M"}]]}], "}"}]}], "]"}], "//", 
          "Reap"}], "//", "Last"}], "//", "First"}]}], ";", 
      "\[IndentingNewLine]", "\[IndentingNewLine]", 
      RowBox[{"bbsT", "=", 
       RowBox[{"ParallelTable", "[", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{
           RowBox[{"\[Rho]table", "[", 
            RowBox[{"[", 
             RowBox[{"i", ",", "1"}], "]"}], "]"}], ",", 
           FractionBox[
            RowBox[{"\[Rho]table", "[", 
             RowBox[{"[", 
              RowBox[{"i", ",", "2"}], "]"}], "]"}], 
            SuperscriptBox[
             RowBox[{"\[Rho]table", "[", 
              RowBox[{"[", 
               RowBox[{"i", ",", "1"}], "]"}], "]"}], "2"]]}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"i", ",", "1", ",", 
           RowBox[{"Length", "[", "\[Rho]table", "]"}]}], "}"}]}], "]"}]}], 
      ";", "\[IndentingNewLine]", 
      RowBox[{"Export", "[", 
       RowBox[{
        RowBox[{"\"\<bb/swbbT\>\"", "<>", 
         RowBox[{"ToString", "[", 
          RowBox[{"Round", "[", 
           RowBox[{"T", "*", "1000"}], "]"}], "]"}], "<>", 
         "\"\<spectra.dat\>\""}], ",", 
        RowBox[{"Sort", "[", "bbsT", "]"}]}], "]"}], ";"}]}], 
    "\[IndentingNewLine]", "]"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.724397604460712*^9, 3.724397621092863*^9}, {
   3.724398705481254*^9, 3.724398705798315*^9}, {3.72440624506767*^9, 
   3.7244062457361317`*^9}, {3.7244423136168756`*^9, 3.724442340980721*^9}, {
   3.7244423712224417`*^9, 3.724442377050403*^9}, {3.724442465925974*^9, 
   3.724442518695669*^9}, {3.7244426255599117`*^9, 3.724442639076613*^9}, {
   3.724443729204352*^9, 3.724443729749022*^9}, {3.724443881656342*^9, 
   3.7244438842850027`*^9}, 3.725261621115453*^9, 3.72526166634648*^9, {
   3.725271550289123*^9, 3.7252715504130163`*^9}, {3.725271609402791*^9, 
   3.7252716095188437`*^9}, {3.7252717762497*^9, 3.725271782362536*^9}, {
   3.725271824500347*^9, 3.725271826035269*^9}, {3.725271857701564*^9, 
   3.725271858192912*^9}, {3.725271928114049*^9, 3.7252719496618757`*^9}, {
   3.725271981807578*^9, 3.725271987122878*^9}, {3.725273718896678*^9, 
   3.72527377251343*^9}, {3.725273963159111*^9, 3.725273966198284*^9}, {
   3.725364382855975*^9, 3.725364384697238*^9}, {3.725364432753635*^9, 
   3.725364433681274*^9}, {3.725364595553596*^9, 3.725364595868292*^9}, {
   3.725364661141473*^9, 3.725364661301785*^9}, {3.725365068510941*^9, 
   3.7253650691073112`*^9}, {3.7256202924505177`*^9, 
   3.7256202938854313`*^9}, {3.7256265502253428`*^9, 3.725626559021003*^9}, {
   3.725798091627001*^9, 3.725798108963685*^9}, {3.725798150844287*^9, 
   3.725798156038417*^9}, {3.726312422974263*^9, 3.726312439922279*^9}, {
   3.726313778060986*^9, 3.726313794010726*^9}, {3.726313854887352*^9, 
   3.726313855417986*^9}, {3.726377533478507*^9, 3.726377535012369*^9}, {
   3.726379310729051*^9, 3.726379315935656*^9}, {3.726379351066524*^9, 
   3.7263793563685627`*^9}, 3.7263814533362722`*^9, {3.726468979312665*^9, 
   3.726469044993416*^9}, {3.726564279540083*^9, 3.726564288774165*^9}, {
   3.726564330005303*^9, 3.726564342424973*^9}, {3.7265645007454853`*^9, 
   3.7265645054085903`*^9}, 3.726565145221386*^9, {3.726836923420138*^9, 
   3.726836925204391*^9}, {3.7268417497448387`*^9, 3.726841749854889*^9}, {
   3.727357927216405*^9, 3.7273579306359463`*^9}, 3.72735811608375*^9, {
   3.7273582875862513`*^9, 3.727358296888235*^9}, {3.727520051444908*^9, 
   3.7275200665503483`*^9}, {3.727539483513708*^9, 3.72753949210455*^9}, {
   3.7275398377710333`*^9, 3.727539869000495*^9}, {3.7275879806550293`*^9, 
   3.727587984698921*^9}, {3.727606150288821*^9, 3.727606150994812*^9}, {
   3.728932814314426*^9, 3.728932860160056*^9}, 3.7289333254815903`*^9, 
   3.7299208725344887`*^9, {3.730007040539275*^9, 3.7300070509717903`*^9}, {
   3.730007357183831*^9, 3.7300073662633142`*^9}, {3.7331192829046183`*^9, 
   3.733119300197537*^9}, {3.733120717385792*^9, 3.733120717697629*^9}, {
   3.7331222711038847`*^9, 3.733122272703622*^9}, {3.733211538849382*^9, 
   3.7332115515038567`*^9}, {3.7332289443370447`*^9, 
   3.7332289447842827`*^9}, {3.742215948846467*^9, 3.742215959437643*^9}, {
   3.742216025305929*^9, 3.742216093257207*^9}, {3.7422172078868933`*^9, 
   3.7422172275906973`*^9}, 3.74221727383118*^9, {3.742217585069265*^9, 
   3.742217591716959*^9}, {3.7422176229823923`*^9, 3.742217653035615*^9}, {
   3.742269341112874*^9, 3.742269371527761*^9}, 3.742275694936644*^9, {
   3.742289467062118*^9, 3.742289486771803*^9}, {3.742289520463562*^9, 
   3.7422896027136*^9}, {3.7422896364561243`*^9, 3.74228964347093*^9}, {
   3.742289678232355*^9, 3.742289708137301*^9}, {3.7422897506101*^9, 
   3.7422897587096577`*^9}, {3.7422920316457787`*^9, 3.742292034487727*^9}, 
   3.742292186682322*^9, {3.742292303240778*^9, 3.742292303483521*^9}, {
   3.742292362481593*^9, 3.742292372544711*^9}, {3.742292408813004*^9, 
   3.742292447857381*^9}, {3.7422968206130743`*^9, 3.742296843480155*^9}, {
   3.7422970160890417`*^9, 3.742297024417719*^9}, {3.742297074890059*^9, 
   3.74229711910509*^9}, {3.7422973083294992`*^9, 3.742297309298213*^9}, {
   3.742297354168077*^9, 3.742297359897736*^9}, {3.742297415918168*^9, 
   3.7422974232482452`*^9}, {3.742297467739311*^9, 3.742297612963316*^9}, {
   3.7422977860232887`*^9, 3.7422977903561068`*^9}, {3.74229798181938*^9, 
   3.742298023677857*^9}, {3.7422980561712513`*^9, 3.74229805925661*^9}, 
   3.742298106308654*^9, {3.742300221204397*^9, 3.742300269720365*^9}, {
   3.742300416216001*^9, 3.742300416917211*^9}, {3.742300536315893*^9, 
   3.742300546756034*^9}, {3.742300626604027*^9, 3.742300638323701*^9}, {
   3.7423006769018583`*^9, 3.7423007163572683`*^9}, {3.7435037431402884`*^9, 
   3.743503799356997*^9}, {3.7435038425347443`*^9, 3.743503908279688*^9}, {
   3.7435046316079397`*^9, 3.743504651390107*^9}, {3.743506325612351*^9, 
   3.7435063377910748`*^9}, {3.74350638604452*^9, 3.743506401938177*^9}, 
   3.745326244961722*^9, 3.747731406095187*^9, {3.74798077709837*^9, 
   3.747980812582571*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"swavebblspectra", "[", 
    RowBox[{"n_", ",", "Tscan_"}], "]"}], ":=", 
   RowBox[{"Block", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{"T", "=", 
        RowBox[{"Tscan", "[", 
         RowBox[{"[", "n", "]"}], "]"}]}], ",", 
       RowBox[{"mD", "=", 
        RowBox[{"mDcal", "[", 
         RowBox[{
          RowBox[{"2", "\[Pi]"}], ",", 
          RowBox[{"Tscan", "[", 
           RowBox[{"[", "n", "]"}], "]"}], ",", 
          RowBox[{"kfinall", "[", 
           RowBox[{"[", "1", "]"}], "]"}], ",", 
          RowBox[{"kfinall", "[", 
           RowBox[{"[", "2", "]"}], "]"}]}], "]"}]}], ",", 
       RowBox[{"\[Sigma]", "=", 
        RowBox[{"\[Sigma]cont", "[", 
         RowBox[{"[", "1", "]"}], "]"}]}], ",", 
       RowBox[{"\[Alpha]", "=", 
        RowBox[{"\[Alpha]cont", "[", 
         RowBox[{"[", "1", "]"}], "]"}]}], ",", 
       RowBox[{"c", "=", 
        RowBox[{"ccont", "[", 
         RowBox[{"[", "1", "]"}], "]"}]}], ",", 
       RowBox[{"M", "=", "Mb"}], ",", 
       RowBox[{"l", "=", "0"}], ",", 
       RowBox[{"\[Omega]min", "=", 
        RowBox[{"-", "1"}]}], ",", 
       RowBox[{"\[Omega]max", "=", "3"}], ",", "inf", ",", "\[Rho]table", ",",
        "\[Omega]", ",", "rhow", ",", "gr0", ",", "s1", ",", "s01", ",", 
       "rev", ",", "imvc", ",", "V", ",", "bbsT"}], "}"}], ",", 
     "\[IndentingNewLine]", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"rev", "=", 
       RowBox[{"Interpolation", "[", 
        RowBox[{"Join", "[", 
         RowBox[{
          RowBox[{"ParallelTable", "[", 
           RowBox[{
            RowBox[{"{", 
             RowBox[{"r", ",", 
              RowBox[{"ReVsb", "[", 
               RowBox[{
               "r", ",", "mD", ",", "\[Alpha]", ",", "\[Sigma]", ",", "c"}], 
               "]"}]}], "}"}], ",", 
            RowBox[{"{", 
             RowBox[{"r", ",", 
              RowBox[{"1", "/", "1000"}], ",", "10", ",", 
              RowBox[{"1", "/", "100"}]}], "}"}]}], "]"}], ",", 
          RowBox[{"ParallelTable", "[", 
           RowBox[{
            RowBox[{"{", 
             RowBox[{"r", ",", 
              RowBox[{"ReVsb", "[", 
               RowBox[{
               "r", ",", "mD", ",", "\[Alpha]", ",", "\[Sigma]", ",", "c"}], 
               "]"}]}], "}"}], ",", 
            RowBox[{"{", 
             RowBox[{"r", ",", 
              RowBox[{"101", "/", "10"}], ",", "25", ",", 
              RowBox[{"1", "/", "10"}]}], "}"}]}], "]"}], ",", 
          RowBox[{"ParallelTable", "[", 
           RowBox[{
            RowBox[{"{", 
             RowBox[{"r", ",", 
              RowBox[{"ReVsb", "[", 
               RowBox[{
               "r", ",", "mD", ",", "\[Alpha]", ",", "\[Sigma]", ",", "c"}], 
               "]"}]}], "}"}], ",", 
            RowBox[{"{", 
             RowBox[{"r", ",", "26", ",", "1500", ",", "1"}], "}"}]}], "]"}], 
          ",", 
          RowBox[{"ParallelTable", "[", 
           RowBox[{
            RowBox[{"{", 
             RowBox[{"r", ",", 
              RowBox[{"ReVsb", "[", 
               RowBox[{
               "r", ",", "mD", ",", "\[Alpha]", ",", "\[Sigma]", ",", "c"}], 
               "]"}]}], "}"}], ",", 
            RowBox[{"{", 
             RowBox[{"r", ",", "1510", ",", "20000", ",", "1000"}], "}"}]}], 
           "]"}]}], "]"}], "]"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"imvc", "=", 
       RowBox[{"Interpolation", "[", 
        RowBox[{"Join", "[", 
         RowBox[{
          RowBox[{"ParallelTable", "[", 
           RowBox[{
            RowBox[{"{", 
             RowBox[{"r", ",", 
              RowBox[{"ImVc", "[", 
               RowBox[{"r", ",", "mD", ",", "\[Alpha]", ",", "T"}], "]"}]}], 
             "}"}], ",", 
            RowBox[{"{", 
             RowBox[{"r", ",", 
              RowBox[{"1", "/", "1000"}], ",", "10", ",", 
              RowBox[{"1", "/", "100"}]}], "}"}]}], "]"}], ",", 
          RowBox[{"ParallelTable", "[", 
           RowBox[{
            RowBox[{"{", 
             RowBox[{"r", ",", 
              RowBox[{"ImVc", "[", 
               RowBox[{"r", ",", "mD", ",", "\[Alpha]", ",", "T"}], "]"}]}], 
             "}"}], ",", 
            RowBox[{"{", 
             RowBox[{"r", ",", 
              RowBox[{"101", "/", "10"}], ",", "25", ",", 
              RowBox[{"1", "/", "10"}]}], "}"}]}], "]"}], ",", 
          RowBox[{"ParallelTable", "[", 
           RowBox[{
            RowBox[{"{", 
             RowBox[{"r", ",", 
              RowBox[{"ImVc", "[", 
               RowBox[{"r", ",", "mD", ",", "\[Alpha]", ",", "T"}], "]"}]}], 
             "}"}], ",", 
            RowBox[{"{", 
             RowBox[{"r", ",", "26", ",", "1500", ",", "1"}], "}"}]}], "]"}], 
          ",", 
          RowBox[{"ParallelTable", "[", 
           RowBox[{
            RowBox[{"{", 
             RowBox[{"r", ",", 
              RowBox[{"ImVc", "[", 
               RowBox[{"r", ",", "mD", ",", "\[Alpha]", ",", "T"}], "]"}]}], 
             "}"}], ",", 
            RowBox[{"{", 
             RowBox[{"r", ",", "1510", ",", "20000", ",", "1000"}], "}"}]}], 
           "]"}]}], "]"}], "]"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"V", "[", "x_", "]"}], ":=", 
       RowBox[{
        RowBox[{"rev", "[", "x", "]"}], "+", 
        RowBox[{"\[ImaginaryI]", " ", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{"imvc", "[", "x", "]"}], "+", 
           RowBox[{
            RowBox[{"ImVsreglInter", "[", "n", "]"}], "[", "x", "]"}]}], 
          ")"}]}]}]}], ";", "\[IndentingNewLine]", "\[IndentingNewLine]", 
      RowBox[{"\[Rho]table", "=", 
       RowBox[{
        RowBox[{
         RowBox[{
          RowBox[{"ParallelDo", "[", 
           RowBox[{
            RowBox[{
             RowBox[{"\[Omega]", "=", 
              RowBox[{"\[Omega]min", "+", 
               RowBox[{
                RowBox[{"(", 
                 RowBox[{"it", "-", "1"}], ")"}], " ", "d\[Omega]", " ", 
                "M"}]}]}], ";", 
             RowBox[{"inf", "=", 
              RowBox[{"40", "+", 
               RowBox[{"500", "*", "it", "*", "d\[Omega]"}]}]}], ";", 
             "\[IndentingNewLine]", 
             RowBox[{"s01", "=", 
              RowBox[{"NDSolve", "[", 
               RowBox[{
                RowBox[{"{", 
                 RowBox[{
                  RowBox[{
                   RowBox[{
                    RowBox[{
                    RowBox[{"(", 
                    RowBox[{"\[Omega]", "-", 
                    FractionBox[
                    RowBox[{"l", 
                    RowBox[{"(", 
                    RowBox[{"l", "+", "1"}], ")"}]}], 
                    RowBox[{"M", " ", 
                    SuperscriptBox["r", "2"]}]], "-", 
                    RowBox[{"Re", "[", 
                    RowBox[{"V", "[", "r", "]"}], "]"}], "+", 
                    RowBox[{"\[ImaginaryI]", " ", 
                    RowBox[{"Abs", "[", 
                    RowBox[{"Im", "[", 
                    RowBox[{"V", "[", "r", "]"}], "]"}], "]"}]}]}], ")"}], 
                    RowBox[{"gr", "[", "r", "]"}]}], "+", 
                    RowBox[{
                    FractionBox["1", "M"], 
                    RowBox[{
                    RowBox[{"gr", "''"}], "[", "r", "]"}]}]}], "\[Equal]", 
                   "0"}], ",", " ", "\[IndentingNewLine]", 
                  RowBox[{
                   RowBox[{
                    RowBox[{"gr", "'"}], "[", "\[Delta]", "]"}], "\[Equal]", 
                   RowBox[{
                    RowBox[{"(", 
                    RowBox[{"\[Alpha]", " ", "M"}], ")"}], "-", 
                    RowBox[{"\[Delta]", 
                    SuperscriptBox[
                    RowBox[{"(", 
                    RowBox[{"M", " ", "\[Alpha]"}], ")"}], "2"]}]}]}], ",", 
                  "\[IndentingNewLine]", " ", 
                  RowBox[{
                   RowBox[{"gr", "[", "\[Delta]", "]"}], "\[Equal]", 
                   RowBox[{
                    RowBox[{"\[Delta]", 
                    RowBox[{"(", 
                    RowBox[{"\[Alpha]", " ", "M"}], ")"}]}], "-", " ", 
                    RowBox[{
                    FractionBox["1", "2"], 
                    SuperscriptBox["\[Delta]", "2"], 
                    SuperscriptBox[
                    RowBox[{"(", 
                    RowBox[{"\[Alpha]", " ", "M"}], ")"}], "2"]}]}]}]}], 
                 "}"}], ",", "gr", ",", 
                RowBox[{"{", 
                 RowBox[{"r", ",", "\[Delta]", ",", "inf"}], "}"}]}], "]"}]}],
              ";", "\[IndentingNewLine]", 
             RowBox[{
              RowBox[{"gr0", "[", "r_", "]"}], "=", 
              SubscriptBox[
               RowBox[{"(", 
                RowBox[{
                 RowBox[{"gr", "[", "r", "]"}], "/.", "s01"}], ")"}], 
               RowBox[{
               "\[LeftDoubleBracket]", "1", "\[RightDoubleBracket]"}]]}], ";",
              "\[IndentingNewLine]", 
             RowBox[{"s1", "=", 
              RowBox[{"NDSolve", "[", 
               RowBox[{
                RowBox[{"{", 
                 RowBox[{
                  RowBox[{
                   RowBox[{
                    RowBox[{"rho", "'"}], "[", "x", "]"}], "\[Equal]", 
                   RowBox[{
                    RowBox[{"-", 
                    FractionBox[
                    RowBox[{" ", 
                    RowBox[{"6", " ", "Nc", " ", 
                    SuperscriptBox["M", "2"], " ", "\[Alpha]"}]}], 
                    RowBox[{"4", "\[Pi]"}]]}], 
                    RowBox[{"Im", "[", 
                    FractionBox["1", 
                    SuperscriptBox[
                    RowBox[{"(", 
                    RowBox[{"gr0", "[", "x", "]"}], ")"}], "2"]], "]"}]}]}], 
                  ",", 
                  RowBox[{
                   RowBox[{"rho", "[", "\[Delta]", "]"}], "\[Equal]", "0"}]}],
                  "}"}], ",", "rho", ",", 
                RowBox[{"{", 
                 RowBox[{"x", ",", "\[Delta]", ",", "inf"}], "}"}]}], "]"}]}],
              ";", "\[IndentingNewLine]", 
             RowBox[{
              RowBox[{"rhow", "[", "r_", "]"}], "=", 
              SubscriptBox[
               RowBox[{"(", 
                RowBox[{
                 RowBox[{"rho", "[", "r", "]"}], "/.", "s1"}], ")"}], 
               RowBox[{
               "\[LeftDoubleBracket]", "1", "\[RightDoubleBracket]"}]]}], ";",
              "\[IndentingNewLine]", 
             RowBox[{"ParallelSow", "[", 
              RowBox[{"{", 
               RowBox[{
                RowBox[{"\[Omega]", "+", 
                 RowBox[{"2", "M"}]}], ",", 
                RowBox[{"rhow", "[", "inf", "]"}]}], "}"}], "]"}]}], ",", 
            RowBox[{"{", 
             RowBox[{"it", ",", "1", ",", 
              FractionBox[
               RowBox[{"\[Omega]max", "-", "\[Omega]min"}], 
               RowBox[{"d\[Omega]", " ", "M"}]]}], "}"}]}], "]"}], "//", 
          "Reap"}], "//", "Last"}], "//", "First"}]}], ";", 
      "\[IndentingNewLine]", "\[IndentingNewLine]", 
      RowBox[{"bbsT", "=", 
       RowBox[{"ParallelTable", "[", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{
           RowBox[{"\[Rho]table", "[", 
            RowBox[{"[", 
             RowBox[{"i", ",", "1"}], "]"}], "]"}], ",", 
           FractionBox[
            RowBox[{"\[Rho]table", "[", 
             RowBox[{"[", 
              RowBox[{"i", ",", "2"}], "]"}], "]"}], 
            SuperscriptBox[
             RowBox[{"\[Rho]table", "[", 
              RowBox[{"[", 
               RowBox[{"i", ",", "1"}], "]"}], "]"}], "2"]]}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"i", ",", "1", ",", 
           RowBox[{"Length", "[", "\[Rho]table", "]"}]}], "}"}]}], "]"}]}], 
      ";", "\[IndentingNewLine]", 
      RowBox[{"Export", "[", 
       RowBox[{
        RowBox[{"\"\<bb/swbbT\>\"", "<>", 
         RowBox[{"ToString", "[", 
          RowBox[{"Round", "[", 
           RowBox[{"T", "*", "1000"}], "]"}], "]"}], "<>", 
         "\"\<lspectra.dat\>\""}], ",", 
        RowBox[{"Sort", "[", "bbsT", "]"}]}], "]"}], ";"}]}], 
    "\[IndentingNewLine]", "]"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.747980867566099*^9, 3.747980877622963*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"swavebbuspectra", "[", 
    RowBox[{"n_", ",", "Tscan_"}], "]"}], ":=", 
   RowBox[{"Block", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{"T", "=", 
        RowBox[{"Tscan", "[", 
         RowBox[{"[", "n", "]"}], "]"}]}], ",", 
       RowBox[{"mD", "=", 
        RowBox[{"mDcal", "[", 
         RowBox[{
          RowBox[{"2", "\[Pi]"}], ",", 
          RowBox[{"Tscan", "[", 
           RowBox[{"[", "n", "]"}], "]"}], ",", 
          RowBox[{"kfinalu", "[", 
           RowBox[{"[", "1", "]"}], "]"}], ",", 
          RowBox[{"kfinalu", "[", 
           RowBox[{"[", "2", "]"}], "]"}]}], "]"}]}], ",", 
       RowBox[{"\[Sigma]", "=", 
        RowBox[{"\[Sigma]cont", "[", 
         RowBox[{"[", "1", "]"}], "]"}]}], ",", 
       RowBox[{"\[Alpha]", "=", 
        RowBox[{"\[Alpha]cont", "[", 
         RowBox[{"[", "1", "]"}], "]"}]}], ",", 
       RowBox[{"c", "=", 
        RowBox[{"ccont", "[", 
         RowBox[{"[", "1", "]"}], "]"}]}], ",", 
       RowBox[{"M", "=", "Mb"}], ",", 
       RowBox[{"l", "=", "0"}], ",", 
       RowBox[{"\[Omega]min", "=", 
        RowBox[{"-", "1"}]}], ",", 
       RowBox[{"\[Omega]max", "=", "3"}], ",", "inf", ",", "\[Rho]table", ",",
        "\[Omega]", ",", "rhow", ",", "gr0", ",", "s1", ",", "s01", ",", 
       "rev", ",", "imvc", ",", "V", ",", "bbsT"}], "}"}], ",", 
     "\[IndentingNewLine]", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"rev", "=", 
       RowBox[{"Interpolation", "[", 
        RowBox[{"Join", "[", 
         RowBox[{
          RowBox[{"ParallelTable", "[", 
           RowBox[{
            RowBox[{"{", 
             RowBox[{"r", ",", 
              RowBox[{"ReVsb", "[", 
               RowBox[{
               "r", ",", "mD", ",", "\[Alpha]", ",", "\[Sigma]", ",", "c"}], 
               "]"}]}], "}"}], ",", 
            RowBox[{"{", 
             RowBox[{"r", ",", 
              RowBox[{"1", "/", "1000"}], ",", "10", ",", 
              RowBox[{"1", "/", "100"}]}], "}"}]}], "]"}], ",", 
          RowBox[{"ParallelTable", "[", 
           RowBox[{
            RowBox[{"{", 
             RowBox[{"r", ",", 
              RowBox[{"ReVsb", "[", 
               RowBox[{
               "r", ",", "mD", ",", "\[Alpha]", ",", "\[Sigma]", ",", "c"}], 
               "]"}]}], "}"}], ",", 
            RowBox[{"{", 
             RowBox[{"r", ",", 
              RowBox[{"101", "/", "10"}], ",", "25", ",", 
              RowBox[{"1", "/", "10"}]}], "}"}]}], "]"}], ",", 
          RowBox[{"ParallelTable", "[", 
           RowBox[{
            RowBox[{"{", 
             RowBox[{"r", ",", 
              RowBox[{"ReVsb", "[", 
               RowBox[{
               "r", ",", "mD", ",", "\[Alpha]", ",", "\[Sigma]", ",", "c"}], 
               "]"}]}], "}"}], ",", 
            RowBox[{"{", 
             RowBox[{"r", ",", "26", ",", "1500", ",", "1"}], "}"}]}], "]"}], 
          ",", 
          RowBox[{"ParallelTable", "[", 
           RowBox[{
            RowBox[{"{", 
             RowBox[{"r", ",", 
              RowBox[{"ReVsb", "[", 
               RowBox[{
               "r", ",", "mD", ",", "\[Alpha]", ",", "\[Sigma]", ",", "c"}], 
               "]"}]}], "}"}], ",", 
            RowBox[{"{", 
             RowBox[{"r", ",", "1510", ",", "20000", ",", "1000"}], "}"}]}], 
           "]"}]}], "]"}], "]"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"imvc", "=", 
       RowBox[{"Interpolation", "[", 
        RowBox[{"Join", "[", 
         RowBox[{
          RowBox[{"ParallelTable", "[", 
           RowBox[{
            RowBox[{"{", 
             RowBox[{"r", ",", 
              RowBox[{"ImVc", "[", 
               RowBox[{"r", ",", "mD", ",", "\[Alpha]", ",", "T"}], "]"}]}], 
             "}"}], ",", 
            RowBox[{"{", 
             RowBox[{"r", ",", 
              RowBox[{"1", "/", "1000"}], ",", "10", ",", 
              RowBox[{"1", "/", "100"}]}], "}"}]}], "]"}], ",", 
          RowBox[{"ParallelTable", "[", 
           RowBox[{
            RowBox[{"{", 
             RowBox[{"r", ",", 
              RowBox[{"ImVc", "[", 
               RowBox[{"r", ",", "mD", ",", "\[Alpha]", ",", "T"}], "]"}]}], 
             "}"}], ",", 
            RowBox[{"{", 
             RowBox[{"r", ",", 
              RowBox[{"101", "/", "10"}], ",", "25", ",", 
              RowBox[{"1", "/", "10"}]}], "}"}]}], "]"}], ",", 
          RowBox[{"ParallelTable", "[", 
           RowBox[{
            RowBox[{"{", 
             RowBox[{"r", ",", 
              RowBox[{"ImVc", "[", 
               RowBox[{"r", ",", "mD", ",", "\[Alpha]", ",", "T"}], "]"}]}], 
             "}"}], ",", 
            RowBox[{"{", 
             RowBox[{"r", ",", "26", ",", "1500", ",", "1"}], "}"}]}], "]"}], 
          ",", 
          RowBox[{"ParallelTable", "[", 
           RowBox[{
            RowBox[{"{", 
             RowBox[{"r", ",", 
              RowBox[{"ImVc", "[", 
               RowBox[{"r", ",", "mD", ",", "\[Alpha]", ",", "T"}], "]"}]}], 
             "}"}], ",", 
            RowBox[{"{", 
             RowBox[{"r", ",", "1510", ",", "20000", ",", "1000"}], "}"}]}], 
           "]"}]}], "]"}], "]"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"V", "[", "x_", "]"}], ":=", 
       RowBox[{
        RowBox[{"rev", "[", "x", "]"}], "+", 
        RowBox[{"\[ImaginaryI]", " ", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{"imvc", "[", "x", "]"}], "+", 
           RowBox[{
            RowBox[{"ImVsreguInter", "[", "n", "]"}], "[", "x", "]"}]}], 
          ")"}]}]}]}], ";", "\[IndentingNewLine]", "\[IndentingNewLine]", 
      RowBox[{"\[Rho]table", "=", 
       RowBox[{
        RowBox[{
         RowBox[{
          RowBox[{"ParallelDo", "[", 
           RowBox[{
            RowBox[{
             RowBox[{"\[Omega]", "=", 
              RowBox[{"\[Omega]min", "+", 
               RowBox[{
                RowBox[{"(", 
                 RowBox[{"it", "-", "1"}], ")"}], " ", "d\[Omega]", " ", 
                "M"}]}]}], ";", 
             RowBox[{"inf", "=", 
              RowBox[{"40", "+", 
               RowBox[{"500", "*", "it", "*", "d\[Omega]"}]}]}], ";", 
             "\[IndentingNewLine]", 
             RowBox[{"s01", "=", 
              RowBox[{"NDSolve", "[", 
               RowBox[{
                RowBox[{"{", 
                 RowBox[{
                  RowBox[{
                   RowBox[{
                    RowBox[{
                    RowBox[{"(", 
                    RowBox[{"\[Omega]", "-", 
                    FractionBox[
                    RowBox[{"l", 
                    RowBox[{"(", 
                    RowBox[{"l", "+", "1"}], ")"}]}], 
                    RowBox[{"M", " ", 
                    SuperscriptBox["r", "2"]}]], "-", 
                    RowBox[{"Re", "[", 
                    RowBox[{"V", "[", "r", "]"}], "]"}], "+", 
                    RowBox[{"\[ImaginaryI]", " ", 
                    RowBox[{"Abs", "[", 
                    RowBox[{"Im", "[", 
                    RowBox[{"V", "[", "r", "]"}], "]"}], "]"}]}]}], ")"}], 
                    RowBox[{"gr", "[", "r", "]"}]}], "+", 
                    RowBox[{
                    FractionBox["1", "M"], 
                    RowBox[{
                    RowBox[{"gr", "''"}], "[", "r", "]"}]}]}], "\[Equal]", 
                   "0"}], ",", " ", "\[IndentingNewLine]", 
                  RowBox[{
                   RowBox[{
                    RowBox[{"gr", "'"}], "[", "\[Delta]", "]"}], "\[Equal]", 
                   RowBox[{
                    RowBox[{"(", 
                    RowBox[{"\[Alpha]", " ", "M"}], ")"}], "-", 
                    RowBox[{"\[Delta]", 
                    SuperscriptBox[
                    RowBox[{"(", 
                    RowBox[{"M", " ", "\[Alpha]"}], ")"}], "2"]}]}]}], ",", 
                  "\[IndentingNewLine]", " ", 
                  RowBox[{
                   RowBox[{"gr", "[", "\[Delta]", "]"}], "\[Equal]", 
                   RowBox[{
                    RowBox[{"\[Delta]", 
                    RowBox[{"(", 
                    RowBox[{"\[Alpha]", " ", "M"}], ")"}]}], "-", " ", 
                    RowBox[{
                    FractionBox["1", "2"], 
                    SuperscriptBox["\[Delta]", "2"], 
                    SuperscriptBox[
                    RowBox[{"(", 
                    RowBox[{"\[Alpha]", " ", "M"}], ")"}], "2"]}]}]}]}], 
                 "}"}], ",", "gr", ",", 
                RowBox[{"{", 
                 RowBox[{"r", ",", "\[Delta]", ",", "inf"}], "}"}]}], "]"}]}],
              ";", "\[IndentingNewLine]", 
             RowBox[{
              RowBox[{"gr0", "[", "r_", "]"}], "=", 
              SubscriptBox[
               RowBox[{"(", 
                RowBox[{
                 RowBox[{"gr", "[", "r", "]"}], "/.", "s01"}], ")"}], 
               RowBox[{
               "\[LeftDoubleBracket]", "1", "\[RightDoubleBracket]"}]]}], ";",
              "\[IndentingNewLine]", 
             RowBox[{"s1", "=", 
              RowBox[{"NDSolve", "[", 
               RowBox[{
                RowBox[{"{", 
                 RowBox[{
                  RowBox[{
                   RowBox[{
                    RowBox[{"rho", "'"}], "[", "x", "]"}], "\[Equal]", 
                   RowBox[{
                    RowBox[{"-", 
                    FractionBox[
                    RowBox[{" ", 
                    RowBox[{"6", " ", "Nc", " ", 
                    SuperscriptBox["M", "2"], " ", "\[Alpha]"}]}], 
                    RowBox[{"4", "\[Pi]"}]]}], 
                    RowBox[{"Im", "[", 
                    FractionBox["1", 
                    SuperscriptBox[
                    RowBox[{"(", 
                    RowBox[{"gr0", "[", "x", "]"}], ")"}], "2"]], "]"}]}]}], 
                  ",", 
                  RowBox[{
                   RowBox[{"rho", "[", "\[Delta]", "]"}], "\[Equal]", "0"}]}],
                  "}"}], ",", "rho", ",", 
                RowBox[{"{", 
                 RowBox[{"x", ",", "\[Delta]", ",", "inf"}], "}"}]}], "]"}]}],
              ";", "\[IndentingNewLine]", 
             RowBox[{
              RowBox[{"rhow", "[", "r_", "]"}], "=", 
              SubscriptBox[
               RowBox[{"(", 
                RowBox[{
                 RowBox[{"rho", "[", "r", "]"}], "/.", "s1"}], ")"}], 
               RowBox[{
               "\[LeftDoubleBracket]", "1", "\[RightDoubleBracket]"}]]}], ";",
              "\[IndentingNewLine]", 
             RowBox[{"ParallelSow", "[", 
              RowBox[{"{", 
               RowBox[{
                RowBox[{"\[Omega]", "+", 
                 RowBox[{"2", "M"}]}], ",", 
                RowBox[{"rhow", "[", "inf", "]"}]}], "}"}], "]"}]}], ",", 
            RowBox[{"{", 
             RowBox[{"it", ",", "1", ",", 
              FractionBox[
               RowBox[{"\[Omega]max", "-", "\[Omega]min"}], 
               RowBox[{"d\[Omega]", " ", "M"}]]}], "}"}]}], "]"}], "//", 
          "Reap"}], "//", "Last"}], "//", "First"}]}], ";", 
      "\[IndentingNewLine]", "\[IndentingNewLine]", 
      RowBox[{"bbsT", "=", 
       RowBox[{"ParallelTable", "[", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{
           RowBox[{"\[Rho]table", "[", 
            RowBox[{"[", 
             RowBox[{"i", ",", "1"}], "]"}], "]"}], ",", 
           FractionBox[
            RowBox[{"\[Rho]table", "[", 
             RowBox[{"[", 
              RowBox[{"i", ",", "2"}], "]"}], "]"}], 
            SuperscriptBox[
             RowBox[{"\[Rho]table", "[", 
              RowBox[{"[", 
               RowBox[{"i", ",", "1"}], "]"}], "]"}], "2"]]}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"i", ",", "1", ",", 
           RowBox[{"Length", "[", "\[Rho]table", "]"}]}], "}"}]}], "]"}]}], 
      ";", "\[IndentingNewLine]", 
      RowBox[{"Export", "[", 
       RowBox[{
        RowBox[{"\"\<bb/swbbT\>\"", "<>", 
         RowBox[{"ToString", "[", 
          RowBox[{"Round", "[", 
           RowBox[{"T", "*", "1000"}], "]"}], "]"}], "<>", 
         "\"\<uspectra.dat\>\""}], ",", 
        RowBox[{"Sort", "[", "bbsT", "]"}]}], "]"}], ";"}]}], 
    "\[IndentingNewLine]", "]"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.747980843118059*^9, 3.7479808571258297`*^9}}]
}, Closed]],

Cell[CellGroupData[{

Cell["Bottomonium p - wave", "Subsubsection",
 CellChangeTimes->{{3.742291861612499*^9, 3.742291867360454*^9}, 
   3.742291901323778*^9, {3.7435061781726627`*^9, 3.7435061783084917`*^9}, {
   3.743506307127768*^9, 3.743506311615374*^9}, {3.743506475554695*^9, 
   3.743506475770885*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"pwavebbspectra", "[", 
    RowBox[{"n_", ",", "Tscan_"}], "]"}], ":=", 
   RowBox[{"Block", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{"T", "=", 
        RowBox[{"Tscan", "[", 
         RowBox[{"[", "n", "]"}], "]"}]}], ",", 
       RowBox[{"mD", "=", 
        RowBox[{"mDcal", "[", 
         RowBox[{
          RowBox[{"2", "\[Pi]"}], ",", 
          RowBox[{"Tscan", "[", 
           RowBox[{"[", "n", "]"}], "]"}], ",", 
          RowBox[{"kfinal", "[", 
           RowBox[{"[", "1", "]"}], "]"}], ",", 
          RowBox[{"kfinal", "[", 
           RowBox[{"[", "2", "]"}], "]"}]}], "]"}]}], ",", 
       RowBox[{"\[Sigma]", "=", 
        RowBox[{"\[Sigma]cont", "[", 
         RowBox[{"[", "1", "]"}], "]"}]}], ",", 
       RowBox[{"\[Alpha]", "=", 
        RowBox[{"\[Alpha]cont", "[", 
         RowBox[{"[", "1", "]"}], "]"}]}], ",", 
       RowBox[{"c", "=", 
        RowBox[{"ccont", "[", 
         RowBox[{"[", "1", "]"}], "]"}]}], ",", 
       RowBox[{"M", "=", "Mb"}], ",", 
       RowBox[{"l", "=", "1"}], ",", 
       RowBox[{"\[Omega]min", "=", 
        RowBox[{"-", "1"}]}], ",", 
       RowBox[{"\[Omega]max", "=", "3"}], ",", "ccsT", ",", "Tstring", ",", 
       "inf", ",", "\[Rho]table", ",", "\[Omega]", ",", "rhow", ",", "gr0", 
       ",", "s1", ",", "s01", ",", "rev", ",", "imvc", ",", "V", ",", 
       "bbsT"}], "}"}], ",", "\[IndentingNewLine]", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"rev", "=", 
       RowBox[{"Interpolation", "[", 
        RowBox[{"Join", "[", 
         RowBox[{
          RowBox[{"ParallelTable", "[", 
           RowBox[{
            RowBox[{"{", 
             RowBox[{"r", ",", 
              RowBox[{"ReVsb", "[", 
               RowBox[{
               "r", ",", "mD", ",", "\[Alpha]", ",", "\[Sigma]", ",", "c"}], 
               "]"}]}], "}"}], ",", 
            RowBox[{"{", 
             RowBox[{"r", ",", 
              RowBox[{"1", "/", "1000"}], ",", "10", ",", 
              RowBox[{"1", "/", "100"}]}], "}"}]}], "]"}], ",", 
          RowBox[{"ParallelTable", "[", 
           RowBox[{
            RowBox[{"{", 
             RowBox[{"r", ",", 
              RowBox[{"ReVsb", "[", 
               RowBox[{
               "r", ",", "mD", ",", "\[Alpha]", ",", "\[Sigma]", ",", "c"}], 
               "]"}]}], "}"}], ",", 
            RowBox[{"{", 
             RowBox[{"r", ",", 
              RowBox[{"101", "/", "10"}], ",", "25", ",", 
              RowBox[{"1", "/", "10"}]}], "}"}]}], "]"}], ",", 
          RowBox[{"ParallelTable", "[", 
           RowBox[{
            RowBox[{"{", 
             RowBox[{"r", ",", 
              RowBox[{"ReVsb", "[", 
               RowBox[{
               "r", ",", "mD", ",", "\[Alpha]", ",", "\[Sigma]", ",", "c"}], 
               "]"}]}], "}"}], ",", 
            RowBox[{"{", 
             RowBox[{"r", ",", "26", ",", "1500", ",", "1"}], "}"}]}], "]"}], 
          ",", 
          RowBox[{"ParallelTable", "[", 
           RowBox[{
            RowBox[{"{", 
             RowBox[{"r", ",", 
              RowBox[{"ReVsb", "[", 
               RowBox[{
               "r", ",", "mD", ",", "\[Alpha]", ",", "\[Sigma]", ",", "c"}], 
               "]"}]}], "}"}], ",", 
            RowBox[{"{", 
             RowBox[{"r", ",", "1510", ",", "20000", ",", "1000"}], "}"}]}], 
           "]"}]}], "]"}], "]"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"imvc", "=", 
       RowBox[{"Interpolation", "[", 
        RowBox[{"Join", "[", 
         RowBox[{
          RowBox[{"ParallelTable", "[", 
           RowBox[{
            RowBox[{"{", 
             RowBox[{"r", ",", 
              RowBox[{"ImVc", "[", 
               RowBox[{"r", ",", "mD", ",", "\[Alpha]", ",", "T"}], "]"}]}], 
             "}"}], ",", 
            RowBox[{"{", 
             RowBox[{"r", ",", 
              RowBox[{"1", "/", "1000"}], ",", "10", ",", 
              RowBox[{"1", "/", "100"}]}], "}"}]}], "]"}], ",", 
          RowBox[{"ParallelTable", "[", 
           RowBox[{
            RowBox[{"{", 
             RowBox[{"r", ",", 
              RowBox[{"ImVc", "[", 
               RowBox[{"r", ",", "mD", ",", "\[Alpha]", ",", "T"}], "]"}]}], 
             "}"}], ",", 
            RowBox[{"{", 
             RowBox[{"r", ",", 
              RowBox[{"101", "/", "10"}], ",", "25", ",", 
              RowBox[{"1", "/", "10"}]}], "}"}]}], "]"}], ",", 
          RowBox[{"ParallelTable", "[", 
           RowBox[{
            RowBox[{"{", 
             RowBox[{"r", ",", 
              RowBox[{"ImVc", "[", 
               RowBox[{"r", ",", "mD", ",", "\[Alpha]", ",", "T"}], "]"}]}], 
             "}"}], ",", 
            RowBox[{"{", 
             RowBox[{"r", ",", "26", ",", "1500", ",", "1"}], "}"}]}], "]"}], 
          ",", 
          RowBox[{"ParallelTable", "[", 
           RowBox[{
            RowBox[{"{", 
             RowBox[{"r", ",", 
              RowBox[{"ImVc", "[", 
               RowBox[{"r", ",", "mD", ",", "\[Alpha]", ",", "T"}], "]"}]}], 
             "}"}], ",", 
            RowBox[{"{", 
             RowBox[{"r", ",", "1510", ",", "20000", ",", "1000"}], "}"}]}], 
           "]"}]}], "]"}], "]"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"V", "[", "x_", "]"}], ":=", 
       RowBox[{
        RowBox[{"rev", "[", "x", "]"}], "+", 
        RowBox[{"\[ImaginaryI]", " ", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{"imvc", "[", "x", "]"}], "+", 
           RowBox[{
            RowBox[{"ImVsregInter", "[", "n", "]"}], "[", "x", "]"}]}], 
          ")"}]}]}]}], ";", "\[IndentingNewLine]", "\[IndentingNewLine]", 
      RowBox[{"\[Rho]table", "=", 
       RowBox[{
        RowBox[{
         RowBox[{
          RowBox[{"ParallelDo", "[", 
           RowBox[{
            RowBox[{
             RowBox[{"\[Omega]", "=", 
              RowBox[{"\[Omega]min", "+", 
               RowBox[{
                RowBox[{"(", 
                 RowBox[{"it", "-", "1"}], ")"}], " ", "d\[Omega]", " ", 
                "M"}]}]}], ";", 
             RowBox[{"inf", "=", 
              RowBox[{"40", "+", 
               RowBox[{"500", "*", "it", "*", "d\[Omega]"}]}]}], ";", 
             "\[IndentingNewLine]", 
             RowBox[{"s0", "=", 
              RowBox[{"NDSolve", "[", 
               RowBox[{
                RowBox[{"{", 
                 RowBox[{
                  RowBox[{
                   RowBox[{
                    RowBox[{
                    RowBox[{"(", 
                    RowBox[{"\[Omega]", "-", 
                    FractionBox[
                    RowBox[{"l", 
                    RowBox[{"(", 
                    RowBox[{"l", "+", "1"}], ")"}]}], 
                    RowBox[{"M", " ", 
                    SuperscriptBox["r", "2"]}]], "-", 
                    RowBox[{"Re", "[", 
                    RowBox[{"V", "[", "r", "]"}], "]"}], "+", 
                    RowBox[{"\[ImaginaryI]", " ", 
                    RowBox[{"Abs", "[", 
                    RowBox[{"Im", "[", 
                    RowBox[{"V", "[", "r", "]"}], "]"}], "]"}]}]}], ")"}], 
                    RowBox[{"gr", "[", "r", "]"}]}], "+", 
                    RowBox[{
                    FractionBox["1", "M"], 
                    RowBox[{
                    RowBox[{"gr", "''"}], "[", "r", "]"}]}]}], "\[Equal]", 
                   "0"}], ",", " ", "\[IndentingNewLine]", 
                  RowBox[{
                   RowBox[{
                    RowBox[{"gr", "'"}], "[", "\[Delta]", "]"}], "\[Equal]", 
                   RowBox[{
                    RowBox[{"2", " ", "\[Delta]", 
                    SuperscriptBox[
                    RowBox[{"(", 
                    RowBox[{"\[Alpha]", " ", "M"}], ")"}], "2"]}], "-", 
                    RowBox[{
                    FractionBox["3", "4"], 
                    SuperscriptBox["\[Delta]", "2"], 
                    SuperscriptBox[
                    RowBox[{"(", 
                    RowBox[{"M", " ", "\[Alpha]"}], ")"}], "3"]}]}]}], ",", 
                  "\[IndentingNewLine]", " ", 
                  RowBox[{
                   RowBox[{"gr", "[", "\[Delta]", "]"}], "==", " ", 
                   RowBox[{
                    RowBox[{
                    SuperscriptBox["\[Delta]", "2"], 
                    SuperscriptBox[
                    RowBox[{"(", 
                    RowBox[{"\[Alpha]", " ", "M"}], ")"}], "2"]}], "-", 
                    RowBox[{
                    FractionBox["1", "4"], 
                    SuperscriptBox["\[Delta]", "3"], 
                    SuperscriptBox[
                    RowBox[{"(", 
                    RowBox[{"M", " ", "\[Alpha]"}], ")"}], "3"]}]}]}]}], 
                 "}"}], ",", "gr", ",", 
                RowBox[{"{", 
                 RowBox[{"r", ",", "\[Delta]", ",", "inf"}], "}"}], ",", 
                RowBox[{"PrecisionGoal", "\[Rule]", "10"}], ",", 
                RowBox[{"MaxSteps", "\[Rule]", "1000000"}]}], "]"}]}], ";", 
             "\[IndentingNewLine]", 
             RowBox[{
              RowBox[{"gr1", "[", "r_", "]"}], "=", 
              SubscriptBox[
               RowBox[{"(", 
                RowBox[{
                 RowBox[{"gr", "[", "r", "]"}], "/.", "s0"}], ")"}], 
               RowBox[{
               "\[LeftDoubleBracket]", "1", "\[RightDoubleBracket]"}]]}], ";",
              "\[IndentingNewLine]", 
             RowBox[{"s01", "=", 
              RowBox[{"NDSolve", "[", 
               RowBox[{
                RowBox[{"{", 
                 RowBox[{
                  RowBox[{
                   RowBox[{
                    RowBox[{
                    RowBox[{"(", 
                    RowBox[{"\[Omega]", "-", 
                    FractionBox[
                    RowBox[{"l", 
                    RowBox[{"(", 
                    RowBox[{"l", "+", "1"}], ")"}]}], 
                    RowBox[{"M", " ", 
                    SuperscriptBox["r", "2"]}]], "-", 
                    RowBox[{"Re", "[", 
                    RowBox[{"V", "[", "r", "]"}], "]"}], "+", 
                    RowBox[{"\[ImaginaryI]", " ", 
                    RowBox[{"Abs", "[", 
                    RowBox[{"Im", "[", 
                    RowBox[{"V", "[", "r", "]"}], "]"}], "]"}]}]}], ")"}], 
                    RowBox[{"gr", "[", "r", "]"}]}], "+", 
                    RowBox[{
                    FractionBox["1", "M"], 
                    RowBox[{
                    RowBox[{"gr", "''"}], "[", "r", "]"}]}]}], "\[Equal]", 
                   "0"}], ",", " ", "\[IndentingNewLine]", 
                  RowBox[{
                   RowBox[{
                    RowBox[{"gr", "'"}], "[", "\[Delta]", "]"}], "\[Equal]", 
                   RowBox[{
                    RowBox[{"(", 
                    RowBox[{"\[Alpha]", " ", "M"}], ")"}], "-", 
                    RowBox[{"\[Delta]", 
                    SuperscriptBox[
                    RowBox[{"(", 
                    RowBox[{"M", " ", "\[Alpha]"}], ")"}], "2"]}]}]}], ",", 
                  "\[IndentingNewLine]", " ", 
                  RowBox[{
                   RowBox[{"gr", "[", "\[Delta]", "]"}], "\[Equal]", 
                   RowBox[{
                    RowBox[{"\[Delta]", 
                    RowBox[{"(", 
                    RowBox[{"\[Alpha]", " ", "M"}], ")"}]}], "-", " ", 
                    RowBox[{
                    FractionBox["1", "2"], 
                    SuperscriptBox["\[Delta]", "2"], 
                    SuperscriptBox[
                    RowBox[{"(", 
                    RowBox[{"\[Alpha]", " ", "M"}], ")"}], "2"]}]}]}]}], 
                 "}"}], ",", "gr", ",", 
                RowBox[{"{", 
                 RowBox[{"r", ",", "\[Delta]", ",", "inf"}], "}"}]}], "]"}]}],
              ";", "\[IndentingNewLine]", 
             RowBox[{
              RowBox[{"gr0", "[", "r_", "]"}], "=", 
              SubscriptBox[
               RowBox[{"(", 
                RowBox[{
                 RowBox[{"gr", "[", "r", "]"}], "/.", "s01"}], ")"}], 
               RowBox[{
               "\[LeftDoubleBracket]", "1", "\[RightDoubleBracket]"}]]}], ";",
              "\[IndentingNewLine]", 
             RowBox[{"s1", "=", 
              RowBox[{"NDSolve", "[", 
               RowBox[{
                RowBox[{"{", 
                 RowBox[{
                  RowBox[{
                   RowBox[{
                    RowBox[{"rho", "'"}], "[", "x", "]"}], "\[Equal]", 
                   RowBox[{
                    FractionBox[
                    RowBox[{"  ", 
                    RowBox[{"Nc", " ", 
                    SuperscriptBox["M", "2"], " ", 
                    SuperscriptBox["\[Alpha]", "3"]}]}], 
                    RowBox[{"8", "\[Pi]"}]], 
                    RowBox[{"Im", "[", 
                    RowBox[{
                    FractionBox["1", 
                    SuperscriptBox[
                    RowBox[{"(", 
                    RowBox[{"gr0", "[", "x", "]"}], ")"}], "2"]], "+", 
                    FractionBox["36", 
                    SuperscriptBox[
                    RowBox[{"(", 
                    RowBox[{"gr1", "[", "x", "]"}], ")"}], "2"]]}], "]"}]}]}],
                   ",", 
                  RowBox[{
                   RowBox[{"rho", "[", "\[Delta]", "]"}], "\[Equal]", "0"}]}],
                  "}"}], ",", "rho", ",", 
                RowBox[{"{", 
                 RowBox[{"x", ",", "\[Delta]", ",", "inf"}], "}"}]}], "]"}]}],
              ";", "\[IndentingNewLine]", 
             RowBox[{
              RowBox[{"rhow", "[", "r_", "]"}], "=", 
              SubscriptBox[
               RowBox[{"(", 
                RowBox[{
                 RowBox[{"rho", "[", "r", "]"}], "/.", "s1"}], ")"}], 
               RowBox[{
               "\[LeftDoubleBracket]", "1", "\[RightDoubleBracket]"}]]}], ";",
              "\[IndentingNewLine]", 
             RowBox[{"ParallelSow", "[", 
              RowBox[{"{", 
               RowBox[{
                RowBox[{"\[Omega]", "+", 
                 RowBox[{"2", "M"}]}], ",", 
                RowBox[{"rhow", "[", "inf", "]"}]}], "}"}], "]"}]}], ",", 
            RowBox[{"{", 
             RowBox[{"it", ",", "1", ",", 
              FractionBox[
               RowBox[{"\[Omega]max", "-", "\[Omega]min"}], 
               RowBox[{"d\[Omega]", " ", "M"}]]}], "}"}]}], "]"}], "//", 
          "Reap"}], "//", "Last"}], "//", "First"}]}], ";", 
      "\[IndentingNewLine]", "\[IndentingNewLine]", 
      RowBox[{"bbsT", "=", 
       RowBox[{"ParallelTable", "[", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{
           RowBox[{"\[Rho]table", "[", 
            RowBox[{"[", 
             RowBox[{"i", ",", "1"}], "]"}], "]"}], ",", 
           FractionBox[
            RowBox[{"\[Rho]table", "[", 
             RowBox[{"[", 
              RowBox[{"i", ",", "2"}], "]"}], "]"}], 
            SuperscriptBox[
             RowBox[{"\[Rho]table", "[", 
              RowBox[{"[", 
               RowBox[{"i", ",", "1"}], "]"}], "]"}], "2"]]}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"i", ",", "1", ",", 
           RowBox[{"Length", "[", "\[Rho]table", "]"}]}], "}"}]}], "]"}]}], 
      ";", "\[IndentingNewLine]", 
      RowBox[{"Tstring", "=", 
       RowBox[{"Round", "[", 
        RowBox[{"T", "*", "1000"}], "]"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"Export", "[", 
       RowBox[{
        RowBox[{"\"\<bb/pwbbT\>\"", "<>", 
         RowBox[{"ToString", "[", "Tstring", "]"}], "<>", 
         "\"\<spectra.dat\>\""}], ",", 
        RowBox[{"Sort", "[", "bbsT", "]"}]}], "]"}], ";"}]}], 
    "\[IndentingNewLine]", "]"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.724397604460712*^9, 3.724397621092863*^9}, {
   3.724398705481254*^9, 3.724398705798315*^9}, {3.72440624506767*^9, 
   3.7244062457361317`*^9}, {3.7244423136168756`*^9, 3.724442340980721*^9}, {
   3.7244423712224417`*^9, 3.724442377050403*^9}, {3.724442465925974*^9, 
   3.724442518695669*^9}, {3.7244426255599117`*^9, 3.724442639076613*^9}, {
   3.724443729204352*^9, 3.724443729749022*^9}, {3.724443881656342*^9, 
   3.7244438842850027`*^9}, 3.725261621115453*^9, 3.72526166634648*^9, {
   3.725271550289123*^9, 3.7252715504130163`*^9}, {3.725271609402791*^9, 
   3.7252716095188437`*^9}, {3.7252717762497*^9, 3.725271782362536*^9}, {
   3.725271824500347*^9, 3.725271826035269*^9}, {3.725271857701564*^9, 
   3.725271858192912*^9}, {3.725271928114049*^9, 3.7252719496618757`*^9}, {
   3.725271981807578*^9, 3.725271987122878*^9}, {3.725273718896678*^9, 
   3.72527377251343*^9}, {3.725273963159111*^9, 3.725273966198284*^9}, {
   3.725364382855975*^9, 3.725364384697238*^9}, {3.725364432753635*^9, 
   3.725364433681274*^9}, {3.725364595553596*^9, 3.725364595868292*^9}, {
   3.725364661141473*^9, 3.725364661301785*^9}, {3.725365068510941*^9, 
   3.7253650691073112`*^9}, {3.7256202924505177`*^9, 
   3.7256202938854313`*^9}, {3.7256265502253428`*^9, 3.725626559021003*^9}, {
   3.725798091627001*^9, 3.725798108963685*^9}, {3.725798150844287*^9, 
   3.725798156038417*^9}, {3.726312422974263*^9, 3.726312439922279*^9}, {
   3.726313778060986*^9, 3.726313794010726*^9}, {3.726313854887352*^9, 
   3.726313855417986*^9}, {3.726377533478507*^9, 3.726377535012369*^9}, {
   3.726379310729051*^9, 3.726379315935656*^9}, {3.726379351066524*^9, 
   3.7263793563685627`*^9}, 3.7263814533362722`*^9, {3.726468979312665*^9, 
   3.726469044993416*^9}, {3.726564279540083*^9, 3.726564288774165*^9}, {
   3.726564330005303*^9, 3.726564342424973*^9}, {3.7265645007454853`*^9, 
   3.7265645054085903`*^9}, 3.726565145221386*^9, {3.726836923420138*^9, 
   3.726836925204391*^9}, {3.7268417497448387`*^9, 3.726841749854889*^9}, {
   3.727357927216405*^9, 3.7273579306359463`*^9}, 3.72735811608375*^9, {
   3.7273582875862513`*^9, 3.727358296888235*^9}, {3.727520051444908*^9, 
   3.7275200665503483`*^9}, {3.727539483513708*^9, 3.72753949210455*^9}, {
   3.7275398377710333`*^9, 3.727539869000495*^9}, {3.7275879806550293`*^9, 
   3.727587984698921*^9}, {3.727606150288821*^9, 3.727606150994812*^9}, {
   3.728932814314426*^9, 3.728932860160056*^9}, 3.7289333254815903`*^9, 
   3.7299208725344887`*^9, {3.730007040539275*^9, 3.7300070509717903`*^9}, {
   3.730007357183831*^9, 3.7300073662633142`*^9}, {3.7331192829046183`*^9, 
   3.733119300197537*^9}, {3.733120717385792*^9, 3.733120717697629*^9}, {
   3.7331222711038847`*^9, 3.733122272703622*^9}, {3.733211538849382*^9, 
   3.7332115515038567`*^9}, {3.7332289443370447`*^9, 
   3.7332289447842827`*^9}, {3.742215948846467*^9, 3.742215959437643*^9}, {
   3.742216025305929*^9, 3.742216093257207*^9}, {3.7422172078868933`*^9, 
   3.7422172275906973`*^9}, 3.74221727383118*^9, {3.742217585069265*^9, 
   3.742217591716959*^9}, {3.7422176229823923`*^9, 3.742217653035615*^9}, {
   3.742269341112874*^9, 3.742269371527761*^9}, 3.742275694936644*^9, {
   3.742289467062118*^9, 3.742289486771803*^9}, {3.742289520463562*^9, 
   3.7422896027136*^9}, {3.7422896364561243`*^9, 3.74228964347093*^9}, {
   3.742289678232355*^9, 3.742289708137301*^9}, {3.7422897506101*^9, 
   3.7422897587096577`*^9}, {3.7422920316457787`*^9, 3.742292034487727*^9}, 
   3.742292186682322*^9, {3.742292303240778*^9, 3.742292303483521*^9}, {
   3.742292362481593*^9, 3.742292372544711*^9}, {3.742292408813004*^9, 
   3.742292447857381*^9}, {3.7422968206130743`*^9, 3.742296843480155*^9}, {
   3.7422970160890417`*^9, 3.742297024417719*^9}, {3.742297074890059*^9, 
   3.74229711910509*^9}, {3.7422973083294992`*^9, 3.742297309298213*^9}, {
   3.742297354168077*^9, 3.742297359897736*^9}, {3.742297415918168*^9, 
   3.7422974232482452`*^9}, {3.742297467739311*^9, 3.742297612963316*^9}, {
   3.7422977860232887`*^9, 3.7422977903561068`*^9}, {3.74229798181938*^9, 
   3.742298023677857*^9}, {3.7422980561712513`*^9, 3.74229805925661*^9}, 
   3.742298106308654*^9, {3.742300221204397*^9, 3.742300269720365*^9}, {
   3.742300416216001*^9, 3.742300416917211*^9}, {3.742300536315893*^9, 
   3.742300546756034*^9}, {3.742300626604027*^9, 3.742300638323701*^9}, {
   3.7423006769018583`*^9, 3.7423007163572683`*^9}, {3.7435037431402884`*^9, 
   3.743503799356997*^9}, {3.7435038425347443`*^9, 3.743503908279688*^9}, {
   3.7435046316079397`*^9, 3.743504651390107*^9}, {3.743506325612351*^9, 
   3.7435063377910748`*^9}, {3.74350638604452*^9, 3.743506401938177*^9}, {
   3.743506481181818*^9, 3.743506513038129*^9}, {3.745326264884691*^9, 
   3.745326273933687*^9}, 3.7477313911233587`*^9, {3.748193792574643*^9, 
   3.74819381883034*^9}, {3.748193864219204*^9, 3.748193864467815*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"pwavebblspectra", "[", 
    RowBox[{"n_", ",", "Tscan_"}], "]"}], ":=", 
   RowBox[{"Block", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{"T", "=", 
        RowBox[{"Tscan", "[", 
         RowBox[{"[", "n", "]"}], "]"}]}], ",", 
       RowBox[{"mD", "=", 
        RowBox[{"mDcal", "[", 
         RowBox[{
          RowBox[{"2", "\[Pi]"}], ",", 
          RowBox[{"Tscan", "[", 
           RowBox[{"[", "n", "]"}], "]"}], ",", 
          RowBox[{"kfinall", "[", 
           RowBox[{"[", "1", "]"}], "]"}], ",", 
          RowBox[{"kfinall", "[", 
           RowBox[{"[", "2", "]"}], "]"}]}], "]"}]}], ",", 
       RowBox[{"\[Sigma]", "=", 
        RowBox[{"\[Sigma]cont", "[", 
         RowBox[{"[", "1", "]"}], "]"}]}], ",", 
       RowBox[{"\[Alpha]", "=", 
        RowBox[{"\[Alpha]cont", "[", 
         RowBox[{"[", "1", "]"}], "]"}]}], ",", 
       RowBox[{"c", "=", 
        RowBox[{"ccont", "[", 
         RowBox[{"[", "1", "]"}], "]"}]}], ",", 
       RowBox[{"M", "=", "Mb"}], ",", 
       RowBox[{"l", "=", "1"}], ",", 
       RowBox[{"\[Omega]min", "=", 
        RowBox[{"-", "1"}]}], ",", 
       RowBox[{"\[Omega]max", "=", "3"}], ",", "ccsT", ",", "Tstring", ",", 
       "inf", ",", "\[Rho]table", ",", "\[Omega]", ",", "rhow", ",", "gr0", 
       ",", "s1", ",", "s01", ",", "rev", ",", "imvc", ",", "V", ",", 
       "bbsT"}], "}"}], ",", "\[IndentingNewLine]", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"rev", "=", 
       RowBox[{"Interpolation", "[", 
        RowBox[{"Join", "[", 
         RowBox[{
          RowBox[{"ParallelTable", "[", 
           RowBox[{
            RowBox[{"{", 
             RowBox[{"r", ",", 
              RowBox[{"ReVsb", "[", 
               RowBox[{
               "r", ",", "mD", ",", "\[Alpha]", ",", "\[Sigma]", ",", "c"}], 
               "]"}]}], "}"}], ",", 
            RowBox[{"{", 
             RowBox[{"r", ",", 
              RowBox[{"1", "/", "1000"}], ",", "10", ",", 
              RowBox[{"1", "/", "100"}]}], "}"}]}], "]"}], ",", 
          RowBox[{"ParallelTable", "[", 
           RowBox[{
            RowBox[{"{", 
             RowBox[{"r", ",", 
              RowBox[{"ReVsb", "[", 
               RowBox[{
               "r", ",", "mD", ",", "\[Alpha]", ",", "\[Sigma]", ",", "c"}], 
               "]"}]}], "}"}], ",", 
            RowBox[{"{", 
             RowBox[{"r", ",", 
              RowBox[{"101", "/", "10"}], ",", "25", ",", 
              RowBox[{"1", "/", "10"}]}], "}"}]}], "]"}], ",", 
          RowBox[{"ParallelTable", "[", 
           RowBox[{
            RowBox[{"{", 
             RowBox[{"r", ",", 
              RowBox[{"ReVsb", "[", 
               RowBox[{
               "r", ",", "mD", ",", "\[Alpha]", ",", "\[Sigma]", ",", "c"}], 
               "]"}]}], "}"}], ",", 
            RowBox[{"{", 
             RowBox[{"r", ",", "26", ",", "1500", ",", "1"}], "}"}]}], "]"}], 
          ",", 
          RowBox[{"ParallelTable", "[", 
           RowBox[{
            RowBox[{"{", 
             RowBox[{"r", ",", 
              RowBox[{"ReVsb", "[", 
               RowBox[{
               "r", ",", "mD", ",", "\[Alpha]", ",", "\[Sigma]", ",", "c"}], 
               "]"}]}], "}"}], ",", 
            RowBox[{"{", 
             RowBox[{"r", ",", "1510", ",", "20000", ",", "1000"}], "}"}]}], 
           "]"}]}], "]"}], "]"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"imvc", "=", 
       RowBox[{"Interpolation", "[", 
        RowBox[{"Join", "[", 
         RowBox[{
          RowBox[{"ParallelTable", "[", 
           RowBox[{
            RowBox[{"{", 
             RowBox[{"r", ",", 
              RowBox[{"ImVc", "[", 
               RowBox[{"r", ",", "mD", ",", "\[Alpha]", ",", "T"}], "]"}]}], 
             "}"}], ",", 
            RowBox[{"{", 
             RowBox[{"r", ",", 
              RowBox[{"1", "/", "1000"}], ",", "10", ",", 
              RowBox[{"1", "/", "100"}]}], "}"}]}], "]"}], ",", 
          RowBox[{"ParallelTable", "[", 
           RowBox[{
            RowBox[{"{", 
             RowBox[{"r", ",", 
              RowBox[{"ImVc", "[", 
               RowBox[{"r", ",", "mD", ",", "\[Alpha]", ",", "T"}], "]"}]}], 
             "}"}], ",", 
            RowBox[{"{", 
             RowBox[{"r", ",", 
              RowBox[{"101", "/", "10"}], ",", "25", ",", 
              RowBox[{"1", "/", "10"}]}], "}"}]}], "]"}], ",", 
          RowBox[{"ParallelTable", "[", 
           RowBox[{
            RowBox[{"{", 
             RowBox[{"r", ",", 
              RowBox[{"ImVc", "[", 
               RowBox[{"r", ",", "mD", ",", "\[Alpha]", ",", "T"}], "]"}]}], 
             "}"}], ",", 
            RowBox[{"{", 
             RowBox[{"r", ",", "26", ",", "1500", ",", "1"}], "}"}]}], "]"}], 
          ",", 
          RowBox[{"ParallelTable", "[", 
           RowBox[{
            RowBox[{"{", 
             RowBox[{"r", ",", 
              RowBox[{"ImVc", "[", 
               RowBox[{"r", ",", "mD", ",", "\[Alpha]", ",", "T"}], "]"}]}], 
             "}"}], ",", 
            RowBox[{"{", 
             RowBox[{"r", ",", "1510", ",", "20000", ",", "1000"}], "}"}]}], 
           "]"}]}], "]"}], "]"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"V", "[", "x_", "]"}], ":=", 
       RowBox[{
        RowBox[{"rev", "[", "x", "]"}], "+", 
        RowBox[{"\[ImaginaryI]", " ", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{"imvc", "[", "x", "]"}], "+", 
           RowBox[{
            RowBox[{"ImVsreglInter", "[", "n", "]"}], "[", "x", "]"}]}], 
          ")"}]}]}]}], ";", "\[IndentingNewLine]", "\[IndentingNewLine]", 
      RowBox[{"\[Rho]table", "=", 
       RowBox[{
        RowBox[{
         RowBox[{
          RowBox[{"ParallelDo", "[", 
           RowBox[{
            RowBox[{
             RowBox[{"\[Omega]", "=", 
              RowBox[{"\[Omega]min", "+", 
               RowBox[{
                RowBox[{"(", 
                 RowBox[{"it", "-", "1"}], ")"}], " ", "d\[Omega]", " ", 
                "M"}]}]}], ";", 
             RowBox[{"inf", "=", 
              RowBox[{"40", "+", 
               RowBox[{"500", "*", "it", "*", "d\[Omega]"}]}]}], ";", 
             "\[IndentingNewLine]", 
             RowBox[{"s0", "=", 
              RowBox[{"NDSolve", "[", 
               RowBox[{
                RowBox[{"{", 
                 RowBox[{
                  RowBox[{
                   RowBox[{
                    RowBox[{
                    RowBox[{"(", 
                    RowBox[{"\[Omega]", "-", 
                    FractionBox[
                    RowBox[{"l", 
                    RowBox[{"(", 
                    RowBox[{"l", "+", "1"}], ")"}]}], 
                    RowBox[{"M", " ", 
                    SuperscriptBox["r", "2"]}]], "-", 
                    RowBox[{"Re", "[", 
                    RowBox[{"V", "[", "r", "]"}], "]"}], "+", 
                    RowBox[{"\[ImaginaryI]", " ", 
                    RowBox[{"Abs", "[", 
                    RowBox[{"Im", "[", 
                    RowBox[{"V", "[", "r", "]"}], "]"}], "]"}]}]}], ")"}], 
                    RowBox[{"gr", "[", "r", "]"}]}], "+", 
                    RowBox[{
                    FractionBox["1", "M"], 
                    RowBox[{
                    RowBox[{"gr", "''"}], "[", "r", "]"}]}]}], "\[Equal]", 
                   "0"}], ",", " ", "\[IndentingNewLine]", 
                  RowBox[{
                   RowBox[{
                    RowBox[{"gr", "'"}], "[", "\[Delta]", "]"}], "\[Equal]", 
                   RowBox[{
                    RowBox[{"2", " ", "\[Delta]", 
                    SuperscriptBox[
                    RowBox[{"(", 
                    RowBox[{"\[Alpha]", " ", "M"}], ")"}], "2"]}], "-", 
                    RowBox[{
                    FractionBox["3", "4"], 
                    SuperscriptBox["\[Delta]", "2"], 
                    SuperscriptBox[
                    RowBox[{"(", 
                    RowBox[{"M", " ", "\[Alpha]"}], ")"}], "3"]}]}]}], ",", 
                  "\[IndentingNewLine]", " ", 
                  RowBox[{
                   RowBox[{"gr", "[", "\[Delta]", "]"}], "==", " ", 
                   RowBox[{
                    RowBox[{
                    SuperscriptBox["\[Delta]", "2"], 
                    SuperscriptBox[
                    RowBox[{"(", 
                    RowBox[{"\[Alpha]", " ", "M"}], ")"}], "2"]}], "-", 
                    RowBox[{
                    FractionBox["1", "4"], 
                    SuperscriptBox["\[Delta]", "3"], 
                    SuperscriptBox[
                    RowBox[{"(", 
                    RowBox[{"M", " ", "\[Alpha]"}], ")"}], "3"]}]}]}]}], 
                 "}"}], ",", "gr", ",", 
                RowBox[{"{", 
                 RowBox[{"r", ",", "\[Delta]", ",", "inf"}], "}"}], ",", 
                RowBox[{"PrecisionGoal", "\[Rule]", "10"}], ",", 
                RowBox[{"MaxSteps", "\[Rule]", "1000000"}]}], "]"}]}], ";", 
             "\[IndentingNewLine]", 
             RowBox[{
              RowBox[{"gr1", "[", "r_", "]"}], "=", 
              SubscriptBox[
               RowBox[{"(", 
                RowBox[{
                 RowBox[{"gr", "[", "r", "]"}], "/.", "s0"}], ")"}], 
               RowBox[{
               "\[LeftDoubleBracket]", "1", "\[RightDoubleBracket]"}]]}], ";",
              "\[IndentingNewLine]", 
             RowBox[{"s01", "=", 
              RowBox[{"NDSolve", "[", 
               RowBox[{
                RowBox[{"{", 
                 RowBox[{
                  RowBox[{
                   RowBox[{
                    RowBox[{
                    RowBox[{"(", 
                    RowBox[{"\[Omega]", "-", 
                    FractionBox[
                    RowBox[{"l", 
                    RowBox[{"(", 
                    RowBox[{"l", "+", "1"}], ")"}]}], 
                    RowBox[{"M", " ", 
                    SuperscriptBox["r", "2"]}]], "-", 
                    RowBox[{"Re", "[", 
                    RowBox[{"V", "[", "r", "]"}], "]"}], "+", 
                    RowBox[{"\[ImaginaryI]", " ", 
                    RowBox[{"Abs", "[", 
                    RowBox[{"Im", "[", 
                    RowBox[{"V", "[", "r", "]"}], "]"}], "]"}]}]}], ")"}], 
                    RowBox[{"gr", "[", "r", "]"}]}], "+", 
                    RowBox[{
                    FractionBox["1", "M"], 
                    RowBox[{
                    RowBox[{"gr", "''"}], "[", "r", "]"}]}]}], "\[Equal]", 
                   "0"}], ",", " ", "\[IndentingNewLine]", 
                  RowBox[{
                   RowBox[{
                    RowBox[{"gr", "'"}], "[", "\[Delta]", "]"}], "\[Equal]", 
                   RowBox[{
                    RowBox[{"(", 
                    RowBox[{"\[Alpha]", " ", "M"}], ")"}], "-", 
                    RowBox[{"\[Delta]", 
                    SuperscriptBox[
                    RowBox[{"(", 
                    RowBox[{"M", " ", "\[Alpha]"}], ")"}], "2"]}]}]}], ",", 
                  "\[IndentingNewLine]", " ", 
                  RowBox[{
                   RowBox[{"gr", "[", "\[Delta]", "]"}], "\[Equal]", 
                   RowBox[{
                    RowBox[{"\[Delta]", 
                    RowBox[{"(", 
                    RowBox[{"\[Alpha]", " ", "M"}], ")"}]}], "-", " ", 
                    RowBox[{
                    FractionBox["1", "2"], 
                    SuperscriptBox["\[Delta]", "2"], 
                    SuperscriptBox[
                    RowBox[{"(", 
                    RowBox[{"\[Alpha]", " ", "M"}], ")"}], "2"]}]}]}]}], 
                 "}"}], ",", "gr", ",", 
                RowBox[{"{", 
                 RowBox[{"r", ",", "\[Delta]", ",", "inf"}], "}"}]}], "]"}]}],
              ";", "\[IndentingNewLine]", 
             RowBox[{
              RowBox[{"gr0", "[", "r_", "]"}], "=", 
              SubscriptBox[
               RowBox[{"(", 
                RowBox[{
                 RowBox[{"gr", "[", "r", "]"}], "/.", "s01"}], ")"}], 
               RowBox[{
               "\[LeftDoubleBracket]", "1", "\[RightDoubleBracket]"}]]}], ";",
              "\[IndentingNewLine]", 
             RowBox[{"s1", "=", 
              RowBox[{"NDSolve", "[", 
               RowBox[{
                RowBox[{"{", 
                 RowBox[{
                  RowBox[{
                   RowBox[{
                    RowBox[{"rho", "'"}], "[", "x", "]"}], "\[Equal]", 
                   RowBox[{
                    FractionBox[
                    RowBox[{"  ", 
                    RowBox[{"Nc", " ", 
                    SuperscriptBox["M", "2"], " ", 
                    SuperscriptBox["\[Alpha]", "3"]}]}], 
                    RowBox[{"8", "\[Pi]"}]], 
                    RowBox[{"Im", "[", 
                    RowBox[{
                    FractionBox["1", 
                    SuperscriptBox[
                    RowBox[{"(", 
                    RowBox[{"gr0", "[", "x", "]"}], ")"}], "2"]], "+", 
                    FractionBox["36", 
                    SuperscriptBox[
                    RowBox[{"(", 
                    RowBox[{"gr1", "[", "x", "]"}], ")"}], "2"]]}], "]"}]}]}],
                   ",", 
                  RowBox[{
                   RowBox[{"rho", "[", "\[Delta]", "]"}], "\[Equal]", "0"}]}],
                  "}"}], ",", "rho", ",", 
                RowBox[{"{", 
                 RowBox[{"x", ",", "\[Delta]", ",", "inf"}], "}"}]}], "]"}]}],
              ";", "\[IndentingNewLine]", 
             RowBox[{
              RowBox[{"rhow", "[", "r_", "]"}], "=", 
              SubscriptBox[
               RowBox[{"(", 
                RowBox[{
                 RowBox[{"rho", "[", "r", "]"}], "/.", "s1"}], ")"}], 
               RowBox[{
               "\[LeftDoubleBracket]", "1", "\[RightDoubleBracket]"}]]}], ";",
              "\[IndentingNewLine]", 
             RowBox[{"ParallelSow", "[", 
              RowBox[{"{", 
               RowBox[{
                RowBox[{"\[Omega]", "+", 
                 RowBox[{"2", "M"}]}], ",", 
                RowBox[{"rhow", "[", "inf", "]"}]}], "}"}], "]"}]}], ",", 
            RowBox[{"{", 
             RowBox[{"it", ",", "1", ",", 
              FractionBox[
               RowBox[{"\[Omega]max", "-", "\[Omega]min"}], 
               RowBox[{"d\[Omega]", " ", "M"}]]}], "}"}]}], "]"}], "//", 
          "Reap"}], "//", "Last"}], "//", "First"}]}], ";", 
      "\[IndentingNewLine]", "\[IndentingNewLine]", 
      RowBox[{"bbsT", "=", 
       RowBox[{"ParallelTable", "[", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{
           RowBox[{"\[Rho]table", "[", 
            RowBox[{"[", 
             RowBox[{"i", ",", "1"}], "]"}], "]"}], ",", 
           FractionBox[
            RowBox[{"\[Rho]table", "[", 
             RowBox[{"[", 
              RowBox[{"i", ",", "2"}], "]"}], "]"}], 
            SuperscriptBox[
             RowBox[{"\[Rho]table", "[", 
              RowBox[{"[", 
               RowBox[{"i", ",", "1"}], "]"}], "]"}], "2"]]}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"i", ",", "1", ",", 
           RowBox[{"Length", "[", "\[Rho]table", "]"}]}], "}"}]}], "]"}]}], 
      ";", "\[IndentingNewLine]", 
      RowBox[{"Tstring", "=", 
       RowBox[{"Round", "[", 
        RowBox[{"T", "*", "1000"}], "]"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"Export", "[", 
       RowBox[{
        RowBox[{"\"\<bb/pwbbT\>\"", "<>", 
         RowBox[{"ToString", "[", "Tstring", "]"}], "<>", 
         "\"\<lspectra.dat\>\""}], ",", 
        RowBox[{"Sort", "[", "bbsT", "]"}]}], "]"}], ";"}]}], 
    "\[IndentingNewLine]", "]"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.724397604460712*^9, 3.724397621092863*^9}, {
   3.724398705481254*^9, 3.724398705798315*^9}, {3.72440624506767*^9, 
   3.7244062457361317`*^9}, {3.7244423136168756`*^9, 3.724442340980721*^9}, {
   3.7244423712224417`*^9, 3.724442377050403*^9}, {3.724442465925974*^9, 
   3.724442518695669*^9}, {3.7244426255599117`*^9, 3.724442639076613*^9}, {
   3.724443729204352*^9, 3.724443729749022*^9}, {3.724443881656342*^9, 
   3.7244438842850027`*^9}, 3.725261621115453*^9, 3.72526166634648*^9, {
   3.725271550289123*^9, 3.7252715504130163`*^9}, {3.725271609402791*^9, 
   3.7252716095188437`*^9}, {3.7252717762497*^9, 3.725271782362536*^9}, {
   3.725271824500347*^9, 3.725271826035269*^9}, {3.725271857701564*^9, 
   3.725271858192912*^9}, {3.725271928114049*^9, 3.7252719496618757`*^9}, {
   3.725271981807578*^9, 3.725271987122878*^9}, {3.725273718896678*^9, 
   3.72527377251343*^9}, {3.725273963159111*^9, 3.725273966198284*^9}, {
   3.725364382855975*^9, 3.725364384697238*^9}, {3.725364432753635*^9, 
   3.725364433681274*^9}, {3.725364595553596*^9, 3.725364595868292*^9}, {
   3.725364661141473*^9, 3.725364661301785*^9}, {3.725365068510941*^9, 
   3.7253650691073112`*^9}, {3.7256202924505177`*^9, 
   3.7256202938854313`*^9}, {3.7256265502253428`*^9, 3.725626559021003*^9}, {
   3.725798091627001*^9, 3.725798108963685*^9}, {3.725798150844287*^9, 
   3.725798156038417*^9}, {3.726312422974263*^9, 3.726312439922279*^9}, {
   3.726313778060986*^9, 3.726313794010726*^9}, {3.726313854887352*^9, 
   3.726313855417986*^9}, {3.726377533478507*^9, 3.726377535012369*^9}, {
   3.726379310729051*^9, 3.726379315935656*^9}, {3.726379351066524*^9, 
   3.7263793563685627`*^9}, 3.7263814533362722`*^9, {3.726468979312665*^9, 
   3.726469044993416*^9}, {3.726564279540083*^9, 3.726564288774165*^9}, {
   3.726564330005303*^9, 3.726564342424973*^9}, {3.7265645007454853`*^9, 
   3.7265645054085903`*^9}, 3.726565145221386*^9, {3.726836923420138*^9, 
   3.726836925204391*^9}, {3.7268417497448387`*^9, 3.726841749854889*^9}, {
   3.727357927216405*^9, 3.7273579306359463`*^9}, 3.72735811608375*^9, {
   3.7273582875862513`*^9, 3.727358296888235*^9}, {3.727520051444908*^9, 
   3.7275200665503483`*^9}, {3.727539483513708*^9, 3.72753949210455*^9}, {
   3.7275398377710333`*^9, 3.727539869000495*^9}, {3.7275879806550293`*^9, 
   3.727587984698921*^9}, {3.727606150288821*^9, 3.727606150994812*^9}, {
   3.728932814314426*^9, 3.728932860160056*^9}, 3.7289333254815903`*^9, 
   3.7299208725344887`*^9, {3.730007040539275*^9, 3.7300070509717903`*^9}, {
   3.730007357183831*^9, 3.7300073662633142`*^9}, {3.7331192829046183`*^9, 
   3.733119300197537*^9}, {3.733120717385792*^9, 3.733120717697629*^9}, {
   3.7331222711038847`*^9, 3.733122272703622*^9}, {3.733211538849382*^9, 
   3.7332115515038567`*^9}, {3.7332289443370447`*^9, 
   3.7332289447842827`*^9}, {3.742215948846467*^9, 3.742215959437643*^9}, {
   3.742216025305929*^9, 3.742216093257207*^9}, {3.7422172078868933`*^9, 
   3.7422172275906973`*^9}, 3.74221727383118*^9, {3.742217585069265*^9, 
   3.742217591716959*^9}, {3.7422176229823923`*^9, 3.742217653035615*^9}, {
   3.742269341112874*^9, 3.742269371527761*^9}, 3.742275694936644*^9, {
   3.742289467062118*^9, 3.742289486771803*^9}, {3.742289520463562*^9, 
   3.7422896027136*^9}, {3.7422896364561243`*^9, 3.74228964347093*^9}, {
   3.742289678232355*^9, 3.742289708137301*^9}, {3.7422897506101*^9, 
   3.7422897587096577`*^9}, {3.7422920316457787`*^9, 3.742292034487727*^9}, 
   3.742292186682322*^9, {3.742292303240778*^9, 3.742292303483521*^9}, {
   3.742292362481593*^9, 3.742292372544711*^9}, {3.742292408813004*^9, 
   3.742292447857381*^9}, {3.7422968206130743`*^9, 3.742296843480155*^9}, {
   3.7422970160890417`*^9, 3.742297024417719*^9}, {3.742297074890059*^9, 
   3.74229711910509*^9}, {3.7422973083294992`*^9, 3.742297309298213*^9}, {
   3.742297354168077*^9, 3.742297359897736*^9}, {3.742297415918168*^9, 
   3.7422974232482452`*^9}, {3.742297467739311*^9, 3.742297612963316*^9}, {
   3.7422977860232887`*^9, 3.7422977903561068`*^9}, {3.74229798181938*^9, 
   3.742298023677857*^9}, {3.7422980561712513`*^9, 3.74229805925661*^9}, 
   3.742298106308654*^9, {3.742300221204397*^9, 3.742300269720365*^9}, {
   3.742300416216001*^9, 3.742300416917211*^9}, {3.742300536315893*^9, 
   3.742300546756034*^9}, {3.742300626604027*^9, 3.742300638323701*^9}, {
   3.7423006769018583`*^9, 3.7423007163572683`*^9}, {3.7435037431402884`*^9, 
   3.743503799356997*^9}, {3.7435038425347443`*^9, 3.743503908279688*^9}, {
   3.7435046316079397`*^9, 3.743504651390107*^9}, {3.743506325612351*^9, 
   3.7435063377910748`*^9}, {3.74350638604452*^9, 3.743506401938177*^9}, {
   3.743506481181818*^9, 3.743506513038129*^9}, {3.745326264884691*^9, 
   3.745326273933687*^9}, 3.7477313911233587`*^9, {3.748193792574643*^9, 
   3.74819381883034*^9}, {3.748193864219204*^9, 3.748193864467815*^9}, {
   3.748193945586594*^9, 3.748193957914403*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"pwavebbuspectra", "[", 
    RowBox[{"n_", ",", "Tscan_"}], "]"}], ":=", 
   RowBox[{"Block", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{"T", "=", 
        RowBox[{"Tscan", "[", 
         RowBox[{"[", "n", "]"}], "]"}]}], ",", 
       RowBox[{"mD", "=", 
        RowBox[{"mDcal", "[", 
         RowBox[{
          RowBox[{"2", "\[Pi]"}], ",", 
          RowBox[{"Tscan", "[", 
           RowBox[{"[", "n", "]"}], "]"}], ",", 
          RowBox[{"kfinalu", "[", 
           RowBox[{"[", "1", "]"}], "]"}], ",", 
          RowBox[{"kfinalu", "[", 
           RowBox[{"[", "2", "]"}], "]"}]}], "]"}]}], ",", 
       RowBox[{"\[Sigma]", "=", 
        RowBox[{"\[Sigma]cont", "[", 
         RowBox[{"[", "1", "]"}], "]"}]}], ",", 
       RowBox[{"\[Alpha]", "=", 
        RowBox[{"\[Alpha]cont", "[", 
         RowBox[{"[", "1", "]"}], "]"}]}], ",", 
       RowBox[{"c", "=", 
        RowBox[{"ccont", "[", 
         RowBox[{"[", "1", "]"}], "]"}]}], ",", 
       RowBox[{"M", "=", "Mb"}], ",", 
       RowBox[{"l", "=", "1"}], ",", 
       RowBox[{"\[Omega]min", "=", 
        RowBox[{"-", "1"}]}], ",", 
       RowBox[{"\[Omega]max", "=", "3"}], ",", "ccsT", ",", "Tstring", ",", 
       "inf", ",", "\[Rho]table", ",", "\[Omega]", ",", "rhow", ",", "gr0", 
       ",", "s1", ",", "s01", ",", "rev", ",", "imvc", ",", "V", ",", 
       "bbsT"}], "}"}], ",", "\[IndentingNewLine]", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"rev", "=", 
       RowBox[{"Interpolation", "[", 
        RowBox[{"Join", "[", 
         RowBox[{
          RowBox[{"ParallelTable", "[", 
           RowBox[{
            RowBox[{"{", 
             RowBox[{"r", ",", 
              RowBox[{"ReVsb", "[", 
               RowBox[{
               "r", ",", "mD", ",", "\[Alpha]", ",", "\[Sigma]", ",", "c"}], 
               "]"}]}], "}"}], ",", 
            RowBox[{"{", 
             RowBox[{"r", ",", 
              RowBox[{"1", "/", "1000"}], ",", "10", ",", 
              RowBox[{"1", "/", "100"}]}], "}"}]}], "]"}], ",", 
          RowBox[{"ParallelTable", "[", 
           RowBox[{
            RowBox[{"{", 
             RowBox[{"r", ",", 
              RowBox[{"ReVsb", "[", 
               RowBox[{
               "r", ",", "mD", ",", "\[Alpha]", ",", "\[Sigma]", ",", "c"}], 
               "]"}]}], "}"}], ",", 
            RowBox[{"{", 
             RowBox[{"r", ",", 
              RowBox[{"101", "/", "10"}], ",", "25", ",", 
              RowBox[{"1", "/", "10"}]}], "}"}]}], "]"}], ",", 
          RowBox[{"ParallelTable", "[", 
           RowBox[{
            RowBox[{"{", 
             RowBox[{"r", ",", 
              RowBox[{"ReVsb", "[", 
               RowBox[{
               "r", ",", "mD", ",", "\[Alpha]", ",", "\[Sigma]", ",", "c"}], 
               "]"}]}], "}"}], ",", 
            RowBox[{"{", 
             RowBox[{"r", ",", "26", ",", "1500", ",", "1"}], "}"}]}], "]"}], 
          ",", 
          RowBox[{"ParallelTable", "[", 
           RowBox[{
            RowBox[{"{", 
             RowBox[{"r", ",", 
              RowBox[{"ReVsb", "[", 
               RowBox[{
               "r", ",", "mD", ",", "\[Alpha]", ",", "\[Sigma]", ",", "c"}], 
               "]"}]}], "}"}], ",", 
            RowBox[{"{", 
             RowBox[{"r", ",", "1510", ",", "20000", ",", "1000"}], "}"}]}], 
           "]"}]}], "]"}], "]"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"imvc", "=", 
       RowBox[{"Interpolation", "[", 
        RowBox[{"Join", "[", 
         RowBox[{
          RowBox[{"ParallelTable", "[", 
           RowBox[{
            RowBox[{"{", 
             RowBox[{"r", ",", 
              RowBox[{"ImVc", "[", 
               RowBox[{"r", ",", "mD", ",", "\[Alpha]", ",", "T"}], "]"}]}], 
             "}"}], ",", 
            RowBox[{"{", 
             RowBox[{"r", ",", 
              RowBox[{"1", "/", "1000"}], ",", "10", ",", 
              RowBox[{"1", "/", "100"}]}], "}"}]}], "]"}], ",", 
          RowBox[{"ParallelTable", "[", 
           RowBox[{
            RowBox[{"{", 
             RowBox[{"r", ",", 
              RowBox[{"ImVc", "[", 
               RowBox[{"r", ",", "mD", ",", "\[Alpha]", ",", "T"}], "]"}]}], 
             "}"}], ",", 
            RowBox[{"{", 
             RowBox[{"r", ",", 
              RowBox[{"101", "/", "10"}], ",", "25", ",", 
              RowBox[{"1", "/", "10"}]}], "}"}]}], "]"}], ",", 
          RowBox[{"ParallelTable", "[", 
           RowBox[{
            RowBox[{"{", 
             RowBox[{"r", ",", 
              RowBox[{"ImVc", "[", 
               RowBox[{"r", ",", "mD", ",", "\[Alpha]", ",", "T"}], "]"}]}], 
             "}"}], ",", 
            RowBox[{"{", 
             RowBox[{"r", ",", "26", ",", "1500", ",", "1"}], "}"}]}], "]"}], 
          ",", 
          RowBox[{"ParallelTable", "[", 
           RowBox[{
            RowBox[{"{", 
             RowBox[{"r", ",", 
              RowBox[{"ImVc", "[", 
               RowBox[{"r", ",", "mD", ",", "\[Alpha]", ",", "T"}], "]"}]}], 
             "}"}], ",", 
            RowBox[{"{", 
             RowBox[{"r", ",", "1510", ",", "20000", ",", "1000"}], "}"}]}], 
           "]"}]}], "]"}], "]"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"V", "[", "x_", "]"}], ":=", 
       RowBox[{
        RowBox[{"rev", "[", "x", "]"}], "+", 
        RowBox[{"\[ImaginaryI]", " ", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{"imvc", "[", "x", "]"}], "+", 
           RowBox[{
            RowBox[{"ImVsreguInter", "[", "n", "]"}], "[", "x", "]"}]}], 
          ")"}]}]}]}], ";", "\[IndentingNewLine]", "\[IndentingNewLine]", 
      RowBox[{"\[Rho]table", "=", 
       RowBox[{
        RowBox[{
         RowBox[{
          RowBox[{"ParallelDo", "[", 
           RowBox[{
            RowBox[{
             RowBox[{"\[Omega]", "=", 
              RowBox[{"\[Omega]min", "+", 
               RowBox[{
                RowBox[{"(", 
                 RowBox[{"it", "-", "1"}], ")"}], " ", "d\[Omega]", " ", 
                "M"}]}]}], ";", 
             RowBox[{"inf", "=", 
              RowBox[{"40", "+", 
               RowBox[{"500", "*", "it", "*", "d\[Omega]"}]}]}], ";", 
             "\[IndentingNewLine]", 
             RowBox[{"s0", "=", 
              RowBox[{"NDSolve", "[", 
               RowBox[{
                RowBox[{"{", 
                 RowBox[{
                  RowBox[{
                   RowBox[{
                    RowBox[{
                    RowBox[{"(", 
                    RowBox[{"\[Omega]", "-", 
                    FractionBox[
                    RowBox[{"l", 
                    RowBox[{"(", 
                    RowBox[{"l", "+", "1"}], ")"}]}], 
                    RowBox[{"M", " ", 
                    SuperscriptBox["r", "2"]}]], "-", 
                    RowBox[{"Re", "[", 
                    RowBox[{"V", "[", "r", "]"}], "]"}], "+", 
                    RowBox[{"\[ImaginaryI]", " ", 
                    RowBox[{"Abs", "[", 
                    RowBox[{"Im", "[", 
                    RowBox[{"V", "[", "r", "]"}], "]"}], "]"}]}]}], ")"}], 
                    RowBox[{"gr", "[", "r", "]"}]}], "+", 
                    RowBox[{
                    FractionBox["1", "M"], 
                    RowBox[{
                    RowBox[{"gr", "''"}], "[", "r", "]"}]}]}], "\[Equal]", 
                   "0"}], ",", " ", "\[IndentingNewLine]", 
                  RowBox[{
                   RowBox[{
                    RowBox[{"gr", "'"}], "[", "\[Delta]", "]"}], "\[Equal]", 
                   RowBox[{
                    RowBox[{"2", " ", "\[Delta]", 
                    SuperscriptBox[
                    RowBox[{"(", 
                    RowBox[{"\[Alpha]", " ", "M"}], ")"}], "2"]}], "-", 
                    RowBox[{
                    FractionBox["3", "4"], 
                    SuperscriptBox["\[Delta]", "2"], 
                    SuperscriptBox[
                    RowBox[{"(", 
                    RowBox[{"M", " ", "\[Alpha]"}], ")"}], "3"]}]}]}], ",", 
                  "\[IndentingNewLine]", " ", 
                  RowBox[{
                   RowBox[{"gr", "[", "\[Delta]", "]"}], "==", " ", 
                   RowBox[{
                    RowBox[{
                    SuperscriptBox["\[Delta]", "2"], 
                    SuperscriptBox[
                    RowBox[{"(", 
                    RowBox[{"\[Alpha]", " ", "M"}], ")"}], "2"]}], "-", 
                    RowBox[{
                    FractionBox["1", "4"], 
                    SuperscriptBox["\[Delta]", "3"], 
                    SuperscriptBox[
                    RowBox[{"(", 
                    RowBox[{"M", " ", "\[Alpha]"}], ")"}], "3"]}]}]}]}], 
                 "}"}], ",", "gr", ",", 
                RowBox[{"{", 
                 RowBox[{"r", ",", "\[Delta]", ",", "inf"}], "}"}], ",", 
                RowBox[{"PrecisionGoal", "\[Rule]", "10"}], ",", 
                RowBox[{"MaxSteps", "\[Rule]", "1000000"}]}], "]"}]}], ";", 
             "\[IndentingNewLine]", 
             RowBox[{
              RowBox[{"gr1", "[", "r_", "]"}], "=", 
              SubscriptBox[
               RowBox[{"(", 
                RowBox[{
                 RowBox[{"gr", "[", "r", "]"}], "/.", "s0"}], ")"}], 
               RowBox[{
               "\[LeftDoubleBracket]", "1", "\[RightDoubleBracket]"}]]}], ";",
              "\[IndentingNewLine]", 
             RowBox[{"s01", "=", 
              RowBox[{"NDSolve", "[", 
               RowBox[{
                RowBox[{"{", 
                 RowBox[{
                  RowBox[{
                   RowBox[{
                    RowBox[{
                    RowBox[{"(", 
                    RowBox[{"\[Omega]", "-", 
                    FractionBox[
                    RowBox[{"l", 
                    RowBox[{"(", 
                    RowBox[{"l", "+", "1"}], ")"}]}], 
                    RowBox[{"M", " ", 
                    SuperscriptBox["r", "2"]}]], "-", 
                    RowBox[{"Re", "[", 
                    RowBox[{"V", "[", "r", "]"}], "]"}], "+", 
                    RowBox[{"\[ImaginaryI]", " ", 
                    RowBox[{"Abs", "[", 
                    RowBox[{"Im", "[", 
                    RowBox[{"V", "[", "r", "]"}], "]"}], "]"}]}]}], ")"}], 
                    RowBox[{"gr", "[", "r", "]"}]}], "+", 
                    RowBox[{
                    FractionBox["1", "M"], 
                    RowBox[{
                    RowBox[{"gr", "''"}], "[", "r", "]"}]}]}], "\[Equal]", 
                   "0"}], ",", " ", "\[IndentingNewLine]", 
                  RowBox[{
                   RowBox[{
                    RowBox[{"gr", "'"}], "[", "\[Delta]", "]"}], "\[Equal]", 
                   RowBox[{
                    RowBox[{"(", 
                    RowBox[{"\[Alpha]", " ", "M"}], ")"}], "-", 
                    RowBox[{"\[Delta]", 
                    SuperscriptBox[
                    RowBox[{"(", 
                    RowBox[{"M", " ", "\[Alpha]"}], ")"}], "2"]}]}]}], ",", 
                  "\[IndentingNewLine]", " ", 
                  RowBox[{
                   RowBox[{"gr", "[", "\[Delta]", "]"}], "\[Equal]", 
                   RowBox[{
                    RowBox[{"\[Delta]", 
                    RowBox[{"(", 
                    RowBox[{"\[Alpha]", " ", "M"}], ")"}]}], "-", " ", 
                    RowBox[{
                    FractionBox["1", "2"], 
                    SuperscriptBox["\[Delta]", "2"], 
                    SuperscriptBox[
                    RowBox[{"(", 
                    RowBox[{"\[Alpha]", " ", "M"}], ")"}], "2"]}]}]}]}], 
                 "}"}], ",", "gr", ",", 
                RowBox[{"{", 
                 RowBox[{"r", ",", "\[Delta]", ",", "inf"}], "}"}]}], "]"}]}],
              ";", "\[IndentingNewLine]", 
             RowBox[{
              RowBox[{"gr0", "[", "r_", "]"}], "=", 
              SubscriptBox[
               RowBox[{"(", 
                RowBox[{
                 RowBox[{"gr", "[", "r", "]"}], "/.", "s01"}], ")"}], 
               RowBox[{
               "\[LeftDoubleBracket]", "1", "\[RightDoubleBracket]"}]]}], ";",
              "\[IndentingNewLine]", 
             RowBox[{"s1", "=", 
              RowBox[{"NDSolve", "[", 
               RowBox[{
                RowBox[{"{", 
                 RowBox[{
                  RowBox[{
                   RowBox[{
                    RowBox[{"rho", "'"}], "[", "x", "]"}], "\[Equal]", 
                   RowBox[{
                    FractionBox[
                    RowBox[{"  ", 
                    RowBox[{"Nc", " ", 
                    SuperscriptBox["M", "2"], " ", 
                    SuperscriptBox["\[Alpha]", "3"]}]}], 
                    RowBox[{"8", "\[Pi]"}]], 
                    RowBox[{"Im", "[", 
                    RowBox[{
                    FractionBox["1", 
                    SuperscriptBox[
                    RowBox[{"(", 
                    RowBox[{"gr0", "[", "x", "]"}], ")"}], "2"]], "+", 
                    FractionBox["36", 
                    SuperscriptBox[
                    RowBox[{"(", 
                    RowBox[{"gr1", "[", "x", "]"}], ")"}], "2"]]}], "]"}]}]}],
                   ",", 
                  RowBox[{
                   RowBox[{"rho", "[", "\[Delta]", "]"}], "\[Equal]", "0"}]}],
                  "}"}], ",", "rho", ",", 
                RowBox[{"{", 
                 RowBox[{"x", ",", "\[Delta]", ",", "inf"}], "}"}]}], "]"}]}],
              ";", "\[IndentingNewLine]", 
             RowBox[{
              RowBox[{"rhow", "[", "r_", "]"}], "=", 
              SubscriptBox[
               RowBox[{"(", 
                RowBox[{
                 RowBox[{"rho", "[", "r", "]"}], "/.", "s1"}], ")"}], 
               RowBox[{
               "\[LeftDoubleBracket]", "1", "\[RightDoubleBracket]"}]]}], ";",
              "\[IndentingNewLine]", 
             RowBox[{"ParallelSow", "[", 
              RowBox[{"{", 
               RowBox[{
                RowBox[{"\[Omega]", "+", 
                 RowBox[{"2", "M"}]}], ",", 
                RowBox[{"rhow", "[", "inf", "]"}]}], "}"}], "]"}]}], ",", 
            RowBox[{"{", 
             RowBox[{"it", ",", "1", ",", 
              FractionBox[
               RowBox[{"\[Omega]max", "-", "\[Omega]min"}], 
               RowBox[{"d\[Omega]", " ", "M"}]]}], "}"}]}], "]"}], "//", 
          "Reap"}], "//", "Last"}], "//", "First"}]}], ";", 
      "\[IndentingNewLine]", "\[IndentingNewLine]", 
      RowBox[{"bbsT", "=", 
       RowBox[{"ParallelTable", "[", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{
           RowBox[{"\[Rho]table", "[", 
            RowBox[{"[", 
             RowBox[{"i", ",", "1"}], "]"}], "]"}], ",", 
           FractionBox[
            RowBox[{"\[Rho]table", "[", 
             RowBox[{"[", 
              RowBox[{"i", ",", "2"}], "]"}], "]"}], 
            SuperscriptBox[
             RowBox[{"\[Rho]table", "[", 
              RowBox[{"[", 
               RowBox[{"i", ",", "1"}], "]"}], "]"}], "2"]]}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"i", ",", "1", ",", 
           RowBox[{"Length", "[", "\[Rho]table", "]"}]}], "}"}]}], "]"}]}], 
      ";", "\[IndentingNewLine]", 
      RowBox[{"Tstring", "=", 
       RowBox[{"Round", "[", 
        RowBox[{"T", "*", "1000"}], "]"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"Export", "[", 
       RowBox[{
        RowBox[{"\"\<bb/pwbbT\>\"", "<>", 
         RowBox[{"ToString", "[", "Tstring", "]"}], "<>", 
         "\"\<uspectra.dat\>\""}], ",", 
        RowBox[{"Sort", "[", "bbsT", "]"}]}], "]"}], ";"}]}], 
    "\[IndentingNewLine]", "]"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.724397604460712*^9, 3.724397621092863*^9}, {
   3.724398705481254*^9, 3.724398705798315*^9}, {3.72440624506767*^9, 
   3.7244062457361317`*^9}, {3.7244423136168756`*^9, 3.724442340980721*^9}, {
   3.7244423712224417`*^9, 3.724442377050403*^9}, {3.724442465925974*^9, 
   3.724442518695669*^9}, {3.7244426255599117`*^9, 3.724442639076613*^9}, {
   3.724443729204352*^9, 3.724443729749022*^9}, {3.724443881656342*^9, 
   3.7244438842850027`*^9}, 3.725261621115453*^9, 3.72526166634648*^9, {
   3.725271550289123*^9, 3.7252715504130163`*^9}, {3.725271609402791*^9, 
   3.7252716095188437`*^9}, {3.7252717762497*^9, 3.725271782362536*^9}, {
   3.725271824500347*^9, 3.725271826035269*^9}, {3.725271857701564*^9, 
   3.725271858192912*^9}, {3.725271928114049*^9, 3.7252719496618757`*^9}, {
   3.725271981807578*^9, 3.725271987122878*^9}, {3.725273718896678*^9, 
   3.72527377251343*^9}, {3.725273963159111*^9, 3.725273966198284*^9}, {
   3.725364382855975*^9, 3.725364384697238*^9}, {3.725364432753635*^9, 
   3.725364433681274*^9}, {3.725364595553596*^9, 3.725364595868292*^9}, {
   3.725364661141473*^9, 3.725364661301785*^9}, {3.725365068510941*^9, 
   3.7253650691073112`*^9}, {3.7256202924505177`*^9, 
   3.7256202938854313`*^9}, {3.7256265502253428`*^9, 3.725626559021003*^9}, {
   3.725798091627001*^9, 3.725798108963685*^9}, {3.725798150844287*^9, 
   3.725798156038417*^9}, {3.726312422974263*^9, 3.726312439922279*^9}, {
   3.726313778060986*^9, 3.726313794010726*^9}, {3.726313854887352*^9, 
   3.726313855417986*^9}, {3.726377533478507*^9, 3.726377535012369*^9}, {
   3.726379310729051*^9, 3.726379315935656*^9}, {3.726379351066524*^9, 
   3.7263793563685627`*^9}, 3.7263814533362722`*^9, {3.726468979312665*^9, 
   3.726469044993416*^9}, {3.726564279540083*^9, 3.726564288774165*^9}, {
   3.726564330005303*^9, 3.726564342424973*^9}, {3.7265645007454853`*^9, 
   3.7265645054085903`*^9}, 3.726565145221386*^9, {3.726836923420138*^9, 
   3.726836925204391*^9}, {3.7268417497448387`*^9, 3.726841749854889*^9}, {
   3.727357927216405*^9, 3.7273579306359463`*^9}, 3.72735811608375*^9, {
   3.7273582875862513`*^9, 3.727358296888235*^9}, {3.727520051444908*^9, 
   3.7275200665503483`*^9}, {3.727539483513708*^9, 3.72753949210455*^9}, {
   3.7275398377710333`*^9, 3.727539869000495*^9}, {3.7275879806550293`*^9, 
   3.727587984698921*^9}, {3.727606150288821*^9, 3.727606150994812*^9}, {
   3.728932814314426*^9, 3.728932860160056*^9}, 3.7289333254815903`*^9, 
   3.7299208725344887`*^9, {3.730007040539275*^9, 3.7300070509717903`*^9}, {
   3.730007357183831*^9, 3.7300073662633142`*^9}, {3.7331192829046183`*^9, 
   3.733119300197537*^9}, {3.733120717385792*^9, 3.733120717697629*^9}, {
   3.7331222711038847`*^9, 3.733122272703622*^9}, {3.733211538849382*^9, 
   3.7332115515038567`*^9}, {3.7332289443370447`*^9, 
   3.7332289447842827`*^9}, {3.742215948846467*^9, 3.742215959437643*^9}, {
   3.742216025305929*^9, 3.742216093257207*^9}, {3.7422172078868933`*^9, 
   3.7422172275906973`*^9}, 3.74221727383118*^9, {3.742217585069265*^9, 
   3.742217591716959*^9}, {3.7422176229823923`*^9, 3.742217653035615*^9}, {
   3.742269341112874*^9, 3.742269371527761*^9}, 3.742275694936644*^9, {
   3.742289467062118*^9, 3.742289486771803*^9}, {3.742289520463562*^9, 
   3.7422896027136*^9}, {3.7422896364561243`*^9, 3.74228964347093*^9}, {
   3.742289678232355*^9, 3.742289708137301*^9}, {3.7422897506101*^9, 
   3.7422897587096577`*^9}, {3.7422920316457787`*^9, 3.742292034487727*^9}, 
   3.742292186682322*^9, {3.742292303240778*^9, 3.742292303483521*^9}, {
   3.742292362481593*^9, 3.742292372544711*^9}, {3.742292408813004*^9, 
   3.742292447857381*^9}, {3.7422968206130743`*^9, 3.742296843480155*^9}, {
   3.7422970160890417`*^9, 3.742297024417719*^9}, {3.742297074890059*^9, 
   3.74229711910509*^9}, {3.7422973083294992`*^9, 3.742297309298213*^9}, {
   3.742297354168077*^9, 3.742297359897736*^9}, {3.742297415918168*^9, 
   3.7422974232482452`*^9}, {3.742297467739311*^9, 3.742297612963316*^9}, {
   3.7422977860232887`*^9, 3.7422977903561068`*^9}, {3.74229798181938*^9, 
   3.742298023677857*^9}, {3.7422980561712513`*^9, 3.74229805925661*^9}, 
   3.742298106308654*^9, {3.742300221204397*^9, 3.742300269720365*^9}, {
   3.742300416216001*^9, 3.742300416917211*^9}, {3.742300536315893*^9, 
   3.742300546756034*^9}, {3.742300626604027*^9, 3.742300638323701*^9}, {
   3.7423006769018583`*^9, 3.7423007163572683`*^9}, {3.7435037431402884`*^9, 
   3.743503799356997*^9}, {3.7435038425347443`*^9, 3.743503908279688*^9}, {
   3.7435046316079397`*^9, 3.743504651390107*^9}, {3.743506325612351*^9, 
   3.7435063377910748`*^9}, {3.74350638604452*^9, 3.743506401938177*^9}, {
   3.743506481181818*^9, 3.743506513038129*^9}, {3.745326264884691*^9, 
   3.745326273933687*^9}, 3.7477313911233587`*^9, {3.748193792574643*^9, 
   3.74819381883034*^9}, {3.748193864219204*^9, 3.748193864467815*^9}, {
   3.748193972198514*^9, 3.748193988573783*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell["Run modules", "Subsubsection",
 CellChangeTimes->{{3.747731367832035*^9, 3.747731374132444*^9}}],

Cell[BoxData[
 RowBox[{"Off", "[", 
  RowBox[{"NIntegrate", "::", "inumr"}], "]"}]], "Input",
 CellChangeTimes->{{3.725619483363937*^9, 3.725619483377707*^9}, {
  3.727606183390926*^9, 3.727606185317863*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"Do", "[", 
   RowBox[{
    RowBox[{"swaveccspectra", "[", 
     RowBox[{"i", ",", "Tscancorig"}], "]"}], ",", 
    RowBox[{"{", 
     RowBox[{"i", ",", 
      RowBox[{"Length", "[", "Tscancorig", "]"}]}], "}"}]}], "]"}], "//", 
  "AbsoluteTiming"}]], "Input",
 CellChangeTimes->{{3.74773187535981*^9, 3.747731877495801*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"Do", "[", 
   RowBox[{
    RowBox[{"swavecclspectra", "[", 
     RowBox[{"i", ",", "Tscancorig"}], "]"}], ",", 
    RowBox[{"{", 
     RowBox[{"i", ",", 
      RowBox[{"Length", "[", "Tscancorig", "]"}]}], "}"}]}], "]"}], "//", 
  "AbsoluteTiming"}]], "Input",
 CellChangeTimes->{3.7477318830957603`*^9}],

Cell[BoxData[
 RowBox[{
  RowBox[{"Do", "[", 
   RowBox[{
    RowBox[{"swaveccuspectra", "[", 
     RowBox[{"i", ",", "Tscancorig"}], "]"}], ",", 
    RowBox[{"{", 
     RowBox[{"i", ",", 
      RowBox[{"Length", "[", "Tscancorig", "]"}]}], "}"}]}], "]"}], "//", 
  "AbsoluteTiming"}]], "Input",
 CellChangeTimes->{3.7477318845519953`*^9}],

Cell[BoxData[
 RowBox[{
  RowBox[{"Do", "[", 
   RowBox[{
    RowBox[{"pwaveccspectra", "[", 
     RowBox[{"i", ",", "Tscancorig"}], "]"}], ",", 
    RowBox[{"{", 
     RowBox[{"i", ",", 
      RowBox[{"Length", "[", "Tscancorig", "]"}]}], "}"}]}], "]"}], "//", 
  "AbsoluteTiming"}]], "Input",
 CellChangeTimes->{{3.747731864287805*^9, 3.74773186767927*^9}, 
   3.747936044160692*^9}],

Cell[BoxData[
 RowBox[{
  RowBox[{"Do", "[", 
   RowBox[{
    RowBox[{"pwaveccuspectra", "[", 
     RowBox[{"i", ",", "Tscancorig"}], "]"}], ",", 
    RowBox[{"{", 
     RowBox[{"i", ",", 
      RowBox[{"Length", "[", "Tscancorig", "]"}]}], "}"}]}], "]"}], "//", 
  "AbsoluteTiming"}]], "Input",
 CellChangeTimes->{3.74793605962503*^9}],

Cell[BoxData[
 RowBox[{
  RowBox[{"Do", "[", 
   RowBox[{
    RowBox[{"pwavecclspectra", "[", 
     RowBox[{"i", ",", "Tscancorig"}], "]"}], ",", 
    RowBox[{"{", 
     RowBox[{"i", ",", 
      RowBox[{"Length", "[", "Tscancorig", "]"}]}], "}"}]}], "]"}], "//", 
  "AbsoluteTiming"}]], "Input",
 CellChangeTimes->{3.7479360617610493`*^9}],

Cell[BoxData[
 RowBox[{
  RowBox[{"Do", "[", 
   RowBox[{
    RowBox[{"swavebbspectra", "[", 
     RowBox[{"i", ",", "Tscanborig"}], "]"}], ",", 
    RowBox[{"{", 
     RowBox[{"i", ",", 
      RowBox[{"Length", "[", "Tscanborig", "]"}]}], "}"}]}], "]"}], "//", 
  "AbsoluteTiming"}]], "Input",
 CellChangeTimes->{{3.725274688827108*^9, 3.7252746921689157`*^9}, {
   3.726314352501986*^9, 3.726314352595883*^9}, {3.7264025876977463`*^9, 
   3.7264025901211853`*^9}, {3.726564747997864*^9, 3.72656475634035*^9}, {
   3.72657522016017*^9, 3.72657522520866*^9}, {3.726837005709298*^9, 
   3.7268370281174517`*^9}, {3.727439373867774*^9, 3.727439374658628*^9}, 
   3.727606951248332*^9, {3.7435065808390827`*^9, 3.7435065812868633`*^9}, 
   3.7477318703172493`*^9}],

Cell[BoxData[
 RowBox[{
  RowBox[{"Do", "[", 
   RowBox[{
    RowBox[{"swavebbuspectra", "[", 
     RowBox[{"i", ",", "Tscanborig"}], "]"}], ",", 
    RowBox[{"{", 
     RowBox[{"i", ",", 
      RowBox[{"Length", "[", "Tscanborig", "]"}]}], "}"}]}], "]"}], "//", 
  "AbsoluteTiming"}]], "Input",
 CellChangeTimes->{
  3.728469127565364*^9, {3.7435065857274847`*^9, 3.7435065860385017`*^9}, 
   3.7477318714256983`*^9, {3.747980883419937*^9, 3.747980886043293*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"Do", "[", 
   RowBox[{
    RowBox[{"swavebblspectra", "[", 
     RowBox[{"i", ",", "Tscanborig"}], "]"}], ",", 
    RowBox[{"{", 
     RowBox[{"i", ",", 
      RowBox[{"Length", "[", "Tscanborig", "]"}]}], "}"}]}], "]"}], "//", 
  "AbsoluteTiming"}]], "Input",
 CellChangeTimes->{
  3.72846912896104*^9, {3.743506588862314*^9, 3.743506589255273*^9}, 
   3.7477318721410913`*^9, {3.747980887987996*^9, 3.747980890395713*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"Do", "[", 
   RowBox[{
    RowBox[{"pwavebbspectra", "[", 
     RowBox[{"i", ",", "Tscancorig"}], "]"}], ",", 
    RowBox[{"{", 
     RowBox[{"i", ",", 
      RowBox[{"Length", "[", "Tscancorig", "]"}]}], "}"}]}], "]"}], "//", 
  "AbsoluteTiming"}]], "Input",
 CellChangeTimes->{{3.748193928367509*^9, 3.748193929367444*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"13393.242083`", ",", "Null"}], "}"}]], "Output",
 CellChangeTimes->{3.7482073254118013`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"Do", "[", 
   RowBox[{
    RowBox[{"pwavebbuspectra", "[", 
     RowBox[{"i", ",", "Tscancorig"}], "]"}], ",", 
    RowBox[{"{", 
     RowBox[{"i", ",", 
      RowBox[{"Length", "[", "Tscancorig", "]"}]}], "}"}]}], "]"}], "//", 
  "AbsoluteTiming"}]], "Input",
 CellChangeTimes->{3.7481939995256653`*^9}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"14751.419075`", ",", "Null"}], "}"}]], "Output",
 CellChangeTimes->{3.748222077481357*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"Do", "[", 
   RowBox[{
    RowBox[{"pwavebblspectra", "[", 
     RowBox[{"i", ",", "Tscancorig"}], "]"}], ",", 
    RowBox[{"{", 
     RowBox[{"i", ",", 
      RowBox[{"Length", "[", "Tscancorig", "]"}]}], "}"}]}], "]"}], "//", 
  "AbsoluteTiming"}]], "Input",
 CellChangeTimes->{3.74819400564399*^9}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"17309.58546`", ",", "Null"}], "}"}]], "Output",
 CellChangeTimes->{3.748239387250342*^9}]
}, Open  ]]
}, Open  ]]
}, Closed]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Continuum Energies", "Section",
 CellChangeTimes->{{3.727415296394449*^9, 3.727415310980733*^9}, {
  3.727438974368733*^9, 3.7274389775611553`*^9}, {3.7274415699177094`*^9, 
  3.727441571125741*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"2", "Mc"}], "+", 
  RowBox[{"Table", "[", 
   RowBox[{
    RowBox[{"ReVsb", "[", 
     RowBox[{"100000", ",", 
      RowBox[{"mDcal", "[", 
       RowBox[{
        RowBox[{"2", "\[Pi]"}], ",", 
        RowBox[{"Tscancorig", "[", 
         RowBox[{"[", "i", "]"}], "]"}], ",", 
        RowBox[{"kfinal", "[", 
         RowBox[{"[", "1", "]"}], "]"}], ",", 
        RowBox[{"kfinal", "[", 
         RowBox[{"[", "2", "]"}], "]"}]}], "]"}], ",", 
      RowBox[{"\[Alpha]cont", "[", 
       RowBox[{"[", "1", "]"}], "]"}], ",", 
      RowBox[{"\[Sigma]cont", "[", 
       RowBox[{"[", "1", "]"}], "]"}], ",", 
      RowBox[{"ccont", "[", 
       RowBox[{"[", "1", "]"}], "]"}]}], "]"}], ",", 
    RowBox[{"{", 
     RowBox[{"i", ",", "1", ",", 
      RowBox[{"Length", "[", "Tscancorig", "]"}]}], "}"}]}], "]"}]}]], "Input",\

 CellChangeTimes->{{3.727415329654827*^9, 3.727415395125635*^9}, {
   3.727419032739399*^9, 3.72741906893994*^9}, {3.727421895354998*^9, 
   3.727421965803722*^9}, {3.7274307503359957`*^9, 3.727430756438754*^9}, 
   3.727430792744117*^9, {3.727430844015986*^9, 3.72743086825692*^9}, {
   3.727435921951792*^9, 3.727435928127816*^9}, {3.727435989113798*^9, 
   3.727435990152746*^9}, {3.727440645712977*^9, 3.72744064973628*^9}, 
   3.727440900797185*^9, {3.727441441830037*^9, 3.727441489781925*^9}, {
   3.727441549095484*^9, 3.7274415558390417`*^9}, {3.74350605299688*^9, 
   3.743506054597587*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
  "3.738379532206608`", ",", "3.738379532206608`", ",", "3.738379532206608`", 
   ",", "3.738379532206608`", ",", "3.738379532206608`", ",", 
   "3.738379532206608`", ",", "3.738379532206608`", ",", "3.738379532206608`",
    ",", "3.738379532206608`", ",", "3.738379532206608`", ",", 
   "3.738379532206608`", ",", "3.738379532206608`", ",", "3.738379532206608`",
    ",", "3.738379532206608`", ",", "3.738379532206608`", ",", 
   "3.738379532206608`", ",", "3.738379532206608`", ",", "3.701758044310261`",
    ",", "3.6590362963255973`", ",", "3.6196160448966084`", ",", 
   "3.583057941960285`", ",", "3.5489997471215924`", ",", 
   "3.5171399359991113`", ",", "3.487225338168033`", ",", 
   "3.459041692083118`", ",", "3.4328448348117915`", ",", 
   "3.408694821503098`", ",", "3.385636846417404`", ",", "3.363578194413033`",
    ",", "3.3424368294912283`", ",", "3.322139869274786`", ",", 
   "3.3026223176638405`", ",", "3.2838260033911766`", ",", 
   "3.265698687292371`", ",", "3.2481933077078327`", ",", 
   "3.2312673392854956`", ",", "3.2148822483499933`", ",", 
   "3.199003023017992`", ",", "3.1835977647233804`", ",", 
   "3.168637350127192`", ",", "3.154095119965759`", ",", 
   "3.1399466184296942`", ",", "3.126169368591706`", ",", 
   "3.1127426625685906`", ",", "3.099647393664894`", ",", 
   "3.086865895186048`", ",", "3.074381804177843`", ",", 
   "3.0621799425923117`", ",", "3.0502462033554294`", ",", 
   "3.038567461196708`", ",", "3.0271314796043938`", ",", 
   "3.0159268400355783`", ",", "3.0049428683692474`", ",", 
   "2.994169575937752`", ",", "2.9835976023107524`", ",", 
   "2.9732181665429342`", ",", "2.9630230178724632`", ",", 
   "2.9530044013768`"}], "}"}]], "Output",
 CellChangeTimes->{
  3.727430794938345*^9, {3.727430847248849*^9, 3.727430884327338*^9}, 
   3.72743592889662*^9, 3.7274359905230417`*^9, 3.7274406531364183`*^9, 
   3.7274409014406137`*^9, {3.727441454899707*^9, 3.727441490492607*^9}, 
   3.727441556474641*^9, 3.7276062557522497`*^9, 3.7276081615624523`*^9, 
   3.727608365761633*^9, 3.727701017406023*^9, 3.7333934903492393`*^9, 
   3.743742133361291*^9, 3.743744632817905*^9, 3.7453261678866367`*^9, 
   3.7472847707967453`*^9, 3.74788838779362*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"2", "Mc"}], "+", 
  RowBox[{"Table", "[", 
   RowBox[{
    RowBox[{"ReVsb", "[", 
     RowBox[{"100000", ",", 
      RowBox[{"mDcal", "[", 
       RowBox[{
        RowBox[{"2", "\[Pi]"}], ",", 
        RowBox[{"Tscancorig", "[", 
         RowBox[{"[", "i", "]"}], "]"}], ",", 
        RowBox[{"kfinall", "[", 
         RowBox[{"[", "1", "]"}], "]"}], ",", 
        RowBox[{"kfinall", "[", 
         RowBox[{"[", "2", "]"}], "]"}]}], "]"}], ",", 
      RowBox[{"\[Alpha]cont", "[", 
       RowBox[{"[", "1", "]"}], "]"}], ",", 
      RowBox[{"\[Sigma]cont", "[", 
       RowBox[{"[", "1", "]"}], "]"}], ",", 
      RowBox[{"ccont", "[", 
       RowBox[{"[", "1", "]"}], "]"}]}], "]"}], ",", 
    RowBox[{"{", 
     RowBox[{"i", ",", "1", ",", 
      RowBox[{"Length", "[", "Tscancorig", "]"}]}], "}"}]}], "]"}]}]], "Input",\

 CellChangeTimes->{{3.727415329654827*^9, 3.727415395125635*^9}, {
   3.727419032739399*^9, 3.72741906893994*^9}, {3.727421895354998*^9, 
   3.727421965803722*^9}, {3.7274307503359957`*^9, 3.727430756438754*^9}, 
   3.727430792744117*^9, {3.727430844015986*^9, 3.72743086825692*^9}, {
   3.727435921951792*^9, 3.727435928127816*^9}, {3.727435989113798*^9, 
   3.727435990152746*^9}, {3.727440645712977*^9, 3.72744064973628*^9}, 
   3.727440900797185*^9, {3.727441441830037*^9, 3.727441489781925*^9}, {
   3.727441549095484*^9, 3.7274415558390417`*^9}, {3.727701046035239*^9, 
   3.727701049032592*^9}, {3.743506060571969*^9, 3.743506060883605*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
  "3.738379532206608`", ",", "3.738379532206608`", ",", "3.738379532206608`", 
   ",", "3.738379532206608`", ",", "3.738379532206608`", ",", 
   "3.738379532206608`", ",", "3.738379532206608`", ",", "3.738379532206608`",
    ",", "3.738379532206608`", ",", "3.738379532206608`", ",", 
   "3.738379532206608`", ",", "3.738379532206608`", ",", "3.738379532206608`",
    ",", "3.738379532206608`", ",", "3.738379532206608`", ",", 
   "3.738379532206608`", ",", "3.738379532206608`", ",", "3.738379532206608`",
    ",", "3.738379532206608`", ",", "3.738379532206608`", ",", 
   "3.738379532206608`", ",", "3.738379532206608`", ",", "3.738379532206608`",
    ",", "3.738379532206608`", ",", "3.738379532206608`", ",", 
   "3.738379532206608`", ",", "3.738379532206608`", ",", 
   "3.7307816791879813`", ",", "3.698739708227799`", ",", 
   "3.6683688005341324`", ",", "3.639517533974076`", ",", 
   "3.612052845800916`", ",", "3.585857293752711`", ",", "3.560826796256764`",
    ",", "3.536868756562935`", ",", "3.5139004960437386`", ",", 
   "3.491847943523757`", ",", "3.470644523536246`", ",", 
   "3.4502302060802545`", ",", "3.4305507241781674`", ",", 
   "3.4115568716559106`", ",", "3.3932039183081444`", ",", 
   "3.375451110944204`", ",", "3.358261217583014`", ",", "3.341600161442533`",
    ",", "3.3254366778242237`", ",", "3.309742025225839`", ",", 
   "3.2944897354070544`", ",", "3.2796553782840547`", ",", 
   "3.265216376830746`", ",", "3.2511518188927626`", ",", 
   "3.2374423129173984`", ",", "3.224069841349274`", ",", 
   "3.211017642916522`", ",", "3.1982700999651126`", ",", 
   "3.185812642831631`", ",", "3.1736316544043746`", ",", 
   "3.1617144032873044`"}], "}"}]], "Output",
 CellChangeTimes->{3.7277010503471737`*^9, 3.733393492727314*^9, 
  3.743742135125255*^9, 3.743744635617934*^9, 3.7453261710920258`*^9, 
  3.7472847737835493`*^9, 3.747888391865521*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"2", "Mc"}], "+", 
  RowBox[{"Table", "[", 
   RowBox[{
    RowBox[{"ReVsb", "[", 
     RowBox[{"100000", ",", 
      RowBox[{"mDcal", "[", 
       RowBox[{
        RowBox[{"2", "\[Pi]"}], ",", 
        RowBox[{"Tscancorig", "[", 
         RowBox[{"[", "i", "]"}], "]"}], ",", 
        RowBox[{"kfinalu", "[", 
         RowBox[{"[", "1", "]"}], "]"}], ",", 
        RowBox[{"kfinalu", "[", 
         RowBox[{"[", "2", "]"}], "]"}]}], "]"}], ",", 
      RowBox[{"\[Alpha]cont", "[", 
       RowBox[{"[", "1", "]"}], "]"}], ",", 
      RowBox[{"\[Sigma]cont", "[", 
       RowBox[{"[", "1", "]"}], "]"}], ",", 
      RowBox[{"ccont", "[", 
       RowBox[{"[", "1", "]"}], "]"}]}], "]"}], ",", 
    RowBox[{"{", 
     RowBox[{"i", ",", "1", ",", 
      RowBox[{"Length", "[", "Tscancorig", "]"}]}], "}"}]}], "]"}]}]], "Input",\

 CellChangeTimes->{{3.727415329654827*^9, 3.727415395125635*^9}, {
   3.727419032739399*^9, 3.72741906893994*^9}, {3.727421895354998*^9, 
   3.727421965803722*^9}, {3.7274307503359957`*^9, 3.727430756438754*^9}, 
   3.727430792744117*^9, {3.727430844015986*^9, 3.72743086825692*^9}, {
   3.727435921951792*^9, 3.727435928127816*^9}, {3.727435989113798*^9, 
   3.727435990152746*^9}, {3.727440645712977*^9, 3.72744064973628*^9}, 
   3.727440900797185*^9, {3.727441441830037*^9, 3.727441489781925*^9}, {
   3.727441549095484*^9, 3.7274415558390417`*^9}, {3.727701046035239*^9, 
   3.727701049032592*^9}, {3.727701100776236*^9, 3.727701103498499*^9}, {
   3.74350606216481*^9, 3.743506062444581*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
  "3.738379532206608`", ",", "3.738379532206608`", ",", "3.738379532206608`", 
   ",", "3.738379532206608`", ",", "3.738379532206608`", ",", 
   "3.738379532206608`", ",", "3.738379532206608`", ",", 
   "3.7314782670933067`", ",", "3.710507093943211`", ",", 
   "3.690397562453125`", ",", "3.6710886578917625`", ",", 
   "3.6346569136085773`", ",", "3.5847874788364775`", ",", 
   "3.5397529008546043`", ",", "3.4987535608775717`", ",", 
   "3.46116204469073`", ",", "3.4264787031113695`", ",", 
   "3.3943003544048773`", ",", "3.3642977986677383`", ",", 
   "3.336199371862016`", ",", "3.309778725468078`", ",", "3.284845611469781`",
    ",", "3.261238842932823`", ",", "3.238820851521168`", ",", 
   "3.217473433225475`", ",", "3.1973572919282236`", ",", 
   "3.178514814156032`", ",", "3.16037650279606`", ",", "3.142887954333365`", 
   ",", "3.1260005530148907`", ",", "3.1096707002465855`", ",", 
   "3.0938591664534365`", ",", "3.078530541623156`", ",", "3.063652767931`", 
   ",", "3.0491967404147484`", ",", "3.0351359641507702`", ",", 
   "3.0214462603415906`", ",", "3.008105510171779`", ",", 
   "2.9950934299747627`", ",", "2.982391384137269`", ",", 
   "2.9699822107884337`", ",", "2.9578500749920846`", ",", 
   "2.945980341295423`", ",", "2.9343594535635162`", ",", 
   "2.922974838349634`", ",", "2.9118148113801365`", ",", 
   "2.9008684980107886`", ",", "2.8901257633545385`", ",", 
   "2.879577145053365`", ",", "2.8692138000595273`", ",", 
   "2.859027449226631`", ",", "2.8490103344924274`", ",", 
   "2.8391551746268875`", ",", "2.8294551292347663`", ",", 
   "2.8199037638907916`", ",", "2.8104950200919028`", ",", 
   "2.8012231851775447`", ",", "2.7920828704287475`"}], "}"}]], "Output",
 CellChangeTimes->{3.7277010503471737`*^9, 3.727701104179261*^9, 
  3.733393495041349*^9, 3.7437421368192883`*^9, 3.743744636592963*^9, 
  3.745326173906633*^9, 3.747284775471079*^9, 3.747888393406809*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"2", "Mb"}], "+", 
  RowBox[{"Table", "[", 
   RowBox[{
    RowBox[{"ReVsb", "[", 
     RowBox[{"100000", ",", 
      RowBox[{"mDcal", "[", 
       RowBox[{
        RowBox[{"2", "\[Pi]"}], ",", 
        RowBox[{"Tscancorig", "[", 
         RowBox[{"[", "i", "]"}], "]"}], ",", 
        RowBox[{"kfinal", "[", 
         RowBox[{"[", "1", "]"}], "]"}], ",", 
        RowBox[{"kfinal", "[", 
         RowBox[{"[", "2", "]"}], "]"}]}], "]"}], ",", 
      RowBox[{"\[Alpha]cont", "[", 
       RowBox[{"[", "1", "]"}], "]"}], ",", 
      RowBox[{"\[Sigma]cont", "[", 
       RowBox[{"[", "1", "]"}], "]"}], ",", 
      RowBox[{"ccont", "[", 
       RowBox[{"[", "1", "]"}], "]"}]}], "]"}], ",", 
    RowBox[{"{", 
     RowBox[{"i", ",", "1", ",", 
      RowBox[{"Length", "[", "Tscancorig", "]"}]}], "}"}]}], "]"}]}]], "Input",\

 CellChangeTimes->{{3.727422276937283*^9, 3.727422316833344*^9}, {
  3.727436086210723*^9, 3.727436090850267*^9}, {3.727436126467115*^9, 
  3.727436128483083*^9}, {3.727441501086624*^9, 3.727441564686953*^9}, {
  3.7435060639965477`*^9, 3.743506065563201*^9}, {3.748262186476821*^9, 
  3.748262187421413*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
  "10.564`", ",", "10.564`", ",", "10.564`", ",", "10.564`", ",", "10.564`", 
   ",", "10.564`", ",", "10.564`", ",", "10.564`", ",", "10.564`", ",", 
   "10.564`", ",", "10.564`", ",", "10.564`", ",", "10.564`", ",", "10.564`", 
   ",", "10.564`", ",", "10.564`", ",", "10.564`", ",", "10.527378512103652`",
    ",", "10.48465676411899`", ",", "10.44523651269`", ",", 
   "10.408678409753676`", ",", "10.374620214914984`", ",", 
   "10.342760403792504`", ",", "10.312845805961425`", ",", 
   "10.28466215987651`", ",", "10.258465302605183`", ",", 
   "10.23431528929649`", ",", "10.211257314210796`", ",", 
   "10.189198662206424`", ",", "10.16805729728462`", ",", 
   "10.147760337068178`", ",", "10.128242785457232`", ",", 
   "10.109446471184569`", ",", "10.091319155085763`", ",", 
   "10.073813775501225`", ",", "10.056887807078887`", ",", 
   "10.040502716143385`", ",", "10.024623490811384`", ",", 
   "10.009218232516773`", ",", "9.994257817920584`", ",", "9.97971558775915`",
    ",", "9.965567086223086`", ",", "9.951789836385098`", ",", 
   "9.938363130361983`", ",", "9.925267861458286`", ",", "9.91248636297944`", 
   ",", "9.900002271971234`", ",", "9.887800410385704`", ",", 
   "9.87586667114882`", ",", "9.8641879289901`", ",", "9.852751947397785`", 
   ",", "9.84154730782897`", ",", "9.830563336162639`", ",", 
   "9.819790043731144`", ",", "9.809218070104144`", ",", "9.798838634336326`",
    ",", "9.788643485665855`", ",", "9.778624869170192`"}], "}"}]], "Output",
 CellChangeTimes->{{3.727422278964765*^9, 3.727422317765297*^9}, 
   3.727436091516931*^9, 3.72743612877216*^9, {3.727441513483501*^9, 
   3.727441532911517*^9}, 3.7274415653440447`*^9, 3.72760695509595*^9, 
   3.743742179241749*^9, 3.745326175676339*^9, 3.7472847772246227`*^9, 
   3.748078607134534*^9, 3.748262194170351*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"2", "Mb"}], "+", 
  RowBox[{"Table", "[", 
   RowBox[{
    RowBox[{"ReVsb", "[", 
     RowBox[{"100000", ",", 
      RowBox[{"mDcal", "[", 
       RowBox[{
        RowBox[{"2", "\[Pi]"}], ",", 
        RowBox[{"Tscancorig", "[", 
         RowBox[{"[", "i", "]"}], "]"}], ",", 
        RowBox[{"kfinall", "[", 
         RowBox[{"[", "1", "]"}], "]"}], ",", 
        RowBox[{"kfinall", "[", 
         RowBox[{"[", "2", "]"}], "]"}]}], "]"}], ",", 
      RowBox[{"\[Alpha]cont", "[", 
       RowBox[{"[", "1", "]"}], "]"}], ",", 
      RowBox[{"\[Sigma]cont", "[", 
       RowBox[{"[", "1", "]"}], "]"}], ",", 
      RowBox[{"ccont", "[", 
       RowBox[{"[", "1", "]"}], "]"}]}], "]"}], ",", 
    RowBox[{"{", 
     RowBox[{"i", ",", "1", ",", 
      RowBox[{"Length", "[", "Tscancorig", "]"}]}], "}"}]}], "]"}]}]], "Input",\

 CellChangeTimes->{{3.727701620681362*^9, 3.7277016228229237`*^9}, {
  3.748078633002636*^9, 3.748078633417383*^9}, {3.748262188638441*^9, 
  3.7482621901562443`*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
  "10.564`", ",", "10.564`", ",", "10.564`", ",", "10.564`", ",", "10.564`", 
   ",", "10.564`", ",", "10.564`", ",", "10.564`", ",", "10.564`", ",", 
   "10.564`", ",", "10.564`", ",", "10.564`", ",", "10.564`", ",", "10.564`", 
   ",", "10.564`", ",", "10.564`", ",", "10.564`", ",", "10.564`", ",", 
   "10.564`", ",", "10.564`", ",", "10.564`", ",", "10.564`", ",", "10.564`", 
   ",", "10.564`", ",", "10.564`", ",", "10.564`", ",", "10.564`", ",", 
   "10.556402146981373`", ",", "10.52436017602119`", ",", 
   "10.493989268327525`", ",", "10.465138001767468`", ",", 
   "10.437673313594308`", ",", "10.411477761546102`", ",", 
   "10.386447264050156`", ",", "10.362489224356327`", ",", 
   "10.33952096383713`", ",", "10.317468411317149`", ",", 
   "10.296264991329638`", ",", "10.275850673873647`", ",", 
   "10.256171191971559`", ",", "10.237177339449303`", ",", 
   "10.218824386101536`", ",", "10.201071578737595`", ",", 
   "10.183881685376406`", ",", "10.167220629235924`", ",", 
   "10.151057145617616`", ",", "10.135362493019231`", ",", 
   "10.120110203200447`", ",", "10.105275846077447`", ",", 
   "10.090836844624137`", ",", "10.076772286686154`", ",", 
   "10.06306278071079`", ",", "10.049690309142665`", ",", 
   "10.036638110709914`", ",", "10.023890567758505`", ",", 
   "10.011433110625022`", ",", "9.999252122197767`", ",", 
   "9.987334871080696`"}], "}"}]], "Output",
 CellChangeTimes->{
  3.72770162335463*^9, 3.743742181075818*^9, 3.745326178130927*^9, 
   3.747284778734318*^9, {3.7480786082358828`*^9, 3.748078634116671*^9}, 
   3.7482621953520823`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"2", "Mb"}], "+", 
  RowBox[{"Table", "[", 
   RowBox[{
    RowBox[{"ReVsb", "[", 
     RowBox[{"100000", ",", 
      RowBox[{"mDcal", "[", 
       RowBox[{
        RowBox[{"2", "\[Pi]"}], ",", 
        RowBox[{"Tscancorig", "[", 
         RowBox[{"[", "i", "]"}], "]"}], ",", 
        RowBox[{"kfinalu", "[", 
         RowBox[{"[", "1", "]"}], "]"}], ",", 
        RowBox[{"kfinalu", "[", 
         RowBox[{"[", "2", "]"}], "]"}]}], "]"}], ",", 
      RowBox[{"\[Alpha]cont", "[", 
       RowBox[{"[", "1", "]"}], "]"}], ",", 
      RowBox[{"\[Sigma]cont", "[", 
       RowBox[{"[", "1", "]"}], "]"}], ",", 
      RowBox[{"ccont", "[", 
       RowBox[{"[", "1", "]"}], "]"}]}], "]"}], ",", 
    RowBox[{"{", 
     RowBox[{"i", ",", "1", ",", 
      RowBox[{"Length", "[", "Tscancorig", "]"}]}], "}"}]}], "]"}]}]], "Input",\

 CellChangeTimes->{{3.7277016586540737`*^9, 3.727701661137645*^9}, {
  3.748078635665778*^9, 3.748078636593261*^9}, {3.748262191204342*^9, 
  3.748262192413295*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
  "10.564`", ",", "10.564`", ",", "10.564`", ",", "10.564`", ",", "10.564`", 
   ",", "10.564`", ",", "10.564`", ",", "10.557098734886699`", ",", 
   "10.536127561736603`", ",", "10.516018030246517`", ",", 
   "10.496709125685154`", ",", "10.46027738140197`", ",", 
   "10.410407946629869`", ",", "10.365373368647996`", ",", 
   "10.324374028670963`", ",", "10.286782512484121`", ",", 
   "10.252099170904762`", ",", "10.219920822198269`", ",", 
   "10.18991826646113`", ",", "10.161819839655408`", ",", 
   "10.13539919326147`", ",", "10.110466079263173`", ",", 
   "10.086859310726215`", ",", "10.06444131931456`", ",", 
   "10.043093901018867`", ",", "10.022977759721616`", ",", 
   "10.004135281949424`", ",", "9.985996970589452`", ",", 
   "9.968508422126757`", ",", "9.951621020808282`", ",", "9.935291168039978`",
    ",", "9.919479634246828`", ",", "9.904151009416548`", ",", 
   "9.889273235724392`", ",", "9.87481720820814`", ",", "9.860756431944163`", 
   ",", "9.847066728134983`", ",", "9.833725977965171`", ",", 
   "9.820713897768155`", ",", "9.808011851930662`", ",", "9.795602678581826`",
    ",", "9.783470542785476`", ",", "9.771600809088815`", ",", 
   "9.759979921356909`", ",", "9.748595306143025`", ",", "9.737435279173528`",
    ",", "9.726488965804181`", ",", "9.71574623114793`", ",", 
   "9.705197612846757`", ",", "9.694834267852919`", ",", "9.684647917020023`",
    ",", "9.674630802285819`", ",", "9.66477564242028`", ",", 
   "9.655075597028159`", ",", "9.645524231684183`", ",", "9.636115487885295`",
    ",", "9.626843652970937`", ",", "9.617703338222139`"}], "}"}]], "Output",
 CellChangeTimes->{
  3.743742183230177*^9, 3.745326179665771*^9, 3.747284781039441*^9, {
   3.748078609242975*^9, 3.7480786369975224`*^9}, 3.748262196702713*^9}]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Spectra without string-breaking", "Section",
 CellChangeTimes->{{3.727415296394449*^9, 3.727415310980733*^9}, {
  3.727438974368733*^9, 3.7274389775611553`*^9}, {3.7274415699177094`*^9, 
  3.727441571125741*^9}, {3.745577449918088*^9, 3.745577465526945*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"ImV", "[", 
    RowBox[{"r_", ",", "mD_", ",", "\[Alpha]_", ",", "\[Sigma]_", ",", "T_"}],
     "]"}], ":=", 
   RowBox[{
    RowBox[{"T", " ", "\[Alpha]", " ", 
     RowBox[{"(", 
      RowBox[{"1", "-", 
       RowBox[{
        FractionBox["1", "2"], " ", 
        SqrtBox["\[Pi]"], " ", 
        RowBox[{"MeijerG", "[", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{
            RowBox[{"{", "0", "}"}], ",", 
            RowBox[{"{", "}"}]}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"{", 
             RowBox[{"0", ",", "1"}], "}"}], ",", 
            RowBox[{"{", 
             RowBox[{"-", 
              FractionBox["1", "2"]}], "}"}]}], "}"}], ",", 
          FractionBox[
           RowBox[{
            SuperscriptBox["mD", "2"], " ", 
            SuperscriptBox["r", "2"]}], "4"]}], "]"}]}]}], ")"}]}], "+", 
    RowBox[{
     FractionBox["1", "4"], " ", "mD", " ", 
     SqrtBox["\[Pi]"], " ", 
     SuperscriptBox["r", "3"], " ", "T", " ", "\[Sigma]", " ", 
     RowBox[{"MeijerG", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{
           RowBox[{"-", 
            FractionBox["1", "2"]}], ",", 
           RowBox[{"-", 
            FractionBox["1", "2"]}]}], "}"}], ",", 
         RowBox[{"{", "}"}]}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{
           FractionBox["1", "2"], ",", 
           FractionBox["1", "2"]}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"-", 
            FractionBox["3", "2"]}], ",", 
           RowBox[{"-", "1"}]}], "}"}]}], "}"}], ",", 
       FractionBox[
        RowBox[{
         SuperscriptBox["mD", "2"], " ", 
         SuperscriptBox["r", "2"]}], "4"]}], "]"}]}]}]}], ";"}]], "Input"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"ImVc", "[", 
  RowBox[{"1000000", ",", 
   RowBox[{"mDcal", "[", 
    RowBox[{
     RowBox[{"2", "\[Pi]"}], ",", "0.155", ",", 
     RowBox[{"kfinal", "[", 
      RowBox[{"[", "1", "]"}], "]"}], ",", 
     RowBox[{"kfinal", "[", 
      RowBox[{"[", "2", "]"}], "]"}]}], "]"}], ",", 
   RowBox[{"\[Alpha]cont", "[", 
    RowBox[{"[", "1", "]"}], "]"}], ",", "0.155"}], "]"}]], "Input",
 CellChangeTimes->{{3.745577872707444*^9, 3.745577874393169*^9}, {
  3.74557964044923*^9, 3.7455796426334267`*^9}, {3.745579711091261*^9, 
  3.7455797233061247`*^9}, {3.745579812379731*^9, 3.745579827661113*^9}}],

Cell[BoxData["0.07976306974654478`"], "Output",
 CellChangeTimes->{{3.745579821155539*^9, 3.745579828142853*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Block", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"mD", "=", 
     RowBox[{"mDcal", "[", 
      RowBox[{
       RowBox[{"2", "\[Pi]"}], ",", "0.155", ",", 
       RowBox[{"kfinal", "[", 
        RowBox[{"[", "1", "]"}], "]"}], ",", 
       RowBox[{"kfinal", "[", 
        RowBox[{"[", "2", "]"}], "]"}]}], "]"}]}], "}"}], ",", 
   RowBox[{"Show", "[", 
    RowBox[{"DiscretePlot", "[", 
     RowBox[{
      RowBox[{"ImVc", "[", 
       RowBox[{
        FractionBox["r", "0.197"], ",", "mD", ",", 
        RowBox[{"\[Alpha]cont", "[", 
         RowBox[{"[", "1", "]"}], "]"}], ",", "0.155"}], "]"}], ",", 
      RowBox[{"{", 
       RowBox[{"r", ",", "1", ",", "100", ",", "1"}], "}"}], ",", 
      RowBox[{"Joined", "\[Rule]", "True"}], ",", 
      RowBox[{"Filling", "\[Rule]", "None"}], ",", 
      RowBox[{"AxesStyle", "\[Rule]", 
       RowBox[{"Directive", "[", 
        RowBox[{
         RowBox[{"FontSize", "\[Rule]", "25"}], ",", 
         RowBox[{"Thickness", "\[Rule]", "0.004"}], ",", 
         RowBox[{"FontFamily", "\[Rule]", "\"\<Helvetica\>\""}], ",", 
         "Black"}], "]"}]}], ",", 
      RowBox[{"BaseStyle", "\[Rule]", 
       RowBox[{"{", 
        RowBox[{"FontSize", "\[Rule]", "14"}], "}"}]}], ",", 
      RowBox[{"PlotRange", "\[Rule]", "All"}], ",", 
      RowBox[{"AspectRatio", "\[Rule]", "0.85"}], ",", 
      RowBox[{"AxesLabel", "\[Rule]", 
       RowBox[{"{", 
        RowBox[{"\"\<r [fm]\>\"", ",", "\"\<Im[V]\>\""}], "}"}]}], ",", 
      RowBox[{"PlotLabel", "\[Rule]", 
       RowBox[{"Style", "[", 
        RowBox[{"\"\<T=150MeV\>\"", ",", 
         RowBox[{"FontSize", "\[Rule]", "25"}], ",", 
         RowBox[{"FontFamily", "\[Rule]", "\"\<Helvetica\>\""}], ",", 
         "Black"}], "]"}]}], ",", 
      RowBox[{"ImageSize", "\[Rule]", 
       RowBox[{"{", 
        RowBox[{"600", ",", "600"}], "}"}]}]}], "]"}], "]"}]}], 
  "]"}]], "Input",
 CellChangeTimes->{{3.745577653292407*^9, 3.745577656044977*^9}, {
  3.745577794695994*^9, 3.7455778033519907`*^9}, {3.745577837697983*^9, 
  3.745577861602961*^9}, {3.7455797727340918`*^9, 3.745579808974224*^9}}],

Cell[BoxData[
 GraphicsBox[{
   {RGBColor[0.368417, 0.506779, 0.709798], PointSize[0.004766666666666667], 
    AbsoluteThickness[1.6]}, 
   {RGBColor[0.368417, 0.506779, 0.709798], PointSize[0.004766666666666667], 
    AbsoluteThickness[1.6], LineBox[CompressedData["
1:eJw9y2tM02cYxuG/tCOICYENBQZjFUUIQ5ECcijYu5wpp9JS2jKxyARHMeBm
NYsj2B3E4zDgWIkiwQ94qKVCkajZllQMViGYzGRbAJmTxIlRM5ZMDRPD+NDn
eZPnw/Xe+a2taVLXigRBWLF8O5fPS6A3Lz92eFx1L+K03POBB6LQHYGPLnrs
g2/rbXnnHVc89ofduLfB4Bj0OBCBVQ//nHY4PQ6Gy/rUPSgf8jgM9jemkeFO
sgRHk8qqnePkCETeq6/d8zd5PWwDbxoUPlc93gDhxJRE+j45Gvsqw7zORJFj
4DbLtHPx5FgUovexkEbehJIWv5vNIG+Gxr7UdiuHHA+9bfC9cCVZii7xOqer
mJyAF5LIl7+oyIn40Xv1SKOGnASHb/qH/VryFoQlqFf36MjJELVsfFtiIKfA
+lVHw1glORWzXnengreR02DuPrBBUUWWoci+/0n+dnI6Ope+u55oJGdgj3vS
5FNN3gpT/+RGN1uOy18ed+zdQQZCzl6I86/x2AL4XUk720MWFLhxLeCM5BPa
FdA+ud1uJQuZ8JNJr4t30p6JUe+DofVkIQvPgob7RnnPwlxU0LrQWtqzcUvd
kWsiW7Lx8YXd/UO850DSr5t9zXsOgrtE1cl1tOfCV6Y89TnZkousWPHMJd7z
4L/ww6kZ3vMgaPPFfrtoz0ecy2iWkS35SOxbG1HHewE0r3tz2ngvwPzj5oCr
vCtx/1LL0O+8K7EyK1K7wHshjMPhYSGf0l6I0VeDMclkoQirLof2angvworv
H3Y18l6MjBT/uCO8F2N+TduBXt5LYG2Vt1/jvQSZ8ZmHJ3gvxX/eQU2zvJfC
qLpreMW7Che/CdCtrPcYKkxUmfeFki0qTA9tH4klu1RYNG5VZpCFMhSe6wou
5r4MnanhKdu4L8PssZ+dJu7L8PaFs/0L7tXINVtnDnGvRrSisaeDezV+Ozcw
3cO9Gj+9Y+i2ca/B/pfP/xrmXoPFiNabLu41aLZNxY9zr8GDruyMX7kvx8mx
O3N/cF+OqIQPUue4L0dlt0P6D/flOPi0b3KBey02P3se72WiXoueCancl2zR
YilmXvwu2aVF35ipNYQsVEAceOO2hPsKtKeP3onivgIDW1QnN3Ffgcm6f8OS
uNfh6Ppos4x7HUSrYFVwr0NK+GdH8rjXQee+X1DMvR677dUzau718K9bzNZz
r4doTdPXVdzr8dEjk7WGewPSS08c2rXs/wHPUL39
     "]], {}, {}}},
  AspectRatio->0.85,
  Axes->True,
  AxesLabel->{
    FormBox["\"r [fm]\"", TraditionalForm], 
    FormBox["\"Im[V]\"", TraditionalForm]},
  AxesOrigin->{1., 0.025523399049127295`},
  AxesStyle->Directive[
   FontSize -> 25, Thickness -> 0.004, FontFamily -> "Helvetica", 
    GrayLevel[0]],
  BaseStyle->{FontSize -> 14},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  ImageSize->{600, 600},
  Method->{
   "MessagesHead" -> DiscretePlot, "AxisPadding" -> Scaled[0.02], 
    "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
    AbsolutePointSize[6], "DefaultPlotStyle" -> {
      Directive[
       RGBColor[0.368417, 0.506779, 0.709798], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.880722, 0.611041, 0.142051], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.560181, 0.691569, 0.194885], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.922526, 0.385626, 0.209179], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.528488, 0.470624, 0.701351], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.772079, 0.431554, 0.102387], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.363898, 0.618501, 0.782349], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[1, 0.75, 0], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.647624, 0.37816, 0.614037], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.571589, 0.586483, 0.], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.915, 0.3325, 0.2125], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.40082222609352647`, 0.5220066643438841, 0.85], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.9728288904374106, 0.621644452187053, 0.07336199581899142], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.736782672705901, 0.358, 0.5030266573755369], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.28026441037696703`, 0.715, 0.4292089322474965], 
       AbsoluteThickness[1.6]]}, "DomainPadding" -> Scaled[0.02], 
    "PointSizeFunction" -> "SmallPointSize", "RangePadding" -> Scaled[0.05]},
  PlotLabel->FormBox[
    StyleBox["\"T=150MeV\"", FontSize -> 25, FontFamily -> "Helvetica", 
     GrayLevel[0], StripOnInput -> False], TraditionalForm],
  PlotRange->{{1., 100.}, {0.025523399049127295`, 0.07974860201312323}},
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.02], 
     Scaled[0.02]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{
  3.745577810841693*^9, {3.745577844395257*^9, 3.745577864054736*^9}, 
   3.7455797792488832`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"Series", "[", 
   RowBox[{
    RowBox[{
     FractionBox["1", "4"], " ", "mD", " ", 
     SqrtBox["\[Pi]"], " ", 
     SuperscriptBox["r", "3"], " ", "T", " ", "\[Sigma]", " ", 
     RowBox[{"MeijerG", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{
           RowBox[{"-", 
            FractionBox["1", "2"]}], ",", 
           RowBox[{"-", 
            FractionBox["1", "2"]}]}], "}"}], ",", 
         RowBox[{"{", "}"}]}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{
           FractionBox["1", "2"], ",", 
           FractionBox["1", "2"]}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"-", 
            FractionBox["3", "2"]}], ",", 
           RowBox[{"-", "1"}]}], "}"}]}], "}"}], ",", 
       FractionBox[
        RowBox[{
         SuperscriptBox["mD", "2"], " ", 
         SuperscriptBox["r", "2"]}], "4"]}], "]"}]}], ",", 
    RowBox[{"{", 
     RowBox[{"r", ",", "\[Infinity]", ",", "10"}], "}"}]}], "]"}], "//", 
  "FullSimplify"}]], "Input",
 CellChangeTimes->{{3.745580045184705*^9, 3.745580054032996*^9}, {
   3.745580114875794*^9, 3.745580122327056*^9}, 3.745580324784594*^9, {
   3.7455804302667933`*^9, 3.745580430387451*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{
   SuperscriptBox["\[ExponentialE]", 
    RowBox[{
     RowBox[{"-", "\[ImaginaryI]"}], " ", 
     SqrtBox[
      RowBox[{"-", 
       SuperscriptBox["mD", "2"]}]], " ", "r"}]], " ", 
   RowBox[{"(", 
    InterpretationBox[
     RowBox[{
      FractionBox[
       RowBox[{"mD", " ", "T", " ", "\[Sigma]", " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{
           RowBox[{"-", "\[ImaginaryI]"}], " ", "\[Pi]"}], "+", 
          RowBox[{"Log", "[", 
           RowBox[{"-", 
            SuperscriptBox["mD", "2"]}], "]"}], "-", 
          RowBox[{"Log", "[", 
           SuperscriptBox["mD", "2"], "]"}]}], ")"}], " ", 
        SuperscriptBox["r", "2"]}], 
       RowBox[{"4", " ", 
        SqrtBox[
         SuperscriptBox["mD", "2"]]}]], "-", 
      FractionBox[
       RowBox[{"3", " ", 
        RowBox[{"(", 
         RowBox[{"mD", " ", "T", " ", "\[Sigma]", " ", 
          RowBox[{"(", 
           RowBox[{"\[Pi]", "+", 
            RowBox[{"\[ImaginaryI]", " ", 
             RowBox[{"Log", "[", 
              RowBox[{"-", 
               SuperscriptBox["mD", "2"]}], "]"}]}], "-", 
            RowBox[{"\[ImaginaryI]", " ", 
             RowBox[{"Log", "[", 
              SuperscriptBox["mD", "2"], "]"}]}]}], ")"}]}], ")"}], " ", 
        "r"}], 
       RowBox[{"4", " ", 
        SqrtBox[
         RowBox[{"-", 
          SuperscriptBox["mD", "4"]}]]}]], "+", 
      FractionBox[
       RowBox[{"mD", " ", "T", " ", "\[Sigma]", " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{
           RowBox[{"-", "\[ImaginaryI]"}], " ", "\[Pi]"}], "+", 
          RowBox[{"Log", "[", 
           RowBox[{"-", 
            SuperscriptBox["mD", "2"]}], "]"}], "-", 
          RowBox[{"Log", "[", 
           SuperscriptBox["mD", "2"], "]"}]}], ")"}]}], 
       SuperscriptBox[
        RowBox[{"(", 
         SuperscriptBox["mD", "2"], ")"}], 
        RowBox[{"3", "/", "2"}]]], "+", 
      InterpretationBox[
       SuperscriptBox[
        RowBox[{"O", "[", 
         FractionBox["1", "r"], "]"}], "7"],
       SeriesData[$CellContext`r, 
        DirectedInfinity[1], {}, -2, 7, 1],
       Editable->False]}],
     SeriesData[$CellContext`r, 
      DirectedInfinity[
      1], {((((Rational[1, 4] $CellContext`mD) ($CellContext`mD^2)^
           Rational[-1, 2]) $CellContext`T) $CellContext`\[Sigma]) (
        Complex[0, -1] Pi + Log[-$CellContext`mD^2] - 
        Log[$CellContext`mD^2]), ((((
           Rational[-3, 4] $CellContext`mD) (-$CellContext`mD^4)^
           Rational[-1, 2]) $CellContext`T) $CellContext`\[Sigma]) (Pi + 
        Complex[0, 1] Log[-$CellContext`mD^2] + 
        Complex[0, -1] 
         Log[$CellContext`mD^2]), ((($CellContext`mD ($CellContext`mD^2)^
           Rational[-3, 2]) $CellContext`T) $CellContext`\[Sigma]) (
        Complex[0, -1] Pi + Log[-$CellContext`mD^2] - 
        Log[$CellContext`mD^2])}, -2, 7, 1],
     Editable->False], ")"}]}], "+", 
  RowBox[{
   SuperscriptBox["\[ExponentialE]", 
    RowBox[{"\[ImaginaryI]", " ", 
     SqrtBox[
      RowBox[{"-", 
       SuperscriptBox["mD", "2"]}]], " ", "r"}]], " ", 
   RowBox[{"(", 
    InterpretationBox[
     RowBox[{
      FractionBox[
       RowBox[{"mD", " ", "T", " ", "\[Sigma]", " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"\[ImaginaryI]", " ", "\[Pi]"}], "+", 
          RowBox[{"Log", "[", 
           RowBox[{"-", 
            SuperscriptBox["mD", "2"]}], "]"}], "-", 
          RowBox[{"Log", "[", 
           SuperscriptBox["mD", "2"], "]"}]}], ")"}], " ", 
        SuperscriptBox["r", "2"]}], 
       RowBox[{"4", " ", 
        SqrtBox[
         SuperscriptBox["mD", "2"]]}]], "-", 
      FractionBox[
       RowBox[{"3", " ", 
        RowBox[{"(", 
         RowBox[{"mD", " ", "T", " ", "\[Sigma]", " ", 
          RowBox[{"(", 
           RowBox[{"\[Pi]", "-", 
            RowBox[{"\[ImaginaryI]", " ", 
             RowBox[{"Log", "[", 
              RowBox[{"-", 
               SuperscriptBox["mD", "2"]}], "]"}]}], "+", 
            RowBox[{"\[ImaginaryI]", " ", 
             RowBox[{"Log", "[", 
              SuperscriptBox["mD", "2"], "]"}]}]}], ")"}]}], ")"}], " ", 
        "r"}], 
       RowBox[{"4", " ", 
        SqrtBox[
         RowBox[{"-", 
          SuperscriptBox["mD", "4"]}]]}]], "+", 
      FractionBox[
       RowBox[{
        SqrtBox[
         SuperscriptBox["mD", "2"]], " ", "T", " ", "\[Sigma]", " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"\[ImaginaryI]", " ", "\[Pi]"}], "+", 
          RowBox[{"Log", "[", 
           RowBox[{"-", 
            SuperscriptBox["mD", "2"]}], "]"}], "-", 
          RowBox[{"Log", "[", 
           SuperscriptBox["mD", "2"], "]"}]}], ")"}]}], 
       SuperscriptBox["mD", "3"]], "+", 
      InterpretationBox[
       SuperscriptBox[
        RowBox[{"O", "[", 
         FractionBox["1", "r"], "]"}], "7"],
       SeriesData[$CellContext`r, 
        DirectedInfinity[1], {}, -2, 7, 1],
       Editable->False]}],
     SeriesData[$CellContext`r, 
      DirectedInfinity[
      1], {((((Rational[1, 4] $CellContext`mD) ($CellContext`mD^2)^
           Rational[-1, 2]) $CellContext`T) $CellContext`\[Sigma]) (
        Complex[0, 1] Pi + Log[-$CellContext`mD^2] - 
        Log[$CellContext`mD^2]), ((((
           Rational[-3, 4] $CellContext`mD) (-$CellContext`mD^4)^
           Rational[-1, 2]) $CellContext`T) $CellContext`\[Sigma]) (Pi + 
        Complex[0, -1] Log[-$CellContext`mD^2] + 
        Complex[0, 1] 
         Log[$CellContext`mD^2]), ((($CellContext`mD^(-3) ($CellContext`mD^2)^
           Rational[1, 2]) $CellContext`T) $CellContext`\[Sigma]) (
        Complex[0, 1] Pi + Log[-$CellContext`mD^2] - 
        Log[$CellContext`mD^2])}, -2, 7, 1],
     Editable->False], ")"}]}], "+", 
  RowBox[{"(", 
   InterpretationBox[
    RowBox[{
     FractionBox[
      RowBox[{"2", " ", 
       SqrtBox[
        SuperscriptBox["mD", "2"]], " ", "T", " ", "\[Sigma]", " ", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"-", "2"}], "+", 
         RowBox[{"2", " ", "EulerGamma"}], "+", 
         RowBox[{"Log", "[", 
          SuperscriptBox["mD", "2"], "]"}], "-", 
         RowBox[{"2", " ", 
          RowBox[{"Log", "[", 
           FractionBox["1", "r"], "]"}]}]}], ")"}]}], 
      SuperscriptBox["mD", "3"]], "-", 
     FractionBox[
      RowBox[{"16", " ", 
       RowBox[{"(", 
        RowBox[{
         SqrtBox[
          SuperscriptBox["mD", "2"]], " ", "T", " ", "\[Sigma]"}], ")"}]}], 
      RowBox[{
       SuperscriptBox["mD", "5"], " ", 
       SuperscriptBox["r", "2"]}]], "-", 
     FractionBox[
      RowBox[{"216", " ", 
       RowBox[{"(", 
        RowBox[{
         SqrtBox[
          SuperscriptBox["mD", "2"]], " ", "T", " ", "\[Sigma]"}], ")"}]}], 
      RowBox[{
       SuperscriptBox["mD", "7"], " ", 
       SuperscriptBox["r", "4"]}]], "-", 
     FractionBox[
      RowBox[{"7680", " ", 
       RowBox[{"(", 
        RowBox[{
         SqrtBox[
          SuperscriptBox["mD", "2"]], " ", "T", " ", "\[Sigma]"}], ")"}]}], 
      RowBox[{
       SuperscriptBox["mD", "9"], " ", 
       SuperscriptBox["r", "6"]}]], "+", 
     InterpretationBox[
      SuperscriptBox[
       RowBox[{"O", "[", 
        FractionBox["1", "r"], "]"}], "8"],
      SeriesData[$CellContext`r, 
       DirectedInfinity[1], {}, 0, 8, 1],
      Editable->False]}],
    SeriesData[$CellContext`r, 
     DirectedInfinity[
     1], {((((2 $CellContext`mD^(-3)) ($CellContext`mD^2)^
          Rational[1, 2]) $CellContext`T) $CellContext`\[Sigma]) (-2 + 
       2 EulerGamma + Log[$CellContext`mD^2] - 2 Log[$CellContext`r^(-1)]), 
      0, ((((-16) $CellContext`mD^(-5)) ($CellContext`mD^2)^
         Rational[1, 2]) $CellContext`T) $CellContext`\[Sigma], 
      0, ((((-216) $CellContext`mD^(-7)) ($CellContext`mD^2)^
         Rational[1, 2]) $CellContext`T) $CellContext`\[Sigma], 
      0, ((((-7680) $CellContext`mD^(-9)) ($CellContext`mD^2)^
         Rational[1, 2]) $CellContext`T) $CellContext`\[Sigma]}, 0, 8, 1],
    Editable->False], ")"}]}]], "Output",
 CellChangeTimes->{
  3.74558006185361*^9, {3.745580118452203*^9, 3.745580141682271*^9}, 
   3.7455803414031343`*^9, 3.745580449300448*^9}]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"ImVsS", "[", 
    RowBox[{"r_", ",", "mD_", ",", "\[Sigma]_", ",", "T_"}], "]"}], ":=", 
   RowBox[{
    FractionBox[
     RowBox[{"2", " ", 
      SqrtBox[
       SuperscriptBox["mD", "2"]], " ", "T", " ", "\[Sigma]", " ", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{"-", "2"}], "+", 
        RowBox[{"2", " ", "EulerGamma"}], "+", 
        RowBox[{"Log", "[", 
         SuperscriptBox["mD", "2"], "]"}], "-", 
        RowBox[{"2", " ", 
         RowBox[{"Log", "[", 
          FractionBox["1", "r"], "]"}]}]}], ")"}]}], 
     SuperscriptBox["mD", "3"]], "-", 
    FractionBox[
     RowBox[{"16", " ", 
      RowBox[{"(", 
       RowBox[{
        SqrtBox[
         SuperscriptBox["mD", "2"]], " ", "T", " ", "\[Sigma]"}], ")"}]}], 
     RowBox[{
      SuperscriptBox["mD", "5"], " ", 
      SuperscriptBox["r", "2"]}]], "-", 
    FractionBox[
     RowBox[{"216", " ", 
      RowBox[{"(", 
       RowBox[{
        SqrtBox[
         SuperscriptBox["mD", "2"]], " ", "T", " ", "\[Sigma]"}], ")"}]}], 
     RowBox[{
      SuperscriptBox["mD", "7"], " ", 
      SuperscriptBox["r", "4"]}]], "-", 
    RowBox[{
     FractionBox[
      RowBox[{"7680", " ", 
       RowBox[{"(", 
        RowBox[{
         SqrtBox[
          SuperscriptBox["mD", "2"]], " ", "T", " ", "\[Sigma]"}], ")"}]}], 
      RowBox[{
       SuperscriptBox["mD", "9"], " ", 
       SuperscriptBox["r", "6"]}]], 
     SuperscriptBox["\[ExponentialE]", 
      RowBox[{"\[ImaginaryI]", " ", 
       SqrtBox[
        RowBox[{"-", 
         SuperscriptBox["mD", "2"]}]], " ", "r"}]], 
     RowBox[{"(", 
      RowBox[{
       FractionBox[
        RowBox[{"mD", " ", "T", " ", "\[Sigma]", " ", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{"\[ImaginaryI]", " ", "\[Pi]"}], "+", 
           RowBox[{"Log", "[", 
            RowBox[{"-", 
             SuperscriptBox["mD", "2"]}], "]"}], "-", 
           RowBox[{"Log", "[", 
            SuperscriptBox["mD", "2"], "]"}]}], ")"}], " ", 
         SuperscriptBox["r", "2"]}], 
        RowBox[{"4", " ", 
         SqrtBox[
          SuperscriptBox["mD", "2"]]}]], "-", 
       FractionBox[
        RowBox[{"3", " ", 
         RowBox[{"(", 
          RowBox[{"mD", " ", "T", " ", "\[Sigma]", " ", 
           RowBox[{"(", 
            RowBox[{"\[Pi]", "-", 
             RowBox[{"\[ImaginaryI]", " ", 
              RowBox[{"Log", "[", 
               RowBox[{"-", 
                SuperscriptBox["mD", "2"]}], "]"}]}], "+", 
             RowBox[{"\[ImaginaryI]", " ", 
              RowBox[{"Log", "[", 
               SuperscriptBox["mD", "2"], "]"}]}]}], ")"}]}], ")"}], " ", 
         "r"}], 
        RowBox[{"4", " ", 
         SqrtBox[
          RowBox[{"-", 
           SuperscriptBox["mD", "4"]}]]}]], "+", 
       FractionBox[
        RowBox[{
         SqrtBox[
          SuperscriptBox["mD", "2"]], " ", "T", " ", "\[Sigma]", " ", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{"\[ImaginaryI]", " ", "\[Pi]"}], "+", 
           RowBox[{"Log", "[", 
            RowBox[{"-", 
             SuperscriptBox["mD", "2"]}], "]"}], "-", 
           RowBox[{"Log", "[", 
            SuperscriptBox["mD", "2"], "]"}]}], ")"}]}], 
        SuperscriptBox["mD", "3"]]}], ")"}]}], "+", 
    RowBox[{
     SuperscriptBox["\[ExponentialE]", 
      RowBox[{
       RowBox[{"-", "\[ImaginaryI]"}], " ", 
       SqrtBox[
        RowBox[{"-", 
         SuperscriptBox["mD", "2"]}]], " ", "r"}]], 
     RowBox[{"(", 
      RowBox[{
       FractionBox[
        RowBox[{"mD", " ", "T", " ", "\[Sigma]", " ", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{
            RowBox[{"-", "\[ImaginaryI]"}], " ", "\[Pi]"}], "+", 
           RowBox[{"Log", "[", 
            RowBox[{"-", 
             SuperscriptBox["mD", "2"]}], "]"}], "-", 
           RowBox[{"Log", "[", 
            SuperscriptBox["mD", "2"], "]"}]}], ")"}], " ", 
         SuperscriptBox["r", "2"]}], 
        RowBox[{"4", " ", 
         SqrtBox[
          SuperscriptBox["mD", "2"]]}]], "-", 
       FractionBox[
        RowBox[{"3", " ", 
         RowBox[{"(", 
          RowBox[{"mD", " ", "T", " ", "\[Sigma]", " ", 
           RowBox[{"(", 
            RowBox[{"\[Pi]", "+", 
             RowBox[{"\[ImaginaryI]", " ", 
              RowBox[{"Log", "[", 
               RowBox[{"-", 
                SuperscriptBox["mD", "2"]}], "]"}]}], "-", 
             RowBox[{"\[ImaginaryI]", " ", 
              RowBox[{"Log", "[", 
               SuperscriptBox["mD", "2"], "]"}]}]}], ")"}]}], ")"}], " ", 
         "r"}], 
        RowBox[{"4", " ", 
         SqrtBox[
          RowBox[{"-", 
           SuperscriptBox["mD", "4"]}]]}]], "+", 
       FractionBox[
        RowBox[{"mD", " ", "T", " ", "\[Sigma]", " ", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{
            RowBox[{"-", "\[ImaginaryI]"}], " ", "\[Pi]"}], "+", 
           RowBox[{"Log", "[", 
            RowBox[{"-", 
             SuperscriptBox["mD", "2"]}], "]"}], "-", 
           RowBox[{"Log", "[", 
            SuperscriptBox["mD", "2"], "]"}]}], ")"}]}], 
        SuperscriptBox[
         RowBox[{"(", 
          SuperscriptBox["mD", "2"], ")"}], 
         RowBox[{"3", "/", "2"}]]]}], ")"}]}]}]}], ";"}]], "Input",
 CellChangeTimes->{{3.74558014653168*^9, 3.745580235242845*^9}, {
   3.745580366525984*^9, 3.745580396016095*^9}, 3.745580461920547*^9}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"ImVsS", "[", 
  RowBox[{"169", ",", 
   RowBox[{"mDcal", "[", 
    RowBox[{
     RowBox[{"2", "\[Pi]"}], ",", "0.155", ",", 
     RowBox[{"kfinal", "[", 
      RowBox[{"[", "1", "]"}], "]"}], ",", 
     RowBox[{"kfinal", "[", 
      RowBox[{"[", "2", "]"}], "]"}]}], "]"}], ",", 
   RowBox[{"\[Sigma]cont", "[", 
    RowBox[{"[", "1", "]"}], "]"}], ",", "0.155"}], "]"}]], "Input",
 CellChangeTimes->{{3.7455802394650803`*^9, 3.74558032195033*^9}, {
  3.745580406129286*^9, 3.7455804119442263`*^9}, {3.745580496402567*^9, 
  3.745580514850016*^9}, {3.745580621757516*^9, 3.7455806601566*^9}}],

Cell[BoxData[
 RowBox[{"7.659016731488183`", "\[VeryThinSpace]", "-", 
  RowBox[{"2.1476705768875475`*^-18", " ", "\[ImaginaryI]"}]}]], "Output",
 CellChangeTimes->{{3.745580262970105*^9, 3.745580322242455*^9}, {
   3.745580398432563*^9, 3.745580412204077*^9}, 3.745580464472505*^9, {
   3.745580496974977*^9, 3.745580515138104*^9}, {3.7455806238347*^9, 
   3.745580660518334*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"ImVs", "[", 
  RowBox[{"140", ",", 
   RowBox[{"mDcal", "[", 
    RowBox[{
     RowBox[{"2", "\[Pi]"}], ",", "0.155", ",", 
     RowBox[{"kfinal", "[", 
      RowBox[{"[", "1", "]"}], "]"}], ",", 
     RowBox[{"kfinal", "[", 
      RowBox[{"[", "2", "]"}], "]"}]}], "]"}], ",", 
   RowBox[{"\[Sigma]cont", "[", 
    RowBox[{"[", "1", "]"}], "]"}], ",", "0.155"}], "]"}]], "Input",
 CellChangeTimes->{{3.7455802782294817`*^9, 3.745580319982308*^9}, {
  3.745580403697583*^9, 3.745580414480033*^9}}],

Cell[BoxData["7.648378812364974`"], "Output",
 CellChangeTimes->{{3.7455802788512983`*^9, 3.74558032032445*^9}, {
   3.7455804010652027`*^9, 3.745580414792426*^9}, 3.745580466932502*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Block", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"mD", "=", 
     RowBox[{"mDcal", "[", 
      RowBox[{
       RowBox[{"2", "\[Pi]"}], ",", "0.155", ",", 
       RowBox[{"kfinal", "[", 
        RowBox[{"[", "1", "]"}], "]"}], ",", 
       RowBox[{"kfinal", "[", 
        RowBox[{"[", "2", "]"}], "]"}]}], "]"}]}], "}"}], ",", 
   RowBox[{"Show", "[", 
    RowBox[{"DiscretePlot", "[", 
     RowBox[{
      RowBox[{"ImVs", "[", 
       RowBox[{"r", ",", "mD", ",", 
        RowBox[{"\[Sigma]cont", "[", 
         RowBox[{"[", "1", "]"}], "]"}], ",", "0.155"}], "]"}], ",", 
      RowBox[{"{", 
       RowBox[{"r", ",", "1", ",", "140", ",", "10"}], "}"}], ",", 
      RowBox[{"Joined", "\[Rule]", "True"}], ",", 
      RowBox[{"Filling", "\[Rule]", "None"}], ",", 
      RowBox[{"AxesStyle", "\[Rule]", 
       RowBox[{"Directive", "[", 
        RowBox[{
         RowBox[{"FontSize", "\[Rule]", "25"}], ",", 
         RowBox[{"Thickness", "\[Rule]", "0.004"}], ",", 
         RowBox[{"FontFamily", "\[Rule]", "\"\<Helvetica\>\""}], ",", 
         "Black"}], "]"}]}], ",", 
      RowBox[{"BaseStyle", "\[Rule]", 
       RowBox[{"{", 
        RowBox[{"FontSize", "\[Rule]", "14"}], "}"}]}], ",", 
      RowBox[{"PlotRange", "\[Rule]", "All"}], ",", 
      RowBox[{"AspectRatio", "\[Rule]", "0.85"}], ",", 
      RowBox[{"AxesLabel", "\[Rule]", 
       RowBox[{"{", 
        RowBox[{"\"\<r [fm]\>\"", ",", "\"\<Im[V]\>\""}], "}"}]}], ",", 
      RowBox[{"PlotLabel", "\[Rule]", 
       RowBox[{"Style", "[", 
        RowBox[{"\"\<T=150MeV\>\"", ",", 
         RowBox[{"FontSize", "\[Rule]", "25"}], ",", 
         RowBox[{"FontFamily", "\[Rule]", "\"\<Helvetica\>\""}], ",", 
         "Black"}], "]"}]}], ",", 
      RowBox[{"ImageSize", "\[Rule]", 
       RowBox[{"{", 
        RowBox[{"600", ",", "600"}], "}"}]}]}], "]"}], "]"}]}], 
  "]"}]], "Input",
 CellChangeTimes->{{3.745579906095461*^9, 3.7455800170575523`*^9}}],

Cell[BoxData[
 GraphicsBox[{
   {RGBColor[0.368417, 0.506779, 0.709798], PointSize[0.012833333333333334`], 
    AbsoluteThickness[1.6]}, 
   {RGBColor[0.368417, 0.506779, 0.709798], PointSize[0.012833333333333334`], 
    AbsoluteThickness[1.6], 
    LineBox[{{{1., 0.0003922893722529458}, {11., 0.617646062104437}, {21., 
     2.0231804045422233`}, {31., 3.1984690951213177`}, {41., 
     4.02536169826194}, {51., 4.629837141131305}, {61., 5.103577759229679}, {
     71., 5.4949462227752806`}, {81., 5.829665061236119}, {91., 
     6.12270429816033}, {101., 6.383613023575253}, {111., 6.61909383303778}, {
     121., 6.836210907137895}, {131., 7.078719774855127}}}], {}, {}}},
  AspectRatio->0.85,
  Axes->True,
  AxesLabel->{
    FormBox["\"r [fm]\"", TraditionalForm], 
    FormBox["\"Im[V]\"", TraditionalForm]},
  AxesOrigin->{1., 0.0003922893722529458},
  AxesStyle->Directive[
   FontSize -> 25, Thickness -> 0.004, FontFamily -> "Helvetica", 
    GrayLevel[0]],
  BaseStyle->{FontSize -> 14},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  ImageSize->{600, 600},
  Method->{
   "MessagesHead" -> DiscretePlot, "AxisPadding" -> Scaled[0.02], 
    "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
    AbsolutePointSize[6], "DefaultPlotStyle" -> {
      Directive[
       RGBColor[0.368417, 0.506779, 0.709798], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.880722, 0.611041, 0.142051], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.560181, 0.691569, 0.194885], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.922526, 0.385626, 0.209179], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.528488, 0.470624, 0.701351], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.772079, 0.431554, 0.102387], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.363898, 0.618501, 0.782349], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[1, 0.75, 0], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.647624, 0.37816, 0.614037], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.571589, 0.586483, 0.], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.915, 0.3325, 0.2125], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.40082222609352647`, 0.5220066643438841, 0.85], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.9728288904374106, 0.621644452187053, 0.07336199581899142], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.736782672705901, 0.358, 0.5030266573755369], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.28026441037696703`, 0.715, 0.4292089322474965], 
       AbsoluteThickness[1.6]]}, "DomainPadding" -> Scaled[0.02], 
    "PointSizeFunction" -> "SmallPointSize", "RangePadding" -> Scaled[0.05]},
  PlotLabel->FormBox[
    StyleBox["\"T=150MeV\"", FontSize -> 25, FontFamily -> "Helvetica", 
     GrayLevel[0], StripOnInput -> False], TraditionalForm],
  PlotRange->{{1., 131.}, {0.0003922893722529458, 7.078719774855127}},
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.02], 
     Scaled[0.02]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{{3.74557991687608*^9, 3.7455800176717777`*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"ImVs", "[", 
  RowBox[{"20000", ",", 
   RowBox[{"mDcal", "[", 
    RowBox[{
     RowBox[{"2", "\[Pi]"}], ",", "0.155", ",", 
     RowBox[{"kfinal", "[", 
      RowBox[{"[", "1", "]"}], "]"}], ",", 
     RowBox[{"kfinal", "[", 
      RowBox[{"[", "2", "]"}], "]"}]}], "]"}], ",", 
   RowBox[{"\[Sigma]cont", "[", 
    RowBox[{"[", "1", "]"}], "]"}], ",", "0.155"}], "]"}]], "Input",
 CellChangeTimes->{{3.745577603754464*^9, 3.74557762838006*^9}, {
  3.7455806010440903`*^9, 3.745580603507339*^9}}],

Cell[BoxData["4.545805220935398816247501517108855953`15.954589770191005*^\
1789"], "Output",
 CellChangeTimes->{3.7455776309339457`*^9, 3.7455806041695957`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"ImVsS", "[", 
  RowBox[{"20000", ",", 
   RowBox[{"mDcal", "[", 
    RowBox[{
     RowBox[{"2", "\[Pi]"}], ",", "0.155", ",", 
     RowBox[{"kfinal", "[", 
      RowBox[{"[", "1", "]"}], "]"}], ",", 
     RowBox[{"kfinal", "[", 
      RowBox[{"[", "2", "]"}], "]"}]}], "]"}], ",", 
   RowBox[{"\[Sigma]cont", "[", 
    RowBox[{"[", "1", "]"}], "]"}], ",", "0.155"}], "]"}]], "Input",
 CellChangeTimes->{{3.745580598596593*^9, 3.7455806094701967`*^9}}],

Cell[BoxData[
 RowBox[{"19.3543388699169`", "\[VeryThinSpace]", "+", 
  RowBox[{"0.`", " ", "\[ImaginaryI]"}]}]], "Output",
 CellChangeTimes->{3.745580609909973*^9}]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"swaveccspectrawsb", "[", 
    RowBox[{"n_", ",", "Tscan_"}], "]"}], ":=", 
   RowBox[{"Block", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{"T", "=", 
        RowBox[{"Tscan", "[", 
         RowBox[{"[", "n", "]"}], "]"}]}], ",", 
       RowBox[{"mD", "=", 
        RowBox[{"mDcal", "[", 
         RowBox[{
          RowBox[{"2", "\[Pi]"}], ",", 
          RowBox[{"Tscan", "[", 
           RowBox[{"[", "n", "]"}], "]"}], ",", 
          RowBox[{"kfinal", "[", 
           RowBox[{"[", "1", "]"}], "]"}], ",", 
          RowBox[{"kfinal", "[", 
           RowBox[{"[", "2", "]"}], "]"}]}], "]"}]}], ",", 
       RowBox[{"\[Sigma]", "=", 
        RowBox[{"\[Sigma]cont", "[", 
         RowBox[{"[", "1", "]"}], "]"}]}], ",", 
       RowBox[{"\[Alpha]", "=", 
        RowBox[{"\[Alpha]cont", "[", 
         RowBox[{"[", "1", "]"}], "]"}]}], ",", 
       RowBox[{"c", "=", 
        RowBox[{"ccont", "[", 
         RowBox[{"[", "1", "]"}], "]"}]}], ",", 
       RowBox[{"M", "=", "Mc"}], ",", 
       RowBox[{"l", "=", "0"}], ",", 
       RowBox[{"\[Omega]min", "=", 
        RowBox[{"-", "1"}]}], ",", 
       RowBox[{"\[Omega]max", "=", "2"}], ",", "ccsT", ",", "Tstring", ",", 
       "inf"}], "}"}], ",", "\[IndentingNewLine]", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"rev", "=", 
       RowBox[{"Interpolation", "[", 
        RowBox[{"Join", "[", 
         RowBox[{
          RowBox[{"ParallelTable", "[", 
           RowBox[{
            RowBox[{"{", 
             RowBox[{"r", ",", 
              RowBox[{"ReV", "[", 
               RowBox[{
               "r", ",", "mD", ",", "\[Alpha]", ",", "\[Sigma]", ",", "c"}], 
               "]"}]}], "}"}], ",", 
            RowBox[{"{", 
             RowBox[{"r", ",", 
              RowBox[{"1", "/", "1000"}], ",", "10", ",", 
              RowBox[{"1", "/", "100"}]}], "}"}]}], "]"}], ",", 
          RowBox[{"ParallelTable", "[", 
           RowBox[{
            RowBox[{"{", 
             RowBox[{"r", ",", 
              RowBox[{"ReV", "[", 
               RowBox[{
               "r", ",", "mD", ",", "\[Alpha]", ",", "\[Sigma]", ",", "c"}], 
               "]"}]}], "}"}], ",", 
            RowBox[{"{", 
             RowBox[{"r", ",", 
              RowBox[{"101", "/", "10"}], ",", "25", ",", 
              RowBox[{"1", "/", "10"}]}], "}"}]}], "]"}], ",", 
          RowBox[{"ParallelTable", "[", 
           RowBox[{
            RowBox[{"{", 
             RowBox[{"r", ",", 
              RowBox[{"ReV", "[", 
               RowBox[{
               "r", ",", "mD", ",", "\[Alpha]", ",", "\[Sigma]", ",", "c"}], 
               "]"}]}], "}"}], ",", 
            RowBox[{"{", 
             RowBox[{"r", ",", "26", ",", "1500", ",", "1"}], "}"}]}], "]"}], 
          ",", 
          RowBox[{"ParallelTable", "[", 
           RowBox[{
            RowBox[{"{", 
             RowBox[{"r", ",", 
              RowBox[{"ReV", "[", 
               RowBox[{
               "r", ",", "mD", ",", "\[Alpha]", ",", "\[Sigma]", ",", "c"}], 
               "]"}]}], "}"}], ",", 
            RowBox[{"{", 
             RowBox[{"r", ",", "1510", ",", "20000", ",", "1000"}], "}"}]}], 
           "]"}]}], "]"}], "]"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"imv", "=", 
       RowBox[{"Interpolation", "[", 
        RowBox[{"Join", "[", 
         RowBox[{
          RowBox[{"ParallelTable", "[", 
           RowBox[{
            RowBox[{"{", 
             RowBox[{"r", ",", 
              RowBox[{"ImV", "[", 
               RowBox[{
               "r", ",", "mD", ",", "\[Alpha]", ",", "\[Sigma]", ",", "T"}], 
               "]"}]}], "}"}], ",", 
            RowBox[{"{", 
             RowBox[{"r", ",", 
              RowBox[{"1", "/", "1000"}], ",", "10", ",", 
              RowBox[{"1", "/", "100"}]}], "}"}]}], "]"}], ",", 
          RowBox[{"ParallelTable", "[", 
           RowBox[{
            RowBox[{"{", 
             RowBox[{"r", ",", 
              RowBox[{"ImV", "[", 
               RowBox[{
               "r", ",", "mD", ",", "\[Alpha]", ",", "\[Sigma]", ",", "T"}], 
               "]"}]}], "}"}], ",", 
            RowBox[{"{", 
             RowBox[{"r", ",", 
              RowBox[{"101", "/", "10"}], ",", "25", ",", 
              RowBox[{"1", "/", "10"}]}], "}"}]}], "]"}], ",", 
          RowBox[{"ParallelTable", "[", 
           RowBox[{
            RowBox[{"{", 
             RowBox[{"r", ",", 
              RowBox[{"ImV", "[", 
               RowBox[{
               "r", ",", "mD", ",", "\[Alpha]", ",", "\[Sigma]", ",", "T"}], 
               "]"}]}], "}"}], ",", 
            RowBox[{"{", 
             RowBox[{"r", ",", "26", ",", "140", ",", "1"}], "}"}]}], "]"}], 
          ",", 
          RowBox[{"ParallelTable", "[", 
           RowBox[{
            RowBox[{"{", 
             RowBox[{"r", ",", 
              RowBox[{
               RowBox[{"ImVc", "[", 
                RowBox[{"r", ",", "mD", ",", "\[Alpha]", ",", "T"}], "]"}], 
               "+", 
               RowBox[{"ImVsS", "[", 
                RowBox[{
                 RowBox[{"r", "+", "18"}], ",", "mD", ",", "\[Sigma]", ",", 
                 "T"}], "]"}]}]}], "}"}], ",", 
            RowBox[{"{", 
             RowBox[{"r", ",", "141", ",", "1500", ",", "1"}], "}"}]}], "]"}],
           ",", 
          RowBox[{"ParallelTable", "[", 
           RowBox[{
            RowBox[{"{", 
             RowBox[{"r", ",", 
              RowBox[{
               RowBox[{"ImVc", "[", 
                RowBox[{
                 RowBox[{"r", "+", "18"}], ",", "mD", ",", "\[Alpha]", ",", 
                 "T"}], "]"}], "+", 
               RowBox[{"ImVsS", "[", 
                RowBox[{"r", ",", "mD", ",", "\[Sigma]", ",", "T"}], 
                "]"}]}]}], "}"}], ",", 
            RowBox[{"{", 
             RowBox[{"r", ",", "1510", ",", "20000", ",", "1000"}], "}"}]}], 
           "]"}]}], "]"}], "]"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"V", "[", "x_", "]"}], ":=", 
       RowBox[{
        RowBox[{"rev", "[", "x", "]"}], "+", 
        RowBox[{"\[ImaginaryI]", " ", 
         RowBox[{"imv", "[", "x", "]"}]}]}]}], ";", "\[IndentingNewLine]", 
      "\[IndentingNewLine]", 
      RowBox[{"\[Rho]table", "=", 
       RowBox[{
        RowBox[{
         RowBox[{
          RowBox[{"ParallelDo", "[", 
           RowBox[{
            RowBox[{
             RowBox[{"\[Omega]", "=", 
              RowBox[{"\[Omega]min", "+", 
               RowBox[{
                RowBox[{"(", 
                 RowBox[{"it", "-", "1"}], ")"}], " ", "d\[Omega]", " ", 
                "M"}]}]}], ";", 
             RowBox[{"inf", "=", 
              RowBox[{"40", "+", 
               RowBox[{"500", "*", "it", "*", "d\[Omega]"}]}]}], ";", 
             "\[IndentingNewLine]", 
             RowBox[{"(*", 
              RowBox[{
               RowBox[{"s0", "=", 
                RowBox[{"NDSolve", "[", 
                 RowBox[{
                  RowBox[{"{", 
                   RowBox[{
                    RowBox[{
                    RowBox[{
                    RowBox[{
                    RowBox[{"(", 
                    RowBox[{"\[Omega]", "-", 
                    FractionBox[
                    RowBox[{"l", 
                    RowBox[{"(", 
                    RowBox[{"l", "+", "1"}], ")"}]}], 
                    RowBox[{"M", " ", 
                    SuperscriptBox["r", "2"]}]], "-", 
                    RowBox[{"Re", "[", 
                    RowBox[{"V", "[", "r", "]"}], "]"}], "+", 
                    RowBox[{"\[ImaginaryI]", " ", 
                    RowBox[{"Abs", "[", 
                    RowBox[{"Im", "[", 
                    RowBox[{"V", "[", "r", "]"}], "]"}], "]"}]}]}], ")"}], 
                    RowBox[{"gr", "[", "r", "]"}]}], "+", 
                    RowBox[{
                    FractionBox["1", "M"], 
                    RowBox[{
                    RowBox[{"gr", "''"}], "[", "r", "]"}]}]}], "\[Equal]", 
                    "0"}], ",", " ", "\[IndentingNewLine]", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"gr", "'"}], "[", "\[Delta]", "]"}], "\[Equal]", 
                    RowBox[{
                    RowBox[{"2", " ", "\[Delta]", 
                    SuperscriptBox[
                    RowBox[{"(", 
                    RowBox[{"\[Alpha]", " ", "M"}], ")"}], "2"]}], "-", 
                    RowBox[{
                    FractionBox["3", "4"], 
                    SuperscriptBox["\[Delta]", "2"], 
                    SuperscriptBox[
                    RowBox[{"(", 
                    RowBox[{"M", " ", "\[Alpha]"}], ")"}], "3"]}]}]}], ",", 
                    "\[IndentingNewLine]", " ", 
                    RowBox[{
                    RowBox[{"gr", "[", "\[Delta]", "]"}], "==", " ", 
                    RowBox[{
                    RowBox[{
                    SuperscriptBox["\[Delta]", "2"], 
                    SuperscriptBox[
                    RowBox[{"(", 
                    RowBox[{"\[Alpha]", " ", "M"}], ")"}], "2"]}], "-", 
                    RowBox[{
                    FractionBox["1", "4"], 
                    SuperscriptBox["\[Delta]", "3"], 
                    SuperscriptBox[
                    RowBox[{"(", 
                    RowBox[{"M", " ", "\[Alpha]"}], ")"}], "3"]}]}]}]}], 
                   "}"}], ",", "gr", ",", 
                  RowBox[{"{", 
                   RowBox[{"r", ",", "\[Delta]", ",", "inf"}], "}"}], ",", 
                  RowBox[{"PrecisionGoal", "\[Rule]", "10"}], ",", 
                  RowBox[{"MaxSteps", "\[Rule]", "1000000"}]}], "]"}]}], ";", 
               "\[IndentingNewLine]", 
               RowBox[{
                RowBox[{"gr1", "[", "r_", "]"}], "=", 
                SubscriptBox[
                 RowBox[{"(", 
                  RowBox[{
                   RowBox[{"gr", "[", "r", "]"}], "/.", "s0"}], ")"}], 
                 RowBox[{
                 "\[LeftDoubleBracket]", "1", "\[RightDoubleBracket]"}]]}], 
               ";"}], "*)"}], "\[IndentingNewLine]", 
             RowBox[{"s01", "=", 
              RowBox[{"NDSolve", "[", 
               RowBox[{
                RowBox[{"{", 
                 RowBox[{
                  RowBox[{
                   RowBox[{
                    RowBox[{
                    RowBox[{"(", 
                    RowBox[{"\[Omega]", "-", 
                    FractionBox[
                    RowBox[{"l", 
                    RowBox[{"(", 
                    RowBox[{"l", "+", "1"}], ")"}]}], 
                    RowBox[{"M", " ", 
                    SuperscriptBox["r", "2"]}]], "-", 
                    RowBox[{"Re", "[", 
                    RowBox[{"V", "[", "r", "]"}], "]"}], "+", 
                    RowBox[{"\[ImaginaryI]", " ", 
                    RowBox[{"Abs", "[", 
                    RowBox[{"Im", "[", 
                    RowBox[{"V", "[", "r", "]"}], "]"}], "]"}]}]}], ")"}], 
                    RowBox[{"gr", "[", "r", "]"}]}], "+", 
                    RowBox[{
                    FractionBox["1", "M"], 
                    RowBox[{
                    RowBox[{"gr", "''"}], "[", "r", "]"}]}]}], "\[Equal]", 
                   "0"}], ",", " ", "\[IndentingNewLine]", 
                  RowBox[{
                   RowBox[{
                    RowBox[{"gr", "'"}], "[", "\[Delta]", "]"}], "\[Equal]", 
                   RowBox[{
                    RowBox[{"(", 
                    RowBox[{"\[Alpha]", " ", "M"}], ")"}], "-", 
                    RowBox[{"\[Delta]", 
                    SuperscriptBox[
                    RowBox[{"(", 
                    RowBox[{"M", " ", "\[Alpha]"}], ")"}], "2"]}]}]}], ",", 
                  "\[IndentingNewLine]", " ", 
                  RowBox[{
                   RowBox[{"gr", "[", "\[Delta]", "]"}], "\[Equal]", 
                   RowBox[{
                    RowBox[{"\[Delta]", 
                    RowBox[{"(", 
                    RowBox[{"\[Alpha]", " ", "M"}], ")"}]}], "-", " ", 
                    RowBox[{
                    FractionBox["1", "2"], 
                    SuperscriptBox["\[Delta]", "2"], 
                    SuperscriptBox[
                    RowBox[{"(", 
                    RowBox[{"\[Alpha]", " ", "M"}], ")"}], "2"]}]}]}]}], 
                 "}"}], ",", "gr", ",", 
                RowBox[{"{", 
                 RowBox[{"r", ",", "\[Delta]", ",", "inf"}], "}"}]}], "]"}]}],
              ";", "\[IndentingNewLine]", 
             RowBox[{
              RowBox[{"gr0", "[", "r_", "]"}], "=", 
              SubscriptBox[
               RowBox[{"(", 
                RowBox[{
                 RowBox[{"gr", "[", "r", "]"}], "/.", "s01"}], ")"}], 
               RowBox[{
               "\[LeftDoubleBracket]", "1", "\[RightDoubleBracket]"}]]}], ";",
              "\[IndentingNewLine]", 
             RowBox[{"s1", "=", 
              RowBox[{"NDSolve", "[", 
               RowBox[{
                RowBox[{"{", 
                 RowBox[{
                  RowBox[{
                   RowBox[{
                    RowBox[{"rho", "'"}], "[", "x", "]"}], "\[Equal]", 
                   RowBox[{
                    RowBox[{"-", 
                    FractionBox[
                    RowBox[{" ", 
                    RowBox[{"6", " ", "Nc", " ", 
                    SuperscriptBox["M", "2"], " ", "\[Alpha]"}]}], 
                    RowBox[{"4", "\[Pi]"}]]}], 
                    RowBox[{"Im", "[", 
                    FractionBox["1", 
                    SuperscriptBox[
                    RowBox[{"(", 
                    RowBox[{"gr0", "[", "x", "]"}], ")"}], "2"]], 
                    RowBox[{"(*", 
                    RowBox[{"+", 
                    FractionBox["36", 
                    SuperscriptBox[
                    RowBox[{"(", 
                    RowBox[{"gr1", "[", "x", "]"}], ")"}], "2"]]}], "*)"}], 
                    "]"}]}]}], ",", 
                  RowBox[{
                   RowBox[{"rho", "[", "\[Delta]", "]"}], "\[Equal]", "0"}]}],
                  "}"}], ",", "rho", ",", 
                RowBox[{"{", 
                 RowBox[{"x", ",", "\[Delta]", ",", "inf"}], "}"}]}], "]"}]}],
              ";", "\[IndentingNewLine]", 
             RowBox[{
              RowBox[{"rhow", "[", "r_", "]"}], "=", 
              SubscriptBox[
               RowBox[{"(", 
                RowBox[{
                 RowBox[{"rho", "[", "r", "]"}], "/.", "s1"}], ")"}], 
               RowBox[{
               "\[LeftDoubleBracket]", "1", "\[RightDoubleBracket]"}]]}], ";",
              "\[IndentingNewLine]", 
             RowBox[{"ParallelSow", "[", 
              RowBox[{"{", 
               RowBox[{
                RowBox[{"\[Omega]", "+", 
                 RowBox[{"2", "M"}]}], ",", 
                RowBox[{"rhow", "[", "inf", "]"}]}], "}"}], "]"}]}], ",", 
            RowBox[{"{", 
             RowBox[{"it", ",", "1", ",", 
              FractionBox[
               RowBox[{"\[Omega]max", "-", "\[Omega]min"}], 
               RowBox[{"d\[Omega]", " ", "M"}]]}], "}"}]}], "]"}], "//", 
          "Reap"}], "//", "Last"}], "//", "First"}]}], ";", 
      "\[IndentingNewLine]", "\[IndentingNewLine]", 
      RowBox[{"ccsT", "=", 
       RowBox[{"ParallelTable", "[", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{
           RowBox[{"\[Rho]table", "[", 
            RowBox[{"[", 
             RowBox[{"i", ",", "1"}], "]"}], "]"}], ",", 
           FractionBox[
            RowBox[{"-", 
             RowBox[{"\[Rho]table", "[", 
              RowBox[{"[", 
               RowBox[{"i", ",", "2"}], "]"}], "]"}]}], 
            SuperscriptBox[
             RowBox[{"\[Rho]table", "[", 
              RowBox[{"[", 
               RowBox[{"i", ",", "1"}], "]"}], "]"}], "2"]]}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"i", ",", "1", ",", 
           RowBox[{"Length", "[", "\[Rho]table", "]"}]}], "}"}]}], "]"}]}], 
      ";", "\[IndentingNewLine]", 
      RowBox[{"Tstring", "=", 
       RowBox[{"Round", "[", 
        RowBox[{"T", "*", "1000"}], "]"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"Export", "[", 
       RowBox[{
        RowBox[{"\"\<spectraldata/Tscan/cc/swccT\>\"", "<>", 
         RowBox[{"ToString", "[", "Tstring", "]"}], "<>", 
         "\"\<spectrawsb.dat\>\""}], ",", 
        RowBox[{"Sort", "[", "ccsT", "]"}]}], "]"}], ";"}]}], 
    "\[IndentingNewLine]", "]"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.724397604460712*^9, 3.724397621092863*^9}, {
   3.724398705481254*^9, 3.724398705798315*^9}, {3.72440624506767*^9, 
   3.7244062457361317`*^9}, {3.7244423136168756`*^9, 3.724442340980721*^9}, {
   3.7244423712224417`*^9, 3.724442377050403*^9}, {3.724442465925974*^9, 
   3.724442518695669*^9}, {3.7244426255599117`*^9, 3.724442639076613*^9}, {
   3.724443729204352*^9, 3.724443729749022*^9}, {3.724443881656342*^9, 
   3.7244438842850027`*^9}, 3.725261621115453*^9, 3.72526166634648*^9, {
   3.725271550289123*^9, 3.7252715504130163`*^9}, {3.725271609402791*^9, 
   3.7252716095188437`*^9}, {3.7252717762497*^9, 3.725271782362536*^9}, {
   3.725271824500347*^9, 3.725271826035269*^9}, {3.725271857701564*^9, 
   3.725271858192912*^9}, {3.725271928114049*^9, 3.7252719496618757`*^9}, {
   3.725271981807578*^9, 3.725271987122878*^9}, {3.725273718896678*^9, 
   3.72527377251343*^9}, {3.725273963159111*^9, 3.725273966198284*^9}, {
   3.725364382855975*^9, 3.725364384697238*^9}, {3.725364432753635*^9, 
   3.725364433681274*^9}, {3.725364595553596*^9, 3.725364595868292*^9}, {
   3.725364661141473*^9, 3.725364661301785*^9}, {3.725365068510941*^9, 
   3.7253650691073112`*^9}, {3.7256202924505177`*^9, 
   3.7256202938854313`*^9}, {3.7256265502253428`*^9, 3.725626559021003*^9}, {
   3.725798091627001*^9, 3.725798108963685*^9}, {3.725798150844287*^9, 
   3.725798156038417*^9}, {3.726312422974263*^9, 3.726312439922279*^9}, {
   3.726313778060986*^9, 3.726313794010726*^9}, {3.726313854887352*^9, 
   3.726313855417986*^9}, {3.726377533478507*^9, 3.726377535012369*^9}, {
   3.726379310729051*^9, 3.726379315935656*^9}, {3.726379351066524*^9, 
   3.7263793563685627`*^9}, 3.7263814533362722`*^9, {3.726468979312665*^9, 
   3.726469044993416*^9}, {3.726564279540083*^9, 3.726564288774165*^9}, {
   3.726564330005303*^9, 3.726564342424973*^9}, {3.7265645007454853`*^9, 
   3.7265645054085903`*^9}, 3.726565145221386*^9, {3.726836923420138*^9, 
   3.726836925204391*^9}, {3.7268417497448387`*^9, 3.726841749854889*^9}, {
   3.727357927216405*^9, 3.7273579306359463`*^9}, 3.72735811608375*^9, {
   3.7273582875862513`*^9, 3.727358296888235*^9}, {3.727520051444908*^9, 
   3.7275200665503483`*^9}, {3.727539483513708*^9, 3.72753949210455*^9}, {
   3.7275398377710333`*^9, 3.727539869000495*^9}, {3.7275879806550293`*^9, 
   3.727587984698921*^9}, {3.727606150288821*^9, 3.727606150994812*^9}, {
   3.728932814314426*^9, 3.728932860160056*^9}, 3.7289333254815903`*^9, 
   3.7299208725344887`*^9, {3.730007040539275*^9, 3.7300070509717903`*^9}, {
   3.730007357183831*^9, 3.7300073662633142`*^9}, {3.7331192829046183`*^9, 
   3.733119300197537*^9}, {3.733120717385792*^9, 3.733120717697629*^9}, {
   3.7331222711038847`*^9, 3.733122272703622*^9}, {3.733211538849382*^9, 
   3.7332115515038567`*^9}, {3.7332289443370447`*^9, 
   3.7332289447842827`*^9}, {3.742215948846467*^9, 3.742215959437643*^9}, {
   3.742216025305929*^9, 3.742216093257207*^9}, {3.7422172078868933`*^9, 
   3.7422172275906973`*^9}, 3.74221727383118*^9, {3.742217585069265*^9, 
   3.742217591716959*^9}, {3.7422176229823923`*^9, 3.742217653035615*^9}, {
   3.742269341112874*^9, 3.742269371527761*^9}, 3.742275694936644*^9, {
   3.742289467062118*^9, 3.742289486771803*^9}, {3.742289520463562*^9, 
   3.7422896027136*^9}, {3.7422896364561243`*^9, 3.74228964347093*^9}, {
   3.742289678232355*^9, 3.742289708137301*^9}, {3.7422897506101*^9, 
   3.7422897587096577`*^9}, {3.7422920316457787`*^9, 3.742292034487727*^9}, 
   3.742292186682322*^9, {3.742292303240778*^9, 3.742292303483521*^9}, {
   3.742292362481593*^9, 3.742292372544711*^9}, {3.742292408813004*^9, 
   3.742292447857381*^9}, {3.7422968206130743`*^9, 3.742296843480155*^9}, {
   3.7422970160890417`*^9, 3.742297024417719*^9}, {3.742297074890059*^9, 
   3.74229711910509*^9}, {3.7422973083294992`*^9, 3.742297309298213*^9}, {
   3.742297354168077*^9, 3.742297359897736*^9}, {3.742297415918168*^9, 
   3.7422974232482452`*^9}, {3.742297467739311*^9, 3.742297612963316*^9}, {
   3.7422977860232887`*^9, 3.7422977903561068`*^9}, {3.74229798181938*^9, 
   3.742298023677857*^9}, {3.7422980561712513`*^9, 3.74229805925661*^9}, 
   3.742298106308654*^9, {3.742300221204397*^9, 3.742300269720365*^9}, {
   3.742300416216001*^9, 3.742300416917211*^9}, {3.742300536315893*^9, 
   3.742300546756034*^9}, {3.742300626604027*^9, 3.742300638323701*^9}, {
   3.7423006769018583`*^9, 3.7423007163572683`*^9}, {3.7435037431402884`*^9, 
   3.743503799356997*^9}, {3.7435038425347443`*^9, 3.743503908279688*^9}, {
   3.7435046316079397`*^9, 3.743504651390107*^9}, 3.745326235801956*^9, {
   3.745577559422867*^9, 3.745577586968154*^9}, {3.745580528080043*^9, 
   3.74558059234057*^9}, {3.745580690187639*^9, 3.745580708875317*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Tscancorig", "[", 
  RowBox[{"[", 
   RowBox[{"5", ";;", "7"}], "]"}], "]"}]], "Input",
 CellChangeTimes->{{3.745580739493051*^9, 3.74558077207876*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"0.154`", ",", "0.155`", ",", "0.156`"}], "}"}]], "Output",
 CellChangeTimes->{{3.745580741288967*^9, 3.745580792412156*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"Do", "[", 
   RowBox[{
    RowBox[{"swaveccspectrawsb", "[", 
     RowBox[{"i", ",", 
      RowBox[{"Tscancorig", "[", 
       RowBox[{"[", 
        RowBox[{"5", ";;", "7"}], "]"}], "]"}]}], "]"}], ",", 
    RowBox[{"{", 
     RowBox[{"i", ",", 
      RowBox[{"Length", "[", 
       RowBox[{"Tscancorig", "[", 
        RowBox[{"[", 
         RowBox[{"5", ";;", "7"}], "]"}], "]"}], "]"}]}], "}"}]}], "]"}], "//",
   "AbsoluteTiming"}]], "Input",
 CellChangeTimes->{{3.7455807369101477`*^9, 3.745580776865053*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"5173.827289`", ",", "Null"}], "}"}]], "Output",
 CellChangeTimes->{3.745585979013007*^9}]
}, Open  ]]
}, Closed]]
},
WindowSize->{1920, 1019},
WindowMargins->{{0, Automatic}, {0, 20}},
FrontEndVersion->"11.0 for Linux x86 (64-bit) (September 21, 2016)",
StyleDefinitions->"Default.nb"
]
(* End of Notebook Content *)

(* Internal cache information *)
(*CellTagsOutline
CellTagsIndex->{}
*)
(*CellTagsIndex
CellTagsIndex->{}
*)
(*NotebookFileOutline
Notebook[{
Cell[558, 20, 437, 8, 34, "Input"],
Cell[CellGroupData[{
Cell[1020, 32, 207, 3, 65, "Section"],
Cell[1230, 37, 15876, 455, 1281, "Input"]
}, Closed]],
Cell[CellGroupData[{
Cell[17143, 497, 160, 2, 51, "Section"],
Cell[17306, 501, 2254, 59, 264, "Input"],
Cell[CellGroupData[{
Cell[19585, 564, 113, 1, 45, "Subsection"],
Cell[19701, 567, 5801, 165, 332, "Input"],
Cell[CellGroupData[{
Cell[25527, 736, 1839, 49, 117, "Input"],
Cell[27369, 787, 18955, 327, 227, "Output"]
}, Open  ]],
Cell[46339, 1117, 1331, 39, 63, "Input"],
Cell[CellGroupData[{
Cell[47695, 1160, 621, 17, 34, "Input"],
Cell[48319, 1179, 468, 6, 32, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[48824, 1190, 414, 13, 34, "Input"],
Cell[49241, 1205, 1187, 18, 57, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[50465, 1228, 198, 6, 34, "Input"],
Cell[50666, 1236, 1826, 28, 80, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[52529, 1269, 107, 1, 35, "Subsubsection"],
Cell[52639, 1272, 2992, 93, 154, "Input"],
Cell[55634, 1367, 4402, 94, 80, "Input"],
Cell[60039, 1463, 7156, 160, 302, "Input"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[67244, 1629, 154, 2, 45, "Subsection"],
Cell[CellGroupData[{
Cell[67423, 1635, 3045, 81, 146, "Input"],
Cell[70471, 1718, 118733, 1977, 1215, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[189241, 3700, 2878, 79, 146, "Input"],
Cell[192122, 3781, 54596, 926, 1215, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[246755, 4712, 2876, 79, 146, "Input"],
Cell[249634, 4793, 102698, 1716, 1215, "Output"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[352381, 6515, 122, 2, 44, "Subsection"],
Cell[352506, 6519, 246, 6, 57, "Input"],
Cell[352755, 6527, 412, 9, 76, "Input"],
Cell[CellGroupData[{
Cell[353192, 6540, 236, 3, 35, "Subsubsection"],
Cell[353431, 6545, 17155, 373, 647, "Input"],
Cell[370589, 6920, 12337, 307, 647, "Input"],
Cell[382929, 7229, 12335, 307, 647, "Input"]
}, Closed]],
Cell[CellGroupData[{
Cell[395301, 7541, 186, 2, 29, "Subsubsection"],
Cell[395490, 7545, 20524, 450, 825, "Input"],
Cell[416017, 7997, 15759, 385, 848, "Input"],
Cell[431779, 8384, 15761, 385, 848, "Input"]
}, Closed]],
Cell[CellGroupData[{
Cell[447577, 8774, 237, 3, 29, "Subsubsection"],
Cell[447817, 8779, 16980, 371, 647, "Input"],
Cell[464800, 9152, 12263, 306, 647, "Input"],
Cell[477066, 9460, 12265, 306, 647, "Input"]
}, Closed]],
Cell[CellGroupData[{
Cell[489368, 9771, 287, 4, 29, "Subsubsection"],
Cell[489658, 9777, 20572, 450, 825, "Input"],
Cell[510233, 10229, 20627, 451, 848, "Input"],
Cell[530863, 10682, 20627, 451, 848, "Input"]
}, Open  ]],
Cell[CellGroupData[{
Cell[551527, 11138, 102, 1, 35, "Subsubsection"],
Cell[551632, 11141, 208, 4, 32, "Input"],
Cell[551843, 11147, 359, 10, 34, "Input"],
Cell[552205, 11159, 339, 10, 34, "Input"],
Cell[552547, 11171, 339, 10, 34, "Input"],
Cell[552889, 11183, 385, 11, 34, "Input"],
Cell[553277, 11196, 336, 10, 34, "Input"],
Cell[553616, 11208, 339, 10, 34, "Input"],
Cell[553958, 11220, 761, 16, 34, "Input"],
Cell[554722, 11238, 464, 12, 34, "Input"],
Cell[555189, 11252, 459, 12, 34, "Input"],
Cell[CellGroupData[{
Cell[555673, 11268, 360, 10, 34, "Input"],
Cell[556036, 11280, 132, 3, 34, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[556205, 11288, 339, 10, 34, "Input"],
Cell[556547, 11300, 130, 3, 34, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[556714, 11308, 336, 10, 34, "Input"],
Cell[557053, 11320, 129, 3, 34, "Output"]
}, Open  ]]
}, Open  ]]
}, Closed]]
}, Open  ]],
Cell[CellGroupData[{
Cell[557255, 11331, 205, 3, 65, "Section"],
Cell[CellGroupData[{
Cell[557485, 11338, 1459, 34, 34, "Input"],
Cell[558947, 11374, 2251, 37, 80, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[561235, 11416, 1508, 34, 34, "Input"],
Cell[562746, 11452, 1923, 31, 80, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[564706, 11488, 1557, 35, 34, "Input"],
Cell[566266, 11525, 1958, 32, 80, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[568261, 11562, 1167, 30, 34, "Input"],
Cell[569431, 11594, 1855, 29, 80, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[571323, 11628, 1027, 28, 34, "Input"],
Cell[572353, 11658, 1625, 28, 80, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[574015, 11691, 1025, 28, 34, "Input"],
Cell[575043, 11721, 1813, 29, 80, "Output"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[576905, 11756, 264, 3, 65, "Section"],
Cell[577172, 11761, 1872, 59, 61, "Input"],
Cell[CellGroupData[{
Cell[579069, 11824, 621, 14, 34, "Input"],
Cell[579693, 11840, 113, 1, 32, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[579843, 11846, 2123, 51, 117, "Input"],
Cell[581969, 11899, 4342, 104, 615, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[586348, 12008, 1311, 39, 56, "Input"],
Cell[587662, 12049, 8188, 223, 191, "Output"]
}, Open  ]],
Cell[595865, 12275, 5397, 158, 248, "Input"],
Cell[CellGroupData[{
Cell[601287, 12437, 616, 14, 34, "Input"],
Cell[601906, 12453, 381, 6, 32, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[602324, 12464, 521, 13, 34, "Input"],
Cell[602848, 12479, 186, 2, 32, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[603071, 12486, 1947, 48, 80, "Input"],
Cell[605021, 12536, 3414, 86, 615, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[608472, 12627, 522, 13, 34, "Input"],
Cell[608997, 12642, 160, 2, 32, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[609194, 12649, 475, 12, 34, "Input"],
Cell[609672, 12663, 165, 3, 32, "Output"]
}, Open  ]],
Cell[609852, 12669, 21225, 469, 761, "Input"],
Cell[CellGroupData[{
Cell[631102, 13142, 176, 4, 34, "Input"],
Cell[631281, 13148, 164, 3, 34, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[631482, 13156, 548, 16, 34, "Input"],
Cell[632033, 13174, 129, 3, 34, "Output"]
}, Open  ]]
}, Closed]]
}
]
*)

