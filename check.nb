(* Content-type: application/vnd.wolfram.mathematica *)

(*** Wolfram Notebook File ***)
(* http://www.wolfram.com/nb *)

(* CreatedBy='Mathematica 11.0' *)

(*CacheID: 234*)
(* Internal cache information:
NotebookFileLineBreakTest
NotebookFileLineBreakTest
NotebookDataPosition[       158,          7]
NotebookDataLength[    303202,       5549]
NotebookOptionsPosition[    301993,       5505]
NotebookOutlinePosition[    302351,       5521]
CellTagsIndexPosition[    302308,       5518]
WindowFrame->Normal*)

(* Beginning of Notebook Content *)
Notebook[{
Cell[BoxData[
 RowBox[{
  RowBox[{"SetDirectory", "[", 
   RowBox[{"NotebookDirectory", "[", "]"}], "]"}], ";"}]], "Input",
 CellChangeTimes->{{3.74766149726014*^9, 3.747661511250906*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"Tscancnew", "=", 
   RowBox[{"1000", " ", 
    RowBox[{"Join", "[", 
     RowBox[{
      RowBox[{"Table", "[", 
       RowBox[{"i", ",", 
        RowBox[{"{", 
         RowBox[{"i", ",", "0.15", ",", "0.16", ",", "0.002"}], "}"}]}], 
       "]"}], ",", 
      RowBox[{"Table", "[", 
       RowBox[{"i", ",", 
        RowBox[{"{", 
         RowBox[{"i", ",", "0.162", ",", "0.3", ",", "0.003"}], "}"}]}], 
       "]"}]}], "]"}]}]}], ";"}]], "Input",
 CellChangeTimes->{
  3.747709952960799*^9, {3.74770998423025*^9, 3.747709984717331*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"ImAsMass", "[", 
  RowBox[{"[", 
   RowBox[{";;", "40"}], "]"}], "]"}]], "Input",
 CellChangeTimes->{{3.747710979520433*^9, 3.7477110466638737`*^9}, {
  3.74771117011572*^9, 3.7477111702782707`*^9}, {3.747711205348956*^9, 
  3.747711209013208*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"3.0725615667278547`", ",", "3.5941592059887584`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"3.0699018824844377`", ",", "3.585627290812227`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"3.0672191978720518`", ",", "3.5770248129991034`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"3.064518344675176`", ",", "3.5680028015439813`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"3.0618030797550957`", ",", "3.558794335015426`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"3.0590763228654807`", ",", "3.5493464189735127`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"3.056340403089787`", ",", "3.539693668384704`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"3.052223329768551`", ",", "3.524675775182787`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"3.0480944638437366`", ",", "3.511196262384048`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"3.0439571308310334`", ",", "3.497858147958779`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"3.0398128896498227`", ",", "3.4847485753460505`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"3.035664152635276`", ",", "3.47245692936135`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"3.031511302977748`", ",", "3.460089092140737`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"3.0273550882070692`", ",", "3.445888710512301`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"3.023196651391499`", ",", "3.431839139924752`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"3.019035332228324`", ",", "3.4176679995062305`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"3.014869432329692`", ",", "3.403559969284144`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"3.010702751665093`", ",", "3.3895779796377408`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"3.006532888697351`", ",", "3.37583425803096`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"3.0023614381783466`", ",", "3.3620838573484484`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"2.9982588448365743`", ",", "3.3488382778885843`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"2.9942748751623376`", ",", "3.336226762615687`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"2.990277622204332`", ",", "3.3238501855337823`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"2.986272662642653`", ",", "3.3117687890251957`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"2.982252250043788`", ",", "3.3000864850486074`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"2.9782220053146937`", ",", "3.288562365440739`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"2.9741851999540745`", ",", "3.2779081543760875`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"2.970127434084958`", ",", "3.2712469509605366`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"2.9660724010913673`", ",", "3.265700789313405`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"2.9619962677989666`", ",", "3.260553772216917`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"2.9579095472691823`", ",", "3.2557850313204115`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"2.953829702546217`", ",", "3.251436608979712`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"2.9497013177637594`", ",", "3.2476164709590174`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"2.9455736578192204`", ",", "3.2442861525223696`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"2.9414140398784165`", ",", "3.241643108963716`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"2.9372400761273436`", ",", "3.240468414551`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"2.9330353985147024`", ",", "3.2463739925843007`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"2.9287957101703035`", ",", "3.3544343036317232`"}], "}"}], ",", 
   RowBox[{"{", "2.9245171715012335`", "}"}], ",", 
   RowBox[{"{", "2.9202014997954384`", "}"}]}], "}"}]], "Output",
 CellChangeTimes->{{3.747710984451056*^9, 3.74771104710991*^9}, 
   3.747711170857121*^9, {3.74771120598243*^9, 3.747711209405867*^9}}]
}, Open  ]],

Cell[BoxData[{
 RowBox[{
  RowBox[{"ImRegMass", "=", 
   RowBox[{
   "Import", "[", "\"\<spectraldata/Tscan/cc_regIm/results/wrfitcc.dat\>\"", 
    "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"ImUnRegMass", "=", 
   RowBox[{
   "Import", "[", "\"\<spectraldata/Tscan/cc_all/results/wrfitcc.dat\>\"", 
    "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"ImAsMass", "=", 
   RowBox[{
   "Import", "[", "\"\<spectraldata/Tscan/cc_asIm/results/wrfitcc.dat\>\"", 
    "]"}]}], ";"}]}], "Input",
 CellChangeTimes->{{3.747661515740117*^9, 3.747661548057214*^9}, {
  3.747661876515024*^9, 3.747661876618144*^9}, {3.747709662524288*^9, 
  3.7477097134755983`*^9}, {3.747709749820902*^9, 3.747709780505095*^9}}],

Cell[BoxData[{
 RowBox[{
  RowBox[{"ImRegWidth", "=", 
   RowBox[{
   "Import", "[", "\"\<spectraldata/Tscan/cc_regIm/results/gfitcc.dat\>\"", 
    "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"ImUnRegWidth", "=", 
   RowBox[{
   "Import", "[", "\"\<spectraldata/Tscan/cc_all/results/gfitcc.dat\>\"", 
    "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"ImAsWidth", "=", 
   RowBox[{
   "Import", "[", "\"\<spectraldata/Tscan/cc_asIm/results/gfitcc.dat\>\"", 
    "]"}]}], ";"}]}], "Input",
 CellChangeTimes->{{3.747661515740117*^9, 3.747661548057214*^9}, {
   3.747661876515024*^9, 3.747661876618144*^9}, {3.747709662524288*^9, 
   3.7477097134755983`*^9}, {3.747709749820902*^9, 3.747709780505095*^9}, {
   3.747709827077063*^9, 3.74770984287782*^9}, 3.747709879232538*^9}],

Cell[BoxData[{
 RowBox[{
  RowBox[{"ImRegArea", "=", 
   RowBox[{
   "Import", "[", "\"\<spectraldata/Tscan/cc_regIm/results/areafitcc.dat\>\"",
     "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"ImUnRegArea", "=", 
   RowBox[{
   "Import", "[", "\"\<spectraldata/Tscan/cc_all/results/areafitcc.dat\>\"", 
    "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"ImAsArea", "=", 
   RowBox[{
   "Import", "[", "\"\<spectraldata/Tscan/cc_asIm/results/areafitcc.dat\>\"", 
    "]"}]}], ";"}]}], "Input",
 CellChangeTimes->{{3.747709854146181*^9, 3.747709867097233*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"ListPlot", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{"Transpose", "[", 
      RowBox[{"{", 
       RowBox[{"Tscancnew", ",", 
        RowBox[{"ImRegMass", "[", 
         RowBox[{"[", 
          RowBox[{"All", ",", "1"}], "]"}], "]"}]}], "}"}], "]"}], ",", 
     RowBox[{"Transpose", "[", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"Tscancnew", "[", 
         RowBox[{"[", 
          RowBox[{";;", "13"}], "]"}], "]"}], ",", 
        RowBox[{"ImUnRegMass", "[", 
         RowBox[{"[", 
          RowBox[{"All", ",", "1"}], "]"}], "]"}]}], "}"}], "]"}], ",", 
     RowBox[{"Transpose", "[", 
      RowBox[{"{", 
       RowBox[{"Tscancnew", ",", 
        RowBox[{"ImAsMass", "[", 
         RowBox[{"[", 
          RowBox[{"All", ",", "1"}], "]"}], "]"}]}], "}"}], "]"}], ",", 
     RowBox[{"Transpose", "[", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"Tscancnew", "[", 
         RowBox[{"[", 
          RowBox[{";;", "29"}], "]"}], "]"}], ",", 
        RowBox[{
         RowBox[{"ImRegMass", "[", 
          RowBox[{"[", 
           RowBox[{";;", "29"}], "]"}], "]"}], "[", 
         RowBox[{"[", 
          RowBox[{"All", ",", "2"}], "]"}], "]"}]}], "}"}], "]"}], ",", 
     RowBox[{"Transpose", "[", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"Tscancnew", "[", 
         RowBox[{"[", 
          RowBox[{";;", "13"}], "]"}], "]"}], ",", 
        RowBox[{"ImUnRegMass", "[", 
         RowBox[{"[", 
          RowBox[{"All", ",", "2"}], "]"}], "]"}]}], "}"}], "]"}], ",", 
     RowBox[{"Transpose", "[", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"Tscancnew", "[", 
         RowBox[{"[", 
          RowBox[{";;", "29"}], "]"}], "]"}], ",", 
        RowBox[{
         RowBox[{"ImAsMass", "[", 
          RowBox[{"[", 
           RowBox[{";;", "29"}], "]"}], "]"}], "[", 
         RowBox[{"[", 
          RowBox[{"All", ",", "2"}], "]"}], "]"}]}], "}"}], "]"}]}], "}"}], 
   ",", 
   RowBox[{"Joined", "\[Rule]", "True"}], ",", 
   RowBox[{"AxesStyle", "\[Rule]", 
    RowBox[{"Directive", "[", 
     RowBox[{
      RowBox[{"FontSize", "\[Rule]", "25"}], ",", 
      RowBox[{"Thickness", "\[Rule]", "0.004"}], ",", 
      RowBox[{"FontFamily", "\[Rule]", "\"\<Helvetica\>\""}], ",", "Black"}], 
     "]"}]}], ",", 
   RowBox[{"BaseStyle", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"FontSize", "\[Rule]", "14"}], "}"}]}], ",", 
   RowBox[{"AspectRatio", "\[Rule]", "0.85"}], ",", 
   RowBox[{"AxesLabel", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"\"\<T [GeV]\>\"", ",", "\"\<Thermal mass [GeV]\>\""}], "}"}]}], 
   ",", 
   RowBox[{"PlotStyle", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"Green", ",", "Thick"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"Blue", ",", "Thick"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"Red", ",", "Thick"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"Green", ",", "Thick"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"Blue", ",", "Thick"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"Red", ",", "Thick"}], "}"}]}], "}"}]}], ",", 
   RowBox[{"PlotLegends", "\[Rule]", " ", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"Style", "[", 
       RowBox[{"\"\<Regularised via decorellation length\>\"", ",", "25"}], 
       "]"}], ",", 
      RowBox[{"Style", "[", 
       RowBox[{"\"\<Unregularised\>\"", ",", "25"}], "]"}], ",", 
      RowBox[{"Style", "[", 
       RowBox[{"\"\<Regularised via asymptotic value\>\"", ",", "25"}], 
       "]"}]}], "}"}]}], ",", 
   RowBox[{"ImageSize", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"1000", ",", "1000"}], "}"}]}]}], "]"}]], "Input",
 CellChangeTimes->{{3.7477099991519213`*^9, 3.7477100128052692`*^9}, {
  3.747710213253199*^9, 3.747710238558093*^9}, {3.747710288674754*^9, 
  3.7477102960811567`*^9}, {3.747710328869042*^9, 3.747710463485145*^9}, {
  3.7477109647045317`*^9, 3.7477109687461557`*^9}, {3.747711061302045*^9, 
  3.747711197066926*^9}, {3.7477112274116*^9, 3.747711363782651*^9}}],

Cell[BoxData[
 TemplateBox[{GraphicsBox[{{}, {{{}, {}, {
        Hue[0.67, 0.6, 0.6], 
        Directive[
         PointSize[0.009166666666666668], 
         AbsoluteThickness[1.6], FontSize -> 14, 
         RGBColor[0, 1, 0], 
         Thickness[Large]], 
        LineBox[CompressedData["
1:eJw10H1IU1EcxvEZtRlYaFNiFObIKCppzJfSIB+sKAxSVoZMtLG76V50u3ep
5FsuWG5lppGQsqBFMQRJZJiEJG1SQWz4li4qsIVB1B+aphbau/7Ohcvlc+85
53vOlWutKv06kUiU/u/+/1y9/FrEr38a+7Y9GmsvOMz8UTmrW8ngMLDjyGz0
NbKdg851p/+Wg+zncKiwtkrWyObrUDB+dau7hs3XoazJEZJVkj06xBi4D5Nm
Nl4P79mMnpscWaNHeqXp3umiaEStrq+Hf2FO2HSGvieV4vGJqt6xXLafUjTm
v27ozCFHSnFdncPps1i/DI11IedBJeuXIW9bQB23l/UNEGcKvjk56xsQ2ZPS
Epax8xlQGGx/GYhjfSNau6cm+jbS/uxGJPD3k8eiyBEjRnxD2anLkjXDhL5n
5wwd82SPCaLiTvXPLxLqmzG/FPtJN03WmJFY91kx8o7sN+NySldt5gQ5qRwd
ebsmPSGyvRyXnEG59Dk5Uo7p8Mq3+kEyKuAQN2tmHpE9FWiZ+HqspIf1LXBL
X1hHvaxvwcqN7qGTd1nfgiva+EHfbda3YvHJxbEtbaxvxe5fhuOCi/WtGE5z
/Ajb2Xge456PyrQacj6PkuWiriaBzecRp9rw6o2R3MtDMjzg3qdl6/EYOJVR
X6AmxwpQhBce+FTsfAIaHObspVwyL2Bk0SVVHmXnFSD2jmdVH6b/Pyrg/XdL
ZiCVLLLhwO/FcMx+ssKG/srUQHEyWWPDQ7lkNrid3GZDc+jC1PkEst8GYaZ1
Z+JmCf4CYiHrvw==
         "]]}, {
        Hue[0.9060679774997897, 0.6, 0.6], 
        Directive[
         PointSize[0.009166666666666668], 
         AbsoluteThickness[1.6], FontSize -> 14, 
         RGBColor[0, 0, 1], 
         Thickness[Large]], 
        LineBox[{{150., 3.0728679029359265`}, {152., 3.0702740314364414`}, {
         154., 3.067664232738622}, {156., 3.0650435325814844`}, {158., 
         3.0624157060906403`}, {160., 3.0597838963889656`}, {162., 
         3.0571506181766903`}, {165., 3.053201369492027}, {168., 
         3.049258831127488}, {171., 3.045324238243041}, {174.00000000000003`, 
         3.0414025679642496`}, {177., 3.037494390495692}, {180., 
         3.0335991213049787`}}]}, {
        Hue[0.1421359549995791, 0.6, 0.6], 
        Directive[
         PointSize[0.009166666666666668], 
         AbsoluteThickness[1.6], FontSize -> 14, 
         RGBColor[1, 0, 0], 
         Thickness[Large]], 
        LineBox[CompressedData["
1:eJw10G1IU1Ecx/HN1hxaZIJCuIVaiaTkCoQRvfhZJEwpSonRg7j2cN2T2+4M
DWW50aDNlJb2YqnIFEE0X0QvSg1lOcoisciKQiw19sImQbUIs2nm/ufC5fK5
95zzPefmaGwV+iSBQFC8ef9/bl0hDapUwfyuOxIkXmhxO/DxUf4tMrR4Jhcp
hnxklxZjq32Hcz3kkBbhkR/d7dfYfB3C3Dth/Cqbr0P9w0hAU0cO6tDTdi8t
ZmLj9RjrGTrfrCGr9dgXPnpEfEEC4db6ekykBMy+s/Q9m4NsyKdMUbL9cMBP
54YX5AUOmW9ffN+uYP0aXJz9MOouYv0arEpTN9byWN8A7oZlvm4v6xsQSt5W
Gc1g5zOgt7ZRdnkn6xvx7c98+nsR7c9lhDFbmmv7m5zwghEFV0Ka0hgZJpQE
W4YzV8hBE24u/44ufUmmvhknlyp2D8yR1WZErJJd3Cw5ZIaKk3fnvCRnW4Cp
9MI3k2SXBe7UyYOeMfKCBb1+w56CB2TUYlGd1jQ9SA7W4rqso4HvZX0rWrPy
hPEA61uhUiWteP2sb0VRUUuGyMv6NljGu0YbmlnfhmM7zp2Yq2d9Gx4/XecL
rWy8HY3ukuNGPfmMHeuvOjvbL7H5dpSK+j91VJLvb3raV91axtazw/41PuIs
IafxyPFOuooV7Hw8nOUDyvghsp3HZ2Xk1N0D7Lw8YhNZ+6VS+v+vebgM5U/4
dLLAgZbnnrZlCVnugKRaJ5BtiBNWO3B6cLrK8Ivsd2BmvKyvP0oOOTC11pQ0
syjGPzEH5qU=
         "]]}, {
        Hue[0.37820393249936934`, 0.6, 0.6], 
        Directive[
         PointSize[0.009166666666666668], 
         AbsoluteThickness[1.6], FontSize -> 14, 
         RGBColor[0, 1, 0], 
         Thickness[Large]], 
        LineBox[CompressedData["
1:eJxTTMoPSmViYGCQBWIQDQYHkhwYnIwZIo7zOEAEkh3eevo8ObMVyndIdsip
VcjauhjKb0h2SHyZKPd8ApR/INlBUHYdm0QtTH+KwyPJn1EF2TD9KQ5MMZbS
56Kg/AUpDl9WP+EKdoKpT3XYpKtv6aAN5SekOii7HrFZLsrjwAg2P9XBLvry
6YO/uSHyCmkObdmd+y0eQfkNaQ4SlcVHvp+A8h+kOfwPf12ssgHKd0h3uGvo
1WE6HcpfkO4gtVX86tU6KJ8hw4FvhaDzvzQoPyHDwfl92Q2+ACj/QIbDk2+5
zNssYfZnOpy7tyX/rzI3xH0NmQ6+umEcP/ih/AeZDv6py35E/OGC8B2yHARM
my2ZX0H5C7IcJjreyH5xnQtqf7aD5oSC5inHoPyEbAfhBW03xLdB+QeyHX5K
J613XQflK+Q4HPFzeOizEspvyHHwufNWy3oplwMAaqR9Hw==
         "]]}, {
        Hue[0.6142719099991583, 0.6, 0.6], 
        Directive[
         PointSize[0.009166666666666668], 
         AbsoluteThickness[1.6], FontSize -> 14, 
         RGBColor[0, 0, 1], 
         Thickness[Large]], 
        LineBox[{{150., 3.601562861114733}, {152., 3.593090497158136}, {154., 
         3.583930537993508}, {156., 3.5765293435709804`}, {158., 
         3.5693136942838977`}, {160., 3.562308085235924}, {162., 
         3.555360762379873}, {165., 3.546100224245078}, {168., 
         3.5354671464485232`}, {171., 3.524473277036941}, {
         174.00000000000003`, 3.5136017754207742`}, {177., 
         3.5028020862806994`}, {180., 3.4921587495679596`}}]}, {
        Hue[0.8503398874989481, 0.6, 0.6], 
        Directive[
         PointSize[0.009166666666666668], 
         AbsoluteThickness[1.6], FontSize -> 14, 
         RGBColor[1, 0, 0], 
         Thickness[Large]], 
        LineBox[CompressedData["
1:eJxTTMoPSmViYGCQBWIQDQYHkhxit23qunaAxwEikOzAWJEbE7seyndIdvCq
S9PfPxfKb0h2mBPeyuvaDeUfSHboWSaglVkB05/icC/Ydg9/Kkx/ikPHhD8v
vQKh/AUpDo/9qs06jWDqUx2UzJ8JvBOD8hNSHeba1vDO/c3twAg2P9VhlVr+
ncMPuCHyCmkOBoyL66cfh/Ib0hzU3s43cF4H5T9Ic5hctEpSbyKU75DukPXA
QiSjBMpfkO4QsuNzYFI4lM+Q4bAnzWBZrRWUn5DhkOPpx39bFso/kOFwc415
ylZGmP2ZDjeOrLXoecoFcV9DpsPVfxI7s09B+Q8yHfJOa6+YvgHKd8hyqIiT
PWI3HcpfkOVw2KxtUUMdF9T+bIffXFb7JqdB+QnZDvKpwid/+kH5B7IdTDcJ
vVS3hPIVchx05Gtam7Wh/IYch7O/XPaoK3A5AABw/3tJ
         
         "]]}}}, {}, {}, {{}, {}}}, {
    DisplayFunction -> Identity, PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.05], 
        Scaled[0.05]}}, AxesOrigin -> {147.65625, 2.8231908812010746`}, 
     PlotRange -> {{150., 300.00000000000006`}, {2.8602562135779155`, 
      3.601562861114733}}, PlotRangeClipping -> True, ImagePadding -> All, 
     DisplayFunction -> Identity, AspectRatio -> 0.85, Axes -> {True, True}, 
     AxesLabel -> {
       FormBox["\"T [GeV]\"", TraditionalForm], 
       FormBox["\"Thermal mass [GeV]\"", TraditionalForm]}, 
     AxesOrigin -> {147.65625, 2.8231908812010746`}, AxesStyle -> 
     Directive[
      FontSize -> 25, Thickness -> 0.004, FontFamily -> "Helvetica", 
       GrayLevel[0]], BaseStyle -> {FontSize -> 14}, DisplayFunction :> 
     Identity, Frame -> {{False, False}, {False, False}}, 
     FrameLabel -> {{None, None}, {None, None}}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> {None, None}, GridLinesStyle -> Directive[
       GrayLevel[0.5, 0.4]], ImageSize -> {1000, 1000}, 
     Method -> {"CoordinatesToolOptions" -> {"DisplayFunction" -> ({
           (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
            Part[#, 1]], 
           (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
            Part[#, 2]]}& ), "CopiedValueFunction" -> ({
           (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
            Part[#, 1]], 
           (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
            Part[#, 2]]}& )}}, 
     PlotRange -> {{150., 300.00000000000006`}, {2.8602562135779155`, 
      3.601562861114733}}, PlotRangeClipping -> True, PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.05], 
        Scaled[0.05]}}, Ticks -> {Automatic, Automatic}}],FormBox[
    FormBox[
     TemplateBox[{
       StyleBox[
       "\"Regularised via decorellation length\"", 25, StripOnInput -> False], 
       StyleBox["\"Unregularised\"", 25, StripOnInput -> False], 
       StyleBox[
       "\"Regularised via asymptotic value\"", 25, StripOnInput -> False]}, 
      "PointLegend", DisplayFunction -> (FormBox[
        StyleBox[
         StyleBox[
          PaneBox[
           TagBox[
            GridBox[{{
               TagBox[
                GridBox[{{
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.16500000000000004`], 
                    AbsoluteThickness[1.6], FontSize -> 14, 
                    RGBColor[0, 1, 0], 
                    Thickness[Large]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.16500000000000004`], 
                    AbsoluteThickness[1.6], FontSize -> 14, 
                    RGBColor[0, 1, 0], 
                    Thickness[Large]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.16500000000000004`], 
                    AbsoluteThickness[1.6], FontSize -> 14, 
                    RGBColor[0, 0, 1], 
                    Thickness[Large]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.16500000000000004`], 
                    AbsoluteThickness[1.6], FontSize -> 14, 
                    RGBColor[0, 0, 1], 
                    Thickness[Large]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.16500000000000004`], 
                    AbsoluteThickness[1.6], FontSize -> 14, 
                    RGBColor[1, 0, 0], 
                    Thickness[Large]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.16500000000000004`], 
                    AbsoluteThickness[1.6], FontSize -> 14, 
                    RGBColor[1, 0, 0], 
                    Thickness[Large]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #3}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                 AutoDelete -> False, 
                 GridBoxDividers -> {
                  "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                 GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}},
                  GridBoxSpacings -> {
                  "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
             GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
             AutoDelete -> False, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
            "Grid"], Alignment -> Left, AppearanceElements -> None, 
           ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
           "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
         FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
         False], TraditionalForm]& ), 
      InterpretationFunction :> (RowBox[{"PointLegend", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", "0.009166666666666668`", "]"}], 
                   ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                   RowBox[{"FontSize", "\[Rule]", "14"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0, 1, 0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> RGBColor[0., 0.6666666666666666, 0.], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0, 1, 0]"], Appearance -> None, BaseStyle -> {},
                     BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0, 1, 0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0, 1, 0], Editable -> False, Selectable -> 
                    False], ",", 
                   RowBox[{"Thickness", "[", "Large", "]"}]}], "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", "0.009166666666666668`", "]"}], 
                   ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                   RowBox[{"FontSize", "\[Rule]", "14"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0, 0, 1], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> RGBColor[0., 0., 0.6666666666666666], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0, 0, 1]"], Appearance -> None, BaseStyle -> {},
                     BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0, 0, 1]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0, 0, 1], Editable -> False, Selectable -> 
                    False], ",", 
                   RowBox[{"Thickness", "[", "Large", "]"}]}], "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", "0.009166666666666668`", "]"}], 
                   ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                   RowBox[{"FontSize", "\[Rule]", "14"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[1, 0, 0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> RGBColor[0.6666666666666666, 0., 0.], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[1, 0, 0]"], Appearance -> None, BaseStyle -> {},
                     BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[1, 0, 0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[1, 0, 0], Editable -> False, Selectable -> 
                    False], ",", 
                   RowBox[{"Thickness", "[", "Large", "]"}]}], "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", "0.009166666666666668`", "]"}], 
                   ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                   RowBox[{"FontSize", "\[Rule]", "14"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0, 1, 0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> RGBColor[0., 0.6666666666666666, 0.], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0, 1, 0]"], Appearance -> None, BaseStyle -> {},
                     BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0, 1, 0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0, 1, 0], Editable -> False, Selectable -> 
                    False], ",", 
                   RowBox[{"Thickness", "[", "Large", "]"}]}], "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", "0.009166666666666668`", "]"}], 
                   ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                   RowBox[{"FontSize", "\[Rule]", "14"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0, 0, 1], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> RGBColor[0., 0., 0.6666666666666666], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0, 0, 1]"], Appearance -> None, BaseStyle -> {},
                     BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0, 0, 1]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0, 0, 1], Editable -> False, Selectable -> 
                    False], ",", 
                   RowBox[{"Thickness", "[", "Large", "]"}]}], "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", "0.009166666666666668`", "]"}], 
                   ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                   RowBox[{"FontSize", "\[Rule]", "14"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[1, 0, 0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> RGBColor[0.6666666666666666, 0., 0.], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[1, 0, 0]"], Appearance -> None, BaseStyle -> {},
                     BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[1, 0, 0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[1, 0, 0], Editable -> False, Selectable -> 
                    False], ",", 
                   RowBox[{"Thickness", "[", "Large", "]"}]}], "]"}]}], "}"}],
            ",", 
           RowBox[{"{", 
             RowBox[{#, ",", #2, ",", #3}], "}"}], ",", 
           RowBox[{"LegendMarkers", "\[Rule]", 
             RowBox[{"{", 
               RowBox[{
                 RowBox[{"{", 
                   RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                 RowBox[{"{", 
                   RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                 RowBox[{"{", 
                   RowBox[{"False", ",", "Automatic"}], "}"}]}], "}"}]}], ",", 
           RowBox[{"Joined", "\[Rule]", 
             RowBox[{"{", 
               
               RowBox[{
                "True", ",", "True", ",", "True", ",", "True", ",", "True", 
                 ",", "True"}], "}"}]}], ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
             RowBox[{"{", "}"}]}], ",", 
           RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
      Editable -> True], TraditionalForm], TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"], 
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]], "Output",
 CellChangeTimes->{
  3.747710464533308*^9, {3.747710966246711*^9, 3.747710970057646*^9}, {
   3.7477110723754997`*^9, 3.747711087245406*^9}, {3.747711118377885*^9, 
   3.747711160625451*^9}, 3.747711197882169*^9, {3.747711232585754*^9, 
   3.747711244822693*^9}, {3.747711276557024*^9, 3.747711313495599*^9}, {
   3.747711353242084*^9, 3.747711364702859*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"ListPlot", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{"Transpose", "[", 
      RowBox[{"{", 
       RowBox[{"Tscancnew", ",", 
        RowBox[{"ImRegWidth", "[", 
         RowBox[{"[", 
          RowBox[{"All", ",", "1"}], "]"}], "]"}]}], "}"}], "]"}], ",", 
     RowBox[{"Transpose", "[", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"Tscancnew", "[", 
         RowBox[{"[", 
          RowBox[{";;", "13"}], "]"}], "]"}], ",", 
        RowBox[{"ImUnRegWidth", "[", 
         RowBox[{"[", 
          RowBox[{"All", ",", "1"}], "]"}], "]"}]}], "}"}], "]"}], ",", 
     RowBox[{"Transpose", "[", 
      RowBox[{"{", 
       RowBox[{"Tscancnew", ",", 
        RowBox[{"ImAsWidth", "[", 
         RowBox[{"[", 
          RowBox[{"All", ",", "1"}], "]"}], "]"}]}], "}"}], "]"}], ",", 
     RowBox[{"Transpose", "[", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"Tscancnew", "[", 
         RowBox[{"[", 
          RowBox[{";;", "29"}], "]"}], "]"}], ",", 
        RowBox[{
         RowBox[{"ImRegWidth", "[", 
          RowBox[{"[", 
           RowBox[{";;", "29"}], "]"}], "]"}], "[", 
         RowBox[{"[", 
          RowBox[{"All", ",", "2"}], "]"}], "]"}]}], "}"}], "]"}], ",", 
     RowBox[{"Transpose", "[", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"Tscancnew", "[", 
         RowBox[{"[", 
          RowBox[{";;", "13"}], "]"}], "]"}], ",", 
        RowBox[{"ImUnRegWidth", "[", 
         RowBox[{"[", 
          RowBox[{"All", ",", "2"}], "]"}], "]"}]}], "}"}], "]"}], ",", 
     RowBox[{"Transpose", "[", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"Tscancnew", "[", 
         RowBox[{"[", 
          RowBox[{";;", "29"}], "]"}], "]"}], ",", 
        RowBox[{
         RowBox[{"ImAsWidth", "[", 
          RowBox[{"[", 
           RowBox[{";;", "29"}], "]"}], "]"}], "[", 
         RowBox[{"[", 
          RowBox[{"All", ",", "2"}], "]"}], "]"}]}], "}"}], "]"}]}], "}"}], 
   ",", 
   RowBox[{"Joined", "\[Rule]", "True"}], ",", 
   RowBox[{"AxesStyle", "\[Rule]", 
    RowBox[{"Directive", "[", 
     RowBox[{
      RowBox[{"FontSize", "\[Rule]", "25"}], ",", 
      RowBox[{"Thickness", "\[Rule]", "0.004"}], ",", 
      RowBox[{"FontFamily", "\[Rule]", "\"\<Helvetica\>\""}], ",", "Black"}], 
     "]"}]}], ",", 
   RowBox[{"BaseStyle", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"FontSize", "\[Rule]", "14"}], "}"}]}], ",", 
   RowBox[{"AspectRatio", "\[Rule]", "0.85"}], ",", 
   RowBox[{"AxesLabel", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"\"\<T [GeV]\>\"", ",", "\"\<Thermal width [GeV]\>\""}], "}"}]}],
    ",", 
   RowBox[{"PlotStyle", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"Green", ",", "Thick"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"Blue", ",", "Thick"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"Red", ",", "Thick"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"Green", ",", "Thick"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"Blue", ",", "Thick"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"Red", ",", "Thick"}], "}"}]}], "}"}]}], ",", 
   RowBox[{"PlotLegends", "\[Rule]", " ", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"Style", "[", 
       RowBox[{"\"\<Regularised via decorellation length\>\"", ",", "25"}], 
       "]"}], ",", 
      RowBox[{"Style", "[", 
       RowBox[{"\"\<Unregularised\>\"", ",", "25"}], "]"}], ",", 
      RowBox[{"Style", "[", 
       RowBox[{"\"\<Regularised via asymptotic value\>\"", ",", "25"}], 
       "]"}]}], "}"}]}], ",", 
   RowBox[{"ImageSize", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"1000", ",", "1000"}], "}"}]}]}], "]"}]], "Input",
 CellChangeTimes->{{3.747711384924735*^9, 3.747711396816154*^9}}],

Cell[BoxData[
 TemplateBox[{GraphicsBox[{{}, {{{}, {}, {
        Hue[0.67, 0.6, 0.6], 
        Directive[
         PointSize[0.009166666666666668], 
         AbsoluteThickness[1.6], FontSize -> 14, 
         RGBColor[0, 1, 0], 
         Thickness[Large]], 
        LineBox[CompressedData["
1:eJwt0GtIU2Ecx/EpKBKKS6QS0jZ9kUiQNJcg2n6aAx1qXhCiEqZzc3P3aZBo
bJWi0xcuTE3MW1mtEPPKZlOcqavUcmCURekKLO2FEUYEgV18/gcOh88553m+
53/4Jfp8uT+HwxH+O/9f9w53CfJP8zNc3R0idkOGtsbIlGbeLWbI4Dqjbtqx
dzNbZMjMC24RdPYyu2WwuqoT9Z/7aH0pTr5zH6kS3KH1pdiQ/JoouNrP3FsK
zpy5+pP5Hr0vx+36hAe1dXZmqRzm5CviyOsPRX57+8uBpvTdrr4B9pynQN81
1bp+cpC+R4GesKN3i7RDzD4FxrbqrH6WYeqXYdoTM2VvHaF+GRokku24oVHq
K7FfqHFqF8eor0TChji3bGuc5lNitf6CKSfEQX0Vzv2JPr8S72TfZ1HBOxMV
vpI/wexTwX65SiExPWZGOQJ9BR2hN1zMveWYT4lezXRMUl+NqIyvw8VrU9RX
w9aq/PY7YJr6arwpjq04cMhNfQ12Ypq4AYNkiwa6BW/6ZtoMza9Bwal4U9F7
MrRIerumWK58QvNrcb/V/SU0ZJb6OrRv+nNr7GSpDqk3zRG2tDnq6+CXwhEn
+sg8PcJfNTQ2Wuapr8ejpLZxHt9DfT34zdbs2DkyzwDbhiurRfWUOdeAg8mv
t2dDn9F6A3KS9x3LcpKHDOgUCArFiue0nwFcy4fi9rAFZq4RxoCzzhMeMoxY
8kzYw2oWmQ1G/FAux10ULtG8RvAGandXvi+x/+81IsgqOl49+oKZY0KeL7B/
5NJL5ngTsn9GLPSkLjNLTXB0rQv1QV5mmwnB5Y5NaQXZbcLhwvTKrY9e0V+3
sQXJ
         "]]}, {
        Hue[0.9060679774997897, 0.6, 0.6], 
        Directive[
         PointSize[0.009166666666666668], 
         AbsoluteThickness[1.6], FontSize -> 14, 
         RGBColor[0, 0, 1], 
         Thickness[Large]], 
        LineBox[{{150., 0.028039551740027806`}, {152., 
         0.030792801689550165`}, {154., 0.03356847135307606}, {156., 
         0.036365214075482176`}, {158., 0.03918242206521617}, {160., 
         0.04201955379317164}, {162., 0.04487596134042477}, {165., 
         0.04919821936525919}, {168., 0.05356015570427292}, {171., 
         0.057967820673461665`}, {174.00000000000003`, 0.06241368505976182}, {
         177., 0.06689882430067051}, {180., 0.07142912811675751}}]}, {
        Hue[0.1421359549995791, 0.6, 0.6], 
        Directive[
         PointSize[0.009166666666666668], 
         AbsoluteThickness[1.6], FontSize -> 14, 
         RGBColor[1, 0, 0], 
         Thickness[Large]], 
        LineBox[CompressedData["
1:eJwt0H8s1HEcx/FD+jFDJptUtyu3lbLWjxXD3Euzpl8TapHZ5H5yP9xdU4lx
1UzGymosIepCS3I4lDgXulyj83uWpivzR5qtdswqWeXz/m7ffff4fr+f7/Pz
/m5PSY8VO3M4nEP/zv/X1cOcgumakXmXP6UCdkOIAEuCkbutjBlCjPXsVRSF
lzPrhIjx1ZSmXKhkNguRNWM72plXRetFCAtba/0yXk3rRSj3T3Sf/PqQuVqE
Zt5gxLMCPb0vRvTc/RKnwBrmZDGumG0ZXsO1AqfV74sR+E1z40zmE/acJ8EC
bzm7kv+U9iNBkqDDcWK0ntkuwcns2SVNXgP1pTCF7Q8aCmmkvhSt14VZM5kG
6suwWKGX5MY3UV+GgDVtQVnBzTSfDN8P2yx+fi3UT0WiI8Qn/E8L258uFYXn
y/Zc+2Rktqeijn9HrDS1MiMNeu+Y50lVbczVaXCTLfiU69qpL0d91GzBAdEL
6stR8cG1ZWvUS+rLcaqq++KjwA7qK7DcPJq0zvsVza9Av24+A0tkuwLRn9Xv
b0130vxKeDTGjw30ddH8Sviqgxw760zUVyHOwytid3E39VWwmvJtI6Fm6qvA
X588HmEg89LRdfZ4A5f/mvrpMHr+il25R7an4+CxuaJwzx56Xw23qZubjuST
T6uhc168PeTcS+vV8J/0iavNIRvUKJROnNu1Qrar8XN4UH9J18e8UYOS3oLN
M65vaD4N/GXBff3FZLUG4o/yH0auhebVgNveKXYxWNj/H9Lg95S1oSnyLTNH
i1ZzTUKunbxPi7TLoarHOf3MyVr4dQmkEzuszMVaRLpvUN4dIJu12PJA5oi9
+k7wF1ktDMQ=
         "]]}, {
        Hue[0.37820393249936934`, 0.6, 0.6], 
        Directive[
         PointSize[0.009166666666666668], 
         AbsoluteThickness[1.6], FontSize -> 14, 
         RGBColor[0, 1, 0], 
         Thickness[Large]], 
        LineBox[CompressedData["
1:eJxTTMoPSmViYGCQBWIQDQYHkhxObmqpzffZbw8RSHaIeGwePf3iAQjfIdlh
ekUba+zngxB+Q7KD+qGNLCp8hyH8A8kO7QciSgR1j0D1pzhUWCxPL7M6CtWf
4rDDY8HmFY7HIPwFKQ7OyuISD7Yfh6pPdcivceZlUjwJ4SekOgjUHlexLDtl
zwg2P9UhdkvstfVKZyDyCmkOfIflpH3PnoW6J82B7SPr5tPp5yH8B2kOj68q
VtUUXYDan+5gz6mSmq9zEWp/usO5yDmmDnegfIYMB5MgCTXxyktQ+zMc7vOH
PJPnvAz1X4bDLOOpz8L7oHyFTAc9pRmGqSxXIO5ryHT46y4QV1sI5T/IdGhU
LNnLdxrKd8hyMN1z4I294lUIf0GWw/tIx7/ByVeh9mc7qCiHOG5ZCuUnZDtY
KN39f/I2lH8g2+H03cUyT0yvQe3PcbiwzCs/bTKU35DjYMPxvUH/xTV7ALBj
ixo=
         "]]}, {
        Hue[0.6142719099991583, 0.6, 0.6], 
        Directive[
         PointSize[0.009166666666666668], 
         AbsoluteThickness[1.6], FontSize -> 14, 
         RGBColor[0, 0, 1], 
         Thickness[Large]], 
        LineBox[{{150., 0.14865190390154157`}, {152., 0.15953697193853117`}, {
         154., 0.1702743762330532}, {156., 0.1805499136596529}, {158., 
         0.19035886855905634`}, {160., 0.20005422270658715`}, {162., 
         0.20924539343246729`}, {165., 0.22203926284251443`}, {168., 
         0.23659737321868554`}, {171., 0.2511433843680655}, {
         174.00000000000003`, 0.26503796668323926`}, {177., 
         0.2779497047048625}, {180., 0.29019659191246344`}}]}, {
        Hue[0.8503398874989481, 0.6, 0.6], 
        Directive[
         PointSize[0.009166666666666668], 
         AbsoluteThickness[1.6], FontSize -> 14, 
         RGBColor[1, 0, 0], 
         Thickness[Large]], 
        LineBox[CompressedData["
1:eJxTTMoPSmViYGCQBWIQDQYHkhxiw5PmebzeaQ8RSHZYct1SpGj2bgjfIdnB
LXzZRSudvRB+Q7LDw/1ZTlHH9kH4B5IdmGy2+U9UPQDVn+Lg8vSYwv/HUL5D
isOiJay2RbMPQvgLUhx0tl018V93CKo+1aEpUVvdduVhCD8h1eFzrajbvMlH
7BnB5qc6OJV12mzMOAqRV0hzaJi5g+uQ7DGoe9IcJny+GVD0E8p/kObQnlhq
N1X2BNT+dIe1loXpJ5xOQu1Pd9g0ic1RMeYU1P4MhwKTFYvKc05D7c9wOGSp
tft3/hmo/zIcJsV9YDqTfhZqf6ZDTHvsEg+PcxD3NWQ6/O9KnHGB/zyE/yDT
wamw+/jqw1C+Q5bD7VlJDWz6FyD8BVkO29Tve7oWXYDan+2gkHEqJWE1lJ+Q
7fDiolbojetQ/oFsh1tH9b5NZroItT/HQS3gQnGYK5TfkOMwKffx8b2TLtoD
AAR+kxQ=
         "]]}}}, {}, {}, {{}, {}}}, {
    DisplayFunction -> Identity, PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.02], 
        Scaled[0.05]}}, AxesOrigin -> {147.65625, 0}, 
     PlotRange -> {{150., 300.00000000000006`}, {0, 0.3579214820312051}}, 
     PlotRangeClipping -> True, ImagePadding -> All, DisplayFunction -> 
     Identity, AspectRatio -> 0.85, Axes -> {True, True}, AxesLabel -> {
       FormBox["\"T [GeV]\"", TraditionalForm], 
       FormBox["\"Thermal width [GeV]\"", TraditionalForm]}, 
     AxesOrigin -> {147.65625, 0}, AxesStyle -> 
     Directive[
      FontSize -> 25, Thickness -> 0.004, FontFamily -> "Helvetica", 
       GrayLevel[0]], BaseStyle -> {FontSize -> 14}, DisplayFunction :> 
     Identity, Frame -> {{False, False}, {False, False}}, 
     FrameLabel -> {{None, None}, {None, None}}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> {None, None}, GridLinesStyle -> Directive[
       GrayLevel[0.5, 0.4]], ImageSize -> {1000, 1000}, 
     Method -> {"CoordinatesToolOptions" -> {"DisplayFunction" -> ({
           (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
            Part[#, 1]], 
           (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
            Part[#, 2]]}& ), "CopiedValueFunction" -> ({
           (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
            Part[#, 1]], 
           (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
            Part[#, 2]]}& )}}, 
     PlotRange -> {{150., 300.00000000000006`}, {0, 0.3579214820312051}}, 
     PlotRangeClipping -> True, PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.02], 
        Scaled[0.05]}}, Ticks -> {Automatic, Automatic}}],FormBox[
    FormBox[
     TemplateBox[{
       StyleBox[
       "\"Regularised via decorellation length\"", 25, StripOnInput -> False], 
       StyleBox["\"Unregularised\"", 25, StripOnInput -> False], 
       StyleBox[
       "\"Regularised via asymptotic value\"", 25, StripOnInput -> False]}, 
      "PointLegend", DisplayFunction -> (FormBox[
        StyleBox[
         StyleBox[
          PaneBox[
           TagBox[
            GridBox[{{
               TagBox[
                GridBox[{{
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.16500000000000004`], 
                    AbsoluteThickness[1.6], FontSize -> 14, 
                    RGBColor[0, 1, 0], 
                    Thickness[Large]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.16500000000000004`], 
                    AbsoluteThickness[1.6], FontSize -> 14, 
                    RGBColor[0, 1, 0], 
                    Thickness[Large]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.16500000000000004`], 
                    AbsoluteThickness[1.6], FontSize -> 14, 
                    RGBColor[0, 0, 1], 
                    Thickness[Large]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.16500000000000004`], 
                    AbsoluteThickness[1.6], FontSize -> 14, 
                    RGBColor[0, 0, 1], 
                    Thickness[Large]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.16500000000000004`], 
                    AbsoluteThickness[1.6], FontSize -> 14, 
                    RGBColor[1, 0, 0], 
                    Thickness[Large]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.16500000000000004`], 
                    AbsoluteThickness[1.6], FontSize -> 14, 
                    RGBColor[1, 0, 0], 
                    Thickness[Large]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #3}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                 AutoDelete -> False, 
                 GridBoxDividers -> {
                  "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                 GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}},
                  GridBoxSpacings -> {
                  "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
             GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
             AutoDelete -> False, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
            "Grid"], Alignment -> Left, AppearanceElements -> None, 
           ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
           "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
         FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
         False], TraditionalForm]& ), 
      InterpretationFunction :> (RowBox[{"PointLegend", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", "0.009166666666666668`", "]"}], 
                   ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                   RowBox[{"FontSize", "\[Rule]", "14"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0, 1, 0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> RGBColor[0., 0.6666666666666666, 0.], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0, 1, 0]"], Appearance -> None, BaseStyle -> {},
                     BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0, 1, 0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0, 1, 0], Editable -> False, Selectable -> 
                    False], ",", 
                   RowBox[{"Thickness", "[", "Large", "]"}]}], "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", "0.009166666666666668`", "]"}], 
                   ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                   RowBox[{"FontSize", "\[Rule]", "14"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0, 0, 1], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> RGBColor[0., 0., 0.6666666666666666], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0, 0, 1]"], Appearance -> None, BaseStyle -> {},
                     BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0, 0, 1]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0, 0, 1], Editable -> False, Selectable -> 
                    False], ",", 
                   RowBox[{"Thickness", "[", "Large", "]"}]}], "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", "0.009166666666666668`", "]"}], 
                   ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                   RowBox[{"FontSize", "\[Rule]", "14"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[1, 0, 0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> RGBColor[0.6666666666666666, 0., 0.], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[1, 0, 0]"], Appearance -> None, BaseStyle -> {},
                     BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[1, 0, 0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[1, 0, 0], Editable -> False, Selectable -> 
                    False], ",", 
                   RowBox[{"Thickness", "[", "Large", "]"}]}], "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", "0.009166666666666668`", "]"}], 
                   ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                   RowBox[{"FontSize", "\[Rule]", "14"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0, 1, 0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> RGBColor[0., 0.6666666666666666, 0.], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0, 1, 0]"], Appearance -> None, BaseStyle -> {},
                     BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0, 1, 0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0, 1, 0], Editable -> False, Selectable -> 
                    False], ",", 
                   RowBox[{"Thickness", "[", "Large", "]"}]}], "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", "0.009166666666666668`", "]"}], 
                   ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                   RowBox[{"FontSize", "\[Rule]", "14"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0, 0, 1], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> RGBColor[0., 0., 0.6666666666666666], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0, 0, 1]"], Appearance -> None, BaseStyle -> {},
                     BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0, 0, 1]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0, 0, 1], Editable -> False, Selectable -> 
                    False], ",", 
                   RowBox[{"Thickness", "[", "Large", "]"}]}], "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", "0.009166666666666668`", "]"}], 
                   ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                   RowBox[{"FontSize", "\[Rule]", "14"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[1, 0, 0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> RGBColor[0.6666666666666666, 0., 0.], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[1, 0, 0]"], Appearance -> None, BaseStyle -> {},
                     BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[1, 0, 0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[1, 0, 0], Editable -> False, Selectable -> 
                    False], ",", 
                   RowBox[{"Thickness", "[", "Large", "]"}]}], "]"}]}], "}"}],
            ",", 
           RowBox[{"{", 
             RowBox[{#, ",", #2, ",", #3}], "}"}], ",", 
           RowBox[{"LegendMarkers", "\[Rule]", 
             RowBox[{"{", 
               RowBox[{
                 RowBox[{"{", 
                   RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                 RowBox[{"{", 
                   RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                 RowBox[{"{", 
                   RowBox[{"False", ",", "Automatic"}], "}"}]}], "}"}]}], ",", 
           RowBox[{"Joined", "\[Rule]", 
             RowBox[{"{", 
               
               RowBox[{
                "True", ",", "True", ",", "True", ",", "True", ",", "True", 
                 ",", "True"}], "}"}]}], ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
             RowBox[{"{", "}"}]}], ",", 
           RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
      Editable -> True], TraditionalForm], TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"], 
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]], "Output",
 CellChangeTimes->{3.747711413611393*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"ListPlot", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{"Transpose", "[", 
      RowBox[{"{", 
       RowBox[{"Tscancnew", ",", 
        RowBox[{"ImRegArea", "[", 
         RowBox[{"[", 
          RowBox[{"All", ",", "1"}], "]"}], "]"}]}], "}"}], "]"}], ",", 
     RowBox[{"Transpose", "[", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"Tscancnew", "[", 
         RowBox[{"[", 
          RowBox[{";;", "13"}], "]"}], "]"}], ",", 
        RowBox[{"ImUnRegArea", "[", 
         RowBox[{"[", 
          RowBox[{"All", ",", "1"}], "]"}], "]"}]}], "}"}], "]"}], ",", 
     RowBox[{"Transpose", "[", 
      RowBox[{"{", 
       RowBox[{"Tscancnew", ",", 
        RowBox[{"ImAsArea", "[", 
         RowBox[{"[", 
          RowBox[{"All", ",", "1"}], "]"}], "]"}]}], "}"}], "]"}], ",", 
     RowBox[{"Transpose", "[", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"Tscancnew", "[", 
         RowBox[{"[", 
          RowBox[{";;", "29"}], "]"}], "]"}], ",", 
        RowBox[{
         RowBox[{"ImRegArea", "[", 
          RowBox[{"[", 
           RowBox[{";;", "29"}], "]"}], "]"}], "[", 
         RowBox[{"[", 
          RowBox[{"All", ",", "2"}], "]"}], "]"}]}], "}"}], "]"}], ",", 
     RowBox[{"Transpose", "[", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"Tscancnew", "[", 
         RowBox[{"[", 
          RowBox[{";;", "13"}], "]"}], "]"}], ",", 
        RowBox[{"ImUnRegArea", "[", 
         RowBox[{"[", 
          RowBox[{"All", ",", "2"}], "]"}], "]"}]}], "}"}], "]"}], ",", 
     RowBox[{"Transpose", "[", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"Tscancnew", "[", 
         RowBox[{"[", 
          RowBox[{";;", "29"}], "]"}], "]"}], ",", 
        RowBox[{
         RowBox[{"ImAsArea", "[", 
          RowBox[{"[", 
           RowBox[{";;", "29"}], "]"}], "]"}], "[", 
         RowBox[{"[", 
          RowBox[{"All", ",", "2"}], "]"}], "]"}]}], "}"}], "]"}]}], "}"}], 
   ",", 
   RowBox[{"Joined", "\[Rule]", "True"}], ",", 
   RowBox[{"AxesStyle", "\[Rule]", 
    RowBox[{"Directive", "[", 
     RowBox[{
      RowBox[{"FontSize", "\[Rule]", "25"}], ",", 
      RowBox[{"Thickness", "\[Rule]", "0.004"}], ",", 
      RowBox[{"FontFamily", "\[Rule]", "\"\<Helvetica\>\""}], ",", "Black"}], 
     "]"}]}], ",", 
   RowBox[{"BaseStyle", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"FontSize", "\[Rule]", "14"}], "}"}]}], ",", 
   RowBox[{"AspectRatio", "\[Rule]", "0.85"}], ",", 
   RowBox[{"AxesLabel", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"\"\<T [GeV]\>\"", ",", "\"\<Thermal area [GeV]\>\""}], "}"}]}], 
   ",", 
   RowBox[{"PlotStyle", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"Green", ",", "Thick"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"Blue", ",", "Thick"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"Red", ",", "Thick"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"Green", ",", "Thick"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"Blue", ",", "Thick"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"Red", ",", "Thick"}], "}"}]}], "}"}]}], ",", 
   RowBox[{"PlotLegends", "\[Rule]", " ", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"Style", "[", 
       RowBox[{"\"\<Regularised via decorellation length\>\"", ",", "25"}], 
       "]"}], ",", 
      RowBox[{"Style", "[", 
       RowBox[{"\"\<Unregularised\>\"", ",", "25"}], "]"}], ",", 
      RowBox[{"Style", "[", 
       RowBox[{"\"\<Regularised via asymptotic value\>\"", ",", "25"}], 
       "]"}]}], "}"}]}], ",", 
   RowBox[{"ImageSize", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"1000", ",", "1000"}], "}"}]}]}], "]"}]], "Input",
 CellChangeTimes->{{3.7477114020718403`*^9, 3.747711410729104*^9}}],

Cell[BoxData[
 TemplateBox[{GraphicsBox[{{}, {{{}, {}, {
        Hue[0.67, 0.6, 0.6], 
        Directive[
         PointSize[0.009166666666666668], 
         AbsoluteThickness[1.6], FontSize -> 14, 
         RGBColor[0, 1, 0], 
         Thickness[Large]], 
        LineBox[CompressedData["
1:eJw10G1IU1EYB/D5DlI0jN4o5WqYMHXM1IpC/WMhKkRO7MWUvLpXt7ndO1Ki
PriIkLQklxpRxrLCNoOUSaEjufQhqMS0yJnLuqa9CGkuzQ+GkbnHA4fD75zz
nOd5TmyFpVATLJFI0lfm/3V1CBVQu8oN+8InsgIbKjS01rQE+cWAoYJdvyln
0Ee2qfDLf7C04zlZUCGiMLustZssUSPKp7xx+dZavBqup9dy2urIDjWm2OJu
k37tvgbJ0zOH6/LIrAaLL5T5/TIxK2j1fQ26P7f649fROaNF6q6iGa3vE9Wj
hT/Pc+/QbbKoRcaTJuWPcjJ0uOK1bwuNJzt0iB5JehT9/SPl10PXku6WO8ms
HhOD/qplA1nQo0IYnrojJzOVyIwJ3+2dHQ/UZ6vEYPaSLaSLLFYiUhqmqLGS
YUCfjB8LTiU7DOhXjtxsnP9A+Y1Iadpp63GTWSPqh//YXTxZMOJ1h/Rug4LM
mJDHHhhY/9NH/ZtQ/yy395WTLJrg71lmrxvIqML5cZ9+MYHsqMKZnjeX3JNj
lN+MmiPykoV2MmtGc0ZydWIZWTAjf/RCyzuGzFgwPZmWu+Xre8pvweb7ezIl
nWTRgr7tnqORPJnhUDR1Mu7vfnIBB3f1wNxC6Fo8h4iNQd+Kh0YD7uLwIDhs
zNhOFlecsLfAYyFLeSg6X/bW5pLBY4PdszUqlszxmJCdGHIuealfHqkl89zD
UW/g/4d4JH3ZIZ3tJUusqD1X//h3G1lhxfG0U83MRTJrRWPcTKmDI1+1IuV0
TOJblixYETJ31iE/5s36BwiTFRE=
         "]]}, {
        Hue[0.9060679774997897, 0.6, 0.6], 
        Directive[
         PointSize[0.009166666666666668], 
         AbsoluteThickness[1.6], FontSize -> 14, 
         RGBColor[0, 0, 1], 
         Thickness[Large]], 
        LineBox[{{150., 0.5326705401628552}, {152., 0.5302079167410223}, {
         154., 0.5277609415529062}, {156., 0.525326127295754}, {158., 
         0.5229085631556776}, {160., 0.5205092287319045}, {162., 
         0.5181241223704184}, {165., 0.5146060132622318}, {168., 
         0.5110865270282655}, {171., 0.5076556704015314}, {
         174.00000000000003`, 0.5042228695615962}, {177., 
         0.500811342279319}, {180., 0.49748685883182}}]}, {
        Hue[0.1421359549995791, 0.6, 0.6], 
        Directive[
         PointSize[0.009166666666666668], 
         AbsoluteThickness[1.6], FontSize -> 14, 
         RGBColor[1, 0, 0], 
         Thickness[Large]], 
        LineBox[CompressedData["
1:eJw10HtIU1EcB/CrEEURFOSk9UAjtQeSWkpWtK9SEhUYllBWctvLPXS791ZS
aTYtpDDNaH80YTnR/lmWRgb2WtccNqLEcJnvbqETY4mRiYPKyvvzwOHwOef8
zvecE622ZunCGYZJ/tf/j3NNVMO7Pi19JPyzSp7Q4Jn7qGM8KMmGBmvaUwb6
e8g2DSqutre8FMmiBqdqMgcdbjKjhUV64BXs8/Va7Hv4RJ1VQnZp4bkxqlh7
cn6/DtWBWndgJ5nVIWm0buNdpaQKmztfB5W341jMj0/yepQe5xVbm2qayTY9
etUm4wILWdKjzh8ZSt1MRh6OJHamNY4NU34epp1FZ3z1ZMYAPqFUs4slswZM
CE/Hlq8iiwbYe3u+TfmHKN+Ic9uKdj+qHJLvZzNibDzJ/CeDLBmxfSj7cCZD
hgm+r1J8W+ugbJcJufeuVxcWDFK+GUt9DjF5HZk1w1nKdnm7ByjfjJkSLlxx
mRyVjyVTM+5AItmWj6oLJ1pjB/rp/flwlLWVK8vJKEBtdFhIE092FcC1IudS
cWcf5VtwP0bZl3OWzFqgn7IU7V1JFi246L69afZ5L+Vb4VxsWHg6l2yzIrbY
1P6GIUtWjH4ZjnA2fKT9HOzlnk5+P/kQhwNNeXHanz1Uz+GW52Yw4g65mcPs
ZKB0y0GyxEFxJTJi4vcH2ct4BGJfN5Q1k8HDrXhfWGEmczz2XEuxp8aRXTyk
d56a4Ihf/v8uHo83fG9YVE9mBLRMKoMZZnKCgLBXvvSMBDIroHJ1R6jqV7fs
agHHX0yz/FuyKMC/I9RY6exW/QU7BB9x
         "]]}, {
        Hue[0.37820393249936934`, 0.6, 0.6], 
        Directive[
         PointSize[0.009166666666666668], 
         AbsoluteThickness[1.6], FontSize -> 14, 
         RGBColor[0, 1, 0], 
         Thickness[Large]], 
        LineBox[CompressedData["
1:eJxTTMoPSmViYGCQBWIQDQYHkhxMdqpckNl32h4ikOywVFA+dNWhUxC+Q7JD
u80fIaPdJyH8hmSHvsidz5auPQHhH0h2+OglP/fC3ONQ/SkO221OOZvPOwbV
n+JQtMFY6cDWoxD+ghQHHp4bK7YGH4GqT3X4/j3E1pbvMISfkOpQpTrV+dvD
g/aMYPNTHVI0ZqQ3PzoAkVdIc+C9lOlktWU/1D1pDlapR20i+/dC+A/SHE4m
qEjNtNsNtT/dQV3t26SWizug9qc71Pou3qvouQ1qf4bDT8lnzDxrNkPtz3CY
MtPPu0l2I9R/GQ4LjPeX64uvhdqf6ZCdrZV7V3wFxH0NmQ7l/qWvFi9aDOE/
yHRY/NVp1x3zeRC+Q5bDqhgPsV6zaRD+giyHQ+ue/tNk7oXan+3wrGFd4YfQ
Oqj92Q6ibT/8M96EQe3Pdrh8+17e7SNqUPtzHM5Zivjp31aA+j/H4a9SWaWD
loI9AAV5jus=
         "]]}, {
        Hue[0.6142719099991583, 0.6, 0.6], 
        Directive[
         PointSize[0.009166666666666668], 
         AbsoluteThickness[1.6], FontSize -> 14, 
         RGBColor[0, 0, 1], 
         Thickness[Large]], 
        LineBox[{{150., 0.21299273360286514`}, {152., 0.20479526367057763`}, {
         154., 0.1963128273051225}, {156., 0.18932883683279716`}, {158., 
         0.18239853803372857`}, {160., 0.17605969315349218`}, {162., 
         0.1695667467107527}, {165., 0.1605690965351547}, {168., 
         0.1529854060551239}, {171., 0.14525683262825878`}, {
         174.00000000000003`, 0.13710644514471576`}, {177., 
         0.12821575298647936`}, {180., 0.11902359760184789`}}]}, {
        Hue[0.8503398874989481, 0.6, 0.6], 
        Directive[
         PointSize[0.009166666666666668], 
         AbsoluteThickness[1.6], FontSize -> 14, 
         RGBColor[1, 0, 0], 
         Thickness[Large]], 
        LineBox[CompressedData["
1:eJxTTMoPSmViYGCQBWIQDQYHkhw4tFZPfVh9xh4ikOxQdWzn6rSe0xC+A5DP
FXckpOMUhN+Q7KByVPb3i3knIfwDyQ6uP/mypqw4AdWf4nBmYaTcyU3HofpT
HDg9baf7bj0G4S9IcVhlcCvvl+VRqPpUBxNnLh6JG4ch/IRUB47y6rtLKg/Z
M4LNT3U4VfJv6gvZgxB5hTQH4XRRz1Nz90Pdk+ZwT2FS5Z6GvRD+gzSHgGfd
r/9P2w21P93h54lVJ7et3Qm1P93BJuTBspBZ26H2Zzi06NQrRhVshdqf4eB7
VW71L8PNUP9lOBzSMXTuf7cBan+mg62y4f+Zgmsh7mvIdNhfFswdGbYCwn+Q
6ZApohZVe24xhO+Q5XAtRidRZvs8CH9BlsP/m1/Z1B2mQe3Pdqg/wDDzxZMe
qP3ZDjMSl7U6y9VA7c92ENRzcPrdHwi1P8fBcN9mdud17FD/5zj02WQcsxRi
tAcAxMeOZA==
         "]]}}}, {}, {}, {{}, {}}}, {
    DisplayFunction -> Identity, PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.02], 
        Scaled[0.05]}}, AxesOrigin -> {147.65625, 0}, 
     PlotRange -> {{150., 300.00000000000006`}, {0, 0.5326705401628552}}, 
     PlotRangeClipping -> True, ImagePadding -> All, DisplayFunction -> 
     Identity, AspectRatio -> 0.85, Axes -> {True, True}, AxesLabel -> {
       FormBox["\"T [GeV]\"", TraditionalForm], 
       FormBox["\"Thermal area [GeV]\"", TraditionalForm]}, 
     AxesOrigin -> {147.65625, 0}, AxesStyle -> 
     Directive[
      FontSize -> 25, Thickness -> 0.004, FontFamily -> "Helvetica", 
       GrayLevel[0]], BaseStyle -> {FontSize -> 14}, DisplayFunction :> 
     Identity, Frame -> {{False, False}, {False, False}}, 
     FrameLabel -> {{None, None}, {None, None}}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> {None, None}, GridLinesStyle -> Directive[
       GrayLevel[0.5, 0.4]], ImageSize -> {1000, 1000}, 
     Method -> {"CoordinatesToolOptions" -> {"DisplayFunction" -> ({
           (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
            Part[#, 1]], 
           (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
            Part[#, 2]]}& ), "CopiedValueFunction" -> ({
           (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
            Part[#, 1]], 
           (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
            Part[#, 2]]}& )}}, 
     PlotRange -> {{150., 300.00000000000006`}, {0, 0.5326705401628552}}, 
     PlotRangeClipping -> True, PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.02], 
        Scaled[0.05]}}, Ticks -> {Automatic, Automatic}}],FormBox[
    FormBox[
     TemplateBox[{
       StyleBox[
       "\"Regularised via decorellation length\"", 25, StripOnInput -> False], 
       StyleBox["\"Unregularised\"", 25, StripOnInput -> False], 
       StyleBox[
       "\"Regularised via asymptotic value\"", 25, StripOnInput -> False]}, 
      "PointLegend", DisplayFunction -> (FormBox[
        StyleBox[
         StyleBox[
          PaneBox[
           TagBox[
            GridBox[{{
               TagBox[
                GridBox[{{
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.16500000000000004`], 
                    AbsoluteThickness[1.6], FontSize -> 14, 
                    RGBColor[0, 1, 0], 
                    Thickness[Large]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.16500000000000004`], 
                    AbsoluteThickness[1.6], FontSize -> 14, 
                    RGBColor[0, 1, 0], 
                    Thickness[Large]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.16500000000000004`], 
                    AbsoluteThickness[1.6], FontSize -> 14, 
                    RGBColor[0, 0, 1], 
                    Thickness[Large]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.16500000000000004`], 
                    AbsoluteThickness[1.6], FontSize -> 14, 
                    RGBColor[0, 0, 1], 
                    Thickness[Large]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.16500000000000004`], 
                    AbsoluteThickness[1.6], FontSize -> 14, 
                    RGBColor[1, 0, 0], 
                    Thickness[Large]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.16500000000000004`], 
                    AbsoluteThickness[1.6], FontSize -> 14, 
                    RGBColor[1, 0, 0], 
                    Thickness[Large]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #3}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                 AutoDelete -> False, 
                 GridBoxDividers -> {
                  "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                 GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}},
                  GridBoxSpacings -> {
                  "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
             GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
             AutoDelete -> False, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
            "Grid"], Alignment -> Left, AppearanceElements -> None, 
           ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
           "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
         FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
         False], TraditionalForm]& ), 
      InterpretationFunction :> (RowBox[{"PointLegend", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", "0.009166666666666668`", "]"}], 
                   ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                   RowBox[{"FontSize", "\[Rule]", "14"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0, 1, 0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> RGBColor[0., 0.6666666666666666, 0.], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0, 1, 0]"], Appearance -> None, BaseStyle -> {},
                     BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0, 1, 0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0, 1, 0], Editable -> False, Selectable -> 
                    False], ",", 
                   RowBox[{"Thickness", "[", "Large", "]"}]}], "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", "0.009166666666666668`", "]"}], 
                   ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                   RowBox[{"FontSize", "\[Rule]", "14"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0, 0, 1], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> RGBColor[0., 0., 0.6666666666666666], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0, 0, 1]"], Appearance -> None, BaseStyle -> {},
                     BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0, 0, 1]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0, 0, 1], Editable -> False, Selectable -> 
                    False], ",", 
                   RowBox[{"Thickness", "[", "Large", "]"}]}], "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", "0.009166666666666668`", "]"}], 
                   ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                   RowBox[{"FontSize", "\[Rule]", "14"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[1, 0, 0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> RGBColor[0.6666666666666666, 0., 0.], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[1, 0, 0]"], Appearance -> None, BaseStyle -> {},
                     BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[1, 0, 0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[1, 0, 0], Editable -> False, Selectable -> 
                    False], ",", 
                   RowBox[{"Thickness", "[", "Large", "]"}]}], "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", "0.009166666666666668`", "]"}], 
                   ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                   RowBox[{"FontSize", "\[Rule]", "14"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0, 1, 0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> RGBColor[0., 0.6666666666666666, 0.], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0, 1, 0]"], Appearance -> None, BaseStyle -> {},
                     BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0, 1, 0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0, 1, 0], Editable -> False, Selectable -> 
                    False], ",", 
                   RowBox[{"Thickness", "[", "Large", "]"}]}], "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", "0.009166666666666668`", "]"}], 
                   ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                   RowBox[{"FontSize", "\[Rule]", "14"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0, 0, 1], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> RGBColor[0., 0., 0.6666666666666666], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0, 0, 1]"], Appearance -> None, BaseStyle -> {},
                     BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0, 0, 1]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0, 0, 1], Editable -> False, Selectable -> 
                    False], ",", 
                   RowBox[{"Thickness", "[", "Large", "]"}]}], "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", "0.009166666666666668`", "]"}], 
                   ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                   RowBox[{"FontSize", "\[Rule]", "14"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[1, 0, 0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> RGBColor[0.6666666666666666, 0., 0.], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[1, 0, 0]"], Appearance -> None, BaseStyle -> {},
                     BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[1, 0, 0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[1, 0, 0], Editable -> False, Selectable -> 
                    False], ",", 
                   RowBox[{"Thickness", "[", "Large", "]"}]}], "]"}]}], "}"}],
            ",", 
           RowBox[{"{", 
             RowBox[{#, ",", #2, ",", #3}], "}"}], ",", 
           RowBox[{"LegendMarkers", "\[Rule]", 
             RowBox[{"{", 
               RowBox[{
                 RowBox[{"{", 
                   RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                 RowBox[{"{", 
                   RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                 RowBox[{"{", 
                   RowBox[{"False", ",", "Automatic"}], "}"}]}], "}"}]}], ",", 
           RowBox[{"Joined", "\[Rule]", 
             RowBox[{"{", 
               
               RowBox[{
                "True", ",", "True", ",", "True", ",", "True", ",", "True", 
                 ",", "True"}], "}"}]}], ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
             RowBox[{"{", "}"}]}], ",", 
           RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
      Editable -> True], TraditionalForm], TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"], 
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]], "Output",
 CellChangeTimes->{3.74771142543911*^9}]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{"tab", "=", 
   RowBox[{
   "Import", "[", "\"\<spectraldata/Tscan/AsReg/cc/swccT150spectra.dat\>\"", 
    "]"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.747835606769857*^9, 3.747835634649831*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"tab", "=", 
   RowBox[{"tab", "/.", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"a_", ",", "b_"}], "}"}], "\[RuleDelayed]", 
     RowBox[{"{", 
      RowBox[{"a", ",", 
       RowBox[{"b", "/", 
        SuperscriptBox["a", "2"]}]}], "}"}]}]}]}], ";"}]], "Input",
 CellChangeTimes->{{3.747835687656106*^9, 3.74783569876297*^9}, {
  3.7478357485350027`*^9, 3.747835783411928*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"ListPlot", "[", "tab", "]"}]], "Input",
 CellChangeTimes->{{3.747835699970093*^9, 3.747835702679441*^9}}],

Cell[BoxData[
 GraphicsBox[{{}, {{}, 
    {RGBColor[0.368417, 0.506779, 0.709798], PointSize[0.002777777777777778], 
     AbsoluteThickness[1.6], PointBox[CompressedData["
1:eJwU13k4lF8bwPGZSZKQJKSo/EIkRSVU7ieKUlHMvtpCWSpSIZRsWZPIki1r
WUpZSyiSpBKylBaVohBCkZr3fv/q+lxJz8xzvvc5Z5XdUatDFBKJ1KdOIv3/
z9uUzB3Jc4Rw4g/5hfgWKtxwVOc/FxGCZepeClOfCteai3wookJwevM5utGA
Csnam67ozROC89oI6/+2UuHSpbt3jogJYXdWTvj5bVQInyJa0+YL4c8L18Ce
7VQIZD8eahMXwvPah4WbgAreNfvnz5MQguNOsfh4ggrHVTpUt0oK4ez05ujx
HVQ4HMI2PiolhJeh4tcPmFDB9tsHftZCIVhcXpp1dycVmBZOvl3SQuiinGtf
bEqFA7eHryyQEcJ27inmcTMq7JY7UQqL8fcNnd7xfDcVCJ+ZVk9ZIZR+tH2v
bU4F/Xdnh/OW4O8bPGl7eS8VNhjPE++VE8LadLuxX/uosCY3Sk1aQQjLfd+Y
0iyosFJc1mTnUiF0pDzruG9JBQX3ZMFpRSEcpkR6LDtIBem2lWcKlwlhyRPC
McCKCmJ6eYkflgth0lvlU7s1FUjJ68pklYVg9dT0phmNCr/+3nm5e4UQ7sfE
+BXQqfDD1nDkzEoh1E2YgySTCl8f1YmXrBJC8Bl6gCeLCu81zNT7VYTgF5je
2MOmQmfUM5Olq/H566RWEFwqPB+zttmvij9fdFT2Oo8KjbTXZ86pCeF8qMUR
MQEVaqpsksrUhZB5bWWepw0VypW+lg2uEQK390lOty0Vis+5tSlpCkF9/vxK
Q3sq5Pb/HDm4VghSy6l3ch2okLbHZ0GIlhAM6iRYix2pkFBEWnN3nRCm2Kqr
/Z2oEL0odOeIthC0vXnJn52pEOIlaauyQQjGBi6vDh6hgn9PnB9dRwiHXuYk
3HOhgtd2xeRwXSEouhSEqLlRwS0zo7xmI64fZRONUHcqHJqr3j6+SQi1Ghs7
fxylAu9w0Q81PSGIOBuKCo5TgfpsowRnCz5/ZoB3iwcV9uncXROjLwSZZQuK
9E5QYWc8saveAJ/X2nRVvhcVtk032v4yxPfr/VBD4hQVNvH2+6/dJoTPD5Y6
+Z6mgtaD9mTBdiFIbJOI+uZNhdWq7Io4IyG4Snx2YvpSYfmFD+2PQQghczoi
ms5QQXbYcfQPIYT/nuZ+N/CngsTBYYkNxkK48+22f2EAFUTKPDUcTITwU9Qt
ePk5KswqzOxK3CmEHw6KO4MCqfDzzFm7ll1CIPted5g4T4XvH0QDSGZCcIuy
9jgUTIVPO6NSNu0WgnuFbWN3CBXe5C+udN4jBPajpc2WYVRok0juuGouBM+s
uGX1F6jQfGzlWOteIfy6tPC8bgQVHnbkSs7dL4QEya6FaZFUuKu/TtPAAten
uM56hWgq3L56x9TNUgj7366x9I/B3kmG9pkHhBAmc8V3biz27lAX8OqgEBxm
VS95X8Lem0yvzrcWwrdlv+K+xWHvWs8qt1OFELiNlmEbj71ftH51nCaEEesU
i64E7H2iZyyHLoR/L96c3pdIBR+mjdRrBq4/oqvrQRIVPKq/aEqx8PP8vFli
kIK9r3QzM2YLQVy57U7JVew96Kf9SY4QmsPXJqqlUYE14H32BlcI3UuSb2ek
U+HgPlLqO54QbFcE5a3IxN5vhVTJCLD/G38nLl3D3mUlO01thFCe014hmY29
n44b97HFefRFuzckB3vvXbrwpp0Qrk7VpszNw96JjLWf7PHf6+5z88vH3rPV
dssfEsKDj7EnZq5j72JFDnsdhfDsad1HzwLs3XXjuQAnIezQEyr9KMTeW6tS
7zgLwYVtfcWlGHvfRNz9elgIywwXDn29SYXfVxo7l7kIodO0o8SphAqjf/b9
tHQVgoaUPfPzbexd0L4wyE0I78xHU/il2Hs9S6vSXQjhKxrtesuo0KX+YffQ
USHMHq25yqmgwosIx0MrjwtBzCKT+roSe/8xdI7qgevXrDCLdxd7t/ZMC/MU
wteUu85v72HvFdN3q08IQXIu4wXrPva+7GzXqBfOX8lNLr012HuA6MTqU0Lo
Fdx14Ndh758ipVmn8fkMatLfPcDezRavi/IWgqCrfoF9PfZekLTngY8QPt0L
vP68AXtfuNJx0lcIbWFw5kAj9u6ZG6jhJwQ7uf+HQ4WTXVrpPH8hzBU+8GI+
oYL71jv3YgOEkL3o3GBnM/aebtD96KwQij3fFgtasPc5dRPT54SQRNl2ceAZ
FWhOpou0zwthOErVx+UFFfY/bVlnF4R9PT38mvwSe19vbZ4QjD2d3w1hbdh7
XI9jcwjOW06jqHQH9v5LcP5fqBDWwao3Ca+wd86XdN0LQnhcsnhweRf2Xuta
7RguBOmw7ttZ3dj7fz+7kyPwfWbzFmq/xt5DvSefRwoh75LrmZo32Pt34aI5
0UIgXnysN32LvVuGaG+Jwc/3KqryyTvs/bbEXpeLQjBslIlhfKDChFycU3qs
ELwUP6t/6qPCkM/SoPZL2HuA8Q33T9j7u/SMeZfx+ajSSdOfsXdjtftb44Ww
q87AIOgLFdpzC3uOJuD+HOCyjDJAhafiG6eyrghhsbxiS/IgFerdq2S6E/F5
5k0Va33H3ttgvUSyEHIvrFxbNYS96zXuJVKEkKLPCNYfwd6T9zmfuIrrZTiE
3fkDe//XFpSfKoSDv1oa7cewdztWZm+aEKrqXcZGx7H3xvf3pTNwP0z8b/e5
Cexd0/H1zkwhNK7y/C41hb1HD02dvobzr1Y0Ov0X9j7usbgoC//9J70vq6ax
d/r0+r5sITw6dOrynRkqHLkbsG9JLu4XonMY1Fkq2CmLHt6Th7/flePz8S/2
HhgZ7JeP+93V+U4+Quz9i8y1kuv4vkNeuVDINNhjnlTTfwN/f5OyVDyFBjuK
V7xZWigE1vZHeVoiNNCXyf21vwjnUf9Px5q5NNhwUks2sFgIOgmO0lbzaLDm
9e0N5TfxfLGFafVFjAYrjQz2f7uFv7+80CdQnAYK12oPK98WQpmW2K9FEjSQ
FjUNsbojBNW1Ar8MSRqIHWm5FlIqhMJqzpI9C2lAem5Ve7cM56uXQ0SfNA1+
6/S8GSnH+Wwp7nZKhgaj8YLfKpVCOD2Zdn+xLA0GpvtlGVVCiFTy8M5bQoMP
PFediLtC+N3POLNVngZdD8b3194TQkVd+JWXCjR4oep95Gc1vk/dTxtPKtLg
8QVhiHoN7o9jX1sll9Ogdjg4i1OL57MJS0aeEg3KD0rUxdQJQX6v2GaTFTQo
LrvUW/8A969XW9u6V9Igd+nS6V8PhfB2P2/lCRUapPmlL9FqEILSfclFS1fT
IKFPVdfmkRAi3rvNlKnSIHpXocXlRtxfYlYco6rTIOS6rkvTYyGEHnvB6FpD
A3/JqtDZJiGk3830uqBJg5PHIXtDsxBk+yoU1LRo4P7qUZ3DUzyfCHoePl5H
A0eDfW8TW3C/MQ7qcFpPA35q23TLM/x5XWgQ0aEBjcySI7/A+X48rSJblwb7
D73X3dwqhL37n90w30SDXU8OWR5+KQRhVPrR4c002L5uyCW1Dc9D4jf3RG2h
waZYj7CX7bi/DHVRtAxooDX5O3vuKyH4U6Ti6w1psJoV8MCgE50lOOC1jQbL
789959YlhH4idoOcEQ1kV0XOZHbj+eyUU8JdoIFEsIx8Z48QpitlZO120EBk
MHGj+BvcX3xeHxY1ocHsvhUHjHpxft6R18rfSYOJWzmuHm9x3pqQVpiY0mBI
VutC7js8L81puvnVjAafT9/Oef0e35fm5OjlPTTo7dV/KNWH+5O6mN7GvTTo
IGrfGX/E53MK5r/eR4On2bv+nPyE89HnrEiEBQ3qxVrkCz7j+ftk3DLdAzS4
52q16X0/9uucfKrrIA3utHYfWPxVCE8VzajnrWlwY5PAzWwA9zMNV0NtGg2u
JfZf8B0Ugr7nu39ddBokz7rk3vyG77+iMzKQSYNLNuMPP33H+bLFokKDTYPw
htPv5Ydxv/zF+TrNoUHgGuGfvSN4vmrX083n0cAnMljh7A8h2Fy3WHhAQAOP
0QWbS0dxP4+zWi60ocER6qWDA2O4ny35e6HEjgZ2lQruy38KIf4vLYLnQAP2
8vTwAxNCMLMIk5Z0pIHVWdW8oEkhbGy98OOOE/b+uaC+ckoIqw565Ngdxt53
634Y+oXP1/v7g6wLDQwKK2dXTguh5NE640pXGuhIw1LajBBMQjR+HXfH3k88
2nzhD57/1NUHVhzD3rv3Wt2fFcKgsKngxXHsfVub+9hfIZAWesX7e2LvGcwI
VaEQUiu8ndd74fsO/NGuRSIR8nseX/90Ensv1f3YiN5dpSYddxrff7/XqA2Z
RGT0hmdY+WD/8lX/ZtCvBQtfip7B9bBnViKeQiJc9+RE5vjhPPCFZevnkIiK
kHlzbANwfRQFajxB/zn86sHqczgf3j/aYi9CIvL/BYu+DsT1smi+6V+0S5Dk
5KUgnBcm+6hX5pKIm1bnd5qF4PrxirHTESURa0M9SOQwGnTntR17ih4JWuSf
f4EG7T1LAg7NIxEppwbPuUbgPFnAihKilS6fb9eOwvW1/WpKkhiJuHaxPvx1
NM6Xo++vb5xPImiSz5yzL+J6y1SpfIZeepCmw7uE86b9UKOTOInQrlE4vuAy
rr+51zvIC0jEN2Lq1Ot4GlRsGfqYgo5f3XLrwhVcj4fXj22WIBGfN2u6mybR
4GaKh/AFWqtg46rRZBoUPCuTPCKJn3/JobZ7V2mQJ/y9TESKRHT8iDlyNg3X
q842zTS0jM/P8+oZOK/sA/T1F5KI5rPuVX8ycf3GPzRtQ3/sHI++l4Xz6/Fc
mqs0iaiGyrjwHFzP07vtRReRCPG1eWb783CerY08noF2TX3oJXId1zfvRYCh
DInwm30a3XID51uMTHQHepNIUFhIIa73B7Sr7otJxCrrZVTLYpx3PxNviMmS
iPknlDPEb+H6V+2tvIZOfL9we3cJzj/GisfblpCIsqMbXnvewR4u2L3qRIvu
a4nbUobz8F7Op2NyuD5STJcIy7GP4YExcXkScXa64OCTSpyPK7RIOej3tW2a
F+9iLwePSoECiaBuf196oBrn5fnby3vQ++b7m2jWYD9lk5qeS0lEQFGv2q9a
GtC/6htIKpKIXT6c2eoH2NPSM2Z56OCKmF63epyne2tpO5aRCMmX38O2PMK+
/CgOb9BJ4SY80mOcrzd3eXgtJxGVu6/aPmnC3vrCzi5UIhG5IyVvYptx3i5u
ib6OZomJTTu3YH+7FqaaKJMIFb/BxbrPabD5lFXBW/TH7YExf19gj9fjq06t
wPU0epjd85IG6950P160kkRcbP/QldNOAw3J5Z0F6JUJPwNcXtFAFQSfd63C
9VymfGtTFw1WHb82/h596HPL4N9unNdZ/SQfFRJx3fHVw87X2O+rNQtl/yMR
UXs278noxfk9z1WpGD0tNtnr/g57Nri5dvdqEiGnlONi8AHnucu4wUd0xvgS
EaWPuJ+nbt59RpVEpG8Rv//pE/b+4jRdTg37Vn5iWNaPvZOrHW6hUwzmFp79
ir3rCj3M1UlE3ZNDm20GsXcH43Of0Ra3gijrv2PvCcEx/mtIhOHnE6Ziw9h7
U1OqggaJeOPMcu4dwd5nFhTeRrcvNZK6MYq9a1ne3adJIv757GSeH8fe+Zea
vqDrdhhFWk5g7xdfdZ5dSyJGC4dU5aew94cK/Ypa+PdVaytnfmHvE5yfpWjn
sCyb+mncP9TSyZbrsD/Vv7eT/tCglflx4SD606sUuudf7D1cVfm8Nom4zPyr
yxBi79XOWkrrSUTq7it/DMh0qB8pMKxAt75yPjNLoUPtyh+7D27A558SWdkp
Qod7VrqM7+igf7Lpt0TpUBHkdShYh0TsPTfpHy5GhzvllZ4rdPH7tyo87yRO
h5sDf85VoYcUCqJ3StChQBEuWm8kEY6pgXpaUnTI2xeYNoxOtbfe82chHbL8
HxWGbiIRHu+9snsW0SH9lti9VZtJhG9j/qLKxXRI/rj3yT2049eqDfFL6JAg
G9NF0yMRj0jKZSfk6XDJtK3/B1oluJZLXUqH6NNLJi5sIRH29vFVOsvoEH6D
SVmtj5/PbEPwKiU6hPSmSNegG/iz5nNX0CFQ6r0y04BEgIXr386VdPAnVNaN
ozlOJi8rVejg43Foa6QhiTj87+/mpNV0OJmdv0dtK4loudY05qdGB4/O74w6
9A3NrnK7NXRwF1vvyN6G6y1ivulOTTocMfQ4MYHOMoroWatFB0fXssDo7Tiv
XZLrpbTpYJf2++IaIxKx5Pa8id/r6cBv3Zr+ED23n/d+QocObEpAERdIxGDA
5Y0vN9KBvunhvSn06uDaZXc308HKcW7zRQLXw3qmcu4WOlgk7u7W3EEixtrG
LoYZ0MG8OeJLA9r8x5OPblvpsGv2+QTfGN/nVcu3jO102KEtM2cazVsz9BmA
DtttaIviTEiEnrHfHM0ddDC4lLhi3U4ScbL9hdgiEzpsbniz7jGaMy9ajrSL
DjpTyttsd5GIPKfByxOmdFi3xs78D/rS/XUKT3fTQYOdw4w3JRHeWVf0n5nT
QTVywHG9GYlYL6k0UryPDqtq1no9QevPSToWZ0EHpVH38/a7ScTA6enmkAN0
WKpyO/YvOqD6v3n+VnSQpU6mX9mDP9/9sfMYlQ7SIfrFOubY42SvxgE6HSQq
faufoj9GLv9MMOkg9q2m+dBeErGfJU/axqaDyHJKjxC97cUj8w1cOpAsdn1N
2ofzsvlBqTKfDrMBYZMb95OIF1JE3jwbOvwueTrnObr/9Vj5X1s6THySknG2
IBETT232jdjTYXSJ1UqKJa6fjad7vh6iw5BZvPZVtFzfCmqnEx0GvLu36R3A
+do5VtV+mA6fC5btbUWL+BcNtrnQ4cNbPuvIQdxf/+6qrXejQ+/Ca04iViTi
eNsGl/tH6dC9o98rDd0gSwhyjtOhw3NNkL417qcynMg0Tzq05rhcakMve6ca
cdWLDi1dxRmuVJyX+tuHok/RoWn+eLEojUS8fSnkXfKmQ8PWzfcz0IOO7+vO
+2LvbqefGtJJhISa/wl/P+w9/V5PB7rz7KnccwHY+8t/X90ZJMLkVGuY3zns
fY7xlBgT59kcy2fe57H3zcEiWejF33K6TgZj705NMttZJIJk52d4IhR7T1qw
qgu9YOdnM48L2PtTi/XH2bj/2s5YHo/A3v/Gbl/Awb4PK607FkWHlPWv9uag
28uli4/F0OGKrQIbuHgeabyr5h6LvcdxnHvQExX5J4/EYe+P0k568kiEwXqN
dJd47P1XX5AkH7/v/aKvva9g7xqqcXnog9fD13onYe8c58wdAuxHi27rm4K9
RxXcfIM+J1qvGpCKvdeO3Peywf2xqrj3XDr2PqbTstCWRBTOs50flYm9/+f1
+jra4aJ6TGQW9k6rHDCxIxFt1rlXEnKw99A/U2/Rr61NVFPzsPcqo7mn7XEe
bi2rzLyOvX8/t1jGAffry6MlBQXYu9KjVYXofQrle24VYe+WYhtMD5GIE6nP
t1XfxN7P7TX6gOZ9vO1bV4K934ne5+NIIo6RZTWb72Dv/S/Zsk4kwlQnraG9
DHuXX3K4GG3sZPHzXQUdTPcwT+12JhH3bPl7BqvoYOybEvwRHd6cte/XPey9
6F3cmcMkwkjq3HNyDfb+ftU1uSMkwtO+KGxRHfa+6NCtW2gfs81VKx9i7yb5
NeYuJGL7Kuk3Wg3Yu9f3ls/oX2XN+4hG7D1P+42/K66vDqUkyybsvef4oIIb
iVDYfGKU34y9Lyj7dRv9suml54kW7H3777n73fH7V0myDXqOvR/dKvsVreX3
dvxSKx2WZPqrnDuK3/+Vgxdy2+iwqP3BhmXH8PuuSNtW2oG9z50LZejQvFPz
Wjqx9y2791sex/5NjJjt3dj74QjOIDp55Pir/tfYe8rzw+c9SIRq4r322V7s
vWXRaSVPfJ+GTopL3mPv/6ghFeiPgx8bNPqw9w2Jlw+ewL7yMm7s+YS92725
9h3NcVw9x7Yfe7+sXBLsRSI0wzY/PPUVe2+0rV1xEj9/bhz9wiD2/jv7WRV6
wZ1Rz+Tv2LvmwBvrUyQiLGJL3e1h7J279tswWmbjUvtXP7D3aPffoadx/f+S
rv02hr3XlYiqeOP+usy/gTSBvY9PyFajk1tmj6pNYe+r9f+j+5CI5T6PS/R/
Y+90X51RtHtd6i3rGew9rAbCfUkEmy6X7TNLh7q7ZIvVZ3BendhbefEfHaqH
dnJr0Pyekv/ukBhQoRx2hOlHInI2ZWU9ozDgzoGnp8fR0e9Mnw2LMOBmoFRo
pD+J+G9of7j8PAYUlB6MVwsgETPmoacM5zMg78vlrDq0XOU6ceYCBmQpdJew
z+J+WOiwwUOSAenmy+om0DtlrwanLmRAyhn+8+hzuJ5nyiIqFjHgSnFm75pA
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
7MJ5r+bZv29uDvDtbqn3kg+Yl5VZ6QE+DjDQ9/d8MTrkR275miAH6JPZFXOw
m0qo4e7/as87QPfeoJuD6Bd3WcbOkQ7Q6f208EwPzucTtubK1xzgba7Ik6Uf
8Xxa2Lm2JTpAS9f+VyXoDzZy751vOECjZGSXaS/Wr6mDRzZmO0C97utvX9GP
94R+/FDgADVuC/+e7cN5Q0yYlVziAFUZR0WXf6KSHDJ3LbPSAR62JSx6gF50
yf/R9qcOUCb2QenIZ6ynhty93+sdoER7xZYhdAyDdyzztQMU8tm65/upZJf4
gbku7Q6Qfz3LZMUAzlfPu9X1uh0g5/XX4+XornYSJdPvAJnUjY7mg3j+Tuhf
aPvuADe2uviMoEdHyq7l/nSAFNviC6FfcP72N43x/+sACfG/YlZ9pZJY040L
rWY5QsyLHRmVaL/Y8ou7RB0h+p9f0dFveD8Tk09kJB0hctOTJz/QCl+Pffwt
4whhDFrTxe/YvwSJ9K6ljhByZe+H1UNY3yJ+PHm2yhHOPAv7/gh9flF97731
juD36+Vfq2HMg3pPcfZmR/BeN19sHG2omNB8TdMRPI6ZLY4cwXqWt2w4BBzB
JSJ2tfIoPt9v/rYgA0fgP+rYUoXeqfW2/LSxI9j9UNht8wPrVbh6goeZI3BW
MUwn0OEWDcWnjjkCw/zmiagxKjmqOkiCmI5w/PyA4/qfVOJodGg81M4RrB6s
P/0UfSpqVD9O4Ajm3/ihJ8bxewd/6ks65QimCndjf6M3l1jNy/F3BCOT8Yzo
//Dvhaf9ys45gmHQ9mLVCSrJWL6soy3cEfYU+VTVoHfkmOycvuII5HNlE/0X
fo+7y+PlEh1h5+JZ2HJwvx4Y6Fh7wxE09+0ZuvqbSpr1zqyzznYEjdPnJzf+
wX5XWxl74Y4jqOXVi9WhmWPmSimljqDaLSHL+ov1kPLicNlDR1Cef2jNP/Sa
eTEP+545gpLeVY3YSSoZsm6flnnpCIoebbs3T1FJj6R4k9EbR1iateTQC/Qu
igfzXKcjyL47fpLzD/vFn/3PHvU6wsK5afyZf/+vP7efT39xBCmdT6fjp/E8
iL6lww9HEHdeG7ZlBucxfteD4N+OIJpmH/cS/WblKon6GUegteRl2grRSP+G
yfvSInyYof0onjWLRlzTpITc5/FhaptGdSL6luiBo7kyfPjFO/V6K4VGlhT/
F7ZagQ8/E8q6X6F7jyj5eirxYaTh35AdlUZap76llqvw4ds0maLSaOThhY9v
d23hw4Da2Tkp6M9zvKL9d/Chj1krqzmbRuZ+hNudunzovjpnbTOakb799u59
fOisMd7qKEwjWupuqrmmfGj7HaUnLEIj8p92P19ryYeW9W8OpaJVNw6/SznJ
h1c2i+k7RGmEr6U/a40tH15EWju9Qd8UzVp/3okPNY+TfZ3EaMSg0cRA1JMP
VWM9YaJzaOT6jvkxV/348FBJKf4GenuU/EHRc3wos7DN2jmXRhwGhFtjw/lQ
ciHn3lu029O/bbSrfCgsG6oWiNNIpe2vokuJfMj/rtY8R4JGxkIjLFak8yFn
mXvPTXTPHd76ohw+ZJqWDu+aRyM/m29xDxTy4caZv1PtaEvDpwGfH/AhpVhn
rpskjcwOuXo94AkfEvoD5SSkaORK8E7FxXV8iJF9ujYLPSNp1FrSxIfo/SLb
dOfTyKZL5nnsdj5E+u7f04lOiosNk+jhQ1h+xGGPBTRi3awUeX+ADyE9TXRJ
aRqZ/ha4jTPChzMLFjpno099HraX/sUH/z1H/fQW0ki9v2/3s2k++HgmXOxC
rwwYY/oJO4HHra74UzI0YlspxlCf5wQuHYq35i+ikcDUF0HjMk7AF2eX5KJz
htQMSxWcwG5X1lP9xTQy6drNPLPaCTiCr83d6DT5gKLDG5yAcWPDR29ZGimg
dYRobXWC428EI9JyNDJny0Gz0Z1OYCVc/C8P/UIk/+CzPU5grvlrruESGvnD
3L4s3sgJDtnvWNKLHrmn7+hk5gTGSX7KvvI0ovPo+dWDNk5g2Ph426KlNCJz
Jfi9GtsJ9IVo+nfQN4VSAhY6OgFR33tkvwKNTE0bZIm4O8FOdhjjE3qHxdy5
I6edQDPmpbP/MhoJ2cEL+RjsBBrPpfxll9NIhmmOfutFJ1D7eyS8EE0z4B/t
uOIEqqqxCUaKeB62Wn18negEyic6bvWjh45UmDanO4FSlEJp4Aq8vlSLYUuu
EyhW0Z8tWUkjwrcznTuLnGDpeHpLMVru1bbCznInkF0z8PHgKhp5HtBzd7ra
CRZarh8dRC/yv8qdeeEEUmH86TNKNPJ1Iq9Z/I0TiFfcEVdYTSNPH4ypbHjv
BKLDP5eUom1VVL/ofXICmuL2dYfW0MiB/J9sx+9OIHTYZ/s39MfeJZzz404w
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
P32Kor+3nQWzd+tfSKbifnPlnDeXyywYt59KLkV7pLUtCXjNwkmupwzrTziP
dl2+uHB/FvRIe+kiOn/74DHfiFnQvsLf/OQz/h5yTCrv5SxoxFv170/D/UtU
zZiZNAtqja+ny9HeAlnxpzNmgbAPsdqm4zyXMZWakzsLCnJ7uFm+YH3k4tzf
VD4Lsg6X+aPQqR285s8bZkE65tNe6QwauQQW5jw/ZmFf9Yx8FdrIdKRIcXAW
9rAe1jz/lUZWOlkd45uYBVFpD2PWbzgPb5MpSpyfBUHbbNto9Kd78ad6V8wB
fySrmwwdz/dO57lqjjnYUnbkdjW6xMXw6HnuOdj0LyDEnoH1gPFyIeW/OeCR
qHixikkjhp9sz77mn4N1Fms/xKA53PRLjgnPAS1UnymbifUmbMdy1J45WFMQ
XlaLHt4oLxYpNQcrZ5ubHbJo5MXYrw5l2TlYFtk6wJaN9S/V1PaZ4hwsmJyd
iUU/2s94/ExlDmYfxK2Uz8H+LyJQpaE+B5OZfdwN6HtVmsdeac3B2G/RHZdz
sV4fHv6RcHwOhnc6SHDk0YhrONXO2GAOBgw+KrxCM0qXytIM56D7zqSmYj7m
XXixjW4yB50ZB02a0JqKAfYXzeagdeianXMB1u+Cg0ElZ+agcQvTjVpII3bF
FOnvFnNQq7N8+zX6UGb2ZS+rOajyUgmFIhrhus2+tt16DspS78S2oEtaNS17
beagqKfkg0sx5r2eQy7y3BzkbaRlcpZgf3Ue3TuPzlI/Xp6Aloi+tGeV7RzQ
r4e2KJdi/2wwq2Xi71/eNwy0oTm0Qu7zoT91/DfrVkYjko6WOpL49z+sNVu1
rhzzOO18ahCf553yi/Xv0HFSC1F6lnPwxqV7h1oFjURrcOw+d3YOXr4WkuxE
C/A11oqaz8HzpvOK1yqxPuXIuzw3nYOnHEla66vwfq702p5pNAcR8r9NktDJ
K/j8Hp2cg9BLUuePfsf+x+Bj23hiDoJeuF39iR4NU7wlrzMH92q++t2oxv3n
Vq3hlmNzcGflv9ANNfh9cg9YJKvNgc9BePkBXcHcIPQL5sDTzvejRi32z94J
epfcHFx7WpjZjbbWCdr06OAcuJazV3jUYb9q/qH9S3IOnBa1Wnnr8T6Wm7vP
i83BJclHgylo/XSd+zm75uCCZe2sZsP/KLDzeKi/Lg7gFJHMd8gSoVSUtSip
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
jtnhKjQyVRQQeqR1EM4KXy9VWkAjI/Jnn+x4OwinVjHelqGb4j+IH7g7CCf2
KX3dspBG9G6WZVw5NwgBNzz43eizGnK5r3cPwuHqu/2RqjTyKW9P03IYBN8/
bX9UFtFIcOXptCcLBsFbV0PiKdr8ssxo8PQAeO4+qOC0mEYedO5rIbwB2JlQ
uLQP/aMn9ol65QBsfzdsEL2ERnQeru0ySB+ArWMGG1TVaOSntlmqxdkBcFgW
7Pgcbfdt371bHgNgu71it8v//0c/JdqPBgOw6dL04QH04hjO+5SFA2Dx0iz0
wlIaid8r/Wmb0ACQwfOxi5fh+/vo36PR3A8miz6lvEDnzBX1WfG2H9Y6z8lx
1aCRbvn6ka2Z/WAQZV82hO6CluCb5/tB70nCu1hNGmkvOKQ7ta8fdLobv6pp
0Yi8qalP5MZ+0FBSEFSig8rLTqzT7Ac1ux0D27RpZItHeKnonH5QDUuf+om+
Y6p/fqqvD5SLmyXidGjknPoOD4UvfaDQqqa4TJdGwjQTPLYV94GsnO+yN2g3
b6WHFUl9QN+Yv3rHchqxuPTfY6ugPphzamDDGFpt5c1r49v6QCxf3+nKChoZ
8KbvrTXuAxHucU9NPRqJbFmj9GFBHwjRn/q/Q59TWlDaLtwHU+RP6C59Glm9
sktcq70XxgNNL42jo2cPCCd96oWRrPCbCStpOK+fuMk97IXBH1U52quwvoWS
D3+/0gs94uLl79G8915XC4/1QoeRTdVuA7zvhJKYQrdeaDkU/+03WlFho9x/
xr3AS/8qSFpNI7lczZ2LVHuB3SA7qGtII73fw74mivRC04xtfz+iRf20fbS7
e+Cbwa05Xmuw/zjY7umr64F6H57iFDr+z3A/53EP1KQs0kheSyMz/y2w5tzo
gQ813oZ66/C9xP+UlDzTA2+ncixq0Lc9Xfp9vHqgcnmvk7cRfp96V8mGjT3w
3HP5nmn0gtSSroO6PVCeGHAkxZhGlp34fFdPpgceV5WeWWlCI9fdZsrM/90N
hb/GL9WinRdz/urxuyFPwzjVZz2N0OtGMna+74Zs97O5QqbYr/s65z3J74Z7
l9+Up6KvVellrU/shvRKkfcGQCMJhf+Uu4K7IXVo4/d6dOvlOs1nu7shefGl
Zl9CI0oycbIPrLoh0aV+cIYZjSy86XjioW43xEVLT99GH1To/j0g2w2xT10k
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
Ly88Rhz77nQk8DS65cf5P61i2PcVXmFF6BT25PsUdGVqYtQSuvqrj6uJKPZ9
R1n8/u0UwvT9ifInItj3li8pd9Helweev1yDfT/7J3MArT+ZoTIijH1flszd
roqvx2VECdBFd3cXBqFD3cKz04Sw7yr2Lz+g589JdbUJYt/fX30ttgN775p/
mgv91OFh/Vm07YeboSoC2PfFug/F6PUvrj46R8G+Jwy2/0PX7U93e8yPfd/K
+fWgGoXQyA8yZvJh3xsVmSnodwrSW6XQmfb7f3xHXzYwGTHjZUL6/IXxHTvx
PJvSuBnCg/eruFuzV9HG/CEaJaux70qFSx/RxWYJYoOrsO91beyS6hTic/62
rDXoRNvJ1U7ovwYTQabc2PcZIaFS9AtjiR5/Lux7zE4J1l0U4uvB67dyOfE+
pmC5zgT9OeTeE9pKJsTU+Cqmof/0bPNYjY6yTt02jLZNVvdT5sC+T75SV9eg
EEd2mw2cYMe+R9F2h6LnZsTPhbFh3zf8029DJ61+zVnMin1/LXtQWpNClIyU
VfavwL5b6B51RkuLfP3Cgw4eP328DM2RejRElQX7HhF+il0L97nkPXwm/0jw
X/fYyQxt3ZB+1XuZhCuVTe7p6DVZhwvvLZFw+eiIz0/0SOzhtzV/SfAeXR2k
oU0hDFpEFEcXSfAM3xoejja+yDSioC/KmES3o/V/phSo/iHBrezinbU6uH9o
zFvaLJDgYhqf6oKutujf7jlPgvPwiwcV6OaijAO350hwutaVu3I3hbCzW9NU
OUvCOcm5wqPo+2wNGq9mSDhTIlaWiXaTK06fmibB4ZBW9S80TYUlhwd98rtN
g9Ye7OvRR5JyUyTYBQe23EBXl3k8NZgkwVYso6MT/Td6bvTAbxKOP6/5ug7w
PuL9bceZCRKs9vcz3eD/Xk9W+I+TYPGNbfgVenGziVXyGAnmARsnuAjsa46U
5sdfJBxZYzR3DD0U6Jo3MEqCaYHT8kP0QJ3DntmfJBw2iuSYQOenTnRsRh8k
n/Hs3ovzx2af9P/fd7f/ykehSPQHxWdVhsMkGAuOS/Sgv1f4yBM/SDB8RpHb
oIv7wEfh78eGSNDXV93kgZZlbklx/E6CLu2oSjV6/7/BlpBBEvCN7Fqth/eT
th0l8QMk7OG/u8cK/Xg5zPDJNxJ0cssNstE/1slVl/eToLX368FJtNlwaEA9
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
i3c/bnOHNbLCrZXhwtb27kqYp/uP+UIw+n5yisGxQCHFZTQtcuFH/yifLODK
2ujTh+EHibvHsuBQN25mXjhP3mx6Gmaf4MrrCELfm7znVBcppMt48/oLcKZD
0nIYXJR56okifG/xJRsNtmSR1f9xi06kxzO4pZYopC81nRoBp8n+5b8AVz3+
tEsYTqnfuL4GVnxPcP68ib7bkeLcf9FvUjm1EE6YOy5jBcvtq1K2hONjbuzM
hae/iAWJwXEy2XtnYZUWisd0IJ2IeV1PHPxHIe+sbW9+AUdZj2pGwiLhfbXX
4Yhfqw0YsM3OR3Q1ODRym5n0Mp6nT6lv1w30fcthay849FL1aCF8q8b1RC3c
3jAXqwgHHo125mWikifuhJZIwtdnis9bwwc3u5nTr6PvYe8uPoDZTT95O8P+
Er+u/oZp4p0S0rBfpWCQOjOVlJTcqEOBfc33RkbD0zHJ6YnX0PcfR29/gMtY
xRsOwN7Bl1NlVlDJJfX+/pcB6LtYWqYP/FLElN8Q9iirelgHc789ynEbdjcZ
LKaspJJqHUNSh2HXCeaXtnDJVBX3ravo+03xmkdwevDGjB2w88ZDDXPwJYds
51l/9P2FU/shFir54Zyy+hDsZBj8PhZWWqtVNgg7fnvQ/xE+KXN8wBd2uN7y
aTsrlYxZqF1PwvYik2OX4LbLtdu/XEHfn/LM1MPiem2G7/zQ98Py83xsVHIw
ae9oAGw1YsR0HI5rqIgygS2vXlhVAP8w2Bgzdhl9X3ubZxFuLhi6KYXrpsXP
BbRXUcmzFtECW2Fj3b71t+ETRj9PFuLnDT/Niw/DvwyKPpnCBn4i23awU0ne
CcPm3bC+wIFdfrCHXdruNl/0vcB2XxO8U7Za4BasrRVACq7GP//+A58urDl4
T+sE3LOGp3/mEvp+6bVBERxJnXR5CKtRv5j9hfmPrebXhMlHbDa6HHhe2Rcv
8cKqGtKOibCqxJq21ouY3z/onP0MD7nGPg+Hlb3PeuzkpJI83+O+S8F7eSMu
+cNpvzU5Pvqg73kFAS3wfJPS3qfwnoOdQWu5qKR9youac/BO+nTkSXhG5M7x
C/COC3wJT2A/uwzDdm/0nUshbRkufDPqexfenm2epc+N+yEgMH8MllG9+OgO
LJGezFgFb+m982QE3le9uvifF/ruXv5yNw9+frq3wAcWX/2hJgCuTjzIag6L
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
d0mcJWaVRkznMrOVwW3Pa3hmVmjED92dFAYhCpmUyUU1hyeGDm4xgmXZTVtr
lmnEmLfT9kS460+k8Sb4G9cdiXH4fr5fp+8/GjGalS+zZzuF3Git/r7uL40Y
0epQDoZ/mimoSMPD/XP7OuC8F2rhvPDQJR4dQWF8/8SpZdclGjHAoXzIEQ46
UWrS9IdG9D09cbwcTle/c04A7iGvnGQUwX1a/c30/iKN6O6JtzoGt2kV3Fn5
TSO6PKrskuER50JNW/jD+kHXSXiKd1vS+wUa0ZG+6qUiivMzVfVKAW7ft90/
BJa9t5Jz5xeNaO3WvNEJdzqwj678pBFvXG0ihMQo5I22m/xScAtLyD1nWMri
c0bUPI1oSn0aXwHzfKt4OTVHI16pvk5l3kEhZz7obtWD6zvHM41htT8/QpNn
aUStE1tBKhz7593Cnxka8ZJR+vkU3P728LkLcFXSkZdq4hTSYZLPo3maRlTs
cW8MhY8EUS+ow+Xvo1s/wn9tE40Hf9CIMvuSTmEJ9NWwq3AKLqHv7nWFo6uP
WJnCRY9+D1fBH8+y1z2fpBEFipvHWHdSSP03gcx8cN471RlTeKPXKTbnCRqR
c/7U7zRYRTFeZmCcRmSt+q3MwISYQNR+OPNhMqOGJPq+0UkiZ4xGZMjVsYXD
G+4XfJ36TiPS33ym0OB/as/bzeDH59byi+2ikOGpf9qLvtGIlH9iwh4w44OQ
UA446b7ezhr489M9K45faUSCtL0smxSFLJU4eObjKI2Ibw7bYw5r67Au28IP
z+ZoZMBVX5YS6r/QCDxHnXn4ts3ICxE4Jnr6ELmbQtJdUf1sM0IjondxGd+G
j0km5X75TCOiXslb9ML7eltzNeE7p42txaXRR/FLe5OHaUTEwiV7T7jXQUaT
Hg6LfOBW9//rAaE91p9oRKjEi8scMhQyO+edd/IQjQip6/W3gNc6dTkvD9KI
4JP/bmTCLuvHBtzhoPmtt3/B5UeuF9IGaMS1CCJGUxbvj9H5PWqwv5jVo0i4
dYNpc3w/jbj6MuhxPzzscuLA7z4a4XMi/dlOOZxX2kb+U7D3TGOBF2zlqGdc
1EsjvG59e94AX3AO6ueEPYVZazjl0Uf6zNq9PTTCvVKy6TQsLiLb9JBGI1yN
D73LguszRm23ws4/nLt+w5f3zFJcqDTCKSSyT1uBQp7S+GBU300jHLYVfr4L
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
VHC9
      "]]}, {}}, {}, {}, {{}, {}}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{1.8915123786679122`, 0},
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  ImagePadding->All,
  Method->{"CoordinatesToolOptions" -> {"DisplayFunction" -> ({
        (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
         Part[#, 1]], 
        (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
         Part[#, 2]]}& ), "CopiedValueFunction" -> ({
        (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
         Part[#, 1]], 
        (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
         Part[#, 2]]}& )}},
  PlotRange->{{1.9383795322066075`, 4.937877358683113}, {
    0, 1.2309273393805775`}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.02], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{{3.747835703800969*^9, 3.7478357213804693`*^9}, {
  3.747835751917618*^9, 3.747835786173473*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"tab", "[", 
  RowBox[{"[", 
   RowBox[{";;", "10"}], "]"}], "]"}]], "Input",
 CellChangeTimes->{{3.7478357254905767`*^9, 3.747835728373527*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"1.9383795322066075`", ",", 
     RowBox[{"-", "0.0012338262131661145`"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"1.9386733701598282`", ",", 
     RowBox[{"-", "0.0012341365301667578`"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"1.938967208113049`", ",", 
     RowBox[{"-", "0.0012344779057238075`"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"1.9392610460662696`", ",", 
     RowBox[{"-", "0.001234802721387063`"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"1.9395548840194903`", ",", 
     RowBox[{"-", "0.0012351307473982987`"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"1.939848721972711`", ",", 
     RowBox[{"-", "0.0012354492298074493`"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"1.9401425599259317`", ",", 
     RowBox[{"-", "0.0012357725527571862`"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"1.9404363978791521`", ",", 
     RowBox[{"-", "0.0012361012233024437`"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"1.9407302358323728`", ",", 
     RowBox[{"-", "0.0012364262300646744`"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"1.9410240737855935`", ",", 
     RowBox[{"-", "0.00123675229057384`"}]}], "}"}]}], "}"}]], "Output",
 CellChangeTimes->{3.747835728638809*^9}]
}, Open  ]]
},
WindowSize->{1280, 751},
WindowMargins->{{0, Automatic}, {Automatic, 0}},
FrontEndVersion->"11.0 for Mac OS X x86 (32-bit, 64-bit Kernel) (September \
21, 2016)",
StyleDefinitions->"Default.nb"
]
(* End of Notebook Content *)

(* Internal cache information *)
(*CellTagsOutline
CellTagsIndex->{}
*)
(*CellTagsIndex
CellTagsIndex->{}
*)
(*NotebookFileOutline
Notebook[{
Cell[558, 20, 188, 4, 32, "Input"],
Cell[749, 26, 573, 17, 32, "Input"],
Cell[CellGroupData[{
Cell[1347, 47, 272, 6, 32, "Input"],
Cell[1622, 55, 3864, 82, 138, "Output"]
}, Open  ]],
Cell[5501, 140, 730, 18, 75, "Input"],
Cell[6234, 160, 803, 19, 75, "Input"],
Cell[7040, 181, 590, 16, 75, "Input"],
Cell[CellGroupData[{
Cell[7655, 201, 4018, 109, 159, "Input"],
Cell[11676, 312, 27724, 548, 1017, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[39437, 865, 3729, 105, 180, "Input"],
Cell[43169, 972, 27507, 545, 1017, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[70713, 1522, 3724, 105, 159, "Input"],
Cell[74440, 1629, 27414, 543, 1017, "Output"]
}, Open  ]],
Cell[101869, 2175, 232, 6, 32, "Input"],
Cell[102104, 2183, 416, 12, 35, "Input"],
Cell[CellGroupData[{
Cell[102545, 2199, 129, 2, 32, "Input"],
Cell[102677, 2203, 197812, 3255, 236, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[300526, 5463, 168, 4, 32, "Input"],
Cell[300697, 5469, 1280, 33, 54, "Output"]
}, Open  ]]
}
]
*)

