(* Content-type: application/vnd.wolfram.mathematica *)

(*** Wolfram Notebook File ***)
(* http://www.wolfram.com/nb *)

(* CreatedBy='Mathematica 11.0' *)

(*CacheID: 234*)
(* Internal cache information:
NotebookFileLineBreakTest
NotebookFileLineBreakTest
NotebookDataPosition[       158,          7]
NotebookDataLength[    273145,       6478]
NotebookOptionsPosition[    266744,       6268]
NotebookOutlinePosition[    267076,       6283]
CellTagsIndexPosition[    267033,       6280]
WindowFrame->Normal*)

(* Beginning of Notebook Content *)
Notebook[{

Cell[CellGroupData[{
Cell["Misc", "Section",
 CellChangeTimes->{{3.738059304556177*^9, 3.738059312061777*^9}}],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"\[CapitalPi]par", "[", 
    RowBox[{"\[Theta]_", ",", "v_", ",", "mD_"}], "]"}], ":=", 
   RowBox[{
    FractionBox[
     SuperscriptBox["mD", "2"], "2"], 
    RowBox[{"(", 
     RowBox[{
      FractionBox[
       RowBox[{"2", "-", 
        RowBox[{"2", 
         SuperscriptBox["v", "2"]}], "-", 
        RowBox[{
         SuperscriptBox["v", "4"], 
         SuperscriptBox[
          RowBox[{"Cos", "[", "\[Theta]", "]"}], "2"], 
         SuperscriptBox[
          RowBox[{"Sin", "[", "\[Theta]", "]"}], "2"]}]}], 
       SuperscriptBox[
        RowBox[{"(", 
         RowBox[{"1", "-", 
          RowBox[{
           SuperscriptBox["v", "2"], 
           SuperscriptBox[
            RowBox[{"Sin", "[", "\[Theta]", "]"}], "2"]}]}], ")"}], "2"]], 
      "-", 
      RowBox[{
       FractionBox[
        RowBox[{
         RowBox[{"(", 
          RowBox[{"2", "+", 
           RowBox[{
            SuperscriptBox["v", "2"], 
            SuperscriptBox[
             RowBox[{"Sin", "[", "\[Theta]", "]"}], "2"]}]}], ")"}], 
         RowBox[{"(", 
          RowBox[{"1", "-", 
           SuperscriptBox["v", "2"]}], ")"}], "v", " ", 
         RowBox[{"Cos", "[", "\[Theta]", "]"}]}], 
        RowBox[{"2", 
         SuperscriptBox[
          RowBox[{"(", 
           RowBox[{"1", "-", 
            RowBox[{
             SuperscriptBox["v", "2"], 
             SuperscriptBox[
              RowBox[{"Sin", "[", "\[Theta]", "]"}], "2"]}]}], ")"}], 
          RowBox[{"5", "/", "2"}]]}]], 
       RowBox[{"Log", "[", 
        FractionBox[
         RowBox[{
          RowBox[{"v", " ", 
           RowBox[{"Cos", "[", "\[Theta]", "]"}]}], "+", 
          SqrtBox[
           RowBox[{"1", "-", 
            RowBox[{
             SuperscriptBox["v", "2"], 
             SuperscriptBox[
              RowBox[{"Sin", "[", "\[Theta]", "]"}], "2"]}]}]]}], 
         RowBox[{
          RowBox[{"v", " ", 
           RowBox[{"Cos", "[", "\[Theta]", "]"}]}], "-", 
          SqrtBox[
           RowBox[{"1", "-", 
            RowBox[{
             SuperscriptBox["v", "2"], 
             SuperscriptBox[
              RowBox[{"Sin", "[", "\[Theta]", "]"}], "2"]}]}]]}]], "]"}]}]}], 
     ")"}]}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"\[CapitalPi]per", "[", 
    RowBox[{"\[Theta]_", ",", "\[Beta]_", ",", "v_", ",", "mD_"}], "]"}], ":=", 
   RowBox[{
    FractionBox[
     SuperscriptBox["mD", "2"], "2"], 
    RowBox[{"(", 
     RowBox[{
      FractionBox[
       RowBox[{"2", "-", 
        RowBox[{"2", 
         SuperscriptBox["v", "2"]}], "-", 
        RowBox[{
         SuperscriptBox["v", "4"], 
         SuperscriptBox[
          RowBox[{"Cos", "[", "\[Beta]", "]"}], "2"], 
         SuperscriptBox[
          RowBox[{"Sin", "[", "\[Theta]", "]"}], "2"], 
         RowBox[{"(", 
          RowBox[{"1", "-", 
           RowBox[{
            SuperscriptBox[
             RowBox[{"Cos", "[", "\[Beta]", "]"}], "2"], 
            SuperscriptBox[
             RowBox[{"Sin", "[", "\[Theta]", "]"}], "2"]}]}], ")"}]}]}], 
       SuperscriptBox[
        RowBox[{"(", 
         RowBox[{"1", "-", 
          SuperscriptBox["v", "2"], "+", 
          RowBox[{
           SuperscriptBox["v", "2"], 
           SuperscriptBox[
            RowBox[{"Cos", "[", "\[Beta]", "]"}], "2"], 
           SuperscriptBox[
            RowBox[{"Sin", "[", "\[Theta]", "]"}], "2"]}]}], ")"}], "2"]], 
      "-", 
      RowBox[{
       FractionBox[
        RowBox[{
         RowBox[{"(", 
          RowBox[{"2", "+", 
           SuperscriptBox["v", "2"], "-", 
           RowBox[{
            SuperscriptBox["v", "2"], 
            SuperscriptBox[
             RowBox[{"Cos", "[", "\[Beta]", "]"}], "2"], 
            SuperscriptBox[
             RowBox[{"Sin", "[", "\[Theta]", "]"}], "2"]}]}], ")"}], 
         RowBox[{"(", 
          RowBox[{"1", "-", 
           SuperscriptBox["v", "2"]}], ")"}], "v", " ", 
         RowBox[{"Cos", "[", "\[Beta]", "]"}], 
         RowBox[{"Sin", "[", "\[Theta]", "]"}]}], 
        RowBox[{"2", 
         SuperscriptBox[
          RowBox[{"(", 
           RowBox[{"1", "-", 
            SuperscriptBox["v", "2"], "+", 
            RowBox[{
             SuperscriptBox["v", "2"], 
             SuperscriptBox[
              RowBox[{"Cos", "[", "\[Beta]", "]"}], "2"], 
             SuperscriptBox[
              RowBox[{"Sin", "[", "\[Theta]", "]"}], "2"]}]}], ")"}], "2"]}]], 
       RowBox[{"Log", "[", 
        FractionBox[
         RowBox[{
          RowBox[{"v", " ", 
           RowBox[{"Cos", "[", "\[Beta]", "]"}], 
           RowBox[{"Sin", "[", "\[Theta]", "]"}]}], "+", 
          SqrtBox[
           RowBox[{"1", "-", 
            SuperscriptBox["v", "2"], "+", 
            RowBox[{
             SuperscriptBox["v", "2"], 
             SuperscriptBox[
              RowBox[{"Cos", "[", "\[Beta]", "]"}], "2"], 
             SuperscriptBox[
              RowBox[{"Sin", "[", "\[Theta]", "]"}], "2"]}]}]]}], 
         RowBox[{
          RowBox[{"v", " ", 
           RowBox[{"Cos", "[", "\[Beta]", "]"}], 
           RowBox[{"Sin", "[", "\[Theta]", "]"}]}], "-", 
          SqrtBox[
           RowBox[{"1", "-", 
            SuperscriptBox["v", "2"], "+", 
            RowBox[{
             SuperscriptBox["v", "2"], 
             SuperscriptBox[
              RowBox[{"Cos", "[", "\[Beta]", "]"}], "2"], 
             SuperscriptBox[
              RowBox[{"Sin", "[", "\[Theta]", "]"}], "2"]}]}]]}]], "]"}]}]}], 
     ")"}]}]}], ";"}]}], "Input"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"\[Theta]", "=", "0."}], ";"}], "\[IndentingNewLine]", 
 RowBox[{"ListPlot", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{"Re", "[", 
        RowBox[{"\[ImaginaryI]", " ", 
         SqrtBox[
          RowBox[{"\[CapitalPi]par", "[", 
           RowBox[{"\[Theta]", ",", "0.5", ",", "0.15"}], "]"}]]}], "]"}], 
       ",", 
       RowBox[{"Im", "[", 
        RowBox[{"\[ImaginaryI]", " ", 
         SqrtBox[
          RowBox[{"\[CapitalPi]par", "[", 
           RowBox[{"\[Theta]", ",", "0.5", ",", "0.15"}], "]"}]]}], "]"}]}], 
      "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"Re", "[", 
        RowBox[{
         RowBox[{"-", "\[ImaginaryI]"}], " ", 
         SqrtBox[
          RowBox[{"\[CapitalPi]par", "[", 
           RowBox[{"\[Theta]", ",", "0.5", ",", "0.15"}], "]"}]]}], "]"}], 
       ",", 
       RowBox[{"Im", "[", 
        RowBox[{
         RowBox[{"-", "\[ImaginaryI]"}], " ", 
         SqrtBox[
          RowBox[{"\[CapitalPi]par", "[", 
           RowBox[{"\[Theta]", ",", "0.5", ",", "0.15"}], "]"}]]}], "]"}]}], 
      "}"}], ",", 
     RowBox[{"2", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"Re", "[", 
         RowBox[{"\[ImaginaryI]", " ", 
          SqrtBox[
           RowBox[{"Conjugate", "[", 
            RowBox[{"\[CapitalPi]par", "[", 
             RowBox[{"\[Theta]", ",", "0.5", ",", "0.15"}], "]"}], "]"}]]}], 
         "]"}], ",", 
        RowBox[{"Im", "[", 
         RowBox[{"\[ImaginaryI]", " ", 
          SqrtBox[
           RowBox[{"Conjugate", "[", 
            RowBox[{"\[CapitalPi]par", "[", 
             RowBox[{"\[Theta]", ",", "0.5", ",", "0.15"}], "]"}], "]"}]]}], 
         "]"}]}], "}"}]}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"Re", "[", 
        RowBox[{
         RowBox[{"-", "\[ImaginaryI]"}], " ", 
         SqrtBox[
          RowBox[{"Conjugate", "[", 
           RowBox[{"\[CapitalPi]par", "[", 
            RowBox[{"\[Theta]", ",", "0.5", ",", "0.15"}], "]"}], "]"}]]}], 
        "]"}], ",", 
       RowBox[{"Im", "[", 
        RowBox[{
         RowBox[{"-", "\[ImaginaryI]"}], " ", 
         SqrtBox[
          RowBox[{"Conjugate", "[", 
           RowBox[{"\[CapitalPi]par", "[", 
            RowBox[{"\[Theta]", ",", "0.5", ",", "0.15"}], "]"}], "]"}]]}], 
        "]"}]}], "}"}]}], "}"}], ",", 
   RowBox[{"PlotRange", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
        RowBox[{"-", "0.3"}], ",", "0.3"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"-", "0.3"}], ",", "0.3"}], "}"}]}], "}"}]}]}], 
  "]"}]}], "Input",
 CellChangeTimes->{{3.737817539585546*^9, 3.737817592895061*^9}, {
   3.737959184138775*^9, 3.737959195706448*^9}, {3.737960068660565*^9, 
   3.737960229511771*^9}, {3.737960281898488*^9, 3.737960306472074*^9}, {
   3.737970873800521*^9, 3.737970896417943*^9}, 3.737971144006358*^9, {
   3.7379714802780437`*^9, 3.737971484091669*^9}}],

Cell[BoxData[
 GraphicsBox[{{}, {{}, 
    {RGBColor[0.368417, 0.506779, 0.709798], PointSize[0.012833333333333334`],
      AbsoluteThickness[1.6], 
     PointBox[{{0.05385564848510549, 
      0.12304739038652}, {-0.05385564848510549, -0.12304739038652}, \
{-0.10771129697021098`, 0.24609478077304}, {
      0.05385564848510549, -0.12304739038652}}]}, {}}, {}, {}, {{}, {}}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{0, 0},
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  ImagePadding->All,
  ImageSize->{686., Automatic},
  Method->{"CoordinatesToolOptions" -> {"DisplayFunction" -> ({
        (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
         Part[#, 1]], 
        (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
         Part[#, 2]]}& ), "CopiedValueFunction" -> ({
        (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
         Part[#, 1]], 
        (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
         Part[#, 2]]}& )}},
  PlotRange->{{-0.3, 0.3}, {-0.3, 0.3}},
  PlotRangeClipping->True,
  PlotRangePadding->{{0, 0}, {0, 0}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{{3.737817567619597*^9, 3.737817593990838*^9}, 
   3.7379591967105703`*^9, 3.737960090755073*^9, {3.737960143389662*^9, 
   3.737960230409707*^9}, {3.737960283646908*^9, 3.737960307332539*^9}, {
   3.737970874782439*^9, 3.737970897127761*^9}, 3.737971144953371*^9, {
   3.7379714811876993`*^9, 3.7379714850916023`*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Plot", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{"Re", "[", 
      RowBox[{"\[CapitalPi]par", "[", 
       RowBox[{"\[Theta]", ",", "0.5", ",", "0.15"}], "]"}], "]"}], ",", 
     RowBox[{"Im", "[", 
      RowBox[{"\[CapitalPi]par", "[", 
       RowBox[{"\[Theta]", ",", "0.5", ",", "0.15"}], "]"}], "]"}]}], "}"}], 
   ",", 
   RowBox[{"{", 
    RowBox[{"\[Theta]", ",", "0", ",", "\[Pi]"}], "}"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.738060620560718*^9, 3.738060670260413*^9}, {
   3.738060995240026*^9, 3.7380609996493893`*^9}, {3.738061722661768*^9, 
   3.73806178634293*^9}, 3.738064333728754*^9, {3.738066053281124*^9, 
   3.7380660539050837`*^9}, {3.738066146576901*^9, 3.738066148827031*^9}, {
   3.73806860779428*^9, 3.7380686469079037`*^9}}],

Cell[BoxData[
 GraphicsBox[{{{}, {}, 
    TagBox[
     {RGBColor[0.368417, 0.506779, 0.709798], AbsoluteThickness[1.6], Opacity[
      1.], LineBox[CompressedData["
1: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
       "]]},
     Annotation[#, "Charting`Private`Tag$170358#1"]& ], 
    TagBox[
     {RGBColor[0.880722, 0.611041, 0.142051], AbsoluteThickness[1.6], Opacity[
      1.], LineBox[CompressedData["
1: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
9KejNvuKszuVSdic9Gl6TSAdsc/mfz+qTsJc0Or7fDF09B9x+M4XXRJ469r1
+WLpqPa73ZyvPgmy9Ic0vng6Kv9l9Fn4CAlWfnIOvA/pyIPnPz59QxIaL+vu
W51OR09d1J7eMiHh4albA9wldPRZLW3ewBr3H6MXy12Gx/u+8lDFORI+fuQ7
wl1BRwyBlcqbzpPAOppcsvIFHV0ueSQ4ZEeC68GqEK7XdJQ3XSmmeZEELdk/
Cqx2OrqWl1Jt74X7t38xyPxMR4+nwl4+vEKCb1pAHPMLHXEmlEe/9yYhb6MA
g9lDRxdCl2rk/UhYL6DYzjFMR6dGb16rvk7C5KKDH2OOjlwUI6ePhZBw6qT+
tr9/6Oiuv7zVsVASagtl2yf/0lHXtPHEEYKEOIcfCl/+0ZHutacO+++QoPH5
4kAeBwPNpxrv+RdOwoPCy3pnBBno3Lcal1/3SVix+tgf47UMJHBQf+Z1LAmX
HRRTdYUZKOV6TWlMHB7Pptl/SmIMdCyxWmL7AxJmw9zyV0oyUGRwNqX+kAQd
B8915UoM9Cn+9sGuFBIK60zqcnYz0Kqmy+dupZKwYZOKa6oqAz3m4vwlnUbC
z44/TXfVGYipd9zZKR3Pv6b3NVsNBuq/2MjzKZMEzken5My1GEioNXzWPosE
90W1zmM6DDS2WsxsAVu3cGHnvsMMxF8U8FIwm4Rf4n7Da44zUM5K620Kz0iw
9DO/x2nCQHOyW11zsRs71NGyKQO10x8YyeeQkBT2L27cjIHcwH1wUy4Jeov+
R16eY6DbhRwRk3kkFJtaLpScZ6C0z2e+muWTIF4IGU/tGMjDVfTja+y5CzS2
WEcG4tQKb44uIOFRx40iZzcGSjeq2LWuiIThuh29YR4M5PPzYqkPtlxRL2eu
FwNVTFhEfcEuCd9nOeXLQLxXDWwji0lY9P8Rstofj8fM7+w49oGLD4oUrjNQ
6ib1GighoVn3L+fl2wx0Pr+quh+bXzVTKTyQgW6seWSzo5QEUylTy7xg/H13
Tvv4YvfTi4umSQba4h3A5CojYb7ysqVLNAMZB038Y5WTsP/JxtCI+wwUG/08
4CD2rdiWovw4BuIpeXrfG3uVhxzXbCIDBVf/O/8N2/hclxJ/MgPJaVhL81aQ
EHss1HLnY7weXFPX92FLbB8tck1noHJPH1oEtr3o/d7ITAba6egqX4qdw6XF
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
Jg==
       "]]},
     Annotation[#, "Charting`Private`Tag$170358#2"]& ]}, {}, {}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{0, 0},
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  ImagePadding->All,
  ImageSize->{702., Automatic},
  Method->{
   "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
    AbsolutePointSize[6], "ScalingFunctions" -> None, 
    "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
        (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
         Part[#, 1]], 
        (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
         Part[#, 2]]}& ), "CopiedValueFunction" -> ({
        (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
         Part[#, 1]], 
        (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
         Part[#, 2]]}& )}},
  PlotRange->
   NCache[{{0, Pi}, {-0.01403021715242611, 0.029999998099939123`}}, {{
     0, 3.141592653589793}, {-0.01403021715242611, 0.029999998099939123`}}],
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.05], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{
  3.73806067125736*^9, {3.738060996849309*^9, 3.738061000470298*^9}, {
   3.738061723307744*^9, 3.738061786947426*^9}, 3.738064334305492*^9, 
   3.738066115359168*^9, 3.738066149890882*^9, {3.7380686083167877`*^9, 
   3.738068647533147*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Plot", "[", 
  RowBox[{
   RowBox[{"Re", "[", 
    RowBox[{"\[CapitalPi]par", "[", 
     RowBox[{"\[Theta]", ",", "0.9", ",", "0.15"}], "]"}], "]"}], ",", 
   RowBox[{"{", 
    RowBox[{"\[Theta]", ",", "0", ",", "\[Pi]"}], "}"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.738323869851363*^9, 3.73832390138867*^9}}],

Cell[BoxData[
 GraphicsBox[{{{}, {}, 
    TagBox[
     {RGBColor[0.368417, 0.506779, 0.709798], AbsoluteThickness[1.6], Opacity[
      1.], LineBox[CompressedData["
1:eJw1mnk41N/bx80QQwihsiTapNKGFnKfVIiyZkb2LWsJyW6mVEglSwllKUsi
ZMs+ByEkfLNrU9mNXQyFZ35/PP/MXK/rzDn39r7vz3KNtM01g8tENja276yP
/32zY56W34ruqrmT09XO78l45yhdeWu0LrRLBth4snj57QG73ihLUNXzPh3J
4rwF6BTMcYA3+4ftqlk8KOzIfBd1DZJ92us5asn4wZYGvpzy63CIX8PJlMXp
smZJbDneUDSoe76OxVVHpw8aJvsDj+DaNbU6Mu5Tv1OTFkUD/grHjs8sXpbj
lQuouQUi+1N9verJOORwl0da+W3gqf1ouf8DGQufSC5vKbwLPcv/ghdZ/OKU
MwczOwRkLhtPdTSQsfw5hQvSr+5BXC4hrq6RjMv1Vp9oJd8H3WSpO41NZNxp
GbU7IeoRuHHbSa3/xIrniPyx33URYHFvuFWzhYy9j0Z/9a6JBEt6XE1cKxlz
gPnOF+XRYGxhf+3GZzJuUqtpVCx5DE3hC3vYOsg4Un23a1PhE3BeTd6d2EnG
W3Vm3s1lP4VCSYOJjb1kPKBPNg3NjIWmM8NF431knGVUvibxKg5iYgtqur6S
8THzu5rqyc9AKe5g5lA/GRtc2dIXG5UEj/9KlU2MkjHvMcAxGslwba4i25JB
xtOl7oI/65IhL8ViZGCSjN9VdhXdqHkBR47pK+yZJ+PTdcmrieUpEPJq3ZG4
NTLepdGuN3o8FVpt65zTiBTM07gu5UhJKqzoik/UrqPgtmZnjYbCNKDpPmg/
yUvB5h0KETPZr2C8R1VpkxgFI7LDL+V9GUB+R/6vUpKCd/TEKQRnZoD6G+Ny
b2kKHvuy2iP26jVclKdSd+6hYO/fDdJnkrPgfH3OZ8fjFBw5a1YQE5UL7lmu
Go/MKfihSLxKFd9bSH81mtxhQ8Gf8+5KKRq8BUOJ4pKDjhRsOmY2uPXLW2Af
1ty9/zoFu5qud59l5EHg012SR8Mo+PFJx9A4gULoyB2zjKig4N5eQxd+o0KQ
WW7dqvaegrd6gc7tuEIQCu7K5mmi4Fc5osJXZYrgc9rZU/3dFFwmVZeEFN7B
7Adf64R5Cv5BkCkeppQA5aZuvtVhY7wjkS/e7HkJXDoiInjzhDF2PLEU8F9/
CXQVFxi9UzPGsx5tauVOpeD/6mqMg6Ex5higtoT7l0FdzNlt324YY7n6L4OK
SRXgYbi+SAQbY+U6LR6161Vw3C04vsHmEhboSG89Gl0FfTUq0bxXL+GBX8Qn
+wuqYCJxMs/O+xIOZyuX2jJXBfcX7jroP7iEfynvVZz2qIaTcp9/SBRfwqH5
660SPWqgwUfuWqCACe5Kai5adq+FtFs3290+m+CsHFn/6chauF4NWOWHCb5Z
eQcN5dXC2UJrLkmGCd7zReXjfzO1wLcqWyjGaYoDRLP7M9zrIPphbgGPsine
/vDheop7PRwd4pqmZ5hiNz8d6wK3BvjG0B64G22GtVxVMkgRDfDw3lN69Esz
vN1Gbso8twGqwqn2RXlmuOscZyBpsgGo1m27FNrM8Mkt9Fhzl0aI6EhIkuI3
xzwl+9u47JvAgktx19uH5jjtDy+YmTaDZb6ySd0zC0wdXb6b59cMHxySCvWy
LbDxt5FmzvhmWHZjiE/TLTBvXa1JXk8znP1C2eLyywJ7PA7w4iR/gith4iQD
OUuMjjCy3+q1wOgFXf/BSkt8teRyOHF7G4hq/PHc7GfFmg/62wgKbdD6w0Xg
7x0rPN2rkr92pg1emnEkjj6ywp5/N3b9s2+DDnLx47E0K+ynWiO5mNkGj/Vb
NgZ8tsLBtVuzxw//B7zn2T2/77fGyW3dHzvUPsPRj05XXk9Y446Rc9yvbDqg
5E9WZVykLZ6Kkz1726MD7DzPX3ycaIt5tLluWQZ1QNe9wsi4LFuMsmuZm152
QJl7OXttnS3OcoeR0J8d8EpSoyd22RYHLSt8cLbqBJxX0aNmb4cP8G67K2/R
BcnxeqbPz17GYQcW2N5d6gGKUZtXwA4H7Od9bu+Qcw9kSXqXeCo6YCf83Eg0
oAfcvZgxvuoOWFP3dKZXYg80hVXsee3ogLmuRRge/d0D+/nFkpKyHfCdHLn0
kiu9cNU2zHv0uCOm7rfULqf1wUhjbj7D1Am77214UpX2FUTZXwy717ngZVuX
nG+u/aB7W+Lt4xA3bFNJ1ouw/wXHDy8qlWtfx7YzHVVVoQPwXtMvA4d54QcH
i6+lBw9B7JsIjUcZvrjpcPfQjfAhcA9Xc0wv9MUkxUXzszFD4Ft7nbu8yhff
OX70/EDaEOh0LFK/9vhif7ViWZm6IVhX/Jm0SvLDzheLfyawD4PRM52E145+
WMOn2PDJzWEom8ilc+/0x3f8upvsQofhbv+j8lcH/XFNwOIphYhhyA0KcEMq
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

       "]]},
     Annotation[#, "Charting`Private`Tag$5120386#1"]& ]}, {}, {}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{0, 0},
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  ImagePadding->All,
  ImageSize->{583., Automatic},
  Method->{
   "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
    AbsolutePointSize[6], "ScalingFunctions" -> None, 
    "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
        (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
         Part[#, 1]], 
        (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
         Part[#, 2]]}& ), "CopiedValueFunction" -> ({
        (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
         Part[#, 1]], 
        (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
         Part[#, 2]]}& )}},
  PlotRange->
   NCache[{{0, Pi}, {-0.007804551345249512, 0.11842094017904047`}}, {{
     0, 3.141592653589793}, {-0.007804551345249512, 0.11842094017904047`}}],
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.05], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{{3.7383238714214478`*^9, 3.738323901947304*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"p", "=", "1"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"mD", "=", "0.15"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"r", "=", "1"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{"Plot", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{"Re", "[", 
      RowBox[{
       FractionBox[
        RowBox[{
         RowBox[{"Sin", "[", "x", "]"}], 
         RowBox[{"(", 
          RowBox[{
           SuperscriptBox["v", "2"], "+", 
           RowBox[{
            SuperscriptBox["v", "2"], 
            SuperscriptBox[
             RowBox[{"Sin", "[", "x", "]"}], "2"]}]}], ")"}]}], 
        SuperscriptBox[
         RowBox[{"(", 
          RowBox[{"1", "-", 
           RowBox[{
            SuperscriptBox["v", "2"], 
            SuperscriptBox[
             RowBox[{"Sin", "[", "x", "]"}], "2"]}]}], ")"}], 
         RowBox[{"5", "/", "2"}]]], 
       FractionBox[
        RowBox[{"Exp", "[", 
         RowBox[{"\[ImaginaryI]", " ", "p", " ", "r", " ", 
          RowBox[{"Cos", "[", "x", "]"}]}], "]"}], 
        RowBox[{
         RowBox[{"(", 
          RowBox[{
           SuperscriptBox["p", "2"], "+", 
           RowBox[{"\[CapitalPi]par", "[", 
            RowBox[{"x", ",", "v", ",", "mD"}], "]"}]}], ")"}], 
         RowBox[{"(", 
          RowBox[{
           SuperscriptBox["p", "2"], "+", 
           RowBox[{"Conjugate", "[", 
            RowBox[{"\[CapitalPi]par", "[", 
             RowBox[{"x", ",", "v", ",", "mD"}], "]"}], "]"}]}], ")"}]}]]}], 
      "]"}], ",", 
     RowBox[{"Im", "[", 
      RowBox[{
       FractionBox[
        RowBox[{
         RowBox[{"Sin", "[", "x", "]"}], 
         RowBox[{"(", 
          RowBox[{
           SuperscriptBox["v", "2"], "+", 
           RowBox[{
            SuperscriptBox["v", "2"], 
            SuperscriptBox[
             RowBox[{"Sin", "[", "x", "]"}], "2"]}]}], ")"}]}], 
        SuperscriptBox[
         RowBox[{"(", 
          RowBox[{"1", "-", 
           RowBox[{
            SuperscriptBox["v", "2"], 
            SuperscriptBox[
             RowBox[{"Sin", "[", "x", "]"}], "2"]}]}], ")"}], 
         RowBox[{"5", "/", "2"}]]], 
       FractionBox[
        RowBox[{"Exp", "[", 
         RowBox[{"\[ImaginaryI]", " ", "p", " ", "r", " ", 
          RowBox[{"Cos", "[", "x", "]"}]}], "]"}], 
        RowBox[{
         RowBox[{"(", 
          RowBox[{
           SuperscriptBox["p", "2"], "+", 
           RowBox[{"\[CapitalPi]par", "[", 
            RowBox[{"x", ",", "v", ",", "mD"}], "]"}]}], ")"}], 
         RowBox[{"(", 
          RowBox[{
           SuperscriptBox["p", "2"], "+", 
           RowBox[{"Conjugate", "[", 
            RowBox[{"\[CapitalPi]par", "[", 
             RowBox[{"x", ",", "v", ",", "mD"}], "]"}], "]"}]}], ")"}]}]]}], 
      "]"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"x", ",", "0", ",", "\[Pi]"}], "}"}]}], "]"}]}], "Input",
 CellChangeTimes->{{3.7379547501691847`*^9, 3.7379548615651484`*^9}}],

Cell[BoxData[
 GraphicsBox[{{{}, {}, 
    TagBox[
     {RGBColor[0.368417, 0.506779, 0.709798], AbsoluteThickness[1.6], Opacity[
      1.], LineBox[CompressedData["
1:eJwV2Hk4FX0bB3B7R3tISbIUeSj1KFToO3kqWxGltCEiSfaUFlK2KFlKUkLZ
KzrWElmyhUo5drJLOFO245yDvPP+Ndfnmplrfsv3vueakbV2NrXl4+Hh2cLL
w/P/I3/xwi99aq67T/ytUK6W19kt/+uD5rpIYxQu2u4clyQD7pstZ1sjLHFD
1LjXN2krBsTs2XkRziiIF8gPTiLQtt+vLCnCB09emYYykw6h0TJiY2zEfSx/
W5sfnWIFU0eJtuiIOKxSz2aaZbggfPxUdlREJjT3bCk4/ekmNCsMFuq4l+DQ
l4z50NlwuFw1OpPtUg2vGtPOnr4nuPjWNpRvfT3wLjI489oLqOibyPBur8f9
yY2+EQ9f4E+rVtb83nqYKbMmAzJfwGNGtGnWrh4O9PnUxL4XuLq7TGo6nTqv
VvIw90AiAsrXvR5R/YZ9Miu2E3JJiK9vrmXofEf8km1F99uTwRjSF06xZqBc
IiF2NCQdvx8r7rvtxoBysE3mp9R0LDRc4Gt5i4Gjb6u+FlSkg3hdzl71nIHE
9dzA1vl0vHTFUFAPA2+P8w8tvPQSt7jbqxysGjEcW7rQyOYVtiyW8VexaILe
0xqtDuMMBG9h8eQdb0EAY9o3U52Oq5f1lQcdWsD9OSxpoU/H+eKnZuLXW9Dq
u8JS8hQdesb/pXs+a4E7SsTKfOlY4Bx2WKOvBWlffqSWfqbDL0Mp+a1jK3IC
Y1sf2GfBe7Ol4XufNvy+90nrZ1o2XJWrH5YkdSBRYcBY3iIP/bb9N+PzOiCf
Z8C45pGHo/E8jjerOrBc7cCbvuA87Fq5U4f41YGP4c3Pf+bngW8+jSze1Ik/
RZYdpSL5iPgeoluc3Qm9z9Psmtp8ZHkZc4pKfyDj0P0fwYbvwLW5kNHp1A3i
fIzrU79CWK2YuFLo2Y2GDRGjHbGFqPhw9b8n3t0YP9l9eEt+IcIkglvMQ7vR
9LZpxcLhQmz8msrHeN2NllFz9+hDRTiya/BozWg3/l4YXSgn+wEZy8/M5zn0
QMgzWFu1vhjWRUcPhdn1QjjovYZuTilU81aLSDj3YsQ5UyOyvBR8mW0NCZd7
cfGekt4IoxTP4y2OZQf1osnaMKd4qhS9t+0smtJ7MX0m9wJXowzWBp6Oa3/3
IjFrrKfwA+Xmh0Gpl/uQkcBNSGj8CJsxRklJUD9aV88e0FKqxN2t+c7JAYPY
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
       "]]},
     Annotation[#, "Charting`Private`Tag$119754#1"]& ], 
    TagBox[
     {RGBColor[0.880722, 0.611041, 0.142051], AbsoluteThickness[1.6], Opacity[
      1.], LineBox[CompressedData["
1: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
xtX/AxqGxmE=
       "]]},
     Annotation[#, "Charting`Private`Tag$119754#2"]& ]}, {}, {}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{0, 0},
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  ImagePadding->All,
  ImageSize->{759., Automatic},
  Method->{
   "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
    AbsolutePointSize[6], "ScalingFunctions" -> None, 
    "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
        (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
         Part[#, 1]], 
        (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
         Part[#, 2]]}& ), "CopiedValueFunction" -> ({
        (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
         Part[#, 1]], 
        (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
         Part[#, 2]]}& )}},
  PlotRange->
   NCache[{{0, Pi}, {-0.29183316844319046`, 0.9674807637639272}}, {{
     0, 3.141592653589793}, {-0.29183316844319046`, 0.9674807637639272}}],
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.05], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{{3.7379548518529377`*^9, 3.7379548626942873`*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Plot", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{
      RowBox[{"Arg", "[", 
       SqrtBox[
        RowBox[{"\[CapitalPi]par", "[", 
         RowBox[{"\[Theta]", ",", "0.5", ",", "0.15"}], "]"}]], "]"}], "+", 
      RowBox[{"\[Pi]", "/", "2"}]}], ",", 
     RowBox[{
      RowBox[{"Arg", "[", 
       SqrtBox[
        RowBox[{"\[CapitalPi]par", "[", 
         RowBox[{"\[Theta]", ",", "0.5", ",", "0.15"}], "]"}]], "]"}], "-", 
      RowBox[{"\[Pi]", "/", "2"}]}], ",", 
     RowBox[{
      RowBox[{"Arg", "[", 
       SqrtBox[
        RowBox[{"Conjugate", "[", 
         RowBox[{"\[CapitalPi]par", "[", 
          RowBox[{"\[Theta]", ",", "0.5", ",", "0.15"}], "]"}], "]"}]], "]"}],
       "+", 
      RowBox[{"\[Pi]", "/", "2"}]}], ",", 
     RowBox[{
      RowBox[{"Arg", "[", 
       SqrtBox[
        RowBox[{"Conjugate", "[", 
         RowBox[{"\[CapitalPi]par", "[", 
          RowBox[{"\[Theta]", ",", "0.5", ",", "0.15"}], "]"}], "]"}]], "]"}],
       "-", 
      RowBox[{"\[Pi]", "/", "2"}]}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\[Theta]", ",", "0", ",", 
     RowBox[{"\[Pi]", "/", "2"}]}], "}"}], ",", 
   RowBox[{"PlotLegends", "\[Rule]", "\"\<Expressions\>\""}]}], 
  "]"}]], "Input",
 CellChangeTimes->{{3.737816265931522*^9, 3.737816414043881*^9}, {
  3.7378164621269217`*^9, 3.737816494511236*^9}}],

Cell[BoxData[
 TemplateBox[{GraphicsBox[{{{{}, {}, 
       TagBox[{
         Directive[
          Opacity[1.], 
          RGBColor[0.368417, 0.506779, 0.709798], 
          AbsoluteThickness[1.6]], 
         LineBox[CompressedData["
1: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
MdyyUoT1Zvdtf2iI8JDeuUcc/w/tZTPN
          "]]}, 
        Annotation[#, "Charting`Private`Tag$43753#1"]& ], 
       TagBox[{
         Directive[
          Opacity[1.], 
          RGBColor[0.880722, 0.611041, 0.142051], 
          AbsoluteThickness[1.6]], 
         LineBox[CompressedData["
1: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
oVs=
          "]]}, Annotation[#, "Charting`Private`Tag$43753#2"]& ], 
       TagBox[{
         Directive[
          Opacity[1.], 
          RGBColor[0.560181, 0.691569, 0.194885], 
          AbsoluteThickness[1.6]], 
         LineBox[CompressedData["
1:eJwV1Xk41VkYB3BFEmpS0mNkDRWtlrFEXxlZWpBKSbKUvYi0KKUFKcsgGSQu
sjZEtsuVbnLrKmMkWZIWIW0S0f1d3N+c+8d53ufzz3ne8z2bqkegg+dsERGR
XDKEVfSBZOsHffdNqr9ddOxi0dD41LBR6TpgYHzQTmh+2brDPUl22G4waSR0
+SReypTuxWkxGzmhB2V9eNVJrkjKdBzoJI6V584vZR3C6lnKt4XOX3kgS6TU
G4maOXuEZhuMrt/F8Ad37jveS+JXlhGNeUmBSM3ojhOaryWtFdYYhHO9MbJC
X9HpDM5jHUdVLRXbQSxrzGC1Vp6AobbarxfE2Zv9xHglp1CtNmeX0Gtt9Hao
FoSCkZjDaCdm2QtubGWchaIP/+1z4peuSStuJYVjrXiPbptwPbprDT9wLoBd
4Gr9H/Epg+uvTzVexNBhhm0rsRhcNLJZlzHTZbe+hfipeWOzPjMCrS4NUs+I
Ey1XBDytjMRI5lB3M7GS7Y/q8ZIr+DJwyPoJ8cBOR+fo4mhE3WV+5hDf2cOi
lxVcxSf24/NNxIYukdaWjBik6y8Ie0jscET+VWrSX0iPt3xWRyxtiAcpVglw
ZLtPMYlHa4Nk3nMSIL1YX7GGuPp+Z9WJxkSEHhP9o4L4Tw5DkMm6jsGlxvXF
xJpWL+w/GSVjyEvmTCGxZPOcXF1mMhTcslblE7e1+FlxK2+Afe6NSzaxS4de
wo+Sv2G198PvfxObOXr3b1ydilVjvl7JxOrdaXpRxalICczLTST+3Cvo/r0g
DevkjMdjhPl94KpaMG6ifbh9KFyYz9iBipSkLLTpRCp7EsctSTdhz2egabOs
oTtxe3mksr4DA9G+z+FC7Pz5wKBSLwP/7e9YRqJCgLNU0NjXbEg8HpW2IE42
9YlOW3gbCUuVOErEPT27/BfsuQ3ubqc2eWH+J2F7Oe02dm5iPZUlLiiVkz2q
loeTgtFYSeI6ZU6WmV4+LmktsZqoo/F2llrNx72FsN7UmPiEWD1zfvqBjEJ0
vtb46yGxjzEV9vxdIeTp/LMs4rHgNnOWbxEWWNOqd4nFBs63xp8thsjridwb
xFqPewf1s/6B1eDhMFfijZytkubHy5DTt+nMUC2NhR35/xlcL4Ppw/0Db4gH
+mffWFNRBvfsInQRx4uwlOXHy+CQ0tf8hLh/o7b+aHA5jjy6trqQOPqelFtm
8D2sPOqk5UXcmdVSxQ+qhJTS+dldTHK+SleeHU2sRFB2TOK/xBfuR5gNlVeC
zq6QaSJe1Wvy7PmPSthU2g2WEYfJlbwrDKpC1TxGz1Xi5XFxUnuDqrE27/WE
IfGxM7buFceYsJ1xnoypobE1wKRQIoGJOqWvby8QL/fQ+u5ylwmLIwtYJ4g7
bcTPSYwwodUwx9KV2FS+IdXFvxZKLrdLNxBLMte0zfWqw29Vj5tfVNPIm5DG
Aed63LGOVZlPfP4TP7L8TD1e+YYYixDv6xtuEU+vR7Bs65bxKnIfOE37y7vr
sen28/U9xMHJYSfFHe8jo5G/9zaxme7XkjL7Bqzs6/lkQHyU6Rk/ezkb9p3V
i3dXCt+HnSqz9Nhg93rIWxCP9pjcoy3YcJVonK9HHDK1uHPaiw2DyOuNi4nP
bGpU/FXMxuPTjgfaK2hENSmVfNF5iAXxY7bbiRltXc86zBtxqX5AXfcejY5h
m3kFHk1IV63b0HKXxve0lVsuBzdhmY6cbi2x5La5F10vNaH7uEA9n9ispIm3
NKcJcWuOvgonvhOE4ej3TbAoSYnRIb7E13vi58aBd8fdOTdKaayTVolce/Ax
Dl49tsO2hMa1dZMi1U5cZPhbPkssJv2estEe8uMiVbZu8jSx74OMPXJhXPDE
on5zI7a2+7P4ZCYXwZsV560lnhuYsMvgAxej4eLLmotoRJRq5TOPNIOxtLhh
qpDsxxrXbazwp7DwURhyKKARpM29wc5rQfrGzeu5ueS9PuRf2hfQhtmJohpj
N2l43He0T/Bqh+PXXdvirtM49KODzY7ugOp7tTeGV8n/sL4mMD+qE1XSIbfc
z9OYza4xiDjTjfRbpXtTgmnIaG1rfZv6Cjr1Z1sCDpN+s8xzR5NeYzhToWRo
D42l31ssw2veYEfp4548CxrpT+pmifq+g+/unhFVHRomiptplcPv4SzplOat
TEP73cKBcyH9mD3gHxs0j0ZJ4SKfquAP8B5mSDqNCxD2xuWFdtQA6vnbbTJ6
BAgyMdyWmTyIDN0T50IbBOBnWXh8SRjCp6IxieO5ArQdS3c7lfMRf4TIzZhG
CGBkpSboyx7GH3YV86w9BWjeYlRolvEJq3KKbTdsESCvPM2o/85nsF4s+uKr
IsCS5av9DhZ9wZxqhzvG0zNonyVxSb7+Kx65D1zitc+gSuJ4flvzN7xRedLv
WTiD1UsW+nlwRpC69KVdz/kZfI+flNXt/A5eyOj+FrsZLL9yZV2g3yjCzl11
nas2g/79va/MP47i54S5+onxaVgPvqCqAn7gJzOEu+DBNE4He/rIffsBVobx
ilOx07CtvrlV7uQYBIH6mh27pjEy7RcmOjkGq0jaaLfiNLK7LlYGHB+HbQHD
7MTQFPg+pm6hU+NwThn19S+aguJMonPQmZ8Y9grPUAqcwpBVzFMJsQkU5bjw
0tdO4ZFmC5RiJrC7tShQcoQPP4l8MdV5k6ipCfDsLOOjhqFu+ihxEs17Yv+O
PcpH60YTjoPML+g4me4QrOGD53dzl1v8L8DzY5jKdwpc+6w98+V4UD4ZohNU
TMHDyKSgIJmHGfF/QqX8KPh++3fidQoPjCvHQr/4UDiW7WqxKI2Hn3ztk8+8
KYTPu/w+7BYP774xvWI8KWT0NCs45PMwEn1ZQ8qdQmfo3oTpGh6SfjHUJfdR
2FoXHLqzl4e6HqNwcUsKOwPEuFF9PKzoYOoPWVDYp5YiV/+WBxWp2s+cPyl4
X6ut0BzgYce1APvIzRQi9ouMTH3l4YrTXGkxUwoN/DiPfAEP3tr3bWfpUeCU
Kpf3ilBYJCE//k6HQotHOb1QlIJ8LiuFvYFC79OOjLNzKWwPFX8dvo4CL12h
y34hhcoAaTeBFgXatkQjahGF/jk8um8VBXFRhLBkKTBWxGXdX0lB1t9DRlOe
zB882BemSUFB+aerswKFC7YPww5oUFB7EVmaoEjh27LTCibqFLSuLJ3hKFOw
NpCrU1hOYcPGom1TqhQu/irYJ6z/A2aFT9s=
          "]]}, 
        Annotation[#, "Charting`Private`Tag$43753#3"]& ], 
       TagBox[{
         Directive[
          Opacity[1.], 
          RGBColor[0.922526, 0.385626, 0.209179], 
          AbsoluteThickness[1.6]], 
         LineBox[CompressedData["
1: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
GIVN
          "]]}, 
        Annotation[#, "Charting`Private`Tag$43753#4"]& ]}}, {}, {}}, {
    DisplayFunction -> Identity, Ticks -> {Automatic, Automatic}, 
     AxesOrigin -> {0, 0}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> {None, None}, DisplayFunction -> Identity, 
     PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.05], 
        Scaled[0.05]}}, PlotRangeClipping -> True, ImagePadding -> All, 
     DisplayFunction -> Identity, AspectRatio -> 
     NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> {True, True}, 
     AxesLabel -> {None, None}, AxesOrigin -> {0, 0}, DisplayFunction :> 
     Identity, Frame -> {{False, False}, {False, False}}, 
     FrameLabel -> {{None, None}, {None, None}}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> {None, None}, GridLinesStyle -> Directive[
       GrayLevel[0.5, 0.4]], 
     Method -> {
      "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
       AbsolutePointSize[6], "ScalingFunctions" -> None, 
       "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
           (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
            Part[#, 1]], 
           (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
            Part[#, 2]]}& ), "CopiedValueFunction" -> ({
           (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
            Part[#, 1]], 
           (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
            Part[#, 2]]}& )}}, PlotRange -> 
     NCache[{{0, Rational[1, 2] Pi}, {-1.98335965910605, 
        1.98335965910605}}, {{0, 1.5707963267948966`}, {-1.98335965910605, 
        1.98335965910605}}], PlotRangeClipping -> True, 
     PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.02], 
        Scaled[0.02]}}, Ticks -> {Automatic, Automatic}}],FormBox[
    FormBox[
     TemplateBox[{
       RowBox[{
         RowBox[{"arg", "(", 
           SqrtBox[
            RowBox[{"\[CapitalPi]par", "(", 
              RowBox[{"\[Theta]", ",", "0.5`", ",", "0.15`"}], ")"}]], ")"}], 
         "+", 
         FractionBox["\[Pi]", "2"]}], 
       RowBox[{
         RowBox[{"arg", "(", 
           SqrtBox[
            RowBox[{"\[CapitalPi]par", "(", 
              RowBox[{"\[Theta]", ",", "0.5`", ",", "0.15`"}], ")"}]], ")"}], 
         "-", 
         FractionBox["\[Pi]", "2"]}], 
       RowBox[{
         RowBox[{"arg", "(", 
           SqrtBox[
            TemplateBox[{
              RowBox[{"\[CapitalPi]par", "(", 
                RowBox[{"\[Theta]", ",", "0.5`", ",", "0.15`"}], ")"}]}, 
             "Conjugate", SyntaxForm -> SuperscriptBox]], ")"}], "+", 
         FractionBox["\[Pi]", "2"]}], 
       RowBox[{
         RowBox[{"arg", "(", 
           SqrtBox[
            TemplateBox[{
              RowBox[{"\[CapitalPi]par", "(", 
                RowBox[{"\[Theta]", ",", "0.5`", ",", "0.15`"}], ")"}]}, 
             "Conjugate", SyntaxForm -> SuperscriptBox]], ")"}], "-", 
         FractionBox["\[Pi]", "2"]}]}, "LineLegend", 
      DisplayFunction -> (FormBox[
        StyleBox[
         StyleBox[
          PaneBox[
           TagBox[
            GridBox[{{
               TagBox[
                GridBox[{{
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #3}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #4}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                 AutoDelete -> False, 
                 GridBoxDividers -> {
                  "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                 GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}},
                  GridBoxSpacings -> {
                  "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
             GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
             AutoDelete -> False, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
            "Grid"], Alignment -> Left, AppearanceElements -> None, 
           ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
           "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
         FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
         False], TraditionalForm]& ), 
      InterpretationFunction :> (RowBox[{"LineLegend", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.24561133333333335`, 0.3378526666666667, 
                    0.4731986666666667], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.368417, 0.506779, 0.709798]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.368417, 0.506779, 0.709798]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.368417, 0.506779, 0.709798], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.587148, 0.40736066666666665`, 0.09470066666666668], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.880722, 0.611041, 0.142051]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.880722, 0.611041, 0.142051]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.880722, 0.611041, 0.142051], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.37345400000000006`, 0.461046, 0.12992333333333334`], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.560181, 0.691569, 0.194885]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.560181, 0.691569, 0.194885]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.560181, 0.691569, 0.194885], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.6150173333333333, 0.25708400000000003`, 
                    0.13945266666666667`], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.922526, 0.385626, 0.209179]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.922526, 0.385626, 0.209179]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.922526, 0.385626, 0.209179], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}]}],
              "}"}], ",", 
           RowBox[{"{", 
             RowBox[{
               TagBox[#, HoldForm], ",", 
               TagBox[#2, HoldForm], ",", 
               TagBox[#3, HoldForm], ",", 
               TagBox[#4, HoldForm]}], "}"}], ",", 
           RowBox[{"LegendMarkers", "\[Rule]", "None"}], ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
             RowBox[{"{", "}"}]}], ",", 
           RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
      Editable -> True], TraditionalForm], TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"], 
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]], "Output",
 CellChangeTimes->{
  3.7378164150666847`*^9, {3.737816477784217*^9, 3.737816496501029*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"v", "=", "0.5"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{"Plot", "[", 
  RowBox[{
   FractionBox[
    RowBox[{
     RowBox[{"Sin", "[", "x", "]"}], 
     RowBox[{"(", 
      RowBox[{
       SuperscriptBox["v", "2"], "+", 
       RowBox[{
        SuperscriptBox["v", "2"], 
        SuperscriptBox[
         RowBox[{"Sin", "[", "x", "]"}], "2"]}]}], ")"}]}], 
    SuperscriptBox[
     RowBox[{"(", 
      RowBox[{"1", "-", 
       RowBox[{
        SuperscriptBox["v", "2"], 
        SuperscriptBox[
         RowBox[{"Sin", "[", "x", "]"}], "2"]}]}], ")"}], 
     RowBox[{"5", "/", "2"}]]], ",", 
   RowBox[{"{", 
    RowBox[{"x", ",", "0", ",", "\[Pi]"}], "}"}]}], "]"}]}], "Input",
 CellChangeTimes->{{3.737813515025901*^9, 3.7378135837868977`*^9}, {
  3.737815096632193*^9, 3.73781510418824*^9}, {3.73795343234603*^9, 
  3.7379534447220297`*^9}, {3.737955588858096*^9, 3.7379556431871243`*^9}, {
  3.73795947201053*^9, 3.737959484720912*^9}}],

Cell[BoxData[
 GraphicsBox[{{{}, {}, 
    TagBox[
     {RGBColor[0.368417, 0.506779, 0.709798], AbsoluteThickness[1.6], Opacity[
      1.], LineBox[CompressedData["
1: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
bNicZylUkyJsNlz9///qfwEwxXNn
       "]]},
     Annotation[#, "Charting`Private`Tag$243433#1"]& ]}, {}, {}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{0, 0},
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  ImagePadding->All,
  ImageSize->{654., Automatic},
  Method->{
   "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
    AbsolutePointSize[6], "ScalingFunctions" -> None, 
    "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
        (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
         Part[#, 1]], 
        (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
         Part[#, 2]]}& ), "CopiedValueFunction" -> ({
        (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
         Part[#, 1]], 
        (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
         Part[#, 2]]}& )}},
  PlotRange->
   NCache[{{0, Pi}, {0., 1.0264003685467336`}}, {{0, 3.141592653589793}, {0., 
     1.0264003685467336`}}],
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.05], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{
  3.737813584439435*^9, {3.737815099740836*^9, 3.737815106191133*^9}, {
   3.737953434245852*^9, 3.737953445646381*^9}, {3.737955631620319*^9, 
   3.737955643767798*^9}, 3.737959485187332*^9}]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{"f1", "[", 
   RowBox[{"v_", ",", "r_", ",", "mD_"}], "]"}], ":=", 
  RowBox[{"NIntegrate", "[", 
   RowBox[{
    RowBox[{
     FractionBox[
      RowBox[{
       RowBox[{"Sin", "[", "\[Theta]", "]"}], 
       RowBox[{"(", 
        RowBox[{"2", "+", 
         RowBox[{
          SuperscriptBox["v", "2"], 
          SuperscriptBox[
           RowBox[{"Sin", "[", "\[Theta]", "]"}], "2"]}]}], ")"}]}], 
      SuperscriptBox[
       RowBox[{"(", 
        RowBox[{"1", "-", 
         RowBox[{
          SuperscriptBox["v", "2"], 
          SuperscriptBox[
           RowBox[{"Sin", "[", "\[Theta]", "]"}], "2"]}]}], ")"}], 
       RowBox[{"5", "/", "2"}]]], 
     FractionBox[
      RowBox[{"p", " ", 
       RowBox[{"Exp", "[", 
        RowBox[{"\[ImaginaryI]", " ", "p", " ", "r", " ", 
         RowBox[{"Cos", "[", "\[Theta]", "]"}]}], "]"}]}], 
      RowBox[{
       RowBox[{"(", 
        RowBox[{
         SuperscriptBox["p", "2"], "+", 
         RowBox[{"\[CapitalPi]par", "[", 
          RowBox[{"\[Theta]", ",", "v", ",", "mD"}], "]"}]}], ")"}], 
       RowBox[{"(", 
        RowBox[{
         SuperscriptBox["p", "2"], "+", 
         RowBox[{"Conjugate", "[", 
          RowBox[{"\[CapitalPi]par", "[", 
           RowBox[{"\[Theta]", ",", "v", ",", "mD"}], "]"}], "]"}]}], 
        ")"}]}]]}], ",", 
    RowBox[{"{", 
     RowBox[{"\[Theta]", ",", "0", ",", "\[Pi]"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"p", ",", "0", ",", "\[Infinity]"}], "}"}]}], "]"}]}]], "Input",
 CellChangeTimes->{{3.737725295859261*^9, 3.7377253988219347`*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"f", "[", 
   RowBox[{"v_", ",", "r_", ",", "mD_"}], "]"}], ":=", 
  RowBox[{"NIntegrate", "[", 
   RowBox[{
    RowBox[{
     FractionBox[
      RowBox[{
       RowBox[{"Sin", "[", "\[Theta]", "]"}], 
       RowBox[{"(", 
        RowBox[{"2", "+", 
         RowBox[{
          SuperscriptBox["v", "2"], 
          SuperscriptBox[
           RowBox[{"Sin", "[", "\[Theta]", "]"}], "2"]}]}], ")"}]}], 
      SuperscriptBox[
       RowBox[{"(", 
        RowBox[{"1", "-", 
         RowBox[{
          SuperscriptBox["v", "2"], 
          SuperscriptBox[
           RowBox[{"Sin", "[", "\[Theta]", "]"}], "2"]}]}], ")"}], 
       RowBox[{"5", "/", "2"}]]], 
     FractionBox[
      RowBox[{"p", " ", 
       RowBox[{"Cos", "[", 
        RowBox[{"p", " ", "r", " ", 
         RowBox[{"Cos", "[", "\[Theta]", "]"}]}], "]"}]}], 
      RowBox[{
       RowBox[{"(", 
        RowBox[{
         SuperscriptBox["p", "2"], "+", 
         RowBox[{"\[CapitalPi]par", "[", 
          RowBox[{"\[Theta]", ",", "v", ",", "mD"}], "]"}]}], ")"}], 
       RowBox[{"(", 
        RowBox[{
         SuperscriptBox["p", "2"], "+", 
         RowBox[{"Conjugate", "[", 
          RowBox[{"\[CapitalPi]par", "[", 
           RowBox[{"\[Theta]", ",", "v", ",", "mD"}], "]"}], "]"}]}], 
        ")"}]}]]}], ",", 
    RowBox[{"{", 
     RowBox[{"\[Theta]", ",", "0", ",", "\[Pi]"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"p", ",", "0", ",", "\[Infinity]"}], "}"}]}], "]"}]}]], "Input",
 CellChangeTimes->{{3.737956301646497*^9, 3.737956306976701*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"f", "[", 
   RowBox[{"0.5", ",", "10", ",", "0.15"}], "]"}], "//", 
  "AbsoluteTiming"}]], "Input",
 CellChangeTimes->{{3.737956314197427*^9, 3.737956318609373*^9}}],

Cell[BoxData["$Aborted"], "Output",
 CellChangeTimes->{3.737956604990131*^9, 3.737957910263303*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"f1", "[", 
  RowBox[{"0.5", ",", "10", ",", "0.15"}], "]"}]], "Input",
 CellChangeTimes->{3.737725406438442*^9}],

Cell[BoxData[
 RowBox[{"78.01665961994235`", "\[VeryThinSpace]", "+", 
  RowBox[{"5.649306161759071`*^-10", " ", "\[ImaginaryI]"}]}]], "Output",
 CellChangeTimes->{3.7377258520439463`*^9, 3.737801449306419*^9, 
  3.737802832736031*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"f1", "[", 
  RowBox[{"0.5", ",", "20", ",", "0.15"}], "]"}]], "Input",
 CellChangeTimes->{{3.73777866932393*^9, 3.7377786700518723`*^9}}],

Cell[BoxData[
 RowBox[{"32.50669480774772`", "\[VeryThinSpace]", "-", 
  RowBox[{"8.52027416502199`*^-10", " ", "\[ImaginaryI]"}]}]], "Output",
 CellChangeTimes->{3.737780066681387*^9}]
}, Open  ]],

Cell[BoxData[
 RowBox[{"Log", "[", 
  RowBox[{"r", " ", 
   SqrtBox[
    RowBox[{"\[CapitalPi]par", "[", 
     RowBox[{"\[Theta]", ",", "v1", ",", "mD"}], "]"}]], " ", 
   RowBox[{"Cos", "[", "\[Theta]", "]"}]}], "]"}]], "Input",
 CellChangeTimes->{3.737977249726962*^9}],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"pres", "[", 
    RowBox[{"v1_", ",", "mD_", ",", "r_"}], "]"}], ":=", 
   RowBox[{
    RowBox[{"-", "2"}], " ", 
    RowBox[{"NIntegrate", "[", 
     RowBox[{
      RowBox[{
       FractionBox[
        RowBox[{
         RowBox[{"Sin", "[", "\[Theta]", "]"}], 
         RowBox[{"(", 
          RowBox[{"2", "+", 
           RowBox[{
            SuperscriptBox["v1", "2"], 
            SuperscriptBox[
             RowBox[{"Sin", "[", "\[Theta]", "]"}], "2"]}]}], ")"}]}], 
        SuperscriptBox[
         RowBox[{"(", 
          RowBox[{"1", "-", 
           RowBox[{
            SuperscriptBox["v1", "2"], 
            SuperscriptBox[
             RowBox[{"Sin", "[", "\[Theta]", "]"}], "2"]}]}], ")"}], 
         RowBox[{"5", "/", "2"}]]], 
       FractionBox["1", 
        RowBox[{"2", " ", "\[ImaginaryI]", " ", 
         RowBox[{"Im", "[", 
          RowBox[{"\[CapitalPi]par", "[", 
           RowBox[{"\[Theta]", ",", "v1", ",", "mD"}], "]"}], "]"}]}]], 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"(", 
          RowBox[{
           RowBox[{
            RowBox[{"Sinh", "[", 
             RowBox[{"r", " ", 
              SqrtBox[
               RowBox[{"\[CapitalPi]par", "[", 
                RowBox[{"\[Theta]", ",", "v1", ",", "mD"}], "]"}]], " ", 
              RowBox[{"Cos", "[", "\[Theta]", "]"}]}], "]"}], 
            RowBox[{"SinhIntegral", "[", 
             RowBox[{"r", " ", 
              SqrtBox[
               RowBox[{"\[CapitalPi]par", "[", 
                RowBox[{"\[Theta]", ",", "v1", ",", "mD"}], "]"}]], " ", 
              RowBox[{"Cos", "[", "\[Theta]", "]"}]}], "]"}]}], "-", 
           RowBox[{
            RowBox[{"Cosh", "[", 
             RowBox[{"r", " ", 
              SqrtBox[
               RowBox[{"\[CapitalPi]par", "[", 
                RowBox[{"\[Theta]", ",", "v1", ",", "mD"}], "]"}]], " ", 
              RowBox[{"Cos", "[", "\[Theta]", "]"}]}], "]"}], 
            RowBox[{"CoshIntegral", "[", 
             RowBox[{"r", " ", 
              SqrtBox[
               RowBox[{"\[CapitalPi]par", "[", 
                RowBox[{"\[Theta]", ",", "v1", ",", "mD"}], "]"}]], " ", 
              RowBox[{"Cos", "[", "\[Theta]", "]"}]}], "]"}]}]}], ")"}], "-", 
         
         RowBox[{"(", 
          RowBox[{
           RowBox[{
            RowBox[{"Sinh", "[", 
             RowBox[{"r", " ", 
              SqrtBox[
               RowBox[{"Conjugate", "[", 
                RowBox[{"\[CapitalPi]par", "[", 
                 RowBox[{"\[Theta]", ",", "v1", ",", "mD"}], "]"}], "]"}]], 
              " ", 
              RowBox[{"Cos", "[", "\[Theta]", "]"}]}], "]"}], 
            RowBox[{"SinhIntegral", "[", 
             RowBox[{"r", " ", 
              SqrtBox[
               RowBox[{"Conjugate", "[", 
                RowBox[{"\[CapitalPi]par", "[", 
                 RowBox[{"\[Theta]", ",", "v1", ",", "mD"}], "]"}], "]"}]], 
              " ", 
              RowBox[{"Cos", "[", "\[Theta]", "]"}]}], "]"}]}], "-", 
           RowBox[{
            RowBox[{"Cosh", "[", 
             RowBox[{"r", " ", 
              SqrtBox[
               RowBox[{"Conjugate", "[", 
                RowBox[{"\[CapitalPi]par", "[", 
                 RowBox[{"\[Theta]", ",", "v1", ",", "mD"}], "]"}], "]"}]], 
              " ", 
              RowBox[{"Cos", "[", "\[Theta]", "]"}]}], "]"}], 
            RowBox[{"CoshIntegral", "[", 
             RowBox[{"r", " ", 
              SqrtBox[
               RowBox[{"Conjugate", "[", 
                RowBox[{"\[CapitalPi]par", "[", 
                 RowBox[{"\[Theta]", ",", "v1", ",", "mD"}], "]"}], "]"}]], 
              " ", 
              RowBox[{"Cos", "[", "\[Theta]", "]"}]}], "]"}]}]}], ")"}]}], 
        ")"}]}], ",", 
      RowBox[{"{", 
       RowBox[{"\[Theta]", ",", "0", ",", 
        RowBox[{"\[Pi]", "/", "2"}]}], "}"}]}], "]"}]}]}], ";"}]], "Input",
 CellChangeTimes->{{3.737976625011351*^9, 3.73797689948232*^9}, {
  3.7379772458445*^9, 3.737977269906953*^9}, {3.737978221291123*^9, 
  3.7379782284956617`*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"pres", "[", 
  RowBox[{"0.5", ",", "0.15", ",", "10"}], "]"}]], "Input",
 CellChangeTimes->{{3.73797690408913*^9, 3.737976942531392*^9}}],

Cell[BoxData[
 RowBox[{"78.01665966854476`", "\[VeryThinSpace]", "+", 
  RowBox[{"9.655442366599312`*^-15", " ", "\[ImaginaryI]"}]}]], "Output",
 CellChangeTimes->{{3.737976910200946*^9, 3.737976943218762*^9}, {
   3.7379772585942593`*^9, 3.737977272973734*^9}, 3.737978224936493*^9, 
   3.737979447341997*^9}]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{"f", "[", "p_", "]"}], ":=", 
  RowBox[{
   RowBox[{"Sign", "[", "p", "]"}], "*", "p", "*", 
   RowBox[{
    RowBox[{
     RowBox[{"Exp", "[", 
      RowBox[{
       RowBox[{"-", "I"}], "*", 
       RowBox[{"Sign", "[", "p", "]"}], "*", "p", "*", "r"}], "]"}], "/", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{"p", "*", "p"}], "+", "\[CapitalPi]"}], ")"}]}], "/", 
    RowBox[{"(", 
     RowBox[{
      RowBox[{"p", "*", "p"}], "+", 
      RowBox[{"Conjugate", "[", "\[CapitalPi]", "]"}]}], ")"}]}]}]}]], "Input",\

 CellChangeTimes->{
  3.7379810291466637`*^9, {3.737983181712184*^9, 3.737983456797771*^9}, 
   3.737983525984338*^9, {3.737983804797041*^9, 3.73798380717274*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Assuming", "[", 
  RowBox[{
   RowBox[{"r", "\[Element]", "Reals"}], ",", 
   RowBox[{"Integrate", "[", 
    RowBox[{
     RowBox[{"f", "[", "p", "]"}], ",", 
     RowBox[{"{", 
      RowBox[{"p", ",", 
       RowBox[{"-", "Infinity"}], ",", 
       RowBox[{"+", "Infinity"}]}], "}"}]}], "]"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.737983462406884*^9, 3.7379835144793043`*^9}, {
  3.73798395175904*^9, 3.737983994824006*^9}, {3.7379840481207733`*^9, 
  3.737984053640777*^9}}],

Cell[BoxData[
 TagBox[GridBox[{
    {"\[Piecewise]", GridBox[{
       {
        RowBox[{"-", 
         FractionBox[
          RowBox[{
           SqrtBox["\[Pi]"], " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"MeijerG", "[", 
              RowBox[{
               RowBox[{"{", 
                RowBox[{
                 RowBox[{"{", "0", "}"}], ",", 
                 RowBox[{"{", "}"}]}], "}"}], ",", 
               RowBox[{"{", 
                RowBox[{
                 RowBox[{"{", 
                  RowBox[{"0", ",", "0"}], "}"}], ",", 
                 RowBox[{"{", 
                  FractionBox["1", "2"], "}"}]}], "}"}], ",", 
               FractionBox[
                RowBox[{
                 SuperscriptBox["r", "2"], " ", "\[CapitalPi]"}], "4"]}], 
              "]"}], "-", 
             RowBox[{"MeijerG", "[", 
              RowBox[{
               RowBox[{"{", 
                RowBox[{
                 RowBox[{"{", "0", "}"}], ",", 
                 RowBox[{"{", "}"}]}], "}"}], ",", 
               RowBox[{"{", 
                RowBox[{
                 RowBox[{"{", 
                  RowBox[{"0", ",", "0"}], "}"}], ",", 
                 RowBox[{"{", 
                  FractionBox["1", "2"], "}"}]}], "}"}], ",", 
               RowBox[{
                FractionBox["1", "4"], " ", 
                SuperscriptBox["r", "2"], " ", 
                RowBox[{"Conjugate", "[", "\[CapitalPi]", "]"}]}]}], "]"}]}], 
            ")"}]}], 
          RowBox[{"\[CapitalPi]", "-", 
           RowBox[{"Conjugate", "[", "\[CapitalPi]", "]"}]}]]}], 
        RowBox[{
         RowBox[{"(", 
          RowBox[{
           RowBox[{"r", "\[Equal]", "0"}], "&&", 
           RowBox[{
            RowBox[{"Re", "[", "\[CapitalPi]", "]"}], "\[GreaterEqual]", 
            "0"}], "&&", 
           RowBox[{
            RowBox[{"Re", "[", 
             SqrtBox["\[CapitalPi]"], "]"}], ">", "0"}], "&&", 
           RowBox[{
            RowBox[{"Re", "[", 
             SqrtBox[
              RowBox[{"Conjugate", "[", "\[CapitalPi]", "]"}]], "]"}], ">", 
            "0"}]}], ")"}], "||", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{"r", "\[Equal]", "0"}], "&&", 
           RowBox[{
            RowBox[{"Im", "[", "\[CapitalPi]", "]"}], ">", "0"}]}], ")"}], "||", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{"r", "\[Equal]", "0"}], "&&", 
           RowBox[{
            RowBox[{"Im", "[", "\[CapitalPi]", "]"}], "<", "0"}]}], ")"}]}]},
       {
        RowBox[{
         FractionBox["1", 
          RowBox[{"\[CapitalPi]", "-", 
           RowBox[{"Conjugate", "[", "\[CapitalPi]", "]"}]}]], 
         RowBox[{
          SqrtBox["\[Pi]"], " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{
             RowBox[{"-", "\[ImaginaryI]"}], " ", 
             SuperscriptBox["\[ExponentialE]", 
              RowBox[{"r", " ", 
               SqrtBox["\[CapitalPi]"]}]], " ", 
             SqrtBox["\[Pi]"]}], "+", 
            RowBox[{"\[ImaginaryI]", " ", 
             SuperscriptBox["\[ExponentialE]", 
              RowBox[{"r", " ", 
               SqrtBox[
                RowBox[{"Conjugate", "[", "\[CapitalPi]", "]"}]]}]], " ", 
             SqrtBox["\[Pi]"]}], "-", 
            RowBox[{"MeijerG", "[", 
             RowBox[{
              RowBox[{"{", 
               RowBox[{
                RowBox[{"{", "0", "}"}], ",", 
                RowBox[{"{", "}"}]}], "}"}], ",", 
              RowBox[{"{", 
               RowBox[{
                RowBox[{"{", 
                 RowBox[{"0", ",", "0"}], "}"}], ",", 
                RowBox[{"{", 
                 FractionBox["1", "2"], "}"}]}], "}"}], ",", 
              FractionBox[
               RowBox[{
                SuperscriptBox["r", "2"], " ", "\[CapitalPi]"}], "4"]}], 
             "]"}], "+", 
            RowBox[{"MeijerG", "[", 
             RowBox[{
              RowBox[{"{", 
               RowBox[{
                RowBox[{"{", "0", "}"}], ",", 
                RowBox[{"{", "}"}]}], "}"}], ",", 
              RowBox[{"{", 
               RowBox[{
                RowBox[{"{", 
                 RowBox[{"0", ",", "0"}], "}"}], ",", 
                RowBox[{"{", 
                 FractionBox["1", "2"], "}"}]}], "}"}], ",", 
              RowBox[{
               FractionBox["1", "4"], " ", 
               SuperscriptBox["r", "2"], " ", 
               RowBox[{"Conjugate", "[", "\[CapitalPi]", "]"}]}]}], "]"}]}], 
           ")"}]}]}], 
        RowBox[{
         RowBox[{"(", 
          RowBox[{
           RowBox[{"r", "<", "0"}], "&&", 
           RowBox[{
            RowBox[{"Re", "[", "\[CapitalPi]", "]"}], "\[GreaterEqual]", 
            "0"}], "&&", 
           RowBox[{
            RowBox[{"Re", "[", 
             SqrtBox["\[CapitalPi]"], "]"}], ">", "0"}], "&&", 
           RowBox[{
            RowBox[{"Re", "[", 
             SqrtBox[
              RowBox[{"Conjugate", "[", "\[CapitalPi]", "]"}]], "]"}], ">", 
            "0"}]}], ")"}], "||", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{
            RowBox[{"Im", "[", "\[CapitalPi]", "]"}], ">", "0"}], "&&", 
           RowBox[{"r", "<", "0"}]}], ")"}], "||", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{
            RowBox[{"Im", "[", "\[CapitalPi]", "]"}], "<", "0"}], "&&", 
           RowBox[{"r", "<", "0"}]}], ")"}]}]},
       {
        RowBox[{"-", 
         RowBox[{
          FractionBox["1", 
           RowBox[{"\[CapitalPi]", "-", 
            RowBox[{"Conjugate", "[", "\[CapitalPi]", "]"}]}]], 
          RowBox[{
           SuperscriptBox["\[ExponentialE]", 
            RowBox[{
             RowBox[{
              RowBox[{"-", "r"}], " ", 
              SqrtBox["\[CapitalPi]"]}], "-", 
             RowBox[{"r", " ", 
              SqrtBox[
               RowBox[{"Conjugate", "[", "\[CapitalPi]", "]"}]]}]}]], " ", 
           SqrtBox["\[Pi]"], " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"\[ImaginaryI]", " ", 
              SuperscriptBox["\[ExponentialE]", 
               RowBox[{"r", " ", 
                SqrtBox["\[CapitalPi]"]}]], " ", 
              SqrtBox["\[Pi]"]}], "-", 
             RowBox[{"\[ImaginaryI]", " ", 
              SuperscriptBox["\[ExponentialE]", 
               RowBox[{"r", " ", 
                SqrtBox[
                 RowBox[{"Conjugate", "[", "\[CapitalPi]", "]"}]]}]], " ", 
              SqrtBox["\[Pi]"]}], "+", 
             RowBox[{
              SuperscriptBox["\[ExponentialE]", 
               RowBox[{
                RowBox[{"r", " ", 
                 SqrtBox["\[CapitalPi]"]}], "+", 
                RowBox[{"r", " ", 
                 SqrtBox[
                  RowBox[{"Conjugate", "[", "\[CapitalPi]", "]"}]]}]}]], " ", 
              
              RowBox[{"MeijerG", "[", 
               RowBox[{
                RowBox[{"{", 
                 RowBox[{
                  RowBox[{"{", "0", "}"}], ",", 
                  RowBox[{"{", "}"}]}], "}"}], ",", 
                RowBox[{"{", 
                 RowBox[{
                  RowBox[{"{", 
                   RowBox[{"0", ",", "0"}], "}"}], ",", 
                  RowBox[{"{", 
                   FractionBox["1", "2"], "}"}]}], "}"}], ",", 
                FractionBox[
                 RowBox[{
                  SuperscriptBox["r", "2"], " ", "\[CapitalPi]"}], "4"]}], 
               "]"}]}], "-", 
             RowBox[{
              SuperscriptBox["\[ExponentialE]", 
               RowBox[{
                RowBox[{"r", " ", 
                 SqrtBox["\[CapitalPi]"]}], "+", 
                RowBox[{"r", " ", 
                 SqrtBox[
                  RowBox[{"Conjugate", "[", "\[CapitalPi]", "]"}]]}]}]], " ", 
              
              RowBox[{"MeijerG", "[", 
               RowBox[{
                RowBox[{"{", 
                 RowBox[{
                  RowBox[{"{", "0", "}"}], ",", 
                  RowBox[{"{", "}"}]}], "}"}], ",", 
                RowBox[{"{", 
                 RowBox[{
                  RowBox[{"{", 
                   RowBox[{"0", ",", "0"}], "}"}], ",", 
                  RowBox[{"{", 
                   FractionBox["1", "2"], "}"}]}], "}"}], ",", 
                RowBox[{
                 FractionBox["1", "4"], " ", 
                 SuperscriptBox["r", "2"], " ", 
                 RowBox[{"Conjugate", "[", "\[CapitalPi]", "]"}]}]}], 
               "]"}]}]}], ")"}]}]}]}], 
        RowBox[{
         RowBox[{"(", 
          RowBox[{
           RowBox[{
            RowBox[{"Re", "[", "\[CapitalPi]", "]"}], "\[GreaterEqual]", 
            "0"}], "&&", 
           RowBox[{"r", ">", "0"}], "&&", 
           RowBox[{
            RowBox[{"Re", "[", 
             SqrtBox["\[CapitalPi]"], "]"}], ">", "0"}], "&&", 
           RowBox[{
            RowBox[{"Re", "[", 
             SqrtBox[
              RowBox[{"Conjugate", "[", "\[CapitalPi]", "]"}]], "]"}], ">", 
            "0"}]}], ")"}], "||", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{
            RowBox[{"Im", "[", "\[CapitalPi]", "]"}], ">", "0"}], "&&", 
           RowBox[{"r", ">", "0"}]}], ")"}], "||", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{
            RowBox[{"Im", "[", "\[CapitalPi]", "]"}], "<", "0"}], "&&", 
           RowBox[{"r", ">", "0"}]}], ")"}]}]},
       {
        FractionBox[
         RowBox[{
          SqrtBox["\[Pi]"], " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"\[ImaginaryI]", " ", 
             SuperscriptBox["\[ExponentialE]", 
              RowBox[{"\[ImaginaryI]", " ", "r", " ", 
               SqrtBox[
                RowBox[{"-", "\[CapitalPi]"}]]}]], " ", 
             SqrtBox["\[Pi]"], " ", 
             SuperscriptBox["r", "3"], " ", 
             SuperscriptBox["\[CapitalPi]", 
              RowBox[{"3", "/", "2"}]]}], "+", 
            RowBox[{"8", " ", 
             RowBox[{"MeijerG", "[", 
              RowBox[{
               RowBox[{"{", 
                RowBox[{
                 RowBox[{"{", "1", "}"}], ",", 
                 RowBox[{"{", "}"}]}], "}"}], ",", 
               RowBox[{"{", 
                RowBox[{
                 RowBox[{"{", 
                  RowBox[{"1", ",", "2"}], "}"}], ",", 
                 RowBox[{"{", 
                  FractionBox["3", "2"], "}"}]}], "}"}], ",", 
               FractionBox[
                RowBox[{
                 SuperscriptBox["r", "2"], " ", "\[CapitalPi]"}], "4"]}], 
              "]"}]}]}], ")"}]}], 
         RowBox[{"2", " ", 
          SuperscriptBox["r", "2"], " ", 
          SuperscriptBox["\[CapitalPi]", "2"]}]], 
        RowBox[{
         RowBox[{"(", 
          RowBox[{
           RowBox[{"r", "\[GreaterEqual]", "0"}], "&&", 
           RowBox[{
            RowBox[{"Im", "[", "\[CapitalPi]", "]"}], "\[Equal]", "0"}], "&&", 
           RowBox[{"\[CapitalPi]", "<", "0"}], "&&", 
           RowBox[{
            RowBox[{"Re", "[", "\[CapitalPi]", "]"}], "<", "0"}]}], ")"}], "||", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{"r", "\[GreaterEqual]", "0"}], "&&", 
           RowBox[{
            RowBox[{"Im", "[", "\[CapitalPi]", "]"}], "\[Equal]", "0"}], "&&", 
           RowBox[{"\[CapitalPi]", "<", "0"}], "&&", 
           RowBox[{
            RowBox[{"Re", "[", 
             SqrtBox["\[CapitalPi]"], "]"}], "\[LessEqual]", "0"}]}], ")"}], "||", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{"r", "\[GreaterEqual]", "0"}], "&&", 
           RowBox[{
            RowBox[{"Im", "[", "\[CapitalPi]", "]"}], "\[Equal]", "0"}], "&&", 
           RowBox[{"\[CapitalPi]", "<", "0"}], "&&", 
           RowBox[{
            RowBox[{"Re", "[", 
             SqrtBox[
              RowBox[{"Conjugate", "[", "\[CapitalPi]", "]"}]], "]"}], 
            "\[LessEqual]", "0"}]}], ")"}]}]},
       {
        FractionBox[
         RowBox[{
          SuperscriptBox["\[ExponentialE]", 
           RowBox[{
            RowBox[{"-", "\[ImaginaryI]"}], " ", "r", " ", 
            SqrtBox[
             RowBox[{"-", "\[CapitalPi]"}]]}]], " ", 
          SqrtBox["\[Pi]"], " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"\[ImaginaryI]", " ", 
             SqrtBox["\[Pi]"], " ", 
             SuperscriptBox["r", "3"], " ", 
             SuperscriptBox["\[CapitalPi]", 
              RowBox[{"3", "/", "2"}]]}], "+", 
            RowBox[{"8", " ", 
             SuperscriptBox["\[ExponentialE]", 
              RowBox[{"\[ImaginaryI]", " ", "r", " ", 
               SqrtBox[
                RowBox[{"-", "\[CapitalPi]"}]]}]], " ", 
             RowBox[{"MeijerG", "[", 
              RowBox[{
               RowBox[{"{", 
                RowBox[{
                 RowBox[{"{", "1", "}"}], ",", 
                 RowBox[{"{", "}"}]}], "}"}], ",", 
               RowBox[{"{", 
                RowBox[{
                 RowBox[{"{", 
                  RowBox[{"1", ",", "2"}], "}"}], ",", 
                 RowBox[{"{", 
                  FractionBox["3", "2"], "}"}]}], "}"}], ",", 
               FractionBox[
                RowBox[{
                 SuperscriptBox["r", "2"], " ", "\[CapitalPi]"}], "4"]}], 
              "]"}]}]}], ")"}]}], 
         RowBox[{"2", " ", 
          SuperscriptBox["r", "2"], " ", 
          SuperscriptBox["\[CapitalPi]", "2"]}]], 
        RowBox[{
         RowBox[{"(", 
          RowBox[{
           RowBox[{
            RowBox[{"Im", "[", "\[CapitalPi]", "]"}], "\[Equal]", "0"}], "&&", 
           RowBox[{"r", "<", "0"}], "&&", 
           RowBox[{"\[CapitalPi]", "<", "0"}], "&&", 
           RowBox[{
            RowBox[{"Re", "[", "\[CapitalPi]", "]"}], "<", "0"}]}], ")"}], "||", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{
            RowBox[{"Im", "[", "\[CapitalPi]", "]"}], "\[Equal]", "0"}], "&&", 
           RowBox[{"r", "<", "0"}], "&&", 
           RowBox[{"\[CapitalPi]", "<", "0"}], "&&", 
           RowBox[{
            RowBox[{"Re", "[", 
             SqrtBox["\[CapitalPi]"], "]"}], "\[LessEqual]", "0"}]}], ")"}], "||", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{
            RowBox[{"Im", "[", "\[CapitalPi]", "]"}], "\[Equal]", "0"}], "&&", 
           RowBox[{"r", "<", "0"}], "&&", 
           RowBox[{"\[CapitalPi]", "<", "0"}], "&&", 
           RowBox[{
            RowBox[{"Re", "[", 
             SqrtBox[
              RowBox[{"Conjugate", "[", "\[CapitalPi]", "]"}]], "]"}], 
            "\[LessEqual]", "0"}]}], ")"}]}]},
       {
        RowBox[{"Integrate", "[", 
         RowBox[{
          FractionBox[
           RowBox[{
            SuperscriptBox["\[ExponentialE]", 
             RowBox[{
              RowBox[{"-", "\[ImaginaryI]"}], " ", "p", " ", "r", " ", 
              RowBox[{"Sign", "[", "p", "]"}]}]], " ", "p", " ", 
            RowBox[{"Sign", "[", "p", "]"}]}], 
           RowBox[{
            RowBox[{"(", 
             RowBox[{
              SuperscriptBox["p", "2"], "+", "\[CapitalPi]"}], ")"}], " ", 
            RowBox[{"(", 
             RowBox[{
              SuperscriptBox["p", "2"], "+", 
              RowBox[{"Conjugate", "[", "\[CapitalPi]", "]"}]}], ")"}]}]], 
          ",", 
          RowBox[{"{", 
           RowBox[{"p", ",", 
            RowBox[{"-", "\[Infinity]"}], ",", "\[Infinity]"}], "}"}], ",", 
          RowBox[{"Assumptions", "\[Rule]", 
           RowBox[{
            RowBox[{"(", 
             RowBox[{
              RowBox[{"r", "\[Element]", "Reals"}], "&&", 
              RowBox[{
               RowBox[{"Im", "[", "\[CapitalPi]", "]"}], "\[Equal]", "0"}], "&&", 
              RowBox[{"\[CapitalPi]", "\[GreaterEqual]", "0"}], "&&", 
              RowBox[{
               RowBox[{"Re", "[", "\[CapitalPi]", "]"}], "<", "0"}]}], ")"}], 
            "||", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{"r", "\[Element]", "Reals"}], "&&", 
              RowBox[{
               RowBox[{"Im", "[", "\[CapitalPi]", "]"}], "\[Equal]", "0"}], "&&", 
              RowBox[{"\[CapitalPi]", "\[GreaterEqual]", "0"}], "&&", 
              RowBox[{
               RowBox[{"Re", "[", 
                SqrtBox["\[CapitalPi]"], "]"}], "\[LessEqual]", "0"}]}], 
             ")"}], "||", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{"r", "\[Element]", "Reals"}], "&&", 
              RowBox[{
               RowBox[{"Im", "[", "\[CapitalPi]", "]"}], "\[Equal]", "0"}], "&&", 
              RowBox[{"\[CapitalPi]", "\[GreaterEqual]", "0"}], "&&", 
              RowBox[{
               RowBox[{"Re", "[", 
                SqrtBox[
                 RowBox[{"Conjugate", "[", "\[CapitalPi]", "]"}]], "]"}], 
               "\[LessEqual]", "0"}]}], ")"}]}]}]}], "]"}], 
        TagBox["True",
         "PiecewiseDefault",
         AutoDelete->True]}
      },
      AllowedDimensions->{2, Automatic},
      Editable->True,
      GridBoxAlignment->{
       "Columns" -> {{Left}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
        "RowsIndexed" -> {}},
      GridBoxItemSize->{
       "Columns" -> {{Automatic}}, "ColumnsIndexed" -> {}, "Rows" -> {{1.}}, 
        "RowsIndexed" -> {}},
      GridBoxSpacings->{"Columns" -> {
          Offset[0.27999999999999997`], {
           Offset[0.84]}, 
          Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
          Offset[0.2], {
           Offset[0.4]}, 
          Offset[0.2]}, "RowsIndexed" -> {}},
      Selectable->True]}
   },
   GridBoxAlignment->{
    "Columns" -> {{Left}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
     "RowsIndexed" -> {}},
   GridBoxItemSize->{
    "Columns" -> {{Automatic}}, "ColumnsIndexed" -> {}, "Rows" -> {{1.}}, 
     "RowsIndexed" -> {}},
   GridBoxSpacings->{"Columns" -> {
       Offset[0.27999999999999997`], {
        Offset[0.35]}, 
       Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
       Offset[0.2], {
        Offset[0.4]}, 
       Offset[0.2]}, "RowsIndexed" -> {}}],
  "Piecewise",
  DeleteWithContents->True,
  Editable->False,
  SelectWithContents->True,
  Selectable->False]], "Output",
 CellChangeTimes->{3.737983529937517*^9, 3.737983699730715*^9, 
  3.737983944019361*^9, 3.7379841315617657`*^9}]
}, Open  ]],

Cell[BoxData[""], "Input",
 CellChangeTimes->{3.737983305962541*^9}],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"g", "[", "p_", "]"}], ":=", 
  RowBox[{"p", "*", 
   RowBox[{
    RowBox[{
     RowBox[{"Exp", "[", 
      RowBox[{
       RowBox[{"-", "I"}], "*", "p", "*", "r"}], "]"}], "/", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{"p", "*", "p"}], "+", "\[CapitalPi]"}], ")"}]}], "/", 
    RowBox[{"(", 
     RowBox[{
      RowBox[{"p", "*", "p"}], "+", 
      RowBox[{"Conjugate", "[", "\[CapitalPi]", "]"}]}], 
     ")"}]}]}]}], "\[IndentingNewLine]", 
 RowBox[{"Assuming", "[", 
  RowBox[{
   RowBox[{"r", "\[Element]", "Reals"}], ",", 
   RowBox[{"Integrate", 
    StyleBox["[", "Code"], 
    StyleBox[
     RowBox[{
      RowBox[{"g", "[", "p", "]"}], ",", 
      RowBox[{"{", 
       RowBox[{"p", ",", 
        RowBox[{"-", "Infinity"}], ",", 
        RowBox[{"+", "Infinity"}]}], "}"}]}], "Code"], 
    StyleBox["]", "Code"]}]}], 
  StyleBox["]", "Code"]}]}], "Input",
 CellChangeTimes->{{3.73798388512611*^9, 3.737983905118585*^9}, {
  3.737984061083439*^9, 3.737984062560646*^9}}],

Cell[BoxData[
 RowBox[{"ConditionalExpression", "[", 
  RowBox[{
   FractionBox[
    RowBox[{"\[ImaginaryI]", " ", 
     RowBox[{"(", 
      RowBox[{
       SuperscriptBox["\[ExponentialE]", 
        RowBox[{
         RowBox[{"-", 
          SqrtBox["\[CapitalPi]"]}], " ", 
         RowBox[{"Abs", "[", "r", "]"}]}]], "-", 
       SuperscriptBox["\[ExponentialE]", 
        RowBox[{
         RowBox[{"-", 
          RowBox[{"Abs", "[", "r", "]"}]}], " ", 
         SqrtBox[
          RowBox[{"Conjugate", "[", "\[CapitalPi]", "]"}]]}]]}], ")"}], " ", 
     "\[Pi]", " ", 
     RowBox[{"Sign", "[", "r", "]"}]}], 
    RowBox[{"\[CapitalPi]", "-", 
     RowBox[{"Conjugate", "[", "\[CapitalPi]", "]"}]}]], ",", 
   RowBox[{
    RowBox[{
     RowBox[{"Im", "[", "\[CapitalPi]", "]"}], "\[NotEqual]", "0"}], "||", 
    RowBox[{"(", 
     RowBox[{
      RowBox[{
       RowBox[{"Re", "[", "\[CapitalPi]", "]"}], "\[GreaterEqual]", "0"}], "&&", 
      RowBox[{
       RowBox[{"Re", "[", 
        SqrtBox["\[CapitalPi]"], "]"}], ">", "0"}], "&&", 
      RowBox[{
       RowBox[{"Re", "[", 
        SqrtBox[
         RowBox[{"Conjugate", "[", "\[CapitalPi]", "]"}]], "]"}], ">", 
       "0"}]}], ")"}]}]}], "]"}]], "Output",
 CellChangeTimes->{3.7379841657537947`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"-", 
    FractionBox["1", 
     RowBox[{"\[CapitalPi]", "-", 
      RowBox[{"Conjugate", "[", "\[CapitalPi]", "]"}]}]]}], 
   SuperscriptBox["\[ExponentialE]", 
    RowBox[{
     RowBox[{
      RowBox[{"-", "r"}], " ", 
      SqrtBox["\[CapitalPi]"]}], "-", 
     RowBox[{"r", " ", 
      SqrtBox[
       RowBox[{"Conjugate", "[", "\[CapitalPi]", "]"}]]}]}]], " ", 
   SqrtBox["\[Pi]"], " ", 
   RowBox[{"(", 
    RowBox[{
     RowBox[{"\[ImaginaryI]", " ", 
      SuperscriptBox["\[ExponentialE]", 
       RowBox[{"r", " ", 
        SqrtBox["\[CapitalPi]"]}]], " ", 
      SqrtBox["\[Pi]"]}], "-", 
     RowBox[{"\[ImaginaryI]", " ", 
      SuperscriptBox["\[ExponentialE]", 
       RowBox[{"r", " ", 
        SqrtBox[
         RowBox[{"Conjugate", "[", "\[CapitalPi]", "]"}]]}]], " ", 
      SqrtBox["\[Pi]"]}], "+", 
     RowBox[{
      SuperscriptBox["\[ExponentialE]", 
       RowBox[{
        RowBox[{"r", " ", 
         SqrtBox["\[CapitalPi]"]}], "+", 
        RowBox[{"r", " ", 
         SqrtBox[
          RowBox[{"Conjugate", "[", "\[CapitalPi]", "]"}]]}]}]], " ", 
      RowBox[{"MeijerG", "[", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{
          RowBox[{"{", "0", "}"}], ",", 
          RowBox[{"{", "}"}]}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{"0", ",", "0"}], "}"}], ",", 
          RowBox[{"{", 
           FractionBox["1", "2"], "}"}]}], "}"}], ",", 
        FractionBox[
         RowBox[{
          SuperscriptBox["r", "2"], " ", "\[CapitalPi]"}], "4"]}], "]"}]}], 
     "-", 
     RowBox[{
      SuperscriptBox["\[ExponentialE]", 
       RowBox[{
        RowBox[{"r", " ", 
         SqrtBox["\[CapitalPi]"]}], "+", 
        RowBox[{"r", " ", 
         SqrtBox[
          RowBox[{"Conjugate", "[", "\[CapitalPi]", "]"}]]}]}]], " ", 
      RowBox[{"MeijerG", "[", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{
          RowBox[{"{", "0", "}"}], ",", 
          RowBox[{"{", "}"}]}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{"0", ",", "0"}], "}"}], ",", 
          RowBox[{"{", 
           FractionBox["1", "2"], "}"}]}], "}"}], ",", 
        RowBox[{
         FractionBox["1", "4"], " ", 
         SuperscriptBox["r", "2"], " ", 
         RowBox[{"Conjugate", "[", "\[CapitalPi]", "]"}]}]}], "]"}]}]}], 
    ")"}]}], "//", "FullSimplify", " "}]], "Input",
 CellChangeTimes->{{3.7379848022444277`*^9, 3.737984813080307*^9}}],

Cell[BoxData["$Aborted"], "Output",
 CellChangeTimes->{3.737985230279896*^9}]
}, Open  ]]
}, Closed]],

Cell[CellGroupData[{

Cell["Finite velocity potential ", "Section",
 CellChangeTimes->{{3.73805927389345*^9, 3.738059285120811*^9}}],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"\[Alpha]cont", "=", 
    RowBox[{"{", 
     RowBox[{"0.5137193759431391`", ",", "0.0024666827878353577`"}], "}"}]}], 
   ";"}], " "}], "\n", 
 RowBox[{
  RowBox[{"\[Sigma]cont", "=", 
   RowBox[{"{", 
    RowBox[{"0.16955497884544793`", ",", "0.0008581023195660334`"}], "}"}]}], 
  ";"}], "\n", 
 RowBox[{
  RowBox[{"ccont", "=", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"-", "0.15956635071361625`"}], ",", "0.0024752900407607015`"}], 
    "}"}]}], ";"}]}], "Input"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"\[CapitalPi]par", "[", 
    RowBox[{"\[Theta]_", ",", "v_", ",", "mD_"}], "]"}], ":=", 
   RowBox[{
    FractionBox[
     SuperscriptBox["mD", "2"], "2"], 
    RowBox[{"(", 
     RowBox[{
      FractionBox[
       RowBox[{"2", "-", 
        RowBox[{"2", 
         SuperscriptBox["v", "2"]}], "-", 
        RowBox[{
         SuperscriptBox["v", "4"], 
         SuperscriptBox[
          RowBox[{"Cos", "[", "\[Theta]", "]"}], "2"], 
         SuperscriptBox[
          RowBox[{"Sin", "[", "\[Theta]", "]"}], "2"]}]}], 
       SuperscriptBox[
        RowBox[{"(", 
         RowBox[{"1", "-", 
          RowBox[{
           SuperscriptBox["v", "2"], 
           SuperscriptBox[
            RowBox[{"Sin", "[", "\[Theta]", "]"}], "2"]}]}], ")"}], "2"]], 
      "-", 
      RowBox[{
       FractionBox[
        RowBox[{
         RowBox[{"(", 
          RowBox[{"2", "+", 
           RowBox[{
            SuperscriptBox["v", "2"], 
            SuperscriptBox[
             RowBox[{"Sin", "[", "\[Theta]", "]"}], "2"]}]}], ")"}], 
         RowBox[{"(", 
          RowBox[{"1", "-", 
           SuperscriptBox["v", "2"]}], ")"}], "v", " ", 
         RowBox[{"Cos", "[", "\[Theta]", "]"}]}], 
        RowBox[{"2", 
         SuperscriptBox[
          RowBox[{"(", 
           RowBox[{"1", "-", 
            RowBox[{
             SuperscriptBox["v", "2"], 
             SuperscriptBox[
              RowBox[{"Sin", "[", "\[Theta]", "]"}], "2"]}]}], ")"}], 
          RowBox[{"5", "/", "2"}]]}]], 
       RowBox[{"Log", "[", 
        FractionBox[
         RowBox[{
          RowBox[{"v", " ", 
           RowBox[{"Cos", "[", "\[Theta]", "]"}]}], "+", 
          SqrtBox[
           RowBox[{"1", "-", 
            RowBox[{
             SuperscriptBox["v", "2"], 
             SuperscriptBox[
              RowBox[{"Sin", "[", "\[Theta]", "]"}], "2"]}]}]]}], 
         RowBox[{
          RowBox[{"v", " ", 
           RowBox[{"Cos", "[", "\[Theta]", "]"}]}], "-", 
          SqrtBox[
           RowBox[{"1", "-", 
            RowBox[{
             SuperscriptBox["v", "2"], 
             SuperscriptBox[
              RowBox[{"Sin", "[", "\[Theta]", "]"}], "2"]}]}]]}]], "]"}]}]}], 
     ")"}]}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"\[CapitalPi]per", "[", 
    RowBox[{"\[Theta]_", ",", "\[Beta]_", ",", "v_", ",", "mD_"}], "]"}], ":=", 
   RowBox[{
    FractionBox[
     SuperscriptBox["mD", "2"], "2"], 
    RowBox[{"(", 
     RowBox[{
      FractionBox[
       RowBox[{"2", "-", 
        RowBox[{"2", 
         SuperscriptBox["v", "2"]}], "-", 
        RowBox[{
         SuperscriptBox["v", "4"], 
         SuperscriptBox[
          RowBox[{"Cos", "[", "\[Beta]", "]"}], "2"], 
         SuperscriptBox[
          RowBox[{"Sin", "[", "\[Theta]", "]"}], "2"], 
         RowBox[{"(", 
          RowBox[{"1", "-", 
           RowBox[{
            SuperscriptBox[
             RowBox[{"Cos", "[", "\[Beta]", "]"}], "2"], 
            SuperscriptBox[
             RowBox[{"Sin", "[", "\[Theta]", "]"}], "2"]}]}], ")"}]}]}], 
       SuperscriptBox[
        RowBox[{"(", 
         RowBox[{"1", "-", 
          SuperscriptBox["v", "2"], "+", 
          RowBox[{
           SuperscriptBox["v", "2"], 
           SuperscriptBox[
            RowBox[{"Cos", "[", "\[Beta]", "]"}], "2"], 
           SuperscriptBox[
            RowBox[{"Sin", "[", "\[Theta]", "]"}], "2"]}]}], ")"}], "2"]], 
      "-", 
      RowBox[{
       FractionBox[
        RowBox[{
         RowBox[{"(", 
          RowBox[{"2", "+", 
           SuperscriptBox["v", "2"], "-", 
           RowBox[{
            SuperscriptBox["v", "2"], 
            SuperscriptBox[
             RowBox[{"Cos", "[", "\[Beta]", "]"}], "2"], 
            SuperscriptBox[
             RowBox[{"Sin", "[", "\[Theta]", "]"}], "2"]}]}], ")"}], 
         RowBox[{"(", 
          RowBox[{"1", "-", 
           SuperscriptBox["v", "2"]}], ")"}], "v", " ", 
         RowBox[{"Cos", "[", "\[Beta]", "]"}], 
         RowBox[{"Sin", "[", "\[Theta]", "]"}]}], 
        RowBox[{"2", 
         SuperscriptBox[
          RowBox[{"(", 
           RowBox[{"1", "-", 
            SuperscriptBox["v", "2"], "+", 
            RowBox[{
             SuperscriptBox["v", "2"], 
             SuperscriptBox[
              RowBox[{"Cos", "[", "\[Beta]", "]"}], "2"], 
             SuperscriptBox[
              RowBox[{"Sin", "[", "\[Theta]", "]"}], "2"]}]}], ")"}], "2"]}]], 
       RowBox[{"Log", "[", 
        FractionBox[
         RowBox[{
          RowBox[{"v", " ", 
           RowBox[{"Cos", "[", "\[Beta]", "]"}], 
           RowBox[{"Sin", "[", "\[Theta]", "]"}]}], "+", 
          SqrtBox[
           RowBox[{"1", "-", 
            SuperscriptBox["v", "2"], "+", 
            RowBox[{
             SuperscriptBox["v", "2"], 
             SuperscriptBox[
              RowBox[{"Cos", "[", "\[Beta]", "]"}], "2"], 
             SuperscriptBox[
              RowBox[{"Sin", "[", "\[Theta]", "]"}], "2"]}]}]]}], 
         RowBox[{
          RowBox[{"v", " ", 
           RowBox[{"Cos", "[", "\[Beta]", "]"}], 
           RowBox[{"Sin", "[", "\[Theta]", "]"}]}], "-", 
          SqrtBox[
           RowBox[{"1", "-", 
            SuperscriptBox["v", "2"], "+", 
            RowBox[{
             SuperscriptBox["v", "2"], 
             SuperscriptBox[
              RowBox[{"Cos", "[", "\[Beta]", "]"}], "2"], 
             SuperscriptBox[
              RowBox[{"Sin", "[", "\[Theta]", "]"}], "2"]}]}]]}]], "]"}]}]}], 
     ")"}]}]}], ";"}]}], "Input"],

Cell[BoxData[
 RowBox[{
  RowBox[{"f", "[", 
   RowBox[{"p_", ",", "v_", ",", "r_"}], "]"}], ":=", 
  RowBox[{"Re", "[", 
   RowBox[{"NIntegrate", "[", 
    RowBox[{
     RowBox[{
      RowBox[{"Sin", "[", "\[Theta]", "]"}], 
      RowBox[{"\[CapitalPi]par", "[", 
       RowBox[{"\[Theta]", ",", "v", ",", "1"}], "]"}], 
      RowBox[{"Exp", "[", 
       RowBox[{"\[ImaginaryI]", " ", "p", " ", "r", " ", 
        RowBox[{"Cos", "[", "\[Theta]", "]"}]}], "]"}]}], ",", 
     RowBox[{"{", 
      RowBox[{"\[Theta]", ",", "0", ",", "\[Pi]"}], "}"}], ",", 
     RowBox[{"WorkingPrecision", "\[Rule]", "10"}]}], "]"}], "]"}]}]], "Input",\

 CellChangeTimes->{{3.7385884270544767`*^9, 3.738588680762767*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"DiscretePlot", "[", 
  RowBox[{
   RowBox[{"f", "[", 
    RowBox[{"p", ",", "0.1", ",", "2"}], "]"}], ",", 
   RowBox[{"{", 
    RowBox[{"p", ",", "0", ",", "20", ",", "1"}], "}"}], ",", 
   RowBox[{"Filling", "\[Rule]", "None"}], ",", 
   RowBox[{"PlotRange", "\[Rule]", "All"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.738588683675475*^9, 3.7385887751909637`*^9}, 
   3.738588830871365*^9}],

Cell[BoxData[
 GraphicsBox[{
   {RGBColor[0.368417, 0.506779, 0.709798], PointSize[0.011000000000000001`], 
    AbsoluteThickness[1.6]}, 
   {RGBColor[0.368417, 0.506779, 0.709798], PointSize[0.011000000000000001`], 
    AbsoluteThickness[1.6], {}, PointBox[CompressedData["
1:eJxTTMoPSmViYGAQBWIQDQM3Tz77DwT2EN4H++65V+/U3v8A5TM4ZD+dxKAk
c3U/hMvhkNaz7PaBM4egfAGHvQ5PpWcaXYCqF3EwcpP5s/jYFqi8hEO0zt+d
7xr3QPkyDjylymZqPQeh6hUcnOVl1PvfT4DKKzl0Oe75s0FiB5Sv4lA5UWB7
bs5WqHo1hzPnbzhGXO2G8jUcqhd8Cd5SDbNPy0Gs6qDj3qkrofI6DmetktZu
nz8PytdzON9WM1+LbSNUvYGD+7nsLd6Rs6Dyhg7xPL/VZ2xZDOUbOejyfrih
bLgaqt7YofV++PGktjqovImD8ZOl27mLltoDAAPvZGI=
     "]], {}}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->True,
  AxesOrigin->{0, 0},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  ImageSize->{684., Automatic},
  Method->{
   "MessagesHead" -> DiscretePlot, "AxisPadding" -> Scaled[0.02], 
    "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
    AbsolutePointSize[6], "DefaultPlotStyle" -> {
      Directive[
       RGBColor[0.368417, 0.506779, 0.709798], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.880722, 0.611041, 0.142051], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.560181, 0.691569, 0.194885], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.922526, 0.385626, 0.209179], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.528488, 0.470624, 0.701351], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.772079, 0.431554, 0.102387], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.363898, 0.618501, 0.782349], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[1, 0.75, 0], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.647624, 0.37816, 0.614037], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.571589, 0.586483, 0.], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.915, 0.3325, 0.2125], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.40082222609352647`, 0.5220066643438841, 0.85], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.9728288904374106, 0.621644452187053, 0.07336199581899142], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.736782672705901, 0.358, 0.5030266573755369], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.28026441037696703`, 0.715, 0.4292089322474965], 
       AbsoluteThickness[1.6]]}, "DomainPadding" -> Scaled[0.02], 
    "PointSizeFunction" -> "SmallPointSize", "RangePadding" -> Scaled[0.05]},
  PlotRange->{{0., 20.}, {-0.3298420911410946, 1.999999999633124}},
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.02], 
     Scaled[0.02]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{{3.738588710067479*^9, 3.738588777184935*^9}, 
   3.738588832899067*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"DiscretePlot", "[", 
  RowBox[{
   RowBox[{"f", "[", 
    RowBox[{"p", ",", "0.9", ",", "2"}], "]"}], ",", 
   RowBox[{"{", 
    RowBox[{"p", ",", "0", ",", "20", ",", "1"}], "}"}], ",", 
   RowBox[{"Filling", "\[Rule]", "None"}], ",", 
   RowBox[{"PlotRange", "\[Rule]", "All"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.738588779261829*^9, 3.7385887827670517`*^9}, 
   3.738588836031378*^9}],

Cell[BoxData[
 GraphicsBox[{
   {RGBColor[0.368417, 0.506779, 0.709798], PointSize[0.011000000000000001`], 
    AbsoluteThickness[1.6]}, 
   {RGBColor[0.368417, 0.506779, 0.709798], PointSize[0.011000000000000001`], 
    AbsoluteThickness[1.6], {}, PointBox[CompressedData["
1:eJxTTMoPSmViYGAQBWIQDQMVbKwgygHC+2D/X9D63zYPASifweFJ2ZorGe9h
fA4H1UB+M8c3bFC+gAOzZkzsIsZf9hC+iMOpRey6dUZvoXwJh8yQ5oC5b25B
+TIOd/WP+MhtPg7lKzh8ktzEdnHJfihfyWFiRvTH9YKLoXwVh2mZvVxHE62g
fDWHhPTNH+45zYXyNRzMXdbYhGpnQ/laDp6v52R7C03YD+HrOLw/Jrr/iHcf
VF7PYSvPI8/4LQVQvoGDr7LX9fxN/VD1hg6bLy9J87ncBJU3clA7+U6k17Ma
yjd2eOogt9/uajdUvYlDj7iuiJNBiT0AYcVURw==
     "]], {}}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->True,
  AxesOrigin->{0, 0},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  ImageSize->{611., Automatic},
  Method->{
   "MessagesHead" -> DiscretePlot, "AxisPadding" -> Scaled[0.02], 
    "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
    AbsolutePointSize[6], "DefaultPlotStyle" -> {
      Directive[
       RGBColor[0.368417, 0.506779, 0.709798], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.880722, 0.611041, 0.142051], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.560181, 0.691569, 0.194885], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.922526, 0.385626, 0.209179], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.528488, 0.470624, 0.701351], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.772079, 0.431554, 0.102387], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.363898, 0.618501, 0.782349], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[1, 0.75, 0], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.647624, 0.37816, 0.614037], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.571589, 0.586483, 0.], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.915, 0.3325, 0.2125], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.40082222609352647`, 0.5220066643438841, 0.85], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.9728288904374106, 0.621644452187053, 0.07336199581899142], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.736782672705901, 0.358, 0.5030266573755369], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.28026441037696703`, 0.715, 0.4292089322474965], 
       AbsoluteThickness[1.6]]}, "DomainPadding" -> Scaled[0.02], 
    "PointSizeFunction" -> "SmallPointSize", "RangePadding" -> Scaled[0.05]},
  PlotRange->{{0., 20.}, {-0.015694788401769775`, 4.233798335100548}},
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.02], 
     Scaled[0.02]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{3.7385887846445913`*^9, 3.7385888383698807`*^9}]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"ReVcpar", "[", 
    RowBox[{"r_", ",", "mD_", ",", "v_", ",", "\[Alpha]_"}], "]"}], ":=", 
   RowBox[{
    FractionBox[
     RowBox[{"-", "\[Alpha]"}], "r"], "+", 
    RowBox[{"\[Alpha]", " ", 
     RowBox[{"NIntegrate", "[", 
      RowBox[{
       RowBox[{
        RowBox[{"Sin", "[", "\[Theta]", "]"}], 
        SqrtBox[
         RowBox[{"Re", "[", 
          RowBox[{"\[CapitalPi]par", "[", 
           RowBox[{"\[Theta]", ",", "v", ",", "mD"}], "]"}], "]"}]], 
        RowBox[{"Exp", "[", 
         RowBox[{
          RowBox[{"-", 
           SqrtBox[
            RowBox[{"Re", "[", 
             RowBox[{"\[CapitalPi]par", "[", 
              RowBox[{"\[Theta]", ",", "v", ",", "mD"}], "]"}], "]"}]]}], "r",
           " ", 
          RowBox[{"Cos", "[", "\[Theta]", "]"}]}], "]"}]}], ",", 
       RowBox[{"{", 
        RowBox[{"\[Theta]", ",", "0", ",", 
         RowBox[{"\[Pi]", "/", "2"}]}], "}"}]}], "]"}]}]}]}], ";"}]], "Input",\

 CellChangeTimes->{{3.738059514828506*^9, 3.738059571771738*^9}, {
   3.738062128868806*^9, 3.738062203581994*^9}, {3.738064840897593*^9, 
   3.738064849129663*^9}, {3.738065358075638*^9, 3.7380654006681147`*^9}, 
   3.738065471494156*^9, {3.738066761527092*^9, 3.738066776671769*^9}, {
   3.738070862150223*^9, 3.738070863805537*^9}, {3.738317587394936*^9, 
   3.7383175894525146`*^9}, 3.738324317180387*^9, {3.738587327009001*^9, 
   3.738587334845854*^9}, {3.7385878570283833`*^9, 3.7385878574271793`*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"ReVcpar", "[", 
  RowBox[{"5", ",", "0.15", ",", "0.", ",", 
   RowBox[{"\[Alpha]cont", "[", 
    RowBox[{"[", "1", "]"}], "]"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.738587778234276*^9, 3.738587790665369*^9}}],

Cell[BoxData[
 RowBox[{"-", "0.04853277013810517`"}]], "Output",
 CellChangeTimes->{3.738587792442554*^9, 3.738587859837468*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"-", 
   FractionBox[
    RowBox[{"\[Alpha]cont", "[", 
     RowBox[{"[", "1", "]"}], "]"}], "5"]}], 
  RowBox[{"Exp", "[", 
   RowBox[{
    RowBox[{"-", "0.15"}], " ", "5"}], "]"}]}]], "Input",
 CellChangeTimes->{{3.738587794452733*^9, 3.738587819762149*^9}}],

Cell[BoxData[
 RowBox[{"-", "0.0485327701381052`"}]], "Output",
 CellChangeTimes->{{3.738587802612031*^9, 3.738587820671582*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"ReVcpar", "[", 
  RowBox[{"5", ",", "0.15", ",", "0.", ",", 
   RowBox[{"\[Alpha]cont", "[", 
    RowBox[{"[", "1", "]"}], "]"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.738319882020274*^9, 3.7383199019605227`*^9}, {
   3.738320143152441*^9, 3.738320147667836*^9}, 3.738320723828271*^9, {
   3.7383243359901876`*^9, 3.738324347525079*^9}}],

Cell[BoxData[
 RowBox[{"-", "0.05421110505052265`"}]], "Output",
 CellChangeTimes->{
  3.7383200262196007`*^9, 3.738320148238619*^9, 3.738320724644745*^9, {
   3.7383243201025543`*^9, 3.738324348169868*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  FractionBox[
   RowBox[{"\[Alpha]cont", "[", 
    RowBox[{"[", "1", "]"}], "]"}], "5"], "+", 
  RowBox[{"ReVcpar", "[", 
   RowBox[{"5", ",", "0.15", ",", "0.", ",", 
    RowBox[{"\[Alpha]cont", "[", 
     RowBox[{"[", "1", "]"}], "]"}]}], "]"}]}]], "Input",
 CellChangeTimes->{{3.738324363181582*^9, 3.738324368609095*^9}}],

Cell[BoxData["0.04853277013810517`"], "Output",
 CellChangeTimes->{3.7383207288040733`*^9, 3.738324369036474*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  FractionBox[
   RowBox[{"\[Alpha]cont", "[", 
    RowBox[{"[", "1", "]"}], "]"}], "\[Pi]"], 
  RowBox[{"NIntegrate", "[", 
   RowBox[{
    RowBox[{
     RowBox[{"Sin", "[", "x", "]"}], 
     FractionBox[
      RowBox[{
       SuperscriptBox["p", "2"], 
       RowBox[{"Exp", "[", 
        RowBox[{"\[ImaginaryI]", " ", "5", " ", "p", " ", 
         RowBox[{"Cos", "[", "x", "]"}]}], "]"}]}], 
      RowBox[{
       SuperscriptBox["p", "2"], "+", 
       RowBox[{"Re", "[", 
        RowBox[{"\[CapitalPi]par", "[", 
         RowBox[{"x", ",", "0.", ",", "0.15"}], "]"}], "]"}]}]]}], ",", 
    RowBox[{"{", 
     RowBox[{"p", ",", "0", ",", "\[Infinity]"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"x", ",", "0", ",", "\[Pi]"}], "}"}]}], "]"}]}]], "Input",
 CellChangeTimes->{{3.738319860706706*^9, 3.738319887820898*^9}}],

Cell[BoxData[
 TemplateBox[{
  "NIntegrate","ncvb",
   "\"NIntegrate failed to converge to prescribed accuracy after \
\\!\\(\\*RowBox[{\\\"18\\\"}]\\) recursive bisections in \
\\!\\(\\*RowBox[{\\\"p\\\"}]\\) near \\!\\(\\*RowBox[{\\\"{\\\", \
RowBox[{\\\"p\\\", \\\",\\\", \\\"x\\\"}], \\\"}\\\"}]\\) = \\!\\(\\*RowBox[{\
\\\"{\\\", RowBox[{\\\"52427.8`\\\", \\\",\\\", \
\\\"0.7853981633974483`\\\"}], \\\"}\\\"}]\\). NIntegrate obtained \
\\!\\(\\*RowBox[{RowBox[{\\\"0.29679756096277743`\\\", \\\"\[VeryThinSpace]\\\
\"}], \\\"-\\\", RowBox[{\\\"2.547822802468023`*^-9\\\", \\\" \\\", \\\"\
\[ImaginaryI]\\\"}]}]\\) and \
\\!\\(\\*RowBox[{\\\"0.00009934546629391994`\\\"}]\\) for the integral and \
error estimates.\"",2,54,4,31091641450583706778,"Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.73831987131919*^9, 3.738320025980527*^9}],

Cell[BoxData[
 RowBox[{"0.048532917730445`", "\[VeryThinSpace]", "-", 
  RowBox[{"4.1662496842229853`*^-10", " ", "\[ImaginaryI]"}]}]], "Output",
 CellChangeTimes->{3.738319871449682*^9, 3.738320026071438*^9}]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  FractionBox[
   RowBox[{"\[Alpha]cont", "[", 
    RowBox[{"[", "1", "]"}], "]"}], "\[Pi]"], 
  RowBox[{"NIntegrate", "[", 
   RowBox[{
    RowBox[{
     RowBox[{"Sin", "[", "x", "]"}], 
     FractionBox[
      RowBox[{
       SuperscriptBox["p", "2"], 
       RowBox[{"Cos", "[", 
        RowBox[{"5", " ", "p", " ", 
         RowBox[{"Cos", "[", "x", "]"}]}], "]"}]}], 
      RowBox[{
       SuperscriptBox["p", "2"], "+", 
       RowBox[{"Re", "[", 
        RowBox[{"\[CapitalPi]par", "[", 
         RowBox[{"x", ",", "0.", ",", "0.15"}], "]"}], "]"}]}]]}], ",", 
    RowBox[{"{", 
     RowBox[{"p", ",", "0", ",", "\[Infinity]"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"x", ",", "0", ",", "\[Pi]"}], "}"}]}], "]"}]}]], "Input",
 CellChangeTimes->{{3.738382401585245*^9, 3.738382428248218*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Assuming", "[", 
  RowBox[{
   RowBox[{"\[Theta]", "\[Element]", "Reals"}], ",", 
   RowBox[{"Integrate", "[", 
    RowBox[{
     RowBox[{
      RowBox[{"Sin", "[", "x", "]"}], 
      FractionBox[
       RowBox[{
        SuperscriptBox["p", "2"], 
        RowBox[{"Exp", "[", 
         RowBox[{"\[ImaginaryI]", " ", "r", " ", "p", " ", 
          RowBox[{"Cos", "[", "x", "]"}]}], "]"}]}], 
       RowBox[{
        SuperscriptBox["p", "2"], "+", 
        RowBox[{"z", "[", "x", "]"}]}]]}], ",", 
     RowBox[{"{", 
      RowBox[{"p", ",", "0", ",", "\[Infinity]"}], "}"}]}], "]"}]}], 
  "]"}]], "Input",
 CellChangeTimes->{{3.73832594613041*^9, 3.73832599819527*^9}, {
  3.738326562414238*^9, 3.738326573094429*^9}}],

Cell[BoxData[
 RowBox[{"ConditionalExpression", "[", 
  RowBox[{
   RowBox[{
    FractionBox["1", "10"], " ", "\[ImaginaryI]", " ", 
    RowBox[{"Sin", "[", "x", "]"}], " ", 
    RowBox[{"(", 
     RowBox[{
      RowBox[{"2", " ", 
       RowBox[{"Sec", "[", "x", "]"}]}], "+", 
      RowBox[{"5", " ", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"2", " ", 
          RowBox[{"CosIntegral", "[", 
           RowBox[{
            RowBox[{"-", "5"}], " ", "\[ImaginaryI]", " ", 
            RowBox[{"Cos", "[", "x", "]"}], " ", 
            SqrtBox[
             RowBox[{"z", "[", "x", "]"}]]}], "]"}], " ", 
          RowBox[{"Sinh", "[", 
           RowBox[{"5", " ", 
            RowBox[{"Cos", "[", "x", "]"}], " ", 
            SqrtBox[
             RowBox[{"z", "[", "x", "]"}]]}], "]"}]}], "+", 
         RowBox[{"\[ImaginaryI]", " ", 
          RowBox[{"Cosh", "[", 
           RowBox[{"5", " ", 
            RowBox[{"Cos", "[", "x", "]"}], " ", 
            SqrtBox[
             RowBox[{"z", "[", "x", "]"}]]}], "]"}], " ", 
          RowBox[{"(", 
           RowBox[{"\[Pi]", "+", 
            RowBox[{"2", " ", "\[ImaginaryI]", " ", 
             RowBox[{"SinhIntegral", "[", 
              RowBox[{"5", " ", 
               RowBox[{"Cos", "[", "x", "]"}], " ", 
               SqrtBox[
                RowBox[{"z", "[", "x", "]"}]]}], "]"}]}]}], ")"}]}]}], ")"}], 
       " ", 
       SqrtBox[
        RowBox[{"z", "[", "x", "]"}]]}]}], ")"}]}], ",", 
   RowBox[{
    RowBox[{
     RowBox[{"Im", "[", 
      RowBox[{"Cos", "[", "x", "]"}], "]"}], ">", "0"}], "&&", 
    RowBox[{"(", 
     RowBox[{
      RowBox[{
       RowBox[{"Im", "[", 
        RowBox[{"z", "[", "x", "]"}], "]"}], "\[NotEqual]", "0"}], "||", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{
         RowBox[{"Re", "[", 
          SqrtBox[
           RowBox[{"z", "[", "x", "]"}]], "]"}], ">", "0"}], "&&", 
        RowBox[{
         RowBox[{"Re", "[", 
          RowBox[{"z", "[", "x", "]"}], "]"}], "\[GreaterEqual]", "0"}]}], 
       ")"}]}], ")"}]}]}], "]"}]], "Output",
 CellChangeTimes->{3.7383259722077923`*^9, 3.738326010716968*^9, 
  3.738326581798765*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"NIntegrate", "[", 
  RowBox[{
   RowBox[{
    RowBox[{"Sin", "[", "x", "]"}], 
    FractionBox[
     RowBox[{
      SuperscriptBox["p", "2"], 
      RowBox[{"Exp", "[", 
       RowBox[{"\[ImaginaryI]", " ", "5", " ", "p", " ", 
        RowBox[{"Cos", "[", "x", "]"}]}], "]"}]}], 
     RowBox[{
      SuperscriptBox["p", "2"], "+", 
      RowBox[{"Sin", "[", "x", "]"}]}]]}], ",", 
   RowBox[{"{", 
    RowBox[{"p", ",", "0", ",", "\[Infinity]"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"x", ",", "0", ",", "\[Pi]"}], "}"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.7383815169274597`*^9, 3.738381519487418*^9}, {
  3.738382156006248*^9, 3.738382158316739*^9}, {3.738382377649807*^9, 
  3.738382379761528*^9}}],

Cell[BoxData[
 TemplateBox[{
  "NIntegrate","ncvb",
   "\"NIntegrate failed to converge to prescribed accuracy after \
\\!\\(\\*RowBox[{\\\"18\\\"}]\\) recursive bisections in \
\\!\\(\\*RowBox[{\\\"p\\\"}]\\) near \\!\\(\\*RowBox[{\\\"{\\\", \
RowBox[{\\\"p\\\", \\\",\\\", \\\"x\\\"}], \\\"}\\\"}]\\) = \\!\\(\\*RowBox[{\
\\\"{\\\", RowBox[{\\\"52427.8`\\\", \\\",\\\", \
\\\"0.7853981633974483`\\\"}], \\\"}\\\"}]\\). NIntegrate obtained \
\\!\\(\\*RowBox[{RowBox[{\\\"-\\\", \\\"0.02806938382579735`\\\"}], \
\\\"-\\\", RowBox[{\\\"2.500656253961574`*^-9\\\", \\\" \\\", \\\"\
\[ImaginaryI]\\\"}]}]\\) and \
\\!\\(\\*RowBox[{\\\"0.00009700628371328476`\\\"}]\\) for the integral and \
error estimates.\"",2,12,4,21221914987858287720,"Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.7383817247061357`*^9, 3.7383821744053392`*^9, 
  3.738382589154443*^9}],

Cell[BoxData[
 RowBox[{
  RowBox[{"-", "0.02806938382579735`"}], "-", 
  RowBox[{"2.500656253961574`*^-9", " ", "\[ImaginaryI]"}]}]], "Output",
 CellChangeTimes->{3.738381724709729*^9, 3.738382174475425*^9, 
  3.73838258924341*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"NIntegrate", "[", 
  RowBox[{
   RowBox[{
    RowBox[{"Sin", "[", "x", "]"}], 
    FractionBox[
     RowBox[{
      SuperscriptBox["p", "2"], 
      RowBox[{"Cos", "[", 
       RowBox[{"5", " ", "p", " ", 
        RowBox[{"Cos", "[", "x", "]"}]}], "]"}]}], 
     RowBox[{
      SuperscriptBox["p", "2"], "+", 
      RowBox[{"Sin", "[", "x", "]"}]}]]}], ",", 
   RowBox[{"{", 
    RowBox[{"p", ",", "0", ",", "\[Infinity]"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"x", ",", "0", ",", "\[Pi]"}], "}"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.7383826199489613`*^9, 3.738382622385706*^9}}],

Cell[BoxData[
 TemplateBox[{
  "NIntegrate","ncvb",
   "\"NIntegrate failed to converge to prescribed accuracy after \
\\!\\(\\*RowBox[{\\\"18\\\"}]\\) recursive bisections in \
\\!\\(\\*RowBox[{\\\"p\\\"}]\\) near \\!\\(\\*RowBox[{\\\"{\\\", \
RowBox[{\\\"p\\\", \\\",\\\", \\\"x\\\"}], \\\"}\\\"}]\\) = \\!\\(\\*RowBox[{\
\\\"{\\\", RowBox[{\\\"37448.142857142855`\\\", \\\",\\\", \
\\\"0.7853981633974483`\\\"}], \\\"}\\\"}]\\). NIntegrate obtained \
\\!\\(\\*RowBox[{\\\"-\\\", \\\"0.028070006092627314`\\\"}]\\) and \
\\!\\(\\*RowBox[{\\\"0.00008279114494541914`\\\"}]\\) for the integral and \
error estimates.\"",2,19,5,21221914987858287720,"Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.7383828573043222`*^9}],

Cell[BoxData[
 RowBox[{"-", "0.028070006092627314`"}]], "Output",
 CellChangeTimes->{3.738382857307611*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"p1", "=", "10"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{"Plot", "[", 
  RowBox[{
   RowBox[{
    RowBox[{"Sin", "[", "x", "]"}], 
    FractionBox[
     RowBox[{
      SuperscriptBox["p1", "2"], 
      RowBox[{"Cos", "[", 
       RowBox[{"p1", " ", 
        RowBox[{"Cos", "[", "x", "]"}]}], "]"}]}], 
     RowBox[{
      SuperscriptBox["p1", "2"], "+", 
      RowBox[{"Sin", "[", "x", "]"}]}]]}], ",", 
   RowBox[{"{", 
    RowBox[{"x", ",", "0", ",", "\[Pi]"}], "}"}]}], 
  "]"}], "\[IndentingNewLine]", 
 RowBox[{"NIntegrate", "[", 
  RowBox[{
   RowBox[{
    RowBox[{"Sin", "[", "x", "]"}], 
    FractionBox[
     RowBox[{
      SuperscriptBox["p1", "2"], 
      RowBox[{"Cos", "[", 
       RowBox[{"p1", " ", 
        RowBox[{"Cos", "[", "x", "]"}]}], "]"}]}], 
     RowBox[{
      SuperscriptBox["p1", "2"], "+", 
      RowBox[{"Sin", "[", "x", "]"}]}]]}], ",", 
   RowBox[{"{", 
    RowBox[{"x", ",", "0", ",", "\[Pi]"}], "}"}]}], "]"}]}], "Input",
 CellChangeTimes->{{3.738383422244136*^9, 3.738383500426729*^9}, {
  3.738383678755933*^9, 3.738383725563859*^9}}],

Cell[BoxData[
 GraphicsBox[{{{}, {}, 
    TagBox[
     {RGBColor[0.368417, 0.506779, 0.709798], AbsoluteThickness[1.6], Opacity[
      1.], LineBox[CompressedData["
1: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
59GRk1l6K5J8GNdywYf/f9/5P70Y2fo=
       "]]},
     Annotation[#, "Charting`Private`Tag$83022#1"]& ]}, {}, {}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{0, 0},
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  ImagePadding->All,
  ImageSize->{526., Automatic},
  Method->{
   "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
    AbsolutePointSize[6], "ScalingFunctions" -> None, 
    "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
        (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
         Part[#, 1]], 
        (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
         Part[#, 2]]}& ), "CopiedValueFunction" -> ({
        (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
         Part[#, 1]], 
        (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
         Part[#, 2]]}& )}},
  PlotRange->
   NCache[{{0, Pi}, {-0.9409951198834797, 0.9900960870183392}}, {{
     0, 3.141592653589793}, {-0.9409951198834797, 0.9900960870183392}}],
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.05], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{{3.738383443397134*^9, 3.738383503006425*^9}, {
  3.738383679766695*^9, 3.7383837260785217`*^9}}],

Cell[BoxData[
 RowBox[{"-", "0.10893768103411047`"}]], "Output",
 CellChangeTimes->{{3.738383443397134*^9, 3.738383503006425*^9}, {
  3.738383679766695*^9, 3.7383837261602573`*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"R", "=", "1000"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"r", "=", "3"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  FractionBox["r", "\[Pi]"], 
  RowBox[{"NIntegrate", "[", 
   RowBox[{
    RowBox[{
     RowBox[{"-", "\[ImaginaryI]"}], " ", 
     RowBox[{"Sin", "[", "y", "]"}], 
     FractionBox[
      RowBox[{
       SuperscriptBox["R", "3"], 
       RowBox[{"Exp", "[", 
        RowBox[{
         RowBox[{"\[ImaginaryI]", " ", "3", " ", "x"}], " ", "+", 
         RowBox[{"\[ImaginaryI]", " ", "r", " ", "R", " ", 
          RowBox[{"Exp", "[", 
           RowBox[{"\[ImaginaryI]", " ", "x"}], "]"}], 
          RowBox[{"Cos", "[", "y", "]"}]}]}], "]"}]}], 
      RowBox[{
       RowBox[{
        SuperscriptBox["R", "2"], 
        RowBox[{"Exp", "[", 
         RowBox[{"2", " ", "\[ImaginaryI]", " ", "x"}], "]"}]}], "+", 
       RowBox[{"Sin", "[", "y", "]"}]}]]}], ",", 
    RowBox[{"{", 
     RowBox[{"x", ",", "0", ",", "\[Pi]"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"y", ",", "0", ",", 
      RowBox[{"\[Pi]", "/", "2"}]}], "}"}]}], "]"}]}]}], "Input",
 CellChangeTimes->{{3.738384494086358*^9, 3.738384556843547*^9}, {
  3.738385164735735*^9, 3.7383851732951393`*^9}, {3.738385205526848*^9, 
  3.7383853038019323`*^9}, {3.738385475613494*^9, 3.738385493862173*^9}, {
  3.738386630730496*^9, 3.73838663321983*^9}}],

Cell[BoxData[
 RowBox[{"1.0002070306398676`", "\[VeryThinSpace]", "+", 
  RowBox[{"9.933797861319036`*^-16", " ", "\[ImaginaryI]"}]}]], "Output",
 CellChangeTimes->{
  3.7383852460909767`*^9, {3.738385281895657*^9, 3.738385315182479*^9}, {
   3.738385487756056*^9, 3.738385505545726*^9}, {3.738386624434169*^9, 
   3.738386646328164*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"NIntegrate", "[", 
  RowBox[{
   RowBox[{
    RowBox[{"Sin", "[", "x", "]"}], 
    SqrtBox[
     RowBox[{"Sin", "[", "x", "]"}]], 
    RowBox[{"Exp", "[", 
     RowBox[{
      RowBox[{"-", 
       SqrtBox[
        RowBox[{"Sin", "[", "x", "]"}]]}], "5", " ", 
      RowBox[{"Cos", "[", "x", "]"}]}], "]"}]}], ",", 
   RowBox[{"{", 
    RowBox[{"x", ",", "0", ",", 
     RowBox[{"\[Pi]", "/", "2"}]}], "}"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.738381607245564*^9, 3.738381657137373*^9}, {
  3.738381745551196*^9, 3.738381746204019*^9}, {3.73838179004847*^9, 
  3.738381803701253*^9}, {3.738382992469798*^9, 3.738383025220171*^9}, {
  3.738383202842288*^9, 3.7383832170025454`*^9}}],

Cell[BoxData["0.20893530035206304`"], "Output",
 CellChangeTimes->{{3.738381729398056*^9, 3.738381747159536*^9}, 
   3.738381804756526*^9, {3.7383829936773567`*^9, 3.7383830261519413`*^9}, {
   3.7383832035442257`*^9, 3.738383217794538*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"-", "\[Pi]"}], " ", 
   RowBox[{"NIntegrate", "[", 
    RowBox[{
     RowBox[{
      RowBox[{"Sin", "[", "x", "]"}], 
      SqrtBox[
       RowBox[{"Sin", "[", "x", "]"}]], 
      RowBox[{"Exp", "[", 
       RowBox[{
        RowBox[{"-", 
         SqrtBox[
          RowBox[{"Sin", "[", "x", "]"}]]}], "5", " ", 
        RowBox[{"Cos", "[", "x", "]"}]}], "]"}]}], ",", 
     RowBox[{"{", 
      RowBox[{"x", ",", "0", ",", 
       RowBox[{"\[Pi]", "/", "2"}]}], "}"}]}], "]"}]}], "+", 
  RowBox[{"\[Pi]", "/", "5"}]}]], "Input",
 CellChangeTimes->{3.738383209393808*^9}],

Cell[BoxData[
 RowBox[{"-", "0.028071073943659486`"}]], "Output",
 CellChangeTimes->{3.73838320995028*^9}]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{"dat", "=", 
   RowBox[{"ParallelTable", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"r", ",", 
       RowBox[{
        FractionBox[
         RowBox[{"\[Alpha]cont", "[", 
          RowBox[{"[", "1", "]"}], "]"}], "\[Pi]"], 
        RowBox[{"NIntegrate", "[", 
         RowBox[{
          RowBox[{
           RowBox[{"Sin", "[", "x", "]"}], 
           FractionBox[
            RowBox[{
             SuperscriptBox["p", "2"], 
             RowBox[{"Exp", "[", 
              RowBox[{"\[ImaginaryI]", " ", "r", " ", "p", " ", 
               RowBox[{"Cos", "[", "x", "]"}]}], "]"}]}], 
            RowBox[{
             SuperscriptBox["p", "2"], "+", 
             RowBox[{"Re", "[", 
              RowBox[{"\[CapitalPi]par", "[", 
               RowBox[{"x", ",", "0.5", ",", "0.15"}], "]"}], "]"}]}]]}], ",", 
          RowBox[{"{", 
           RowBox[{"p", ",", "0", ",", "\[Infinity]"}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{"x", ",", "0", ",", "\[Pi]"}], "}"}]}], "]"}]}]}], "}"}], 
     ",", 
     RowBox[{"{", 
      RowBox[{"r", ",", "0", ",", "10", ",", "1"}], "}"}]}], "]"}]}], 
  ";"}]], "Input",
 CellChangeTimes->{{3.738068696708625*^9, 3.738068725381103*^9}, {
   3.7380688606722*^9, 3.7380688631024523`*^9}, {3.738069197870564*^9, 
   3.738069219398226*^9}, 3.738070965792973*^9}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Show", "[", 
  RowBox[{
   RowBox[{"ListPlot", "[", 
    RowBox[{
     RowBox[{"Re", "[", 
      RowBox[{
       RowBox[{"dat", "[", 
        RowBox[{"[", 
         RowBox[{"2", ";;"}], "]"}], "]"}], "/.", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"a_", ",", "b_"}], "}"}], "\[RuleDelayed]", 
        RowBox[{"{", 
         RowBox[{"a", ",", 
          RowBox[{"-", "b"}]}], "}"}]}]}], "]"}], ",", 
     RowBox[{"Joined", "\[Rule]", "True"}]}], "]"}], ",", 
   RowBox[{"Plot", "[", 
    RowBox[{
     RowBox[{"ReVcpar", "[", 
      RowBox[{"r", ",", "0.15", ",", "0.5", ",", 
       RowBox[{"\[Alpha]cont", "[", 
        RowBox[{"[", "1", "]"}], "]"}]}], "]"}], ",", 
     RowBox[{"{", 
      RowBox[{"r", ",", "0", ",", "10"}], "}"}], ",", 
     RowBox[{"PlotStyle", "\[Rule]", "Orange"}]}], "]"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.738069500557184*^9, 3.738069526750284*^9}, {
  3.7380708766311417`*^9, 3.738070946145587*^9}}],

Cell[BoxData[
 GraphicsBox[{{{}, {{}, {}, 
     {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
      0.012833333333333334`], AbsoluteThickness[1.6], 
      LineBox[{{1., -0.4420717362657263}, {2., -0.18958892142358802`}, {
       3., -0.10799649803186794`}, {4., -0.06891186727302387}, {
       5., -0.04666824979679915}, {6., -0.032727118490324066`}, {
       7., -0.023440656584116797`}, {8., -0.01699396865738657}, {
       9., -0.012386329959267672`}, {
       10., -0.009022053791742703}}]}}, {}, {}, {{}, {}}}, {{{}, {}, 
     TagBox[
      {RGBColor[1, 0.5, 0], AbsoluteThickness[1.6], Opacity[1.], 
       LineBox[CompressedData["
1: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
        "]]},
      Annotation[#, "Charting`Private`Tag$208549#1"]& ]}, {}, {}}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{0, 0},
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  ImagePadding->All,
  ImageSize->{660., Automatic},
  Method->{"CoordinatesToolOptions" -> {"DisplayFunction" -> ({
        (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
         Part[#, 1]], 
        (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
         Part[#, 2]]}& ), "CopiedValueFunction" -> ({
        (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
         Part[#, 1]], 
        (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
         Part[#, 2]]}& )}},
  PlotRange->{{0, 10.}, {-0.4420717362657263, 0}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.05], 
     Scaled[0.02]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{{3.738069517884268*^9, 3.738069527573245*^9}, {
  3.738070880049222*^9, 3.738070903649391*^9}, {3.738070934666143*^9, 
  3.738070949874979*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Plot", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{"ReVcpar", "[", 
      RowBox[{"r", ",", "0.15", ",", "0.8", ",", 
       RowBox[{"\[Alpha]cont", "[", 
        RowBox[{"[", "1", "]"}], "]"}]}], "]"}], ",", 
     RowBox[{
      RowBox[{"-", 
       RowBox[{"\[Alpha]cont", "[", 
        RowBox[{"[", "1", "]"}], "]"}]}], 
      FractionBox[
       RowBox[{"Exp", "[", 
        RowBox[{
         RowBox[{"-", "0.15"}], " ", "r"}], "]"}], "r"]}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"r", ",", "0", ",", "10"}], "}"}], ",", 
   RowBox[{"PlotStyle", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"Orange", ",", "Blue"}], "}"}]}]}], "]"}]], "Input",
 CellChangeTimes->{{3.738587370146163*^9, 3.7385874601954193`*^9}, {
  3.738587509717424*^9, 3.738587525565424*^9}, {3.73858786920391*^9, 
  3.738587878324603*^9}}],

Cell[BoxData[
 GraphicsBox[{{{}, {}, 
    TagBox[
     {RGBColor[1, 0.5, 0], AbsoluteThickness[1.6], Opacity[1.], 
      LineBox[CompressedData["
1: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
dTj4iPDYvIoXFf4FOagudw==
       "]]},
     Annotation[#, "Charting`Private`Tag$189460#1"]& ], 
    TagBox[
     {RGBColor[0, 0, 1], AbsoluteThickness[1.6], Opacity[1.], 
      LineBox[CompressedData["
1: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
       "]]},
     Annotation[#, "Charting`Private`Tag$189460#2"]& ]}, {}, {}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{0, 0},
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  ImagePadding->All,
  ImageSize->{735., Automatic},
  Method->{
   "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
    AbsolutePointSize[6], "ScalingFunctions" -> None, 
    "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
        (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
         Part[#, 1]], 
        (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
         Part[#, 2]]}& ), "CopiedValueFunction" -> ({
        (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
         Part[#, 1]], 
        (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
         Part[#, 2]]}& )}},
  PlotRange->{{0, 10}, {-0.5478846001849904, 0.}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.05], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{
  3.738587351155527*^9, {3.7385874023133917`*^9, 3.738587464762257*^9}, {
   3.738587513858727*^9, 3.738587527985463*^9}, {3.7385878668540897`*^9, 
   3.738587883007181*^9}}]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"ImVcpar", "[", 
    RowBox[{"r_", ",", "mD_", ",", "v_", ",", "\[Alpha]_", ",", "T_"}], "]"}],
    ":=", 
   RowBox[{"2", 
    SuperscriptBox[
     RowBox[{"(", 
      RowBox[{"1", "-", 
       SuperscriptBox["v", "2"]}], ")"}], 
     RowBox[{"3", "/", "2"}]], 
    SuperscriptBox["mD", "2"], "\[Alpha]", " ", "T", " ", 
    RowBox[{"NIntegrate", "[", 
     RowBox[{
      RowBox[{
       FractionBox[
        RowBox[{
         RowBox[{"Sin", "[", "\[Theta]", "]"}], 
         RowBox[{"(", 
          RowBox[{"2", "+", 
           RowBox[{
            SuperscriptBox["v", "2"], 
            SuperscriptBox[
             RowBox[{"Sin", "[", "\[Theta]", "]"}], "2"]}]}], ")"}]}], 
        SuperscriptBox[
         RowBox[{"(", 
          RowBox[{"1", "-", 
           RowBox[{
            SuperscriptBox["v", "2"], 
            SuperscriptBox[
             RowBox[{"Sin", "[", "\[Theta]", "]"}], "2"]}]}], ")"}], 
         RowBox[{"5", "/", "2"}]]], 
       FractionBox["1", 
        RowBox[{"2", " ", "\[ImaginaryI]", " ", 
         RowBox[{"Im", "[", 
          RowBox[{"\[CapitalPi]par", "[", 
           RowBox[{"\[Theta]", ",", "v", ",", "mD"}], "]"}], "]"}]}]], 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"(", 
          RowBox[{
           RowBox[{
            RowBox[{"Sinh", "[", 
             RowBox[{"r", " ", 
              SqrtBox[
               RowBox[{"\[CapitalPi]par", "[", 
                RowBox[{"\[Theta]", ",", "v", ",", "mD"}], "]"}]], " ", 
              RowBox[{"Cos", "[", "\[Theta]", "]"}]}], "]"}], 
            RowBox[{"SinhIntegral", "[", 
             RowBox[{"r", " ", 
              SqrtBox[
               RowBox[{"\[CapitalPi]par", "[", 
                RowBox[{"\[Theta]", ",", "v", ",", "mD"}], "]"}]], " ", 
              RowBox[{"Cos", "[", "\[Theta]", "]"}]}], "]"}]}], "-", 
           RowBox[{
            RowBox[{"Cosh", "[", 
             RowBox[{"r", " ", 
              SqrtBox[
               RowBox[{"\[CapitalPi]par", "[", 
                RowBox[{"\[Theta]", ",", "v", ",", "mD"}], "]"}]], " ", 
              RowBox[{"Cos", "[", "\[Theta]", "]"}]}], "]"}], 
            RowBox[{"CoshIntegral", "[", 
             RowBox[{"r", " ", 
              SqrtBox[
               RowBox[{"\[CapitalPi]par", "[", 
                RowBox[{"\[Theta]", ",", "v", ",", "mD"}], "]"}]], " ", 
              RowBox[{"Cos", "[", "\[Theta]", "]"}]}], "]"}]}]}], ")"}], "-", 
         
         RowBox[{"(", 
          RowBox[{
           RowBox[{
            RowBox[{"Sinh", "[", 
             RowBox[{"r", " ", 
              SqrtBox[
               RowBox[{"Conjugate", "[", 
                RowBox[{"\[CapitalPi]par", "[", 
                 RowBox[{"\[Theta]", ",", "v", ",", "mD"}], "]"}], "]"}]], 
              " ", 
              RowBox[{"Cos", "[", "\[Theta]", "]"}]}], "]"}], 
            RowBox[{"SinhIntegral", "[", 
             RowBox[{"r", " ", 
              SqrtBox[
               RowBox[{"Conjugate", "[", 
                RowBox[{"\[CapitalPi]par", "[", 
                 RowBox[{"\[Theta]", ",", "v", ",", "mD"}], "]"}], "]"}]], 
              " ", 
              RowBox[{"Cos", "[", "\[Theta]", "]"}]}], "]"}]}], "-", 
           RowBox[{
            RowBox[{"Cosh", "[", 
             RowBox[{"r", " ", 
              SqrtBox[
               RowBox[{"Conjugate", "[", 
                RowBox[{"\[CapitalPi]par", "[", 
                 RowBox[{"\[Theta]", ",", "v", ",", "mD"}], "]"}], "]"}]], 
              " ", 
              RowBox[{"Cos", "[", "\[Theta]", "]"}]}], "]"}], 
            RowBox[{"CoshIntegral", "[", 
             RowBox[{"r", " ", 
              SqrtBox[
               RowBox[{"Conjugate", "[", 
                RowBox[{"\[CapitalPi]par", "[", 
                 RowBox[{"\[Theta]", ",", "v", ",", "mD"}], "]"}], "]"}]], 
              " ", 
              RowBox[{"Cos", "[", "\[Theta]", "]"}]}], "]"}]}]}], ")"}]}], 
        ")"}]}], ",", 
      RowBox[{"{", 
       RowBox[{"\[Theta]", ",", "0", ",", 
        RowBox[{"\[Pi]", "/", "2"}]}], "}"}]}], "]"}]}]}], ";"}]], "Input",
 CellChangeTimes->{{3.738071050477656*^9, 3.738071125428404*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"ImVcpar", "[", 
  RowBox[{"5", ",", "0.15", ",", "0.5", ",", 
   RowBox[{"\[Alpha]cont", "[", 
    RowBox[{"[", "1", "]"}], "]"}], ",", "0.155"}], "]"}]], "Input",
 CellChangeTimes->{{3.7380712385093412`*^9, 3.738071254829917*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"-", "0.1329079773159636`"}], "+", 
  RowBox[{"1.7364887885912448`*^-17", " ", "\[ImaginaryI]"}]}]], "Output",
 CellChangeTimes->{3.7380712551488237`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"-", 
   SuperscriptBox[
    RowBox[{"(", 
     RowBox[{"1", "-", 
      SuperscriptBox["0.5", "2"]}], ")"}], 
    RowBox[{"3", "/", "2"}]]}], 
  SuperscriptBox["0.15", "2"], 
  RowBox[{"\[Alpha]cont", "[", 
   RowBox[{"[", "1", "]"}], "]"}], " ", "0.155", " ", 
  RowBox[{"NIntegrate", "[", 
   RowBox[{
    RowBox[{
     FractionBox[
      RowBox[{
       RowBox[{"Sin", "[", "\[Theta]", "]"}], 
       RowBox[{"(", 
        RowBox[{"2", "+", 
         RowBox[{
          SuperscriptBox["0.5", "2"], 
          SuperscriptBox[
           RowBox[{"Sin", "[", "\[Theta]", "]"}], "2"]}]}], ")"}]}], 
      SuperscriptBox[
       RowBox[{"(", 
        RowBox[{"1", "-", 
         RowBox[{
          SuperscriptBox["0.5", "2"], 
          SuperscriptBox[
           RowBox[{"Sin", "[", "\[Theta]", "]"}], "2"]}]}], ")"}], 
       RowBox[{"5", "/", "2"}]]], 
     FractionBox[
      RowBox[{"p", " ", 
       RowBox[{"Exp", "[", 
        RowBox[{"\[ImaginaryI]", " ", "p", " ", "5", " ", 
         RowBox[{"Cos", "[", "\[Theta]", "]"}]}], "]"}]}], 
      RowBox[{
       RowBox[{"(", 
        RowBox[{
         SuperscriptBox["p", "2"], "+", 
         RowBox[{"\[CapitalPi]par", "[", 
          RowBox[{"\[Theta]", ",", "0.5", ",", "0.15"}], "]"}]}], ")"}], 
       RowBox[{"(", 
        RowBox[{
         SuperscriptBox["p", "2"], "+", 
         RowBox[{"Conjugate", "[", 
          RowBox[{"\[CapitalPi]par", "[", 
           RowBox[{"\[Theta]", ",", "0.5", ",", "0.15"}], "]"}], "]"}]}], 
        ")"}]}]]}], ",", 
    RowBox[{"{", 
     RowBox[{"\[Theta]", ",", "0", ",", "\[Pi]"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"p", ",", "0", ",", "\[Infinity]"}], "}"}]}], "]"}]}]], "Input",
 CellChangeTimes->{{3.7380711493711042`*^9, 3.738071208981655*^9}, {
  3.7380712739900093`*^9, 3.738071274053754*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"-", "0.132907977392853`"}], "-", 
  RowBox[{"2.599382937468094`*^-15", " ", "\[ImaginaryI]"}]}]], "Output",
 CellChangeTimes->{3.7380712192604723`*^9, 3.7380712835742273`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"dat1", "=", 
   RowBox[{"ParallelTable", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"r", ",", 
       RowBox[{
        RowBox[{"-", 
         SuperscriptBox[
          RowBox[{"(", 
           RowBox[{"1", "-", 
            SuperscriptBox["0.5", "2"]}], ")"}], 
          RowBox[{"3", "/", "2"}]]}], 
        SuperscriptBox["0.15", "2"], 
        RowBox[{"\[Alpha]cont", "[", 
         RowBox[{"[", "1", "]"}], "]"}], " ", "0.155", " ", 
        RowBox[{"NIntegrate", "[", 
         RowBox[{
          RowBox[{
           FractionBox[
            RowBox[{
             RowBox[{"Sin", "[", "\[Theta]", "]"}], 
             RowBox[{"(", 
              RowBox[{"2", "+", 
               RowBox[{
                SuperscriptBox["0.5", "2"], 
                SuperscriptBox[
                 RowBox[{"Sin", "[", "\[Theta]", "]"}], "2"]}]}], ")"}]}], 
            SuperscriptBox[
             RowBox[{"(", 
              RowBox[{"1", "-", 
               RowBox[{
                SuperscriptBox["0.5", "2"], 
                SuperscriptBox[
                 RowBox[{"Sin", "[", "\[Theta]", "]"}], "2"]}]}], ")"}], 
             RowBox[{"5", "/", "2"}]]], 
           FractionBox[
            RowBox[{"p", " ", 
             RowBox[{"Exp", "[", 
              RowBox[{"\[ImaginaryI]", " ", "p", " ", "r", " ", 
               RowBox[{"Cos", "[", "\[Theta]", "]"}]}], "]"}]}], 
            RowBox[{
             RowBox[{"(", 
              RowBox[{
               SuperscriptBox["p", "2"], "+", 
               RowBox[{"\[CapitalPi]par", "[", 
                RowBox[{"\[Theta]", ",", "0.5", ",", "0.15"}], "]"}]}], ")"}], 
             RowBox[{"(", 
              RowBox[{
               SuperscriptBox["p", "2"], "+", 
               RowBox[{"Conjugate", "[", 
                RowBox[{"\[CapitalPi]par", "[", 
                 RowBox[{"\[Theta]", ",", "0.5", ",", "0.15"}], "]"}], 
                "]"}]}], ")"}]}]]}], ",", 
          RowBox[{"{", 
           RowBox[{"\[Theta]", ",", "0", ",", "\[Pi]"}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{"p", ",", "0", ",", "\[Infinity]"}], "}"}]}], "]"}]}]}], 
      "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"r", ",", "1", ",", "10", ",", "1"}], "}"}]}], "]"}]}], 
  ";"}]], "Input",
 CellChangeTimes->{{3.7380712876316967`*^9, 3.738071314246456*^9}}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"NIntegrate", "::", "mtdfb"}], "MessageName"], " ", ":", 
  "  ", "\<\"Numerical integration with \
\\!\\(\\*RowBox[{\\\"\\\\\\\"LevinRule\\\\\\\"\\\"}]\\) failed. The \
integration continues with Method -> \
\\!\\(\\*RowBox[{\\\"\\\\\\\"MultiDimensionalRule\\\\\\\"\\\"}]\\).\"\>"}]], \
"Message", "MSG",
 ShowCellLabel->True,
 CellChangeTimes->{3.73807138368172*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"NIntegrate", "::", "slwcon"}], "MessageName"], " ", ":", 
  "  ", "\<\"Numerical integration converging too slowly; suspect one of the \
following: singularity, value of the integration is 0, highly oscillatory \
integrand, or WorkingPrecision too small.\"\>"}]], "Message", "MSG",
 ShowCellLabel->True,
 CellChangeTimes->{3.7380713837553673`*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"NIntegrate", "::", "mtdfb"}], "MessageName"], " ", ":", 
  "  ", "\<\"Numerical integration with \
\\!\\(\\*RowBox[{\\\"\\\\\\\"LevinRule\\\\\\\"\\\"}]\\) failed. The \
integration continues with Method -> \
\\!\\(\\*RowBox[{\\\"\\\\\\\"MultiDimensionalRule\\\\\\\"\\\"}]\\).\"\>"}]], \
"Message", "MSG",
 ShowCellLabel->True,
 CellChangeTimes->{3.738071440187446*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"NIntegrate", "::", "slwcon"}], "MessageName"], " ", ":", 
  "  ", "\<\"Numerical integration converging too slowly; suspect one of the \
following: singularity, value of the integration is 0, highly oscillatory \
integrand, or WorkingPrecision too small.\"\>"}]], "Message", "MSG",
 ShowCellLabel->True,
 CellChangeTimes->{3.738071440274714*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"NIntegrate", "::", "mtdfb"}], "MessageName"], " ", ":", 
  "  ", "\<\"Numerical integration with \
\\!\\(\\*RowBox[{\\\"\\\\\\\"LevinRule\\\\\\\"\\\"}]\\) failed. The \
integration continues with Method -> \
\\!\\(\\*RowBox[{\\\"\\\\\\\"MultiDimensionalRule\\\\\\\"\\\"}]\\).\"\>"}]], \
"Message", "MSG",
 ShowCellLabel->True,
 CellChangeTimes->{3.738071519672777*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"NIntegrate", "::", "mtdfb"}], "MessageName"], " ", ":", 
  "  ", "\<\"Numerical integration with \
\\!\\(\\*RowBox[{\\\"\\\\\\\"LevinRule\\\\\\\"\\\"}]\\) failed. The \
integration continues with Method -> \
\\!\\(\\*RowBox[{\\\"\\\\\\\"MultiDimensionalRule\\\\\\\"\\\"}]\\).\"\>"}]], \
"Message", "MSG",
 ShowCellLabel->True,
 CellChangeTimes->{3.738071521896638*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"General", "::", "stop"}], "MessageName"], " ", ":", 
  "  ", "\<\"Further output of \\!\\(\\*StyleBox[RowBox[{\\\"NIntegrate\\\", \
\\\"::\\\", \\\"mtdfb\\\"}], \\\"MessageName\\\"]\\) will be suppressed \
during this calculation.\"\>"}]], "Message", "MSG",
 ShowCellLabel->True,
 CellChangeTimes->{3.738071521991624*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"NIntegrate", "::", "mtdfb"}], "MessageName"], " ", ":", 
  "  ", "\<\"Numerical integration with \
\\!\\(\\*RowBox[{\\\"\\\\\\\"LevinRule\\\\\\\"\\\"}]\\) failed. The \
integration continues with Method -> \
\\!\\(\\*RowBox[{\\\"\\\\\\\"MultiDimensionalRule\\\\\\\"\\\"}]\\).\"\>"}]], \
"Message", "MSG",
 ShowCellLabel->True,
 CellChangeTimes->{3.738071608148971*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"NIntegrate", "::", "mtdfb"}], "MessageName"], " ", ":", 
  "  ", "\<\"Numerical integration with \
\\!\\(\\*RowBox[{\\\"\\\\\\\"LevinRule\\\\\\\"\\\"}]\\) failed. The \
integration continues with Method -> \
\\!\\(\\*RowBox[{\\\"\\\\\\\"MultiDimensionalRule\\\\\\\"\\\"}]\\).\"\>"}]], \
"Message", "MSG",
 ShowCellLabel->True,
 CellChangeTimes->{3.738071650668107*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"General", "::", "stop"}], "MessageName"], " ", ":", 
  "  ", "\<\"Further output of \\!\\(\\*StyleBox[RowBox[{\\\"NIntegrate\\\", \
\\\"::\\\", \\\"mtdfb\\\"}], \\\"MessageName\\\"]\\) will be suppressed \
during this calculation.\"\>"}]], "Message", "MSG",
 ShowCellLabel->True,
 CellChangeTimes->{3.738071650764841*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Show", "[", 
  RowBox[{
   RowBox[{"Plot", "[", 
    RowBox[{
     RowBox[{"Re", "[", 
      RowBox[{"ImVcpar", "[", 
       RowBox[{"r", ",", "0.15", ",", "0.5", ",", 
        RowBox[{"\[Alpha]cont", "[", 
         RowBox[{"[", "1", "]"}], "]"}], ",", "0.155"}], "]"}], "]"}], ",", 
     RowBox[{"{", 
      RowBox[{"r", ",", "0", ",", "20"}], "}"}], ",", 
     RowBox[{"PlotStyle", "\[Rule]", "Orange"}]}], "]"}], ",", 
   RowBox[{"ListPlot", "[", 
    RowBox[{"Re", "[", "dat1", "]"}], "]"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.738071335680078*^9, 3.738071389712607*^9}, {
  3.738071895802359*^9, 3.738071929305505*^9}}],

Cell[BoxData[
 GraphicsBox[{{{{}, {}, 
     TagBox[
      {RGBColor[1, 0.5, 0], AbsoluteThickness[1.6], Opacity[1.], 
       LineBox[CompressedData["
1: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
bJ7X9ORAhUh3Zn6ewCcMJq3o7hz4P6MeHHg=
        "]]},
      Annotation[#, "Charting`Private`Tag$372631#1"]& ]}, {}, {}}, {{}, {{}, 
     {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
      0.012833333333333334`], AbsoluteThickness[1.6], 
      PointBox[{{1., -0.1643349779852912}, {2., -0.15812743826726175`}, {
       3., -0.1503673030635135}, {4., -0.14180883921232534`}, {
       5., -0.13290797739283067`}, {6., -0.12396086754132842`}, {
       7., -0.11516492310772886`}, {8., -0.10665184041477824`}, {
       9., -0.09850770692395966}, {
       10., -0.09078611241109533}}]}, {}}, {}, {}, {{}, {}}}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{0, -0.16739646958910215`},
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  ImagePadding->All,
  ImageSize->{917., Automatic},
  Method->{
   "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
    AbsolutePointSize[6], "ScalingFunctions" -> None, 
    "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
        (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
         Part[#, 1]], 
        (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
         Part[#, 2]]}& ), "CopiedValueFunction" -> ({
        (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
         Part[#, 1]], 
        (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
         Part[#, 2]]}& )}},
  PlotRange->{{0, 20}, {-0.16739646958910215`, -0.03782726032121076}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.05], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{
  3.738071756999332*^9, {3.738071901494701*^9, 3.7380719351258917`*^9}}]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{"f", "[", 
   RowBox[{"p_", ",", "r_"}], "]"}], ":=", 
  RowBox[{"Integrate", "[", 
   RowBox[{
    RowBox[{
     RowBox[{"Sin", "[", "x", "]"}], 
     RowBox[{"Re", "[", 
      RowBox[{"\[CapitalPi]par", "[", 
       RowBox[{"x", ",", "0.5", ",", "0.15"}], "]"}], "]"}], 
     RowBox[{"Cos", "[", 
      RowBox[{"Cos", "[", 
       RowBox[{"p", " ", "r", " ", "x"}], "]"}], "]"}]}], ",", 
    RowBox[{"{", 
     RowBox[{"x", ",", "0", ",", "\[Pi]"}], "}"}]}], "]"}]}]], "Input",
 CellChangeTimes->{{3.7383024671412163`*^9, 3.738302484572565*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"f", "[", 
  RowBox[{"1", ",", "1"}], "]"}]], "Input",
 CellChangeTimes->{{3.738302488427403*^9, 3.738302489757264*^9}}],

Cell[BoxData["$Aborted"], "Output",
 CellChangeTimes->{3.73830438108562*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Plot", "[", 
  RowBox[{
   RowBox[{
    RowBox[{"Sin", "[", "x", "]"}], 
    RowBox[{"Re", "[", 
     RowBox[{"\[CapitalPi]par", "[", 
      RowBox[{"x", ",", "0.5", ",", "0.15"}], "]"}], "]"}], 
    RowBox[{"Cos", "[", 
     RowBox[{"Cos", "[", "x", "]"}], "]"}]}], ",", 
   RowBox[{"{", 
    RowBox[{"x", ",", "0", ",", "\[Pi]"}], "}"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.738302346080367*^9, 3.738302460436947*^9}, {
  3.738304385504876*^9, 3.738304408456957*^9}}],

Cell[BoxData[
 GraphicsBox[{{{}, {}, 
    TagBox[
     {RGBColor[0.368417, 0.506779, 0.709798], AbsoluteThickness[1.6], Opacity[
      1.], LineBox[CompressedData["
1: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
KbSWaskTBfBa8r//y/8H8sct9g==
       "]]},
     Annotation[#, "Charting`Private`Tag$835230#1"]& ]}, {}, {}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{0, 0},
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  ImagePadding->All,
  ImageSize->{831., Automatic},
  Method->{
   "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
    AbsolutePointSize[6], "ScalingFunctions" -> None, 
    "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
        (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
         Part[#, 1]], 
        (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
         Part[#, 2]]}& ), "CopiedValueFunction" -> ({
        (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
         Part[#, 1]], 
        (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
         Part[#, 2]]}& )}},
  PlotRange->
   NCache[{{0, Pi}, {0., 0.029999996346036832`}}, {{0, 3.141592653589793}, {
     0., 0.029999996346036832`}}],
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.05], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{{3.7383023673336363`*^9, 3.738302414248094*^9}, {
  3.738302451849839*^9, 3.738302461268404*^9}, {3.738304386725089*^9, 
  3.738304409331461*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Integrate", "[", 
  RowBox[{
   FractionBox[
    RowBox[{" ", 
     RowBox[{"p", " ", 
      RowBox[{"Exp", "[", 
       RowBox[{
        RowBox[{"-", " ", "p"}], " ", 
        RowBox[{"Cos", "[", "\[Theta]", "]"}]}], "]"}]}]}], 
    RowBox[{
     RowBox[{"(", 
      RowBox[{
       RowBox[{"-", 
        SuperscriptBox["p", "2"]}], "+", "z"}], ")"}], 
     RowBox[{"(", 
      RowBox[{
       RowBox[{"-", 
        SuperscriptBox["p", "2"]}], "+", 
       RowBox[{"Conjugate", "[", "z", "]"}]}], ")"}]}]], ",", 
   RowBox[{"{", 
    RowBox[{"p", ",", "0", ",", "\[Infinity]"}], "}"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.738312027038189*^9, 3.7383121224848747`*^9}, {
  3.738312269897005*^9, 3.738312300152314*^9}, {3.7383126134547462`*^9, 
  3.738312616503797*^9}}],

Cell[BoxData[
 RowBox[{"ConditionalExpression", "[", 
  RowBox[{
   RowBox[{
    FractionBox["1", 
     RowBox[{"z", "-", 
      RowBox[{"Conjugate", "[", "z", "]"}]}]], 
    RowBox[{"(", 
     RowBox[{
      RowBox[{
       RowBox[{"-", 
        RowBox[{"Cos", "[", 
         RowBox[{
          SqrtBox[
           RowBox[{"-", "z"}]], " ", 
          RowBox[{"Cos", "[", "\[Theta]", "]"}]}], "]"}]}], " ", 
       RowBox[{"CosIntegral", "[", 
        RowBox[{
         SqrtBox[
          RowBox[{"-", "z"}]], " ", 
         RowBox[{"Cos", "[", "\[Theta]", "]"}]}], "]"}]}], "+", 
      RowBox[{
       RowBox[{"Cos", "[", 
        RowBox[{
         SqrtBox[
          RowBox[{"-", 
           RowBox[{"Conjugate", "[", "z", "]"}]}]], " ", 
         RowBox[{"Cos", "[", "\[Theta]", "]"}]}], "]"}], " ", 
       RowBox[{"CosIntegral", "[", 
        RowBox[{
         SqrtBox[
          RowBox[{"-", 
           RowBox[{"Conjugate", "[", "z", "]"}]}]], " ", 
         RowBox[{"Cos", "[", "\[Theta]", "]"}]}], "]"}]}], "+", 
      RowBox[{
       FractionBox["1", "2"], " ", 
       RowBox[{"Sin", "[", 
        RowBox[{
         SqrtBox[
          RowBox[{"-", "z"}]], " ", 
         RowBox[{"Cos", "[", "\[Theta]", "]"}]}], "]"}], " ", 
       RowBox[{"(", 
        RowBox[{"\[Pi]", "-", 
         RowBox[{"2", " ", 
          RowBox[{"SinIntegral", "[", 
           RowBox[{
            SqrtBox[
             RowBox[{"-", "z"}]], " ", 
            RowBox[{"Cos", "[", "\[Theta]", "]"}]}], "]"}]}]}], ")"}]}], "-", 
      
      RowBox[{
       FractionBox["1", "2"], " ", 
       RowBox[{"Sin", "[", 
        RowBox[{
         SqrtBox[
          RowBox[{"-", 
           RowBox[{"Conjugate", "[", "z", "]"}]}]], " ", 
         RowBox[{"Cos", "[", "\[Theta]", "]"}]}], "]"}], " ", 
       RowBox[{"(", 
        RowBox[{"\[Pi]", "-", 
         RowBox[{"2", " ", 
          RowBox[{"SinIntegral", "[", 
           RowBox[{
            SqrtBox[
             RowBox[{"-", 
              RowBox[{"Conjugate", "[", "z", "]"}]}]], " ", 
            RowBox[{"Cos", "[", "\[Theta]", "]"}]}], "]"}]}]}], ")"}]}]}], 
     ")"}]}], ",", 
   RowBox[{
    RowBox[{
     RowBox[{"Re", "[", 
      RowBox[{"Cos", "[", "\[Theta]", "]"}], "]"}], ">", "0"}], "&&", 
    RowBox[{"(", 
     RowBox[{
      RowBox[{"(", 
       RowBox[{
        RowBox[{
         RowBox[{"Im", "[", 
          SqrtBox["z"], "]"}], "\[NotEqual]", "0"}], "&&", 
        RowBox[{
         RowBox[{"Im", "[", "z", "]"}], "\[NotEqual]", "0"}], "&&", 
        RowBox[{
         RowBox[{"Im", "[", 
          SqrtBox[
           RowBox[{"Conjugate", "[", "z", "]"}]], "]"}], "\[NotEqual]", 
         "0"}]}], ")"}], "||", 
      RowBox[{
       RowBox[{"Re", "[", "z", "]"}], "<", "0"}]}], ")"}]}]}], 
  "]"}]], "Output",
 CellChangeTimes->{{3.73831211809691*^9, 3.738312140459568*^9}, 
   3.7383122833326283`*^9, {3.738312611937738*^9, 3.738312628803557*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Integrate", "[", 
  RowBox[{
   FractionBox[
    RowBox[{" ", 
     RowBox[{"p", " ", 
      RowBox[{"Exp", "[", 
       RowBox[{
        RowBox[{"-", " ", "\[ImaginaryI]"}], " ", "p", " ", 
        RowBox[{"Cos", "[", "\[Theta]", "]"}]}], "]"}]}]}], 
    RowBox[{
     RowBox[{"(", 
      RowBox[{
       RowBox[{"-", 
        SuperscriptBox["p", "2"]}], "+", "z"}], ")"}], 
     RowBox[{"(", 
      RowBox[{
       RowBox[{"-", 
        SuperscriptBox["p", "2"]}], "+", 
       RowBox[{"Conjugate", "[", "z", "]"}]}], ")"}]}]], ",", 
   RowBox[{"{", 
    RowBox[{"p", ",", "0", ",", "\[Infinity]"}], "}"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.738312636519335*^9, 3.738312641822349*^9}}],

Cell[BoxData[
 RowBox[{"ConditionalExpression", "[", 
  RowBox[{
   RowBox[{
    FractionBox["1", 
     RowBox[{"z", "-", 
      RowBox[{"Conjugate", "[", "z", "]"}]}]], 
    RowBox[{"(", 
     RowBox[{
      RowBox[{
       RowBox[{"-", 
        RowBox[{"Cosh", "[", 
         RowBox[{
          SqrtBox[
           RowBox[{"-", 
            FractionBox["1", "z"]}]], " ", "z", " ", 
          RowBox[{"Cos", "[", "\[Theta]", "]"}]}], "]"}]}], " ", 
       RowBox[{"CosIntegral", "[", 
        FractionBox[
         RowBox[{"\[ImaginaryI]", " ", 
          RowBox[{"Cos", "[", "\[Theta]", "]"}]}], 
         SqrtBox[
          RowBox[{"-", 
           FractionBox["1", "z"]}]]], "]"}]}], "+", 
      RowBox[{
       RowBox[{"Cosh", "[", 
        RowBox[{
         SqrtBox[
          RowBox[{"-", 
           FractionBox["1", 
            RowBox[{"Conjugate", "[", "z", "]"}]]}]], " ", 
         RowBox[{"Conjugate", "[", "z", "]"}], " ", 
         RowBox[{"Cos", "[", "\[Theta]", "]"}]}], "]"}], " ", 
       RowBox[{"CosIntegral", "[", 
        FractionBox[
         RowBox[{"\[ImaginaryI]", " ", 
          RowBox[{"Cos", "[", "\[Theta]", "]"}]}], 
         SqrtBox[
          RowBox[{"-", 
           FractionBox["1", 
            RowBox[{"Conjugate", "[", "z", "]"}]]}]]], "]"}]}], "+", 
      RowBox[{
       FractionBox["1", "2"], " ", 
       RowBox[{"Sinh", "[", 
        RowBox[{
         SqrtBox[
          RowBox[{"-", 
           FractionBox["1", "z"]}]], " ", "z", " ", 
         RowBox[{"Cos", "[", "\[Theta]", "]"}]}], "]"}], " ", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{
          RowBox[{"-", "\[ImaginaryI]"}], " ", "\[Pi]"}], "+", 
         RowBox[{"2", " ", 
          RowBox[{"SinhIntegral", "[", 
           RowBox[{
            SqrtBox[
             RowBox[{"-", 
              FractionBox["1", "z"]}]], " ", "z", " ", 
            RowBox[{"Cos", "[", "\[Theta]", "]"}]}], "]"}]}]}], ")"}]}], "+", 
      
      RowBox[{
       FractionBox["1", "2"], " ", "\[ImaginaryI]", " ", 
       RowBox[{"Sinh", "[", 
        RowBox[{
         SqrtBox[
          RowBox[{"-", 
           FractionBox["1", 
            RowBox[{"Conjugate", "[", "z", "]"}]]}]], " ", 
         RowBox[{"Conjugate", "[", "z", "]"}], " ", 
         RowBox[{"Cos", "[", "\[Theta]", "]"}]}], "]"}], " ", 
       RowBox[{"(", 
        RowBox[{"\[Pi]", "+", 
         RowBox[{"2", " ", "\[ImaginaryI]", " ", 
          RowBox[{"SinhIntegral", "[", 
           RowBox[{
            SqrtBox[
             RowBox[{"-", 
              FractionBox["1", 
               RowBox[{"Conjugate", "[", "z", "]"}]]}]], " ", 
            RowBox[{"Conjugate", "[", "z", "]"}], " ", 
            RowBox[{"Cos", "[", "\[Theta]", "]"}]}], "]"}]}]}], ")"}]}]}], 
     ")"}]}], ",", 
   RowBox[{
    RowBox[{
     RowBox[{"Im", "[", 
      RowBox[{"Cos", "[", "\[Theta]", "]"}], "]"}], "<", "0"}], "&&", 
    RowBox[{
     RowBox[{"Im", "[", 
      SqrtBox[
       RowBox[{"Conjugate", "[", "z", "]"}]], "]"}], "\[NotEqual]", "0"}], "&&", 
    RowBox[{
     RowBox[{"Im", "[", 
      SqrtBox["z"], "]"}], "\[NotEqual]", "0"}]}]}], "]"}]], "Output",
 CellChangeTimes->{3.738312662259611*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"Assuming", "[", 
   RowBox[{
    RowBox[{"\[Theta]", "\[Element]", "Reals"}], ",", 
    RowBox[{"Integrate", "[", 
     RowBox[{
      FractionBox[
       RowBox[{" ", 
        RowBox[{"p", " ", 
         RowBox[{"Exp", "[", 
          RowBox[{"\[ImaginaryI]", " ", "p", " ", "r", " ", 
           RowBox[{"Cos", "[", "\[Theta]", "]"}]}], "]"}]}]}], 
       RowBox[{
        RowBox[{"(", 
         RowBox[{
          SuperscriptBox["p", "2"], "+", "z"}], ")"}], 
        RowBox[{"(", 
         RowBox[{
          SuperscriptBox["p", "2"], "+", 
          RowBox[{"Conjugate", "[", "z", "]"}]}], ")"}]}]], ",", 
      RowBox[{"{", 
       RowBox[{"p", ",", "0", ",", "\[Infinity]"}], "}"}]}], "]"}]}], "]"}], "//",
   "FullSimplify"}]], "Input",
 CellChangeTimes->{{3.7383127583877583`*^9, 3.738312759139558*^9}, {
  3.738313629021432*^9, 3.738313630257001*^9}, {3.738314669197815*^9, 
  3.7383146875897627`*^9}}],

Cell[BoxData[
 RowBox[{"ConditionalExpression", "[", 
  RowBox[{
   RowBox[{"-", 
    RowBox[{
     FractionBox["1", 
      RowBox[{"4", " ", 
       RowBox[{"Im", "[", "z", "]"}]}]], 
     RowBox[{"\[ImaginaryI]", " ", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{"2", " ", 
         RowBox[{"Cosh", "[", 
          RowBox[{"r", " ", 
           SqrtBox["z"], " ", 
           RowBox[{"Cos", "[", "\[Theta]", "]"}]}], "]"}], " ", 
         RowBox[{"CosIntegral", "[", 
          RowBox[{
           RowBox[{"-", "\[ImaginaryI]"}], " ", "r", " ", 
           SqrtBox["z"], " ", 
           RowBox[{"Cos", "[", "\[Theta]", "]"}]}], "]"}]}], "-", 
        RowBox[{"2", " ", 
         RowBox[{"Cosh", "[", 
          RowBox[{"r", " ", 
           SqrtBox[
            RowBox[{"Conjugate", "[", "z", "]"}]], " ", 
           RowBox[{"Cos", "[", "\[Theta]", "]"}]}], "]"}], " ", 
         RowBox[{"CosIntegral", "[", 
          RowBox[{
           RowBox[{"-", "\[ImaginaryI]"}], " ", "r", " ", 
           SqrtBox[
            RowBox[{"Conjugate", "[", "z", "]"}]], " ", 
           RowBox[{"Cos", "[", "\[Theta]", "]"}]}], "]"}]}], "+", 
        RowBox[{"\[ImaginaryI]", " ", "\[Pi]", " ", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{"Sinh", "[", 
            RowBox[{"r", " ", 
             SqrtBox["z"], " ", 
             RowBox[{"Cos", "[", "\[Theta]", "]"}]}], "]"}], "-", 
           RowBox[{"Sinh", "[", 
            RowBox[{"r", " ", 
             SqrtBox[
              RowBox[{"Conjugate", "[", "z", "]"}]], " ", 
             RowBox[{"Cos", "[", "\[Theta]", "]"}]}], "]"}]}], ")"}]}], "-", 
        RowBox[{"2", " ", 
         RowBox[{"Sinh", "[", 
          RowBox[{"r", " ", 
           SqrtBox["z"], " ", 
           RowBox[{"Cos", "[", "\[Theta]", "]"}]}], "]"}], " ", 
         RowBox[{"SinhIntegral", "[", 
          RowBox[{"r", " ", 
           SqrtBox["z"], " ", 
           RowBox[{"Cos", "[", "\[Theta]", "]"}]}], "]"}]}], "+", 
        RowBox[{"2", " ", 
         RowBox[{"Sinh", "[", 
          RowBox[{"r", " ", 
           SqrtBox[
            RowBox[{"Conjugate", "[", "z", "]"}]], " ", 
           RowBox[{"Cos", "[", "\[Theta]", "]"}]}], "]"}], " ", 
         RowBox[{"SinhIntegral", "[", 
          RowBox[{"r", " ", 
           SqrtBox[
            RowBox[{"Conjugate", "[", "z", "]"}]], " ", 
           RowBox[{"Cos", "[", "\[Theta]", "]"}]}], "]"}]}]}], ")"}]}]}]}], 
   ",", 
   RowBox[{
    RowBox[{"(", 
     RowBox[{
      RowBox[{"(", 
       RowBox[{
        RowBox[{
         RowBox[{"Cos", "[", "\[Theta]", "]"}], "<", "0"}], "&&", 
        RowBox[{
         RowBox[{"Im", "[", "r", "]"}], "<", "0"}]}], ")"}], "||", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{
         RowBox[{"Cos", "[", "\[Theta]", "]"}], ">", "0"}], "&&", 
        RowBox[{
         RowBox[{"Im", "[", "r", "]"}], ">", "0"}]}], ")"}]}], ")"}], "&&", 
    RowBox[{"(", 
     RowBox[{
      RowBox[{"(", 
       RowBox[{
        RowBox[{"z", "\[NotEqual]", 
         RowBox[{"Re", "[", "z", "]"}]}], "&&", 
        RowBox[{
         RowBox[{"Re", "[", 
          SqrtBox["z"], "]"}], "\[NotEqual]", "0"}], "&&", 
        RowBox[{
         RowBox[{"Re", "[", 
          SqrtBox[
           RowBox[{"Conjugate", "[", "z", "]"}]], "]"}], "\[NotEqual]", 
         "0"}]}], ")"}], "||", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{
         RowBox[{"Re", "[", 
          SqrtBox["z"], "]"}], ">", "0"}], "&&", 
        RowBox[{
         RowBox[{"Re", "[", 
          SqrtBox[
           RowBox[{"Conjugate", "[", "z", "]"}]], "]"}], ">", "0"}], "&&", 
        RowBox[{
         RowBox[{"Re", "[", "z", "]"}], "\[GreaterEqual]", "0"}]}], ")"}]}], 
     ")"}]}]}], "]"}]], "Output",
 CellChangeTimes->{3.738312775400457*^9, 3.7383136484263687`*^9, 
  3.738314745893694*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"Assuming", "[", 
   RowBox[{
    RowBox[{"\[Theta]", "\[Element]", "Reals"}], ",", 
    RowBox[{"Integrate", "[", 
     RowBox[{
      FractionBox[
       RowBox[{" ", 
        RowBox[{
         SuperscriptBox["p", "3"], " ", 
         RowBox[{"Exp", "[", 
          RowBox[{"\[ImaginaryI]", " ", "p", " ", "r", " ", 
           RowBox[{"Cos", "[", "\[Theta]", "]"}]}], "]"}]}]}], 
       RowBox[{
        RowBox[{"(", 
         RowBox[{
          SuperscriptBox["p", "2"], "+", "z"}], ")"}], 
        RowBox[{"(", 
         RowBox[{
          SuperscriptBox["p", "2"], "+", 
          RowBox[{"Conjugate", "[", "z", "]"}]}], ")"}]}]], ",", 
      RowBox[{"{", 
       RowBox[{"p", ",", "0", ",", "\[Infinity]"}], "}"}]}], "]"}]}], "]"}], "//",
   "FullSimplify"}]], "Input",
 CellChangeTimes->{{3.738312973564808*^9, 3.738312973788857*^9}, 
   3.738313714279983*^9, {3.73831377455205*^9, 3.7383137842200727`*^9}, {
   3.738314691999173*^9, 3.738314693442752*^9}}],

Cell[BoxData[
 RowBox[{"ConditionalExpression", "[", 
  RowBox[{
   FractionBox[
    RowBox[{"\[ImaginaryI]", " ", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{"z", " ", 
        RowBox[{"MeijerG", "[", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{
            RowBox[{"{", 
             RowBox[{"-", "1"}], "}"}], ",", 
            RowBox[{"{", "}"}]}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"{", 
             RowBox[{
              RowBox[{"-", "1"}], ",", "0", ",", 
              FractionBox["1", "2"]}], "}"}], ",", 
            RowBox[{"{", "}"}]}], "}"}], ",", 
          RowBox[{
           RowBox[{"-", 
            FractionBox["1", "4"]}], " ", 
           SuperscriptBox["r", "2"], " ", "z", " ", 
           SuperscriptBox[
            RowBox[{"Cos", "[", "\[Theta]", "]"}], "2"]}]}], "]"}]}], "-", 
       RowBox[{
        RowBox[{"Conjugate", "[", "z", "]"}], " ", 
        RowBox[{"MeijerG", "[", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{
            RowBox[{"{", 
             RowBox[{"-", "1"}], "}"}], ",", 
            RowBox[{"{", "}"}]}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"{", 
             RowBox[{
              RowBox[{"-", "1"}], ",", "0", ",", 
              FractionBox["1", "2"]}], "}"}], ",", 
            RowBox[{"{", "}"}]}], "}"}], ",", 
          RowBox[{
           RowBox[{"-", 
            FractionBox["1", "4"]}], " ", 
           SuperscriptBox["r", "2"], " ", 
           RowBox[{"Conjugate", "[", "z", "]"}], " ", 
           SuperscriptBox[
            RowBox[{"Cos", "[", "\[Theta]", "]"}], "2"]}]}], "]"}]}]}], 
      ")"}]}], 
    RowBox[{"4", " ", 
     SqrtBox["\[Pi]"], " ", 
     RowBox[{"Im", "[", "z", "]"}]}]], ",", 
   RowBox[{
    RowBox[{"(", 
     RowBox[{
      RowBox[{"(", 
       RowBox[{
        RowBox[{
         RowBox[{"Cos", "[", "\[Theta]", "]"}], "<", "0"}], "&&", 
        RowBox[{
         RowBox[{"Im", "[", "r", "]"}], "<", "0"}]}], ")"}], "||", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{
         RowBox[{"Cos", "[", "\[Theta]", "]"}], ">", "0"}], "&&", 
        RowBox[{
         RowBox[{"Im", "[", "r", "]"}], ">", "0"}]}], ")"}]}], ")"}], "&&", 
    RowBox[{"(", 
     RowBox[{
      RowBox[{"(", 
       RowBox[{
        RowBox[{"z", "\[NotEqual]", 
         RowBox[{"Re", "[", "z", "]"}]}], "&&", 
        RowBox[{
         RowBox[{"Re", "[", 
          SqrtBox["z"], "]"}], "\[NotEqual]", "0"}], "&&", 
        RowBox[{
         RowBox[{"Re", "[", 
          SqrtBox[
           RowBox[{"Conjugate", "[", "z", "]"}]], "]"}], "\[NotEqual]", 
         "0"}]}], ")"}], "||", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{
         RowBox[{"Re", "[", 
          SqrtBox["z"], "]"}], ">", "0"}], "&&", 
        RowBox[{
         RowBox[{"Re", "[", 
          SqrtBox[
           RowBox[{"Conjugate", "[", "z", "]"}]], "]"}], ">", "0"}], "&&", 
        RowBox[{
         RowBox[{"Re", "[", "z", "]"}], "\[GreaterEqual]", "0"}]}], ")"}]}], 
     ")"}]}]}], "]"}]], "Output",
 CellChangeTimes->{3.738312994240156*^9, 3.738313781996867*^9, 
  3.738313815948251*^9, 3.738318659465309*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"Assuming", "[", 
   RowBox[{
    RowBox[{"\[Theta]", "\[Element]", "Reals"}], ",", 
    RowBox[{"Integrate", "[", 
     RowBox[{
      FractionBox[
       RowBox[{" ", 
        RowBox[{
         SuperscriptBox["p", "2"], " ", 
         RowBox[{"Exp", "[", 
          RowBox[{"\[ImaginaryI]", " ", "p", " ", "r", " ", 
           RowBox[{"Cos", "[", "\[Theta]", "]"}]}], "]"}]}]}], 
       RowBox[{
        RowBox[{"(", 
         RowBox[{
          SuperscriptBox["p", "2"], "+", "z"}], ")"}], 
        RowBox[{"(", 
         RowBox[{
          SuperscriptBox["p", "2"], "+", 
          RowBox[{"Conjugate", "[", "z", "]"}]}], ")"}]}]], ",", 
      RowBox[{"{", 
       RowBox[{"p", ",", "0", ",", "\[Infinity]"}], "}"}]}], "]"}]}], "]"}], "//",
   "FullSimplify"}]], "Input",
 CellChangeTimes->{{3.7383141727313833`*^9, 3.7383141755152473`*^9}, {
  3.7383146976220293`*^9, 3.738314702321423*^9}}],

Cell[BoxData[
 RowBox[{"ConditionalExpression", "[", 
  RowBox[{
   RowBox[{
    FractionBox["1", 
     RowBox[{"4", " ", 
      RowBox[{"Im", "[", "z", "]"}]}]], 
    RowBox[{"(", 
     RowBox[{
      RowBox[{
       SqrtBox["z"], " ", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{
          RowBox[{"-", "2"}], " ", 
          RowBox[{"CosIntegral", "[", 
           RowBox[{
            RowBox[{"-", "\[ImaginaryI]"}], " ", "r", " ", 
            SqrtBox["z"], " ", 
            RowBox[{"Cos", "[", "\[Theta]", "]"}]}], "]"}], " ", 
          RowBox[{"Sinh", "[", 
           RowBox[{"r", " ", 
            SqrtBox["z"], " ", 
            RowBox[{"Cos", "[", "\[Theta]", "]"}]}], "]"}]}], "+", 
         RowBox[{
          RowBox[{"Cosh", "[", 
           RowBox[{"r", " ", 
            SqrtBox["z"], " ", 
            RowBox[{"Cos", "[", "\[Theta]", "]"}]}], "]"}], " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{
             RowBox[{"-", "\[ImaginaryI]"}], " ", "\[Pi]"}], "+", 
            RowBox[{"2", " ", 
             RowBox[{"SinhIntegral", "[", 
              RowBox[{"r", " ", 
               SqrtBox["z"], " ", 
               RowBox[{"Cos", "[", "\[Theta]", "]"}]}], "]"}]}]}], ")"}]}]}], 
        ")"}]}], "+", 
      RowBox[{
       SqrtBox[
        RowBox[{"Conjugate", "[", "z", "]"}]], " ", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"2", " ", 
          RowBox[{"CosIntegral", "[", 
           RowBox[{
            RowBox[{"-", "\[ImaginaryI]"}], " ", "r", " ", 
            SqrtBox[
             RowBox[{"Conjugate", "[", "z", "]"}]], " ", 
            RowBox[{"Cos", "[", "\[Theta]", "]"}]}], "]"}], " ", 
          RowBox[{"Sinh", "[", 
           RowBox[{"r", " ", 
            SqrtBox[
             RowBox[{"Conjugate", "[", "z", "]"}]], " ", 
            RowBox[{"Cos", "[", "\[Theta]", "]"}]}], "]"}]}], "+", 
         RowBox[{"\[ImaginaryI]", " ", 
          RowBox[{"Cosh", "[", 
           RowBox[{"r", " ", 
            SqrtBox[
             RowBox[{"Conjugate", "[", "z", "]"}]], " ", 
            RowBox[{"Cos", "[", "\[Theta]", "]"}]}], "]"}], " ", 
          RowBox[{"(", 
           RowBox[{"\[Pi]", "+", 
            RowBox[{"2", " ", "\[ImaginaryI]", " ", 
             RowBox[{"SinhIntegral", "[", 
              RowBox[{"r", " ", 
               SqrtBox[
                RowBox[{"Conjugate", "[", "z", "]"}]], " ", 
               RowBox[{"Cos", "[", "\[Theta]", "]"}]}], "]"}]}]}], ")"}]}]}], 
        ")"}]}]}], ")"}]}], ",", 
   RowBox[{
    RowBox[{"(", 
     RowBox[{
      RowBox[{"(", 
       RowBox[{
        RowBox[{
         RowBox[{"Cos", "[", "\[Theta]", "]"}], "<", "0"}], "&&", 
        RowBox[{
         RowBox[{"Im", "[", "r", "]"}], "<", "0"}]}], ")"}], "||", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{
         RowBox[{"Cos", "[", "\[Theta]", "]"}], ">", "0"}], "&&", 
        RowBox[{
         RowBox[{"Im", "[", "r", "]"}], ">", "0"}]}], ")"}]}], ")"}], "&&", 
    RowBox[{"(", 
     RowBox[{
      RowBox[{"(", 
       RowBox[{
        RowBox[{"z", "\[NotEqual]", 
         RowBox[{"Re", "[", "z", "]"}]}], "&&", 
        RowBox[{
         RowBox[{"Re", "[", 
          SqrtBox["z"], "]"}], "\[NotEqual]", "0"}], "&&", 
        RowBox[{
         RowBox[{"Re", "[", 
          SqrtBox[
           RowBox[{"Conjugate", "[", "z", "]"}]], "]"}], "\[NotEqual]", 
         "0"}]}], ")"}], "||", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{
         RowBox[{"Re", "[", 
          SqrtBox["z"], "]"}], ">", "0"}], "&&", 
        RowBox[{
         RowBox[{"Re", "[", 
          SqrtBox[
           RowBox[{"Conjugate", "[", "z", "]"}]], "]"}], ">", "0"}], "&&", 
        RowBox[{
         RowBox[{"Re", "[", "z", "]"}], "\[GreaterEqual]", "0"}]}], ")"}]}], 
     ")"}]}]}], "]"}]], "Output",
 CellChangeTimes->{3.738314202203726*^9, 3.7383187024298477`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"Assuming", "[", 
   RowBox[{
    RowBox[{"\[Theta]", "\[Element]", "Reals"}], ",", 
    RowBox[{"Integrate", "[", 
     RowBox[{
      FractionBox[
       RowBox[{" ", 
        RowBox[{
         SuperscriptBox["p", "2"], " ", 
         RowBox[{"Exp", "[", 
          RowBox[{"\[ImaginaryI]", " ", "p", " ", "r", " ", 
           RowBox[{"Cos", "[", "\[Theta]", "]"}]}], "]"}]}]}], 
       RowBox[{"(", 
        RowBox[{
         SuperscriptBox["p", "2"], "+", "z"}], ")"}]], ",", 
      RowBox[{"{", 
       RowBox[{"p", ",", "0", ",", "\[Infinity]"}], "}"}]}], "]"}]}], "]"}], "//",
   "FullSimplify"}]], "Input",
 CellChangeTimes->{
  3.7383142709412403`*^9, {3.738314704998056*^9, 3.738314707917225*^9}}],

Cell[BoxData[
 RowBox[{"ConditionalExpression", "[", 
  RowBox[{
   FractionBox[
    RowBox[{"\[ImaginaryI]", " ", 
     SqrtBox["z"], " ", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{"\[ImaginaryI]", " ", "\[Pi]", " ", "r", " ", 
        RowBox[{"Cosh", "[", 
         RowBox[{"r", " ", 
          SqrtBox["z"], " ", 
          RowBox[{"Cos", "[", "\[Theta]", "]"}]}], "]"}]}], "+", 
       FractionBox[
        RowBox[{"2", " ", 
         RowBox[{"Sec", "[", "\[Theta]", "]"}]}], 
        SqrtBox["z"]], "+", 
       RowBox[{"2", " ", "r", " ", 
        RowBox[{"CosIntegral", "[", 
         RowBox[{
          RowBox[{"-", "\[ImaginaryI]"}], " ", "r", " ", 
          SqrtBox["z"], " ", 
          RowBox[{"Cos", "[", "\[Theta]", "]"}]}], "]"}], " ", 
        RowBox[{"Sinh", "[", 
         RowBox[{"r", " ", 
          SqrtBox["z"], " ", 
          RowBox[{"Cos", "[", "\[Theta]", "]"}]}], "]"}]}], "-", 
       RowBox[{"2", " ", "r", " ", 
        RowBox[{"Cosh", "[", 
         RowBox[{"r", " ", 
          SqrtBox["z"], " ", 
          RowBox[{"Cos", "[", "\[Theta]", "]"}]}], "]"}], " ", 
        RowBox[{"SinhIntegral", "[", 
         RowBox[{"r", " ", 
          SqrtBox["z"], " ", 
          RowBox[{"Cos", "[", "\[Theta]", "]"}]}], "]"}]}]}], ")"}]}], 
    RowBox[{"2", " ", "r"}]], ",", 
   RowBox[{
    RowBox[{"(", 
     RowBox[{
      RowBox[{"(", 
       RowBox[{
        RowBox[{
         RowBox[{"Cos", "[", "\[Theta]", "]"}], "<", "0"}], "&&", 
        RowBox[{
         RowBox[{"Im", "[", "r", "]"}], "<", "0"}]}], ")"}], "||", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{
         RowBox[{"Cos", "[", "\[Theta]", "]"}], ">", "0"}], "&&", 
        RowBox[{
         RowBox[{"Im", "[", "r", "]"}], ">", "0"}]}], ")"}]}], ")"}], "&&", 
    RowBox[{"(", 
     RowBox[{
      RowBox[{"(", 
       RowBox[{
        RowBox[{
         RowBox[{"Im", "[", "z", "]"}], "\[NotEqual]", "0"}], "&&", 
        RowBox[{
         RowBox[{"Re", "[", 
          SqrtBox["z"], "]"}], "\[NotEqual]", "0"}]}], ")"}], "||", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{
         RowBox[{"Re", "[", 
          SqrtBox["z"], "]"}], ">", "0"}], "&&", 
        RowBox[{
         RowBox[{"Re", "[", "z", "]"}], "\[GreaterEqual]", "0"}]}], ")"}]}], 
     ")"}]}]}], "]"}]], "Output",
 CellChangeTimes->{3.7383142809371433`*^9, 3.738318715907674*^9}]
}, Open  ]]
}, Open  ]]
},
WindowSize->{1920, 1019},
WindowMargins->{{0, Automatic}, {0, 20}},
FrontEndVersion->"11.0 for Linux x86 (64-bit) (September 21, 2016)",
StyleDefinitions->"Default.nb"
]
(* End of Notebook Content *)

(* Internal cache information *)
(*CellTagsOutline
CellTagsIndex->{}
*)
(*CellTagsIndex
CellTagsIndex->{}
*)
(*NotebookFileOutline
Notebook[{
Cell[CellGroupData[{
Cell[580, 22, 89, 1, 65, "Section"],
Cell[672, 25, 5520, 164, 160, "Input"],
Cell[CellGroupData[{
Cell[6217, 193, 3008, 86, 107, "Input"],
Cell[9228, 281, 1794, 38, 437, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[11059, 324, 797, 18, 34, "Input"],
Cell[11859, 344, 22227, 382, 437, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[34123, 731, 337, 8, 34, "Input"],
Cell[34463, 741, 17020, 294, 367, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[51520, 1040, 2964, 87, 138, "Input"],
Cell[54487, 1129, 16541, 288, 478, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[71065, 1422, 1367, 39, 84, "Input"],
Cell[72435, 1463, 33404, 649, 234, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[105876, 2117, 979, 28, 95, "Input"],
Cell[106858, 2147, 6660, 125, 417, "Output"]
}, Open  ]],
Cell[113533, 2275, 1586, 46, 69, "Input"],
Cell[115122, 2323, 1561, 46, 69, "Input"],
Cell[CellGroupData[{
Cell[116708, 2373, 200, 5, 34, "Input"],
Cell[116911, 2380, 99, 1, 32, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[117047, 2386, 136, 3, 34, "Input"],
Cell[117186, 2391, 235, 4, 32, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[117458, 2400, 161, 3, 34, "Input"],
Cell[117622, 2405, 185, 3, 32, "Output"]
}, Open  ]],
Cell[117822, 2411, 271, 7, 49, "Input"],
Cell[118096, 2420, 4076, 105, 240, "Input"],
Cell[CellGroupData[{
Cell[122197, 2529, 161, 3, 34, "Input"],
Cell[122361, 2534, 310, 5, 32, "Output"]
}, Open  ]],
Cell[122686, 2542, 719, 21, 34, "Input"],
Cell[CellGroupData[{
Cell[123430, 2567, 504, 13, 34, "Input"],
Cell[123937, 2582, 18232, 481, 500, "Output"]
}, Open  ]],
Cell[142184, 3066, 68, 1, 32, "Input"],
Cell[CellGroupData[{
Cell[142277, 3071, 1021, 32, 57, "Input"],
Cell[143301, 3105, 1261, 37, 73, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[144599, 3147, 2527, 78, 135, "Input"],
Cell[147129, 3227, 77, 1, 32, "Output"]
}, Open  ]]
}, Closed]],
Cell[CellGroupData[{
Cell[147255, 3234, 110, 1, 51, "Section"],
Cell[147368, 3237, 517, 17, 80, "Input"],
Cell[147888, 3256, 5520, 164, 166, "Input"],
Cell[153411, 3422, 704, 18, 34, "Input"],
Cell[CellGroupData[{
Cell[154140, 3444, 417, 10, 34, "Input"],
Cell[154560, 3456, 3027, 78, 435, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[157624, 3539, 417, 10, 34, "Input"],
Cell[158044, 3551, 3002, 77, 398, "Output"]
}, Open  ]],
Cell[161061, 3631, 1498, 36, 51, "Input"],
Cell[CellGroupData[{
Cell[162584, 3671, 238, 5, 34, "Input"],
Cell[162825, 3678, 128, 2, 32, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[162990, 3685, 294, 9, 53, "Input"],
Cell[163287, 3696, 129, 2, 32, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[163453, 3703, 364, 7, 34, "Input"],
Cell[163820, 3712, 207, 4, 32, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[164064, 3721, 350, 9, 53, "Input"],
Cell[164417, 3732, 113, 1, 32, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[164567, 3738, 850, 24, 61, "Input"],
Cell[165420, 3764, 865, 15, 27, "Message"],
Cell[166288, 3781, 209, 3, 32, "Output"]
}, Open  ]],
Cell[166512, 3787, 828, 24, 61, "Input"],
Cell[CellGroupData[{
Cell[167365, 3815, 740, 21, 60, "Input"],
Cell[168108, 3838, 2163, 62, 82, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[170308, 3905, 735, 20, 60, "Input"],
Cell[171046, 3927, 880, 16, 27, "Message"],
Cell[171929, 3945, 231, 5, 32, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[172197, 3955, 615, 18, 60, "Input"],
Cell[172815, 3975, 742, 13, 23, "Message"],
Cell[173560, 3990, 107, 2, 32, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[173704, 3997, 1107, 35, 135, "Input"],
Cell[174814, 4034, 21056, 360, 331, "Output"],
Cell[195873, 4396, 181, 3, 32, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[196091, 4404, 1382, 36, 106, "Input"],
Cell[197476, 4442, 338, 6, 32, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[197851, 4453, 710, 19, 45, "Input"],
Cell[198564, 4474, 241, 3, 32, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[198842, 4482, 617, 20, 45, "Input"],
Cell[199462, 4504, 106, 2, 32, "Output"]
}, Open  ]],
Cell[199583, 4509, 1355, 36, 61, "Input"],
Cell[CellGroupData[{
Cell[200963, 4549, 973, 27, 34, "Input"],
Cell[201939, 4578, 4906, 94, 415, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[206882, 4677, 856, 24, 53, "Input"],
Cell[207741, 4703, 7564, 142, 463, "Output"]
}, Open  ]],
Cell[215320, 4848, 4176, 109, 211, "Input"],
Cell[CellGroupData[{
Cell[219521, 4961, 255, 5, 34, "Input"],
Cell[219779, 4968, 188, 4, 32, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[220004, 4977, 1844, 54, 69, "Input"],
Cell[221851, 5033, 210, 4, 32, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[222098, 5042, 2353, 63, 69, "Input"],
Cell[224454, 5107, 415, 10, 23, "Message"],
Cell[224872, 5119, 395, 8, 23, "Message"],
Cell[225270, 5129, 416, 10, 23, "Message"],
Cell[225689, 5141, 393, 8, 23, "Message"],
Cell[226085, 5151, 416, 10, 23, "Message"],
Cell[226504, 5163, 416, 10, 23, "Message"],
Cell[226923, 5175, 369, 8, 23, "Message"],
Cell[227295, 5185, 416, 10, 23, "Message"],
Cell[227714, 5197, 416, 10, 23, "Message"],
Cell[228133, 5209, 369, 8, 23, "Message"]
}, Open  ]],
Cell[CellGroupData[{
Cell[228539, 5222, 653, 16, 34, "Input"],
Cell[229195, 5240, 4861, 94, 574, "Output"]
}, Open  ]],
Cell[234071, 5337, 581, 16, 34, "Input"],
Cell[CellGroupData[{
Cell[234677, 5357, 143, 3, 34, "Input"],
Cell[234823, 5362, 76, 1, 32, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[234936, 5368, 497, 13, 34, "Input"],
Cell[235436, 5383, 6556, 123, 520, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[242029, 5511, 797, 24, 60, "Input"],
Cell[242829, 5537, 2914, 90, 91, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[245780, 5632, 717, 22, 61, "Input"],
Cell[246500, 5656, 3175, 94, 211, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[249712, 5755, 947, 26, 61, "Input"],
Cell[250662, 5783, 3819, 108, 111, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[254518, 5896, 999, 27, 65, "Input"],
Cell[255520, 5925, 3200, 97, 100, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[258757, 6027, 931, 26, 65, "Input"],
Cell[259691, 6055, 3878, 112, 111, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[263606, 6172, 742, 21, 65, "Input"],
Cell[264351, 6195, 2365, 69, 95, "Output"]
}, Open  ]]
}, Open  ]]
}
]
*)

