(*CacheID: 234*)
(* Internal cache information:
NotebookFileLineBreakTest
NotebookFileLineBreakTest
NotebookDataPosition[         0,          0]
NotebookDataLength[    709619,      14215]
NotebookOptionsPosition[    703452,      14016]
NotebookOutlinePosition[    703807,      14032]
CellTagsIndexPosition[    703764,      14029]
WindowFrame->Normal*)

(* Beginning of Notebook Content *)
Notebook[{
Cell[BoxData[{
 RowBox[{
  RowBox[{"SetDirectory", "[", 
   RowBox[{"ParentDirectory", "[", 
    RowBox[{"NotebookDirectory", "[", "]"}], "]"}], "]"}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Needs", "[", "\"\<ErrorBarPlots`\>\"", "]"}], ";"}]}], "Input",
 CellChangeTimes->{{3.726830841029643*^9, 3.7268308412828083`*^9}, {
  3.7422157674558773`*^9, 3.742215769884161*^9}, {3.742217260745666*^9, 
  3.74221726600983*^9}, {3.745325859439938*^9, 3.74532586674417*^9}}],

Cell[CellGroupData[{

Cell["4 loop running coupling", "Section",
 CellChangeTimes->{{3.733038025331724*^9, 3.733038035264956*^9}, {
  3.7330493983743973`*^9, 3.733049402685856*^9}, {3.73312956042422*^9, 
  3.733129594184086*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", " ", 
   RowBox[{
    RowBox[{
     RowBox[{"form", " ", "hep"}], "-", 
     RowBox[{"ph", " ", "9703284"}]}], ",", " ", "vermaseren", ",", " ", 
    "larin", ",", " ", "Ritbergen"}], " ", "*)"}], "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{"\[CapitalLambda]QCD", "=", "0.2145"}], ";"}], " ", 
   "\[IndentingNewLine]", 
   RowBox[{"(*", " ", 
    RowBox[{
     RowBox[{"so", " ", "that", " ", "for", " ", "nF"}], "=", 
     RowBox[{
      RowBox[{"5", " ", "we", " ", "get", " ", "alpha_s", 
       RowBox[{"(", 
        RowBox[{"mz", "=", "91.188"}], ")"}]}], "=", 
      RowBox[{
       RowBox[{"0.1185", " ", 
        RowBox[{"(", 
         RowBox[{"PDG", " ", "value"}], ")"}], " ", "\[IndentingNewLine]", 
        "note", " ", "that", " ", "pdg", " ", "also", " ", "quotes", " ", 
        "\[Lambda]qcd"}], "=", 
       RowBox[{
        RowBox[{"0.214", " ", "for", " ", "nf"}], "=", 
        RowBox[{
        "5", " ", "everything", " ", "seems", " ", "consistent"}]}]}]}]}], 
    "*)"}], "\[IndentingNewLine]", "\[IndentingNewLine]", 
   RowBox[{"(*", "QCD", "*)"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"Nc", "=", "3."}], ";", 
    RowBox[{"CA", "=", "Nc"}], ";", " ", 
    RowBox[{"nF", "=", "3"}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"CF", "=", 
     FractionBox[
      RowBox[{
       SuperscriptBox["Nc", "2"], "-", "1"}], 
      RowBox[{"2", " ", "Nc"}]]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{"(*", 
    RowBox[{
    "coeft", " ", "of", " ", "the", " ", "renormalization", " ", "group", " ",
      "equations"}], "*)"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"\[Beta]0", "[", "Nf_", "]"}], "=", 
     FractionBox[
      RowBox[{
       RowBox[{
        RowBox[{"-", "11"}], "Nc"}], "+", 
       RowBox[{"2", "Nf"}]}], "12"]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"\[Beta]1", "[", "Nf_", "]"}], "=", 
     FractionBox[
      RowBox[{
       RowBox[{
        RowBox[{"-", "68"}], 
        SuperscriptBox["Nc", "2"]}], "+", 
       RowBox[{"20", "Nc", " ", "Nf"}], "+", 
       RowBox[{"12", "CF", " ", "Nf"}]}], 
      RowBox[{"3", " ", "32"}]]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"\[Beta]2", "[", "Nf_", "]"}], "=", 
     RowBox[{"-", 
      FractionBox[
       RowBox[{"(", 
        RowBox[{"2857", "-", 
         RowBox[{
          FractionBox["5033", "9"], "Nf"}], "+", 
         RowBox[{
          FractionBox["325", "27"], " ", 
          SuperscriptBox["Nf", "2"]}]}], ")"}], "128"]}]}], ";"}], " ", 
   RowBox[{"(*", 
    RowBox[{
     RowBox[{"for", " ", "Nc"}], "=", 
     RowBox[{"3", " ", "only"}]}], "*)"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"\[Beta]3", "[", "Nf_", "]"}], "=", 
     RowBox[{
      FractionBox[
       RowBox[{"-", "1"}], "256"], 
      RowBox[{"(", 
       RowBox[{
        RowBox[{"(", 
         RowBox[{
          FractionBox["149753", "6"], "+", 
          RowBox[{"3564", " ", 
           RowBox[{"Zeta", "[", "3", "]"}]}]}], ")"}], "-", 
        RowBox[{
         RowBox[{"(", 
          RowBox[{
           FractionBox["1078361", "162"], "+", 
           RowBox[{
            FractionBox["6508", "27"], " ", 
            RowBox[{"Zeta", "[", "3", "]"}]}]}], ")"}], "Nf"}], "+", 
        RowBox[{
         RowBox[{"(", 
          RowBox[{
           FractionBox["50065", "162"], "+", 
           RowBox[{
            FractionBox["6472", "81"], 
            RowBox[{"Zeta", "[", "3", "]"}]}]}], ")"}], 
         SuperscriptBox["Nf", "2"]}], "+", 
        RowBox[{
         FractionBox["1093", "729"], " ", 
         SuperscriptBox["Nf", "3"]}]}], ")"}]}]}], ";"}], 
   RowBox[{"(*", 
    RowBox[{
     RowBox[{"for", " ", "Nc"}], "=", 
     RowBox[{"3", " ", "only"}]}], "*)"}], "\[IndentingNewLine]", 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"\[Gamma]0", "[", "Nf_", "]"}], "=", 
     RowBox[{
      FractionBox["3", "4"], " ", "CF"}]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"\[Gamma]1", "[", "Nf_", "]"}], "=", 
     RowBox[{
      FractionBox["1", "16"], 
      RowBox[{"(", 
       RowBox[{
        FractionBox["202", "3"], "-", 
        RowBox[{
         FractionBox["20", "9"], "Nf"}]}], ")"}]}]}], ";"}], 
   RowBox[{"(*", 
    RowBox[{
     RowBox[{"for", " ", "Nc"}], "=", 
     RowBox[{"3", " ", "only"}]}], "*)"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"\[Gamma]2", "[", "Nf_", "]"}], "=", 
     RowBox[{
      FractionBox["1", "64"], 
      RowBox[{"(", 
       RowBox[{"1249", "+", 
        RowBox[{
         RowBox[{"(", 
          RowBox[{
           RowBox[{"-", 
            FractionBox["2216", "27"]}], "-", 
           RowBox[{
            FractionBox["160", "3"], " ", 
            RowBox[{"Zeta", "[", "3", "]"}]}]}], ")"}], "Nf"}], "-", 
        RowBox[{
         FractionBox["140", "81"], " ", 
         SuperscriptBox["Nf", "2"]}]}], ")"}]}]}], ";"}], 
   RowBox[{"(*", 
    RowBox[{
     RowBox[{"for", " ", "Nc"}], "=", 
     RowBox[{"3", " ", "only"}]}], "*)"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"\[Gamma]3", "[", "Nf_", "]"}], "=", 
     RowBox[{
      FractionBox["1", "256"], 
      RowBox[{"(", 
       RowBox[{
        FractionBox["4603055", "162"], "+", 
        RowBox[{
         FractionBox["135680", "27"], " ", 
         RowBox[{"Zeta", "[", "3", "]"}]}], "-", 
        RowBox[{"8800", 
         RowBox[{"Zeta", "[", "5", "]"}]}], "+", 
        RowBox[{
         RowBox[{"(", 
          RowBox[{
           RowBox[{"-", 
            FractionBox["91723", "27"]}], "-", 
           RowBox[{
            FractionBox["34192", "9"], " ", 
            RowBox[{"Zeta", "[", "3", "]"}]}], "+", 
           RowBox[{"880", " ", 
            RowBox[{"Zeta", "[", "4", "]"}]}], "+", 
           RowBox[{
            FractionBox["18400", "9"], 
            RowBox[{"Zeta", "[", "5", "]"}]}]}], ")"}], "Nf"}], "+", 
        RowBox[{
         RowBox[{"(", 
          RowBox[{
           FractionBox["5242", "243"], "+", 
           RowBox[{
            FractionBox["800", "9"], " ", 
            RowBox[{"Zeta", "[", "3", "]"}]}], "-", 
           RowBox[{
            FractionBox["160", "3"], 
            RowBox[{"Zeta", "[", "4", "]"}]}]}], ")"}], 
         SuperscriptBox["Nf", "2"]}], "+", 
        RowBox[{
         RowBox[{"(", 
          RowBox[{
           RowBox[{"-", 
            FractionBox["332", "243"]}], "+", 
           RowBox[{
            FractionBox["64", "27"], " ", 
            RowBox[{"Zeta", "[", "3", "]"}]}]}], ")"}], 
         SuperscriptBox["Nf", "3"]}]}], ")"}]}]}], ";"}], 
   "\[IndentingNewLine]", "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"b0", "[", "Nf_", "]"}], "=", 
     RowBox[{"-", 
      FractionBox[
       RowBox[{"8", 
        RowBox[{"\[Beta]0", "[", "Nf", "]"}]}], 
       RowBox[{"2", 
        SuperscriptBox[
         RowBox[{"(", 
          RowBox[{"4", "\[Pi]"}], ")"}], "2"]}]]}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"b1", "[", "Nf_", "]"}], "=", 
     RowBox[{"-", 
      FractionBox[
       RowBox[{"32", " ", 
        RowBox[{"\[Beta]1", "[", "Nf", "]"}]}], 
       RowBox[{"2", 
        SuperscriptBox[
         RowBox[{"(", 
          RowBox[{"4", "\[Pi]"}], ")"}], "2"]}]]}]}], ";"}], 
   "\[IndentingNewLine]", "\[IndentingNewLine]", 
   RowBox[{"(*", " ", 
    RowBox[{
     RowBox[{
     "Initial", " ", "conditions", " ", "of", " ", "the", " ", "RG", " ", 
      "equations"}], ",", " ", 
     RowBox[{
     "\[Mu]", " ", "in", " ", "units", " ", "of", " ", 
      "\[CapitalLambda]_MSbar"}]}], " ", "*)"}], "\[IndentingNewLine]", 
   "\[IndentingNewLine]", 
   RowBox[{"(*", 
    RowBox[{
     RowBox[{
      RowBox[{"gf", "[", "\[Mu]_", "]"}], "=", 
      RowBox[{"1", "/", 
       SqrtBox[
        RowBox[{
         RowBox[{"2", " ", "b0", " ", 
          RowBox[{"Log", "[", "\[Mu]", "]"}]}], "+", 
         RowBox[{"b1", " ", 
          RowBox[{
           RowBox[{"Log", "[", 
            RowBox[{"2", " ", 
             RowBox[{"Log", "[", "\[Mu]", "]"}]}], "]"}], "/", 
           "b0"}]}]}]]}]}], ";"}], "*)"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"gf", "[", "t_", "]"}], "=", 
     FractionBox["1", 
      SqrtBox[
       RowBox[{
        RowBox[{
         RowBox[{"b0", "[", "Nf", "]"}], " ", "t"}], "+", 
        RowBox[{
         RowBox[{"b1", "[", "Nf", "]"}], " ", 
         RowBox[{
          RowBox[{"Log", "[", "t", "]"}], "/", 
          RowBox[{"b0", "[", "Nf", "]"}]}]}]}]]]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"asf", "[", 
      RowBox[{"t_", ",", "Nf_"}], "]"}], "=", 
     RowBox[{
      FractionBox[
       RowBox[{"-", "1"}], 
       RowBox[{
        RowBox[{"\[Beta]0", "[", "Nf", "]"}], " ", "t"}]], "-", 
      FractionBox[
       RowBox[{
        RowBox[{"\[Beta]1", "[", "Nf", "]"}], " ", 
        RowBox[{"Log", "[", "t", "]"}]}], 
       RowBox[{
        SuperscriptBox[
         RowBox[{"\[Beta]0", "[", "Nf", "]"}], "3"], " ", 
        SuperscriptBox["t", "2"]}]], "-", 
      FractionBox[
       RowBox[{" ", 
        RowBox[{
         RowBox[{
          SuperscriptBox[
           RowBox[{"\[Beta]1", "[", "Nf", "]"}], "2"], 
          RowBox[{"(", 
           RowBox[{
            SuperscriptBox[
             RowBox[{"Log", "[", "t", "]"}], "2"], "-", 
            RowBox[{"Log", "[", "t", "]"}], "-", "1"}], ")"}]}], "+", 
         RowBox[{
          RowBox[{"\[Beta]2", "[", "Nf", "]"}], " ", 
          RowBox[{"\[Beta]0", "[", "Nf", "]"}]}]}]}], 
       RowBox[{
        SuperscriptBox[
         RowBox[{"\[Beta]0", "[", "Nf", "]"}], "5"], 
        SuperscriptBox["t", "3"]}]], "+", 
      RowBox[{
       FractionBox["1", 
        RowBox[{
         SuperscriptBox[
          RowBox[{"\[Beta]0", "[", "Nf", "]"}], "7"], 
         SuperscriptBox["t", "4"]}]], 
       RowBox[{"(", " ", 
        RowBox[{
         RowBox[{
          SuperscriptBox[
           RowBox[{"\[Beta]1", "[", "Nf", "]"}], "3"], 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"-", 
             SuperscriptBox[
              RowBox[{"Log", "[", "t", "]"}], "3"]}], "+", 
            RowBox[{
             FractionBox["5", "2"], 
             SuperscriptBox[
              RowBox[{"Log", "[", "t", "]"}], "2"]}], "+", 
            RowBox[{"2", 
             RowBox[{"Log", "[", "t", "]"}]}], "-", 
            FractionBox["1", "2"]}], ")"}]}], "-", 
         RowBox[{"3", " ", 
          RowBox[{"\[Beta]1", "[", "Nf", "]"}], " ", 
          RowBox[{"\[Beta]2", "[", "Nf", "]"}], " ", 
          RowBox[{"\[Beta]0", "[", "Nf", "]"}], " ", 
          RowBox[{"Log", "[", "t", "]"}]}], "+", 
         RowBox[{
          FractionBox["1", "2"], 
          RowBox[{"\[Beta]3", "[", "Nf", "]"}], " ", 
          SuperscriptBox[
           RowBox[{"\[Beta]0", "[", "Nf", "]"}], "2"]}]}], ")"}]}]}]}], ";"}],
    "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"\[Mu]0", "=", "2"}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"t0", "=", 
     RowBox[{"Log", "[", 
      SuperscriptBox["\[Mu]0", "2"], "]"}]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"tf", "=", 
     RowBox[{"10000", " ", "t0"}]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{"(*", 
    RowBox[{
    "solution", " ", "of", " ", "the", " ", "RG", " ", "equation", " ", "to", 
     " ", "3", " ", "loop"}], "*)"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"mcharm", "=", "1.275"}], ";"}], 
   RowBox[{"(*", 
    RowBox[{"m", 
     RowBox[{"(", "m", ")"}], " ", "in", " ", "msbar"}], "*)"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"mbottom", "=", "4.18"}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"nf", "[", "t_", "]"}], "=", 
     RowBox[{"If", "[", 
      RowBox[{
       RowBox[{"t", "<", 
        RowBox[{"Log", "[", 
         FractionBox[
          SuperscriptBox["mcharm", "2"], 
          SuperscriptBox["\[CapitalLambda]QCD", "2"]], "]"}]}], ",", "3", ",", 
       RowBox[{"If", "[", 
        RowBox[{
         RowBox[{"t", "<", 
          RowBox[{"Log", "[", 
           FractionBox[
            SuperscriptBox["mbottom", "2"], 
            SuperscriptBox["\[CapitalLambda]QCD", "2"]], "]"}]}], ",", "4", 
         ",", "5"}], "]"}]}], "]"}]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"sg4", "=", 
     RowBox[{"Quiet", "[", 
      RowBox[{"NDSolve", "[", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{
          RowBox[{
           RowBox[{"D", "[", 
            RowBox[{
             RowBox[{"as", "[", "t", "]"}], ",", "t"}], "]"}], "\[Equal]", 
           RowBox[{
            RowBox[{
             RowBox[{"+", 
              RowBox[{"\[Beta]0", "[", 
               RowBox[{"nf", "[", "t", "]"}], "]"}]}], " ", 
             SuperscriptBox[
              RowBox[{"as", "[", "t", "]"}], "2"]}], "+", 
            RowBox[{
             RowBox[{"\[Beta]1", "[", 
              RowBox[{"nf", "[", "t", "]"}], "]"}], " ", 
             SuperscriptBox[
              RowBox[{"as", "[", "t", "]"}], "3"]}], "+", " ", 
            RowBox[{
             RowBox[{"\[Beta]2", "[", 
              RowBox[{"nf", "[", "t", "]"}], "]"}], " ", 
             SuperscriptBox[
              RowBox[{"as", "[", "t", "]"}], "4"]}], "+", " ", 
            RowBox[{
             RowBox[{"\[Beta]3", "[", 
              RowBox[{"nf", "[", "t", "]"}], "]"}], " ", 
             SuperscriptBox[
              RowBox[{"as", "[", "t", "]"}], "5"]}]}]}], ",", 
          RowBox[{
           RowBox[{"as", "[", "tf", "]"}], "\[Equal]", 
           RowBox[{"asf", "[", 
            RowBox[{"tf", ",", 
             RowBox[{"nf", "[", "tf", "]"}]}], "]"}]}]}], "}"}], ",", "as", 
        ",", 
        RowBox[{"{", 
         RowBox[{"t", ",", "t0", ",", "tf"}], "}"}], ",", 
        RowBox[{"AccuracyGoal", "\[Rule]", "14"}], ",", 
        RowBox[{"WorkingPrecision", "\[Rule]", "32"}], ",", 
        RowBox[{"MaxSteps", "\[Rule]", "10000000"}]}], "]"}], "]"}]}], ";"}], 
   "\[IndentingNewLine]", "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"a4t", "[", "t_", "]"}], "=", " ", 
     RowBox[{"Part", "[", 
      RowBox[{
       RowBox[{"Evaluate", "[", 
        RowBox[{
         RowBox[{"as", "[", "t", "]"}], "/.", "sg4"}], "]"}], ",", "1"}], 
      "]"}]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"g4", "[", "\[Mu]_", "]"}], "=", 
     RowBox[{"2", " ", "\[Pi]", " ", 
      SqrtBox[
       RowBox[{"Part", "[", 
        RowBox[{
         RowBox[{"Evaluate", "[", 
          RowBox[{
           RowBox[{"as", "[", 
            RowBox[{"Log", "[", 
             FractionBox[
              SuperscriptBox["\[Mu]", "2"], 
              SuperscriptBox["\[CapitalLambda]QCD", "2"]], "]"}], "]"}], "/.",
            "sg4"}], "]"}], ",", "1"}], "]"}]]}]}], ";"}]}]}]], "Input",
 CellChangeTimes->{{3.722603722510141*^9, 3.72260372344028*^9}, {
   3.722604106111541*^9, 3.722604106838868*^9}, {3.722758514249189*^9, 
   3.72275851575694*^9}, {3.722759338268147*^9, 3.7227593794887047`*^9}, 
   3.722941350741787*^9, 3.725272685733177*^9, {3.7257977704878893`*^9, 
   3.725797773117529*^9}, {3.728106253645876*^9, 3.728106267238208*^9}, {
   3.728106981843108*^9, 3.72810698836581*^9}, {3.728107035483563*^9, 
   3.728107083980345*^9}, {3.728107191150432*^9, 3.7281072205275097`*^9}, {
   3.7289260533327723`*^9, 3.728926057125319*^9}, {3.728926987957735*^9, 
   3.728927012966138*^9}, {3.733038068527727*^9, 3.733038137498209*^9}, {
   3.733038320612577*^9, 3.7330383210148697`*^9}, {3.7330540354197693`*^9, 
   3.7330540356914186`*^9}, {3.733129571506283*^9, 3.73312957588968*^9}, {
   3.7422918081618557`*^9, 3.742291816377472*^9}, {3.742300291771085*^9, 
   3.742300292679388*^9}}]
}, Closed]],

Cell[CellGroupData[{

Cell["Generate Spectral Functions", "Section",
 CellChangeTimes->{{3.721037028308626*^9, 3.72103703898452*^9}, {
  3.725797990517199*^9, 3.725797994993998*^9}}],

Cell[BoxData[{
 RowBox[{
  RowBox[{"R", "=", "20000"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Mc", "=", "1.4689725245671532`"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Mb", "=", "4.882"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"kfinal", "=", 
    RowBox[{"{", 
     RowBox[{"0.6802525363662164`", ",", 
      RowBox[{"-", "0.31465604392609736`"}]}], "}"}]}], ";"}], 
  RowBox[{"(*", 
   RowBox[{"100", "k", " ", "run"}], "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"kfinalu", "=", 
   RowBox[{"{", 
    RowBox[{"0.9017845365143496`", ",", 
     RowBox[{"-", "0.3669424499609976`"}]}], "}"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"kfinall", "=", 
   RowBox[{"{", 
    RowBox[{"0.4587205362180833`", ",", 
     RowBox[{"-", "0.26236963789119705`"}]}], "}"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"\[Alpha]cont", "=", 
    RowBox[{"{", 
     RowBox[{"0.5146004500017507`", ",", "0.002579680095957094`"}], "}"}]}], 
   ";"}], 
  RowBox[{"(*", 
   RowBox[{"10", "k", " ", "run"}], "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"\[Sigma]cont", "=", 
   RowBox[{"{", 
    RowBox[{"0.16904257426266697`", ",", "0.0009046347484072015`"}], "}"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"ccont", "=", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"-", "0.15782092474161866`"}], ",", "0.0024785523617348124`"}], 
    "}"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"conv", "=", "0.197327"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"rsbvac", "=", "1.542442506842263`"}], ";"}]}], "Input",
 CellChangeTimes->{{3.7422993784399157`*^9, 3.742299414675289*^9}, {
   3.7422995639032173`*^9, 3.742299568734294*^9}, {3.742300057817206*^9, 
   3.742300073064109*^9}, 3.745325935588238*^9, 3.7453259706451406`*^9, 
   3.7453260061502438`*^9, {3.7453261461583*^9, 3.745326156923254*^9}, {
   3.746440587352221*^9, 3.746440600159244*^9}, 3.7464409114150867`*^9, 
   3.74644466897504*^9}],

Cell[CellGroupData[{

Cell["Define required functions", "Subsection",
 CellChangeTimes->{{3.726381295754898*^9, 3.726381308641871*^9}}],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"ImVc1", "[", 
    RowBox[{"r_", ",", "mD_", ",", "\[Alpha]_", ",", "T_"}], "]"}], ":=", 
   RowBox[{"T", " ", "\[Alpha]", " ", 
    RowBox[{"(", 
     RowBox[{"1", "-", 
      RowBox[{
       FractionBox["1", "2"], " ", 
       SqrtBox["\[Pi]"], " ", 
       RowBox[{"MeijerG", "[", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{
           RowBox[{"{", "0", "}"}], ",", 
           RowBox[{"{", "}"}]}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{"0", ",", "1"}], "}"}], ",", 
           RowBox[{"{", 
            RowBox[{"-", 
             FractionBox["1", "2"]}], "}"}]}], "}"}], ",", 
         FractionBox[
          RowBox[{
           SuperscriptBox["mD", "2"], " ", 
           SuperscriptBox["r", "2"]}], "4"]}], "]"}]}]}], ")"}]}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"ImVc", "[", 
    RowBox[{"r_", ",", "mD_", ",", "\[Alpha]_", ",", "T_"}], "]"}], ":=", 
   RowBox[{"T", " ", "\[Alpha]", " ", 
    RowBox[{"Quiet", "[", 
     RowBox[{"2", 
      RowBox[{"NIntegrate", "[", 
       RowBox[{
        RowBox[{
         FractionBox["z", 
          SuperscriptBox[
           RowBox[{"(", 
            RowBox[{
             SuperscriptBox["z", "2"], "+", "1"}], ")"}], "2"]], 
         RowBox[{"(", 
          RowBox[{"1", "-", 
           RowBox[{"Sinc", "[", 
            RowBox[{"mD", " ", "r", " ", "z"}], "]"}]}], ")"}]}], ",", 
        RowBox[{"{", 
         RowBox[{"z", ",", "0", ",", "\[Infinity]"}], "}"}]}], "]"}]}], 
     "]"}]}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"ImVs", "[", 
    RowBox[{"r_", ",", "mD_", ",", "\[Sigma]_", ",", "T_"}], "]"}], ":=", 
   RowBox[{
    FractionBox["1", "4"], " ", "mD", " ", 
    SqrtBox["\[Pi]"], " ", 
    SuperscriptBox["r", "3"], " ", "T", " ", "\[Sigma]", " ", 
    RowBox[{"MeijerG", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{
          RowBox[{"-", 
           FractionBox["1", "2"]}], ",", 
          RowBox[{"-", 
           FractionBox["1", "2"]}]}], "}"}], ",", 
        RowBox[{"{", "}"}]}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{
          FractionBox["1", "2"], ",", 
          FractionBox["1", "2"]}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"-", 
           FractionBox["3", "2"]}], ",", 
          RowBox[{"-", "1"}]}], "}"}]}], "}"}], ",", 
      FractionBox[
       RowBox[{
        SuperscriptBox["mD", "2"], " ", 
        SuperscriptBox["r", "2"]}], "4"]}], "]"}]}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"ImV", "[", 
    RowBox[{"r_", ",", "mD_", ",", "\[Alpha]_", ",", "\[Sigma]_", ",", "T_"}],
     "]"}], ":=", 
   RowBox[{
    RowBox[{"T", " ", "\[Alpha]", " ", 
     RowBox[{"(", 
      RowBox[{"1", "-", 
       RowBox[{
        FractionBox["1", "2"], " ", 
        SqrtBox["\[Pi]"], " ", 
        RowBox[{"MeijerG", "[", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{
            RowBox[{"{", "0", "}"}], ",", 
            RowBox[{"{", "}"}]}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"{", 
             RowBox[{"0", ",", "1"}], "}"}], ",", 
            RowBox[{"{", 
             RowBox[{"-", 
              FractionBox["1", "2"]}], "}"}]}], "}"}], ",", 
          FractionBox[
           RowBox[{
            SuperscriptBox["mD", "2"], " ", 
            SuperscriptBox["r", "2"]}], "4"]}], "]"}]}]}], ")"}]}], "+", 
    RowBox[{
     FractionBox["1", "4"], " ", "mD", " ", 
     SqrtBox["\[Pi]"], " ", 
     SuperscriptBox["r", "3"], " ", "T", " ", "\[Sigma]", " ", 
     RowBox[{"MeijerG", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{
           RowBox[{"-", 
            FractionBox["1", "2"]}], ",", 
           RowBox[{"-", 
            FractionBox["1", "2"]}]}], "}"}], ",", 
         RowBox[{"{", "}"}]}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{
           FractionBox["1", "2"], ",", 
           FractionBox["1", "2"]}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"-", 
            FractionBox["3", "2"]}], ",", 
           RowBox[{"-", "1"}]}], "}"}]}], "}"}], ",", 
       FractionBox[
        RowBox[{
         SuperscriptBox["mD", "2"], " ", 
         SuperscriptBox["r", "2"]}], "4"]}], "]"}]}]}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"ReV", "[", 
    RowBox[{"r_", ",", "m_", ",", "\[Alpha]_", ",", "\[Sigma]_", ",", "c_"}], 
    "]"}], ":=", 
   RowBox[{"c", "-", 
    RowBox[{"\[Alpha]", " ", "m"}], "-", 
    RowBox[{"\[Alpha]", 
     FractionBox[
      RowBox[{"Exp", "[", 
       RowBox[{
        RowBox[{"-", "m"}], " ", "r"}], "]"}], "r"]}], "+", 
    FractionBox[
     RowBox[{"2", " ", "\[Sigma]"}], "m"], "-", 
    FractionBox[
     RowBox[{
      SuperscriptBox["\[ExponentialE]", 
       RowBox[{
        RowBox[{"-", "m"}], " ", "r"}]], " ", 
      RowBox[{"(", 
       RowBox[{"2", "+", 
        RowBox[{"m", " ", "r"}]}], ")"}], " ", "\[Sigma]"}], "m"]}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"ReVc", "[", 
    RowBox[{"r_", ",", "m_", ",", "\[Alpha]_", ",", "c_"}], "]"}], ":=", 
   RowBox[{"c", "-", 
    RowBox[{"\[Alpha]", " ", "m"}], "-", 
    RowBox[{"\[Alpha]", 
     FractionBox[
      RowBox[{"Exp", "[", 
       RowBox[{
        RowBox[{"-", "m"}], " ", "r"}], "]"}], "r"]}]}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"ReVs", "[", 
    RowBox[{"r_", ",", "m_", ",", "\[Sigma]_"}], "]"}], ":=", 
   RowBox[{
    FractionBox[
     RowBox[{"2", " ", "\[Sigma]"}], "m"], "-", 
    FractionBox[
     RowBox[{
      SuperscriptBox["\[ExponentialE]", 
       RowBox[{
        RowBox[{"-", "m"}], " ", "r"}]], " ", 
      RowBox[{"(", 
       RowBox[{"2", "+", 
        RowBox[{"m", " ", "r"}]}], ")"}], " ", "\[Sigma]"}], "m"]}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"ReVm0", "[", 
   RowBox[{"r_", ",", "\[Alpha]_", ",", "\[Sigma]_", ",", "c_"}], "]"}], ":=", 
  RowBox[{
   FractionBox[
    RowBox[{"-", "\[Alpha]"}], "r"], "+", 
   RowBox[{"\[Sigma]", " ", "r"}], "+", "c"}]}]}], "Input",
 CellChangeTimes->{{3.726314830177012*^9, 3.726314831502235*^9}, {
   3.727440050934029*^9, 3.72744006900066*^9}, {3.727440105160881*^9, 
   3.72744018557771*^9}, 3.742215933829735*^9, {3.742216557912931*^9, 
   3.7422165749213457`*^9}, {3.743503313030858*^9, 3.743503313892556*^9}, {
   3.743503595861423*^9, 3.743503635413424*^9}, {3.74350366900007*^9, 
   3.7435036693702087`*^9}, {3.745326036206037*^9, 3.7453260766277523`*^9}, {
   3.745482701111857*^9, 3.745482718072043*^9}, {3.745574124796708*^9, 
   3.745574141941175*^9}, {3.745575311385284*^9, 3.745575329696678*^9}, {
   3.745575550614532*^9, 3.745575581433758*^9}, {3.74557562828763*^9, 
   3.745575628386141*^9}, {3.74618312221286*^9, 3.746183139034585*^9}, {
   3.746439916091353*^9, 3.746439932573696*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"mDcal", "[", 
    RowBox[{"\[Mu]_", ",", "T_", ",", "c_", ",", "d_"}], "]"}], ":=", 
   RowBox[{"Re", "[", 
    RowBox[{
     RowBox[{
      RowBox[{"Sqrt", "[", 
       RowBox[{
        FractionBox["Nc", "3"], "+", 
        FractionBox["nF", "6"]}], "]"}], 
      RowBox[{"g4", "[", 
       RowBox[{"\[Mu]", " ", "T"}], "]"}], "T"}], "+", 
     RowBox[{
      FractionBox["1", 
       RowBox[{"4", "\[Pi]"}]], "Nc", " ", 
      SuperscriptBox[
       RowBox[{"g4", "[", 
        RowBox[{"\[Mu]", " ", "T"}], "]"}], "2"], " ", "T", " ", 
      RowBox[{"Log", "[", 
       FractionBox[
        RowBox[{"Sqrt", "[", 
         RowBox[{
          FractionBox["Nc", "3"], "+", 
          FractionBox["nF", "6"]}], "]"}], 
        RowBox[{"g4", "[", 
         RowBox[{"\[Mu]", " ", "T"}], "]"}]], "]"}]}], "+", 
     RowBox[{"c", " ", 
      SuperscriptBox[
       RowBox[{"g4", "[", 
        RowBox[{"\[Mu]", " ", "T"}], "]"}], "2"], " ", "T"}], "+", 
     RowBox[{"d", " ", 
      SuperscriptBox[
       RowBox[{"g4", "[", 
        RowBox[{"\[Mu]", " ", "T"}], "]"}], "3"], "T"}]}], " ", "]"}]}], 
  ";"}]], "Input",
 CellChangeTimes->{{3.733119265141554*^9, 3.733119265474297*^9}, {
   3.74221632141649*^9, 3.742216327416469*^9}, {3.7422976352608967`*^9, 
   3.742297638871463*^9}, 3.742297734696323*^9, {3.7422994189974327`*^9, 
   3.742299421228344*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell["Plot potentials", "Subsection",
 CellChangeTimes->{{3.726381295754898*^9, 3.726381308641871*^9}, {
  3.7455753009095373`*^9, 3.745575306157651*^9}}],

Cell[CellGroupData[{

Cell["Charmonium", "Subsubsection",
 CellChangeTimes->{{3.746440989509119*^9, 3.746440995923678*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Tscancorig", "=", 
  RowBox[{"Join", "[", 
   RowBox[{
    RowBox[{"Table", "[", 
     RowBox[{"i", ",", 
      RowBox[{"{", 
       RowBox[{"i", ",", "0.15", ",", "0.16", ",", "0.001"}], "}"}]}], "]"}], 
    ",", 
    RowBox[{"Table", "[", 
     RowBox[{"i", ",", 
      RowBox[{"{", 
       RowBox[{"i", ",", "0.162", ",", "0.299", ",", "0.003"}], "}"}]}], 
     "]"}]}], "]"}]}]], "Input"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
  "0.15`", ",", "0.151`", ",", "0.152`", ",", "0.153`", ",", "0.154`", ",", 
   "0.155`", ",", "0.156`", ",", "0.157`", ",", "0.158`", ",", "0.159`", ",", 
   "0.16`", ",", "0.162`", ",", "0.165`", ",", "0.168`", ",", "0.171`", ",", 
   "0.17400000000000002`", ",", "0.177`", ",", "0.18`", ",", "0.183`", ",", 
   "0.186`", ",", "0.189`", ",", "0.192`", ",", "0.195`", ",", "0.198`", ",", 
   "0.201`", ",", "0.20400000000000001`", ",", "0.20700000000000002`", ",", 
   "0.21000000000000002`", ",", "0.21300000000000002`", ",", "0.216`", ",", 
   "0.219`", ",", "0.222`", ",", "0.225`", ",", "0.228`", ",", "0.231`", ",", 
   "0.234`", ",", "0.237`", ",", "0.24`", ",", "0.243`", ",", "0.246`", ",", 
   "0.249`", ",", "0.252`", ",", "0.255`", ",", "0.258`", ",", "0.261`", ",", 
   "0.264`", ",", "0.267`", ",", "0.27`", ",", "0.273`", ",", "0.276`", ",", 
   "0.279`", ",", "0.28200000000000003`", ",", "0.28500000000000003`", ",", 
   "0.28800000000000003`", ",", "0.29100000000000004`", ",", 
   "0.29400000000000004`", ",", "0.29700000000000004`"}], "}"}]], "Output",
 CellChangeTimes->{3.746440525452425*^9, 3.746440604302692*^9, 
  3.746446957780675*^9, 3.7465082503213873`*^9, 3.7465968619452553`*^9, 
  3.746596929632842*^9, 3.746618790748712*^9, 3.7466191649522543`*^9, 
  3.746712445272482*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"ReVplot", "=", 
   RowBox[{"Table", "[", 
    RowBox[{
     RowBox[{"ReV", "[", 
      RowBox[{
       FractionBox["r", "0.197"], ",", 
       RowBox[{"mDcal", "[", 
        RowBox[{
         RowBox[{"2", "\[Pi]"}], ",", 
         RowBox[{"Tscancorig", "[", 
          RowBox[{"[", 
           RowBox[{"5", " ", "l"}], "]"}], "]"}], ",", 
         RowBox[{"kfinal", "[", 
          RowBox[{"[", "1", "]"}], "]"}], ",", 
         RowBox[{"kfinal", "[", 
          RowBox[{"[", "2", "]"}], "]"}]}], "]"}], ",", 
       RowBox[{"\[Alpha]cont", "[", 
        RowBox[{"[", "1", "]"}], "]"}], ",", 
       RowBox[{"\[Sigma]cont", "[", 
        RowBox[{"[", "1", "]"}], "]"}], ",", 
       RowBox[{"ccont", "[", 
        RowBox[{"[", "1", "]"}], "]"}]}], "]"}], ",", 
     RowBox[{"{", 
      RowBox[{"l", ",", 
       RowBox[{
        RowBox[{"Length", "[", "Tscancorig", "]"}], "/", "5"}]}], "}"}]}], 
    "]"}]}], ";"}], "\n", 
 RowBox[{"Plot", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"ReVplot", ",", 
     RowBox[{"ReVm0", "[", 
      RowBox[{
       FractionBox["r", "0.197"], ",", 
       RowBox[{"\[Alpha]cont", "[", 
        RowBox[{"[", "1", "]"}], "]"}], ",", 
       RowBox[{"\[Sigma]cont", "[", 
        RowBox[{"[", "1", "]"}], "]"}], ",", 
       RowBox[{"ccont", "[", 
        RowBox[{"[", "1", "]"}], "]"}]}], "]"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"r", ",", "0", ",", "5"}], "}"}], ",", 
   RowBox[{"AxesStyle", "\[Rule]", 
    RowBox[{"Directive", "[", 
     RowBox[{
      RowBox[{"FontSize", "\[Rule]", "25"}], ",", 
      RowBox[{"Thickness", "\[Rule]", "0.004"}], ",", 
      RowBox[{"FontFamily", "\[Rule]", "\"\<Helvetica\>\""}], ",", "Black"}], 
     "]"}]}], ",", 
   RowBox[{"BaseStyle", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"FontSize", "\[Rule]", "14"}], "}"}]}], ",", 
   RowBox[{"AspectRatio", "\[Rule]", "0.85"}], ",", 
   RowBox[{"AxesLabel", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"\"\<r [fm]\>\"", ",", "\"\<Re[V]\>\""}], "}"}]}], ",", 
   RowBox[{"ImageSize", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"1200", ",", "1200"}], "}"}]}], ",", 
   RowBox[{"PlotRange", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"-", "1.5"}], ",", "2"}], "}"}]}], ",", 
   RowBox[{"GridLines", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"rsbvac", " ", "conv"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"ReVm0", "[", 
        RowBox[{"rsbvac", ",", 
         RowBox[{"\[Alpha]cont", "[", 
          RowBox[{"[", "1", "]"}], "]"}], ",", 
         RowBox[{"\[Sigma]cont", "[", 
          RowBox[{"[", "1", "]"}], "]"}], ",", 
         RowBox[{"ccont", "[", 
          RowBox[{"[", "1", "]"}], "]"}]}], "]"}], "}"}]}], "}"}]}], ",", 
   RowBox[{"GridLinesStyle", "\[Rule]", 
    RowBox[{"Directive", "[", 
     RowBox[{"Gray", ",", " ", "Dashed"}], "]"}]}], ",", 
   RowBox[{"BaseStyle", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"FontSize", "\[Rule]", "14"}], "}"}]}]}], "]"}]}], "Input",
 CellChangeTimes->{{3.746183624028306*^9, 3.74618366484877*^9}, {
   3.7463520913952417`*^9, 3.746352094451281*^9}, {3.746352176918899*^9, 
   3.746352188086228*^9}, 3.746440484221635*^9, {3.746440529996839*^9, 
   3.746440573505938*^9}}],

Cell[BoxData[
 GraphicsBox[{{{}, {}, 
    TagBox[
     {RGBColor[0.368417, 0.506779, 0.709798], AbsoluteThickness[1.6], Opacity[
      1.], LineBox[CompressedData["
1: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
yF6eSzjKi2trBDpoqSkus24O/gV1Zyxh
       "]], LineBox[CompressedData["
1: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
rk5+
       "]], LineBox[CompressedData["
1:eJwdyQk41PkfB3CMyroWv/+/VazSOnIkSa0rn+92UFhppbClTDk6NmyRpVrl
GG0RZWs6JJIlS0tDOb/uYzANYmLIMYbM/AbTkFHSzv//fp73835ez1ufGvJT
gIKcnFySrP/bUdqZpMK0YpD7f6RY60GLgphTDE/tow0rns7jT+qleaEOz8HR
lMd/bTWPxy4/9ph59Bz8uu0fXsUfcGnQpYfTJxhgRTyfes6fwxn9p3aFsBhQ
py05WHhpDif+6ENOWZWAtqN6sJvOHPbdbG039akEclg5vHy/WbwjR3/kl6Ol
0L9mZIfWsllsvurrRFFDKZj+d/BuQKEELy1N9pBJL2Brw62gbV9JcCYzI0y4
pgyW/nD10R0Q41l6ienQ9TJwCt5jEpkixk5BbbyuhTKoEN/3+c5ZjEnKvFd5
dzl0lY55zZfPYJtt7nZXaZXAqeDZ1JydxtdUjksuzFbCCxtdEf/TFH7b99vf
of5VsMll/JwNbQrHRTzR87avhkM7N7H7c0SY/WxRwXgag9rATU75chJrwVd+
ahY18OGV94fBbCG2N0qzox2vAWsKl+68S4iTZ/MkUZ01YBaTuur2dQG2Tu0J
oObXgsfLzLNiq0n8O9PcZdOReth9evMNNfY4zi16YZT/Zz1YczYUmv4xjrvo
2ymG7fXw0Gq6IGXXODYI8q7Utm0As6pwUq2Gj5mUOAs5ohFyve116uvG8Mpt
XK1XTU1w72Rb48z8KEYGgdO7PzeB03qdOFrdKD6hIm6r29wM6rknlAVJo7iy
b3l86aNm0IpQTlo0GsXUCKv59KgWWNOs+K7FfwQXPrvKPW3BBGRK2piTQ1ig
Jbju4s+E3MrIZvUHQ9g4wsVxfZrspzp7DroN4UcOKpm8BSaMwd5ak6K3+Gbr
9UDfxjZQiujsnY8dxBG8G2LnQx1g4eRQftudi4udZrIMb3TAAcxwW6nCxdN5
HvspdR3AGJMed2zpx8Ghmi+qjVkQSrVSi97Zj30/37ywRcICae2Z7Xt39uEM
lbZYzV1saNk8HyD042DHbdGHYvzYYBDv03rLgIMHzphtmT7PBkv+2aWXgl6s
3XVtvP0pG3JXhK8Pi+zFqXS3PYkancBs8Dnqd7cHxxqy1L9wO6G4wfrSlelu
HASdd8lfu4FFi9R+NsLGclkfyrnXuqHyu25pCION6Yq6A8zsbqjprLkfSWPj
ltZAvbzebkiMX6d/2IKN1+9fzAqwew3Z2e81/1li4XfBxn+/le+Bma2E5LZv
Oz5582I1O6UXGEwvjk9QM1aYyxrCeb1gbqvbQ9NpxvcOtsg9q5NZ7iP1P+wm
zNQldiTN9kLDXZfKnXZN2Oyv3OY93hwgw/T3jmk1YrKim1235g3IsSSfHV7X
4TN8Ex6jsA9Q0YYVJuuq8LBfn1Jtax/QTWuOHrhViT3fJFp0jPVBok4zde2y
SmzTNvEbf3U/sIu8HscKyjGl6InGSlo/PIrqCPOpfInpF/Qdzx/hQm6/dZwg
ioFriVV3bTUGISbBftKYkYuV9eOMh2yGoebxRren43HQ4pC68dKuYYix5FZe
3poICd4Pv//2J5kbC1qlsddAIeWl88+nhuHo1b7TQpVU+LhEBnHShwHt3j7D
S70DwgGv3FcKI4AyorZ+2ZwF7XRjk5r2EXj0A3VrT3YhJGu0mWYe5YFGlmfY
SfUKoHL3Y0r7OEjVVqRhsgXCGuOoIcYCyK3ax/U53AlFoaqe2ntEcOC34BL3
sB7IjD4lsDw4A5Z0j0JOcB9cyVjcN0uKYbI7dyK+agDkuodRZZQELDT4ikrF
Q2B0LjByv+kcLAZ434hyHYGxuTsHVKo+gMaD1a8dY0fBhX/y4s0wKSz5mdZW
PeeB+1iKmZ7eR3jz5mjmIh4DQT01pqXgE0QHFhS7Z/LBQrP32x1HPkPeoUOK
qy+OgzLM+Q9IluB2733Wni0T4CzynV/nJYcSwtLtrN9NwJu64/K+5vLIQ0dw
XBr3DkoSG/zWzsmjcPkXXYsrJiFwWfgwi6WAMs8nl31Nm4Rjv0aXqN6joIM3
o75RFE/CxiAzlpu/IppfqW1q5i6AV1rmKuG2y9AUy2rXyVwBVBReuW9OWY4Y
IYfvx0gEEC1v6tE+uBx5Lg3HztsLQXkgavcZxgo09efAZaVoIfBz9NMyLiih
xcvpEcHPhJC2fpVimddXSExBwcIRIaTcC2z2X6uM5CykxkwVEnzTDrNUJ5TR
S35ZabAlCdKdTxYyqlXQSU5yU6knCTz+9sg6mipSki8JmQklIWvbJp0OfzVk
674tXTGJhIL4cM2gDepoevMnJdtsEmhex1wpc+roe929g+dekrBlIDOP1vE1
qs85kMpvI4Fucr+gw1UDDZc+2PCeS8LvNUl01zINdMS1kOEhJOFHHa8nTANN
9Pyc8NgdKQk/nGn+WfOqJqq6TOI/KCLI0KUatM9poo7VTEUldREY1P912/1n
LXQrIaI9f6UIUjbUmXZVayGjkF9aLfREEChR7Gw1JdBFG/otf0MRUIver716
g0Am512j3c1EcPqK56JLKoFUHSoOBskc7sngqN4iUELnC6MYmRPnwpNTbhOo
ffrsgyKZC20XPt1JJ9B0afUEYS6ChdovvTn5BLKhtlB6ZU7pUk1qaCbQieuO
VzwsRHDv8S/BCa0ECn3aVRUk8+NzrB272wjU1sgmL8lcujLlYxuLQGcLDA0L
ZB7wJYK7ewiklUx+UdooAmPeqh2jPAKl15Ycq5bZkhGll80nkIWTYt9rme3i
uQsBEwRq0jPaLpTZzTj9n0kBgfTyP09/YymCX0+t1ROLCTSc/E95qMwXHC4v
FEsIRDdxf5Ugc7za6OtzcwRi/v6e80Bm+rPH16RSAu3tDm5skTkrRjGo/COB
Kq44P30rc/6+gO0XFgnUv88pdlZmxrqmbx2XCBSbespDeZMIqiVGC1++EGjP
jSrNtTL/C+uRi2Y=
       "]], LineBox[CompressedData["
1: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
z58JFC+OM7Gi/B/+dKbq
       "]], LineBox[CompressedData["
1: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
s5Cg8yNWOXHxtBTn929yfx1SnPfE/wfAm7MT
       "]], LineBox[CompressedData["
1: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
fvc/OrJw06htxS6ckltYWcH53DCQJLH/D2N5IfA=
       "]], LineBox[CompressedData["
1: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
       "]], 
      LineBox[CompressedData["
1:eJwd13c8Vt8fAPDHHo/xjIYkqZAiu9L8nChSviUrSUIySjIaVguFkFGZWUlC
UTIKufZ4BooUqciWbNn5Hb/7z329X/fc8zmfcz6vc+/ZYH3Z4DwniUQa5iCR
lu++EeI/u5g5QPr/NUPQntRyjn3JAS+53hddo9PEvEh+uvPet6A/Xrfd2nOa
6L6Toj+a9BZulh/X8uKfJvLtbiaMOOSCBMO1x1HlL5HYdvHQ5fpcoGUWn2Aw
p4iA/04NDavmgZR/+hzDYYowU1PfPTyfB//C/l0dzp4ktJ5v6LxkmQ+qhi5a
+ScnCYU1ogF/KvNhP1kg/QLnJPHv38DnoZACaGQ6BHJZThDJjESX3+vfg2tf
fLmlxjgxGZ239Wfwe+Cf/darMTxGaNsxuz7NvofSt6/XWD4fI4a4po0Lmwqh
Wnafuvy6MUJj37Hdgf7FsC/BZ+nfhlEiiGwz4T1ZDFXMBl6xhhHiR6vHS2er
D6AX+PSaxZkRwu9aqqTpnhL4/eCvR5/PMNGYvcC5eYSAyzYmfWHDQwQNBCyE
FUvhy6qJt6mhQ8Qe2Ue7/W1KQW2QziKpDREPJtMnPD+WwsHa/DSV278J9fDP
560zy8ChZ0FCX3WQsHC31GzvLIP22z6hll0DhP/Z35ImYuWwv/B0tlTkANG2
jeOr7t1yMFW9n3GFNEDcYigcUTlbAbLXjnKO9fYRL94UyGY+roCbaW2cSyl9
xKdoTS4ZVgWAXhmPiXUfIW1nWiy2qxIGxXwr8n71EgwuP0USvQqcjbotVMd6
iMlBEbKnbhXEmyYbeRX0EOs+xfRN3KqCqmHf0cqbPYRzUnZS31AV/Iq7fnUv
pYdYte8braG6Gp6Pnf2wsK+bQNK2I4cXq+Hx3qf5AeRuwoE8xixXq4Hasryu
jtYuoriV925+Ug0c15/i63DvIqyvqU7He9bC+R1f7IKIX0RWduA3R0UGtJFl
hN5c7CQGaYPBR6wYoGz28Mwl7U5i87Uj++UeMWAmTwUlbegkkvaSk7tmGXBF
ar/b2dYOIqIu2Nasign/amYZS/91ENe6Qsd0zNkQn763vPzhDyJHe/SpTCgb
YlV8ZP4Y/yBG0vWNuMrZ4LqwyrdM7Adh70wtKNlcD/OGnDKnk74TZosR3tsn
6uH7Z6478/ntRCKZ6Us91Ahhu5kHvZfaiP37vMxvWzTCwW1cWf2MNqLdSX77
yPVG2H/48pOmyDZC7FNQLysDe+MOKwnlNiI8Wk83gPIRwtQbmGDfSvjK1Iss
ffsInNw/5mT/fCHs4GPMkGsT7J8osNHZ/5kgPf1b+C2oCW6+tlEdXPWZiOaW
aGc8a4JdPt15LSPNRG2drWR6SxNEkgS+BzxtJuSMFp6e390MyoZ573aQm4l+
+80vf3B8BqdAktRo/yfiQsSNksawFmB96Ntu29hIcE49/Umkt4Cx+xmZpNeN
ROzJWlJ2eQt0yLRdIYc3EgwJulbIZAsoubUvuBk0EvJpL2p0Tb/AlWNp9vNZ
DcRQUVNj+fqvoKH2cx9vM5tw6tnSlZvVCgH9yvZOpxlEh0Urf1ldK5Do53j7
NzAIw68BiuzuVigcSB3N7a8jNJh9Hj3ibWC61Klz6HodwfUmlbLKvw0q43+v
3BJdS0R7b9h//ew3SInxNdLvrybK6GtidlG+Q7L5vNzRDxWEekhtySH572Ax
PE6uDK4gnvO6d5/Q/g6DiUHPPc0riODZFqUL3t8hlqI6lLBQTpj8fFQd2/8d
3vAxfPKgnBjMoEzOl/4AuUOfm7IaSwnBDX6bf2p0wIMTf2TubS8maveGK908
1AG1nBvHM/uKiHumCTvXGXQAg37RVia2iOAMe6dz+mIHKPP4C1JJRcTcvyG7
L/EdcPOM1VhRw3vid7vxiwbOTtCofFU4eKOAYEVv3lLK6gTXY72rdGlvifu5
6ipnWzvhHX/CxAA7hzjceGDXv55OGL2jvq8hMIeo5DPX3bvUCQ9eZd06z5lD
FF8Lc3in8gted95ryfv7mnhlNJv+OvIXGEkdldn05RXxgMLcmmzZBR1qJat9
+Z4T73euyzvm1AWTfTETZn6pRLfFZVjw6oLoF/yB7zlSiT2v6EYno7pgBT2m
g+9fCtGva35DuL4LLHnOPm9eSCa0fP80eOzphqTFbw8kZZ4QM1OiVw1W9UCY
ofuFu3b3CetvRgQXqxcanRJXOmwKBsG4zksurb3gfGzrx6K8EMgxc5L42dsL
lgFifJHaocDV5u9RyNEH7tkJjAmVcHj2tVDNZWcf1BotFUdqP4Lez1Ivfjzt
A3TcwbPlv1i40DgU9t6jHxrj6wJZQ0/BpcrP+vLmQQi+sz/g4b1XINmtzftX
bRAURl8kbf74CpicAhneaBBM1WDOe20WyKCQscBTg8DiGTNzzM6C1sLHt58F
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
juqZux4s+39AsRO0
       "]], LineBox[CompressedData["
1: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
ay6eklpYXaWgRrfn62qw/weIqRJ4
       "]], LineBox[CompressedData["
1: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
i2CV
       "]], LineBox[CompressedData["
1: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
v39UVJyTqU93wYzY0vo6FYmxSdnS/T+sMbGq
       "]]},
     Annotation[#, "Charting`Private`Tag$765#1"]& ], 
    TagBox[
     {RGBColor[0.880722, 0.611041, 0.142051], AbsoluteThickness[1.6], Opacity[
      1.], LineBox[CompressedData["
1:eJwllIk3FAgcgIeZtEWSWse2bMrNQ1Ir4jclObaoTZItVwydjkoRRWwzIpXS
0iokWZHcXpKfTINm0BzIuGWQaRyTceVor++9733/wafhE/irnzSBQHD9x3+r
P6oklRVZDIT/mEXFtAZp8YdiqLjUvTCVMIPz8uW5QTtKgEhyzQteN4OC6Kz9
ExklYOa+mUzLmMZy/yuPxk+UAtXEc3UoYwrTO07ZBjaXQn8aSYV7bApp+46I
xkzL4MJm90LOnATdt5hZjM2XwVe538STlhK0earRf8arHJY7SSW86p9EQ9XV
tNG35fCzd+W3wBuTuLQ00iq6WQGKaqefrxB8wUxmevDnn15C+4P9rJOlYpSk
lOn3JrwErUXbw6oBYtzjzxrgzr0ECyPV75XVxSgizhyq5FXCqpX7Hty6PYHm
Vk4WcdQq4Mb3zUSqjmO8rO9khKQKis8X9NpmjGEPPyw/yPs16GkyNlnoj2Fs
aLa6m2U1nNYdj1W3G0X2iwVpnXEEdZ+RcxGZn1ERVnisMqoBpw3ZxVbWn9FS
+54F1bcGfHUiBbu7hZgoyZ0M59QAyS+d0aghRLM7rX4+eW/gEbf2zt3aT3iV
aei42ZMOt+fmSikuQ/hXUYV2XjIdQuZKryivGkJuyi6iViMdxsw/BCjUD6Km
v1uVyva3ML8j2bjIehCZxFgjwloGpMpHj2ZZClDJqlPxfV0d8LhWuzX9PiJZ
kzJuv1gHXgeOuO00+ognZMWs2i31EKMhb683249VfJnfyzPqgSRX32ST2I8+
oaYzD8MboOG+bc46eh8WvIjrPG3EhMSMTYvn7/egUFGY4OjNhI8itauXbHpQ
J9TRWvceE0LorPUUcTdm7JDNHJhjAiFCRyJ07sakdwkUdwYLdjlT7yoqd2Ho
wC2x3dEmSPGtkyEx+Vi8Z+Kx1q0mkBfkJ8fG8HE8d78LsbYJ9O0V4/Os+BgQ
tKaiWqcZtK03RveWtKP7YlLE1slmyDd4bUnL+YDpsqyYNbZsCNDdPu+d24rW
VpePRnmwQXOTU9XwqVbsOmuwdfwiGxp92maGjVpRhRs/1PiMDYU51PXO5S14
J2WvA02BA4zshIeRTB7GaDXLf+vkgOG53JYCGS76AydVFMKDq/e53LXXm5Dw
eLqyM54Hym7vR9iaTZhC+rGL+YQHcbrh9ipvG7HhHUU9t40Hy5/ZVViRGlHX
ZeGxn0ULONurXc+/wcRPATr5PVKtYHVCgxFdUI8nkyKr2bfb4DnFOHRiTy2e
HdQbKC3gg8W+hzaxokLs8+B/9+YdH4oZ2vf4vxTiwXaaUZOADwKzVtOwwy/Q
nDUcNvhDBzQ4xtc4dOQjsShbQYnaATV6YaHpohxMidCwvujZCUG0uKiqa2n4
Zq1q6naFbvCqWVf3NDMaVmrE6vSa94Fo2+gZKr0EEhVY+pleA7Bs+Bjdrr8B
fDpdkNg4BI+iGGOeQh4EM2J9AnWEsJs1MZLQ3gFFQXIHVRxGAbNcAjm0Psi8
fEpocngCTNicJzKcAbiWvnBAIhJDRDVByYEzBAReH7kqfBIErvMtihUjoH2e
cslFfwoMk+MXVbgiEEz94Sr7ehpSQrd8yikcB8fBk5FJwbNQO63KdjguBifB
bQN19a8gN2FMDBJ8ASHdJ6rh+TyQZdMorxwkYLSmTc3GcxEoETslVNYUrIQp
767JJciLVsnfZToDdqPuMxsPEcj36IMuZWWz0F7rK+VuKEU2a61Jlt78Fcpo
bz02TEmRw6z/pC5LmgfKsgt9zc3S5JvX1dOnVy/C8ZDLZXIPiOQVJlKCkXNL
YOxv0LzXm0T2ZC2YH2J/A+Nt1A2pESTy/z8lkP8GkhrOzg==
       "]]},
     Annotation[#, "Charting`Private`Tag$765#2"]& ]}, {}, {}},
  AspectRatio->0.85,
  Axes->{True, True},
  AxesLabel->{
    FormBox["\"r [fm]\"", TraditionalForm], 
    FormBox["\"Re[V]\"", TraditionalForm]},
  AxesOrigin->{0, 0},
  AxesStyle->Directive[
   FontSize -> 25, Thickness -> 0.004, FontFamily -> "Helvetica", 
    GrayLevel[0]],
  BaseStyle->{FontSize -> 14},
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{{1.542442506842263}, {1.0976975935839428`}},
  GridLinesStyle->Directive[
    GrayLevel[0.5], 
    Dashing[{Small, Small}]],
  ImagePadding->All,
  ImageSize->{1200, 1200},
  Method->{
   "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
    AbsolutePointSize[6], "ScalingFunctions" -> None, 
    "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
        (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
         Part[#, 1]], 
        (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
         Part[#, 2]]}& ), "CopiedValueFunction" -> ({
        (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
         Part[#, 1]], 
        (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
         Part[#, 2]]}& )}},
  PlotRange->{{0., 4.999999897959183}, {-1.5, 2}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {0, 0}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{
  3.746440606668041*^9},ImageCache->GraphicsData["CompressedBitmap", "\<\
eJzsnQeYlNXZsJdtLB1ERcUWo7HGGFuMJWqM5bOl6JeiCUVFwdh7SxQQECx0
pAqIdEWl99577733BXYXWNjd5z/3Oed5593ZGdyZ9f+u//uvzHXtLszMe8rT
23nOQ/Vfa9jg+fqvNXqy/oX3vlL/pYaNnnz1wntefMW8lVYuJSX9O34uTOHf
kpKiv2K9hvMr9mf/+eg/H/3no/989J+P/vPRfz76z0f/+eg/H/3no//1H11h
/5SXk4fWybQhPaXTZy3kw49aS+d+Y2XJrmNSZD6N9XhT9/iZ9k+6HF3xllxS
3ngWFa+WNhvzM+3bGSJFe2XoLdXEOh3VbpXh+4pS0uxnaVKUu0r6vvo7OS8r
1QyAS5Im5TJryc3PdJXFRwpjztok6VlT7WeVRY6uktb3nC7pfFYuQ07/5QPy
eMOX5KVnHpMHfn2RVErDPUqTqje8K7MOFcZaRONSLMJMVHRIZr/+3/LAAw/I
A39+XeYeLvLPn5BNHW+WaqnmkfQz5f4Oi+Rwobj1mYeLjsnmYe/IbacZmJTL
lAueniaHimItQz445ToqKzDyN0jrqyvaTZ3x4Peyt5Av+8/kpOzo+zs5zawl
tfpvpN/OgphgL81MZsy8NdL5X6/Jq6/9SzqvylVsFO0bJnfWKCcpqTXl3jEH
4lLU+6ec5Exdcu5CeeaCDPPFSvKLthsNME85mqW2XFnU8ALJMP+r6Oms8vW9
ZPtJUZifcsLDM+XRs9L+5ybMW/K6XMzbqWfIA+MP/hC87IRFkr9/m2zetMlM
uMn8TpMtO3OkQE45YUAh5ot7Rrwqjz3yiPzl6faywDBfQCHH1knnu2tKmmGX
tNPvl+/2+M/S5emnn461rLdOicYq9u0qcmDsXXJaOcdq1X5ZXz77erIs2XpQ
Du9eK3NHdpKnb6gh6XyeWkWua7JcjoqE5q1oR0mTefNmy5buF0uXT1+LCaJ/
lmIt5u1lrzmAlysnqeXKZXiUpaRWliufHijb8sXJLCukUsPzb9q4ys7f/bOX
3PzX+w8++OADXUP0wq4vxZoqSeGuQXJTVfN2pauk2bB+8sHfbpUrzq0umalp
UuG0C+T6BxvKJyPWSV5hAJfoxR06uNcurk+bhj/q4sx0OfOl3rlmxvTa8ve5
Oal+3KKCQE45krNrqqyfnjxql9O/zZOJLuc0+ydLjsx5XK46t7bUru1+zqlV
xRFJeHmGZk9slk7XVDIPVpEbv9oBG6RUDNZTxU/LWga3rRdhr+sSXE+a5C56
Tn59PkgpB704qnFrsd+IMNghmfrQGZJqwPKT5xdLXswFret2hQxr91c5evxk
TGJ+1k1+uofvyUMbZFL31+TeWpliA3tRQJDjsrrx5VIhpZxUu22Y7CuKNefq
rlfLyPaPyq79Oaea84xg0CLJmfeeXFmxnM4XDMVn+0b8RqqbxZRXYJh/Xfza
Msu9qSUmX9rlBhnX4WFZuWn/qSZXYpSCndLvtupSzk1c1Y+St+R5+Ummi2lm
lmreBZ1vlimd7pGpi7eWal4plMNLBkm37oNk6ZFCnbfo2DaZN3WSTJo0yczL
7zTze4rMXp9rHog175zPb5dZn98pX09YkyjF3VhisKkd75V5n98qnYYsKvtg
4zs+aLHRvNessg82usMfZXW3q+WtTlPKPtiw9n+Rjd0vk+c/HXcqXJV88Jt2
dSyLN2wxKrEHB7Z90j7YqPmQxB78qk0j++ALzfsl9mDPNq/YB19p3qvsAOvR
7m072OvNu5d9sO4dm9rB/vVRu7IP1qvbJ3awJh99VvbBBnzVzQ7WvFXLxIA9
bOgg++AnrZok9uC0KWPtg+0+fjexB1csnWsf7PzpG4k9uHv7evtgj89eLDvA
8o8dKm4NJD9YuhQVnrCDDWr7hOSfcGbmtUmMp7J0Y/efybft/i77Dx9NKfNg
a7v93IiNP8vabdkx4d0o3oOqj2Ys3Z7YgyiUyR3vkyGT1yb24OzP75CZn98l
XYYsTuxBK/073ybNVGCXBWDjOvze7v31DpPKPtio9o9Yq+K5T8aVfbCh7f4m
G7pdLg1ajC77YIPb1bNE+1TT4YkBu29bJ9ifafpNYg9+2fZl++DzH36V2IM9
O7xXXIiX9sHeXZrbB99p0bHsAOv/ZXsvsFv/CKgc8qUd7KNWLco+2JQJQ+1g
n338ftkHW7Z4ph2s4ydvJwLsdNm9ba3z/j59WfJPFsR6tmG8Z4/nOOesd+tn
kXoJPVtUcMw+O6DNk7Jh+8FSPVvNb3aTkbRD2v1DZi3f4Tb7yyQgp4MhaYcb
SfvtlDVlH8xJ399L528Xl32wuZ/fZmVks16zyz7Y9E6/MwP+Rt7oMCUmgcQF
Nmb1ks43Glk4PrEHcckQok+1GJPYg9+2f9yg+FKp/+HIxB4c1O4pLxy/LzvA
+rZ7zg727IcDyj5Yn45v2sFebta77IN91aWJHeyt5l3KPtiAXq3tYO9/1DYx
YA8d0tM+2Kxlq8QenDrx+1Mar3EeTDcyboZ9sMMnbxNfiPXsM/Ge3b11tX22
26evyM79OfbL1yQNtnQ5kbc/EH1LN+wt83hFBcfteAONMTpu3uakx6vun9nY
7VJjjD4mX41akVLmwVZ2/YUxif4kn/WbFxNjJaCuDy7u/CuZ2OF+ea/LtMQe
JMowo9Nv5cXPJiT24BQjL7Fkn4kjdOI+ONZI7eVdrpUnPhxVdoANa/9XGwmr
22Rk2Qf7un19Sxr1mwwr+2D92zup1qjpoLIP1q/TW3awlz7snRiwB3Zv5iVY
50QeTJehAzrYBz/4qLWcOBkzsfV0vGcnjR6gxpscPHIsoWeXzBtvn23z8b9l
7VZnrfwiacily87Ny7w7/bpMXbS9zOPl5+yx4/X67DkZPH5VmccLW2ftBy1I
erwa/hmiX4ijD7pPj4nwEoDXB1d0/aWNxb3SZmJiD6o727Dl2MQenGEMJcRP
IAhK++B443Uv7XK91FOmLwvAhnf4i7FMr5Q6TUaUfbAhHZ6w2KzXeGjZBxvU
6QUvQQaWfbCBXd71dlGvRICdLt981cr7iJ9L3rETsZ5tEO/Zsd994VzClp/K
zn05CT07d4pz2j5u1VQWr9ub0LOb18yxz7b/5F0ZPXuT/fLVSQMvXXL2b9bE
nXwxbGmZxys87qJrfVs/LS2/nJ30eJpZ2tz9EvmmbR15s6N3OcoyGJ7ECONR
/PPj2DH0ElDXB9UGearZ6MQeJMsx09gg9ZrGdkPiPjip4wOyqMtNRvuPSOzB
0R2dx1S38YiyAixdvutYz2KgbuPhoinNn5dhvK8/d5ZDw6aD5UhefpnH+6b7
e8r6snXPkTKPN6z/p3a8t5t3krkrd0mM11Pxnp0ysrd9tulHn8q3k9ck9Ozy
eaPVnZFO3yxK6Nm9W5bYZzt9+qa83316Qs+ezN1tn+3Z+nl5qfWEMsMv7IE8
89GYpMer6Z9ZTya4/V+kvrJPWQYjADHBsFVgUJdlsJmf/1ZmdbpD6jSOzZ8l
QF7Tg2hix4dshMc8KAWFMeuZnoz37MiOjxmQXG6fPZR7PKFnv//8GYuaJ5t8
Kxu2H0ro2e96vKXhW5m2eJv98lVJAy9dxgz8VE13GeQtzdKP5wr1MkUKc2Xj
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
FnE7DSkr0pHtyHRCCSRvDW1EI/3F/8VIV9/y2PZpLqYzs7H/UhWbQbYRTo88
YiLaXE6tJqyj9/zlApxL0B1EFQlpFv94SJMjTSMngTLs8HoIBIkcORSQYU/w
fuyNcBIqeOTK8ywBEawuFbE6g0yN1+L/w/Mau3cl73NtWM9MUcsvmMgCRMTM
RsbrbTnIHwbEM0BKwPOvepjFNq5y/hdTw9/8zvaObWBbQJ3IXhdQA00etHm1
tkZyLtXo4OiPlh4henFadAfangxf2gj7cHmYJtkRw+GDUXymJdqkU3B6NbSH
/UVRtfXwDJH5rmhKEPjYxOnsbQZN3N08ZoUa0+Xp6CwcogV6xIyBJs/yq0Bh
kEKiHAe6NRZ5cA0QhAQAMLtx13nWkMcL/99Tx4lDG21Tuz2j6/svVbWAIoGq
V1dgLqnXhfhUryvc/yEU0NeGDJiMQVLHnYrSIB0pACyssAOGw1vXl2zTp1u1
BeFBNShQJmu2HAwCeNAqqNfqLEL5xkGr6sUF1gVnPZr75KPNzxsHw3foPceP
wsowHfkqxhAhRDNamDaYmIk4JIY4NDq00f+3tPGY3xm3PllPcOsk/6Ws4Dgx
tAGNQCvqDQ6asFpth1CjneAklZ6w8YejwzWKeoDLd/oK4nLk4ZBBaC1jxAWn
ZMwfkKW37YA0I6KUKqBVwjlhqjBUpLcBYpVAbMZ1Ca7gAr8U/+/cl+PDca6W
HLOVGhM6yDR2l3fo3XdkIanTogAZA5PwpHnkycTIosqvZMCugv+HyeIi/pwl
Kf5yVrEh5eK/fiH2zErUzrIukw9WH/tRdnaTDNoVYwtx3v6/s7OMyM7KVZJr
2m60ub4qP8L2yl8iby0/qvs4turfcllWzLdtVez/pe1lFqsOSz/zQem85iiM
VjnZHWZEdmgeP/vP38ueYne/Fsjub9yZhdDnkQpRcmV3uY+r3Saj9kesiR9t
zxWCPWeedYfcfW6WpFW5TB54oYW079ZXRq7NteZDhWQBcHoAgNSMqlIhs7rc
+FwfWbCLto35smd2B/lLbZdkLFcuVcqlhz8/LrtntZNHz7Gxdil/8evcUZyQ
EP+Hl0P7xj9r2wrl713sv1TBxjTx8J/xVjZxSjUBfQgvIFP1/Ambh5S87dno
tXIojLfSdwAncx8q0UBLaNwVPxHHSz0+PR+AdYGqxSsxiltjOkxEcFA78VOW
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
MJ67puP0hCqElOqD46siWWEfPs8IZ+ec0j96wsX0fChe1VuEyJrEJjKvQ0bW
sd1H8/ctUzpjVD35PmrmpqCFJIJY6WyZP1mK8DQCTx1rlBmKkEewHCNxIdfS
AlTxGDESwvwafiPYo2kRpkX3GsGiuQ09ttzSxwjVaPBdhS/xM0A0LAwhgQNr
JH6Ql0NPISjQEBAPKzUr6uT5jfg89HY4Nz8l1ceXMQj8aVKPkUzrdOrxJHxl
sGgWm+rPcGrS2P6MW6UnPrXKhB9j8CsFqdDSHwIySnRKn/wYe/CGGPk4zdsR
jNFMRnqMfFymz3gwXXRmhONA0RmUcD4uywtC7ApNwVTy+Th4TvNxtXyqJnSI
1ahYl8nRcgfo/KdK7esi1H6vp3b4W6m9hyaLDAegbM3flE9LE89/I7ZaVdrW
i+9s5NYHh7zfHdD2An+NISaPmUtpGx2paT3S1pw1CULLRsqFD+pBRkrbWK2q
OBHLlAYZyXi6p23kLJZRdMtkIGYMsEtDohrLFPrl4zBtI57xQ7BUGX29Tdqd
jBWs/9C/F07apfqknVZG6A/JCU3aqeyNSKeM4GSr/hg8p6QHOdgtJU6Aqu6G
ejI8DQ301RXhE6Uqu6HGTE+TxECjT6g2i7CPwayjcYSP8kIFflfyTIJBVCyr
t780Wb03Y6hjTddqn2VEY09vdhvsaNWC/biJOzdpSEepCLsOP45vQxWk5pSK
sLdRYDyGvDJKMegbpb2s9IDOa5FrbP2hkUizZXStGt7oZQAK8shEXe7nAtm4
tChflGSkhsEl7vBykKHQG5bjFtc9Nbi5LExUOf698Am7SjESd3pMV49IQ1o1
PYGt9wYfpHWJFwhaBIHIuNMLDlX6kFk/T2wQGgl/yOzT0iT89aaIKAWomFXB
AFY1ZG/IRDELi9Vt7G4rM2ym0U4K0/SOKuOVa/CNwnstfcMjwglW0YCBxGZe
9PFkaMUY0Gd6fAJPrMxWfYrfi4dzh2eE0LrSD4V0wqXEOsX6gDmMDgmf4MX8
gq+QNoAV/QZKr4yBUin+KpFuekvF7JFttoPAzm8e4FpZFbPhw2sjZqwPDgGZ
zQVlPXr/E/kY4yspGLULBSs2sFEwsj+N4sADxDCr+r1jHuCZab6a2QzYa3kw
UowAl3/okzJ1fCKIQjHbg9ywxdV+KMgVMiQjh9bGKDEsFAYjagGqQHRhAgB1
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
1Kr4q6Wylku1HuxSOV7P8vkNcafwt7DlpVQul4smhb/8TNLcUvVqtgZKmJ9d
6n/ssaYoOC/72Ln2WAV31ia4kw/ZnWePCXfSgG34yxdA6rGAPvedqkDrOz2W
A9PntFQmXhr+5ra81L/YUrmgZ/h7o+WlDrClcqHM8Den5aVUzNIUpfJxzZ/b
Yyn69HS/WT6WV8YvtseEPmkGQvj7e/axS+yxt1+8oSGDIPzlq0t/YY/l4v3h
b2bLYDrYPmuI26frxETp/m7NkpfdgzdNcJeef7b7CR3lr73LTZkb3badrb6r
inPLnruqfN1r8XUbC5jvtmd6u+vtmu6uOflT7r0D+rbF1nvtrk+/TdxeR1/m
nlm2tq3jnXf5b/b2Wt5cucsZ//AuYyHfEOeWT3cXfGZD18F3fTrdhrsc6L5+
zInuxKMPcwfuubUbTHtEv61hu//IPbJkbfs7b1pJ6xDOG384oFHNfbWFTQ/J
tWe351e7136xlxvel3azG7sDLnnaLV3ritaVvSvczEk/dPus73fZp58bedSD
bklvvXXlr+zdOV9M+HtlnXssemiuetVdEFritruNDvqTm7dW9Xeg4Bo355pP
ufX9PvuO+Li79o2eehfRy2z1XA5U+Hu5hV3493W/6MafcYo7+ZQz3PjpXf0M
Er3zJ7n91qOB5wbus3cWEy7L119uz1dSlVYmE3ZeWufrNxbEu55yR4+kkehg
t/NFM9zq+nuusOeVm9Qgz15s7T1LH3aHbtre/D05ZPyKrbns2SvzCtULLb27
e8qpbpv+sXnzgXcvaoRl7t1ftc/yWtm6X5y2sn/r1pPdYYcc4r5y1MXuSTGO
0G36ZTf+0xuEzu/tGx7g/vjW2rZcc+L9mu5tHdrf9HVuL3pChrqFd+3v1u8T
OcTwXb7lzr/xPjfFK8FL33zJPXbbpe6o3deLjXf7DnW7nhkbYre6RaVPVrwA
L/2h3OLzLWzRfzztlHh1ffq4vn36dBonbus7xO1w1PVu9qp0YkW5o9/Y402V
0+daePvgsuv34B3duEnXujFf29ttvwXdedvdwPVHut0OOsade+vLrluco7aN
CbZ8T/dbeS3k2ZaA4N5+wo3ewq/dsbn7xmOxPzciqqdMKK51HL3Knmyqs1iy
0LtquUwT8Znu0g8P9g8OdXtcHboKx5K28s0T7c1Nteap6ZvfRcNjb9E88K8b
ub7+qFsd94zrbnx1jooPF2QLbfyLVXUq+u5bazts8yfGMn+ijxu+zyQ3v7el
XYyyXUi5b9DOnom7WFdPYLVmDR1bb/24G9GHPvUGMDrWnzKtRqBNtzPatrPk
6V/ktb5YS9msi6+6E3dPOS52Vm9jzsE/tJNv2Wd5pbG+jWrjXW2jd8Vs9/gD
k93kyZOZ2ziZLqOTJ9/vHn2lKwxJqW3jOq3WzF6JtfZ1lfd39lhqm3TPuK18
LJ/wdr09lkvfD39PZB+7wR5b8/breQ3n8exjORAfaUs1VVPyzUZySx1lS1VV
jiXlUn9reSllmDXVKh5teSmljDVVEvL5fzfbUnn5vq5n6nL30vKxh7OP/dEe
K2VhDeX+mn3sT/YY/Aq+1SDE8mGEHIy+q6WamcMPtrzUcbZURbQsmVEu1Xq5
lvKBKv2CUtRsPVdSCT0rZt/fkLgf/u7LLnWbPZZLvA9/k7OP3W6PVczmFOXy
0y3vsI2nTRhbeyayq/n3HN+o6t3TMoxOtqWaBmbubnmpU2ypajDkr+VS+bzS
3FLKnahVhZdL3dXyUspzWL3opbzWk+/4c4891lRlyU/fvNcea+rouz372GR7
rKkucFv2sfvssSVPXpSX2fkhnTkw/cg+ywvdd7tOzQsz7TflUvkU39xSp9tS
TV0l+VBjbilFURFM2Thdfp7oQ/ZYNfH4+fKxP2Uf+6s91jRolG/O9LA9FiRp
DuVuzj5WNJ1qhnL5rOYcmM60pUo0PLyKhn9oean/tqWa+qBvfNdL8fjCh05v
9Eu3vpSCMZVa4KlXlEvl56k+bo81xcQbso+p5VQQsL//dCPWXZ997El7rIJ1
86eVj+WHqz5ljzXFunx6eQ5MP7Olclk24a/1OuFzbKnuGbfnsTM/jjW3lIIo
TZnk1S0vpcBKU+ycmF1qqj0WIyQnN2Ji/rFpeqyCdZeXj+Xnvj5rjzXFut9m
H3vOHmtqXVzZMpgutKXWLJudj/lPaHmpi2ypptj5m5aXUhClKXa23llNgZUU
O9eufrtc6orsUi/ZY00x8fLsYy/bY02x7rJ1Phb43wP/2Yh1+cde0WMp1k35
VflY62UVv7SlmmLi+JaXGm9LxVDCvzRi5y9bXirn8a8oiZe2vFTdbd+Anb/I
LjXLHlvxxqN5iX1J9rG/22NN/U8XZx+bbY81xbp8Ucrr9tiSJy/IY91FLYNp
gn2WNiL5x9dpaMlRLnVhy0tdaUuBmm9O+kojal7Q8lK/taWaJnOdn11KrZsK
NPztzlU0zOdYvWWPBZSbuGsjyp2bfWyePdbULvmf7GPz7bEC5f54cBXlWi8d
utaWIkUkax7/rOWl5HZrGmnOt2HMLfU7+0youejhMW3/+DoyrY9rRM2zs0st
tscqZvTLN5ePnZV9bIk91jQkMS772FJ7rKd7Xt5z85PsY8vssdRLs3rxy+Vj
rXcg+YMt1dRLky/2yi11ky2Va68Q/sa2vJRccfLcvHnLV6vK5piWl5J7Dj0t
60D8r+xSK2ypvANxXc9UHYiLHz+vfOzH2cdW2mOg3Lw7vt3oQMy3/lylx9J8
mpl3lY+d3jKMbrGlmmqaP2p5qVttqaa+7XzJXm4pue9S3/aaZX8vl/rPlpeS
S6+ppvmD7FK99lhTizyff+rssUK+3/GtKmM9rfljfezZJU+cn+ekpzZ/VqHD
vOsn/2AOWn+xPTSV6qe0vNTdtlSQ6rd8rVGqn9zyUnLkVaT67AfKpfLVl7ml
5Nxr6pXMd6YNf/3sWfht1g15YvNn+9uzhcy//hNVZntC82cH2LNNU8eOb/6s
+rB2vXxTXtIf1zLoHrSlagORyqW+2/JSD9lneYf5u10HdF1bsN0lT11SLvUf
LS8lh1/TWE6+pDb8KZ4fAjo3HdSoAhzb/NlhejaJ4Kx445HyBzEMZhl2HgXX
drkZD/7eXfHzc9xZZNhdc5d7btGafpmlh9vSha5QZ8gxWFf0Jux54zr3z0Nj
3Heg/ttnA/e5B5NQYNPUuij8up6b4I7cZbhrL6P+fQe9333xnAfcwp40maJc
Uc39II1sIPOo6jbJOPriJu3/4DYHu9WzJ7pDN+t0fdr6uoEj93dHjznfXXLh
OHfiwTu6oTZ2eM9xT7uu3jQHJayaQ5zHbPtNBcyR6fY7nVsz2/1m96EOAK2/
70XuT3/5S1t/9xf/34HuL3ff555avCY5RkO2naUIMg97npt0yKauo62PG7D1
d9zt83vK73q73JTz9nYj/HH6DNnVnffKqlaOIh9p0+DtEbWjuNVu1mVxInnn
5l/3UO5pUzep1bPGu12H9PGv2Nh94db5IWLfrueWP+vO2G6AY8j1yKOfCDPr
W0gqkC+WWERkQEdWeVlsxGN9DTtd79JH3AnbDvCQ7nAbfvps9/DinmTrPe71
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
Nf1/NimU/wG1MRGE\
\>"]]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"ReVplotl", "=", 
   RowBox[{"Table", "[", 
    RowBox[{
     RowBox[{"ReV", "[", 
      RowBox[{
       FractionBox["r", "0.197"], ",", 
       RowBox[{"mDcal", "[", 
        RowBox[{
         RowBox[{"2", "\[Pi]"}], ",", 
         RowBox[{"Tscancorig", "[", 
          RowBox[{"[", 
           RowBox[{"5", " ", "l"}], "]"}], "]"}], ",", 
         RowBox[{"kfinall", "[", 
          RowBox[{"[", "1", "]"}], "]"}], ",", 
         RowBox[{"kfinall", "[", 
          RowBox[{"[", "2", "]"}], "]"}]}], "]"}], ",", 
       RowBox[{"\[Alpha]cont", "[", 
        RowBox[{"[", "1", "]"}], "]"}], ",", 
       RowBox[{"\[Sigma]cont", "[", 
        RowBox[{"[", "1", "]"}], "]"}], ",", 
       RowBox[{"ccont", "[", 
        RowBox[{"[", "1", "]"}], "]"}]}], "]"}], ",", 
     RowBox[{"{", 
      RowBox[{"l", ",", 
       RowBox[{
        RowBox[{"Length", "[", "Tscancorig", "]"}], "/", "5"}]}], "}"}]}], 
    "]"}]}], ";"}], "\n", 
 RowBox[{"Plot", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"ReVplotl", ",", 
     RowBox[{"ReVm0", "[", 
      RowBox[{
       FractionBox["r", "0.197"], ",", 
       RowBox[{"\[Alpha]cont", "[", 
        RowBox[{"[", "1", "]"}], "]"}], ",", 
       RowBox[{"\[Sigma]cont", "[", 
        RowBox[{"[", "1", "]"}], "]"}], ",", 
       RowBox[{"ccont", "[", 
        RowBox[{"[", "1", "]"}], "]"}]}], "]"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"r", ",", "0", ",", "5"}], "}"}], ",", 
   RowBox[{"AxesStyle", "\[Rule]", 
    RowBox[{"Directive", "[", 
     RowBox[{
      RowBox[{"FontSize", "\[Rule]", "25"}], ",", 
      RowBox[{"Thickness", "\[Rule]", "0.004"}], ",", 
      RowBox[{"FontFamily", "\[Rule]", "\"\<Helvetica\>\""}], ",", "Black"}], 
     "]"}]}], ",", 
   RowBox[{"BaseStyle", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"FontSize", "\[Rule]", "14"}], "}"}]}], ",", 
   RowBox[{"AspectRatio", "\[Rule]", "0.85"}], ",", 
   RowBox[{"AxesLabel", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"\"\<r [fm]\>\"", ",", "\"\<Re[V]\>\""}], "}"}]}], ",", 
   RowBox[{"ImageSize", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"1200", ",", "1200"}], "}"}]}], ",", 
   RowBox[{"PlotRange", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"-", "1.5"}], ",", "2"}], "}"}]}], ",", 
   RowBox[{"GridLines", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"rsbvac", " ", "conv"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"ReVm0", "[", 
        RowBox[{"rsbvac", ",", 
         RowBox[{"\[Alpha]cont", "[", 
          RowBox[{"[", "1", "]"}], "]"}], ",", 
         RowBox[{"\[Sigma]cont", "[", 
          RowBox[{"[", "1", "]"}], "]"}], ",", 
         RowBox[{"ccont", "[", 
          RowBox[{"[", "1", "]"}], "]"}]}], "]"}], "}"}]}], "}"}]}], ",", 
   RowBox[{"GridLinesStyle", "\[Rule]", 
    RowBox[{"Directive", "[", 
     RowBox[{"Gray", ",", " ", "Dashed"}], "]"}]}], ",", 
   RowBox[{"BaseStyle", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"FontSize", "\[Rule]", "14"}], "}"}]}]}], "]"}]}], "Input",
 CellChangeTimes->{{3.746440634234494*^9, 3.7464406389473248`*^9}}],

Cell[BoxData[
 GraphicsBox[{{{}, {}, 
    TagBox[
     {RGBColor[0.368417, 0.506779, 0.709798], AbsoluteThickness[1.6], Opacity[
      1.], LineBox[CompressedData["
1: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
btJdQfz/exLxN+lRIDk=
       "]], LineBox[CompressedData["
1:eJwllYk/1PkfgA1JYYeZbGlV4id3KrIkeX+xIcq2RULYsRhF7iixJfrRtU0T
hcjR2iXFYowlfNw0Y8aVNI5JrjRmjIlxH/s7ntfreT1/wqPmHXzGV1JCQiLg
P/632gWRpTbxpSDxPxYRMaNNUtRXCtF/6bnbJC+gFTy9IMS8DJToW6lfVBbQ
WNyL0zPZZaAXhHujlT+P6ORfnwsv0mCyVKLPhyVGWf0Bx4PZNPg2Tylt0leM
kk658qcNy4GbJrmoIClGbkaHzaZXyuFJvLow7oc5ZP2H2qfLP9NB9YxMdChv
FunvVEgSNNEh4H4q/9TjWbS+/qWX/6AChkWHm00EX1EOIyt0SrUScteYC0dq
RWgutVz34/1K+PGtiZtSmAjZkJmj3UuVEOy8RcpCW4T4UgvOVT1V8O5MSib+
2QwyPeZodiexGgaX/iJzDwjRPTmf2Zi5anB92uKxQZ9GXM61VyGkGlg3chg+
aTmNEiLz9pw/WgtU2vEzY54C1Fm8KqklRMAl/Yv5smoKEWGr5zcGdfDjyfaS
FpcpdFQz2SzRpw4Cel83aC/w0G9zBbPRXXUwo1wgSzbnocOPen29C+uBcJDi
lcmdRDcY+vaHvBqBKn5p4R4+gfJLKjQLUxph1NIy6ZL+BOpOtZLa194INekj
3zdMjCMN8vlq5SNNYL3GcVHzGkcMqQQDiW3NYCVpopnsMYa2HxsgdrS0wM3b
ZU3qd0cQpuEntFtrge/TDKVfnB1BF+VEzAajVuDiZsOmd4+gas7m2/TsVqjN
4PE7aZ+Qd6ThQmZ0G+z6QssznhpGRcV3BgINGFCBAh9oCbiIR+TdtycxYIA/
dGU6nYu0Iu0ttJMZsIOkvjv7BBdlm8vljC4xIDJCZrWoYAhR3973c2tmQsub
QsrX8EEUOfpQZHuBBWHEj7nm+/tRqc1M7r6HLKiZdAm695mDhAWnnaQaWCDt
iT8fl8tB/iGEilotNtC3Mb2dv+MgtzVqjPEsG+Km/JRtCR9QlhwznnC8EzSu
Ku3p2/keWRy7fuGmZydQ2z01TYZ60WCQnrEwqhMekxvCiTm9SLn73kT7y07Y
Qa1RNdTtRY9ST55IUuyCz0fHfAYs36H4fWz8xkAX+BCBr3O7G5GhK40f1gN4
0roNK5uNJHLnqwbu9UDEtWrHQEs2St20a5Dxew+sEtz8n46wUNtbvz0F73tg
79GKsjuaLKTttJrra/YOlh/m4/NpTDTpr/WKi+uF0IvRIcaTbegSNba2k/Ie
Mooe2P47pxEFjeuM0oo40G3apv3sEA0Ne3K21L/lgHnPrSLVJ2Xo7IckA9YY
B/wF58xMVkqRKfPztfHv+sGuUCVZubUESZXkKW5P7IfDsM+RzyhCqTFqFlFe
A3A6Aqd5KzIP1W/bmXZEcQjqMlFO3vYYJKuWoPXRdBgCD1TSVeWL4DdFpm7O
z6OgaCoyoOQ1g/eAE5Jqn4ASneD8+r+7ILQ5wTtYiwdtSVZ3m+f7oCRE/qzy
CQGYfViJbb48BDnXA3gHXWZAIciM2JzwCW5lrf40xxdBICWqQFdyDCR6hrHq
6Fl44oELynSZAM0Iv6tOumJQIShc+LtxEsbET8/J1cyDuzBdvljAA/vxS7HU
0EWo0Xzlw9QXgOMYRW/PnmUglHQ+F9oJgdfofbPt9QrwCmJJwykzYEB4v9va
aw3ijQ2kqygikAUxaXB2Hc5evvz7l5CvYCtwW1B3lsCMOrpcPVxn4UODD85N
H4c18PuLXY3moDypyXOvGId1EP+MHRbPgZ/0lWE2WxIz8dt+KBqJ4Zew6+Xy
6VJYje/SLqvweThA1mOfJG3CgrNTkgdVFqCDqC935Yg0lt4vyIljLMCbolvP
9KU2Y/OCpKEN30W4jtM93T60GUPtoFy4eQlkB6Ptgmgy2Ky/m1p9xhKM/6GW
nBWzBVMy6CjRV1+GZO2dmyqdt2LWzSKH5cJloKT7tZL2ymJaxRu2ZM0VcEv2
YMt/lsVShrqmelJXYPGHvKWsWjlMJveF7gp+FUbHra42JMpjYzoRuR1Rq5B7
7JAKi/QN1ofresweXYXXt68QyPvxmJ1J4CTVeg0SnX9xkBLjsU3+v6LJjDUw
HswpSGQpYArhFJJwcQ1SdZ69ZjkoYm8ecRPC7NfhRt2DVIdKRSxBoynA7Pk6
nFJxzmNoEDCNJLR3B38dLINa3Ql3CJjLbrO2lYMbkLXLW6NdTMBsndlO7VEb
oNH45xNHdyJGw98ICKJvAGV/g253LRGTod+lV85sAPuFYcm5fiL2/z9JYP8A
4pdyKg==
       "]], LineBox[CompressedData["
1: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
MqNiBa5mkRZXVwnEPlvQOSDwv6LMLgA=
       "]], LineBox[CompressedData["
1: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
jK+5wIX/Ar8YhSw=
       "]], LineBox[CompressedData["
1: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
Efu/HoyUqg==
       "]], LineBox[CompressedData["
1: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
nOA=
       "]], LineBox[CompressedData["
1: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
aMs3
       "]], LineBox[CompressedData["
1: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
       "]], 
      LineBox[CompressedData["
1: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
       "]], 
      LineBox[CompressedData["
1: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
f+WyQM4=
       "]], LineBox[CompressedData["
1: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
5syJbg==
       "]]},
     Annotation[#, "Charting`Private`Tag$1173#1"]& ], 
    TagBox[
     {RGBColor[0.880722, 0.611041, 0.142051], AbsoluteThickness[1.6], Opacity[
      1.], LineBox[CompressedData["
1:eJwllIk3FAgcgIeZtEWSWse2bMrNQ1Ir4jclObaoTZItVwydjkoRRWwzIpXS
0iokWZHcXpKfTINm0BzIuGWQaRyTceVor++9733/wafhE/irnzSBQHD9x3+r
P6oklRVZDIT/mEXFtAZp8YdiqLjUvTCVMIPz8uW5QTtKgEhyzQteN4OC6Kz9
ExklYOa+mUzLmMZy/yuPxk+UAtXEc3UoYwrTO07ZBjaXQn8aSYV7bApp+46I
xkzL4MJm90LOnATdt5hZjM2XwVe538STlhK0earRf8arHJY7SSW86p9EQ9XV
tNG35fCzd+W3wBuTuLQ00iq6WQGKaqefrxB8wUxmevDnn15C+4P9rJOlYpSk
lOn3JrwErUXbw6oBYtzjzxrgzr0ECyPV75XVxSgizhyq5FXCqpX7Hty6PYHm
Vk4WcdQq4Mb3zUSqjmO8rO9khKQKis8X9NpmjGEPPyw/yPs16GkyNlnoj2Fs
aLa6m2U1nNYdj1W3G0X2iwVpnXEEdZ+RcxGZn1ERVnisMqoBpw3ZxVbWn9FS
+54F1bcGfHUiBbu7hZgoyZ0M59QAyS+d0aghRLM7rX4+eW/gEbf2zt3aT3iV
aei42ZMOt+fmSikuQ/hXUYV2XjIdQuZKryivGkJuyi6iViMdxsw/BCjUD6Km
v1uVyva3ML8j2bjIehCZxFgjwloGpMpHj2ZZClDJqlPxfV0d8LhWuzX9PiJZ
kzJuv1gHXgeOuO00+ognZMWs2i31EKMhb683249VfJnfyzPqgSRX32ST2I8+
oaYzD8MboOG+bc46eh8WvIjrPG3EhMSMTYvn7/egUFGY4OjNhI8itauXbHpQ
J9TRWvceE0LorPUUcTdm7JDNHJhjAiFCRyJ07sakdwkUdwYLdjlT7yoqd2Ho
wC2x3dEmSPGtkyEx+Vi8Z+Kx1q0mkBfkJ8fG8HE8d78LsbYJ9O0V4/Os+BgQ
tKaiWqcZtK03RveWtKP7YlLE1slmyDd4bUnL+YDpsqyYNbZsCNDdPu+d24rW
VpePRnmwQXOTU9XwqVbsOmuwdfwiGxp92maGjVpRhRs/1PiMDYU51PXO5S14
J2WvA02BA4zshIeRTB7GaDXLf+vkgOG53JYCGS76AydVFMKDq/e53LXXm5Dw
eLqyM54Hym7vR9iaTZhC+rGL+YQHcbrh9ipvG7HhHUU9t40Hy5/ZVViRGlHX
ZeGxn0ULONurXc+/wcRPATr5PVKtYHVCgxFdUI8nkyKr2bfb4DnFOHRiTy2e
HdQbKC3gg8W+hzaxokLs8+B/9+YdH4oZ2vf4vxTiwXaaUZOADwKzVtOwwy/Q
nDUcNvhDBzQ4xtc4dOQjsShbQYnaATV6YaHpohxMidCwvujZCUG0uKiqa2n4
Zq1q6naFbvCqWVf3NDMaVmrE6vSa94Fo2+gZKr0EEhVY+pleA7Bs+Bjdrr8B
fDpdkNg4BI+iGGOeQh4EM2J9AnWEsJs1MZLQ3gFFQXIHVRxGAbNcAjm0Psi8
fEpocngCTNicJzKcAbiWvnBAIhJDRDVByYEzBAReH7kqfBIErvMtihUjoH2e
cslFfwoMk+MXVbgiEEz94Sr7ehpSQrd8yikcB8fBk5FJwbNQO63KdjguBifB
bQN19a8gN2FMDBJ8ASHdJ6rh+TyQZdMorxwkYLSmTc3GcxEoETslVNYUrIQp
767JJciLVsnfZToDdqPuMxsPEcj36IMuZWWz0F7rK+VuKEU2a61Jlt78Fcpo
bz02TEmRw6z/pC5LmgfKsgt9zc3S5JvX1dOnVy/C8ZDLZXIPiOQVJlKCkXNL
YOxv0LzXm0T2ZC2YH2J/A+Nt1A2pESTy/z8lkP8GkhrOzg==
       "]]},
     Annotation[#, "Charting`Private`Tag$1173#2"]& ]}, {}, {}},
  AspectRatio->0.85,
  Axes->{True, True},
  AxesLabel->{
    FormBox["\"r [fm]\"", TraditionalForm], 
    FormBox["\"Re[V]\"", TraditionalForm]},
  AxesOrigin->{0, 0},
  AxesStyle->Directive[
   FontSize -> 25, Thickness -> 0.004, FontFamily -> "Helvetica", 
    GrayLevel[0]],
  BaseStyle->{FontSize -> 14},
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{{1.542442506842263}, {1.0976975935839428`}},
  GridLinesStyle->Directive[
    GrayLevel[0.5], 
    Dashing[{Small, Small}]],
  ImagePadding->All,
  ImageSize->{1200, 1200},
  Method->{
   "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
    AbsolutePointSize[6], "ScalingFunctions" -> None, 
    "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
        (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
         Part[#, 1]], 
        (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
         Part[#, 2]]}& ), "CopiedValueFunction" -> ({
        (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
         Part[#, 1]], 
        (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
         Part[#, 2]]}& )}},
  PlotRange->{{0., 4.999999897959183}, {-1.5, 2}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {0, 0}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{3.746440640060033*^9, 3.746440698662326*^9, 
  3.7464407493276854`*^9, 3.746440916581668*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"ReVplotu", "=", 
   RowBox[{"Table", "[", 
    RowBox[{
     RowBox[{"ReV", "[", 
      RowBox[{
       FractionBox["r", "0.197"], ",", 
       RowBox[{"mDcal", "[", 
        RowBox[{
         RowBox[{"2", "\[Pi]"}], ",", 
         RowBox[{"Tscancorig", "[", 
          RowBox[{"[", 
           RowBox[{"5", " ", "l"}], "]"}], "]"}], ",", 
         RowBox[{"kfinalu", "[", 
          RowBox[{"[", "1", "]"}], "]"}], ",", 
         RowBox[{"kfinalu", "[", 
          RowBox[{"[", "2", "]"}], "]"}]}], "]"}], ",", 
       RowBox[{"\[Alpha]cont", "[", 
        RowBox[{"[", "1", "]"}], "]"}], ",", 
       RowBox[{"\[Sigma]cont", "[", 
        RowBox[{"[", "1", "]"}], "]"}], ",", 
       RowBox[{"ccont", "[", 
        RowBox[{"[", "1", "]"}], "]"}]}], "]"}], ",", 
     RowBox[{"{", 
      RowBox[{"l", ",", 
       RowBox[{
        RowBox[{"Length", "[", "Tscancorig", "]"}], "/", "5"}]}], "}"}]}], 
    "]"}]}], ";"}], "\n", 
 RowBox[{"Plot", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"ReVplotu", ",", 
     RowBox[{"ReVm0", "[", 
      RowBox[{
       FractionBox["r", "0.197"], ",", 
       RowBox[{"\[Alpha]cont", "[", 
        RowBox[{"[", "1", "]"}], "]"}], ",", 
       RowBox[{"\[Sigma]cont", "[", 
        RowBox[{"[", "1", "]"}], "]"}], ",", 
       RowBox[{"ccont", "[", 
        RowBox[{"[", "1", "]"}], "]"}]}], "]"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"r", ",", "0", ",", "5"}], "}"}], ",", 
   RowBox[{"AxesStyle", "\[Rule]", 
    RowBox[{"Directive", "[", 
     RowBox[{
      RowBox[{"FontSize", "\[Rule]", "25"}], ",", 
      RowBox[{"Thickness", "\[Rule]", "0.004"}], ",", 
      RowBox[{"FontFamily", "\[Rule]", "\"\<Helvetica\>\""}], ",", "Black"}], 
     "]"}]}], ",", 
   RowBox[{"BaseStyle", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"FontSize", "\[Rule]", "14"}], "}"}]}], ",", 
   RowBox[{"AspectRatio", "\[Rule]", "0.85"}], ",", 
   RowBox[{"AxesLabel", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"\"\<r [fm]\>\"", ",", "\"\<Re[V]\>\""}], "}"}]}], ",", 
   RowBox[{"ImageSize", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"1200", ",", "1200"}], "}"}]}], ",", 
   RowBox[{"PlotRange", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"-", "1.5"}], ",", "2"}], "}"}]}], ",", 
   RowBox[{"GridLines", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"rsbvac", " ", "conv"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"ReVm0", "[", 
        RowBox[{"rsbvac", ",", 
         RowBox[{"\[Alpha]cont", "[", 
          RowBox[{"[", "1", "]"}], "]"}], ",", 
         RowBox[{"\[Sigma]cont", "[", 
          RowBox[{"[", "1", "]"}], "]"}], ",", 
         RowBox[{"ccont", "[", 
          RowBox[{"[", "1", "]"}], "]"}]}], "]"}], "}"}]}], "}"}]}], ",", 
   RowBox[{"GridLinesStyle", "\[Rule]", 
    RowBox[{"Directive", "[", 
     RowBox[{"Gray", ",", " ", "Dashed"}], "]"}]}], ",", 
   RowBox[{"BaseStyle", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"FontSize", "\[Rule]", "14"}], "}"}]}]}], "]"}]}], "Input",
 CellChangeTimes->{{3.746440707908413*^9, 3.746440715563417*^9}}],

Cell[BoxData[
 GraphicsBox[{{{}, {}, 
    TagBox[
     {RGBColor[0.368417, 0.506779, 0.709798], AbsoluteThickness[1.6], Opacity[
      1.], LineBox[CompressedData["
1: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
AdPziCU=
       "]], LineBox[CompressedData["
1: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
5f8CFGqyNQ==
       "]], LineBox[CompressedData["
1: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
       "]], 
      LineBox[CompressedData["
1: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
       "]], 
      LineBox[CompressedData["
1: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
jig9gbI+2HlT0gsrK3Tk1q13f9X/A13C65g=
       "]], LineBox[CompressedData["
1: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
       "]], 
      LineBox[CompressedData["
1:eJwd13c81d8bAHAre9xRGiSVEOJbREo9J0mRhFKSrKyGnZJUQlFmElJWWUX2
vjcfm6wkFJHs7L3F7/jdP+59vV/3jOf5POece+5OU1sdcyYGBoYb+G39M3Q2
sEiwNwMY/v9aIJZ5cz7YKWVCobbLcb2weaL38XutiehMCI0PPsYkNk/kWD6M
HL+eBdvS+LI3as8RUW03T9rWZwEphpeDaWSW8D57eWTsQDaM5cWpBD2fJfRl
5Q6PLWfDol738PdvM8SJ+J1d1sY5wBxnoivhMkNIbeXzHi3LgROer9ms98wQ
q6uDzSN+udDbZh6203OaiKmOsh/ekQ/z2RpZGYZTxExYtkSnbz60tvUM7No0
Raha1vQ0LuaD3NSe1q66SWKEeV634HsBOBAUz18nJ4lDRzUPP/Oig/df1kH2
sxOED5fZtOsMHZTqe6MkqRPE79Z7yXYmn6HlZI1PVfY44XknTkjvSCHscXDL
jusYIxpSV5jExgnwHQ+5PXl2lKAAhyGPdBGcc4P4fRMjxBHR4MNeZkVQqqaS
mho8QvjPfJh2+VYEm+/qbNvXO0zIvWg2N00qhkMWJR86w4cIQ2dj5fauYggW
ENiz8ewQ4WU0LHRxSwlYqI+NzDMMEW37GH+qPSmBO7+9hIKsB4lH1VLq+41K
QeeiUkGI3l8iMT1XNOlVKYilai+V8/8lGsOUmffUloJ4+MbRoy0DhIilHn2L
Yhlofgp8/1tvgKhm9pRmoJaD5q2C6tab/cTMEC+Xi1o5CLLJ5h+X7Se2N74e
mH5UDilOxjwfl/sIu+jU6IGRcsh7m3DaMKCP4D/6i/K1ogI6Gcgqr4p7CSRi
MX76XwWEc0WZHgvsJa5zTdaUyFbC5OX5x5lGvQS9lfVJTnQlkPt+zw8z9BKm
dw7MR7hUwfUkj1Y2jR4iJfXZr1vS1RBvLS3PxthNDFGGfNVNqsHCy8G2pr2L
ELujfkw8uBqk9F2FWfO7iGglrpiexWrYaDyZ0OTQRQR98bXQL6+BICb/6KDh
P8SdnoDJUwZ1UOivKKvX2UlkqE682xNQB1tMKrgD33cS4x+0LjCX1MHE2YQq
e6tOwsqOnFsoVg8pu3p698z8JvT/BbkenK4Hx2/3dJYov4korhoP8skGmIna
WfnnZjtx7Oh9AzfDBih2Nyq5rNhOtNtIHhy/2wBhRkbHtNnaiS2NPv21HxtA
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
7BXr/h//Q9zs
       "]], LineBox[CompressedData["
1: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
fHP/sTI/ChJW5LN1xM45wr/HJYCCaktDRlYttV6Lu+0pBcWw5Yw6YfOXteSk
hFPQrOCJQefVeqz/J4CSKai52qHUDduuXLjYlqCgmVtqy57Ysrv2pW0poSBm
sMQNL+zOKP3wxlIKyg91+rXq83axNsqfKEhjk/1bb+xDG7ev56ymoDe//lg8
wOa2P+gQ00JBxlwKaY+w40TNJL9OUVCs8K7GJ9jKe+UUzGYoaHlFX/4pduPJ
yX2zsxTErbfBZ9XcLg9PSS5SENde0z1Bq/nVpzp4sFJRjbGg37PVej+cKJYX
oqL2MBOpUOyOER+jwO1UlKVLEXm+Wj/OM5ZbZalou83Y5VWLbFprnydHRRJh
zumr1tB46dOtQEUi1fZHorCzk6vTVP6jogMh+65HY3vri8wPq1JRRZVhagy2
5Edm+JlLVJRy6Ud/AnaN/GxyqyEVmT5rkUnEdg0/8eaaMRVF+QRbr7rKur/2
4WUq8meT6Fu1A1mOh7CkIp7hz+1J2IRRhvtOJypaa+9ZQcc2mM0xJQdSkdbh
duOX2OxmHDdjn1AR/dzm8FVnVOndkQ+iIj8L0epVs8RNPz8RQkV7KnSVU7FT
1Pc33H9ORSPMT5Q07KngAvUxOhXxZY3kvMIO2lEq+62Iik7SNGter8bvv8Tj
VUxFVQ9YWDNX8zky2bu7lIpmR53+W/U/fSn6s3K8flJE9KpPPfTbrPWVimQ2
1l/Jwub8oy1c95OKvgRcGczGdg/qXKqepCKSikJVLnZwtEfrnWkqUnmtMrPq
VMaagh2zVNTSKLz17er+KzzuGrhARXYXN7qtWqk/bVyTlYZ+kJ5te4c9qurU
WyVEQyZZlxzeY1+dYK//IktDrHlHuvNXz1Pq0RpDeRryi9PkLljdj5d9qkZ2
0JDbOzm5VR+rZfu0ZjcNiardsFu1VBprweV9NHRiK9vcqrvNSPS5IzS0xiSZ
9QP2lW8LrjJGNNQfwDZXhG34+KBzoTGOj1RYS2DrInfHs6Y0pB7733+rPpox
f+OWOQ1pqDfbrVrSb86sxJqGghOdelbdqTqjqe9MQxVCClXF2GZZ4+KPn9LQ
RpcP7qXYNl46ixrPaMjTJT9y1bd0cn7wh+D+9UG5q340detJUDgNVZpU/lt1
xoG5hYgYGjpi72zyEXuuZKWJkUZDixNtB8pW6/uNP7Csgoakkg40lq/ef0k3
rB5+oaEqg+KhVSc51Rw5UUVD5fpSHJ+w34oEzVfV0JDLr6D/Vt1qQLNq+E5D
jgldoauW7lx/pKOThtaKvjpdgb0rx00suZuGJHYdvLJq5Qe/5ix6aYhN5pXb
qjWlYzL7B2hIyVqRuWqH6+JiY2M0JOvSsbxqj0Oec9kTNKTM9UD4M/YDgY5G
pykain/LK7vqyNdJ/rOzNNTMX6y76sT77Jb58zT0Z2XEetVpWhZqHos0xEhl
u7fqHIlPmw4v01DNnoWQVRdNSM2trNAQ8aEpZdX/A9cvSRE=
       "]], 
      LineBox[CompressedData["
1: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
       "]], 
      LineBox[CompressedData["
1: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
       "]], 
      LineBox[CompressedData["
1:eJwd13c8ld8fAHB7j4tSqVCEkBKJwjkpREqEVJQtGSkNFUUUZWWTskKy+pZU
1j3XtbdsUtl77+13nt/9497X+3We5znnM855XnefxW19azoaGho1/EX8/o42
8ao5nA1o/v9ZRmtc3z85K2eD++EJyjdmllC/54eL0/HZgIEzgprhuYS+2z6N
nbL7Bhp1b9PSfV5EcZ326rfrvgGzzfzYwHOLyPf8lfHJozmgwa2aWjC2gK7K
yZ+YXMsB1AsmUgoKC+h0yr4eR7PvYP8S7UOx7nkkvYvbd6LkO7C7KFxIGzCP
NjdHWsYDfgCTy4Pv+ibnUEJV3J0xoVxw1SnFkVI/i+ajciT/+ecCybHmfb0+
s0jDtrqvcSUX+AXGyOmpzaJx+iXDvKY80BDbwvexcAYpqlw48cqnADyXzQPu
1dPIj91qzm2+AHgL2tJphk6jvx2PMpzNC0GUtOKTZJNp5P0gWdD4JBkY7WpU
+jk0hRo+r9OJTyHQrnnAlMV6EvEC1uucMhTA453J5cE2iU6KhZ3wsaIAjYbh
Wye/TqDA+U9zj39RwDSM5z/AMoHkg1usLdKLQJ7z2q3I6jF03dVMraunCKyX
3+9a9BhDPjfGBI12UsHjx+zp9IpjqPMQbbvWCyr4GfpQcTRtFD2rktaWvVEM
JJezX9xJHEGpX36IpYcXA5cBR7pCyxHUGKVGf6CmGJRl3HbVFRtBorbGBTuV
SsB8m8x+4c/DqIreW4aGrxSQlhj9beuG0PwoF/tjrVJQIVoc/jdqCO1tjB6a
e1YK8lJFnhhYDSHn+M/xQ+OlYOdt54tCm4OIX+U3b31ZGaCOs87eUR5EUNRm
6uxGGUhUTbwtyDWI7Nhnqqly5UAuBAaEdw+ggg6mF9/jy0EUh9V0rc8Asnhw
dOn94wpw2d5zquNvP8r6/Oq3g0wVkDi3U/9peh8a5R311zavAqPpM5I0r/uQ
+ANtVYmwKlAUt+W5dLMPxSuzJ/StVIFEFu17yhJ9KKTS3+ZqaTU4e8GGvSu9
Fz3oC5rRNKkFjwZ2SwSW9qCvGtOJB4JqQUbM8JUraT1o6tNFA3pqLRj2j053
DepBN515fpDF64BJTNexzKs96OpGiNuxuTpgZW8yTZ3vRnHs1V486g1g99w9
BjuFbqSq8sTE43oDsLKtflsh1I26nKSOTT1sABsqtoU2rN1oZ6PfYE1aAyhR
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
PsU4
       "]]},
     Annotation[#, "Charting`Private`Tag$1030#1"]& ], 
    TagBox[
     {RGBColor[0.880722, 0.611041, 0.142051], AbsoluteThickness[1.6], Opacity[
      1.], LineBox[CompressedData["
1:eJwllIk3FAgcgIeZtEWSWse2bMrNQ1Ir4jclObaoTZItVwydjkoRRWwzIpXS
0iokWZHcXpKfTINm0BzIuGWQaRyTceVor++9733/wafhE/irnzSBQHD9x3+r
P6oklRVZDIT/mEXFtAZp8YdiqLjUvTCVMIPz8uW5QTtKgEhyzQteN4OC6Kz9
ExklYOa+mUzLmMZy/yuPxk+UAtXEc3UoYwrTO07ZBjaXQn8aSYV7bApp+46I
xkzL4MJm90LOnATdt5hZjM2XwVe538STlhK0earRf8arHJY7SSW86p9EQ9XV
tNG35fCzd+W3wBuTuLQ00iq6WQGKaqefrxB8wUxmevDnn15C+4P9rJOlYpSk
lOn3JrwErUXbw6oBYtzjzxrgzr0ECyPV75XVxSgizhyq5FXCqpX7Hty6PYHm
Vk4WcdQq4Mb3zUSqjmO8rO9khKQKis8X9NpmjGEPPyw/yPs16GkyNlnoj2Fs
aLa6m2U1nNYdj1W3G0X2iwVpnXEEdZ+RcxGZn1ERVnisMqoBpw3ZxVbWn9FS
+54F1bcGfHUiBbu7hZgoyZ0M59QAyS+d0aghRLM7rX4+eW/gEbf2zt3aT3iV
aei42ZMOt+fmSikuQ/hXUYV2XjIdQuZKryivGkJuyi6iViMdxsw/BCjUD6Km
v1uVyva3ML8j2bjIehCZxFgjwloGpMpHj2ZZClDJqlPxfV0d8LhWuzX9PiJZ
kzJuv1gHXgeOuO00+ognZMWs2i31EKMhb683249VfJnfyzPqgSRX32ST2I8+
oaYzD8MboOG+bc46eh8WvIjrPG3EhMSMTYvn7/egUFGY4OjNhI8itauXbHpQ
J9TRWvceE0LorPUUcTdm7JDNHJhjAiFCRyJ07sakdwkUdwYLdjlT7yoqd2Ho
wC2x3dEmSPGtkyEx+Vi8Z+Kx1q0mkBfkJ8fG8HE8d78LsbYJ9O0V4/Os+BgQ
tKaiWqcZtK03RveWtKP7YlLE1slmyDd4bUnL+YDpsqyYNbZsCNDdPu+d24rW
VpePRnmwQXOTU9XwqVbsOmuwdfwiGxp92maGjVpRhRs/1PiMDYU51PXO5S14
J2WvA02BA4zshIeRTB7GaDXLf+vkgOG53JYCGS76AydVFMKDq/e53LXXm5Dw
eLqyM54Hym7vR9iaTZhC+rGL+YQHcbrh9ipvG7HhHUU9t40Hy5/ZVViRGlHX
ZeGxn0ULONurXc+/wcRPATr5PVKtYHVCgxFdUI8nkyKr2bfb4DnFOHRiTy2e
HdQbKC3gg8W+hzaxokLs8+B/9+YdH4oZ2vf4vxTiwXaaUZOADwKzVtOwwy/Q
nDUcNvhDBzQ4xtc4dOQjsShbQYnaATV6YaHpohxMidCwvujZCUG0uKiqa2n4
Zq1q6naFbvCqWVf3NDMaVmrE6vSa94Fo2+gZKr0EEhVY+pleA7Bs+Bjdrr8B
fDpdkNg4BI+iGGOeQh4EM2J9AnWEsJs1MZLQ3gFFQXIHVRxGAbNcAjm0Psi8
fEpocngCTNicJzKcAbiWvnBAIhJDRDVByYEzBAReH7kqfBIErvMtihUjoH2e
cslFfwoMk+MXVbgiEEz94Sr7ehpSQrd8yikcB8fBk5FJwbNQO63KdjguBifB
bQN19a8gN2FMDBJ8ASHdJ6rh+TyQZdMorxwkYLSmTc3GcxEoETslVNYUrIQp
767JJciLVsnfZToDdqPuMxsPEcj36IMuZWWz0F7rK+VuKEU2a61Jlt78Fcpo
bz02TEmRw6z/pC5LmgfKsgt9zc3S5JvX1dOnVy/C8ZDLZXIPiOQVJlKCkXNL
YOxv0LzXm0T2ZC2YH2J/A+Nt1A2pESTy/z8lkP8GkhrOzg==
       "]]},
     Annotation[#, "Charting`Private`Tag$1030#2"]& ]}, {}, {}},
  AspectRatio->0.85,
  Axes->{True, True},
  AxesLabel->{
    FormBox["\"r [fm]\"", TraditionalForm], 
    FormBox["\"Re[V]\"", TraditionalForm]},
  AxesOrigin->{0, 0},
  AxesStyle->Directive[
   FontSize -> 25, Thickness -> 0.004, FontFamily -> "Helvetica", 
    GrayLevel[0]],
  BaseStyle->{FontSize -> 14},
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{{1.542442506842263}, {1.0976975935839428`}},
  GridLinesStyle->Directive[
    GrayLevel[0.5], 
    Dashing[{Small, Small}]],
  ImagePadding->All,
  ImageSize->{1200, 1200},
  Method->{
   "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
    AbsolutePointSize[6], "ScalingFunctions" -> None, 
    "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
        (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
         Part[#, 1]], 
        (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
         Part[#, 2]]}& ), "CopiedValueFunction" -> ({
        (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
         Part[#, 1]], 
        (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
         Part[#, 2]]}& )}},
  PlotRange->{{0., 4.999999897959183}, {-1.5, 2}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {0, 0}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{
  3.7464407177211514`*^9},ImageCache->GraphicsData["CompressedBitmap", "\<\
eJzsvQeYlNXZ+D1sY+lVUVExiTWaWKLGrokpJprERN+YmMhiAcFYULHETkdQ
igIiRRTFggrSe1dAkI703ntf+u79P79zzn3m2dkZZGd93+vLd2Wua5dlZp5T
7nP3dv5wb5OG9R+5t0mj++8967dP3Nu4YaP7nzzrN489Yd7KLBOLZX3Bz1kx
/pZYTH8lew3hV/LP/vvRfz/670f//ei/H/33o/9+9N+P/vvRfz/670f/8R/9
2P5TVo7uXiaT+/eWru1bS4s2HaTbh6Nk7qaDUmg+TfZ4c/f4yfafLDnw7bNy
TlljWZT/qXRceTjHvp0tUrhVBl1bRazRUeU6GbKtMJZpP8uUwv2LpO+Tv5Iz
cjPMAJgkmVImp5Zc82B3mbO3IOmszdKeNcN+VlHkwCLp8JuaksVnZbKl5qW3
yj8aNpbGD94tt179Q6mQiXmUKZWveF6m7i5ItoimJ7AIM1Hhbpn21P/Irbfe
Krf+9SmZvqfQP39EVnW5RqpkmEeyTpbfd54tewrErc88XHhQVg9+Tq6vbmBS
JkfqNJgsuwuTLUNeOe46KiowDq+QDj8tbzd10m0DZWsBX/afyVHZ0PdXUt2s
JaPqDfLhxmNJwX4iM5kx85dItxebyJNNXpRui/braRRuGyy/qFZGYhk15Lcj
d6TEqJePO8nJuuT9s+TBOtnmixXk4k4rDTCPO5rFtv0yu2EdyTb/K+/xrOLl
78r6o6IwP+6Ee6bInadk/t9NmD/3KTmbtzNOklvH7PwueNkJC+Xw9nWyetUq
M+Eq8ztT1mzcJ8fkuBMGDDFf3DL0Sbn7jjvkrgZvykxDfAFDDi6Tbr+uIZmG
XDJr/l6+2OI/y5IGDRokW9azxz3GSvbtSrJj1M1SvYwjtSqX3ivtP5sgc9fu
lD2bl8r0YV2lwRXVJIvPMyrJz5otkAMikXnL+8E3rFoga3qeLW+/3kSOFSSl
kodOYDnm7flNHMzLlJGMMmWy/anFMirKhQ0+kXWHxbEty6cyokvYs32NXULP
9o1l/4Ejds6f2c8y5ZVXXtFlJJ7g5SewrApSsKmfXFXZvF3hImk5+EN55e/X
yY9Pryo5GZlSrnodufy2hvLa0GWSXxCgk7i+gkO77fre79hQ1m/d+32uz8y4
7xupd7qZNKu2/HP6vgw/buGxcBQO9+yylE0UHj1gV/RRx/tl/optJVxRdftP
ruz9+h9y0em1pXZt93NarUoOYaIrNPh7ZLV0vaSCebCSXPnBBkgiVj4sqZKf
luV82qmefDV3Qyyt9WTK/tkPy9VncjRlQByHPm4t9htxYtstk/5wkmQYyPzg
kTmSn3RBy3r8WAa/8TcZNGlZUtr3WF3Tg/jo7hUyvmcT+W2tHLFOvgQgyCFZ
3PQCKRcrI1WuHyzbCpPNubj7T2XYm3dKz0HzjjfnSWHQQtk34wW5sHwZnS8M
xWfbht4gVc1iyiowzF9nN5lvKTmj2OTz3r5CRnf+o7T/aMbxJld8lGMb5cPr
q0oZN3FlP0r+3EfkBznOv5lzQvPO7HaNTOz6G2na68sTmlcKZM/cftKjZz+Z
t7dA5y08uE5mTBov48ePN/PyO9P8nijTlu83DySb9+u3bpSpb/1Cmrw5vqQY
d2WxwSZ1+a3MeOs6efi10aUfbEyX2+xpPNh6ZOkHG9H5z7K4x0/l/pYjSj/Y
kDfvkpU9z5d6zYcd76yKP9j/zTxL4vc2HVyyBz978wH7YP1mn5fswU86P2wf
fKRF35I9+FHXp+2Dj7d8t/QA+7jHS3awp1r1KP1gn73Xzg72Yps3Sj/YsM/e
soM1a9O+9INNGPGhHaxV21dLAuwsmT1lhH3wtbbNUqkPjVI9u2zBVPvsG+2e
l30HDpfo2e3rF9pnu73+tGzYtq9Ezx7eu94+26v9Y0F6XpY28Ix+cHhP0A8m
zFxX6vEKC47Y8fp1uk8+G7c47fGUta7sea4MeOOf8taA2bFSD7a0x09k8Jt/
ldZ9piXFlGJQ1wdVPD3/1qSSPYh8mdDlFmncfmzJHpz21k0y5a2bpeGro0r2
4KSuRhh0u96w3OGlB9iYzn+ye79XWW5pBhve+U6rZNRrNrT0gw3ufLes6HGB
1P0+BhvQ5V6LtPVSCIiUwP60q+PzDZp/VsIHuz/tBcQHJXuw/7vNPE/vWZIH
s2T4Jx3tg8+17iKHjzrT8NK0YZYl44e8oyxcdu8/VOrxvpk0wI7Xpm1rWbN5
T6nHWzZnvB2vfbuXZfbSLaUeb9vauXa8Lq/9W8ZMXy1JXg1TPXtozzpnJL7+
uHw4clGJni04uMM++16Hh6TLp7NK9GzhsYP22Y+NqdXinakn9GwVD6NVhvH2
f+MeeabLhFjawNPBYLxDDON95PUxpR/MMeM/SYPWI0o/2PS3rrf6830thpd+
sC+7/toMeIPkNUuuoaYE9tguf5C53a40Dw4t2YMjujieWrdpCR8c3OWf5ojP
K/mDA7o2sDh1f7MvSguwLPni7cZ2sEbNPxbVvy4pzXjvvqjqc/DGlGa8ER87
pfeZVm/Lpu37Sz3ehCHd7Xgvt+kk367cJkleD6Z6dtaX/e2zLV9tKxNmrS3R
syvnjwua7mfjlpTo2R3r5thnOxvG1/Xz2SV69sge5x3r8foT0vLdqaWGX5QZ
PtNlYqnHKzx2yI73idFWjfWc9nhV/TMre5xntNW7pb6yptIMtrD7xTL8zb/I
vcqaEl7FoK4Pzun2cxnX+fcp2VDKB/FKfNX1lymZQsoHJxqlE1W3xA+O6Xq7
LHj7sviD6QPMqDhd77aeMzOY5B901H9xKcYb0u0B9RvIlh37Sz3e0F5PeG7X
T75dta3U443s+4odr3GL92TirHWS5NUg1bMTv3Dq4LOtuqXiCCmfnTW+j332
lTYd5K3+STlCymdXzhkW1LyW704r0bPbV0+3z3Zs95I83XliqeF3ZNcKb4c/
Fai/NOMdy99qx3u3/cNSv9WIUo8XVd/qtRie9njV/DM4z+BOqfhCMcDrg992
v9S68lKRd8oHZ3a71pq/JXwwy5i+v7LcCFJWayXhVT/Vs+O7YrRebp/dufeg
/fJP0wabIbNufzcK7IV2vOXrdpV6vOE9HvTW5iCZtmBjqccb0aeJZyufyBeT
lpV6vHH9WgYlqsfAeZLklRL200d281bmW9L6vaTknfLZJV9/5izKV1+XZ7pO
LNGzW5Y6a69d2+byL0/KJ/rswa0uivjma8/LA55sSwO/o3vXhZBgvebDSj2e
hvD6dmggeQYH0x1PQ1Wre54jn3eqGyfK9AfLssbH0DfvtMShGnfC64FUz6qe
wrOqXZ/os9O6/VKmOFVF5i7bWqJnJ711m8x++yr77Oivk5ryKZ8d9/ZdanBJ
n+EL7Jd/Ugr4je7VwB5IXtMh8nrf6aUeb+wHT1lkadj8U7yVpR7vqwGtAzN4
5PXRpR5v7jhnAf27VdcgIxNeKWG/ZvYX9tnmbV7HI1miZ/eu/SpYQHU9EZ3Y
s9lyZOdi+2zX15+xzx49ljw76f5UAxzL32IH6N3hEZVKboCL0oZkdhHbhUFX
rN+V/qA1PJiWE3h+8y474NR5G0o93ty3r5SxXW614/WfsLTU433d7WaZ2vUm
O163AUlVz2KnoM9OfvuP1nfEs83f+apEz054p66BzQX22SffGF+yefs29h6T
AdLo1VElenb6oBbqJ8YOLDX8Fk/uHtT+vGZDSzieSxbMESnYLysnfyo932gr
rUgW7DtKvt15NCdhumzZ/O2gINIB3bGCQjf0hSc8Z4oUlO/OMCRaXyj7v+0t
9S+tIpnxtIyM8j+Sv7SdJDuORbNmdMkHNkyxS369bVO75O27D/yfLbmCHFn3
vtx5araUiWVIuTo3y4OvtJfOHVtK49svkkqkJmZWkatbzpb9hdGMJF37kV3L
Q2CRtS9duyMpo7rvBNdZLIPRp1Gazwq2yuA7TpGsWBnJ/eFDMnzbsfhnhftl
7uvXSVWz3jIVfyavLz+cZK3HDmwPrhzWOmHW2jTWqikuR9Z0k59VLGOAcrL8
aeg2m3WRqes5sEBePC/XDJItdR78RoyiEcnI0PUYfmoFMT5v1tN35MI01hPN
qVvf5yqpXCYmmSffLuN3RbMuD8niZqTjxCTnh4/J3Pzoemr6gRd2v0RGvPkX
u5bX+84ozVL2yrS/nWpT+Gwa4jH3rpWKU/4qp4JWla6Q9zccK76K2W9fa93j
rOI5r06cOCHE0k6GDIs/uk56X15ReOyUO6earcQXf2hpK7mwnHkk5yxpNDu/
+OKndP+deqXkX+1G/98v/tBSafnjckIy0g8bz7MpSLr4YxvelysrQdC15M9T
9sYXb7P3VGuZ3PPvsshrm/d79l/CHZQuNfTAfHnqbFK4cuW8FxbKwcgOCrYM
kGtITixTTX4xfleKHXz1QaPgQ1O9q9ScNCzv4CJP2WXl7KcXFAFwyJ3MOElu
+3JP0uVly4yBLkXmoeYfO1/DkeQZ0Pee2HqOrJSONtc6W858YKblNLqeo4ZD
XVohZnMl75mxL8V6Fk3orOFdNYtKs57CbTLkxqpGmpSRqjeOkO2F8fXkz33U
5cqV+7G0XHookXqM7J7/WfDysZT5K7aVZikGd7597lzJNVyo7NlNZP6BKEM8
Jhv7OmaZUeMWGberOEPMlvz1X9r1tG3b0q5n2NQVx1tPiRJFs2TPlHukdpYD
R4slh8LSCjbL57+uIRkGgpWvfg/KT7K0w9u/9bHhZ+3SQgqlU5j+V/JI934t
9c/Mtqh22t2DZesxvzBL0kbvmf2SXERqZkZVubGvTXwtvu6ow5J1t+g9taTr
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
/V5/Z7QRPdGyNTQXuDcoif5VoJ7OHGupaDILrhpUMaP1adIUuIKnEpU9eFOy
rB2NVwSOaAZzHb3KF5ECLWbvsu5R5gaJ8ceAHQ+1HZ3t4wDaKhjEI9cNlx1I
Bu8EaXx5693HQxxzXGu6uxtvsmv/Q4Zsi8iFIyvljUsqCNLj1LtGy47C6E05
h2V5h0ulgr0p57cybHth7LvRo+SX26VAjCzbK4x7pKmJKyw4qrihmSW4XnCP
4QbhBLUWg8x/5Rpw7Eh9s6IHxooN1jQdGm864Fx0iBHw4JtFm9SNitBXXkEC
KS7WChHc0M94DKI2C1IHOOwJzw4oY3QFxQ3QGv2GNCkjFH6oyyqqIeT4DeNm
QY6CZJgHmPcERshGQXFC/GR7BQQAgN2sEymJVoz/G5zBJMYcQYRRn99Peeie
qfLYubkWCWr+urVM2XUsFoTGrvFyS40MI2dqyu/dNWvh2qhDS1uHi+X+NSf/
S6Xnr++W07Kc7lLei7Eq148At+w3JvnHk94VmJ3srkCPyhEU+aPO5cOI+xZ/
7JdVzuFB86HhrnSmxdsN0PEt4/KPViFoFbixCIrgh6/gDewj2yYmNHGxfZsA
F49k5ViRhmda08xwjh8+ekzxBAcIskgjiAgWw4Fqeq6AKk8DTXBVfXV5vkEX
1h84ZHD5zOSIosnCWEdo1EQ4QRRUHfQagogYVb580wW5KjlOaIgIuYloBafA
3wE+XoJ/F6FmA11GhcbP38tOBWUUSv7CN+S2U/wVqD/8ozQdsloOGgYyXYlv
y1B59I5b5dbb68s7azw6m7c3fuh024yT5Y9f7TlRtAkYWfwKxlT4EWEhH98Y
ZyEO3Da1u+PYIuJFm0P4Zr7xiEx+kEYh86QolpijVywhe0hTfxiIMLWyEkKQ
asHg9aSMtKIHKYoqSo96LVprEa1RjjQig+OBEDCyxuCyOmnhPJwggovTQp86
LTmuOBdcRcsZER7Migwif4UkBBw1qGsk5IB92MhmeHcReFULNRw2EA1uBDaI
XCK7Az5jG/wYexdeg7uD1eAWwWY25NDezp5r0efQmoHywi1nSK69AbC8/OCW
J+Xd6duMhJB5ut2Fz8t5uahRZ0r9Wfu/1LcXN7UXhWVUuUpenbUlU3bt2mUG
3bVrhyzpfblUQiid9jcZZ1Ru84khi6OcZpB5xS++LI5AfzoOg9E6+sYd3dUY
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
nuSmnoJ6IMKhrtZ/5kj0T+/Ewi+Yq7/M+vkl59YesMMjqO/n3nskdn/OEtwG
NDCMYw+KiBxAhWILNEr7Ct/gz5G9S7OzOw3pe69d32QrUCVgLdpaWGvvhq4d
tkR9OqFTNfTaaQaKOlc52M51kxF6E/Jb9Ic8C3rz6oJ2N9DgAXCr3IzTGFgu
k/1h75B0xwYsqJfsD0xEQ484GvByq2pvIfuD5oKY5uPfpeVp1TfHrNA7Z/0S
N6S3e5r64bRoFboF06iBUdPa2BjtXwpStTvcZZLapoUS4UOEGfUQg9BxqfnZ
SV9+406uTzS6XPZKnScUjPYpbg1Jips6wodlm/SqyV2r2eqfvfwVYqluVlnV
VLdAywt29eH4rhbxPN1Y7dwG7NoBiPBZrkRS/zzxvKJZoOmFPE83lku6BuAh
nKFXC/BW8nS4VeJ0vfo53ViUEMgBKNg0Cvb+Q4Zw39WTZpm8YgPiVh+r3V/n
XPPOiUZHH/cF9V/hgT67xxuB7UYlXjXd69CrFnbz66uOwWDvs161OqdpBqlC
0sXTG5k5KVlPWl3iftc/nCfOmVaXeM/SPpk18q6nO6kwKEkleQs7nEi9Z9UR
75l2uSW+JpN3Vrn37Nw4E1da0vRFlqlMAh70G1+CBituQkvwJLVmaFjrukJL
+QAt7LN2Jf3l6ZxyNC1I1p7UTEK0FWLqwMdoNUxYmiaR8RQtEg1upJFrQbPI
1GvriGvcdM0iy9dytGqincAuV1PJNG9RUslqtJ1qNpXMGRM0n+w3qXPB/eGg
+aZchDSXFqqsj1RibeS9SQiZh6iHo1PEv9VNPCEoU+ox6cr7+pFaq3sIIQYd
la3oLq61eooQ4pCn3tdQ6cIv5TM0MiWmInfIebIjS96/0ydljLlWeEhHd6lJ
wyS9vR1hjwLA5xxry6NUzmBTgOQgE+QMgWy9hYQgO7QYtfuBILvF2yoJWSUV
VZd9c1Vx0yAAdAHCY7BeYX6eJgAHrUyT5tALgsKJSlY45/LHEGUxf1wxGOWd
4mHhRD3+Wtc6dLKj46lDTDuiQva6vbW8N0VaoDZGHLINuTCDMGERu5ESYtcI
k3QZYs8I1ZbNEDsvJ4ZItbBiSLde20wCFEE8vBBwaqGDHdj/V+6Bp0yz/lgf
6qE6QlAEoCSNeMeMC+ni/dku4D5sMBvNhof5zVxMeCxSGmUDmbSPEEGRaW5X
+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
7EJtxN4ec43URQq2qGtEnfjeqe23SYWh9675bRoWNJtVx6Y2gmeDGvRwBP62
Bt7VF6KRMIkvxE6tCmuAsmLngFt+kyw/iUh59dJCeYS5V1H7xWAyVK22UNXa
ZW3n6yTzZXPjnsuN/VV0bGcZmzSzzAta9yoyRbtPu8jYkhzfvU6Jju0qY33A
2VZm5iM/cPBnXydHx3aTsTkC3mFt8beODAzDjb7gZBIn80wSJxNrFFTRfNqG
Kpf4uN3azqehFlopXqL2c2NPjI7tKWPLb/gJ0bG9ZGwuwjA3tsi/4D5dV8am
Toafu9De7Ou46FitiLboreu9b+Dl8wtbry3yegsguRSUrdZ2vj4yXxinbBe5
5drOt57M591oAxyiLcK3WNv51pf5fAfr3Xyr28VTc2P/Lzq2r4xtmfOOTwyj
6daK+bmxRR5k9+kGMjbjRi7iDkUZKe7TDWVsjjvkxhb5kNynmu6sddAw9W66
tsjTake5G/UmaztfP5kvxwk2Xtv5Npb5HCdIYsLH9qt4Pm3HVaJbYNoSwA1K
qh1Jf8k48/BVhQt64pe//3vzNTphdNzeXDu5xV+5yzXaq7xfXwqZVvIpz5qO
/IKQrUU/vBTEzeSp5TngERWCWNQLLu0htzb95VIwNxfaSXMOB+VppzyMneVZ
a9qNrToLx9cEjnkvnpPkwGjN2s+n6xKwddLnr2H/syhsRTy/8mbvnwtexY3H
cpBtIb/KSQ+tRf3FIau8+1cOMq0vkHG2LPw41ptm7SCrvPtWDrKt5FdJSZSo
lPt+ZVBU3tIq10gpg6TyQvN7lYFSeT+oGCiKlfIy+NDKQKm8f1IMFNX1VLlP
YkPWGI7KexCVhqNIdewp4P0Pjv2a9fbJ0fG2MnuOK/WoGDx/T2kwS1472my7
QV/Tt6//W793Z98GLGTwa9RJJwfpdjJDUh/Tc6lYGdJykNaYZW+favbciI5Q
qZYgULpfJJhd8wY2OZC3F5CzwWRT9d75+SBrX+bViyaZEbcNMgf1pudLDqlr
3ComJ7x3ECjLK+wSZtRLkWMRsPSN8802IMBDk/SXqKC1Sg6ErwsI5VmY90En
B8K0zjB372MPpn+8tyx8bpORuuyTd5TJynOsA3NPtnrJ4rH3m1tvu9+8u6RN
D0toDs0pwdq5ugw3kmfsFhsoZoXnTlP2oa1S1lj51xrfyWXCn/dOazvfLjJf
cpkY3B9Calrb+XaV+XJHJtZaqKL5dpP5yhP3t6Jjd5ex5aly3+hYrdqy5P07
y9DVN6Nj95TFamRwhFjKDczePC2x1K8t8r4h84XE0jzlyVhPnIrm20vmy948
34mVfq1ovr1lvhyx1KztfPvIfOWJZc/o2G/K2OZJQ9NaC0XEUpR05T7dV8bq
9SlOLLtHx35LFluGWGTgpn6gxUpt9L8cny757Vf/9f/ufyW3XksHL93wLbe3
D1/1I74q/H8P3Vf/9dV/ffVfpf/LJ7DkebWPei5Svkz2VVTSxn26n4xFHo27
eUe9/uTGxuWalvq6+s9neTkZdfYVhcS7Tw+QsSoTfVz83NzYnaJjD5Sx5RWo
HaNjvyNjyyvmX4+O9XeVstp2fKBHVAM7mPt95vKe+26HMnPFWvIU3bZz821f
8Xxq+85Z7nLzbVfxfLXyHgtuTl/bRucbIGPLOwm3iY49VMaWt8T3j479nowt
byIvajDnPv2+jA2KRRmTzdszkRSMkvjT7ERVxpKUgbWfrNZn6rk+t2lkZvoq
qgNVcj6N/1BiCfOC0tcWFc+n4QxKLKLN5+b7WnS+w2VsQiy+JE9u7ObRsUfI
2PLEsll07JEytjyxbBod+yMZW55Y4nGNMfxp15aEWF6/Ik8sazpZbf7ql5tv
44rn03CG8qKqX8XzaThDcvWLcqqNovP9TMZyzfvs7r1KcKWi1CP36VEytjxX
Kuox4z49WsaWJ7S+0bH/J2PLE9r6FeNPIxDKE996Fc+nLpQynGpNJ6uNxpCn
r6L+OSXn03CGnMc7N19R9Tf36XEyNmdjyI1dNzr2eBmbsyfkxhZ14HGfniBj
y9sOekbHnihjy+tJPSrGn0YglNedulc8Xz/5rIw+taaToWmU06mKWguVnG9j
ma+8TlWU3ec+PVnGltefukbHniJjQ12pZd57ubFFTYjcp7+UscqV4oTWOTr2
VzLWcaXB/UsQWqeK8ad+6fLE11TxfOpNLk98HSueT4OiyhDfmk72ecRX1KDJ
fXq6jC1PaA3RsWfI2PKE1iE69kwZmyG0+eNzY+ujY38jY8sTWlHZyJL4U3eh
isQ48dVWPJ869ZZPfaYM8RXlvJacTz1u5YmvuuL5NBy0DPHFJztbAClPaEUN
rtyn58jY8oRWNOx3MqwkjbVHh/1ehpW887VVjC11LqVa/e5ZaitqoVVyKvUr
lSS01RVPpS4l1xMiRmOrKp5KvUklyaslOtUFMlWcisqNKUNARY2/3Kd/lGEl
aWdFdNifZFhJ2lleMY7UaZRhV3PGplM1VzyV+otKcq+iXmMlp1JX0cqZb8TV
s3iWemwq9RKVFJhFbXbdp3+WYSVpZ3F0mLYOitNOuTFlaKeoRK779DIZFtLO
0vH3pMOK2qiVxJFaOkvaGhZUPJUaPjE6RhX6+RVPpXbQkvr9vIqnyptFi+ip
qJWb+/RvMqwk7cyJDrtShmVopy2gndnRYVfJMKWdokvjrLLDHPm8cLbeDz9v
WAxNB+tUpW6GMyue6rsyVclLYVFfupJTHSJTlbwjTq94KrV6liSpz6JTXS/D
QvKh5VvyihefuEGGKfkUWSTiKZo3yjDfzDNijPgkOkz7/JS0OUytGE1aRDRu
bpB5vH23g1m9aKJ56eHB5qarLzd/Jq787qfN2JmunlqhrtJnZWluyfv/SR83
xT9Oo3nWOKK7xrQvG2+GnHWA2bChuuAjnGpMVX1v842TbzHvLGkr1H4+lD+U
p5c0sE1eayi9RmpvgMvHm2u+09PU8l1Vnem54wBz9ClnmjNPPsoM2HNT00S4
mAWry67nmdGL2mo+H2g123JwtFxbRk2YVAHQnWKR6DJ+lZny92+YrtWEdq5r
DrnxbbO4zSRBd+0rzNSh55p9ulsoq+pNv4EvmUXt+aC7f8qzS+qzH5eFMYn+
a5lkrnHhpzWm16GPmTltYVzlajN9yAGmu4Wzuts3zd0zWvPRirfI7CXtjhMr
gMI+r/lDc/MFg8xZgy4wN49fVi+YaJ871Hx7HUIPe5iDnpqvZzJ9/K0yPmO6
XLkwffxHZR+/rmJ82Vvm5H6EQDaZHa6bbFbln3ObjFczZ5E8+7Cy5yweZY7s
U1P6OTFi/InMueS92+MK1YSKnt089myzeQcf1jzg2QXFuIw9WzuKxLWy8g8O
8wlmDz/LHHXEEeYnA28wY5RxuDjsiebmA3u4YP6anoeYR2e3FWLRxbE6Wj9V
2iml/Y0vC563OnU285/e33Sv8hyi647Hm6sffMGM/XSBWTzrI/P64zeZgbuu
4wN8qzubnS/2oeKVgqgW/cwt5aOHUhA/qABE+/G4QX7rqqpMdVVVnXDiQnUn
s83A+8y0ljCfJoXo3zK8pHL6fgVPb0rj4Zu2NZcOvdtc+LO9Tf8NiCuuMY3d
+5ldDj3FXDl8omlWzpEDY7BMTynkqBbyXkVIMEvfNMdtYOeu7Wv+73UfC4+I
ak3Lv+SCUf8jI0vqLL6h75qFdhOwP9Xc9PUmO7Cz2e0uFw/tfY7pk++UJ5fU
mt8Nn7wGodr2RjPye71MtV3qJqe9wxUz/+jYKT5GMZto44dn1SlfAKeyMGxJ
ArqIJKAq03WfoWZue0VQHCtQqHJfpJ35jt5lQ681HtiFCQ//pulWRQaHIIxc
jkHjcge0JDjHCThJ/9q81ufbnpcKw9Yg8Oaxp/nUiALJNWsFyfHyWVxpzIOR
jclWMNpXTDNvjBxhRoygwwLvNfb9RfPqx8tcclkOjHt0tlL3lbf8U3Mq770y
LLybNE9+PB1W1CXYfXqfDCvpFH0zOux+GbZ66WdxDeeN6LAYik+SqUqqKa9X
PNVAmSqrcixKp3qt4qnULVNSq3i14qnUS1NSSSjqkuw+fUSmisv3cmPycvem
dNio6LBHZVgqC3Mk90p02GMyDH4F3yoSYi9XjKNTdapS1+GXKp7qNJkqI1oW
TU6nGlnxVOpuyQSehaRZ1Cu65FTqfaEMYNSR/0J0qsdlWEkf/ojosCdkWOba
HJLc89FhTwrg8UDucmM8u5r73OnFql5R16KSODpLpippOH624qkGyVRZY/Ir
6VRFzbJLTqVulJIxRk9XPJV6VVYt+Ciu9TwVneo5GVZSZXkyOux5GVbS0PdE
dNgIGVZSF3g8OuwFGbZozHVxmV3U5Lskms6Tz+JCd03nyVlhxv07nWpYxVOd
L1OVNJUMrXgq9aogmKJ+jv9Gp3pZhmV9/R+kwx6LDntFhpX0XzwaHTZKhjlJ
GiO5orbn7tPRMqwkyT1cMZoulqlSMjwmS4YPVTzVJTJVSRv0g2s8FcPnv3x+
sV268qnUGZMJl3v3tnSqB6JTvSHDSlLi/dFhb8owJ2AfOLCY6uJ1XMfIsAzV
zR2XDitqK+8+fUuGlaS6eypG019lqpJe2LsrnuoKmap58hNx6hxS8VTqRCnJ
JO+qeCp1rJSkzjujU70rw7yH5KxiSowPG6fDMlR3azrsP9Fh78mwklR3R3TY
+zKs5O3i9orRdK1MtXrJtLhPd3DFU10nU5Wkzn9XPJU6UUpSZ1GDwZJTqWMl
pM62VUvTqW6LTvWRDCtJibdGh02UYSWp7paywxz/G/mHYqqLD/tYh4VUN/af
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
hw==\
\>"]]
}, Open  ]],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"ReVas", "[", "s_", "]"}], ":=", 
   RowBox[{"Block", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"an", "=", 
       RowBox[{
        RowBox[{"ccont", "[", 
         RowBox[{"[", "1", "]"}], "]"}], "-", 
        RowBox[{
         RowBox[{"\[Alpha]cont", "[", 
          RowBox[{"[", "1", "]"}], "]"}], 
         RowBox[{"mDcal", "[", 
          RowBox[{
           RowBox[{"2", "\[Pi]"}], ",", 
           RowBox[{"Tscancorig", "[", 
            RowBox[{"[", "s", "]"}], "]"}], ",", 
           RowBox[{"kfinal", "[", 
            RowBox[{"[", "1", "]"}], "]"}], ",", 
           RowBox[{"kfinal", "[", 
            RowBox[{"[", "2", "]"}], "]"}]}], "]"}]}], "+", 
        FractionBox[
         RowBox[{"2", " ", 
          RowBox[{"\[Sigma]cont", "[", 
           RowBox[{"[", "1", "]"}], "]"}]}], 
         RowBox[{"mDcal", "[", 
          RowBox[{
           RowBox[{"2", "\[Pi]"}], ",", 
           RowBox[{"Tscancorig", "[", 
            RowBox[{"[", "s", "]"}], "]"}], ",", 
           RowBox[{"kfinal", "[", 
            RowBox[{"[", "1", "]"}], "]"}], ",", 
           RowBox[{"kfinal", "[", 
            RowBox[{"[", "2", "]"}], "]"}]}], "]"}]]}]}], "}"}], ",", 
     RowBox[{"If", "[", 
      RowBox[{
       RowBox[{"an", ">", "0"}], ",", 
       RowBox[{"0.999", "an"}], ",", 
       RowBox[{"1.001", " ", "an"}]}], "]"}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"ReVlas", "[", "s_", "]"}], ":=", 
   RowBox[{"Block", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"an", "=", 
       RowBox[{
        RowBox[{"ccont", "[", 
         RowBox[{"[", "1", "]"}], "]"}], "-", 
        RowBox[{
         RowBox[{"\[Alpha]cont", "[", 
          RowBox[{"[", "1", "]"}], "]"}], 
         RowBox[{"mDcal", "[", 
          RowBox[{
           RowBox[{"2", "\[Pi]"}], ",", 
           RowBox[{"Tscancorig", "[", 
            RowBox[{"[", "s", "]"}], "]"}], ",", 
           RowBox[{"kfinall", "[", 
            RowBox[{"[", "1", "]"}], "]"}], ",", 
           RowBox[{"kfinall", "[", 
            RowBox[{"[", "2", "]"}], "]"}]}], "]"}]}], "+", 
        FractionBox[
         RowBox[{"2", " ", 
          RowBox[{"\[Sigma]cont", "[", 
           RowBox[{"[", "1", "]"}], "]"}]}], 
         RowBox[{"mDcal", "[", 
          RowBox[{
           RowBox[{"2", "\[Pi]"}], ",", 
           RowBox[{"Tscancorig", "[", 
            RowBox[{"[", "s", "]"}], "]"}], ",", 
           RowBox[{"kfinall", "[", 
            RowBox[{"[", "1", "]"}], "]"}], ",", 
           RowBox[{"kfinall", "[", 
            RowBox[{"[", "2", "]"}], "]"}]}], "]"}]]}]}], "}"}], ",", 
     RowBox[{"If", "[", 
      RowBox[{
       RowBox[{"an", ">", "0"}], ",", 
       RowBox[{"0.999", "an"}], ",", 
       RowBox[{"1.001", " ", "an"}]}], "]"}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"ReVuas", "[", "s_", "]"}], ":=", 
   RowBox[{"Block", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"an", "=", 
       RowBox[{
        RowBox[{"ccont", "[", 
         RowBox[{"[", "1", "]"}], "]"}], "-", 
        RowBox[{
         RowBox[{"\[Alpha]cont", "[", 
          RowBox[{"[", "1", "]"}], "]"}], 
         RowBox[{"mDcal", "[", 
          RowBox[{
           RowBox[{"2", "\[Pi]"}], ",", 
           RowBox[{"Tscancorig", "[", 
            RowBox[{"[", "s", "]"}], "]"}], ",", 
           RowBox[{"kfinalu", "[", 
            RowBox[{"[", "1", "]"}], "]"}], ",", 
           RowBox[{"kfinalu", "[", 
            RowBox[{"[", "2", "]"}], "]"}]}], "]"}]}], "+", 
        FractionBox[
         RowBox[{"2", " ", 
          RowBox[{"\[Sigma]cont", "[", 
           RowBox[{"[", "1", "]"}], "]"}]}], 
         RowBox[{"mDcal", "[", 
          RowBox[{
           RowBox[{"2", "\[Pi]"}], ",", 
           RowBox[{"Tscancorig", "[", 
            RowBox[{"[", "s", "]"}], "]"}], ",", 
           RowBox[{"kfinalu", "[", 
            RowBox[{"[", "1", "]"}], "]"}], ",", 
           RowBox[{"kfinalu", "[", 
            RowBox[{"[", "2", "]"}], "]"}]}], "]"}]]}]}], "}"}], ",", 
     RowBox[{"If", "[", 
      RowBox[{
       RowBox[{"an", ">", "0"}], ",", 
       RowBox[{"0.999", "an"}], ",", 
       RowBox[{"1.001", " ", "an"}]}], "]"}]}], "]"}]}], ";"}]}], "Input",
 CellChangeTimes->{{3.746441745256133*^9, 3.746441791488122*^9}, {
  3.746444341849702*^9, 3.746444423562974*^9}}],

Cell[BoxData[{
 RowBox[{
  RowBox[{"rsbth", "=", 
   RowBox[{"Table", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{"Tscancorig", "[", 
        RowBox[{"[", "n", "]"}], "]"}], ",", " ", 
       RowBox[{"r", "/.", 
        RowBox[{"FindRoot", "[", 
         RowBox[{
          RowBox[{
           RowBox[{"ReV", "[", 
            RowBox[{
             FractionBox["r", "conv"], ",", 
             RowBox[{"mDcal", "[", 
              RowBox[{
               RowBox[{"2", "\[Pi]"}], ",", 
               RowBox[{"Tscancorig", "[", 
                RowBox[{"[", "n", "]"}], "]"}], ",", 
               RowBox[{"kfinal", "[", 
                RowBox[{"[", "1", "]"}], "]"}], ",", 
               RowBox[{"kfinal", "[", 
                RowBox[{"[", "2", "]"}], "]"}]}], "]"}], ",", 
             RowBox[{"\[Alpha]cont", "[", 
              RowBox[{"[", "1", "]"}], "]"}], ",", 
             RowBox[{"\[Sigma]cont", "[", 
              RowBox[{"[", "1", "]"}], "]"}], ",", 
             RowBox[{"ccont", "[", 
              RowBox[{"[", "1", "]"}], "]"}]}], "]"}], "\[Equal]", 
           RowBox[{"ReVas", "[", "n", "]"}]}], ",", 
          RowBox[{"{", 
           RowBox[{"r", ",", "1", ",", 
            RowBox[{"1", "/", "100"}], ",", "20"}], "}"}]}], "]"}]}]}], "}"}],
      ",", 
     RowBox[{"{", 
      RowBox[{"n", ",", "1", ",", 
       RowBox[{"Length", "[", "Tscancorig", "]"}]}], "}"}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Do", "[", 
   RowBox[{
    RowBox[{"If", "[", 
     RowBox[{
      RowBox[{
       RowBox[{"ReV", "[", 
        RowBox[{
         FractionBox[
          RowBox[{"rsbth", "[", 
           RowBox[{"[", 
            RowBox[{"n", ",", "2"}], "]"}], "]"}], "conv"], ",", 
         RowBox[{"mDcal", "[", 
          RowBox[{
           RowBox[{"2", "\[Pi]"}], ",", 
           RowBox[{"Tscancorig", "[", 
            RowBox[{"[", "n", "]"}], "]"}], ",", 
           RowBox[{"kfinal", "[", 
            RowBox[{"[", "1", "]"}], "]"}], ",", 
           RowBox[{"kfinal", "[", 
            RowBox[{"[", "2", "]"}], "]"}]}], "]"}], ",", 
         RowBox[{"\[Alpha]cont", "[", 
          RowBox[{"[", "1", "]"}], "]"}], ",", 
         RowBox[{"\[Sigma]cont", "[", 
          RowBox[{"[", "1", "]"}], "]"}], ",", 
         RowBox[{"ccont", "[", 
          RowBox[{"[", "1", "]"}], "]"}]}], "]"}], ">", 
       RowBox[{"11", "/", "10"}]}], ",", 
      RowBox[{
       RowBox[{"rsbth", "[", 
        RowBox[{"[", 
         RowBox[{"n", ",", "2"}], "]"}], "]"}], "=", 
       RowBox[{"r", "/.", 
        RowBox[{"FindRoot", "[", 
         RowBox[{
          RowBox[{
           RowBox[{"ReV", "[", 
            RowBox[{
             FractionBox["r", "conv"], ",", 
             RowBox[{"mDcal", "[", 
              RowBox[{
               RowBox[{"2", "\[Pi]"}], ",", 
               RowBox[{"Tscancorig", "[", 
                RowBox[{"[", "n", "]"}], "]"}], ",", 
               RowBox[{"kfinal", "[", 
                RowBox[{"[", "1", "]"}], "]"}], ",", 
               RowBox[{"kfinal", "[", 
                RowBox[{"[", "2", "]"}], "]"}]}], "]"}], ",", 
             RowBox[{"\[Alpha]cont", "[", 
              RowBox[{"[", "1", "]"}], "]"}], ",", 
             RowBox[{"\[Sigma]cont", "[", 
              RowBox[{"[", "1", "]"}], "]"}], ",", 
             RowBox[{"ccont", "[", 
              RowBox[{"[", "1", "]"}], "]"}]}], "]"}], "\[Equal]", "1.1"}], 
          ",", 
          RowBox[{"{", 
           RowBox[{"r", ",", "1", ",", 
            RowBox[{"1", "/", "100"}], ",", "20"}], "}"}]}], "]"}]}]}]}], 
     "]"}], ",", 
    RowBox[{"{", 
     RowBox[{"n", ",", 
      RowBox[{"Length", "[", "rsbth", "]"}]}], "}"}]}], "]"}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"rsbinvth", "=", 
   RowBox[{"Table", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{"Tscancorig", "[", 
        RowBox[{"[", "n", "]"}], "]"}], ",", 
       RowBox[{"conv", "/", 
        RowBox[{"rsbth", "[", 
         RowBox[{"[", 
          RowBox[{"n", ",", "2"}], "]"}], "]"}]}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"n", ",", "1", ",", 
       RowBox[{"Length", "[", "Tscancorig", "]"}]}], "}"}]}], "]"}]}], 
  ";"}], "\n", 
 RowBox[{
  RowBox[{"reg", "=", 
   RowBox[{"Table", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{"Tscancorig", "[", 
        RowBox[{"[", "n", "]"}], "]"}], ",", 
       RowBox[{"2", "\[Pi]", " ", 
        RowBox[{"Tscancorig", "[", 
         RowBox[{"[", "n", "]"}], "]"}], 
        FractionBox[
         SuperscriptBox[
          RowBox[{"rsbinvth", "[", 
           RowBox[{"[", 
            RowBox[{"n", ",", "2"}], "]"}], "]"}], "2"], 
         SuperscriptBox[
          RowBox[{"mDcal", "[", 
           RowBox[{
            RowBox[{"2", "\[Pi]"}], ",", 
            RowBox[{"Tscancorig", "[", 
             RowBox[{"[", "n", "]"}], "]"}], ",", 
            RowBox[{"kfinal", "[", 
             RowBox[{"[", "1", "]"}], "]"}], ",", 
            RowBox[{"kfinal", "[", 
             RowBox[{"[", "2", "]"}], "]"}]}], "]"}], "2"]]}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"n", ",", "1", ",", 
       RowBox[{"Length", "[", "Tscancorig", "]"}]}], "}"}]}], "]"}]}], 
  ";"}]}], "Input",
 CellChangeTimes->{{3.7463314220531054`*^9, 3.746331424884623*^9}, {
   3.746352268598981*^9, 3.746352283648172*^9}, {3.7464410090448303`*^9, 
   3.7464411036852903`*^9}, 3.746441185978527*^9, {3.746441218799446*^9, 
   3.7464412499011497`*^9}, {3.7464413543552303`*^9, 3.74644147584313*^9}, {
   3.746441518284561*^9, 3.746441576876543*^9}, {3.7464416146697607`*^9, 
   3.746441614777619*^9}, {3.746441680862108*^9, 3.7464416809650173`*^9}, 
   3.746441830019743*^9, 3.746441947869338*^9, {3.746442099495295*^9, 
   3.746442100014925*^9}, {3.746444428428197*^9, 3.746444430156713*^9}, {
   3.746444654050021*^9, 3.7464446796889753`*^9}, {3.746444737706314*^9, 
   3.746444760762403*^9}}],

Cell[BoxData[{
 RowBox[{
  RowBox[{"rsbuth", "=", 
   RowBox[{"Table", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{"Tscancorig", "[", 
        RowBox[{"[", "n", "]"}], "]"}], ",", " ", 
       RowBox[{"r", "/.", 
        RowBox[{"FindRoot", "[", 
         RowBox[{
          RowBox[{
           RowBox[{"ReV", "[", 
            RowBox[{
             FractionBox["r", "conv"], ",", 
             RowBox[{"mDcal", "[", 
              RowBox[{
               RowBox[{"2", "\[Pi]"}], ",", 
               RowBox[{"Tscancorig", "[", 
                RowBox[{"[", "n", "]"}], "]"}], ",", 
               RowBox[{"kfinalu", "[", 
                RowBox[{"[", "1", "]"}], "]"}], ",", 
               RowBox[{"kfinalu", "[", 
                RowBox[{"[", "2", "]"}], "]"}]}], "]"}], ",", 
             RowBox[{"\[Alpha]cont", "[", 
              RowBox[{"[", "1", "]"}], "]"}], ",", 
             RowBox[{"\[Sigma]cont", "[", 
              RowBox[{"[", "1", "]"}], "]"}], ",", 
             RowBox[{"ccont", "[", 
              RowBox[{"[", "1", "]"}], "]"}]}], "]"}], "==", 
           RowBox[{"ReVuas", "[", "n", "]"}]}], ",", 
          RowBox[{"{", 
           RowBox[{"r", ",", "1", ",", 
            RowBox[{"1", "/", "100"}], ",", "10"}], "}"}]}], "]"}]}]}], "}"}],
      ",", 
     RowBox[{"{", 
      RowBox[{"n", ",", "1", ",", 
       RowBox[{"Length", "[", "Tscancorig", "]"}]}], "}"}]}], "]"}]}], 
  ";"}], "\n", 
 RowBox[{
  RowBox[{"Do", "[", 
   RowBox[{
    RowBox[{"If", "[", 
     RowBox[{
      RowBox[{
       RowBox[{"ReV", "[", 
        RowBox[{
         FractionBox[
          RowBox[{"rsbuth", "[", 
           RowBox[{"[", 
            RowBox[{"n", ",", "2"}], "]"}], "]"}], "conv"], ",", 
         RowBox[{"mDcal", "[", 
          RowBox[{
           RowBox[{"2", "\[Pi]"}], ",", 
           RowBox[{"Tscancorig", "[", 
            RowBox[{"[", "n", "]"}], "]"}], ",", 
           RowBox[{"kfinalu", "[", 
            RowBox[{"[", "1", "]"}], "]"}], ",", 
           RowBox[{"kfinalu", "[", 
            RowBox[{"[", "2", "]"}], "]"}]}], "]"}], ",", 
         RowBox[{"\[Alpha]cont", "[", 
          RowBox[{"[", "1", "]"}], "]"}], ",", 
         RowBox[{"\[Sigma]cont", "[", 
          RowBox[{"[", "1", "]"}], "]"}], ",", 
         RowBox[{"ccont", "[", 
          RowBox[{"[", "1", "]"}], "]"}]}], "]"}], ">", 
       RowBox[{"11", "/", "10"}]}], ",", 
      RowBox[{
       RowBox[{"rsbuth", "[", 
        RowBox[{"[", 
         RowBox[{"n", ",", "2"}], "]"}], "]"}], "=", 
       RowBox[{"r", "/.", 
        RowBox[{"FindRoot", "[", 
         RowBox[{
          RowBox[{
           RowBox[{"ReV", "[", 
            RowBox[{
             FractionBox["r", "conv"], ",", 
             RowBox[{"mDcal", "[", 
              RowBox[{
               RowBox[{"2", "\[Pi]"}], ",", 
               RowBox[{"Tscancorig", "[", 
                RowBox[{"[", "n", "]"}], "]"}], ",", 
               RowBox[{"kfinalu", "[", 
                RowBox[{"[", "1", "]"}], "]"}], ",", 
               RowBox[{"kfinalu", "[", 
                RowBox[{"[", "2", "]"}], "]"}]}], "]"}], ",", 
             RowBox[{"\[Alpha]cont", "[", 
              RowBox[{"[", "1", "]"}], "]"}], ",", 
             RowBox[{"\[Sigma]cont", "[", 
              RowBox[{"[", "1", "]"}], "]"}], ",", 
             RowBox[{"ccont", "[", 
              RowBox[{"[", "1", "]"}], "]"}]}], "]"}], "\[Equal]", "1.1"}], 
          ",", 
          RowBox[{"{", 
           RowBox[{"r", ",", "1", ",", 
            RowBox[{"1", "/", "100"}], ",", "20"}], "}"}]}], "]"}]}]}]}], 
     "]"}], ",", 
    RowBox[{"{", 
     RowBox[{"n", ",", 
      RowBox[{"Length", "[", "rsbuth", "]"}]}], "}"}]}], "]"}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"rsbuinvth", "=", 
   RowBox[{"Table", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{"Tscancorig", "[", 
        RowBox[{"[", "n", "]"}], "]"}], ",", 
       RowBox[{"conv", "/", 
        RowBox[{"rsbuth", "[", 
         RowBox[{"[", 
          RowBox[{"n", ",", "2"}], "]"}], "]"}]}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"n", ",", "1", ",", 
       RowBox[{"Length", "[", "Tscancorig", "]"}]}], "}"}]}], "]"}]}], 
  ";"}], "\n", 
 RowBox[{
  RowBox[{"regu", "=", 
   RowBox[{"Table", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{"Tscancorig", "[", 
        RowBox[{"[", "n", "]"}], "]"}], ",", 
       RowBox[{"2", "\[Pi]", " ", 
        RowBox[{"Tscancorig", "[", 
         RowBox[{"[", "n", "]"}], "]"}], 
        FractionBox[
         SuperscriptBox[
          RowBox[{"rsbuinvth", "[", 
           RowBox[{"[", 
            RowBox[{"n", ",", "2"}], "]"}], "]"}], "2"], 
         SuperscriptBox[
          RowBox[{"mDcal", "[", 
           RowBox[{
            RowBox[{"2", "\[Pi]"}], ",", 
            RowBox[{"Tscancorig", "[", 
             RowBox[{"[", "n", "]"}], "]"}], ",", 
            RowBox[{"kfinalu", "[", 
             RowBox[{"[", "1", "]"}], "]"}], ",", 
            RowBox[{"kfinalu", "[", 
             RowBox[{"[", "2", "]"}], "]"}]}], "]"}], "2"]]}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"n", ",", "1", ",", 
       RowBox[{"Length", "[", "Tscancorig", "]"}]}], "}"}]}], "]"}]}], 
  ";"}]}], "Input",
 CellChangeTimes->{{3.746441815513526*^9, 3.746441858377223*^9}, {
   3.7464419014757023`*^9, 3.746441908235921*^9}, 3.746441951445382*^9, {
   3.746442117928008*^9, 3.746442118479145*^9}, {3.746442278592072*^9, 
   3.7464422808645487`*^9}, {3.746443020337327*^9, 3.7464430207046547`*^9}, 
   3.746443052457436*^9, {3.746443118819728*^9, 3.746443164595776*^9}, {
   3.7464432718784313`*^9, 3.7464432938360863`*^9}, {3.746443331255473*^9, 
   3.746443387611371*^9}, {3.746443477532393*^9, 3.746443504513671*^9}, {
   3.746443930161189*^9, 3.7464439314750233`*^9}, {3.74644425153689*^9, 
   3.74644427069593*^9}, {3.746444435733879*^9, 3.746444455164632*^9}, {
   3.746444682624689*^9, 3.746444684431925*^9}, {3.746444772014819*^9, 
   3.746444779860512*^9}}],

Cell[BoxData[{
 RowBox[{
  RowBox[{"rsblth", "=", 
   RowBox[{"Table", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{"Tscancorig", "[", 
        RowBox[{"[", "n", "]"}], "]"}], ",", " ", 
       RowBox[{"r", "/.", 
        RowBox[{"FindRoot", "[", 
         RowBox[{
          RowBox[{
           RowBox[{"ReV", "[", 
            RowBox[{
             FractionBox["r", "conv"], ",", 
             RowBox[{"mDcal", "[", 
              RowBox[{
               RowBox[{"2", "\[Pi]"}], ",", 
               RowBox[{"Tscancorig", "[", 
                RowBox[{"[", "n", "]"}], "]"}], ",", 
               RowBox[{"kfinall", "[", 
                RowBox[{"[", "1", "]"}], "]"}], ",", 
               RowBox[{"kfinall", "[", 
                RowBox[{"[", "2", "]"}], "]"}]}], "]"}], ",", 
             RowBox[{"\[Alpha]cont", "[", 
              RowBox[{"[", "1", "]"}], "]"}], ",", 
             RowBox[{"\[Sigma]cont", "[", 
              RowBox[{"[", "1", "]"}], "]"}], ",", 
             RowBox[{"ccont", "[", 
              RowBox[{"[", "1", "]"}], "]"}]}], "]"}], "\[Equal]", 
           RowBox[{"ReVlas", "[", "n", "]"}]}], ",", 
          RowBox[{"{", 
           RowBox[{"r", ",", "1", ",", 
            RowBox[{"1", "/", "100"}], ",", "20"}], "}"}]}], "]"}]}]}], "}"}],
      ",", 
     RowBox[{"{", 
      RowBox[{"n", ",", "1", ",", 
       RowBox[{"Length", "[", "Tscancorig", "]"}]}], "}"}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Do", "[", 
   RowBox[{
    RowBox[{"If", "[", 
     RowBox[{
      RowBox[{
       RowBox[{"ReV", "[", 
        RowBox[{
         FractionBox[
          RowBox[{"rsblth", "[", 
           RowBox[{"[", 
            RowBox[{"n", ",", "2"}], "]"}], "]"}], "conv"], ",", 
         RowBox[{"mDcal", "[", 
          RowBox[{
           RowBox[{"2", "\[Pi]"}], ",", 
           RowBox[{"Tscancorig", "[", 
            RowBox[{"[", "n", "]"}], "]"}], ",", 
           RowBox[{"kfinall", "[", 
            RowBox[{"[", "1", "]"}], "]"}], ",", 
           RowBox[{"kfinall", "[", 
            RowBox[{"[", "2", "]"}], "]"}]}], "]"}], ",", 
         RowBox[{"\[Alpha]cont", "[", 
          RowBox[{"[", "1", "]"}], "]"}], ",", 
         RowBox[{"\[Sigma]cont", "[", 
          RowBox[{"[", "1", "]"}], "]"}], ",", 
         RowBox[{"ccont", "[", 
          RowBox[{"[", "1", "]"}], "]"}]}], "]"}], ">", 
       RowBox[{"11", "/", "10"}]}], ",", 
      RowBox[{
       RowBox[{"rsblth", "[", 
        RowBox[{"[", 
         RowBox[{"n", ",", "2"}], "]"}], "]"}], "=", 
       RowBox[{"r", "/.", 
        RowBox[{"FindRoot", "[", 
         RowBox[{
          RowBox[{
           RowBox[{"ReV", "[", 
            RowBox[{
             FractionBox["r", "conv"], ",", 
             RowBox[{"mDcal", "[", 
              RowBox[{
               RowBox[{"2", "\[Pi]"}], ",", 
               RowBox[{"Tscancorig", "[", 
                RowBox[{"[", "n", "]"}], "]"}], ",", 
               RowBox[{"kfinall", "[", 
                RowBox[{"[", "1", "]"}], "]"}], ",", 
               RowBox[{"kfinall", "[", 
                RowBox[{"[", "2", "]"}], "]"}]}], "]"}], ",", 
             RowBox[{"\[Alpha]cont", "[", 
              RowBox[{"[", "1", "]"}], "]"}], ",", 
             RowBox[{"\[Sigma]cont", "[", 
              RowBox[{"[", "1", "]"}], "]"}], ",", 
             RowBox[{"ccont", "[", 
              RowBox[{"[", "1", "]"}], "]"}]}], "]"}], "\[Equal]", "1.1"}], 
          ",", 
          RowBox[{"{", 
           RowBox[{"r", ",", "1", ",", 
            RowBox[{"1", "/", "100"}], ",", "20"}], "}"}]}], "]"}]}]}]}], 
     "]"}], ",", 
    RowBox[{"{", 
     RowBox[{"n", ",", 
      RowBox[{"Length", "[", "rsblth", "]"}]}], "}"}]}], "]"}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"rsblinvth", "=", 
   RowBox[{"Table", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{"Tscancorig", "[", 
        RowBox[{"[", "n", "]"}], "]"}], ",", 
       RowBox[{"conv", "/", 
        RowBox[{"rsblth", "[", 
         RowBox[{"[", 
          RowBox[{"n", ",", "2"}], "]"}], "]"}]}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"n", ",", "1", ",", 
       RowBox[{"Length", "[", "Tscancorig", "]"}]}], "}"}]}], "]"}]}], 
  ";"}], "\n", 
 RowBox[{
  RowBox[{"regl", "=", 
   RowBox[{"Table", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{"Tscancorig", "[", 
        RowBox[{"[", "n", "]"}], "]"}], ",", 
       RowBox[{"2", "\[Pi]", " ", 
        RowBox[{"Tscancorig", "[", 
         RowBox[{"[", "n", "]"}], "]"}], 
        FractionBox[
         SuperscriptBox[
          RowBox[{"rsblinvth", "[", 
           RowBox[{"[", 
            RowBox[{"n", ",", "2"}], "]"}], "]"}], "2"], 
         SuperscriptBox[
          RowBox[{"mDcal", "[", 
           RowBox[{
            RowBox[{"2", "\[Pi]"}], ",", 
            RowBox[{"Tscancorig", "[", 
             RowBox[{"[", "n", "]"}], "]"}], ",", 
            RowBox[{"kfinall", "[", 
             RowBox[{"[", "1", "]"}], "]"}], ",", 
            RowBox[{"kfinall", "[", 
             RowBox[{"[", "2", "]"}], "]"}]}], "]"}], "2"]]}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"n", ",", "1", ",", 
       RowBox[{"Length", "[", "Tscancorig", "]"}]}], "}"}]}], "]"}]}], 
  ";"}]}], "Input",
 CellChangeTimes->{{3.746441964675877*^9, 3.7464419989652147`*^9}, {
  3.746442057901245*^9, 3.746442090696726*^9}, {3.746444459614499*^9, 
  3.746444460325613*^9}, {3.746444687864716*^9, 3.7464446885744133`*^9}, {
  3.746444783576741*^9, 3.746444788345973*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"ListPlot", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"rsbth", ",", "rsbuth", ",", "rsblth"}], "}"}], ",", 
   RowBox[{"PlotRange", "\[Rule]", "All"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.7464444648838873`*^9, 3.746444473746656*^9}, {
  3.746444534653693*^9, 3.7464445538983727`*^9}}],

Cell[BoxData[
 GraphicsBox[{{}, {{}, 
    {RGBColor[0.368417, 0.506779, 0.709798], PointSize[0.009166666666666668], 
     AbsoluteThickness[1.6], PointBox[CompressedData["
1:eJwdkntMklEYxgnRHHwQeEuzC5lZ1szZFSx93yzT7qWu7DLTpisZ6+LKMXHa
ha7kLJx2W5F2lZqaOWelZX4gaKJAFimZqcuyZrWcZbUszne2s/Pfb8/z/M7U
nXvj0tgsFkvqvOSdxxwaMjMiYku2j8ETPh2tP+NpGFhXfn9T+xh0/MqR1R6g
4VRd/pE/m9kY2hXodriQhs7sg+XvBth4tL65OLqaBlNWSa5Xngvar++L4Npp
2KF8HFIXzcHZDJAG1tq4jWV+rpjrpBX46qHafnz+fpEbvli7U5go1YPqYrki
Inwszghzvzdxqx6Gxbs6A3TuqPQqi+nJ0sOv4GDdrNNcnMYE0sOiwxFxc94J
ccqxzxtrJhvggarApeOqP/ozAQ2Q1xUdrk6agONJnT4D6JI7trCi/dCTCdwI
lala2YrVvigIqbzy9XYjPBAkD3Lk45HLFDCC8Z/Gj3/dB51ll6nlRhAf7+qm
Br2RzRQyAl/SUJEY442j7YqBoDATqDSiM/pyL/xN5iowQcfXieoTgV74Y+b2
/IZhE8Qqo+qDbnjidxsp3ASqR5z1aSGe+CUbFiQ9agLX+cGrJU898FMQGaAZ
fDUllelbPbDfEuBs3AwbhPJvQ6Mi7M0igzSDvDbyN7dUhG+JjmXPYXHXX2lk
ogiZujefQwptnDGbEuFLEs+9BTIq4tOUeiFaCU7WAkkqaVjfISGaW5gDM+2G
qeKlQmzKfKKdEGoGnVu9/whHiAZxRcbuc2agvaeP7LswDp8R3UNm8CkUO2Qh
45DY5GxqhWm30s0akwBrJhMhrdBToCgqTRdglYkA26A+lJOiFAqQ0Aaz2+B2
6jxNdy0fnbJTF3e3gUde8YeaPXxM6Lt5WS+2gEJ2cmh4Oh/jGKAFwiVfXDW9
FG7IO7/H46gF6GzTpaIbFK4j36fKAuysQNUkOYVrFp1amvzeAlf773ITpBSu
oogxK7DW5GTmUhTG9pABrbBN+/qOSz8PV1QP/W1XWCFF1uuQN/JwuVr+4U+p
FU6ete/KKeNhlBMW4LBCZ1S8daWWh+i0tZKyAZe6F5NwiYeRzIexgeSNS8Or
Yh4u6V7vTGiD8+m6kbkPeRjODGAD/9Gqa473PJQw8WygHWmq2BJG4UKCY7+A
j+rHdVfKKPwP6Jqemg==
      "]]}, 
    {RGBColor[0.880722, 0.611041, 0.142051], PointSize[0.009166666666666668], 
     AbsoluteThickness[1.6], PointBox[CompressedData["
1:eJwdkn0s1HEcx8/D5eH3c87dcSgkoocJlSLp84keKD25FC1WYj1dKWtpQnGj
NZkeqJVyYcaVYXUra62pu+PIud9drltKoiUxqaRWqXXf33f77vvfa+/3+/X1
TctMyLDmcDgRlkveJexRQcEAVZgc4onn3F71/JSoQGXsF55t9MDXv/IPPT6h
ArHQaktUiAcG9/vPKKhQgZWC3z38yB1lbV3Vax+ooC/o3csPG93RXHssytGs
ginJrAblkBgXskAVCHeMit7ki/GMhXbFXQ112oaqrz5ifLEpjZ8UoYbBvgU9
FRo3DAy1b5y1Sw2FAWd1WZlueFrUtH4wRw2tVG54pJcb+rGB1DCcmsLLk7mi
T9HYtlZvDcyt0N9ZphThTDagBvRedH3xtBDFpM57DTTf58bIkoQoZAO3w6Bk
+ZS3RoC8oHu3JurbYVQnz5gAATqyBTrAKmU8g9vhgpayMSXSDgj8IYxnklzQ
mi3UAYeLLno6fOfjv95TnwJCtVDLMfvUXuPjbzLXFS1IF+bltkXz8ce83WXP
prSQzjjbSD454zcjKdwJ2WU5yReSnfFzLoSlPuqEqIOZRYtNPBwNIAN0weUw
XoZNCg+HmTmWxl0wFmvKGv7ihEM5ZJAuYOz2vz1Q6oRviY6Y51A6Ld0bv9gJ
2bp1z+G2X8XJYwM0mkg8+264aj3uZSqn0UBwh7rhzJHpd/IEGnXd7AEBXy3w
96Cx8+QTuWewDoJ8D9t8GaFQM7sl68AlHZQq0iOGnlH4lOie1EF9SJw0voFC
YtN2Rw/EFHPkwZUUtnoTIT3wp9lcraiiUKklQD34V5qX6h5SSGjjuXqQp8Um
5k9QaJGdHjmgB63J4BC9k8bt7+sq1bMZ8LprvinxcMIEFshAzfb87y1GHm4t
vXZUIGOgZSStIFrBx83k+ygZKAxPLm/spDF++fnVez4wMBZ59de+SUfcQBNj
Bojrna/0v++AsYNkQANQ/0LLy1vtcd2Dyb+9pwzAtbsuWvTRDteUSD/+URjA
t6albW+oHUZbYHNeG8DclrirqmwGosVWHG0Eptg1LOwvF1exH8YIvaLEJvts
Lq4c2GJJaISNpsDjI79tcQU7gBFk/MSpiHO2GM7GM0J2SV9Qu6ctLiM46xeQ
J37cf0Npg/8Bw8OgQA==
      "]]}, 
    {RGBColor[0.560181, 0.691569, 0.194885], PointSize[0.009166666666666668], 
     AbsoluteThickness[1.6], PointBox[CompressedData["
1:eJwdkn1Q03Ucx9cUbscN9tsG40kdUKiceBxyBoj1/rSt1IIifIi87JALmsol
cBzHU3Ri6Zmg4gN2IYKZ1yWKngpylChuYw+w8duGUFDulmWXlHjRoLYB7ff7
3n3v+9/r3u/36xtfuD+vSCgQCDIDl3vT+KODp/F0YueUF4cVP9rmtuqw+Kuq
sn61D5P/1e/9vkKHAZsmNEbrQ8rPLwQfOKODc/vsxPHLPhy8Z7nwao8OfR3a
nbPTPoxfLH0pZFyH8vGEq9oMP9bwQB3eOF0+HPypH58EaKei9EgvzmI9Dj+c
OYVMfqYeJz9cmluQOI9VqaIry3bqITqwxl1ZO4/a8K5N7ho9lmjoRumDeTzP
B9JjX97WYqZlAcrPpt7uXWFAnktVr51cRCwf0ICC5GNl2Z0CiuTqPDKgjc0e
TGp8juR84EEcaTXvrmoTUtjaG23T3wziWcWE8KRnCYXwBYyYiNvjNPQHUaCs
+miJEZlTZyQD+SIS8oWMaIiY2NfjEdPCaNUfK1NNKE2bVo0fWkZebq5TJuDa
xpzcw7E0u/q94/c9JqxtcI0Zz8fQ3w6usBki9+2hOEs0Pa3D+vf7zEhKS8kZ
Co6mJyu5ASzYsqth/+4dUfSYTQg0tsBUrVx+pzeSfqnhBrGA+bOifFdiJD3k
dKiH8I85X65uVRBf99IQJN9Jl5+IVtADLp5oGOI7LntDewTZOdzeYUQZZ9Vl
yRFkHeYPvEmfmwx3w8lc2d8ek2LFWE5LiD8/nAxx18u1zVYomc6283NyGuB0
z1iRfHlsTtMqJ87m0h02/Ft34V6zWk69KzghNoz0TxamPpPRLRMHHEGTbWH0
hw4ZcbS/6kYQXll9VrNdRgHZH2S5RlD0RSebHiqjbY8uterjWBRfu3us1iSl
PB7IQinxJj48JKXcprMfyQ6yaPpY0bFus5Te5L7PLRaqRWzKFUspO/3IKwW/
sRjt68qSORl6XcwZs+NpdVDsO+cY2uzmBrTj66iMboGWodd6ZuZHq+woak83
z6xnSHO05Hfft3YkfKW0RwYzpArAEibtaHly/+LV6xKigK0tYge87u6yDe9K
6GX+wzjQeK6/5maQhDa63gokdKClq+RLb3cYbeAHcCBU+3jBsyeMMvh4DtTN
NMefiA+jFzmc0Il1Cr/19k+h9D90+bGs
      "]]}, {}}, {}, {}, {{}, {}}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{0.147703125, 0},
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  ImagePadding->All,
  ImageSize->{1132., Automatic},
  Method->{"CoordinatesToolOptions" -> {"DisplayFunction" -> ({
        (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
         Part[#, 1]], 
        (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
         Part[#, 2]]}& ), "CopiedValueFunction" -> ({
        (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
         Part[#, 1]], 
        (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
         Part[#, 2]]}& )}},
  PlotRange->{{0.15, 0.29700000000000004`}, {0, 7.131680532312075}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.02], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{
  3.746444474558338*^9, {3.746444544647709*^9, 3.7464445545839148`*^9}, 
   3.7464446936637506`*^9, 3.7464447936706343`*^9, 3.746446968157424*^9}]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"rIm\[Epsilon]r", "[", 
    RowBox[{"r_", ",", "mD_", ",", "T_", ",", "\[Sigma]_", ",", "reg_"}], 
    "]"}], ":=", 
   RowBox[{"2", "r", " ", 
    SuperscriptBox["mD", "2"], "\[Sigma]", " ", "T", " ", 
    RowBox[{"Quiet", "[", 
     RowBox[{"NIntegrate", "[", 
      RowBox[{
       RowBox[{
        SuperscriptBox["p", "2"], 
        FractionBox["p", 
         RowBox[{
          SqrtBox[
           RowBox[{
            SuperscriptBox["p", "2"], "+", 
            SuperscriptBox["reg", "2"]}]], 
          SuperscriptBox[
           RowBox[{"(", 
            RowBox[{
             SuperscriptBox["p", "2"], "+", 
             SuperscriptBox["mD", "2"]}], ")"}], "2"]}]], 
        RowBox[{"Sin", "[", 
         RowBox[{"p", " ", "r"}], "]"}]}], ",", 
       RowBox[{"{", 
        RowBox[{"p", ",", "0", ",", "\[Infinity]"}], "}"}], ",", 
       RowBox[{"MaxRecursion", "\[Rule]", "20"}]}], "]"}], "]"}]}]}], 
  ";"}]], "Input",
 CellChangeTimes->{{3.745817501539624*^9, 3.745817564612512*^9}, {
   3.745818269068465*^9, 3.7458182705776873`*^9}, {3.745818353828075*^9, 
   3.745818356527109*^9}, {3.745818432389716*^9, 3.745818481914084*^9}, {
   3.745818549855639*^9, 3.745818558971363*^9}, {3.74581859766446*^9, 
   3.745818597848228*^9}, {3.745818663497651*^9, 3.745818667497137*^9}, {
   3.745842722160223*^9, 3.745842723407733*^9}, {3.745842807506001*^9, 
   3.7458428076411543`*^9}, {3.745842843666057*^9, 3.745842849834053*^9}, {
   3.745843002725808*^9, 3.745843008517023*^9}, {3.745843088967156*^9, 
   3.745843161912868*^9}, 3.7458446041490383`*^9, {3.746251567454756*^9, 
   3.746251571471868*^9}, {3.746253501059498*^9, 3.7462535026271477`*^9}, {
   3.746253593432171*^9, 3.7462536137342567`*^9}, {3.746253702175653*^9, 
   3.746253706015329*^9}, {3.746258966904277*^9, 3.7462589917438993`*^9}, {
   3.746259093298667*^9, 3.7462591283789873`*^9}, {3.7462681443307257`*^9, 
   3.746268145866316*^9}, {3.746268538538157*^9, 3.7462685640029488`*^9}, {
   3.746268656811358*^9, 3.746268712413129*^9}, {3.746269602086692*^9, 
   3.7462696035095377`*^9}, 3.7462701039689417`*^9, 3.746270149440301*^9, 
   3.746270206129196*^9, {3.746270300114634*^9, 3.746270303992325*^9}, {
   3.7462703957015343`*^9, 3.7462703960014677`*^9}, {3.746270435509698*^9, 
   3.746270443293261*^9}, {3.74627055331214*^9, 3.746270557904615*^9}, 
   3.746270616009286*^9, {3.7462707020111427`*^9, 3.746270706119231*^9}, {
   3.7462720236206636`*^9, 3.746272033539584*^9}, {3.746272884874962*^9, 
   3.746272889235134*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"ImVsregTab", "[", 
    RowBox[{"mD1_", ",", "\[Sigma]1_", ",", "T1_", ",", "reg1_"}], "]"}], ":=", 
   RowBox[{"Block", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{"mD", "=", "mD1"}], ",", 
       RowBox[{"\[Sigma]", "=", "\[Sigma]1"}], ",", 
       RowBox[{"T", "=", "T1"}], ",", 
       RowBox[{"reg", "=", "reg1"}], ",", "tab0", ",", "tab1", ",", "inter0", 
       ",", "inter1", ",", "inter2", ",", "tab2", ",", "r\[Epsilon]inter"}], 
      "}"}], ",", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"r\[Epsilon]inter", "=", 
       RowBox[{"Interpolation", "[", 
        RowBox[{"ParallelTable", "[", 
         RowBox[{
          RowBox[{"Quiet", "[", 
           RowBox[{"{", 
            RowBox[{"r", ",", 
             RowBox[{"rIm\[Epsilon]r", "[", 
              RowBox[{"r", ",", "mD", ",", "T", ",", "\[Sigma]", ",", "reg"}],
               "]"}]}], "}"}], "]"}], ",", 
          RowBox[{"{", 
           RowBox[{"r", ",", "0", ",", "150", ",", 
            RowBox[{"1", "/", "50"}]}], "}"}]}], "]"}], "]"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"inter0", "[", "r_", "]"}], ":=", 
       RowBox[{"Quiet", "[", 
        RowBox[{"NIntegrate", "[", 
         RowBox[{
          RowBox[{"r\[Epsilon]inter", "[", "r1", "]"}], ",", 
          RowBox[{"{", 
           RowBox[{"r1", ",", "0", ",", "r"}], "}"}], ",", 
          RowBox[{"MaxRecursion", "\[Rule]", "20"}]}], "]"}], "]"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"tab1", "=", 
       RowBox[{"ParallelTable", "[", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"r", ",", 
           RowBox[{"inter0", "[", "r", "]"}]}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"r", ",", "0", ",", "150", ",", 
           RowBox[{"1", "/", "50"}]}], "}"}]}], "]"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"inter1", "=", 
       RowBox[{"Interpolation", "[", "tab1", "]"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"inter2", "[", "r_", "]"}], ":=", 
       RowBox[{"Quiet", "[", 
        RowBox[{"NIntegrate", "[", 
         RowBox[{
          RowBox[{"inter1", "[", "r1", "]"}], ",", 
          RowBox[{"{", 
           RowBox[{"r1", ",", "0", ",", "r"}], "}"}]}], "]"}], "]"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"tab2", "=", 
       RowBox[{"ParallelTable", "[", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"r", ",", 
           RowBox[{"inter2", "[", "r", "]"}]}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"r", ",", "0", ",", "150", ",", 
           RowBox[{"1", "/", "50"}]}], "}"}]}], "]"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"Export", "[", 
       RowBox[{
        RowBox[{"\"\<spectraldata/Tscan/cc/pots/ImVsregT\>\"", "<>", 
         RowBox[{"ToString", "[", 
          RowBox[{"Round", "[", 
           RowBox[{"1000", "T"}], "]"}], "]"}], "<>", "\"\<.dat\>\""}], ",", 
        "tab2"}], "]"}], ";"}]}], "]"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.7458421163004*^9, 3.745842255614987*^9}, {
   3.74584237625832*^9, 3.74584238089814*^9}, {3.74584243341999*^9, 
   3.745842434018876*^9}, 3.745842700520172*^9, {3.7458428801956253`*^9, 
   3.74584288625959*^9}, {3.745842921765295*^9, 3.745842929566621*^9}, {
   3.745843305323503*^9, 3.745843330531123*^9}, {3.745843376981348*^9, 
   3.7458433790212717`*^9}, {3.745843423750684*^9, 3.7458434300941353`*^9}, {
   3.745843661787189*^9, 3.7458436684111423`*^9}, {3.7458437801638927`*^9, 
   3.745843783259945*^9}, {3.74584411860402*^9, 3.7458441317915897`*^9}, {
   3.745844681207431*^9, 3.745844754121233*^9}, {3.745844832610839*^9, 
   3.745844840074588*^9}, {3.745844995997259*^9, 3.74584499783678*^9}, 
   3.745905430524631*^9, {3.746186239025709*^9, 3.7461862417540073`*^9}, {
   3.746189443181788*^9, 3.746189444629603*^9}, {3.746267770445404*^9, 
   3.746267795155712*^9}, {3.746268279125808*^9, 3.746268283119072*^9}, {
   3.7462720478283997`*^9, 3.746272070037401*^9}, {3.7462721330936728`*^9, 
   3.7462721568936453`*^9}, {3.746272731313056*^9, 3.746272736543922*^9}, {
   3.74627283020249*^9, 3.74627283337823*^9}, {3.746272877787269*^9, 
   3.7462728827386227`*^9}, {3.746272959717518*^9, 3.746272975077838*^9}, {
   3.746273011453807*^9, 3.7462730166942873`*^9}, {3.7462744596973267`*^9, 
   3.7462744617006273`*^9}, {3.7462778752889223`*^9, 3.746277882183514*^9}, {
   3.7462779866675453`*^9, 3.7462779879280148`*^9}, {3.7463518988650618`*^9, 
   3.746351930852844*^9}, 3.746445541242131*^9, {3.7464455992612963`*^9, 
   3.746445617621666*^9}, 3.7464456931837606`*^9}],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"ImVsreguTab", "[", 
    RowBox[{"mD1_", ",", "\[Sigma]1_", ",", "T1_", ",", "reg1_"}], "]"}], ":=", 
   RowBox[{"Block", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{"mD", "=", "mD1"}], ",", 
       RowBox[{"\[Sigma]", "=", "\[Sigma]1"}], ",", 
       RowBox[{"T", "=", "T1"}], ",", 
       RowBox[{"reg", "=", "reg1"}], ",", "tab0", ",", "tab1", ",", "inter0", 
       ",", "inter1", ",", "inter2", ",", "tab2", ",", "r\[Epsilon]inter"}], 
      "}"}], ",", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"r\[Epsilon]inter", "=", 
       RowBox[{"Interpolation", "[", 
        RowBox[{"ParallelTable", "[", 
         RowBox[{
          RowBox[{"Quiet", "[", 
           RowBox[{"{", 
            RowBox[{"r", ",", 
             RowBox[{"rIm\[Epsilon]r", "[", 
              RowBox[{"r", ",", "mD", ",", "T", ",", "\[Sigma]", ",", "reg"}],
               "]"}]}], "}"}], "]"}], ",", 
          RowBox[{"{", 
           RowBox[{"r", ",", "0", ",", "150", ",", 
            RowBox[{"1", "/", "50"}]}], "}"}]}], "]"}], "]"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"inter0", "[", "r_", "]"}], ":=", 
       RowBox[{"Quiet", "[", 
        RowBox[{"NIntegrate", "[", 
         RowBox[{
          RowBox[{"r\[Epsilon]inter", "[", "r1", "]"}], ",", 
          RowBox[{"{", 
           RowBox[{"r1", ",", "0", ",", "r"}], "}"}], ",", 
          RowBox[{"MaxRecursion", "\[Rule]", "20"}]}], "]"}], "]"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"tab1", "=", 
       RowBox[{"ParallelTable", "[", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"r", ",", 
           RowBox[{"inter0", "[", "r", "]"}]}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"r", ",", "0", ",", "150", ",", 
           RowBox[{"1", "/", "50"}]}], "}"}]}], "]"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"inter1", "=", 
       RowBox[{"Interpolation", "[", "tab1", "]"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"inter2", "[", "r_", "]"}], ":=", 
       RowBox[{"Quiet", "[", 
        RowBox[{"NIntegrate", "[", 
         RowBox[{
          RowBox[{"inter1", "[", "r1", "]"}], ",", 
          RowBox[{"{", 
           RowBox[{"r1", ",", "0", ",", "r"}], "}"}]}], "]"}], "]"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"tab2", "=", 
       RowBox[{"ParallelTable", "[", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"r", ",", 
           RowBox[{"inter2", "[", "r", "]"}]}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"r", ",", "0", ",", "150", ",", 
           RowBox[{"1", "/", "50"}]}], "}"}]}], "]"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"Export", "[", 
       RowBox[{
        RowBox[{"\"\<spectraldata/Tscan/cc/pots/ImVsreguT\>\"", "<>", 
         RowBox[{"ToString", "[", 
          RowBox[{"Round", "[", 
           RowBox[{"1000", "T"}], "]"}], "]"}], "<>", "\"\<.dat\>\""}], ",", 
        "tab2"}], "]"}], ";"}]}], "]"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.746349639157968*^9, 3.746349651125915*^9}, {
   3.746351933393108*^9, 3.7463519468938007`*^9}, 3.746445546538418*^9, {
   3.746445596242153*^9, 3.746445620274438*^9}, 3.746445690878474*^9}],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"ImVsreglTab", "[", 
    RowBox[{"mD1_", ",", "\[Sigma]1_", ",", "T1_", ",", "reg1_"}], "]"}], ":=", 
   RowBox[{"Block", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{"mD", "=", "mD1"}], ",", 
       RowBox[{"\[Sigma]", "=", "\[Sigma]1"}], ",", 
       RowBox[{"T", "=", "T1"}], ",", 
       RowBox[{"reg", "=", "reg1"}], ",", "tab0", ",", "tab1", ",", "inter0", 
       ",", "inter1", ",", "inter2", ",", "tab2", ",", "r\[Epsilon]inter"}], 
      "}"}], ",", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"r\[Epsilon]inter", "=", 
       RowBox[{"Interpolation", "[", 
        RowBox[{"ParallelTable", "[", 
         RowBox[{
          RowBox[{"Quiet", "[", 
           RowBox[{"{", 
            RowBox[{"r", ",", 
             RowBox[{"rIm\[Epsilon]r", "[", 
              RowBox[{"r", ",", "mD", ",", "T", ",", "\[Sigma]", ",", "reg"}],
               "]"}]}], "}"}], "]"}], ",", 
          RowBox[{"{", 
           RowBox[{"r", ",", "0", ",", "150", ",", 
            RowBox[{"1", "/", "50"}]}], "}"}]}], "]"}], "]"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"inter0", "[", "r_", "]"}], ":=", 
       RowBox[{"Quiet", "[", 
        RowBox[{"NIntegrate", "[", 
         RowBox[{
          RowBox[{"r\[Epsilon]inter", "[", "r1", "]"}], ",", 
          RowBox[{"{", 
           RowBox[{"r1", ",", "0", ",", "r"}], "}"}], ",", 
          RowBox[{"MaxRecursion", "\[Rule]", "20"}]}], "]"}], "]"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"tab1", "=", 
       RowBox[{"ParallelTable", "[", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"r", ",", 
           RowBox[{"inter0", "[", "r", "]"}]}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"r", ",", "0", ",", "150", ",", 
           RowBox[{"1", "/", "50"}]}], "}"}]}], "]"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"inter1", "=", 
       RowBox[{"Interpolation", "[", "tab1", "]"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"inter2", "[", "r_", "]"}], ":=", 
       RowBox[{"Quiet", "[", 
        RowBox[{"NIntegrate", "[", 
         RowBox[{
          RowBox[{"inter1", "[", "r1", "]"}], ",", 
          RowBox[{"{", 
           RowBox[{"r1", ",", "0", ",", "r"}], "}"}]}], "]"}], "]"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"tab2", "=", 
       RowBox[{"ParallelTable", "[", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"r", ",", 
           RowBox[{"inter2", "[", "r", "]"}]}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"r", ",", "0", ",", "150", ",", 
           RowBox[{"1", "/", "50"}]}], "}"}]}], "]"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"Export", "[", 
       RowBox[{
        RowBox[{"\"\<spectraldata/Tscan/cc/pots/ImVsreglT\>\"", "<>", 
         RowBox[{"ToString", "[", 
          RowBox[{"Round", "[", 
           RowBox[{"1000", "T"}], "]"}], "]"}], "<>", "\"\<.dat\>\""}], ",", 
        "tab2"}], "]"}], ";"}]}], "]"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.746349641685663*^9, 3.74634965502246*^9}, {
   3.746351949417234*^9, 3.74635197296693*^9}, 3.746445551596252*^9, {
   3.746445591403551*^9, 3.746445622195077*^9}, {3.7464456754275093`*^9, 
   3.746445686139386*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"Do", "[", 
   RowBox[{
    RowBox[{"ImVsregTab", "[", 
     RowBox[{
      RowBox[{"mDcal", "[", 
       RowBox[{
        RowBox[{"2", "\[Pi]"}], ",", 
        RowBox[{"Tscancorig", "[", 
         RowBox[{"[", "n", "]"}], "]"}], ",", 
        RowBox[{"kfinal", "[", 
         RowBox[{"[", "1", "]"}], "]"}], ",", 
        RowBox[{"kfinal", "[", 
         RowBox[{"[", "2", "]"}], "]"}]}], "]"}], ",", 
      RowBox[{"\[Sigma]cont", "[", 
       RowBox[{"[", "1", "]"}], "]"}], ",", 
      RowBox[{"Tscancorig", "[", 
       RowBox[{"[", "n", "]"}], "]"}], ",", 
      RowBox[{"reg", "[", 
       RowBox[{"[", 
        RowBox[{"n", ",", "2"}], "]"}], "]"}]}], "]"}], ",", 
    RowBox[{"{", 
     RowBox[{"n", ",", 
      RowBox[{"Length", "[", "Tscancorig", "]"}]}], "}"}]}], "]"}], 
  ";"}]], "Input",
 CellChangeTimes->{{3.7462679171822863`*^9, 3.7462680063515787`*^9}, {
   3.746268110737666*^9, 3.746268141962058*^9}, 3.746272753297387*^9, {
   3.746272836242028*^9, 3.746272848082366*^9}, {3.746272979541218*^9, 
   3.7462730059655123`*^9}, {3.7463370671707487`*^9, 
   3.7463370675558662`*^9}, {3.746349743823086*^9, 3.746349764483885*^9}, {
   3.746445563632929*^9, 3.7464455757222548`*^9}, {3.746445626968739*^9, 
   3.7464456640742617`*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"Do", "[", 
   RowBox[{
    RowBox[{"ImVsreguTab", "[", 
     RowBox[{
      RowBox[{"mDcal", "[", 
       RowBox[{
        RowBox[{"2", "\[Pi]"}], ",", 
        RowBox[{"Tscancorig", "[", 
         RowBox[{"[", "n", "]"}], "]"}], ",", 
        RowBox[{"kfinalu", "[", 
         RowBox[{"[", "1", "]"}], "]"}], ",", 
        RowBox[{"kfinalu", "[", 
         RowBox[{"[", "2", "]"}], "]"}]}], "]"}], ",", 
      RowBox[{"\[Sigma]cont", "[", 
       RowBox[{"[", "1", "]"}], "]"}], ",", 
      RowBox[{"Tscancorig", "[", 
       RowBox[{"[", "n", "]"}], "]"}], ",", 
      RowBox[{"regu", "[", 
       RowBox[{"[", 
        RowBox[{"n", ",", "2"}], "]"}], "]"}]}], "]"}], ",", 
    RowBox[{"{", 
     RowBox[{"n", ",", 
      RowBox[{"Length", "[", "Tscancorig", "]"}]}], "}"}]}], "]"}], 
  ";"}]], "Input",
 CellChangeTimes->{{3.7463496751578074`*^9, 3.74634967975416*^9}, {
   3.746349745399208*^9, 3.7463497655092907`*^9}, 3.746353086742083*^9, {
   3.7464455659603662`*^9, 3.746445579170162*^9}, {3.746445629366304*^9, 
   3.74644566648178*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"Do", "[", 
   RowBox[{
    RowBox[{"ImVsreglTab", "[", 
     RowBox[{
      RowBox[{"mDcal", "[", 
       RowBox[{
        RowBox[{"2", "\[Pi]"}], ",", 
        RowBox[{"Tscancorig", "[", 
         RowBox[{"[", "n", "]"}], "]"}], ",", 
        RowBox[{"kfinall", "[", 
         RowBox[{"[", "1", "]"}], "]"}], ",", 
        RowBox[{"kfinall", "[", 
         RowBox[{"[", "2", "]"}], "]"}]}], "]"}], ",", 
      RowBox[{"\[Sigma]cont", "[", 
       RowBox[{"[", "1", "]"}], "]"}], ",", 
      RowBox[{"Tscancorig", "[", 
       RowBox[{"[", "n", "]"}], "]"}], ",", 
      RowBox[{"regl", "[", 
       RowBox[{"[", 
        RowBox[{"n", ",", "2"}], "]"}], "]"}]}], "]"}], ",", 
    RowBox[{"{", 
     RowBox[{"n", ",", 
      RowBox[{"Length", "[", "Tscancorig", "]"}]}], "}"}]}], "]"}], 
  ";"}]], "Input",
 CellChangeTimes->{{3.746349684614173*^9, 3.746349688206512*^9}, {
   3.746349746351523*^9, 3.746349766367486*^9}, 3.746353089942151*^9, {
   3.746445569760497*^9, 3.746445580594637*^9}, {3.746445631591712*^9, 
   3.74644566989095*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"Block", "[", 
   RowBox[{
    RowBox[{"{", "data", "}"}], ",", 
    RowBox[{"Do", "[", 
     RowBox[{
      RowBox[{
       RowBox[{"data", "=", 
        RowBox[{"ToExpression", "[", 
         RowBox[{"Import", "[", 
          RowBox[{"\"\<spectraldata/Tscan/cc/pots/ImVsregT\>\"", "<>", 
           RowBox[{"ToString", "[", 
            RowBox[{"Round", "[", 
             RowBox[{"1000", 
              RowBox[{"Tscancorig", "[", 
               RowBox[{"[", "n", "]"}], "]"}]}], "]"}], "]"}], "<>", 
           "\"\<.dat\>\""}], "]"}], "]"}]}], ";", 
       RowBox[{"data", "=", 
        RowBox[{"Append", "[", 
         RowBox[{"data", ",", 
          RowBox[{"{", 
           RowBox[{"20000", ",", 
            RowBox[{"data", "[", 
             RowBox[{"[", 
              RowBox[{
               RowBox[{"-", "1"}], ",", "2"}], "]"}], "]"}]}], "}"}]}], 
         "]"}]}], ";", 
       RowBox[{
        RowBox[{"ImVsregInter", "[", "n", "]"}], "=", 
        RowBox[{"Interpolation", "[", 
         RowBox[{"data", ",", 
          RowBox[{"InterpolationOrder", "\[Rule]", "1"}]}], "]"}]}]}], ",", 
      RowBox[{"{", 
       RowBox[{"n", ",", 
        RowBox[{"Length", "[", "Tscancorig", "]"}]}], "}"}]}], "]"}]}], "]"}],
   ";"}]], "Input",
 CellChangeTimes->{{3.746273043134018*^9, 3.7462731014710627`*^9}, {
   3.746273301287758*^9, 3.746273304882516*^9}, {3.746273761020192*^9, 
   3.746273876685227*^9}, {3.7462744640649643`*^9, 3.746274465417224*^9}, {
   3.746349735495809*^9, 3.746349736436407*^9}, 3.746349774584558*^9, {
   3.746445759519573*^9, 3.746445816318008*^9}, 3.746618809873577*^9}],

Cell[BoxData[
 RowBox[{"Clear", "[", "ImVsregInter", "]"}]], "Input",
 CellChangeTimes->{{3.746712586073023*^9, 3.746712588640057*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"Block", "[", 
   RowBox[{
    RowBox[{"{", "data", "}"}], ",", 
    RowBox[{"Do", "[", 
     RowBox[{
      RowBox[{
       RowBox[{"data", "=", 
        RowBox[{"ToExpression", "[", 
         RowBox[{"Import", "[", 
          RowBox[{"\"\<spectraldata/Tscan/cc/pots/ImVsreglT\>\"", "<>", 
           RowBox[{"ToString", "[", 
            RowBox[{"Round", "[", 
             RowBox[{"1000", 
              RowBox[{"Tscancorig", "[", 
               RowBox[{"[", "n", "]"}], "]"}]}], "]"}], "]"}], "<>", 
           "\"\<.dat\>\""}], "]"}], "]"}]}], ";", 
       RowBox[{"data", "=", 
        RowBox[{"Append", "[", 
         RowBox[{"data", ",", 
          RowBox[{"{", 
           RowBox[{"20000", ",", 
            RowBox[{"data", "[", 
             RowBox[{"[", 
              RowBox[{
               RowBox[{"-", "1"}], ",", "2"}], "]"}], "]"}]}], "}"}]}], 
         "]"}]}], ";", 
       RowBox[{
        RowBox[{"ImVsreglInter", "[", "n", "]"}], "=", 
        RowBox[{"Interpolation", "[", 
         RowBox[{"data", ",", 
          RowBox[{"InterpolationOrder", "\[Rule]", "1"}]}], "]"}]}]}], ",", 
      RowBox[{"{", 
       RowBox[{"n", ",", 
        RowBox[{"Length", "[", "Tscancorig", "]"}]}], "}"}]}], "]"}]}], "]"}],
   ";"}]], "Input",
 CellChangeTimes->{{3.746349731950417*^9, 3.7463497390553217`*^9}, {
  3.7463497753427896`*^9, 3.746349799416169*^9}, {3.7464457629737988`*^9, 
  3.746445766471393*^9}, {3.746445808520228*^9, 3.746445823886059*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"Block", "[", 
   RowBox[{
    RowBox[{"{", "data", "}"}], ",", 
    RowBox[{"Do", "[", 
     RowBox[{
      RowBox[{
       RowBox[{"data", "=", 
        RowBox[{"ToExpression", "[", 
         RowBox[{"Import", "[", 
          RowBox[{"\"\<spectraldata/Tscan/cc/pots/ImVsreguT\>\"", "<>", 
           RowBox[{"ToString", "[", 
            RowBox[{"Round", "[", 
             RowBox[{"1000", 
              RowBox[{"Tscancorig", "[", 
               RowBox[{"[", "n", "]"}], "]"}]}], "]"}], "]"}], "<>", 
           "\"\<.dat\>\""}], "]"}], "]"}]}], ";", 
       RowBox[{"data", "=", 
        RowBox[{"Append", "[", 
         RowBox[{"data", ",", 
          RowBox[{"{", 
           RowBox[{"20000", ",", 
            RowBox[{"data", "[", 
             RowBox[{"[", 
              RowBox[{
               RowBox[{"-", "1"}], ",", "2"}], "]"}], "]"}]}], "}"}]}], 
         "]"}]}], ";", 
       RowBox[{
        RowBox[{"ImVsreguInter", "[", "n", "]"}], "=", 
        RowBox[{"Interpolation", "[", 
         RowBox[{"data", ",", 
          RowBox[{"InterpolationOrder", "\[Rule]", "1"}]}], "]"}]}]}], ",", 
      RowBox[{"{", 
       RowBox[{"n", ",", 
        RowBox[{"Length", "[", "Tscancorig", "]"}]}], "}"}]}], "]"}]}], "]"}],
   ";"}]], "Input",
 CellChangeTimes->{{3.7463497298389387`*^9, 3.74634974234372*^9}, {
  3.746349776442037*^9, 3.746349803288479*^9}, {3.746445768440132*^9, 
  3.7464457721918488`*^9}, {3.746445834264185*^9, 3.746445837901793*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Plot", "[", 
  RowBox[{
   RowBox[{
    RowBox[{"ImVsreglInter", "[", "30", "]"}], "[", 
    FractionBox["x", "0.197"], "]"}], ",", 
   RowBox[{"{", 
    RowBox[{"x", ",", "0", ",", "50"}], "}"}], ",", 
   RowBox[{"PlotRange", "\[Rule]", "All"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.746619178438293*^9, 3.74661921515271*^9}}],

Cell[BoxData[
 GraphicsBox[{{{}, {}, 
    TagBox[
     {RGBColor[0.368417, 0.506779, 0.709798], AbsoluteThickness[1.6], Opacity[
      1.], LineBox[CompressedData["
1:eJxF0mk0FA4XBvAZjaWQIftfCIVEREIz7rVVsiT7EtUkRMoQoTBCka1UqGwt
dkWkRRESKVRSQlKytliSNcw77xc+3HPP75znw73nPOtoxy0PsxEIhOes+f+W
SVy4lSF5T5cgHZbV98aA+pBLUcrbIxGuOczteloSrFsTePe2gkcm/LvhETY5
XK57SbNvH29CLmwwJslOu37SrVelu3N4FMMW1Z5DZr7juqeFmI+YWWXAQ5tn
HEhZAclJRrrz8Q/ht1dT+epeASjmi3s+E/wE+OCdWf9BaXgZ17pr0v0Z0Ew8
q+mWG2EskmcwsKAGrjlF3ZIbV4eQ58WK01nPIUjJ9HB2NwVWsVkd9U95AaU7
7qVvkzaEZJy6OxHfAG+MiVYNW01ANuzqOD2yEQZThwxP/doLJZUUjbHg11Ap
Y5nrK2YHlPmegGP0ZrDuvvVQSNMZGnUiHv9yfwPiXPYKSko0KKSsCd1a/Bbo
/Lytn3e4wXiXa+aJgnewkW1g++1pT9A69aC6LLsVRmkzPLmyPhAqztX7J+s9
TAczTMKk/KDuscOKLWlt8CHmFO73C4BVDoVy9JQPULO/KfW4bDBYzMwblSR9
hB+90bx31UMhJcXcfTS+HWznAsSnrMLhi2ZWtErMJxhhUs0HayJA7uN4vndk
B8Ra3pF1O3wWPP0NXheFdcJjPps5YYyBEsErv34Gd0G3rkf6das4mCob4FUK
+Aynj6Zr3r2RCFQrrc2e9G64/lK4p+jKRXh1sYs+5N4DVWFFoHfqCkSnJjde
UvsKNjI/NNenp8AmD3BUL/4KdY+EM6V7roIv58VTvgXfoO1fRb3KiwwQatfm
EVDoBeGcm9mc5VnwKKc37V52L1hfL7I/JnoTFo00qsayvsPOsPoVrgLZcEOo
2/yCZB/4f1L/ppKfA4b9UT2b0/pAfzzopsXePIiNbCccT+mHqWuzHL0fCkH0
ebDB7/hByNRoDq7+dA+eJMm2xXEPwe1ddtmKP0rBhdbkuilmCKS46b57Sffh
NlHyrFfkMMh4eIfUWj4ANax5ORz8E9ydxlsk7J5AG5+nQ8zMT+AOUjsUcecp
BPYI/FAI+AVPrzW5m/BUQVWoK7cH/Tc8oOqnONGrYXclp/mA+yj05imkHAx8
DmpM2qTw2CjE/JCMtrOpgzjp/S2ylDHYl9Ov9k7zBZygVfhb141BWnxXBy9n
AxgO+NSVt41D+y9D2enOV9D7u/tg4OQElJlXKnZlvoOPCbHlF7T/QrphTbeu
Siu82qy9Mj/kL4wYyDJNq1qhlH65pIN9Eloa55MMvr+H8MndTB3hKSB7swU5
w0eQXniYtqA5A7XOK2S0t3WBYMbhMaFTM2C5umDUtasLuGCNocqzGVh3cKXL
FcZnGGUc++mycxYqOuS4u5u7oYq0Xqfabg7sS4j0M9pfwZknqf1M4DwUCuhE
1o32QjOv5kqSMwETUv7E0iKGoNVEILXlNAH7HGg7HduH4FPMyIaraQT07dl0
0EppGPrYcw1VPhPwzhbmGLwfhvkFEYa9ExHD34aW1Mj8hI0js1NFDmx4MtSE
GV31G6JbKvtsbElY5TNMMz42Dgk81/ykA0g4Kmt98kTyOFzeHcD28woJ0ysK
8iKrxiGzXkWa8YGEb96Vsn78Aw+qMp0KrNnRZ1bB9nLRH+i/G966aMmBFZMS
p2y+T4B+olF17h4ubLim9ev8tilg7L6f33qMCxsJ+67/cJyCKnbZSwvxXHiL
/a+qfOgU6JwmuFk1ceGzki+8mnVToH7kCTdz10pMpRRcKjCfBjkDNTtb/VWo
Txv69HXfDHBMS4yQtvIgmq6QD3KZA8PS2PbN1jz4ud2U83DIHJzxnqt29OPB
A8XiPcppc7D4vf1SyT0evPNrdbNtxxxMv03S3qfCi3cGf1ZzWv6DoQKuqDL5
1TgTbjI/T5mHw5vneNV4yTiRmx3DP7cApl3nskUlyejCHa8iLLIIGueEqITN
ZByeirSeUl8EUo/q0TcWZGQkbrE29l6Emwnur7wvk3F85zTqfVmEnt9tZwv+
48fymH7jW4+Z4FBUzJTdKIDHv+tXtRQSEO2pKdzbBZBYRrDVfkRABdJrlQkT
Afzgf7X8ch0BZ5wGnGu9BZB/TOymZDcBk7nXPj1wTwAbtn/5F85LxPee5wPT
tdZg5vnx8OteRDRTPDwuvFMQkbfUuG4tG87F+j/pthXEzpzBtDp5NswbiYq6
7SaIXTa7QyrU2JB0P0dsy1lBDNl2UOOcERtW6A7pmb0QxA1Icrl9lA03WHsl
RRgIIU/l3nPMR2xICKOrj4EwtkwGFefvXoGlbSH+jVqi+PrgVM2CNQnzolxp
vcaiyBdyw/O0MwkzNE32/HMUxcaiBJGJwyQ8nyqqqBwiisGBQwENrN4d2lf2
+UKNKA5kbV/Pn0pCwb4hA/vdYqgzr35CtYOEARNWAoNO4ihK642etWHH7QIb
i0lhElhjXL0gRuHAFqJjY3OiBBbVnj/5Sp8DD4zHfE/OkkD99IgGf2MOjHw7
LKJYK4F29hWVT21Z+YR8hhn7WhT3VSLw0Fl5bkXL5Ni1GGWnXPjoNitPUpiU
T5XETsZrzUAuTnT/l5SebS+NCfLvuPprOfF4/aB6sZkMLgbmuZpPc+F5R471
C0flUIqk3KolsgoPNZxyU/PYgG662+tMidxYwym218tBAV8S5d2Um7hRjZ+R
PHxiI5Z4HbH0SGT1dIK6yfzoJrS8/0CrQo0Xb2S8kJiOV0GNyjVH5d/wYlmC
TlerpSrGh/wXEuawGk9UUC3STdWQTv5S0du8Gp+9yv4T47QFc+kZ7bPAh0d2
alcesVfHKK8vuw9l8WFanlq5l6cG/hLDZAEmH16cqAz3ObkVBTyOTmQqknGg
wD/Aw1cTi0/auDqbkbFuR1LqmTPbsClUVDHPh4zEPZ29iQwtFLF95l6WQEaC
3gNiVpA2HhAo3VSYT8ZokWmz1nM6mB33R9uzjow+jodqpyO2Y6aS9C2dLjJ+
C9dwhSsUFDkXZ9o+TsYNwqsTfK5SsO2jYrTSHzJ6Fgw+vJFOQa5XCQoMlv+2
XuMm5VDw6exDD4UJMnLJEctePqBgh7JeZ9BfMqrUNxMtP1HQYkutpOA0Gf0c
c5UiPlNQlJQ87MbyoxGGzf2vFLTNKlSrYFlPRCNfeJiCjJ2jFc4zZLT2uGbR
NUtBKqn+eM4sGYNXuWe6/kfFpHXzv3GejM8ysPGKFBXv5N8Ou8QySV18ol6W
ihoFLvUDLMc7Ne9Q3ETFcMaQXuwCGbOK1Ed+U6gYkVj/rXWRjP3IKyqlR0Vl
6Y9WckwybvwwoGdhRMXQM3LnAli+v3D1SqkZFYWTWgvFCfzYYE6gnnShouue
CxH7ifzI873DLY/Gukdoj2kJyxYnyy50uFFxhP2jOpGNHzsz3fq2H6difnpn
9U2WpTRwtbcfFQvM+/X+suz6Ukwr4yQV1z7x5DJawY8jY02xBAYVvxx6XtTH
snpUTrlaJBUTfY9za5D4MVCM0UOLpmL2QP9iJMtP7zisvBxHxR83ieLvWSbq
q6u/uEDFmwbBuu0sn/ccOCt/ddmCl652xtxYdve7b/l5krpLziFvDGq4vuwa
Xykj+UJYcoZ0lgTVGpdceXqO4PF22etMOOdl7fSWfP+NYmxH27Lj6hdVpZ31
l3zJb9jzwOdlnxaS5JNxMFhyviL7qxNfl83xlyhW42K45FzVe6EZg8tWpBWY
L3gbLbnL+HGpzc9lt94KVga/HUueKdtLkfmzbOYj3/Kzx3Yu2UR1h9HpyWU3
OG8+4uW3a8k6nBYl5Y+XfbfEZ5rJXPb/AOspc74=
       "]]},
     Annotation[#, "Charting`Private`Tag$269672#1"]& ]}, {}, {}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{0, 0},
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  ImagePadding->All,
  Method->{
   "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
    AbsolutePointSize[6], "ScalingFunctions" -> None, 
    "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
        (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
         Part[#, 1]], 
        (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
         Part[#, 2]]}& ), "CopiedValueFunction" -> ({
        (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
         Part[#, 1]], 
        (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
         Part[#, 2]]}& )}},
  PlotRange->{All, All},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.05], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{{3.746619197097396*^9, 3.746619215499153*^9}}]
}, Open  ]]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Modules", "Subsection",
 CellChangeTimes->{{3.726381335500948*^9, 3.726381343557601*^9}}],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"ParallelSow", "[", "expr_", "]"}], ":=", 
   RowBox[{"Sow", "[", "expr", "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"SetSharedFunction", "[", "ParallelSow", "]"}], ";"}]}], "Input"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"\[Delta]", "=", 
    FractionBox["1", "100"]}], ";"}], " "}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"d\[Omega]", "=", "0.0002"}], ";"}]}], "Input",
 CellChangeTimes->{{3.74228955582731*^9, 3.742289558498271*^9}, {
  3.742298662461986*^9, 3.742298684870023*^9}, {3.742298729927827*^9, 
  3.7422987328788557`*^9}, {3.742299426624055*^9, 3.742299459795083*^9}}],

Cell[CellGroupData[{

Cell["Charmonium s - wave", "Subsubsection",
 CellChangeTimes->{{3.742291861612499*^9, 3.742291867360454*^9}, 
   3.742291901323778*^9}],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"swaveccspectra", "[", 
    RowBox[{"n_", ",", "Tscan_"}], "]"}], ":=", 
   RowBox[{"Block", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{"imvs", "=", 
        RowBox[{"ImVsregInter", "[", "n", "]"}]}], ",", 
       RowBox[{"T", "=", 
        RowBox[{"Tscancorig", "[", 
         RowBox[{"[", "n", "]"}], "]"}]}], ",", 
       RowBox[{"mD", "=", 
        RowBox[{"mDcal", "[", 
         RowBox[{
          RowBox[{"2", "\[Pi]"}], ",", 
          RowBox[{"Tscancorig", "[", 
           RowBox[{"[", "n", "]"}], "]"}], ",", 
          RowBox[{"kfinal", "[", 
           RowBox[{"[", "1", "]"}], "]"}], ",", 
          RowBox[{"kfinal", "[", 
           RowBox[{"[", "2", "]"}], "]"}]}], "]"}]}], ",", 
       RowBox[{"\[Sigma]", "=", 
        RowBox[{"\[Sigma]cont", "[", 
         RowBox[{"[", "1", "]"}], "]"}]}], ",", 
       RowBox[{"\[Alpha]", "=", 
        RowBox[{"\[Alpha]cont", "[", 
         RowBox[{"[", "1", "]"}], "]"}]}], ",", 
       RowBox[{"c", "=", 
        RowBox[{"ccont", "[", 
         RowBox[{"[", "1", "]"}], "]"}]}], ",", 
       RowBox[{"M", "=", "Mc"}], ",", 
       RowBox[{"l", "=", "0"}], ",", 
       RowBox[{"\[Omega]min", "=", 
        RowBox[{"-", "1"}]}], ",", 
       RowBox[{"\[Omega]max", "=", "2"}], ",", "ccsT", ",", "inf", ",", 
       "\[Rho]table", ",", "\[Omega]", ",", "rhow", ",", "gr0", ",", "s1", 
       ",", "s01", ",", "rev", ",", "imvc", ",", "V"}], "}"}], ",", 
     "\[IndentingNewLine]", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"rev", "=", 
       RowBox[{"Interpolation", "[", 
        RowBox[{"Join", "[", 
         RowBox[{
          RowBox[{"ParallelTable", "[", 
           RowBox[{
            RowBox[{"{", 
             RowBox[{"r", ",", 
              RowBox[{"ReV", "[", 
               RowBox[{
               "r", ",", "mD", ",", "\[Alpha]", ",", "\[Sigma]", ",", "c"}], 
               "]"}]}], "}"}], ",", 
            RowBox[{"{", 
             RowBox[{"r", ",", 
              RowBox[{"1", "/", "1000"}], ",", "10", ",", 
              RowBox[{"1", "/", "100"}]}], "}"}]}], "]"}], ",", 
          RowBox[{"ParallelTable", "[", 
           RowBox[{
            RowBox[{"{", 
             RowBox[{"r", ",", 
              RowBox[{"ReV", "[", 
               RowBox[{
               "r", ",", "mD", ",", "\[Alpha]", ",", "\[Sigma]", ",", "c"}], 
               "]"}]}], "}"}], ",", 
            RowBox[{"{", 
             RowBox[{"r", ",", 
              RowBox[{"101", "/", "10"}], ",", "25", ",", 
              RowBox[{"1", "/", "10"}]}], "}"}]}], "]"}], ",", 
          RowBox[{"ParallelTable", "[", 
           RowBox[{
            RowBox[{"{", 
             RowBox[{"r", ",", 
              RowBox[{"ReV", "[", 
               RowBox[{
               "r", ",", "mD", ",", "\[Alpha]", ",", "\[Sigma]", ",", "c"}], 
               "]"}]}], "}"}], ",", 
            RowBox[{"{", 
             RowBox[{"r", ",", "26", ",", "1500", ",", "1"}], "}"}]}], "]"}], 
          ",", 
          RowBox[{"ParallelTable", "[", 
           RowBox[{
            RowBox[{"{", 
             RowBox[{"r", ",", 
              RowBox[{"ReV", "[", 
               RowBox[{
               "r", ",", "mD", ",", "\[Alpha]", ",", "\[Sigma]", ",", "c"}], 
               "]"}]}], "}"}], ",", 
            RowBox[{"{", 
             RowBox[{"r", ",", "1510", ",", "20000", ",", "1000"}], "}"}]}], 
           "]"}]}], "]"}], "]"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"imvc", "=", 
       RowBox[{"Interpolation", "[", 
        RowBox[{"Join", "[", 
         RowBox[{
          RowBox[{"ParallelTable", "[", 
           RowBox[{
            RowBox[{"{", 
             RowBox[{"r", ",", 
              RowBox[{"Re", "[", 
               RowBox[{"ImVc", "[", 
                RowBox[{"r", ",", "mD", ",", "\[Alpha]", ",", "T"}], "]"}], 
               "]"}]}], "}"}], ",", 
            RowBox[{"{", 
             RowBox[{"r", ",", 
              RowBox[{"1", "/", "1000"}], ",", "10", ",", 
              RowBox[{"1", "/", "100"}]}], "}"}]}], "]"}], ",", 
          RowBox[{"ParallelTable", "[", 
           RowBox[{
            RowBox[{"{", 
             RowBox[{"r", ",", 
              RowBox[{"Re", "[", 
               RowBox[{"ImVc", "[", 
                RowBox[{"r", ",", "mD", ",", "\[Alpha]", ",", "T"}], "]"}], 
               "]"}]}], "}"}], ",", 
            RowBox[{"{", 
             RowBox[{"r", ",", 
              RowBox[{"101", "/", "10"}], ",", "25", ",", 
              RowBox[{"1", "/", "10"}]}], "}"}]}], "]"}], ",", 
          RowBox[{"ParallelTable", "[", 
           RowBox[{
            RowBox[{"{", 
             RowBox[{"r", ",", 
              RowBox[{"Re", "[", 
               RowBox[{"ImVc", "[", 
                RowBox[{"r", ",", "mD", ",", "\[Alpha]", ",", "T"}], "]"}], 
               "]"}]}], "}"}], ",", 
            RowBox[{"{", 
             RowBox[{"r", ",", "26", ",", "1500", ",", "1"}], "}"}]}], "]"}], 
          ",", 
          RowBox[{"ParallelTable", "[", 
           RowBox[{
            RowBox[{"{", 
             RowBox[{"r", ",", 
              RowBox[{"Re", "[", 
               RowBox[{"ImVc", "[", 
                RowBox[{"r", ",", "mD", ",", "\[Alpha]", ",", "T"}], "]"}], 
               "]"}]}], "}"}], ",", 
            RowBox[{"{", 
             RowBox[{"r", ",", "1510", ",", "20000", ",", "1000"}], "}"}]}], 
           "]"}]}], "]"}], "]"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"V", "[", "x_", "]"}], ":=", 
       RowBox[{
        RowBox[{"rev", "[", "x", "]"}], "+", 
        RowBox[{"\[ImaginaryI]", " ", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{"imvc", "[", "x", "]"}], "+", 
           RowBox[{"imvs", "[", "x", "]"}]}], ")"}]}]}]}], ";", 
      "\[IndentingNewLine]", "\[IndentingNewLine]", 
      RowBox[{"\[Rho]table", "=", 
       RowBox[{
        RowBox[{
         RowBox[{
          RowBox[{"ParallelDo", "[", 
           RowBox[{
            RowBox[{
             RowBox[{"\[Omega]", "=", 
              RowBox[{"\[Omega]min", "+", 
               RowBox[{
                RowBox[{"(", 
                 RowBox[{"it", "-", "1"}], ")"}], " ", "d\[Omega]", " ", 
                "M"}]}]}], ";", 
             RowBox[{"inf", "=", 
              RowBox[{"40", "+", 
               RowBox[{"500", "*", "it", "*", "d\[Omega]"}]}]}], ";", 
             "\[IndentingNewLine]", 
             RowBox[{"(*", 
              RowBox[{
               RowBox[{"s0", "=", 
                RowBox[{"NDSolve", "[", 
                 RowBox[{
                  RowBox[{"{", 
                   RowBox[{
                    RowBox[{
                    RowBox[{
                    RowBox[{
                    RowBox[{"(", 
                    RowBox[{"\[Omega]", "-", 
                    FractionBox[
                    RowBox[{"l", 
                    RowBox[{"(", 
                    RowBox[{"l", "+", "1"}], ")"}]}], 
                    RowBox[{"M", " ", 
                    SuperscriptBox["r", "2"]}]], "-", 
                    RowBox[{"Re", "[", 
                    RowBox[{"V", "[", "r", "]"}], "]"}], "+", 
                    RowBox[{"\[ImaginaryI]", " ", 
                    RowBox[{"Abs", "[", 
                    RowBox[{"Im", "[", 
                    RowBox[{"V", "[", "r", "]"}], "]"}], "]"}]}]}], ")"}], 
                    RowBox[{"gr", "[", "r", "]"}]}], "+", 
                    RowBox[{
                    FractionBox["1", "M"], 
                    RowBox[{
                    RowBox[{"gr", "''"}], "[", "r", "]"}]}]}], "\[Equal]", 
                    "0"}], ",", " ", "\[IndentingNewLine]", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"gr", "'"}], "[", "\[Delta]", "]"}], "\[Equal]", 
                    RowBox[{
                    RowBox[{"2", " ", "\[Delta]", 
                    SuperscriptBox[
                    RowBox[{"(", 
                    RowBox[{"\[Alpha]", " ", "M"}], ")"}], "2"]}], "-", 
                    RowBox[{
                    FractionBox["3", "4"], 
                    SuperscriptBox["\[Delta]", "2"], 
                    SuperscriptBox[
                    RowBox[{"(", 
                    RowBox[{"M", " ", "\[Alpha]"}], ")"}], "3"]}]}]}], ",", 
                    "\[IndentingNewLine]", " ", 
                    RowBox[{
                    RowBox[{"gr", "[", "\[Delta]", "]"}], "==", " ", 
                    RowBox[{
                    RowBox[{
                    SuperscriptBox["\[Delta]", "2"], 
                    SuperscriptBox[
                    RowBox[{"(", 
                    RowBox[{"\[Alpha]", " ", "M"}], ")"}], "2"]}], "-", 
                    RowBox[{
                    FractionBox["1", "4"], 
                    SuperscriptBox["\[Delta]", "3"], 
                    SuperscriptBox[
                    RowBox[{"(", 
                    RowBox[{"M", " ", "\[Alpha]"}], ")"}], "3"]}]}]}]}], 
                   "}"}], ",", "gr", ",", 
                  RowBox[{"{", 
                   RowBox[{"r", ",", "\[Delta]", ",", "inf"}], "}"}], ",", 
                  RowBox[{"PrecisionGoal", "\[Rule]", "10"}], ",", 
                  RowBox[{"MaxSteps", "\[Rule]", "1000000"}]}], "]"}]}], ";", 
               "\[IndentingNewLine]", 
               RowBox[{
                RowBox[{"gr1", "[", "r_", "]"}], "=", 
                SubscriptBox[
                 RowBox[{"(", 
                  RowBox[{
                   RowBox[{"gr", "[", "r", "]"}], "/.", "s0"}], ")"}], 
                 RowBox[{
                 "\[LeftDoubleBracket]", "1", "\[RightDoubleBracket]"}]]}], 
               ";"}], "*)"}], "\[IndentingNewLine]", 
             RowBox[{"s01", "=", 
              RowBox[{"NDSolve", "[", 
               RowBox[{
                RowBox[{"{", 
                 RowBox[{
                  RowBox[{
                   RowBox[{
                    RowBox[{
                    RowBox[{"(", 
                    RowBox[{"\[Omega]", "-", 
                    FractionBox[
                    RowBox[{"l", 
                    RowBox[{"(", 
                    RowBox[{"l", "+", "1"}], ")"}]}], 
                    RowBox[{"M", " ", 
                    SuperscriptBox["r", "2"]}]], "-", 
                    RowBox[{"Re", "[", 
                    RowBox[{"V", "[", "r", "]"}], "]"}], "+", 
                    RowBox[{"\[ImaginaryI]", " ", 
                    RowBox[{"Abs", "[", 
                    RowBox[{"Im", "[", 
                    RowBox[{"V", "[", "r", "]"}], "]"}], "]"}]}]}], ")"}], 
                    RowBox[{"gr", "[", "r", "]"}]}], "+", 
                    RowBox[{
                    FractionBox["1", "M"], 
                    RowBox[{
                    RowBox[{"gr", "''"}], "[", "r", "]"}]}]}], "\[Equal]", 
                   "0"}], ",", " ", "\[IndentingNewLine]", 
                  RowBox[{
                   RowBox[{
                    RowBox[{"gr", "'"}], "[", "\[Delta]", "]"}], "\[Equal]", 
                   RowBox[{
                    RowBox[{"(", 
                    RowBox[{"\[Alpha]", " ", "M"}], ")"}], "-", 
                    RowBox[{"\[Delta]", 
                    SuperscriptBox[
                    RowBox[{"(", 
                    RowBox[{"M", " ", "\[Alpha]"}], ")"}], "2"]}]}]}], ",", 
                  "\[IndentingNewLine]", " ", 
                  RowBox[{
                   RowBox[{"gr", "[", "\[Delta]", "]"}], "\[Equal]", 
                   RowBox[{
                    RowBox[{"\[Delta]", 
                    RowBox[{"(", 
                    RowBox[{"\[Alpha]", " ", "M"}], ")"}]}], "-", " ", 
                    RowBox[{
                    FractionBox["1", "2"], 
                    SuperscriptBox["\[Delta]", "2"], 
                    SuperscriptBox[
                    RowBox[{"(", 
                    RowBox[{"\[Alpha]", " ", "M"}], ")"}], "2"]}]}]}]}], 
                 "}"}], ",", "gr", ",", 
                RowBox[{"{", 
                 RowBox[{"r", ",", "\[Delta]", ",", "inf"}], "}"}]}], "]"}]}],
              ";", "\[IndentingNewLine]", 
             RowBox[{
              RowBox[{"gr0", "[", "r_", "]"}], "=", 
              SubscriptBox[
               RowBox[{"(", 
                RowBox[{
                 RowBox[{"gr", "[", "r", "]"}], "/.", "s01"}], ")"}], 
               RowBox[{
               "\[LeftDoubleBracket]", "1", "\[RightDoubleBracket]"}]]}], ";",
              "\[IndentingNewLine]", 
             RowBox[{"s1", "=", 
              RowBox[{"NDSolve", "[", 
               RowBox[{
                RowBox[{"{", 
                 RowBox[{
                  RowBox[{
                   RowBox[{
                    RowBox[{"rho", "'"}], "[", "x", "]"}], "\[Equal]", 
                   RowBox[{
                    RowBox[{"-", 
                    FractionBox[
                    RowBox[{" ", 
                    RowBox[{"6", " ", "Nc", " ", 
                    SuperscriptBox["M", "2"], " ", "\[Alpha]"}]}], 
                    RowBox[{"4", "\[Pi]"}]]}], 
                    RowBox[{"Im", "[", 
                    FractionBox["1", 
                    SuperscriptBox[
                    RowBox[{"(", 
                    RowBox[{"gr0", "[", "x", "]"}], ")"}], "2"]], 
                    RowBox[{"(*", 
                    RowBox[{"+", 
                    FractionBox["36", 
                    SuperscriptBox[
                    RowBox[{"(", 
                    RowBox[{"gr1", "[", "x", "]"}], ")"}], "2"]]}], "*)"}], 
                    "]"}]}]}], ",", 
                  RowBox[{
                   RowBox[{"rho", "[", "\[Delta]", "]"}], "\[Equal]", "0"}]}],
                  "}"}], ",", "rho", ",", 
                RowBox[{"{", 
                 RowBox[{"x", ",", "\[Delta]", ",", "inf"}], "}"}]}], "]"}]}],
              ";", "\[IndentingNewLine]", 
             RowBox[{
              RowBox[{"rhow", "[", "r_", "]"}], "=", 
              SubscriptBox[
               RowBox[{"(", 
                RowBox[{
                 RowBox[{"rho", "[", "r", "]"}], "/.", "s1"}], ")"}], 
               RowBox[{
               "\[LeftDoubleBracket]", "1", "\[RightDoubleBracket]"}]]}], ";",
              "\[IndentingNewLine]", 
             RowBox[{"ParallelSow", "[", 
              RowBox[{"{", 
               RowBox[{
                RowBox[{"\[Omega]", "+", 
                 RowBox[{"2", "M"}]}], ",", 
                RowBox[{"rhow", "[", "inf", "]"}]}], "}"}], "]"}]}], ",", 
            RowBox[{"{", 
             RowBox[{"it", ",", "1", ",", 
              FractionBox[
               RowBox[{"\[Omega]max", "-", "\[Omega]min"}], 
               RowBox[{"d\[Omega]", " ", "M"}]]}], "}"}]}], "]"}], "//", 
          "Reap"}], "//", "Last"}], "//", "First"}]}], ";", 
      "\[IndentingNewLine]", "\[IndentingNewLine]", 
      RowBox[{"ccsT", "=", 
       RowBox[{"ParallelTable", "[", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{
           RowBox[{"\[Rho]table", "[", 
            RowBox[{"[", 
             RowBox[{"i", ",", "1"}], "]"}], "]"}], ",", 
           FractionBox[
            RowBox[{"-", 
             RowBox[{"\[Rho]table", "[", 
              RowBox[{"[", 
               RowBox[{"i", ",", "2"}], "]"}], "]"}]}], 
            SuperscriptBox[
             RowBox[{"\[Rho]table", "[", 
              RowBox[{"[", 
               RowBox[{"i", ",", "1"}], "]"}], "]"}], "2"]]}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"i", ",", "1", ",", 
           RowBox[{"Length", "[", "\[Rho]table", "]"}]}], "}"}]}], "]"}]}], 
      ";", "\[IndentingNewLine]", 
      RowBox[{"Export", "[", 
       RowBox[{
        RowBox[{"\"\<spectraldata/Tscan/cc/swccT\>\"", "<>", 
         RowBox[{"ToString", "[", 
          RowBox[{"Round", "[", 
           RowBox[{"T", "*", "1000"}], "]"}], "]"}], "<>", 
         "\"\<spectra.dat\>\""}], ",", 
        RowBox[{"Sort", "[", "ccsT", "]"}]}], "]"}], ";"}]}], 
    "\[IndentingNewLine]", "]"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.724397604460712*^9, 3.724397621092863*^9}, {
   3.724398705481254*^9, 3.724398705798315*^9}, {3.72440624506767*^9, 
   3.7244062457361317`*^9}, {3.7244423136168756`*^9, 3.724442340980721*^9}, {
   3.7244423712224417`*^9, 3.724442377050403*^9}, {3.724442465925974*^9, 
   3.724442518695669*^9}, {3.7244426255599117`*^9, 3.724442639076613*^9}, {
   3.724443729204352*^9, 3.724443729749022*^9}, {3.724443881656342*^9, 
   3.7244438842850027`*^9}, 3.725261621115453*^9, 3.72526166634648*^9, {
   3.725271550289123*^9, 3.7252715504130163`*^9}, {3.725271609402791*^9, 
   3.7252716095188437`*^9}, {3.7252717762497*^9, 3.725271782362536*^9}, {
   3.725271824500347*^9, 3.725271826035269*^9}, {3.725271857701564*^9, 
   3.725271858192912*^9}, {3.725271928114049*^9, 3.7252719496618757`*^9}, {
   3.725271981807578*^9, 3.725271987122878*^9}, {3.725273718896678*^9, 
   3.72527377251343*^9}, {3.725273963159111*^9, 3.725273966198284*^9}, {
   3.725364382855975*^9, 3.725364384697238*^9}, {3.725364432753635*^9, 
   3.725364433681274*^9}, {3.725364595553596*^9, 3.725364595868292*^9}, {
   3.725364661141473*^9, 3.725364661301785*^9}, {3.725365068510941*^9, 
   3.7253650691073112`*^9}, {3.7256202924505177`*^9, 
   3.7256202938854313`*^9}, {3.7256265502253428`*^9, 3.725626559021003*^9}, {
   3.725798091627001*^9, 3.725798108963685*^9}, {3.725798150844287*^9, 
   3.725798156038417*^9}, {3.726312422974263*^9, 3.726312439922279*^9}, {
   3.726313778060986*^9, 3.726313794010726*^9}, {3.726313854887352*^9, 
   3.726313855417986*^9}, {3.726377533478507*^9, 3.726377535012369*^9}, {
   3.726379310729051*^9, 3.726379315935656*^9}, {3.726379351066524*^9, 
   3.7263793563685627`*^9}, 3.7263814533362722`*^9, {3.726468979312665*^9, 
   3.726469044993416*^9}, {3.726564279540083*^9, 3.726564288774165*^9}, {
   3.726564330005303*^9, 3.726564342424973*^9}, {3.7265645007454853`*^9, 
   3.7265645054085903`*^9}, 3.726565145221386*^9, {3.726836923420138*^9, 
   3.726836925204391*^9}, {3.7268417497448387`*^9, 3.726841749854889*^9}, {
   3.727357927216405*^9, 3.7273579306359463`*^9}, 3.72735811608375*^9, {
   3.7273582875862513`*^9, 3.727358296888235*^9}, {3.727520051444908*^9, 
   3.7275200665503483`*^9}, {3.727539483513708*^9, 3.72753949210455*^9}, {
   3.7275398377710333`*^9, 3.727539869000495*^9}, {3.7275879806550293`*^9, 
   3.727587984698921*^9}, {3.727606150288821*^9, 3.727606150994812*^9}, {
   3.728932814314426*^9, 3.728932860160056*^9}, 3.7289333254815903`*^9, 
   3.7299208725344887`*^9, {3.730007040539275*^9, 3.7300070509717903`*^9}, {
   3.730007357183831*^9, 3.7300073662633142`*^9}, {3.7331192829046183`*^9, 
   3.733119300197537*^9}, {3.733120717385792*^9, 3.733120717697629*^9}, {
   3.7331222711038847`*^9, 3.733122272703622*^9}, {3.733211538849382*^9, 
   3.7332115515038567`*^9}, {3.7332289443370447`*^9, 
   3.7332289447842827`*^9}, {3.742215948846467*^9, 3.742215959437643*^9}, {
   3.742216025305929*^9, 3.742216093257207*^9}, {3.7422172078868933`*^9, 
   3.7422172275906973`*^9}, 3.74221727383118*^9, {3.742217585069265*^9, 
   3.742217591716959*^9}, {3.7422176229823923`*^9, 3.742217653035615*^9}, {
   3.742269341112874*^9, 3.742269371527761*^9}, 3.742275694936644*^9, {
   3.742289467062118*^9, 3.742289486771803*^9}, {3.742289520463562*^9, 
   3.7422896027136*^9}, {3.7422896364561243`*^9, 3.74228964347093*^9}, {
   3.742289678232355*^9, 3.742289708137301*^9}, {3.7422897506101*^9, 
   3.7422897587096577`*^9}, {3.7422920316457787`*^9, 3.742292034487727*^9}, 
   3.742292186682322*^9, {3.742292303240778*^9, 3.742292303483521*^9}, {
   3.742292362481593*^9, 3.742292372544711*^9}, {3.742292408813004*^9, 
   3.742292447857381*^9}, {3.7422968206130743`*^9, 3.742296843480155*^9}, {
   3.7422970160890417`*^9, 3.742297024417719*^9}, {3.742297074890059*^9, 
   3.74229711910509*^9}, {3.7422973083294992`*^9, 3.742297309298213*^9}, {
   3.742297354168077*^9, 3.742297359897736*^9}, {3.742297415918168*^9, 
   3.7422974232482452`*^9}, {3.742297467739311*^9, 3.742297612963316*^9}, {
   3.7422977860232887`*^9, 3.7422977903561068`*^9}, {3.74229798181938*^9, 
   3.742298023677857*^9}, {3.7422980561712513`*^9, 3.74229805925661*^9}, 
   3.742298106308654*^9, {3.742300221204397*^9, 3.742300269720365*^9}, {
   3.742300416216001*^9, 3.742300416917211*^9}, {3.742300536315893*^9, 
   3.742300546756034*^9}, {3.742300626604027*^9, 3.742300638323701*^9}, {
   3.7423006769018583`*^9, 3.7423007163572683`*^9}, {3.7435037431402884`*^9, 
   3.743503799356997*^9}, {3.7435038425347443`*^9, 3.743503908279688*^9}, {
   3.7435046316079397`*^9, 3.743504651390107*^9}, 3.745326235801956*^9, {
   3.746445867529339*^9, 3.746445934496339*^9}, 3.746446850082293*^9}],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"swavecclspectra", "[", 
    RowBox[{"n_", ",", "Tscan_"}], "]"}], ":=", 
   RowBox[{"Block", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{"imvs", "=", 
        RowBox[{"ImVsreglInter", "[", "n", "]"}]}], ",", 
       RowBox[{"T", "=", 
        RowBox[{"Tscancorig", "[", 
         RowBox[{"[", "n", "]"}], "]"}]}], ",", 
       RowBox[{"mD", "=", 
        RowBox[{"mDcal", "[", 
         RowBox[{
          RowBox[{"2", "\[Pi]"}], ",", 
          RowBox[{"Tscancorig", "[", 
           RowBox[{"[", "n", "]"}], "]"}], ",", 
          RowBox[{"kfinall", "[", 
           RowBox[{"[", "1", "]"}], "]"}], ",", 
          RowBox[{"kfinall", "[", 
           RowBox[{"[", "2", "]"}], "]"}]}], "]"}]}], ",", 
       RowBox[{"\[Sigma]", "=", 
        RowBox[{"\[Sigma]cont", "[", 
         RowBox[{"[", "1", "]"}], "]"}]}], ",", 
       RowBox[{"\[Alpha]", "=", 
        RowBox[{"\[Alpha]cont", "[", 
         RowBox[{"[", "1", "]"}], "]"}]}], ",", 
       RowBox[{"c", "=", 
        RowBox[{"ccont", "[", 
         RowBox[{"[", "1", "]"}], "]"}]}], ",", 
       RowBox[{"M", "=", "Mc"}], ",", 
       RowBox[{"l", "=", "0"}], ",", 
       RowBox[{"\[Omega]min", "=", 
        RowBox[{"-", "1"}]}], ",", 
       RowBox[{"\[Omega]max", "=", "2"}], ",", "ccsT", ",", "inf", ",", 
       "\[Rho]table", ",", "\[Omega]", ",", "rhow", ",", "gr0", ",", "s1", 
       ",", "s01", ",", "rev", ",", "imvc", ",", "V"}], "}"}], ",", 
     "\[IndentingNewLine]", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"rev", "=", 
       RowBox[{"Interpolation", "[", 
        RowBox[{"Join", "[", 
         RowBox[{
          RowBox[{"ParallelTable", "[", 
           RowBox[{
            RowBox[{"{", 
             RowBox[{"r", ",", 
              RowBox[{"ReV", "[", 
               RowBox[{
               "r", ",", "mD", ",", "\[Alpha]", ",", "\[Sigma]", ",", "c"}], 
               "]"}]}], "}"}], ",", 
            RowBox[{"{", 
             RowBox[{"r", ",", 
              RowBox[{"1", "/", "1000"}], ",", "10", ",", 
              RowBox[{"1", "/", "100"}]}], "}"}]}], "]"}], ",", 
          RowBox[{"ParallelTable", "[", 
           RowBox[{
            RowBox[{"{", 
             RowBox[{"r", ",", 
              RowBox[{"ReV", "[", 
               RowBox[{
               "r", ",", "mD", ",", "\[Alpha]", ",", "\[Sigma]", ",", "c"}], 
               "]"}]}], "}"}], ",", 
            RowBox[{"{", 
             RowBox[{"r", ",", 
              RowBox[{"101", "/", "10"}], ",", "25", ",", 
              RowBox[{"1", "/", "10"}]}], "}"}]}], "]"}], ",", 
          RowBox[{"ParallelTable", "[", 
           RowBox[{
            RowBox[{"{", 
             RowBox[{"r", ",", 
              RowBox[{"ReV", "[", 
               RowBox[{
               "r", ",", "mD", ",", "\[Alpha]", ",", "\[Sigma]", ",", "c"}], 
               "]"}]}], "}"}], ",", 
            RowBox[{"{", 
             RowBox[{"r", ",", "26", ",", "1500", ",", "1"}], "}"}]}], "]"}], 
          ",", 
          RowBox[{"ParallelTable", "[", 
           RowBox[{
            RowBox[{"{", 
             RowBox[{"r", ",", 
              RowBox[{"ReV", "[", 
               RowBox[{
               "r", ",", "mD", ",", "\[Alpha]", ",", "\[Sigma]", ",", "c"}], 
               "]"}]}], "}"}], ",", 
            RowBox[{"{", 
             RowBox[{"r", ",", "1510", ",", "20000", ",", "1000"}], "}"}]}], 
           "]"}]}], "]"}], "]"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"imvc", "=", 
       RowBox[{"Interpolation", "[", 
        RowBox[{"Join", "[", 
         RowBox[{
          RowBox[{"ParallelTable", "[", 
           RowBox[{
            RowBox[{"{", 
             RowBox[{"r", ",", 
              RowBox[{"Re", "[", 
               RowBox[{"ImVc", "[", 
                RowBox[{"r", ",", "mD", ",", "\[Alpha]", ",", "T"}], "]"}], 
               "]"}]}], "}"}], ",", 
            RowBox[{"{", 
             RowBox[{"r", ",", 
              RowBox[{"1", "/", "1000"}], ",", "10", ",", 
              RowBox[{"1", "/", "100"}]}], "}"}]}], "]"}], ",", 
          RowBox[{"ParallelTable", "[", 
           RowBox[{
            RowBox[{"{", 
             RowBox[{"r", ",", 
              RowBox[{"Re", "[", 
               RowBox[{"ImVc", "[", 
                RowBox[{"r", ",", "mD", ",", "\[Alpha]", ",", "T"}], "]"}], 
               "]"}]}], "}"}], ",", 
            RowBox[{"{", 
             RowBox[{"r", ",", 
              RowBox[{"101", "/", "10"}], ",", "25", ",", 
              RowBox[{"1", "/", "10"}]}], "}"}]}], "]"}], ",", 
          RowBox[{"ParallelTable", "[", 
           RowBox[{
            RowBox[{"{", 
             RowBox[{"r", ",", 
              RowBox[{"Re", "[", 
               RowBox[{"ImVc", "[", 
                RowBox[{"r", ",", "mD", ",", "\[Alpha]", ",", "T"}], "]"}], 
               "]"}]}], "}"}], ",", 
            RowBox[{"{", 
             RowBox[{"r", ",", "26", ",", "1500", ",", "1"}], "}"}]}], "]"}], 
          ",", 
          RowBox[{"ParallelTable", "[", 
           RowBox[{
            RowBox[{"{", 
             RowBox[{"r", ",", 
              RowBox[{"Re", "[", 
               RowBox[{"ImVc", "[", 
                RowBox[{"r", ",", "mD", ",", "\[Alpha]", ",", "T"}], "]"}], 
               "]"}]}], "}"}], ",", 
            RowBox[{"{", 
             RowBox[{"r", ",", "1510", ",", "20000", ",", "1000"}], "}"}]}], 
           "]"}]}], "]"}], "]"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"V", "[", "x_", "]"}], ":=", 
       RowBox[{
        RowBox[{"rev", "[", "x", "]"}], "+", 
        RowBox[{"\[ImaginaryI]", " ", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{"imvc", "[", "x", "]"}], "+", 
           RowBox[{"imvs", "[", "x", "]"}]}], ")"}]}]}]}], ";", 
      "\[IndentingNewLine]", "\[IndentingNewLine]", 
      RowBox[{"\[Rho]table", "=", 
       RowBox[{
        RowBox[{
         RowBox[{
          RowBox[{"ParallelDo", "[", 
           RowBox[{
            RowBox[{
             RowBox[{"\[Omega]", "=", 
              RowBox[{"\[Omega]min", "+", 
               RowBox[{
                RowBox[{"(", 
                 RowBox[{"it", "-", "1"}], ")"}], " ", "d\[Omega]", " ", 
                "M"}]}]}], ";", 
             RowBox[{"inf", "=", 
              RowBox[{"40", "+", 
               RowBox[{"500", "*", "it", "*", "d\[Omega]"}]}]}], ";", 
             "\[IndentingNewLine]", 
             RowBox[{"(*", 
              RowBox[{
               RowBox[{"s0", "=", 
                RowBox[{"NDSolve", "[", 
                 RowBox[{
                  RowBox[{"{", 
                   RowBox[{
                    RowBox[{
                    RowBox[{
                    RowBox[{
                    RowBox[{"(", 
                    RowBox[{"\[Omega]", "-", 
                    FractionBox[
                    RowBox[{"l", 
                    RowBox[{"(", 
                    RowBox[{"l", "+", "1"}], ")"}]}], 
                    RowBox[{"M", " ", 
                    SuperscriptBox["r", "2"]}]], "-", 
                    RowBox[{"Re", "[", 
                    RowBox[{"V", "[", "r", "]"}], "]"}], "+", 
                    RowBox[{"\[ImaginaryI]", " ", 
                    RowBox[{"Abs", "[", 
                    RowBox[{"Im", "[", 
                    RowBox[{"V", "[", "r", "]"}], "]"}], "]"}]}]}], ")"}], 
                    RowBox[{"gr", "[", "r", "]"}]}], "+", 
                    RowBox[{
                    FractionBox["1", "M"], 
                    RowBox[{
                    RowBox[{"gr", "''"}], "[", "r", "]"}]}]}], "\[Equal]", 
                    "0"}], ",", " ", "\[IndentingNewLine]", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"gr", "'"}], "[", "\[Delta]", "]"}], "\[Equal]", 
                    RowBox[{
                    RowBox[{"2", " ", "\[Delta]", 
                    SuperscriptBox[
                    RowBox[{"(", 
                    RowBox[{"\[Alpha]", " ", "M"}], ")"}], "2"]}], "-", 
                    RowBox[{
                    FractionBox["3", "4"], 
                    SuperscriptBox["\[Delta]", "2"], 
                    SuperscriptBox[
                    RowBox[{"(", 
                    RowBox[{"M", " ", "\[Alpha]"}], ")"}], "3"]}]}]}], ",", 
                    "\[IndentingNewLine]", " ", 
                    RowBox[{
                    RowBox[{"gr", "[", "\[Delta]", "]"}], "==", " ", 
                    RowBox[{
                    RowBox[{
                    SuperscriptBox["\[Delta]", "2"], 
                    SuperscriptBox[
                    RowBox[{"(", 
                    RowBox[{"\[Alpha]", " ", "M"}], ")"}], "2"]}], "-", 
                    RowBox[{
                    FractionBox["1", "4"], 
                    SuperscriptBox["\[Delta]", "3"], 
                    SuperscriptBox[
                    RowBox[{"(", 
                    RowBox[{"M", " ", "\[Alpha]"}], ")"}], "3"]}]}]}]}], 
                   "}"}], ",", "gr", ",", 
                  RowBox[{"{", 
                   RowBox[{"r", ",", "\[Delta]", ",", "inf"}], "}"}], ",", 
                  RowBox[{"PrecisionGoal", "\[Rule]", "10"}], ",", 
                  RowBox[{"MaxSteps", "\[Rule]", "1000000"}]}], "]"}]}], ";", 
               "\[IndentingNewLine]", 
               RowBox[{
                RowBox[{"gr1", "[", "r_", "]"}], "=", 
                SubscriptBox[
                 RowBox[{"(", 
                  RowBox[{
                   RowBox[{"gr", "[", "r", "]"}], "/.", "s0"}], ")"}], 
                 RowBox[{
                 "\[LeftDoubleBracket]", "1", "\[RightDoubleBracket]"}]]}], 
               ";"}], "*)"}], "\[IndentingNewLine]", 
             RowBox[{"s01", "=", 
              RowBox[{"NDSolve", "[", 
               RowBox[{
                RowBox[{"{", 
                 RowBox[{
                  RowBox[{
                   RowBox[{
                    RowBox[{
                    RowBox[{"(", 
                    RowBox[{"\[Omega]", "-", 
                    FractionBox[
                    RowBox[{"l", 
                    RowBox[{"(", 
                    RowBox[{"l", "+", "1"}], ")"}]}], 
                    RowBox[{"M", " ", 
                    SuperscriptBox["r", "2"]}]], "-", 
                    RowBox[{"Re", "[", 
                    RowBox[{"V", "[", "r", "]"}], "]"}], "+", 
                    RowBox[{"\[ImaginaryI]", " ", 
                    RowBox[{"Abs", "[", 
                    RowBox[{"Im", "[", 
                    RowBox[{"V", "[", "r", "]"}], "]"}], "]"}]}]}], ")"}], 
                    RowBox[{"gr", "[", "r", "]"}]}], "+", 
                    RowBox[{
                    FractionBox["1", "M"], 
                    RowBox[{
                    RowBox[{"gr", "''"}], "[", "r", "]"}]}]}], "\[Equal]", 
                   "0"}], ",", " ", "\[IndentingNewLine]", 
                  RowBox[{
                   RowBox[{
                    RowBox[{"gr", "'"}], "[", "\[Delta]", "]"}], "\[Equal]", 
                   RowBox[{
                    RowBox[{"(", 
                    RowBox[{"\[Alpha]", " ", "M"}], ")"}], "-", 
                    RowBox[{"\[Delta]", 
                    SuperscriptBox[
                    RowBox[{"(", 
                    RowBox[{"M", " ", "\[Alpha]"}], ")"}], "2"]}]}]}], ",", 
                  "\[IndentingNewLine]", " ", 
                  RowBox[{
                   RowBox[{"gr", "[", "\[Delta]", "]"}], "\[Equal]", 
                   RowBox[{
                    RowBox[{"\[Delta]", 
                    RowBox[{"(", 
                    RowBox[{"\[Alpha]", " ", "M"}], ")"}]}], "-", " ", 
                    RowBox[{
                    FractionBox["1", "2"], 
                    SuperscriptBox["\[Delta]", "2"], 
                    SuperscriptBox[
                    RowBox[{"(", 
                    RowBox[{"\[Alpha]", " ", "M"}], ")"}], "2"]}]}]}]}], 
                 "}"}], ",", "gr", ",", 
                RowBox[{"{", 
                 RowBox[{"r", ",", "\[Delta]", ",", "inf"}], "}"}]}], "]"}]}],
              ";", "\[IndentingNewLine]", 
             RowBox[{
              RowBox[{"gr0", "[", "r_", "]"}], "=", 
              SubscriptBox[
               RowBox[{"(", 
                RowBox[{
                 RowBox[{"gr", "[", "r", "]"}], "/.", "s01"}], ")"}], 
               RowBox[{
               "\[LeftDoubleBracket]", "1", "\[RightDoubleBracket]"}]]}], ";",
              "\[IndentingNewLine]", 
             RowBox[{"s1", "=", 
              RowBox[{"NDSolve", "[", 
               RowBox[{
                RowBox[{"{", 
                 RowBox[{
                  RowBox[{
                   RowBox[{
                    RowBox[{"rho", "'"}], "[", "x", "]"}], "\[Equal]", 
                   RowBox[{
                    RowBox[{"-", 
                    FractionBox[
                    RowBox[{" ", 
                    RowBox[{"6", " ", "Nc", " ", 
                    SuperscriptBox["M", "2"], " ", "\[Alpha]"}]}], 
                    RowBox[{"4", "\[Pi]"}]]}], 
                    RowBox[{"Im", "[", 
                    FractionBox["1", 
                    SuperscriptBox[
                    RowBox[{"(", 
                    RowBox[{"gr0", "[", "x", "]"}], ")"}], "2"]], 
                    RowBox[{"(*", 
                    RowBox[{"+", 
                    FractionBox["36", 
                    SuperscriptBox[
                    RowBox[{"(", 
                    RowBox[{"gr1", "[", "x", "]"}], ")"}], "2"]]}], "*)"}], 
                    "]"}]}]}], ",", 
                  RowBox[{
                   RowBox[{"rho", "[", "\[Delta]", "]"}], "\[Equal]", "0"}]}],
                  "}"}], ",", "rho", ",", 
                RowBox[{"{", 
                 RowBox[{"x", ",", "\[Delta]", ",", "inf"}], "}"}]}], "]"}]}],
              ";", "\[IndentingNewLine]", 
             RowBox[{
              RowBox[{"rhow", "[", "r_", "]"}], "=", 
              SubscriptBox[
               RowBox[{"(", 
                RowBox[{
                 RowBox[{"rho", "[", "r", "]"}], "/.", "s1"}], ")"}], 
               RowBox[{
               "\[LeftDoubleBracket]", "1", "\[RightDoubleBracket]"}]]}], ";",
              "\[IndentingNewLine]", 
             RowBox[{"ParallelSow", "[", 
              RowBox[{"{", 
               RowBox[{
                RowBox[{"\[Omega]", "+", 
                 RowBox[{"2", "M"}]}], ",", 
                RowBox[{"rhow", "[", "inf", "]"}]}], "}"}], "]"}]}], ",", 
            RowBox[{"{", 
             RowBox[{"it", ",", "1", ",", 
              FractionBox[
               RowBox[{"\[Omega]max", "-", "\[Omega]min"}], 
               RowBox[{"d\[Omega]", " ", "M"}]]}], "}"}]}], "]"}], "//", 
          "Reap"}], "//", "Last"}], "//", "First"}]}], ";", 
      "\[IndentingNewLine]", "\[IndentingNewLine]", 
      RowBox[{"ccsT", "=", 
       RowBox[{"ParallelTable", "[", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{
           RowBox[{"\[Rho]table", "[", 
            RowBox[{"[", 
             RowBox[{"i", ",", "1"}], "]"}], "]"}], ",", 
           FractionBox[
            RowBox[{"-", 
             RowBox[{"\[Rho]table", "[", 
              RowBox[{"[", 
               RowBox[{"i", ",", "2"}], "]"}], "]"}]}], 
            SuperscriptBox[
             RowBox[{"\[Rho]table", "[", 
              RowBox[{"[", 
               RowBox[{"i", ",", "1"}], "]"}], "]"}], "2"]]}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"i", ",", "1", ",", 
           RowBox[{"Length", "[", "\[Rho]table", "]"}]}], "}"}]}], "]"}]}], 
      ";", "\[IndentingNewLine]", 
      RowBox[{"Export", "[", 
       RowBox[{
        RowBox[{"\"\<spectraldata/Tscan/cc/swccT\>\"", "<>", 
         RowBox[{"ToString", "[", 
          RowBox[{"Round", "[", 
           RowBox[{"T", "*", "1000"}], "]"}], "]"}], "<>", 
         "\"\<lspectra.dat\>\""}], ",", 
        RowBox[{"Sort", "[", "ccsT", "]"}]}], "]"}], ";"}]}], 
    "\[IndentingNewLine]", "]"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.724397604460712*^9, 3.724397621092863*^9}, {
   3.724398705481254*^9, 3.724398705798315*^9}, {3.72440624506767*^9, 
   3.7244062457361317`*^9}, {3.7244423136168756`*^9, 3.724442340980721*^9}, {
   3.7244423712224417`*^9, 3.724442377050403*^9}, {3.724442465925974*^9, 
   3.724442518695669*^9}, {3.7244426255599117`*^9, 3.724442639076613*^9}, {
   3.724443729204352*^9, 3.724443729749022*^9}, {3.724443881656342*^9, 
   3.7244438842850027`*^9}, 3.725261621115453*^9, 3.72526166634648*^9, {
   3.725271550289123*^9, 3.7252715504130163`*^9}, {3.725271609402791*^9, 
   3.7252716095188437`*^9}, {3.7252717762497*^9, 3.725271782362536*^9}, {
   3.725271824500347*^9, 3.725271826035269*^9}, {3.725271857701564*^9, 
   3.725271858192912*^9}, {3.725271928114049*^9, 3.7252719496618757`*^9}, {
   3.725271981807578*^9, 3.725271987122878*^9}, {3.725273718896678*^9, 
   3.72527377251343*^9}, {3.725273963159111*^9, 3.725273966198284*^9}, {
   3.725364382855975*^9, 3.725364384697238*^9}, {3.725364432753635*^9, 
   3.725364433681274*^9}, {3.725364595553596*^9, 3.725364595868292*^9}, {
   3.725364661141473*^9, 3.725364661301785*^9}, {3.725365068510941*^9, 
   3.7253650691073112`*^9}, {3.7256202924505177`*^9, 
   3.7256202938854313`*^9}, {3.7256265502253428`*^9, 3.725626559021003*^9}, {
   3.725798091627001*^9, 3.725798108963685*^9}, {3.725798150844287*^9, 
   3.725798156038417*^9}, {3.726312422974263*^9, 3.726312439922279*^9}, {
   3.726313778060986*^9, 3.726313794010726*^9}, {3.726313854887352*^9, 
   3.726313855417986*^9}, {3.726377533478507*^9, 3.726377535012369*^9}, {
   3.726379310729051*^9, 3.726379315935656*^9}, {3.726379351066524*^9, 
   3.7263793563685627`*^9}, 3.7263814533362722`*^9, {3.726468979312665*^9, 
   3.726469044993416*^9}, {3.726564279540083*^9, 3.726564288774165*^9}, {
   3.726564330005303*^9, 3.726564342424973*^9}, {3.7265645007454853`*^9, 
   3.7265645054085903`*^9}, 3.726565145221386*^9, {3.726836923420138*^9, 
   3.726836925204391*^9}, {3.7268417497448387`*^9, 3.726841749854889*^9}, {
   3.727357927216405*^9, 3.7273579306359463`*^9}, 3.72735811608375*^9, {
   3.7273582875862513`*^9, 3.727358296888235*^9}, {3.727520051444908*^9, 
   3.7275200665503483`*^9}, {3.727539483513708*^9, 3.72753949210455*^9}, {
   3.7275398377710333`*^9, 3.727539869000495*^9}, {3.7275879806550293`*^9, 
   3.727587984698921*^9}, {3.727606150288821*^9, 3.727606150994812*^9}, {
   3.728932814314426*^9, 3.728932860160056*^9}, 3.7289333254815903`*^9, 
   3.7299208725344887`*^9, {3.730007040539275*^9, 3.7300070509717903`*^9}, {
   3.730007357183831*^9, 3.7300073662633142`*^9}, {3.7331192829046183`*^9, 
   3.733119300197537*^9}, {3.733120717385792*^9, 3.733120717697629*^9}, {
   3.7331222711038847`*^9, 3.733122272703622*^9}, {3.733211538849382*^9, 
   3.7332115515038567`*^9}, {3.7332289443370447`*^9, 
   3.7332289447842827`*^9}, {3.742215948846467*^9, 3.742215959437643*^9}, {
   3.742216025305929*^9, 3.742216093257207*^9}, {3.7422172078868933`*^9, 
   3.7422172275906973`*^9}, 3.74221727383118*^9, {3.742217585069265*^9, 
   3.742217591716959*^9}, {3.7422176229823923`*^9, 3.742217653035615*^9}, {
   3.742269341112874*^9, 3.742269371527761*^9}, 3.742275694936644*^9, {
   3.742289467062118*^9, 3.742289486771803*^9}, {3.742289520463562*^9, 
   3.7422896027136*^9}, {3.7422896364561243`*^9, 3.74228964347093*^9}, {
   3.742289678232355*^9, 3.742289708137301*^9}, {3.7422897506101*^9, 
   3.7422897587096577`*^9}, {3.7422920316457787`*^9, 3.742292034487727*^9}, 
   3.742292186682322*^9, {3.742292303240778*^9, 3.742292303483521*^9}, {
   3.742292362481593*^9, 3.742292372544711*^9}, {3.742292408813004*^9, 
   3.742292447857381*^9}, {3.7422968206130743`*^9, 3.742296843480155*^9}, {
   3.7422970160890417`*^9, 3.742297024417719*^9}, {3.742297074890059*^9, 
   3.74229711910509*^9}, {3.7422973083294992`*^9, 3.742297309298213*^9}, {
   3.742297354168077*^9, 3.742297359897736*^9}, {3.742297415918168*^9, 
   3.7422974232482452`*^9}, {3.742297467739311*^9, 3.742297612963316*^9}, {
   3.7422977860232887`*^9, 3.7422977903561068`*^9}, {3.74229798181938*^9, 
   3.742298023677857*^9}, {3.7422980561712513`*^9, 3.74229805925661*^9}, 
   3.742298106308654*^9, {3.742300221204397*^9, 3.742300269720365*^9}, {
   3.742300416216001*^9, 3.742300416917211*^9}, {3.742300536315893*^9, 
   3.742300546756034*^9}, {3.742300626604027*^9, 3.742300638323701*^9}, {
   3.7423006769018583`*^9, 3.7423007163572683`*^9}, {3.7435037431402884`*^9, 
   3.743503799356997*^9}, {3.7435038425347443`*^9, 3.743503908279688*^9}, {
   3.7435046316079397`*^9, 3.743504651390107*^9}, 3.745326235801956*^9, {
   3.746445867529339*^9, 3.746445934496339*^9}, {3.746446831409369*^9, 
   3.74644686385075*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"swaveccuspectra", "[", 
    RowBox[{"n_", ",", "Tscan_"}], "]"}], ":=", 
   RowBox[{"Block", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{"imvs", "=", 
        RowBox[{"ImVsreguInter", "[", "n", "]"}]}], ",", 
       RowBox[{"T", "=", 
        RowBox[{"Tscancorig", "[", 
         RowBox[{"[", "n", "]"}], "]"}]}], ",", 
       RowBox[{"mD", "=", 
        RowBox[{"mDcal", "[", 
         RowBox[{
          RowBox[{"2", "\[Pi]"}], ",", 
          RowBox[{"Tscancorig", "[", 
           RowBox[{"[", "n", "]"}], "]"}], ",", 
          RowBox[{"kfinalu", "[", 
           RowBox[{"[", "1", "]"}], "]"}], ",", 
          RowBox[{"kfinalu", "[", 
           RowBox[{"[", "2", "]"}], "]"}]}], "]"}]}], ",", 
       RowBox[{"\[Sigma]", "=", 
        RowBox[{"\[Sigma]cont", "[", 
         RowBox[{"[", "1", "]"}], "]"}]}], ",", 
       RowBox[{"\[Alpha]", "=", 
        RowBox[{"\[Alpha]cont", "[", 
         RowBox[{"[", "1", "]"}], "]"}]}], ",", 
       RowBox[{"c", "=", 
        RowBox[{"ccont", "[", 
         RowBox[{"[", "1", "]"}], "]"}]}], ",", 
       RowBox[{"M", "=", "Mc"}], ",", 
       RowBox[{"l", "=", "0"}], ",", 
       RowBox[{"\[Omega]min", "=", 
        RowBox[{"-", "1"}]}], ",", 
       RowBox[{"\[Omega]max", "=", "2"}], ",", "ccsT", ",", "inf", ",", 
       "\[Rho]table", ",", "\[Omega]", ",", "rhow", ",", "gr0", ",", "s1", 
       ",", "s01", ",", "rev", ",", "imvc", ",", "V"}], "}"}], ",", 
     "\[IndentingNewLine]", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"rev", "=", 
       RowBox[{"Interpolation", "[", 
        RowBox[{"Join", "[", 
         RowBox[{
          RowBox[{"ParallelTable", "[", 
           RowBox[{
            RowBox[{"{", 
             RowBox[{"r", ",", 
              RowBox[{"ReV", "[", 
               RowBox[{
               "r", ",", "mD", ",", "\[Alpha]", ",", "\[Sigma]", ",", "c"}], 
               "]"}]}], "}"}], ",", 
            RowBox[{"{", 
             RowBox[{"r", ",", 
              RowBox[{"1", "/", "1000"}], ",", "10", ",", 
              RowBox[{"1", "/", "100"}]}], "}"}]}], "]"}], ",", 
          RowBox[{"ParallelTable", "[", 
           RowBox[{
            RowBox[{"{", 
             RowBox[{"r", ",", 
              RowBox[{"ReV", "[", 
               RowBox[{
               "r", ",", "mD", ",", "\[Alpha]", ",", "\[Sigma]", ",", "c"}], 
               "]"}]}], "}"}], ",", 
            RowBox[{"{", 
             RowBox[{"r", ",", 
              RowBox[{"101", "/", "10"}], ",", "25", ",", 
              RowBox[{"1", "/", "10"}]}], "}"}]}], "]"}], ",", 
          RowBox[{"ParallelTable", "[", 
           RowBox[{
            RowBox[{"{", 
             RowBox[{"r", ",", 
              RowBox[{"ReV", "[", 
               RowBox[{
               "r", ",", "mD", ",", "\[Alpha]", ",", "\[Sigma]", ",", "c"}], 
               "]"}]}], "}"}], ",", 
            RowBox[{"{", 
             RowBox[{"r", ",", "26", ",", "1500", ",", "1"}], "}"}]}], "]"}], 
          ",", 
          RowBox[{"ParallelTable", "[", 
           RowBox[{
            RowBox[{"{", 
             RowBox[{"r", ",", 
              RowBox[{"ReV", "[", 
               RowBox[{
               "r", ",", "mD", ",", "\[Alpha]", ",", "\[Sigma]", ",", "c"}], 
               "]"}]}], "}"}], ",", 
            RowBox[{"{", 
             RowBox[{"r", ",", "1510", ",", "20000", ",", "1000"}], "}"}]}], 
           "]"}]}], "]"}], "]"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"imvc", "=", 
       RowBox[{"Interpolation", "[", 
        RowBox[{"Join", "[", 
         RowBox[{
          RowBox[{"ParallelTable", "[", 
           RowBox[{
            RowBox[{"{", 
             RowBox[{"r", ",", 
              RowBox[{"Re", "[", 
               RowBox[{"ImVc", "[", 
                RowBox[{"r", ",", "mD", ",", "\[Alpha]", ",", "T"}], "]"}], 
               "]"}]}], "}"}], ",", 
            RowBox[{"{", 
             RowBox[{"r", ",", 
              RowBox[{"1", "/", "1000"}], ",", "10", ",", 
              RowBox[{"1", "/", "100"}]}], "}"}]}], "]"}], ",", 
          RowBox[{"ParallelTable", "[", 
           RowBox[{
            RowBox[{"{", 
             RowBox[{"r", ",", 
              RowBox[{"Re", "[", 
               RowBox[{"ImVc", "[", 
                RowBox[{"r", ",", "mD", ",", "\[Alpha]", ",", "T"}], "]"}], 
               "]"}]}], "}"}], ",", 
            RowBox[{"{", 
             RowBox[{"r", ",", 
              RowBox[{"101", "/", "10"}], ",", "25", ",", 
              RowBox[{"1", "/", "10"}]}], "}"}]}], "]"}], ",", 
          RowBox[{"ParallelTable", "[", 
           RowBox[{
            RowBox[{"{", 
             RowBox[{"r", ",", 
              RowBox[{"Re", "[", 
               RowBox[{"ImVc", "[", 
                RowBox[{"r", ",", "mD", ",", "\[Alpha]", ",", "T"}], "]"}], 
               "]"}]}], "}"}], ",", 
            RowBox[{"{", 
             RowBox[{"r", ",", "26", ",", "1500", ",", "1"}], "}"}]}], "]"}], 
          ",", 
          RowBox[{"ParallelTable", "[", 
           RowBox[{
            RowBox[{"{", 
             RowBox[{"r", ",", 
              RowBox[{"Re", "[", 
               RowBox[{"ImVc", "[", 
                RowBox[{"r", ",", "mD", ",", "\[Alpha]", ",", "T"}], "]"}], 
               "]"}]}], "}"}], ",", 
            RowBox[{"{", 
             RowBox[{"r", ",", "1510", ",", "20000", ",", "1000"}], "}"}]}], 
           "]"}]}], "]"}], "]"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"V", "[", "x_", "]"}], ":=", 
       RowBox[{
        RowBox[{"rev", "[", "x", "]"}], "+", 
        RowBox[{"\[ImaginaryI]", " ", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{"imvc", "[", "x", "]"}], "+", 
           RowBox[{"imvs", "[", "x", "]"}]}], ")"}]}]}]}], ";", 
      "\[IndentingNewLine]", "\[IndentingNewLine]", 
      RowBox[{"\[Rho]table", "=", 
       RowBox[{
        RowBox[{
         RowBox[{
          RowBox[{"ParallelDo", "[", 
           RowBox[{
            RowBox[{
             RowBox[{"\[Omega]", "=", 
              RowBox[{"\[Omega]min", "+", 
               RowBox[{
                RowBox[{"(", 
                 RowBox[{"it", "-", "1"}], ")"}], " ", "d\[Omega]", " ", 
                "M"}]}]}], ";", 
             RowBox[{"inf", "=", 
              RowBox[{"40", "+", 
               RowBox[{"500", "*", "it", "*", "d\[Omega]"}]}]}], ";", 
             "\[IndentingNewLine]", 
             RowBox[{"(*", 
              RowBox[{
               RowBox[{"s0", "=", 
                RowBox[{"NDSolve", "[", 
                 RowBox[{
                  RowBox[{"{", 
                   RowBox[{
                    RowBox[{
                    RowBox[{
                    RowBox[{
                    RowBox[{"(", 
                    RowBox[{"\[Omega]", "-", 
                    FractionBox[
                    RowBox[{"l", 
                    RowBox[{"(", 
                    RowBox[{"l", "+", "1"}], ")"}]}], 
                    RowBox[{"M", " ", 
                    SuperscriptBox["r", "2"]}]], "-", 
                    RowBox[{"Re", "[", 
                    RowBox[{"V", "[", "r", "]"}], "]"}], "+", 
                    RowBox[{"\[ImaginaryI]", " ", 
                    RowBox[{"Abs", "[", 
                    RowBox[{"Im", "[", 
                    RowBox[{"V", "[", "r", "]"}], "]"}], "]"}]}]}], ")"}], 
                    RowBox[{"gr", "[", "r", "]"}]}], "+", 
                    RowBox[{
                    FractionBox["1", "M"], 
                    RowBox[{
                    RowBox[{"gr", "''"}], "[", "r", "]"}]}]}], "\[Equal]", 
                    "0"}], ",", " ", "\[IndentingNewLine]", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"gr", "'"}], "[", "\[Delta]", "]"}], "\[Equal]", 
                    RowBox[{
                    RowBox[{"2", " ", "\[Delta]", 
                    SuperscriptBox[
                    RowBox[{"(", 
                    RowBox[{"\[Alpha]", " ", "M"}], ")"}], "2"]}], "-", 
                    RowBox[{
                    FractionBox["3", "4"], 
                    SuperscriptBox["\[Delta]", "2"], 
                    SuperscriptBox[
                    RowBox[{"(", 
                    RowBox[{"M", " ", "\[Alpha]"}], ")"}], "3"]}]}]}], ",", 
                    "\[IndentingNewLine]", " ", 
                    RowBox[{
                    RowBox[{"gr", "[", "\[Delta]", "]"}], "==", " ", 
                    RowBox[{
                    RowBox[{
                    SuperscriptBox["\[Delta]", "2"], 
                    SuperscriptBox[
                    RowBox[{"(", 
                    RowBox[{"\[Alpha]", " ", "M"}], ")"}], "2"]}], "-", 
                    RowBox[{
                    FractionBox["1", "4"], 
                    SuperscriptBox["\[Delta]", "3"], 
                    SuperscriptBox[
                    RowBox[{"(", 
                    RowBox[{"M", " ", "\[Alpha]"}], ")"}], "3"]}]}]}]}], 
                   "}"}], ",", "gr", ",", 
                  RowBox[{"{", 
                   RowBox[{"r", ",", "\[Delta]", ",", "inf"}], "}"}], ",", 
                  RowBox[{"PrecisionGoal", "\[Rule]", "10"}], ",", 
                  RowBox[{"MaxSteps", "\[Rule]", "1000000"}]}], "]"}]}], ";", 
               "\[IndentingNewLine]", 
               RowBox[{
                RowBox[{"gr1", "[", "r_", "]"}], "=", 
                SubscriptBox[
                 RowBox[{"(", 
                  RowBox[{
                   RowBox[{"gr", "[", "r", "]"}], "/.", "s0"}], ")"}], 
                 RowBox[{
                 "\[LeftDoubleBracket]", "1", "\[RightDoubleBracket]"}]]}], 
               ";"}], "*)"}], "\[IndentingNewLine]", 
             RowBox[{"s01", "=", 
              RowBox[{"NDSolve", "[", 
               RowBox[{
                RowBox[{"{", 
                 RowBox[{
                  RowBox[{
                   RowBox[{
                    RowBox[{
                    RowBox[{"(", 
                    RowBox[{"\[Omega]", "-", 
                    FractionBox[
                    RowBox[{"l", 
                    RowBox[{"(", 
                    RowBox[{"l", "+", "1"}], ")"}]}], 
                    RowBox[{"M", " ", 
                    SuperscriptBox["r", "2"]}]], "-", 
                    RowBox[{"Re", "[", 
                    RowBox[{"V", "[", "r", "]"}], "]"}], "+", 
                    RowBox[{"\[ImaginaryI]", " ", 
                    RowBox[{"Abs", "[", 
                    RowBox[{"Im", "[", 
                    RowBox[{"V", "[", "r", "]"}], "]"}], "]"}]}]}], ")"}], 
                    RowBox[{"gr", "[", "r", "]"}]}], "+", 
                    RowBox[{
                    FractionBox["1", "M"], 
                    RowBox[{
                    RowBox[{"gr", "''"}], "[", "r", "]"}]}]}], "\[Equal]", 
                   "0"}], ",", " ", "\[IndentingNewLine]", 
                  RowBox[{
                   RowBox[{
                    RowBox[{"gr", "'"}], "[", "\[Delta]", "]"}], "\[Equal]", 
                   RowBox[{
                    RowBox[{"(", 
                    RowBox[{"\[Alpha]", " ", "M"}], ")"}], "-", 
                    RowBox[{"\[Delta]", 
                    SuperscriptBox[
                    RowBox[{"(", 
                    RowBox[{"M", " ", "\[Alpha]"}], ")"}], "2"]}]}]}], ",", 
                  "\[IndentingNewLine]", " ", 
                  RowBox[{
                   RowBox[{"gr", "[", "\[Delta]", "]"}], "\[Equal]", 
                   RowBox[{
                    RowBox[{"\[Delta]", 
                    RowBox[{"(", 
                    RowBox[{"\[Alpha]", " ", "M"}], ")"}]}], "-", " ", 
                    RowBox[{
                    FractionBox["1", "2"], 
                    SuperscriptBox["\[Delta]", "2"], 
                    SuperscriptBox[
                    RowBox[{"(", 
                    RowBox[{"\[Alpha]", " ", "M"}], ")"}], "2"]}]}]}]}], 
                 "}"}], ",", "gr", ",", 
                RowBox[{"{", 
                 RowBox[{"r", ",", "\[Delta]", ",", "inf"}], "}"}]}], "]"}]}],
              ";", "\[IndentingNewLine]", 
             RowBox[{
              RowBox[{"gr0", "[", "r_", "]"}], "=", 
              SubscriptBox[
               RowBox[{"(", 
                RowBox[{
                 RowBox[{"gr", "[", "r", "]"}], "/.", "s01"}], ")"}], 
               RowBox[{
               "\[LeftDoubleBracket]", "1", "\[RightDoubleBracket]"}]]}], ";",
              "\[IndentingNewLine]", 
             RowBox[{"s1", "=", 
              RowBox[{"NDSolve", "[", 
               RowBox[{
                RowBox[{"{", 
                 RowBox[{
                  RowBox[{
                   RowBox[{
                    RowBox[{"rho", "'"}], "[", "x", "]"}], "\[Equal]", 
                   RowBox[{
                    RowBox[{"-", 
                    FractionBox[
                    RowBox[{" ", 
                    RowBox[{"6", " ", "Nc", " ", 
                    SuperscriptBox["M", "2"], " ", "\[Alpha]"}]}], 
                    RowBox[{"4", "\[Pi]"}]]}], 
                    RowBox[{"Im", "[", 
                    FractionBox["1", 
                    SuperscriptBox[
                    RowBox[{"(", 
                    RowBox[{"gr0", "[", "x", "]"}], ")"}], "2"]], 
                    RowBox[{"(*", 
                    RowBox[{"+", 
                    FractionBox["36", 
                    SuperscriptBox[
                    RowBox[{"(", 
                    RowBox[{"gr1", "[", "x", "]"}], ")"}], "2"]]}], "*)"}], 
                    "]"}]}]}], ",", 
                  RowBox[{
                   RowBox[{"rho", "[", "\[Delta]", "]"}], "\[Equal]", "0"}]}],
                  "}"}], ",", "rho", ",", 
                RowBox[{"{", 
                 RowBox[{"x", ",", "\[Delta]", ",", "inf"}], "}"}]}], "]"}]}],
              ";", "\[IndentingNewLine]", 
             RowBox[{
              RowBox[{"rhow", "[", "r_", "]"}], "=", 
              SubscriptBox[
               RowBox[{"(", 
                RowBox[{
                 RowBox[{"rho", "[", "r", "]"}], "/.", "s1"}], ")"}], 
               RowBox[{
               "\[LeftDoubleBracket]", "1", "\[RightDoubleBracket]"}]]}], ";",
              "\[IndentingNewLine]", 
             RowBox[{"ParallelSow", "[", 
              RowBox[{"{", 
               RowBox[{
                RowBox[{"\[Omega]", "+", 
                 RowBox[{"2", "M"}]}], ",", 
                RowBox[{"rhow", "[", "inf", "]"}]}], "}"}], "]"}]}], ",", 
            RowBox[{"{", 
             RowBox[{"it", ",", "1", ",", 
              FractionBox[
               RowBox[{"\[Omega]max", "-", "\[Omega]min"}], 
               RowBox[{"d\[Omega]", " ", "M"}]]}], "}"}]}], "]"}], "//", 
          "Reap"}], "//", "Last"}], "//", "First"}]}], ";", 
      "\[IndentingNewLine]", "\[IndentingNewLine]", 
      RowBox[{"ccsT", "=", 
       RowBox[{"ParallelTable", "[", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{
           RowBox[{"\[Rho]table", "[", 
            RowBox[{"[", 
             RowBox[{"i", ",", "1"}], "]"}], "]"}], ",", 
           FractionBox[
            RowBox[{"-", 
             RowBox[{"\[Rho]table", "[", 
              RowBox[{"[", 
               RowBox[{"i", ",", "2"}], "]"}], "]"}]}], 
            SuperscriptBox[
             RowBox[{"\[Rho]table", "[", 
              RowBox[{"[", 
               RowBox[{"i", ",", "1"}], "]"}], "]"}], "2"]]}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"i", ",", "1", ",", 
           RowBox[{"Length", "[", "\[Rho]table", "]"}]}], "}"}]}], "]"}]}], 
      ";", "\[IndentingNewLine]", 
      RowBox[{"Export", "[", 
       RowBox[{
        RowBox[{"\"\<spectraldata/Tscan/cc/swccT\>\"", "<>", 
         RowBox[{"ToString", "[", 
          RowBox[{"Round", "[", 
           RowBox[{"T", "*", "1000"}], "]"}], "]"}], "<>", 
         "\"\<uspectra.dat\>\""}], ",", 
        RowBox[{"Sort", "[", "ccsT", "]"}]}], "]"}], ";"}]}], 
    "\[IndentingNewLine]", "]"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.724397604460712*^9, 3.724397621092863*^9}, {
   3.724398705481254*^9, 3.724398705798315*^9}, {3.72440624506767*^9, 
   3.7244062457361317`*^9}, {3.7244423136168756`*^9, 3.724442340980721*^9}, {
   3.7244423712224417`*^9, 3.724442377050403*^9}, {3.724442465925974*^9, 
   3.724442518695669*^9}, {3.7244426255599117`*^9, 3.724442639076613*^9}, {
   3.724443729204352*^9, 3.724443729749022*^9}, {3.724443881656342*^9, 
   3.7244438842850027`*^9}, 3.725261621115453*^9, 3.72526166634648*^9, {
   3.725271550289123*^9, 3.7252715504130163`*^9}, {3.725271609402791*^9, 
   3.7252716095188437`*^9}, {3.7252717762497*^9, 3.725271782362536*^9}, {
   3.725271824500347*^9, 3.725271826035269*^9}, {3.725271857701564*^9, 
   3.725271858192912*^9}, {3.725271928114049*^9, 3.7252719496618757`*^9}, {
   3.725271981807578*^9, 3.725271987122878*^9}, {3.725273718896678*^9, 
   3.72527377251343*^9}, {3.725273963159111*^9, 3.725273966198284*^9}, {
   3.725364382855975*^9, 3.725364384697238*^9}, {3.725364432753635*^9, 
   3.725364433681274*^9}, {3.725364595553596*^9, 3.725364595868292*^9}, {
   3.725364661141473*^9, 3.725364661301785*^9}, {3.725365068510941*^9, 
   3.7253650691073112`*^9}, {3.7256202924505177`*^9, 
   3.7256202938854313`*^9}, {3.7256265502253428`*^9, 3.725626559021003*^9}, {
   3.725798091627001*^9, 3.725798108963685*^9}, {3.725798150844287*^9, 
   3.725798156038417*^9}, {3.726312422974263*^9, 3.726312439922279*^9}, {
   3.726313778060986*^9, 3.726313794010726*^9}, {3.726313854887352*^9, 
   3.726313855417986*^9}, {3.726377533478507*^9, 3.726377535012369*^9}, {
   3.726379310729051*^9, 3.726379315935656*^9}, {3.726379351066524*^9, 
   3.7263793563685627`*^9}, 3.7263814533362722`*^9, {3.726468979312665*^9, 
   3.726469044993416*^9}, {3.726564279540083*^9, 3.726564288774165*^9}, {
   3.726564330005303*^9, 3.726564342424973*^9}, {3.7265645007454853`*^9, 
   3.7265645054085903`*^9}, 3.726565145221386*^9, {3.726836923420138*^9, 
   3.726836925204391*^9}, {3.7268417497448387`*^9, 3.726841749854889*^9}, {
   3.727357927216405*^9, 3.7273579306359463`*^9}, 3.72735811608375*^9, {
   3.7273582875862513`*^9, 3.727358296888235*^9}, {3.727520051444908*^9, 
   3.7275200665503483`*^9}, {3.727539483513708*^9, 3.72753949210455*^9}, {
   3.7275398377710333`*^9, 3.727539869000495*^9}, {3.7275879806550293`*^9, 
   3.727587984698921*^9}, {3.727606150288821*^9, 3.727606150994812*^9}, {
   3.728932814314426*^9, 3.728932860160056*^9}, 3.7289333254815903`*^9, 
   3.7299208725344887`*^9, {3.730007040539275*^9, 3.7300070509717903`*^9}, {
   3.730007357183831*^9, 3.7300073662633142`*^9}, {3.7331192829046183`*^9, 
   3.733119300197537*^9}, {3.733120717385792*^9, 3.733120717697629*^9}, {
   3.7331222711038847`*^9, 3.733122272703622*^9}, {3.733211538849382*^9, 
   3.7332115515038567`*^9}, {3.7332289443370447`*^9, 
   3.7332289447842827`*^9}, {3.742215948846467*^9, 3.742215959437643*^9}, {
   3.742216025305929*^9, 3.742216093257207*^9}, {3.7422172078868933`*^9, 
   3.7422172275906973`*^9}, 3.74221727383118*^9, {3.742217585069265*^9, 
   3.742217591716959*^9}, {3.7422176229823923`*^9, 3.742217653035615*^9}, {
   3.742269341112874*^9, 3.742269371527761*^9}, 3.742275694936644*^9, {
   3.742289467062118*^9, 3.742289486771803*^9}, {3.742289520463562*^9, 
   3.7422896027136*^9}, {3.7422896364561243`*^9, 3.74228964347093*^9}, {
   3.742289678232355*^9, 3.742289708137301*^9}, {3.7422897506101*^9, 
   3.7422897587096577`*^9}, {3.7422920316457787`*^9, 3.742292034487727*^9}, 
   3.742292186682322*^9, {3.742292303240778*^9, 3.742292303483521*^9}, {
   3.742292362481593*^9, 3.742292372544711*^9}, {3.742292408813004*^9, 
   3.742292447857381*^9}, {3.7422968206130743`*^9, 3.742296843480155*^9}, {
   3.7422970160890417`*^9, 3.742297024417719*^9}, {3.742297074890059*^9, 
   3.74229711910509*^9}, {3.7422973083294992`*^9, 3.742297309298213*^9}, {
   3.742297354168077*^9, 3.742297359897736*^9}, {3.742297415918168*^9, 
   3.7422974232482452`*^9}, {3.742297467739311*^9, 3.742297612963316*^9}, {
   3.7422977860232887`*^9, 3.7422977903561068`*^9}, {3.74229798181938*^9, 
   3.742298023677857*^9}, {3.7422980561712513`*^9, 3.74229805925661*^9}, 
   3.742298106308654*^9, {3.742300221204397*^9, 3.742300269720365*^9}, {
   3.742300416216001*^9, 3.742300416917211*^9}, {3.742300536315893*^9, 
   3.742300546756034*^9}, {3.742300626604027*^9, 3.742300638323701*^9}, {
   3.7423006769018583`*^9, 3.7423007163572683`*^9}, {3.7435037431402884`*^9, 
   3.743503799356997*^9}, {3.7435038425347443`*^9, 3.743503908279688*^9}, {
   3.7435046316079397`*^9, 3.743504651390107*^9}, 3.745326235801956*^9, {
   3.746445867529339*^9, 3.746445934496339*^9}, {3.746446868776374*^9, 
   3.7464468750746107`*^9}, 3.746508296551453*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell["Charmonium p - wave", "Subsubsection",
 CellChangeTimes->{{3.742291861612499*^9, 3.742291867360454*^9}, 
   3.742291901323778*^9, {3.7435061781726627`*^9, 3.7435061783084917`*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"pwaveccspectra", "[", 
    RowBox[{"n_", ",", "Tscan_"}], "]"}], ":=", 
   RowBox[{"Block", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{"T", "=", 
        RowBox[{"Tscan", "[", 
         RowBox[{"[", "n", "]"}], "]"}]}], ",", 
       RowBox[{"mD", "=", 
        RowBox[{"mDcal", "[", 
         RowBox[{
          RowBox[{"2", "\[Pi]"}], ",", 
          RowBox[{"Tscan", "[", 
           RowBox[{"[", "n", "]"}], "]"}], ",", 
          RowBox[{"kfinal", "[", 
           RowBox[{"[", "1", "]"}], "]"}], ",", 
          RowBox[{"kfinal", "[", 
           RowBox[{"[", "2", "]"}], "]"}]}], "]"}]}], ",", 
       RowBox[{"\[Sigma]", "=", 
        RowBox[{"\[Sigma]cont", "[", 
         RowBox[{"[", "1", "]"}], "]"}]}], ",", 
       RowBox[{"\[Alpha]", "=", 
        RowBox[{"\[Alpha]cont", "[", 
         RowBox[{"[", "1", "]"}], "]"}]}], ",", 
       RowBox[{"c", "=", 
        RowBox[{"ccont", "[", 
         RowBox[{"[", "1", "]"}], "]"}]}], ",", 
       RowBox[{"M", "=", "Mc"}], ",", 
       RowBox[{"l", "=", "1"}], ",", 
       RowBox[{"\[Omega]min", "=", 
        RowBox[{"-", "1"}]}], ",", 
       RowBox[{"\[Omega]max", "=", "2"}], ",", "ccsT", ",", "Tstring", ",", 
       "inf"}], "}"}], ",", "\[IndentingNewLine]", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"rev", "=", 
       RowBox[{"Interpolation", "[", 
        RowBox[{"Join", "[", 
         RowBox[{
          RowBox[{"ParallelTable", "[", 
           RowBox[{
            RowBox[{"{", 
             RowBox[{"r", ",", 
              RowBox[{"ReVsb", "[", 
               RowBox[{
               "r", ",", "mD", ",", "\[Alpha]", ",", "\[Sigma]", ",", "c"}], 
               "]"}]}], "}"}], ",", 
            RowBox[{"{", 
             RowBox[{"r", ",", 
              RowBox[{"1", "/", "1000"}], ",", "10", ",", 
              RowBox[{"1", "/", "100"}]}], "}"}]}], "]"}], ",", 
          RowBox[{"ParallelTable", "[", 
           RowBox[{
            RowBox[{"{", 
             RowBox[{"r", ",", 
              RowBox[{"ReVsb", "[", 
               RowBox[{
               "r", ",", "mD", ",", "\[Alpha]", ",", "\[Sigma]", ",", "c"}], 
               "]"}]}], "}"}], ",", 
            RowBox[{"{", 
             RowBox[{"r", ",", 
              RowBox[{"101", "/", "10"}], ",", "25", ",", 
              RowBox[{"1", "/", "10"}]}], "}"}]}], "]"}], ",", 
          RowBox[{"ParallelTable", "[", 
           RowBox[{
            RowBox[{"{", 
             RowBox[{"r", ",", 
              RowBox[{"ReVsb", "[", 
               RowBox[{
               "r", ",", "mD", ",", "\[Alpha]", ",", "\[Sigma]", ",", "c"}], 
               "]"}]}], "}"}], ",", 
            RowBox[{"{", 
             RowBox[{"r", ",", "26", ",", "1500", ",", "1"}], "}"}]}], "]"}], 
          ",", 
          RowBox[{"ParallelTable", "[", 
           RowBox[{
            RowBox[{"{", 
             RowBox[{"r", ",", 
              RowBox[{"ReVsb", "[", 
               RowBox[{
               "r", ",", "mD", ",", "\[Alpha]", ",", "\[Sigma]", ",", "c"}], 
               "]"}]}], "}"}], ",", 
            RowBox[{"{", 
             RowBox[{"r", ",", "1510", ",", "20000", ",", "1000"}], "}"}]}], 
           "]"}]}], "]"}], "]"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"imv", "=", 
       RowBox[{"Interpolation", "[", 
        RowBox[{"Join", "[", 
         RowBox[{
          RowBox[{"ParallelTable", "[", 
           RowBox[{
            RowBox[{"{", 
             RowBox[{"r", ",", 
              RowBox[{"ImVsb", "[", 
               RowBox[{
               "r", ",", "mD", ",", "\[Alpha]", ",", "\[Sigma]", ",", "T"}], 
               "]"}]}], "}"}], ",", 
            RowBox[{"{", 
             RowBox[{"r", ",", 
              RowBox[{"1", "/", "1000"}], ",", "10", ",", 
              RowBox[{"1", "/", "100"}]}], "}"}]}], "]"}], ",", 
          RowBox[{"ParallelTable", "[", 
           RowBox[{
            RowBox[{"{", 
             RowBox[{"r", ",", 
              RowBox[{"ImVsb", "[", 
               RowBox[{
               "r", ",", "mD", ",", "\[Alpha]", ",", "\[Sigma]", ",", "T"}], 
               "]"}]}], "}"}], ",", 
            RowBox[{"{", 
             RowBox[{"r", ",", 
              RowBox[{"101", "/", "10"}], ",", "25", ",", 
              RowBox[{"1", "/", "10"}]}], "}"}]}], "]"}], ",", 
          RowBox[{"ParallelTable", "[", 
           RowBox[{
            RowBox[{"{", 
             RowBox[{"r", ",", 
              RowBox[{"ImVsb", "[", 
               RowBox[{
               "r", ",", "mD", ",", "\[Alpha]", ",", "\[Sigma]", ",", "T"}], 
               "]"}]}], "}"}], ",", 
            RowBox[{"{", 
             RowBox[{"r", ",", "26", ",", "1500", ",", "1"}], "}"}]}], "]"}], 
          ",", 
          RowBox[{"ParallelTable", "[", 
           RowBox[{
            RowBox[{"{", 
             RowBox[{"r", ",", 
              RowBox[{"ImVsb", "[", 
               RowBox[{
               "r", ",", "mD", ",", "\[Alpha]", ",", "\[Sigma]", ",", "T"}], 
               "]"}]}], "}"}], ",", 
            RowBox[{"{", 
             RowBox[{"r", ",", "1510", ",", "20000", ",", "1000"}], "}"}]}], 
           "]"}]}], "]"}], "]"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"V", "[", "x_", "]"}], ":=", 
       RowBox[{
        RowBox[{"rev", "[", "x", "]"}], "+", 
        RowBox[{"\[ImaginaryI]", " ", 
         RowBox[{"imv", "[", "x", "]"}]}]}]}], ";", "\[IndentingNewLine]", 
      "\[IndentingNewLine]", 
      RowBox[{"\[Rho]table", "=", 
       RowBox[{
        RowBox[{
         RowBox[{
          RowBox[{"ParallelDo", "[", 
           RowBox[{
            RowBox[{
             RowBox[{"\[Omega]", "=", 
              RowBox[{"\[Omega]min", "+", 
               RowBox[{
                RowBox[{"(", 
                 RowBox[{"it", "-", "1"}], ")"}], " ", "d\[Omega]", " ", 
                "M"}]}]}], ";", 
             RowBox[{"inf", "=", 
              RowBox[{"40", "+", 
               RowBox[{"500", "*", "it", "*", "d\[Omega]"}]}]}], ";", 
             "\[IndentingNewLine]", 
             RowBox[{"s0", "=", 
              RowBox[{"NDSolve", "[", 
               RowBox[{
                RowBox[{"{", 
                 RowBox[{
                  RowBox[{
                   RowBox[{
                    RowBox[{
                    RowBox[{"(", 
                    RowBox[{"\[Omega]", "-", 
                    FractionBox[
                    RowBox[{"l", 
                    RowBox[{"(", 
                    RowBox[{"l", "+", "1"}], ")"}]}], 
                    RowBox[{"M", " ", 
                    SuperscriptBox["r", "2"]}]], "-", 
                    RowBox[{"Re", "[", 
                    RowBox[{"V", "[", "r", "]"}], "]"}], "+", 
                    RowBox[{"\[ImaginaryI]", " ", 
                    RowBox[{"Abs", "[", 
                    RowBox[{"Im", "[", 
                    RowBox[{"V", "[", "r", "]"}], "]"}], "]"}]}]}], ")"}], 
                    RowBox[{"gr", "[", "r", "]"}]}], "+", 
                    RowBox[{
                    FractionBox["1", "M"], 
                    RowBox[{
                    RowBox[{"gr", "''"}], "[", "r", "]"}]}]}], "\[Equal]", 
                   "0"}], ",", " ", "\[IndentingNewLine]", 
                  RowBox[{
                   RowBox[{
                    RowBox[{"gr", "'"}], "[", "\[Delta]", "]"}], "\[Equal]", 
                   RowBox[{
                    RowBox[{"2", " ", "\[Delta]", 
                    SuperscriptBox[
                    RowBox[{"(", 
                    RowBox[{"\[Alpha]", " ", "M"}], ")"}], "2"]}], "-", 
                    RowBox[{
                    FractionBox["3", "4"], 
                    SuperscriptBox["\[Delta]", "2"], 
                    SuperscriptBox[
                    RowBox[{"(", 
                    RowBox[{"M", " ", "\[Alpha]"}], ")"}], "3"]}]}]}], ",", 
                  "\[IndentingNewLine]", " ", 
                  RowBox[{
                   RowBox[{"gr", "[", "\[Delta]", "]"}], "==", " ", 
                   RowBox[{
                    RowBox[{
                    SuperscriptBox["\[Delta]", "2"], 
                    SuperscriptBox[
                    RowBox[{"(", 
                    RowBox[{"\[Alpha]", " ", "M"}], ")"}], "2"]}], "-", 
                    RowBox[{
                    FractionBox["1", "4"], 
                    SuperscriptBox["\[Delta]", "3"], 
                    SuperscriptBox[
                    RowBox[{"(", 
                    RowBox[{"M", " ", "\[Alpha]"}], ")"}], "3"]}]}]}]}], 
                 "}"}], ",", "gr", ",", 
                RowBox[{"{", 
                 RowBox[{"r", ",", "\[Delta]", ",", "inf"}], "}"}], ",", 
                RowBox[{"PrecisionGoal", "\[Rule]", "10"}], ",", 
                RowBox[{"MaxSteps", "\[Rule]", "1000000"}]}], "]"}]}], ";", 
             "\[IndentingNewLine]", 
             RowBox[{
              RowBox[{"gr1", "[", "r_", "]"}], "=", 
              SubscriptBox[
               RowBox[{"(", 
                RowBox[{
                 RowBox[{"gr", "[", "r", "]"}], "/.", "s0"}], ")"}], 
               RowBox[{
               "\[LeftDoubleBracket]", "1", "\[RightDoubleBracket]"}]]}], ";",
              "\[IndentingNewLine]", 
             RowBox[{"s01", "=", 
              RowBox[{"NDSolve", "[", 
               RowBox[{
                RowBox[{"{", 
                 RowBox[{
                  RowBox[{
                   RowBox[{
                    RowBox[{
                    RowBox[{"(", 
                    RowBox[{"\[Omega]", "-", 
                    FractionBox[
                    RowBox[{"l", 
                    RowBox[{"(", 
                    RowBox[{"l", "+", "1"}], ")"}]}], 
                    RowBox[{"M", " ", 
                    SuperscriptBox["r", "2"]}]], "-", 
                    RowBox[{"Re", "[", 
                    RowBox[{"V", "[", "r", "]"}], "]"}], "+", 
                    RowBox[{"\[ImaginaryI]", " ", 
                    RowBox[{"Abs", "[", 
                    RowBox[{"Im", "[", 
                    RowBox[{"V", "[", "r", "]"}], "]"}], "]"}]}]}], ")"}], 
                    RowBox[{"gr", "[", "r", "]"}]}], "+", 
                    RowBox[{
                    FractionBox["1", "M"], 
                    RowBox[{
                    RowBox[{"gr", "''"}], "[", "r", "]"}]}]}], "\[Equal]", 
                   "0"}], ",", " ", "\[IndentingNewLine]", 
                  RowBox[{
                   RowBox[{
                    RowBox[{"gr", "'"}], "[", "\[Delta]", "]"}], "\[Equal]", 
                   RowBox[{
                    RowBox[{"(", 
                    RowBox[{"\[Alpha]", " ", "M"}], ")"}], "-", 
                    RowBox[{"\[Delta]", 
                    SuperscriptBox[
                    RowBox[{"(", 
                    RowBox[{"M", " ", "\[Alpha]"}], ")"}], "2"]}]}]}], ",", 
                  "\[IndentingNewLine]", " ", 
                  RowBox[{
                   RowBox[{"gr", "[", "\[Delta]", "]"}], "\[Equal]", 
                   RowBox[{
                    RowBox[{"\[Delta]", 
                    RowBox[{"(", 
                    RowBox[{"\[Alpha]", " ", "M"}], ")"}]}], "-", " ", 
                    RowBox[{
                    FractionBox["1", "2"], 
                    SuperscriptBox["\[Delta]", "2"], 
                    SuperscriptBox[
                    RowBox[{"(", 
                    RowBox[{"\[Alpha]", " ", "M"}], ")"}], "2"]}]}]}]}], 
                 "}"}], ",", "gr", ",", 
                RowBox[{"{", 
                 RowBox[{"r", ",", "\[Delta]", ",", "inf"}], "}"}]}], "]"}]}],
              ";", "\[IndentingNewLine]", 
             RowBox[{
              RowBox[{"gr0", "[", "r_", "]"}], "=", 
              SubscriptBox[
               RowBox[{"(", 
                RowBox[{
                 RowBox[{"gr", "[", "r", "]"}], "/.", "s01"}], ")"}], 
               RowBox[{
               "\[LeftDoubleBracket]", "1", "\[RightDoubleBracket]"}]]}], ";",
              "\[IndentingNewLine]", 
             RowBox[{"s1", "=", 
              RowBox[{"NDSolve", "[", 
               RowBox[{
                RowBox[{"{", 
                 RowBox[{
                  RowBox[{
                   RowBox[{
                    RowBox[{"rho", "'"}], "[", "x", "]"}], "\[Equal]", 
                   RowBox[{
                    FractionBox[
                    RowBox[{" ", 
                    RowBox[{"Nc", " ", 
                    SuperscriptBox["M", "2"], " ", 
                    SuperscriptBox["\[Alpha]", "3"]}]}], 
                    RowBox[{"8", "\[Pi]"}]], 
                    RowBox[{"Im", "[", 
                    RowBox[{
                    FractionBox["1", 
                    SuperscriptBox[
                    RowBox[{"(", 
                    RowBox[{"gr0", "[", "x", "]"}], ")"}], "2"]], "+", 
                    FractionBox["36", 
                    SuperscriptBox[
                    RowBox[{"(", 
                    RowBox[{"gr1", "[", "x", "]"}], ")"}], "2"]]}], "]"}]}]}],
                   ",", 
                  RowBox[{
                   RowBox[{"rho", "[", "\[Delta]", "]"}], "\[Equal]", "0"}]}],
                  "}"}], ",", "rho", ",", 
                RowBox[{"{", 
                 RowBox[{"x", ",", "\[Delta]", ",", "inf"}], "}"}]}], "]"}]}],
              ";", "\[IndentingNewLine]", 
             RowBox[{
              RowBox[{"rhow", "[", "r_", "]"}], "=", 
              SubscriptBox[
               RowBox[{"(", 
                RowBox[{
                 RowBox[{"rho", "[", "r", "]"}], "/.", "s1"}], ")"}], 
               RowBox[{
               "\[LeftDoubleBracket]", "1", "\[RightDoubleBracket]"}]]}], ";",
              "\[IndentingNewLine]", 
             RowBox[{"ParallelSow", "[", 
              RowBox[{"{", 
               RowBox[{
                RowBox[{"\[Omega]", "+", 
                 RowBox[{"2", "M"}]}], ",", 
                RowBox[{"rhow", "[", "inf", "]"}]}], "}"}], "]"}]}], ",", 
            RowBox[{"{", 
             RowBox[{"it", ",", "1", ",", 
              FractionBox[
               RowBox[{"\[Omega]max", "-", "\[Omega]min"}], 
               RowBox[{"d\[Omega]", " ", "M"}]]}], "}"}]}], "]"}], "//", 
          "Reap"}], "//", "Last"}], "//", "First"}]}], ";", 
      "\[IndentingNewLine]", "\[IndentingNewLine]", 
      RowBox[{"ccsT", "=", 
       RowBox[{"ParallelTable", "[", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{
           RowBox[{"\[Rho]table", "[", 
            RowBox[{"[", 
             RowBox[{"i", ",", "1"}], "]"}], "]"}], ",", 
           FractionBox[
            RowBox[{"\[Rho]table", "[", 
             RowBox[{"[", 
              RowBox[{"i", ",", "2"}], "]"}], "]"}], 
            SuperscriptBox[
             RowBox[{"\[Rho]table", "[", 
              RowBox[{"[", 
               RowBox[{"i", ",", "1"}], "]"}], "]"}], "2"]]}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"i", ",", "1", ",", 
           RowBox[{"Length", "[", "\[Rho]table", "]"}]}], "}"}]}], "]"}]}], 
      ";", "\[IndentingNewLine]", 
      RowBox[{"Tstring", "=", 
       RowBox[{"Round", "[", 
        RowBox[{"T", "*", "1000"}], "]"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"Export", "[", 
       RowBox[{
        RowBox[{"\"\<spectraldata/Tscan/cc/pwccT\>\"", "<>", 
         RowBox[{"ToString", "[", "Tstring", "]"}], "<>", 
         "\"\<spectra.dat\>\""}], ",", 
        RowBox[{"Sort", "[", "ccsT", "]"}]}], "]"}], ";"}]}], 
    "\[IndentingNewLine]", "]"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.724397604460712*^9, 3.724397621092863*^9}, {
   3.724398705481254*^9, 3.724398705798315*^9}, {3.72440624506767*^9, 
   3.7244062457361317`*^9}, {3.7244423136168756`*^9, 3.724442340980721*^9}, {
   3.7244423712224417`*^9, 3.724442377050403*^9}, {3.724442465925974*^9, 
   3.724442518695669*^9}, {3.7244426255599117`*^9, 3.724442639076613*^9}, {
   3.724443729204352*^9, 3.724443729749022*^9}, {3.724443881656342*^9, 
   3.7244438842850027`*^9}, 3.725261621115453*^9, 3.72526166634648*^9, {
   3.725271550289123*^9, 3.7252715504130163`*^9}, {3.725271609402791*^9, 
   3.7252716095188437`*^9}, {3.7252717762497*^9, 3.725271782362536*^9}, {
   3.725271824500347*^9, 3.725271826035269*^9}, {3.725271857701564*^9, 
   3.725271858192912*^9}, {3.725271928114049*^9, 3.7252719496618757`*^9}, {
   3.725271981807578*^9, 3.725271987122878*^9}, {3.725273718896678*^9, 
   3.72527377251343*^9}, {3.725273963159111*^9, 3.725273966198284*^9}, {
   3.725364382855975*^9, 3.725364384697238*^9}, {3.725364432753635*^9, 
   3.725364433681274*^9}, {3.725364595553596*^9, 3.725364595868292*^9}, {
   3.725364661141473*^9, 3.725364661301785*^9}, {3.725365068510941*^9, 
   3.7253650691073112`*^9}, {3.7256202924505177`*^9, 
   3.7256202938854313`*^9}, {3.7256265502253428`*^9, 3.725626559021003*^9}, {
   3.725798091627001*^9, 3.725798108963685*^9}, {3.725798150844287*^9, 
   3.725798156038417*^9}, {3.726312422974263*^9, 3.726312439922279*^9}, {
   3.726313778060986*^9, 3.726313794010726*^9}, {3.726313854887352*^9, 
   3.726313855417986*^9}, {3.726377533478507*^9, 3.726377535012369*^9}, {
   3.726379310729051*^9, 3.726379315935656*^9}, {3.726379351066524*^9, 
   3.7263793563685627`*^9}, 3.7263814533362722`*^9, {3.726468979312665*^9, 
   3.726469044993416*^9}, {3.726564279540083*^9, 3.726564288774165*^9}, {
   3.726564330005303*^9, 3.726564342424973*^9}, {3.7265645007454853`*^9, 
   3.7265645054085903`*^9}, 3.726565145221386*^9, {3.726836923420138*^9, 
   3.726836925204391*^9}, {3.7268417497448387`*^9, 3.726841749854889*^9}, {
   3.727357927216405*^9, 3.7273579306359463`*^9}, 3.72735811608375*^9, {
   3.7273582875862513`*^9, 3.727358296888235*^9}, {3.727520051444908*^9, 
   3.7275200665503483`*^9}, {3.727539483513708*^9, 3.72753949210455*^9}, {
   3.7275398377710333`*^9, 3.727539869000495*^9}, {3.7275879806550293`*^9, 
   3.727587984698921*^9}, {3.727606150288821*^9, 3.727606150994812*^9}, {
   3.728932814314426*^9, 3.728932860160056*^9}, 3.7289333254815903`*^9, 
   3.7299208725344887`*^9, {3.730007040539275*^9, 3.7300070509717903`*^9}, {
   3.730007357183831*^9, 3.7300073662633142`*^9}, {3.7331192829046183`*^9, 
   3.733119300197537*^9}, {3.733120717385792*^9, 3.733120717697629*^9}, {
   3.7331222711038847`*^9, 3.733122272703622*^9}, {3.733211538849382*^9, 
   3.7332115515038567`*^9}, {3.7332289443370447`*^9, 
   3.7332289447842827`*^9}, {3.742215948846467*^9, 3.742215959437643*^9}, {
   3.742216025305929*^9, 3.742216093257207*^9}, {3.7422172078868933`*^9, 
   3.7422172275906973`*^9}, 3.74221727383118*^9, {3.742217585069265*^9, 
   3.742217591716959*^9}, {3.7422176229823923`*^9, 3.742217653035615*^9}, {
   3.742269341112874*^9, 3.742269371527761*^9}, 3.742275694936644*^9, {
   3.742289467062118*^9, 3.742289486771803*^9}, {3.742289520463562*^9, 
   3.7422896027136*^9}, {3.7422896364561243`*^9, 3.74228964347093*^9}, {
   3.742289678232355*^9, 3.742289708137301*^9}, {3.7422897506101*^9, 
   3.7422897587096577`*^9}, {3.7422920316457787`*^9, 3.742292034487727*^9}, 
   3.742292186682322*^9, {3.742292303240778*^9, 3.742292303483521*^9}, {
   3.742292362481593*^9, 3.742292372544711*^9}, {3.742292408813004*^9, 
   3.742292447857381*^9}, {3.7422968206130743`*^9, 3.742296843480155*^9}, {
   3.7422970160890417`*^9, 3.742297024417719*^9}, {3.742297074890059*^9, 
   3.74229711910509*^9}, {3.7422973083294992`*^9, 3.742297309298213*^9}, {
   3.742297354168077*^9, 3.742297359897736*^9}, {3.742297415918168*^9, 
   3.7422974232482452`*^9}, {3.742297467739311*^9, 3.742297612963316*^9}, {
   3.7422977860232887`*^9, 3.7422977903561068`*^9}, {3.74229798181938*^9, 
   3.742298023677857*^9}, {3.7422980561712513`*^9, 3.74229805925661*^9}, 
   3.742298106308654*^9, {3.742300221204397*^9, 3.742300269720365*^9}, {
   3.742300416216001*^9, 3.742300416917211*^9}, {3.742300536315893*^9, 
   3.742300546756034*^9}, {3.742300626604027*^9, 3.742300638323701*^9}, {
   3.7423006769018583`*^9, 3.7423007163572683`*^9}, {3.7435037431402884`*^9, 
   3.743503799356997*^9}, {3.7435038425347443`*^9, 3.743503908279688*^9}, {
   3.7435046316079397`*^9, 3.743504651390107*^9}, {3.7435061817655*^9, 
   3.743506182021901*^9}, {3.743506221115732*^9, 3.743506260429055*^9}, 
   3.743506602721039*^9, {3.745326287005268*^9, 3.7453262895250797`*^9}}]
}, Closed]],

Cell[CellGroupData[{

Cell["Bottomonium s - wave", "Subsubsection",
 CellChangeTimes->{{3.742291861612499*^9, 3.742291867360454*^9}, 
   3.742291901323778*^9, {3.7435061781726627`*^9, 3.7435061783084917`*^9}, {
   3.743506307127768*^9, 3.743506311615374*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"swavebbspectra", "[", 
    RowBox[{"n_", ",", "Tscan_"}], "]"}], ":=", 
   RowBox[{"Block", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{"T", "=", 
        RowBox[{"Tscan", "[", 
         RowBox[{"[", "n", "]"}], "]"}]}], ",", 
       RowBox[{"mD", "=", 
        RowBox[{"mDcal", "[", 
         RowBox[{
          RowBox[{"2", "\[Pi]"}], ",", 
          RowBox[{"Tscan", "[", 
           RowBox[{"[", "n", "]"}], "]"}], ",", 
          RowBox[{"kfinal", "[", 
           RowBox[{"[", "1", "]"}], "]"}], ",", 
          RowBox[{"kfinal", "[", 
           RowBox[{"[", "2", "]"}], "]"}]}], "]"}]}], ",", 
       RowBox[{"\[Sigma]", "=", 
        RowBox[{"\[Sigma]cont", "[", 
         RowBox[{"[", "1", "]"}], "]"}]}], ",", 
       RowBox[{"\[Alpha]", "=", 
        RowBox[{"\[Alpha]cont", "[", 
         RowBox[{"[", "1", "]"}], "]"}]}], ",", 
       RowBox[{"c", "=", 
        RowBox[{"ccont", "[", 
         RowBox[{"[", "1", "]"}], "]"}]}], ",", 
       RowBox[{"M", "=", "Mb"}], ",", 
       RowBox[{"l", "=", "0"}], ",", 
       RowBox[{"\[Omega]min", "=", 
        RowBox[{"-", "1"}]}], ",", 
       RowBox[{"\[Omega]max", "=", "3"}], ",", "ccsT", ",", "Tstring", ",", 
       "inf"}], "}"}], ",", "\[IndentingNewLine]", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"rev", "=", 
       RowBox[{"Interpolation", "[", 
        RowBox[{"Join", "[", 
         RowBox[{
          RowBox[{"ParallelTable", "[", 
           RowBox[{
            RowBox[{"{", 
             RowBox[{"r", ",", 
              RowBox[{"ReVsb", "[", 
               RowBox[{
               "r", ",", "mD", ",", "\[Alpha]", ",", "\[Sigma]", ",", "c"}], 
               "]"}]}], "}"}], ",", 
            RowBox[{"{", 
             RowBox[{"r", ",", 
              RowBox[{"1", "/", "1000"}], ",", "10", ",", 
              RowBox[{"1", "/", "100"}]}], "}"}]}], "]"}], ",", 
          RowBox[{"ParallelTable", "[", 
           RowBox[{
            RowBox[{"{", 
             RowBox[{"r", ",", 
              RowBox[{"ReVsb", "[", 
               RowBox[{
               "r", ",", "mD", ",", "\[Alpha]", ",", "\[Sigma]", ",", "c"}], 
               "]"}]}], "}"}], ",", 
            RowBox[{"{", 
             RowBox[{"r", ",", 
              RowBox[{"101", "/", "10"}], ",", "25", ",", 
              RowBox[{"1", "/", "10"}]}], "}"}]}], "]"}], ",", 
          RowBox[{"ParallelTable", "[", 
           RowBox[{
            RowBox[{"{", 
             RowBox[{"r", ",", 
              RowBox[{"ReVsb", "[", 
               RowBox[{
               "r", ",", "mD", ",", "\[Alpha]", ",", "\[Sigma]", ",", "c"}], 
               "]"}]}], "}"}], ",", 
            RowBox[{"{", 
             RowBox[{"r", ",", "26", ",", "1500", ",", "1"}], "}"}]}], "]"}], 
          ",", 
          RowBox[{"ParallelTable", "[", 
           RowBox[{
            RowBox[{"{", 
             RowBox[{"r", ",", 
              RowBox[{"ReVsb", "[", 
               RowBox[{
               "r", ",", "mD", ",", "\[Alpha]", ",", "\[Sigma]", ",", "c"}], 
               "]"}]}], "}"}], ",", 
            RowBox[{"{", 
             RowBox[{"r", ",", "1510", ",", "20000", ",", "1000"}], "}"}]}], 
           "]"}]}], "]"}], "]"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"imv", "=", 
       RowBox[{"Interpolation", "[", 
        RowBox[{"Join", "[", 
         RowBox[{
          RowBox[{"ParallelTable", "[", 
           RowBox[{
            RowBox[{"{", 
             RowBox[{"r", ",", 
              RowBox[{"ImVsb", "[", 
               RowBox[{
               "r", ",", "mD", ",", "\[Alpha]", ",", "\[Sigma]", ",", "T"}], 
               "]"}]}], "}"}], ",", 
            RowBox[{"{", 
             RowBox[{"r", ",", 
              RowBox[{"1", "/", "1000"}], ",", "10", ",", 
              RowBox[{"1", "/", "100"}]}], "}"}]}], "]"}], ",", 
          RowBox[{"ParallelTable", "[", 
           RowBox[{
            RowBox[{"{", 
             RowBox[{"r", ",", 
              RowBox[{"ImVsb", "[", 
               RowBox[{
               "r", ",", "mD", ",", "\[Alpha]", ",", "\[Sigma]", ",", "T"}], 
               "]"}]}], "}"}], ",", 
            RowBox[{"{", 
             RowBox[{"r", ",", 
              RowBox[{"101", "/", "10"}], ",", "25", ",", 
              RowBox[{"1", "/", "10"}]}], "}"}]}], "]"}], ",", 
          RowBox[{"ParallelTable", "[", 
           RowBox[{
            RowBox[{"{", 
             RowBox[{"r", ",", 
              RowBox[{"ImVsb", "[", 
               RowBox[{
               "r", ",", "mD", ",", "\[Alpha]", ",", "\[Sigma]", ",", "T"}], 
               "]"}]}], "}"}], ",", 
            RowBox[{"{", 
             RowBox[{"r", ",", "26", ",", "1500", ",", "1"}], "}"}]}], "]"}], 
          ",", 
          RowBox[{"ParallelTable", "[", 
           RowBox[{
            RowBox[{"{", 
             RowBox[{"r", ",", 
              RowBox[{"ImVsb", "[", 
               RowBox[{
               "r", ",", "mD", ",", "\[Alpha]", ",", "\[Sigma]", ",", "T"}], 
               "]"}]}], "}"}], ",", 
            RowBox[{"{", 
             RowBox[{"r", ",", "1510", ",", "20000", ",", "1000"}], "}"}]}], 
           "]"}]}], "]"}], "]"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"V", "[", "x_", "]"}], ":=", 
       RowBox[{
        RowBox[{"rev", "[", "x", "]"}], "+", 
        RowBox[{"\[ImaginaryI]", " ", 
         RowBox[{"imv", "[", "x", "]"}]}]}]}], ";", "\[IndentingNewLine]", 
      "\[IndentingNewLine]", 
      RowBox[{"\[Rho]table", "=", 
       RowBox[{
        RowBox[{
         RowBox[{
          RowBox[{"ParallelDo", "[", 
           RowBox[{
            RowBox[{
             RowBox[{"\[Omega]", "=", 
              RowBox[{"\[Omega]min", "+", 
               RowBox[{
                RowBox[{"(", 
                 RowBox[{"it", "-", "1"}], ")"}], " ", "d\[Omega]", " ", 
                "M"}]}]}], ";", 
             RowBox[{"inf", "=", 
              RowBox[{"40", "+", 
               RowBox[{"500", "*", "it", "*", "d\[Omega]"}]}]}], ";", 
             "\[IndentingNewLine]", 
             RowBox[{"(*", 
              RowBox[{
               RowBox[{"s0", "=", 
                RowBox[{"NDSolve", "[", 
                 RowBox[{
                  RowBox[{"{", 
                   RowBox[{
                    RowBox[{
                    RowBox[{
                    RowBox[{
                    RowBox[{"(", 
                    RowBox[{"\[Omega]", "-", 
                    FractionBox[
                    RowBox[{"l", 
                    RowBox[{"(", 
                    RowBox[{"l", "+", "1"}], ")"}]}], 
                    RowBox[{"M", " ", 
                    SuperscriptBox["r", "2"]}]], "-", 
                    RowBox[{"Re", "[", 
                    RowBox[{"V", "[", "r", "]"}], "]"}], "+", 
                    RowBox[{"\[ImaginaryI]", " ", 
                    RowBox[{"Abs", "[", 
                    RowBox[{"Im", "[", 
                    RowBox[{"V", "[", "r", "]"}], "]"}], "]"}]}]}], ")"}], 
                    RowBox[{"gr", "[", "r", "]"}]}], "+", 
                    RowBox[{
                    FractionBox["1", "M"], 
                    RowBox[{
                    RowBox[{"gr", "''"}], "[", "r", "]"}]}]}], "\[Equal]", 
                    "0"}], ",", " ", "\[IndentingNewLine]", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"gr", "'"}], "[", "\[Delta]", "]"}], "\[Equal]", 
                    RowBox[{
                    RowBox[{"2", " ", "\[Delta]", 
                    SuperscriptBox[
                    RowBox[{"(", 
                    RowBox[{"\[Alpha]", " ", "M"}], ")"}], "2"]}], "-", 
                    RowBox[{
                    FractionBox["3", "4"], 
                    SuperscriptBox["\[Delta]", "2"], 
                    SuperscriptBox[
                    RowBox[{"(", 
                    RowBox[{"M", " ", "\[Alpha]"}], ")"}], "3"]}]}]}], ",", 
                    "\[IndentingNewLine]", " ", 
                    RowBox[{
                    RowBox[{"gr", "[", "\[Delta]", "]"}], "==", " ", 
                    RowBox[{
                    RowBox[{
                    SuperscriptBox["\[Delta]", "2"], 
                    SuperscriptBox[
                    RowBox[{"(", 
                    RowBox[{"\[Alpha]", " ", "M"}], ")"}], "2"]}], "-", 
                    RowBox[{
                    FractionBox["1", "4"], 
                    SuperscriptBox["\[Delta]", "3"], 
                    SuperscriptBox[
                    RowBox[{"(", 
                    RowBox[{"M", " ", "\[Alpha]"}], ")"}], "3"]}]}]}]}], 
                   "}"}], ",", "gr", ",", 
                  RowBox[{"{", 
                   RowBox[{"r", ",", "\[Delta]", ",", "inf"}], "}"}], ",", 
                  RowBox[{"PrecisionGoal", "\[Rule]", "10"}], ",", 
                  RowBox[{"MaxSteps", "\[Rule]", "1000000"}]}], "]"}]}], ";", 
               "\[IndentingNewLine]", 
               RowBox[{
                RowBox[{"gr1", "[", "r_", "]"}], "=", 
                SubscriptBox[
                 RowBox[{"(", 
                  RowBox[{
                   RowBox[{"gr", "[", "r", "]"}], "/.", "s0"}], ")"}], 
                 RowBox[{
                 "\[LeftDoubleBracket]", "1", "\[RightDoubleBracket]"}]]}], 
               ";"}], "*)"}], "\[IndentingNewLine]", 
             RowBox[{"s01", "=", 
              RowBox[{"NDSolve", "[", 
               RowBox[{
                RowBox[{"{", 
                 RowBox[{
                  RowBox[{
                   RowBox[{
                    RowBox[{
                    RowBox[{"(", 
                    RowBox[{"\[Omega]", "-", 
                    FractionBox[
                    RowBox[{"l", 
                    RowBox[{"(", 
                    RowBox[{"l", "+", "1"}], ")"}]}], 
                    RowBox[{"M", " ", 
                    SuperscriptBox["r", "2"]}]], "-", 
                    RowBox[{"Re", "[", 
                    RowBox[{"V", "[", "r", "]"}], "]"}], "+", 
                    RowBox[{"\[ImaginaryI]", " ", 
                    RowBox[{"Abs", "[", 
                    RowBox[{"Im", "[", 
                    RowBox[{"V", "[", "r", "]"}], "]"}], "]"}]}]}], ")"}], 
                    RowBox[{"gr", "[", "r", "]"}]}], "+", 
                    RowBox[{
                    FractionBox["1", "M"], 
                    RowBox[{
                    RowBox[{"gr", "''"}], "[", "r", "]"}]}]}], "\[Equal]", 
                   "0"}], ",", " ", "\[IndentingNewLine]", 
                  RowBox[{
                   RowBox[{
                    RowBox[{"gr", "'"}], "[", "\[Delta]", "]"}], "\[Equal]", 
                   RowBox[{
                    RowBox[{"(", 
                    RowBox[{"\[Alpha]", " ", "M"}], ")"}], "-", 
                    RowBox[{"\[Delta]", 
                    SuperscriptBox[
                    RowBox[{"(", 
                    RowBox[{"M", " ", "\[Alpha]"}], ")"}], "2"]}]}]}], ",", 
                  "\[IndentingNewLine]", " ", 
                  RowBox[{
                   RowBox[{"gr", "[", "\[Delta]", "]"}], "\[Equal]", 
                   RowBox[{
                    RowBox[{"\[Delta]", 
                    RowBox[{"(", 
                    RowBox[{"\[Alpha]", " ", "M"}], ")"}]}], "-", " ", 
                    RowBox[{
                    FractionBox["1", "2"], 
                    SuperscriptBox["\[Delta]", "2"], 
                    SuperscriptBox[
                    RowBox[{"(", 
                    RowBox[{"\[Alpha]", " ", "M"}], ")"}], "2"]}]}]}]}], 
                 "}"}], ",", "gr", ",", 
                RowBox[{"{", 
                 RowBox[{"r", ",", "\[Delta]", ",", "inf"}], "}"}]}], "]"}]}],
              ";", "\[IndentingNewLine]", 
             RowBox[{
              RowBox[{"gr0", "[", "r_", "]"}], "=", 
              SubscriptBox[
               RowBox[{"(", 
                RowBox[{
                 RowBox[{"gr", "[", "r", "]"}], "/.", "s01"}], ")"}], 
               RowBox[{
               "\[LeftDoubleBracket]", "1", "\[RightDoubleBracket]"}]]}], ";",
              "\[IndentingNewLine]", 
             RowBox[{"s1", "=", 
              RowBox[{"NDSolve", "[", 
               RowBox[{
                RowBox[{"{", 
                 RowBox[{
                  RowBox[{
                   RowBox[{
                    RowBox[{"rho", "'"}], "[", "x", "]"}], "\[Equal]", 
                   RowBox[{
                    RowBox[{"-", 
                    FractionBox[
                    RowBox[{" ", 
                    RowBox[{"6", " ", "Nc", " ", 
                    SuperscriptBox["M", "2"], " ", "\[Alpha]"}]}], 
                    RowBox[{"4", "\[Pi]"}]]}], 
                    RowBox[{"Im", "[", 
                    FractionBox["1", 
                    SuperscriptBox[
                    RowBox[{"(", 
                    RowBox[{"gr0", "[", "x", "]"}], ")"}], "2"]], 
                    RowBox[{"(*", 
                    RowBox[{"+", 
                    FractionBox["36", 
                    SuperscriptBox[
                    RowBox[{"(", 
                    RowBox[{"gr1", "[", "x", "]"}], ")"}], "2"]]}], "*)"}], 
                    "]"}]}]}], ",", 
                  RowBox[{
                   RowBox[{"rho", "[", "\[Delta]", "]"}], "\[Equal]", "0"}]}],
                  "}"}], ",", "rho", ",", 
                RowBox[{"{", 
                 RowBox[{"x", ",", "\[Delta]", ",", "inf"}], "}"}]}], "]"}]}],
              ";", "\[IndentingNewLine]", 
             RowBox[{
              RowBox[{"rhow", "[", "r_", "]"}], "=", 
              SubscriptBox[
               RowBox[{"(", 
                RowBox[{
                 RowBox[{"rho", "[", "r", "]"}], "/.", "s1"}], ")"}], 
               RowBox[{
               "\[LeftDoubleBracket]", "1", "\[RightDoubleBracket]"}]]}], ";",
              "\[IndentingNewLine]", 
             RowBox[{"ParallelSow", "[", 
              RowBox[{"{", 
               RowBox[{
                RowBox[{"\[Omega]", "+", 
                 RowBox[{"2", "M"}]}], ",", 
                RowBox[{"rhow", "[", "inf", "]"}]}], "}"}], "]"}]}], ",", 
            RowBox[{"{", 
             RowBox[{"it", ",", "1", ",", 
              FractionBox[
               RowBox[{"\[Omega]max", "-", "\[Omega]min"}], 
               RowBox[{"d\[Omega]", " ", "M"}]]}], "}"}]}], "]"}], "//", 
          "Reap"}], "//", "Last"}], "//", "First"}]}], ";", 
      "\[IndentingNewLine]", "\[IndentingNewLine]", 
      RowBox[{"bbsT", "=", 
       RowBox[{"ParallelTable", "[", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{
           RowBox[{"\[Rho]table", "[", 
            RowBox[{"[", 
             RowBox[{"i", ",", "1"}], "]"}], "]"}], ",", 
           FractionBox[
            RowBox[{"-", 
             RowBox[{"\[Rho]table", "[", 
              RowBox[{"[", 
               RowBox[{"i", ",", "2"}], "]"}], "]"}]}], 
            SuperscriptBox[
             RowBox[{"\[Rho]table", "[", 
              RowBox[{"[", 
               RowBox[{"i", ",", "1"}], "]"}], "]"}], "2"]]}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"i", ",", "1", ",", 
           RowBox[{"Length", "[", "\[Rho]table", "]"}]}], "}"}]}], "]"}]}], 
      ";", "\[IndentingNewLine]", 
      RowBox[{"Tstring", "=", 
       RowBox[{"Round", "[", 
        RowBox[{"T", "*", "1000"}], "]"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"Export", "[", 
       RowBox[{
        RowBox[{"\"\<spectraldata/Tscan/bb/swbbT\>\"", "<>", 
         RowBox[{"ToString", "[", "Tstring", "]"}], "<>", 
         "\"\<spectra.dat\>\""}], ",", 
        RowBox[{"Sort", "[", "bbsT", "]"}]}], "]"}], ";"}]}], 
    "\[IndentingNewLine]", "]"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.724397604460712*^9, 3.724397621092863*^9}, {
   3.724398705481254*^9, 3.724398705798315*^9}, {3.72440624506767*^9, 
   3.7244062457361317`*^9}, {3.7244423136168756`*^9, 3.724442340980721*^9}, {
   3.7244423712224417`*^9, 3.724442377050403*^9}, {3.724442465925974*^9, 
   3.724442518695669*^9}, {3.7244426255599117`*^9, 3.724442639076613*^9}, {
   3.724443729204352*^9, 3.724443729749022*^9}, {3.724443881656342*^9, 
   3.7244438842850027`*^9}, 3.725261621115453*^9, 3.72526166634648*^9, {
   3.725271550289123*^9, 3.7252715504130163`*^9}, {3.725271609402791*^9, 
   3.7252716095188437`*^9}, {3.7252717762497*^9, 3.725271782362536*^9}, {
   3.725271824500347*^9, 3.725271826035269*^9}, {3.725271857701564*^9, 
   3.725271858192912*^9}, {3.725271928114049*^9, 3.7252719496618757`*^9}, {
   3.725271981807578*^9, 3.725271987122878*^9}, {3.725273718896678*^9, 
   3.72527377251343*^9}, {3.725273963159111*^9, 3.725273966198284*^9}, {
   3.725364382855975*^9, 3.725364384697238*^9}, {3.725364432753635*^9, 
   3.725364433681274*^9}, {3.725364595553596*^9, 3.725364595868292*^9}, {
   3.725364661141473*^9, 3.725364661301785*^9}, {3.725365068510941*^9, 
   3.7253650691073112`*^9}, {3.7256202924505177`*^9, 
   3.7256202938854313`*^9}, {3.7256265502253428`*^9, 3.725626559021003*^9}, {
   3.725798091627001*^9, 3.725798108963685*^9}, {3.725798150844287*^9, 
   3.725798156038417*^9}, {3.726312422974263*^9, 3.726312439922279*^9}, {
   3.726313778060986*^9, 3.726313794010726*^9}, {3.726313854887352*^9, 
   3.726313855417986*^9}, {3.726377533478507*^9, 3.726377535012369*^9}, {
   3.726379310729051*^9, 3.726379315935656*^9}, {3.726379351066524*^9, 
   3.7263793563685627`*^9}, 3.7263814533362722`*^9, {3.726468979312665*^9, 
   3.726469044993416*^9}, {3.726564279540083*^9, 3.726564288774165*^9}, {
   3.726564330005303*^9, 3.726564342424973*^9}, {3.7265645007454853`*^9, 
   3.7265645054085903`*^9}, 3.726565145221386*^9, {3.726836923420138*^9, 
   3.726836925204391*^9}, {3.7268417497448387`*^9, 3.726841749854889*^9}, {
   3.727357927216405*^9, 3.7273579306359463`*^9}, 3.72735811608375*^9, {
   3.7273582875862513`*^9, 3.727358296888235*^9}, {3.727520051444908*^9, 
   3.7275200665503483`*^9}, {3.727539483513708*^9, 3.72753949210455*^9}, {
   3.7275398377710333`*^9, 3.727539869000495*^9}, {3.7275879806550293`*^9, 
   3.727587984698921*^9}, {3.727606150288821*^9, 3.727606150994812*^9}, {
   3.728932814314426*^9, 3.728932860160056*^9}, 3.7289333254815903`*^9, 
   3.7299208725344887`*^9, {3.730007040539275*^9, 3.7300070509717903`*^9}, {
   3.730007357183831*^9, 3.7300073662633142`*^9}, {3.7331192829046183`*^9, 
   3.733119300197537*^9}, {3.733120717385792*^9, 3.733120717697629*^9}, {
   3.7331222711038847`*^9, 3.733122272703622*^9}, {3.733211538849382*^9, 
   3.7332115515038567`*^9}, {3.7332289443370447`*^9, 
   3.7332289447842827`*^9}, {3.742215948846467*^9, 3.742215959437643*^9}, {
   3.742216025305929*^9, 3.742216093257207*^9}, {3.7422172078868933`*^9, 
   3.7422172275906973`*^9}, 3.74221727383118*^9, {3.742217585069265*^9, 
   3.742217591716959*^9}, {3.7422176229823923`*^9, 3.742217653035615*^9}, {
   3.742269341112874*^9, 3.742269371527761*^9}, 3.742275694936644*^9, {
   3.742289467062118*^9, 3.742289486771803*^9}, {3.742289520463562*^9, 
   3.7422896027136*^9}, {3.7422896364561243`*^9, 3.74228964347093*^9}, {
   3.742289678232355*^9, 3.742289708137301*^9}, {3.7422897506101*^9, 
   3.7422897587096577`*^9}, {3.7422920316457787`*^9, 3.742292034487727*^9}, 
   3.742292186682322*^9, {3.742292303240778*^9, 3.742292303483521*^9}, {
   3.742292362481593*^9, 3.742292372544711*^9}, {3.742292408813004*^9, 
   3.742292447857381*^9}, {3.7422968206130743`*^9, 3.742296843480155*^9}, {
   3.7422970160890417`*^9, 3.742297024417719*^9}, {3.742297074890059*^9, 
   3.74229711910509*^9}, {3.7422973083294992`*^9, 3.742297309298213*^9}, {
   3.742297354168077*^9, 3.742297359897736*^9}, {3.742297415918168*^9, 
   3.7422974232482452`*^9}, {3.742297467739311*^9, 3.742297612963316*^9}, {
   3.7422977860232887`*^9, 3.7422977903561068`*^9}, {3.74229798181938*^9, 
   3.742298023677857*^9}, {3.7422980561712513`*^9, 3.74229805925661*^9}, 
   3.742298106308654*^9, {3.742300221204397*^9, 3.742300269720365*^9}, {
   3.742300416216001*^9, 3.742300416917211*^9}, {3.742300536315893*^9, 
   3.742300546756034*^9}, {3.742300626604027*^9, 3.742300638323701*^9}, {
   3.7423006769018583`*^9, 3.7423007163572683`*^9}, {3.7435037431402884`*^9, 
   3.743503799356997*^9}, {3.7435038425347443`*^9, 3.743503908279688*^9}, {
   3.7435046316079397`*^9, 3.743504651390107*^9}, {3.743506325612351*^9, 
   3.7435063377910748`*^9}, {3.74350638604452*^9, 3.743506401938177*^9}, 
   3.745326244961722*^9}]
}, Closed]],

Cell[CellGroupData[{

Cell["Bottomonium p - wave", "Subsubsection",
 CellChangeTimes->{{3.742291861612499*^9, 3.742291867360454*^9}, 
   3.742291901323778*^9, {3.7435061781726627`*^9, 3.7435061783084917`*^9}, {
   3.743506307127768*^9, 3.743506311615374*^9}, {3.743506475554695*^9, 
   3.743506475770885*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"pwavebbspectra", "[", 
    RowBox[{"n_", ",", "Tscan_"}], "]"}], ":=", 
   RowBox[{"Block", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{"T", "=", 
        RowBox[{"Tscan", "[", 
         RowBox[{"[", "n", "]"}], "]"}]}], ",", 
       RowBox[{"mD", "=", 
        RowBox[{"mDcal", "[", 
         RowBox[{
          RowBox[{"2", "\[Pi]"}], ",", 
          RowBox[{"Tscan", "[", 
           RowBox[{"[", "n", "]"}], "]"}], ",", 
          RowBox[{"kfinal", "[", 
           RowBox[{"[", "1", "]"}], "]"}], ",", 
          RowBox[{"kfinal", "[", 
           RowBox[{"[", "2", "]"}], "]"}]}], "]"}]}], ",", 
       RowBox[{"\[Sigma]", "=", 
        RowBox[{"\[Sigma]cont", "[", 
         RowBox[{"[", "1", "]"}], "]"}]}], ",", 
       RowBox[{"\[Alpha]", "=", 
        RowBox[{"\[Alpha]cont", "[", 
         RowBox[{"[", "1", "]"}], "]"}]}], ",", 
       RowBox[{"c", "=", 
        RowBox[{"ccont", "[", 
         RowBox[{"[", "1", "]"}], "]"}]}], ",", 
       RowBox[{"M", "=", "Mb"}], ",", 
       RowBox[{"l", "=", "1"}], ",", 
       RowBox[{"\[Omega]min", "=", 
        RowBox[{"-", "1"}]}], ",", 
       RowBox[{"\[Omega]max", "=", "3"}], ",", "ccsT", ",", "Tstring", ",", 
       "inf"}], "}"}], ",", "\[IndentingNewLine]", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"rev", "=", 
       RowBox[{"Interpolation", "[", 
        RowBox[{"Join", "[", 
         RowBox[{
          RowBox[{"ParallelTable", "[", 
           RowBox[{
            RowBox[{"{", 
             RowBox[{"r", ",", 
              RowBox[{"ReVsb", "[", 
               RowBox[{
               "r", ",", "mD", ",", "\[Alpha]", ",", "\[Sigma]", ",", "c"}], 
               "]"}]}], "}"}], ",", 
            RowBox[{"{", 
             RowBox[{"r", ",", 
              RowBox[{"1", "/", "1000"}], ",", "10", ",", 
              RowBox[{"1", "/", "100"}]}], "}"}]}], "]"}], ",", 
          RowBox[{"ParallelTable", "[", 
           RowBox[{
            RowBox[{"{", 
             RowBox[{"r", ",", 
              RowBox[{"ReVsb", "[", 
               RowBox[{
               "r", ",", "mD", ",", "\[Alpha]", ",", "\[Sigma]", ",", "c"}], 
               "]"}]}], "}"}], ",", 
            RowBox[{"{", 
             RowBox[{"r", ",", 
              RowBox[{"101", "/", "10"}], ",", "25", ",", 
              RowBox[{"1", "/", "10"}]}], "}"}]}], "]"}], ",", 
          RowBox[{"ParallelTable", "[", 
           RowBox[{
            RowBox[{"{", 
             RowBox[{"r", ",", 
              RowBox[{"ReVsb", "[", 
               RowBox[{
               "r", ",", "mD", ",", "\[Alpha]", ",", "\[Sigma]", ",", "c"}], 
               "]"}]}], "}"}], ",", 
            RowBox[{"{", 
             RowBox[{"r", ",", "26", ",", "1500", ",", "1"}], "}"}]}], "]"}], 
          ",", 
          RowBox[{"ParallelTable", "[", 
           RowBox[{
            RowBox[{"{", 
             RowBox[{"r", ",", 
              RowBox[{"ReVsb", "[", 
               RowBox[{
               "r", ",", "mD", ",", "\[Alpha]", ",", "\[Sigma]", ",", "c"}], 
               "]"}]}], "}"}], ",", 
            RowBox[{"{", 
             RowBox[{"r", ",", "1510", ",", "20000", ",", "1000"}], "}"}]}], 
           "]"}]}], "]"}], "]"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"imv", "=", 
       RowBox[{"Interpolation", "[", 
        RowBox[{"Join", "[", 
         RowBox[{
          RowBox[{"ParallelTable", "[", 
           RowBox[{
            RowBox[{"{", 
             RowBox[{"r", ",", 
              RowBox[{"ImVsb", "[", 
               RowBox[{
               "r", ",", "mD", ",", "\[Alpha]", ",", "\[Sigma]", ",", "T"}], 
               "]"}]}], "}"}], ",", 
            RowBox[{"{", 
             RowBox[{"r", ",", 
              RowBox[{"1", "/", "1000"}], ",", "10", ",", 
              RowBox[{"1", "/", "100"}]}], "}"}]}], "]"}], ",", 
          RowBox[{"ParallelTable", "[", 
           RowBox[{
            RowBox[{"{", 
             RowBox[{"r", ",", 
              RowBox[{"ImVsb", "[", 
               RowBox[{
               "r", ",", "mD", ",", "\[Alpha]", ",", "\[Sigma]", ",", "T"}], 
               "]"}]}], "}"}], ",", 
            RowBox[{"{", 
             RowBox[{"r", ",", 
              RowBox[{"101", "/", "10"}], ",", "25", ",", 
              RowBox[{"1", "/", "10"}]}], "}"}]}], "]"}], ",", 
          RowBox[{"ParallelTable", "[", 
           RowBox[{
            RowBox[{"{", 
             RowBox[{"r", ",", 
              RowBox[{"ImVsb", "[", 
               RowBox[{
               "r", ",", "mD", ",", "\[Alpha]", ",", "\[Sigma]", ",", "T"}], 
               "]"}]}], "}"}], ",", 
            RowBox[{"{", 
             RowBox[{"r", ",", "26", ",", "1500", ",", "1"}], "}"}]}], "]"}], 
          ",", 
          RowBox[{"ParallelTable", "[", 
           RowBox[{
            RowBox[{"{", 
             RowBox[{"r", ",", 
              RowBox[{"ImVsb", "[", 
               RowBox[{
               "r", ",", "mD", ",", "\[Alpha]", ",", "\[Sigma]", ",", "T"}], 
               "]"}]}], "}"}], ",", 
            RowBox[{"{", 
             RowBox[{"r", ",", "1510", ",", "20000", ",", "1000"}], "}"}]}], 
           "]"}]}], "]"}], "]"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"V", "[", "x_", "]"}], ":=", 
       RowBox[{
        RowBox[{"rev", "[", "x", "]"}], "+", 
        RowBox[{"\[ImaginaryI]", " ", 
         RowBox[{"imv", "[", "x", "]"}]}]}]}], ";", "\[IndentingNewLine]", 
      "\[IndentingNewLine]", 
      RowBox[{"\[Rho]table", "=", 
       RowBox[{
        RowBox[{
         RowBox[{
          RowBox[{"ParallelDo", "[", 
           RowBox[{
            RowBox[{
             RowBox[{"\[Omega]", "=", 
              RowBox[{"\[Omega]min", "+", 
               RowBox[{
                RowBox[{"(", 
                 RowBox[{"it", "-", "1"}], ")"}], " ", "d\[Omega]", " ", 
                "M"}]}]}], ";", 
             RowBox[{"inf", "=", 
              RowBox[{"40", "+", 
               RowBox[{"500", "*", "it", "*", "d\[Omega]"}]}]}], ";", 
             "\[IndentingNewLine]", 
             RowBox[{"s0", "=", 
              RowBox[{"NDSolve", "[", 
               RowBox[{
                RowBox[{"{", 
                 RowBox[{
                  RowBox[{
                   RowBox[{
                    RowBox[{
                    RowBox[{"(", 
                    RowBox[{"\[Omega]", "-", 
                    FractionBox[
                    RowBox[{"l", 
                    RowBox[{"(", 
                    RowBox[{"l", "+", "1"}], ")"}]}], 
                    RowBox[{"M", " ", 
                    SuperscriptBox["r", "2"]}]], "-", 
                    RowBox[{"Re", "[", 
                    RowBox[{"V", "[", "r", "]"}], "]"}], "+", 
                    RowBox[{"\[ImaginaryI]", " ", 
                    RowBox[{"Abs", "[", 
                    RowBox[{"Im", "[", 
                    RowBox[{"V", "[", "r", "]"}], "]"}], "]"}]}]}], ")"}], 
                    RowBox[{"gr", "[", "r", "]"}]}], "+", 
                    RowBox[{
                    FractionBox["1", "M"], 
                    RowBox[{
                    RowBox[{"gr", "''"}], "[", "r", "]"}]}]}], "\[Equal]", 
                   "0"}], ",", " ", "\[IndentingNewLine]", 
                  RowBox[{
                   RowBox[{
                    RowBox[{"gr", "'"}], "[", "\[Delta]", "]"}], "\[Equal]", 
                   RowBox[{
                    RowBox[{"2", " ", "\[Delta]", 
                    SuperscriptBox[
                    RowBox[{"(", 
                    RowBox[{"\[Alpha]", " ", "M"}], ")"}], "2"]}], "-", 
                    RowBox[{
                    FractionBox["3", "4"], 
                    SuperscriptBox["\[Delta]", "2"], 
                    SuperscriptBox[
                    RowBox[{"(", 
                    RowBox[{"M", " ", "\[Alpha]"}], ")"}], "3"]}]}]}], ",", 
                  "\[IndentingNewLine]", " ", 
                  RowBox[{
                   RowBox[{"gr", "[", "\[Delta]", "]"}], "==", " ", 
                   RowBox[{
                    RowBox[{
                    SuperscriptBox["\[Delta]", "2"], 
                    SuperscriptBox[
                    RowBox[{"(", 
                    RowBox[{"\[Alpha]", " ", "M"}], ")"}], "2"]}], "-", 
                    RowBox[{
                    FractionBox["1", "4"], 
                    SuperscriptBox["\[Delta]", "3"], 
                    SuperscriptBox[
                    RowBox[{"(", 
                    RowBox[{"M", " ", "\[Alpha]"}], ")"}], "3"]}]}]}]}], 
                 "}"}], ",", "gr", ",", 
                RowBox[{"{", 
                 RowBox[{"r", ",", "\[Delta]", ",", "inf"}], "}"}], ",", 
                RowBox[{"PrecisionGoal", "\[Rule]", "10"}], ",", 
                RowBox[{"MaxSteps", "\[Rule]", "1000000"}]}], "]"}]}], ";", 
             "\[IndentingNewLine]", 
             RowBox[{
              RowBox[{"gr1", "[", "r_", "]"}], "=", 
              SubscriptBox[
               RowBox[{"(", 
                RowBox[{
                 RowBox[{"gr", "[", "r", "]"}], "/.", "s0"}], ")"}], 
               RowBox[{
               "\[LeftDoubleBracket]", "1", "\[RightDoubleBracket]"}]]}], ";",
              "\[IndentingNewLine]", 
             RowBox[{"s01", "=", 
              RowBox[{"NDSolve", "[", 
               RowBox[{
                RowBox[{"{", 
                 RowBox[{
                  RowBox[{
                   RowBox[{
                    RowBox[{
                    RowBox[{"(", 
                    RowBox[{"\[Omega]", "-", 
                    FractionBox[
                    RowBox[{"l", 
                    RowBox[{"(", 
                    RowBox[{"l", "+", "1"}], ")"}]}], 
                    RowBox[{"M", " ", 
                    SuperscriptBox["r", "2"]}]], "-", 
                    RowBox[{"Re", "[", 
                    RowBox[{"V", "[", "r", "]"}], "]"}], "+", 
                    RowBox[{"\[ImaginaryI]", " ", 
                    RowBox[{"Abs", "[", 
                    RowBox[{"Im", "[", 
                    RowBox[{"V", "[", "r", "]"}], "]"}], "]"}]}]}], ")"}], 
                    RowBox[{"gr", "[", "r", "]"}]}], "+", 
                    RowBox[{
                    FractionBox["1", "M"], 
                    RowBox[{
                    RowBox[{"gr", "''"}], "[", "r", "]"}]}]}], "\[Equal]", 
                   "0"}], ",", " ", "\[IndentingNewLine]", 
                  RowBox[{
                   RowBox[{
                    RowBox[{"gr", "'"}], "[", "\[Delta]", "]"}], "\[Equal]", 
                   RowBox[{
                    RowBox[{"(", 
                    RowBox[{"\[Alpha]", " ", "M"}], ")"}], "-", 
                    RowBox[{"\[Delta]", 
                    SuperscriptBox[
                    RowBox[{"(", 
                    RowBox[{"M", " ", "\[Alpha]"}], ")"}], "2"]}]}]}], ",", 
                  "\[IndentingNewLine]", " ", 
                  RowBox[{
                   RowBox[{"gr", "[", "\[Delta]", "]"}], "\[Equal]", 
                   RowBox[{
                    RowBox[{"\[Delta]", 
                    RowBox[{"(", 
                    RowBox[{"\[Alpha]", " ", "M"}], ")"}]}], "-", " ", 
                    RowBox[{
                    FractionBox["1", "2"], 
                    SuperscriptBox["\[Delta]", "2"], 
                    SuperscriptBox[
                    RowBox[{"(", 
                    RowBox[{"\[Alpha]", " ", "M"}], ")"}], "2"]}]}]}]}], 
                 "}"}], ",", "gr", ",", 
                RowBox[{"{", 
                 RowBox[{"r", ",", "\[Delta]", ",", "inf"}], "}"}]}], "]"}]}],
              ";", "\[IndentingNewLine]", 
             RowBox[{
              RowBox[{"gr0", "[", "r_", "]"}], "=", 
              SubscriptBox[
               RowBox[{"(", 
                RowBox[{
                 RowBox[{"gr", "[", "r", "]"}], "/.", "s01"}], ")"}], 
               RowBox[{
               "\[LeftDoubleBracket]", "1", "\[RightDoubleBracket]"}]]}], ";",
              "\[IndentingNewLine]", 
             RowBox[{"s1", "=", 
              RowBox[{"NDSolve", "[", 
               RowBox[{
                RowBox[{"{", 
                 RowBox[{
                  RowBox[{
                   RowBox[{
                    RowBox[{"rho", "'"}], "[", "x", "]"}], "\[Equal]", 
                   RowBox[{
                    FractionBox[
                    RowBox[{"  ", 
                    RowBox[{"Nc", " ", 
                    SuperscriptBox["M", "2"], " ", 
                    SuperscriptBox["\[Alpha]", "3"]}]}], 
                    RowBox[{"8", "\[Pi]"}]], 
                    RowBox[{"Im", "[", 
                    RowBox[{
                    FractionBox["1", 
                    SuperscriptBox[
                    RowBox[{"(", 
                    RowBox[{"gr0", "[", "x", "]"}], ")"}], "2"]], "+", 
                    FractionBox["36", 
                    SuperscriptBox[
                    RowBox[{"(", 
                    RowBox[{"gr1", "[", "x", "]"}], ")"}], "2"]]}], "]"}]}]}],
                   ",", 
                  RowBox[{
                   RowBox[{"rho", "[", "\[Delta]", "]"}], "\[Equal]", "0"}]}],
                  "}"}], ",", "rho", ",", 
                RowBox[{"{", 
                 RowBox[{"x", ",", "\[Delta]", ",", "inf"}], "}"}]}], "]"}]}],
              ";", "\[IndentingNewLine]", 
             RowBox[{
              RowBox[{"rhow", "[", "r_", "]"}], "=", 
              SubscriptBox[
               RowBox[{"(", 
                RowBox[{
                 RowBox[{"rho", "[", "r", "]"}], "/.", "s1"}], ")"}], 
               RowBox[{
               "\[LeftDoubleBracket]", "1", "\[RightDoubleBracket]"}]]}], ";",
              "\[IndentingNewLine]", 
             RowBox[{"ParallelSow", "[", 
              RowBox[{"{", 
               RowBox[{
                RowBox[{"\[Omega]", "+", 
                 RowBox[{"2", "M"}]}], ",", 
                RowBox[{"rhow", "[", "inf", "]"}]}], "}"}], "]"}]}], ",", 
            RowBox[{"{", 
             RowBox[{"it", ",", "1", ",", 
              FractionBox[
               RowBox[{"\[Omega]max", "-", "\[Omega]min"}], 
               RowBox[{"d\[Omega]", " ", "M"}]]}], "}"}]}], "]"}], "//", 
          "Reap"}], "//", "Last"}], "//", "First"}]}], ";", 
      "\[IndentingNewLine]", "\[IndentingNewLine]", 
      RowBox[{"bbsT", "=", 
       RowBox[{"ParallelTable", "[", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{
           RowBox[{"\[Rho]table", "[", 
            RowBox[{"[", 
             RowBox[{"i", ",", "1"}], "]"}], "]"}], ",", 
           FractionBox[
            RowBox[{"\[Rho]table", "[", 
             RowBox[{"[", 
              RowBox[{"i", ",", "2"}], "]"}], "]"}], 
            SuperscriptBox[
             RowBox[{"\[Rho]table", "[", 
              RowBox[{"[", 
               RowBox[{"i", ",", "1"}], "]"}], "]"}], "2"]]}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"i", ",", "1", ",", 
           RowBox[{"Length", "[", "\[Rho]table", "]"}]}], "}"}]}], "]"}]}], 
      ";", "\[IndentingNewLine]", 
      RowBox[{"Tstring", "=", 
       RowBox[{"Round", "[", 
        RowBox[{"T", "*", "1000"}], "]"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"Export", "[", 
       RowBox[{
        RowBox[{"\"\<spectraldata/Tscan/bb/pwbbT\>\"", "<>", 
         RowBox[{"ToString", "[", "Tstring", "]"}], "<>", 
         "\"\<spectra.dat\>\""}], ",", 
        RowBox[{"Sort", "[", "bbsT", "]"}]}], "]"}], ";"}]}], 
    "\[IndentingNewLine]", "]"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.724397604460712*^9, 3.724397621092863*^9}, {
   3.724398705481254*^9, 3.724398705798315*^9}, {3.72440624506767*^9, 
   3.7244062457361317`*^9}, {3.7244423136168756`*^9, 3.724442340980721*^9}, {
   3.7244423712224417`*^9, 3.724442377050403*^9}, {3.724442465925974*^9, 
   3.724442518695669*^9}, {3.7244426255599117`*^9, 3.724442639076613*^9}, {
   3.724443729204352*^9, 3.724443729749022*^9}, {3.724443881656342*^9, 
   3.7244438842850027`*^9}, 3.725261621115453*^9, 3.72526166634648*^9, {
   3.725271550289123*^9, 3.7252715504130163`*^9}, {3.725271609402791*^9, 
   3.7252716095188437`*^9}, {3.7252717762497*^9, 3.725271782362536*^9}, {
   3.725271824500347*^9, 3.725271826035269*^9}, {3.725271857701564*^9, 
   3.725271858192912*^9}, {3.725271928114049*^9, 3.7252719496618757`*^9}, {
   3.725271981807578*^9, 3.725271987122878*^9}, {3.725273718896678*^9, 
   3.72527377251343*^9}, {3.725273963159111*^9, 3.725273966198284*^9}, {
   3.725364382855975*^9, 3.725364384697238*^9}, {3.725364432753635*^9, 
   3.725364433681274*^9}, {3.725364595553596*^9, 3.725364595868292*^9}, {
   3.725364661141473*^9, 3.725364661301785*^9}, {3.725365068510941*^9, 
   3.7253650691073112`*^9}, {3.7256202924505177`*^9, 
   3.7256202938854313`*^9}, {3.7256265502253428`*^9, 3.725626559021003*^9}, {
   3.725798091627001*^9, 3.725798108963685*^9}, {3.725798150844287*^9, 
   3.725798156038417*^9}, {3.726312422974263*^9, 3.726312439922279*^9}, {
   3.726313778060986*^9, 3.726313794010726*^9}, {3.726313854887352*^9, 
   3.726313855417986*^9}, {3.726377533478507*^9, 3.726377535012369*^9}, {
   3.726379310729051*^9, 3.726379315935656*^9}, {3.726379351066524*^9, 
   3.7263793563685627`*^9}, 3.7263814533362722`*^9, {3.726468979312665*^9, 
   3.726469044993416*^9}, {3.726564279540083*^9, 3.726564288774165*^9}, {
   3.726564330005303*^9, 3.726564342424973*^9}, {3.7265645007454853`*^9, 
   3.7265645054085903`*^9}, 3.726565145221386*^9, {3.726836923420138*^9, 
   3.726836925204391*^9}, {3.7268417497448387`*^9, 3.726841749854889*^9}, {
   3.727357927216405*^9, 3.7273579306359463`*^9}, 3.72735811608375*^9, {
   3.7273582875862513`*^9, 3.727358296888235*^9}, {3.727520051444908*^9, 
   3.7275200665503483`*^9}, {3.727539483513708*^9, 3.72753949210455*^9}, {
   3.7275398377710333`*^9, 3.727539869000495*^9}, {3.7275879806550293`*^9, 
   3.727587984698921*^9}, {3.727606150288821*^9, 3.727606150994812*^9}, {
   3.728932814314426*^9, 3.728932860160056*^9}, 3.7289333254815903`*^9, 
   3.7299208725344887`*^9, {3.730007040539275*^9, 3.7300070509717903`*^9}, {
   3.730007357183831*^9, 3.7300073662633142`*^9}, {3.7331192829046183`*^9, 
   3.733119300197537*^9}, {3.733120717385792*^9, 3.733120717697629*^9}, {
   3.7331222711038847`*^9, 3.733122272703622*^9}, {3.733211538849382*^9, 
   3.7332115515038567`*^9}, {3.7332289443370447`*^9, 
   3.7332289447842827`*^9}, {3.742215948846467*^9, 3.742215959437643*^9}, {
   3.742216025305929*^9, 3.742216093257207*^9}, {3.7422172078868933`*^9, 
   3.7422172275906973`*^9}, 3.74221727383118*^9, {3.742217585069265*^9, 
   3.742217591716959*^9}, {3.7422176229823923`*^9, 3.742217653035615*^9}, {
   3.742269341112874*^9, 3.742269371527761*^9}, 3.742275694936644*^9, {
   3.742289467062118*^9, 3.742289486771803*^9}, {3.742289520463562*^9, 
   3.7422896027136*^9}, {3.7422896364561243`*^9, 3.74228964347093*^9}, {
   3.742289678232355*^9, 3.742289708137301*^9}, {3.7422897506101*^9, 
   3.7422897587096577`*^9}, {3.7422920316457787`*^9, 3.742292034487727*^9}, 
   3.742292186682322*^9, {3.742292303240778*^9, 3.742292303483521*^9}, {
   3.742292362481593*^9, 3.742292372544711*^9}, {3.742292408813004*^9, 
   3.742292447857381*^9}, {3.7422968206130743`*^9, 3.742296843480155*^9}, {
   3.7422970160890417`*^9, 3.742297024417719*^9}, {3.742297074890059*^9, 
   3.74229711910509*^9}, {3.7422973083294992`*^9, 3.742297309298213*^9}, {
   3.742297354168077*^9, 3.742297359897736*^9}, {3.742297415918168*^9, 
   3.7422974232482452`*^9}, {3.742297467739311*^9, 3.742297612963316*^9}, {
   3.7422977860232887`*^9, 3.7422977903561068`*^9}, {3.74229798181938*^9, 
   3.742298023677857*^9}, {3.7422980561712513`*^9, 3.74229805925661*^9}, 
   3.742298106308654*^9, {3.742300221204397*^9, 3.742300269720365*^9}, {
   3.742300416216001*^9, 3.742300416917211*^9}, {3.742300536315893*^9, 
   3.742300546756034*^9}, {3.742300626604027*^9, 3.742300638323701*^9}, {
   3.7423006769018583`*^9, 3.7423007163572683`*^9}, {3.7435037431402884`*^9, 
   3.743503799356997*^9}, {3.7435038425347443`*^9, 3.743503908279688*^9}, {
   3.7435046316079397`*^9, 3.743504651390107*^9}, {3.743506325612351*^9, 
   3.7435063377910748`*^9}, {3.74350638604452*^9, 3.743506401938177*^9}, {
   3.743506481181818*^9, 3.743506513038129*^9}, {3.745326264884691*^9, 
   3.745326273933687*^9}}]
}, Closed]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Run modules", "Subsection",
 CellChangeTimes->{{3.72656471093397*^9, 3.7265647203644247`*^9}}],

Cell[BoxData[
 RowBox[{"Off", "[", 
  RowBox[{"NIntegrate", "::", "inumr"}], "]"}]], "Input",
 CellChangeTimes->{{3.725619483363937*^9, 3.725619483377707*^9}, {
  3.727606183390926*^9, 3.727606185317863*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Tscancorig", "[", 
  RowBox[{"[", 
   RowBox[{"26", ";;"}], "]"}], "]"}]], "Input",
 CellChangeTimes->{{3.7252739758591213`*^9, 3.7252739764997463`*^9}, {
   3.725274428998905*^9, 3.7252745030941057`*^9}, {3.725274536208749*^9, 
   3.7252745365240393`*^9}, 3.725274670147171*^9, {3.72646894850772*^9, 
   3.7264689620651827`*^9}, {3.7265643570074453`*^9, 3.726564368280005*^9}, {
   3.72656440184023*^9, 3.726564419184311*^9}, {3.7265645136898127`*^9, 
   3.726564515211121*^9}, {3.7265646945508137`*^9, 3.726564696903001*^9}, {
   3.726565152943614*^9, 3.726565157181899*^9}, {3.726568893755868*^9, 
   3.726568900938162*^9}, {3.726573125445169*^9, 3.726573166388653*^9}, 
   3.726837002653183*^9, {3.7273581385416317`*^9, 3.7273581450067587`*^9}, {
   3.727439388625534*^9, 3.7274393888340597`*^9}, {3.727520073959399*^9, 
   3.727520114297689*^9}, {3.727520158787784*^9, 3.727520201249905*^9}, {
   3.72758789714799*^9, 3.727587916626915*^9}, {3.72760617876633*^9, 
   3.727606248912722*^9}, {3.727608151834311*^9, 3.727608152841201*^9}, {
   3.727608360293288*^9, 3.7276083612270947`*^9}, {3.733294559452797*^9, 
   3.7332945598909187`*^9}, {3.7422173899159927`*^9, 3.742217420228848*^9}, {
   3.743504682433591*^9, 3.743504724593437*^9}, {3.746508324611277*^9, 
   3.746508353234839*^9}, 3.746619298797927*^9, {3.746712487127757*^9, 
   3.7467125149998426`*^9}, {3.746712550678151*^9, 3.746712568288014*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
  "0.20400000000000001`", ",", "0.20700000000000002`", ",", 
   "0.21000000000000002`", ",", "0.21300000000000002`", ",", "0.216`", ",", 
   "0.219`", ",", "0.222`", ",", "0.225`", ",", "0.228`", ",", "0.231`", ",", 
   "0.234`", ",", "0.237`", ",", "0.24`", ",", "0.243`", ",", "0.246`", ",", 
   "0.249`", ",", "0.252`", ",", "0.255`", ",", "0.258`", ",", "0.261`", ",", 
   "0.264`", ",", "0.267`", ",", "0.27`", ",", "0.273`", ",", "0.276`", ",", 
   "0.279`", ",", "0.28200000000000003`", ",", "0.28500000000000003`", ",", 
   "0.28800000000000003`", ",", "0.29100000000000004`", ",", 
   "0.29400000000000004`", ",", "0.29700000000000004`"}], "}"}]], "Output",
 CellChangeTimes->{{3.727606230929288*^9, 3.72760624964671*^9}, 
   3.727608154200349*^9, 3.727608361684507*^9, 3.727701011309236*^9, 
   3.728468096800242*^9, 3.728882494638784*^9, 3.728889116000985*^9, 
   3.729920891490452*^9, 3.733228990340488*^9, 3.733294585030677*^9, 
   3.733294698241495*^9, 3.733393453222761*^9, 3.7422174217220097`*^9, 
   3.742217538055772*^9, 3.7422176005942307`*^9, 3.742217724792449*^9, {
   3.743504659971809*^9, 3.743504684673637*^9}, {3.743504719446714*^9, 
   3.743504725180386*^9}, 3.743505066896949*^9, 3.743742129441505*^9, 
   3.7437446291766043`*^9, 3.7453261613314953`*^9, 3.745580727693656*^9, {
   3.746508340772738*^9, 3.746508353693416*^9}, 3.746596899290245*^9, 
   3.746596952037622*^9, 3.746619299440734*^9, {3.746712492454049*^9, 
   3.746712515992662*^9}, {3.7467125524573174`*^9, 3.74671256921749*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Tscanborig", "=", 
  RowBox[{"Table", "[", 
   RowBox[{"i", ",", 
    RowBox[{"{", 
     RowBox[{"i", ",", "0.15", ",", "0.6", ",", "0.005"}], "}"}]}], 
   "]"}]}]], "Input",
 CellChangeTimes->{3.743506566566243*^9}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
  "0.15`", ",", "0.155`", ",", "0.16`", ",", "0.16499999999999998`", ",", 
   "0.16999999999999998`", ",", "0.175`", ",", "0.18`", ",", "0.185`", ",", 
   "0.19`", ",", "0.195`", ",", "0.2`", ",", "0.205`", ",", "0.21`", ",", 
   "0.215`", ",", "0.22`", ",", "0.22499999999999998`", ",", 
   "0.22999999999999998`", ",", "0.235`", ",", "0.24`", ",", "0.245`", ",", 
   "0.25`", ",", "0.255`", ",", "0.26`", ",", "0.265`", ",", "0.27`", ",", 
   "0.275`", ",", "0.28`", ",", "0.28500000000000003`", ",", 
   "0.29000000000000004`", ",", "0.295`", ",", "0.3`", ",", "0.305`", ",", 
   "0.31`", ",", "0.315`", ",", "0.32`", ",", "0.325`", ",", 
   "0.32999999999999996`", ",", "0.33499999999999996`", ",", 
   "0.33999999999999997`", ",", "0.345`", ",", "0.35`", ",", "0.355`", ",", 
   "0.36`", ",", "0.365`", ",", "0.37`", ",", "0.375`", ",", "0.38`", ",", 
   "0.385`", ",", "0.39`", ",", "0.395`", ",", "0.4`", ",", "0.405`", ",", 
   "0.41000000000000003`", ",", "0.41500000000000004`", ",", 
   "0.42000000000000004`", ",", "0.42500000000000004`", ",", 
   "0.43000000000000005`", ",", "0.43500000000000005`", ",", 
   "0.43999999999999995`", ",", "0.44499999999999995`", ",", 
   "0.44999999999999996`", ",", "0.45499999999999996`", ",", 
   "0.45999999999999996`", ",", "0.46499999999999997`", ",", "0.47`", ",", 
   "0.475`", ",", "0.48`", ",", "0.485`", ",", "0.49`", ",", "0.495`", ",", 
   "0.5`", ",", "0.505`", ",", "0.51`", ",", "0.515`", ",", "0.52`", ",", 
   "0.525`", ",", "0.53`", ",", "0.535`", ",", "0.54`", ",", "0.545`", ",", 
   "0.55`", ",", "0.555`", ",", "0.56`", ",", "0.5650000000000001`", ",", 
   "0.57`", ",", "0.575`", ",", "0.58`", ",", "0.585`", ",", "0.59`", ",", 
   "0.595`", ",", "0.6`"}], "}"}]], "Output",
 CellChangeTimes->{3.743742173192466*^9, 3.743744630091731*^9, 
  3.745326162677362*^9}]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{"Do", "[", 
   RowBox[{
    RowBox[{"swaveccspectra", "[", 
     RowBox[{"i", ",", 
      RowBox[{"Tscancorig", "[", 
       RowBox[{"[", 
        RowBox[{"31", ";;"}], "]"}], "]"}]}], "]"}], ",", 
    RowBox[{"{", 
     RowBox[{"i", ",", 
      RowBox[{"Length", "[", 
       RowBox[{"Tscancorig", "[", 
        RowBox[{"[", 
         RowBox[{"31", ";;"}], "]"}], "]"}], "]"}]}], "}"}]}], "]"}], "//", 
  "AbsoluteTiming"}]], "Input",
 CellChangeTimes->{{3.728933359292989*^9, 3.728933362027852*^9}, {
  3.729839091943986*^9, 3.7298390941512823`*^9}, {3.730007158009296*^9, 
  3.730007173757739*^9}, {3.730007395541212*^9, 3.7300074047007923`*^9}, {
  3.7300956579830637`*^9, 3.7300956714067*^9}, {3.7331193685238667`*^9, 
  3.733119388052079*^9}, {3.733229002019576*^9, 3.7332290054678097`*^9}, {
  3.733294668540216*^9, 3.733294671589388*^9}, {3.7422174364369907`*^9, 
  3.7422174379809513`*^9}, {3.7465083590949802`*^9, 3.7465083608624077`*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"Do", "[", 
   RowBox[{
    RowBox[{"swaveccuspectra", "[", 
     RowBox[{"i", ",", "Tscancorig"}], "]"}], ",", 
    RowBox[{"{", 
     RowBox[{"i", ",", 
      RowBox[{"Length", "[", "Tscancorig", "]"}]}], "}"}]}], "]"}], "//", 
  "AbsoluteTiming"}]], "Input",
 CellChangeTimes->{
  3.733211653597514*^9, {3.733229014339467*^9, 3.733229018787479*^9}, {
   3.7332946555940523`*^9, 3.7332946649052143`*^9}, {3.743506542901225*^9, 
   3.7435065456418333`*^9}}],

Cell[BoxData["$Aborted"], "Output",
 CellChangeTimes->{3.733393474001999*^9}]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{"Do", "[", 
   RowBox[{
    RowBox[{"swavecclspectra", "[", 
     RowBox[{"i", ",", 
      RowBox[{"Tscancorig", "[", 
       RowBox[{"[", 
        RowBox[{"26", ";;"}], "]"}], "]"}]}], "]"}], ",", 
    RowBox[{"{", 
     RowBox[{"i", ",", 
      RowBox[{"Length", "[", 
       RowBox[{"Tscancorig", "[", 
        RowBox[{"[", 
         RowBox[{"26", ";;"}], "]"}], "]"}], "]"}]}], "}"}]}], "]"}], "//", 
  "AbsoluteTiming"}]], "Input",
 CellChangeTimes->{{3.733211663813525*^9, 3.733211664905531*^9}, {
  3.733229025987722*^9, 3.733229029627775*^9}, {3.74671260779277*^9, 
  3.746712616717125*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"Do", "[", 
   RowBox[{
    RowBox[{"pwaveccspectrau", "[", 
     RowBox[{"i", ",", "Tscanc"}], "]"}], ",", 
    RowBox[{"{", 
     RowBox[{"i", ",", 
      RowBox[{"Length", "[", "Tscanc", "]"}]}], "}"}]}], "]"}], "//", 
  "AbsoluteTiming"}]], "Input"],

Cell[BoxData[
 RowBox[{
  RowBox[{"Do", "[", 
   RowBox[{
    RowBox[{"swavebbspectra", "[", 
     RowBox[{"i", ",", "Tscanborig"}], "]"}], ",", 
    RowBox[{"{", 
     RowBox[{"i", ",", 
      RowBox[{"Length", "[", "Tscanb", "]"}]}], "}"}]}], "]"}], "//", 
  "AbsoluteTiming"}]], "Input",
 CellChangeTimes->{{3.725274688827108*^9, 3.7252746921689157`*^9}, {
   3.726314352501986*^9, 3.726314352595883*^9}, {3.7264025876977463`*^9, 
   3.7264025901211853`*^9}, {3.726564747997864*^9, 3.72656475634035*^9}, {
   3.72657522016017*^9, 3.72657522520866*^9}, {3.726837005709298*^9, 
   3.7268370281174517`*^9}, {3.727439373867774*^9, 3.727439374658628*^9}, 
   3.727606951248332*^9, {3.7435065808390827`*^9, 3.7435065812868633`*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"Do", "[", 
   RowBox[{
    RowBox[{"swavebbspectrau", "[", 
     RowBox[{"i", ",", "Tscanborig"}], "]"}], ",", 
    RowBox[{"{", 
     RowBox[{"i", ",", 
      RowBox[{"Length", "[", "Tscanb", "]"}]}], "}"}]}], "]"}], "//", 
  "AbsoluteTiming"}]], "Input",
 CellChangeTimes->{
  3.728469127565364*^9, {3.7435065857274847`*^9, 3.7435065860385017`*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"Do", "[", 
   RowBox[{
    RowBox[{"swavebbspectral", "[", 
     RowBox[{"i", ",", "Tscanborig"}], "]"}], ",", 
    RowBox[{"{", 
     RowBox[{"i", ",", 
      RowBox[{"Length", "[", "Tscanb", "]"}]}], "}"}]}], "]"}], "//", 
  "AbsoluteTiming"}]], "Input",
 CellChangeTimes->{
  3.72846912896104*^9, {3.743506588862314*^9, 3.743506589255273*^9}}]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Continuum Energies", "Section",
 CellChangeTimes->{{3.727415296394449*^9, 3.727415310980733*^9}, {
  3.727438974368733*^9, 3.7274389775611553`*^9}, {3.7274415699177094`*^9, 
  3.727441571125741*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"2", "Mc"}], "+", 
  RowBox[{"Table", "[", 
   RowBox[{
    RowBox[{"ReVsb", "[", 
     RowBox[{"100000", ",", 
      RowBox[{"mDcal", "[", 
       RowBox[{
        RowBox[{"2", "\[Pi]"}], ",", 
        RowBox[{"Tscancorig", "[", 
         RowBox[{"[", "i", "]"}], "]"}], ",", 
        RowBox[{"kfinal", "[", 
         RowBox[{"[", "1", "]"}], "]"}], ",", 
        RowBox[{"kfinal", "[", 
         RowBox[{"[", "2", "]"}], "]"}]}], "]"}], ",", 
      RowBox[{"\[Alpha]cont", "[", 
       RowBox[{"[", "1", "]"}], "]"}], ",", 
      RowBox[{"\[Sigma]cont", "[", 
       RowBox[{"[", "1", "]"}], "]"}], ",", 
      RowBox[{"ccont", "[", 
       RowBox[{"[", "1", "]"}], "]"}]}], "]"}], ",", 
    RowBox[{"{", 
     RowBox[{"i", ",", "1", ",", 
      RowBox[{"Length", "[", "Tscancorig", "]"}]}], "}"}]}], "]"}]}]], "Input",\

 CellChangeTimes->{{3.727415329654827*^9, 3.727415395125635*^9}, {
   3.727419032739399*^9, 3.72741906893994*^9}, {3.727421895354998*^9, 
   3.727421965803722*^9}, {3.7274307503359957`*^9, 3.727430756438754*^9}, 
   3.727430792744117*^9, {3.727430844015986*^9, 3.72743086825692*^9}, {
   3.727435921951792*^9, 3.727435928127816*^9}, {3.727435989113798*^9, 
   3.727435990152746*^9}, {3.727440645712977*^9, 3.72744064973628*^9}, 
   3.727440900797185*^9, {3.727441441830037*^9, 3.727441489781925*^9}, {
   3.727441549095484*^9, 3.7274415558390417`*^9}, {3.74350605299688*^9, 
   3.743506054597587*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
  "3.763181332911958`", ",", "3.7518435696663435`", ",", "3.74067477475388`", 
   ",", "3.7296741825826576`", ",", "3.718840436017753`", ",", 
   "3.7081717027404326`", ",", "3.697665773634211`", ",", 
   "3.6873201471683714`", ",", "3.6771320964440526`", ",", 
   "3.6670987219054907`", ",", "3.6572169979301856`", ",", 
   "3.637896007371223`", ",", "3.609972880986729`", ",", "3.583243567833084`",
    ",", "3.557624939878538`", ",", "3.533038410955702`", ",", 
   "3.5094107913671864`", ",", "3.4866745396362857`", ",", 
   "3.464767673116813`", ",", "3.4436334932418915`", ",", 
   "3.423220221697599`", ",", "3.403480600482261`", ",", "3.384371489786864`",
    ",", "3.3658534815309187`", ",", "3.3478905379797643`", ",", 
   "3.3307403962053574`", ",", "3.3145408408882395`", ",", 
   "3.2987241587813605`", ",", "3.283273007458792`", ",", 
   "3.2681711376152407`", ",", "3.2534033065183103`", ",", 
   "3.2389551999786637`", ",", "3.224813360156021`", ",", 
   "3.210965119705163`", ",", "3.1973985417840636`", ",", 
   "3.184102365180179`", ",", "3.171065956267937`", ",", "3.158279262654146`",
    ",", "3.145732767449939`", ",", "3.1334174596594244`", ",", 
   "3.1213247921467273`", ",", "3.109446651602164`", ",", 
   "3.0977753335576863`", ",", "3.086303508214484`", ",", "3.07502420325843`",
    ",", "3.063930776529459`", ",", "3.0530168962326854`", ",", 
   "3.042276524368965`", ",", "3.031703894001095`", ",", "3.021293499212745`",
    ",", "3.01104007372912`", ",", "3.000938582360552`", ",", 
   "2.9909842039083627`", ",", "2.981172321787519`", ",", 
   "2.9714985115200356`", ",", "2.96195853173295`", ",", 
   "2.952548310917463`"}], "}"}]], "Output",
 CellChangeTimes->{
  3.727430794938345*^9, {3.727430847248849*^9, 3.727430884327338*^9}, 
   3.72743592889662*^9, 3.7274359905230417`*^9, 3.7274406531364183`*^9, 
   3.7274409014406137`*^9, {3.727441454899707*^9, 3.727441490492607*^9}, 
   3.727441556474641*^9, 3.7276062557522497`*^9, 3.7276081615624523`*^9, 
   3.727608365761633*^9, 3.727701017406023*^9, 3.7333934903492393`*^9, 
   3.743742133361291*^9, 3.743744632817905*^9, 3.7453261678866367`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"2", "Mc"}], "+", 
  RowBox[{"Table", "[", 
   RowBox[{
    RowBox[{"ReVsb", "[", 
     RowBox[{"100000", ",", 
      RowBox[{"mDcal", "[", 
       RowBox[{
        RowBox[{"2", "\[Pi]"}], ",", 
        RowBox[{"Tscancorig", "[", 
         RowBox[{"[", "i", "]"}], "]"}], ",", 
        RowBox[{"kfinall", "[", 
         RowBox[{"[", "1", "]"}], "]"}], ",", 
        RowBox[{"kfinall", "[", 
         RowBox[{"[", "2", "]"}], "]"}]}], "]"}], ",", 
      RowBox[{"\[Alpha]cont", "[", 
       RowBox[{"[", "1", "]"}], "]"}], ",", 
      RowBox[{"\[Sigma]cont", "[", 
       RowBox[{"[", "1", "]"}], "]"}], ",", 
      RowBox[{"ccont", "[", 
       RowBox[{"[", "1", "]"}], "]"}]}], "]"}], ",", 
    RowBox[{"{", 
     RowBox[{"i", ",", "1", ",", 
      RowBox[{"Length", "[", "Tscancorig", "]"}]}], "}"}]}], "]"}]}]], "Input",\

 CellChangeTimes->{{3.727415329654827*^9, 3.727415395125635*^9}, {
   3.727419032739399*^9, 3.72741906893994*^9}, {3.727421895354998*^9, 
   3.727421965803722*^9}, {3.7274307503359957`*^9, 3.727430756438754*^9}, 
   3.727430792744117*^9, {3.727430844015986*^9, 3.72743086825692*^9}, {
   3.727435921951792*^9, 3.727435928127816*^9}, {3.727435989113798*^9, 
   3.727435990152746*^9}, {3.727440645712977*^9, 3.72744064973628*^9}, 
   3.727440900797185*^9, {3.727441441830037*^9, 3.727441489781925*^9}, {
   3.727441549095484*^9, 3.7274415558390417`*^9}, {3.727701046035239*^9, 
   3.727701049032592*^9}, {3.743506060571969*^9, 3.743506060883605*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
  "3.763181332911958`", ",", "3.7518435696663435`", ",", "3.74067477475388`", 
   ",", "3.7296741825826576`", ",", "3.718840436017753`", ",", 
   "3.7081717027404326`", ",", "3.697665773634211`", ",", 
   "3.6873201471683714`", ",", "3.6771320964440526`", ",", 
   "3.6670987219054907`", ",", "3.6572169979301856`", ",", 
   "3.637896007371223`", ",", "3.609972880986729`", ",", "3.583243567833084`",
    ",", "3.557624939878538`", ",", "3.533038410955702`", ",", 
   "3.5094107913671864`", ",", "3.4866745396362857`", ",", 
   "3.464767673116813`", ",", "3.4436334932418915`", ",", 
   "3.423220221697599`", ",", "3.403480600482261`", ",", "3.384371489786864`",
    ",", "3.3658534815309187`", ",", "3.3478905379797643`", ",", 
   "3.3307403962053574`", ",", "3.3145408408882395`", ",", 
   "3.2987241587813605`", ",", "3.283273007458792`", ",", 
   "3.2681711376152407`", ",", "3.2534033065183103`", ",", 
   "3.2389551999786637`", ",", "3.224813360156021`", ",", 
   "3.210965119705163`", ",", "3.1973985417840636`", ",", 
   "3.184102365180179`", ",", "3.171065956267937`", ",", "3.158279262654146`",
    ",", "3.145732767449939`", ",", "3.1334174596594244`", ",", 
   "3.1213247921467273`", ",", "3.109446651602164`", ",", 
   "3.0977753335576863`", ",", "3.086303508214484`", ",", "3.07502420325843`",
    ",", "3.063930776529459`", ",", "3.0530168962326854`", ",", 
   "3.042276524368965`", ",", "3.031703894001095`", ",", "3.021293499212745`",
    ",", "3.01104007372912`", ",", "3.000938582360552`", ",", 
   "2.9909842039083627`", ",", "2.981172321787519`", ",", 
   "2.9714985115200356`", ",", "2.96195853173295`", ",", 
   "2.952548310917463`"}], "}"}]], "Output",
 CellChangeTimes->{3.7277010503471737`*^9, 3.733393492727314*^9, 
  3.743742135125255*^9, 3.743744635617934*^9, 3.7453261710920258`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"2", "Mc"}], "+", 
  RowBox[{"Table", "[", 
   RowBox[{
    RowBox[{"ReVsb", "[", 
     RowBox[{"100000", ",", 
      RowBox[{"mDcal", "[", 
       RowBox[{
        RowBox[{"2", "\[Pi]"}], ",", 
        RowBox[{"Tscancorig", "[", 
         RowBox[{"[", "i", "]"}], "]"}], ",", 
        RowBox[{"kfinalu", "[", 
         RowBox[{"[", "1", "]"}], "]"}], ",", 
        RowBox[{"kfinalu", "[", 
         RowBox[{"[", "2", "]"}], "]"}]}], "]"}], ",", 
      RowBox[{"\[Alpha]cont", "[", 
       RowBox[{"[", "1", "]"}], "]"}], ",", 
      RowBox[{"\[Sigma]cont", "[", 
       RowBox[{"[", "1", "]"}], "]"}], ",", 
      RowBox[{"ccont", "[", 
       RowBox[{"[", "1", "]"}], "]"}]}], "]"}], ",", 
    RowBox[{"{", 
     RowBox[{"i", ",", "1", ",", 
      RowBox[{"Length", "[", "Tscancorig", "]"}]}], "}"}]}], "]"}]}]], "Input",\

 CellChangeTimes->{{3.727415329654827*^9, 3.727415395125635*^9}, {
   3.727419032739399*^9, 3.72741906893994*^9}, {3.727421895354998*^9, 
   3.727421965803722*^9}, {3.7274307503359957`*^9, 3.727430756438754*^9}, 
   3.727430792744117*^9, {3.727430844015986*^9, 3.72743086825692*^9}, {
   3.727435921951792*^9, 3.727435928127816*^9}, {3.727435989113798*^9, 
   3.727435990152746*^9}, {3.727440645712977*^9, 3.72744064973628*^9}, 
   3.727440900797185*^9, {3.727441441830037*^9, 3.727441489781925*^9}, {
   3.727441549095484*^9, 3.7274415558390417`*^9}, {3.727701046035239*^9, 
   3.727701049032592*^9}, {3.727701100776236*^9, 3.727701103498499*^9}, {
   3.74350606216481*^9, 3.743506062444581*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
  "3.5791830387522943`", ",", "3.567289138433294`", ",", 
   "3.5556503723789357`", ",", "3.5442576206893737`", ",", 
   "3.533102065065233`", ",", "3.5221751972169515`", ",", 
   "3.5114688237828506`", ",", "3.500975069369446`", ",", 
   "3.4906863731702398`", ",", "3.4805954807013757`", ",", 
   "3.4706954368624583`", ",", "3.451441532866215`", ",", 
   "3.4238344753291066`", ",", "3.397623014576678`", ",", 
   "3.3726745497632846`", ",", "3.3488727583081506`", ",", 
   "3.3261154051794732`", ",", "3.3043124125383376`", ",", 
   "3.2833841867442826`", ",", "3.263260181060541`", ",", 
   "3.2438776687450175`", ",", "3.2251806963547076`", ",", 
   "3.207119192276581`", ",", "3.1896482068439953`", ",", 
   "3.1727272637065087`", ",", "3.1565330090648005`", ",", 
   "3.14114900505712`", ",", "3.1261475577959037`", ",", 
   "3.1115088396473602`", ",", "3.097214471583686`", ",", 
   "3.0832473857203793`", ",", "3.069591704316709`", ",", 
   "3.0562326316670503`", ",", "3.043156357895957`", ",", 
   "3.030349973192077`", ",", "3.01780139102723`", ",", "3.0054992807235235`",
    ",", "2.99343300520031`", ",", "2.9815925627395403`", ",", 
   "2.969968542558579`", ",", "2.9585520747764695`", ",", 
   "2.9473347907443856`", ",", "2.936308788655026`", ",", 
   "2.925466595078078`", ",", "2.9148011390509816`", ",", 
   "2.9043057211027543`", ",", "2.893973988399696`", ",", 
   "2.8837999130001233`", ",", "2.873777767367428`", ",", 
   "2.8639021085913052`", ",", "2.85416775655554`", ",", 
   "2.8445697806038126`", ",", "2.83510348178534`", ",", 
   "2.8257643803056323`", ",", "2.8165482016992334`", ",", 
   "2.807450865542591`", ",", "2.7984684722748296`"}], "}"}]], "Output",
 CellChangeTimes->{3.7277010503471737`*^9, 3.727701104179261*^9, 
  3.733393495041349*^9, 3.7437421368192883`*^9, 3.743744636592963*^9, 
  3.745326173906633*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"2", "Mb"}], "+", 
  RowBox[{"Table", "[", 
   RowBox[{
    RowBox[{"ReVsb", "[", 
     RowBox[{"100000", ",", 
      RowBox[{"mDcal", "[", 
       RowBox[{
        RowBox[{"2", "\[Pi]"}], ",", 
        RowBox[{"Tscanborig", "[", 
         RowBox[{"[", "i", "]"}], "]"}], ",", 
        RowBox[{"kfinal", "[", 
         RowBox[{"[", "1", "]"}], "]"}], ",", 
        RowBox[{"kfinal", "[", 
         RowBox[{"[", "2", "]"}], "]"}]}], "]"}], ",", 
      RowBox[{"\[Alpha]cont", "[", 
       RowBox[{"[", "1", "]"}], "]"}], ",", 
      RowBox[{"\[Sigma]cont", "[", 
       RowBox[{"[", "1", "]"}], "]"}], ",", 
      RowBox[{"ccont", "[", 
       RowBox[{"[", "1", "]"}], "]"}]}], "]"}], ",", 
    RowBox[{"{", 
     RowBox[{"i", ",", "1", ",", 
      RowBox[{"Length", "[", "Tscanborig", "]"}]}], "}"}]}], "]"}]}]], "Input",\

 CellChangeTimes->{{3.727422276937283*^9, 3.727422316833344*^9}, {
  3.727436086210723*^9, 3.727436090850267*^9}, {3.727436126467115*^9, 
  3.727436128483083*^9}, {3.727441501086624*^9, 3.727441564686953*^9}, {
  3.7435060639965477`*^9, 3.743506065563201*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
  "10.58923628377765`", ",", "10.534226653606126`", ",", 
   "10.483271948795878`", ",", "10.436027831852423`", ",", 
   "10.392100981483651`", ",", "10.351114394832186`", ",", 
   "10.31272949050198`", ",", "10.276650609682116`", ",", 
   "10.24262265998009`", ",", "10.210426440652556`", ",", 
   "10.179873558932522`", ",", "10.151351836066674`", ",", 
   "10.124779109647054`", ",", "10.099222196348231`", ",", 
   "10.074607378577106`", ",", "10.050868311021715`", ",", 
   "10.027945098041112`", ",", "10.005783491956423`", ",", 
   "9.984334213519839`", ",", "9.963552362989178`", ",", "9.943396915218841`",
    ",", "9.92383028442338`", ",", "9.904817948228562`", ",", 
   "9.886328121909221`", ",", "9.868331475234658`", ",", "9.850800885553422`",
    ",", "9.833711221790352`", ",", "9.817039154774056`", ",", 
   "9.800762989788248`", ",", "9.78486252068906`", ",", "9.769318895519934`", 
   ",", "9.754114502501272`", ",", "9.739232867357634`", ",", 
   "9.724658557243744`", ",", "9.71037709821086`", ",", "9.696374902529463`", 
   ",", "9.682639197706262`", ",", "9.669157966194666`", ",", 
   "9.655919891674172`", ",", "9.642914305398403`", ",", "9.630131142495102`",
    ",", "9.617560899567092`", ",", "9.605194594755673`", ",", 
   "9.593023735158647`", ",", "9.581040281820588`", ",", "9.56923662195106`", 
   ",", "9.55760554066793`", ",", "9.546140195597411`", ",", 
   "9.534834094498203`", ",", "9.52368107219188`", ",", "9.512675272330092`", 
   ",", "9.501811127015541`", ",", "9.491083341361769`", ",", 
   "9.480486875835359`", ",", "9.470016932862476`", ",", "9.459668941593367`",
    ",", "9.44943854620343`", ",", "9.439321592674228`", ",", 
   "9.429314118581926`", ",", "9.419412341545232`", ",", "9.40961265030515`", 
   ",", "9.399911594606197`", ",", "9.390305877331679`", ",", 
   "9.380792345702346`", ",", "9.371367984202703`", ",", "9.362029907041354`",
    ",", "9.352775351644434`", ",", "9.34360167229153`", ",", 
   "9.334506334071014`", ",", "9.325486907469063`", ",", "9.31654106290543`", 
   ",", "9.307666565945729`", ",", "9.298861272458458`", ",", 
   "9.290123124350437`", ",", "9.281450145270922`", ",", "9.272840436784044`",
    ",", "9.264292174577834`", ",", "9.255803605002086`", ",", 
   "9.247373041726298`", ",", "9.238998862609098`", ",", "9.23067950672692`", 
   ",", "9.222413471569432`", ",", "9.214199310361348`", ",", 
   "9.206035629567364`", ",", "9.197921086474913`", ",", "9.18985438694353`", 
   ",", "9.181834283265156`", ",", "9.173859572105156`", ",", 
   "9.165929092579036`", ",", "9.158041724415769`", ",", 
   "9.150196386213752`"}], "}"}]], "Output",
 CellChangeTimes->{{3.727422278964765*^9, 3.727422317765297*^9}, 
   3.727436091516931*^9, 3.72743612877216*^9, {3.727441513483501*^9, 
   3.727441532911517*^9}, 3.7274415653440447`*^9, 3.72760695509595*^9, 
   3.743742179241749*^9, 3.745326175676339*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"2", "Mb"}], "+", 
  RowBox[{"Table", "[", 
   RowBox[{
    RowBox[{"ReV", "[", 
     RowBox[{"100000", ",", 
      RowBox[{"mDcal", "[", 
       RowBox[{
        RowBox[{"2", "\[Pi]"}], ",", 
        RowBox[{"Tscanborig", "[", 
         RowBox[{"[", "i", "]"}], "]"}], ",", 
        RowBox[{"kfinall", "[", 
         RowBox[{"[", "1", "]"}], "]"}], ",", 
        RowBox[{"kfinall", "[", 
         RowBox[{"[", "2", "]"}], "]"}]}], "]"}], ",", 
      RowBox[{"\[Alpha]cont", "[", 
       RowBox[{"[", "1", "]"}], "]"}], ",", 
      RowBox[{"\[Sigma]cont", "[", 
       RowBox[{"[", "1", "]"}], "]"}], ",", 
      RowBox[{"ccont", "[", 
       RowBox[{"[", "1", "]"}], "]"}]}], "]"}], ",", 
    RowBox[{"{", 
     RowBox[{"i", ",", "1", ",", 
      RowBox[{"Length", "[", "Tscanborig", "]"}]}], "}"}]}], "]"}]}]], "Input",\

 CellChangeTimes->{{3.727701620681362*^9, 3.7277016228229237`*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
  "11.37690860675615`", ",", "11.133758350670227`", ",", 
   "10.953960335622138`", ",", "10.814107578444037`", ",", 
   "10.701167689825878`", ",", "10.607292417224789`", ",", 
   "10.52746319350613`", ",", "10.458314872854425`", ",", 
   "10.39750233282896`", ",", "10.343338248555575`", ",", 
   "10.294575461050309`", ",", "10.25109165466662`", ",", 
   "10.212152072986566`", ",", "10.175984055081795`", ",", 
   "10.142222434511147`", ",", "10.110566228260826`", ",", 
   "10.080764867289595`", ",", "10.052607848051313`", ",", 
   "10.025916866765758`", ",", "10.000539750505004`", ",", 
   "9.97634572778627`", ",", "9.953221702457093`", ",", "9.931069289699568`", 
   ",", "9.909802436992523`", ",", "9.889345498680433`", ",", 
   "9.869631665599941`", ",", "9.850601675077675`", ",", "9.832202744014436`",
    ",", "9.81438768053418`", ",", "9.79711414254867`", ",", 
   "9.780344008177279`", ",", "9.764042848838171`", ",", "9.748179480147519`",
    ",", "9.73272557378001`", ",", "9.717655328220134`", ",", 
   "9.702945186703925`", ",", "9.688573587571355`", ",", "9.674520751491638`",
    ",", "9.660768497011924`", ",", "9.647300074286735`", ",", 
   "9.634100024473295`", ",", "9.621154053441245`", ",", "9.608448919099745`",
    ",", "9.595972335739521`", ",", "9.583712883962274`", ",", 
   "9.571659934976346`", ",", "9.559803580377501`", ",", "9.548134570016122`",
    ",", "9.536644257410618`", ",", "9.525324548328694`", ",", 
   "9.514167857651648`", ",", "9.503167066989114`", ",", "9.492315489860067`",
    ",", "9.481606836860832`", ",", "9.47103518710574`", ",", 
   "9.460594959520506`", ",", "9.450280889215538`", ",", "9.44008800365047`", 
   ",", "9.430011603000013`", ",", "9.420047240198961`", ",", 
   "9.410190704548265`", ",", "9.400438004919438`", ",", "9.390785355939638`",
    ",", "9.381229163866617`", ",", "9.371766014761114`", ",", 
   "9.36239266268907`", ",", "9.353106019404594`", ",", "9.343903144570156`", 
   ",", "9.334781236648817`", ",", "9.325737624745503`", ",", 
   "9.316769760674456`", ",", "9.307875211954903`", ",", "9.299051654974537`",
    ",", "9.290296868932524`", ",", "9.281608729929888`", ",", 
   "9.272985205689324`", ",", "9.264424350455254`", ",", "9.255924300352044`",
    ",", "9.247483268978087`", ",", "9.239099543315492`", ",", 
   "9.230771479892514`", ",", "9.222497501196802`", ",", "9.214276092290644`",
    ",", "9.206105797677424`", ",", "9.197985218307117`", ",", 
   "9.18991300880364`", ",", "9.181887874852894`", ",", "9.173908570716351`", 
   ",", "9.165973896920834`", ",", "9.158082698071423`", ",", 
   "9.150233860789964`"}], "}"}]], "Output",
 CellChangeTimes->{3.72770162335463*^9, 3.743742181075818*^9, 
  3.745326178130927*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"2", "Mb"}], "+", 
  RowBox[{"Table", "[", 
   RowBox[{
    RowBox[{"ReV", "[", 
     RowBox[{"100000", ",", 
      RowBox[{"mDcal", "[", 
       RowBox[{
        RowBox[{"2", "\[Pi]"}], ",", 
        RowBox[{"Tscanborig", "[", 
         RowBox[{"[", "i", "]"}], "]"}], ",", 
        RowBox[{"kfinalu", "[", 
         RowBox[{"[", "1", "]"}], "]"}], ",", 
        RowBox[{"kfinalu", "[", 
         RowBox[{"[", "2", "]"}], "]"}]}], "]"}], ",", 
      RowBox[{"\[Alpha]cont", "[", 
       RowBox[{"[", "1", "]"}], "]"}], ",", 
      RowBox[{"\[Sigma]cont", "[", 
       RowBox[{"[", "1", "]"}], "]"}], ",", 
      RowBox[{"ccont", "[", 
       RowBox[{"[", "1", "]"}], "]"}]}], "]"}], ",", 
    RowBox[{"{", 
     RowBox[{"i", ",", "1", ",", 
      RowBox[{"Length", "[", "Tscanborig", "]"}]}], "}"}]}], "]"}]}]], "Input",\

 CellChangeTimes->{{3.7277016586540737`*^9, 3.727701661137645*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
  "10.733471264419798`", ",", "10.601042450894274`", ",", 
   "10.496194206789603`", ",", "10.410163166482977`", ",", 
   "10.337606410601257`", ",", "10.275071734605609`", ",", 
   "10.220223394953713`", ",", "10.171420630768415`", ",", 
   "10.127474412799389`", ",", "10.087500117852997`", ",", 
   "10.050824623602853`", ",", "10.017418259253223`", ",", 
   "9.986867208494267`", ",", "9.95811743138849`", ",", "9.930951988942066`", 
   ",", "9.905189335634025`", ",", "9.880676204694083`", ",", 
   "9.857282158882251`", ",", "9.834895377234453`", ",", "9.813419351538418`",
    ",", "9.792770273632954`", ",", "9.772874948354755`", ",", 
   "9.753669111814911`", ",", "9.735096065154668`", ",", "9.717105556164142`",
    ",", "9.69965285731419`", ",", "9.68269800069132`", ",", 
   "9.666205139148632`", ",", "9.650142009548773`", ",", "9.634479480724313`",
    ",", "9.619191166878018`", ",", "9.60425310103977`", ",", 
   "9.589643454632235`", ",", "9.575342293898457`", ",", "9.561331371466018`",
    ",", "9.547593946251913`", ",", "9.534114623959331`", ",", 
   "9.520879219707867`", ",", "9.507874637939612`", ",", "9.495088764650436`",
    ",", "9.482510374622207`", ",", "9.470129048202965`", ",", 
   "9.457935097105425`", ",", "9.445919499871376`", ",", "9.434073842484448`",
    ",", "9.422390266813979`", ",", "9.410861423509061`", ",", 
   "9.399480429956697`", ",", "9.388240832668831`", ",", "9.377136572845517`",
    ",", "9.366161955873023`", ",", "9.355311623115119`", ",", 
   "9.344580526811967`", ",", "9.33396390692256`", ",", "9.323457270249204`", 
   ",", "9.313056371334923`", ",", "9.302757194964805`", ",", 
   "9.292555940327167`", ",", "9.28244900623269`", ",", "9.272432977932091`", 
   ",", "9.262504614529453`", ",", "9.252660837975004`", ",", 
   "9.242898722282563`", ",", "9.233215484269445`", ",", "9.22360847433725`", 
   ",", "9.214075168533466`", ",", "9.204613160787419`", ",", 
   "9.195220155882808`", ",", "9.18589396308152`", ",", "9.176632489780635`", 
   ",", "9.167433736204565`", ",", "9.158295789809722`", ",", 
   "9.149216820786384`", ",", "9.140195077085489`", ",", "9.131228880607853`",
    ",", "9.122316622812127`", ",", "9.113456761383405`", ",", 
   "9.10464781647803`", ",", "9.095888367634386`", ",", "9.08717705073061`", 
   ",", "9.078512554959204`", ",", "9.069893620479226`", ",", 
   "9.061319035461572`", ",", "9.052787634186481`", ",", "9.044298294443827`",
    ",", "9.035849935635342`", ",", "9.027441516827041`", ",", 
   "9.019072034759612`", ",", "9.010740522178438`", ",", "9.002446046176203`",
    ",", "8.994187706631605`"}], "}"}]], "Output",
 CellChangeTimes->{3.743742183230177*^9, 3.745326179665771*^9}]
}, Open  ]]
}, Closed]],

Cell[CellGroupData[{

Cell["Spectra without string-breaking", "Section",
 CellChangeTimes->{{3.727415296394449*^9, 3.727415310980733*^9}, {
  3.727438974368733*^9, 3.7274389775611553`*^9}, {3.7274415699177094`*^9, 
  3.727441571125741*^9}, {3.745577449918088*^9, 3.745577465526945*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"ImV", "[", 
    RowBox[{"r_", ",", "mD_", ",", "\[Alpha]_", ",", "\[Sigma]_", ",", "T_"}],
     "]"}], ":=", 
   RowBox[{
    RowBox[{"T", " ", "\[Alpha]", " ", 
     RowBox[{"(", 
      RowBox[{"1", "-", 
       RowBox[{
        FractionBox["1", "2"], " ", 
        SqrtBox["\[Pi]"], " ", 
        RowBox[{"MeijerG", "[", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{
            RowBox[{"{", "0", "}"}], ",", 
            RowBox[{"{", "}"}]}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"{", 
             RowBox[{"0", ",", "1"}], "}"}], ",", 
            RowBox[{"{", 
             RowBox[{"-", 
              FractionBox["1", "2"]}], "}"}]}], "}"}], ",", 
          FractionBox[
           RowBox[{
            SuperscriptBox["mD", "2"], " ", 
            SuperscriptBox["r", "2"]}], "4"]}], "]"}]}]}], ")"}]}], "+", 
    RowBox[{
     FractionBox["1", "4"], " ", "mD", " ", 
     SqrtBox["\[Pi]"], " ", 
     SuperscriptBox["r", "3"], " ", "T", " ", "\[Sigma]", " ", 
     RowBox[{"MeijerG", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{
           RowBox[{"-", 
            FractionBox["1", "2"]}], ",", 
           RowBox[{"-", 
            FractionBox["1", "2"]}]}], "}"}], ",", 
         RowBox[{"{", "}"}]}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{
           FractionBox["1", "2"], ",", 
           FractionBox["1", "2"]}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"-", 
            FractionBox["3", "2"]}], ",", 
           RowBox[{"-", "1"}]}], "}"}]}], "}"}], ",", 
       FractionBox[
        RowBox[{
         SuperscriptBox["mD", "2"], " ", 
         SuperscriptBox["r", "2"]}], "4"]}], "]"}]}]}]}], ";"}]], "Input"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"ImVc", "[", 
  RowBox[{"1000000", ",", 
   RowBox[{"mDcal", "[", 
    RowBox[{
     RowBox[{"2", "\[Pi]"}], ",", "0.155", ",", 
     RowBox[{"kfinal", "[", 
      RowBox[{"[", "1", "]"}], "]"}], ",", 
     RowBox[{"kfinal", "[", 
      RowBox[{"[", "2", "]"}], "]"}]}], "]"}], ",", 
   RowBox[{"\[Alpha]cont", "[", 
    RowBox[{"[", "1", "]"}], "]"}], ",", "0.155"}], "]"}]], "Input",
 CellChangeTimes->{{3.745577872707444*^9, 3.745577874393169*^9}, {
  3.74557964044923*^9, 3.7455796426334267`*^9}, {3.745579711091261*^9, 
  3.7455797233061247`*^9}, {3.745579812379731*^9, 3.745579827661113*^9}}],

Cell[BoxData["0.07976306974654478`"], "Output",
 CellChangeTimes->{{3.745579821155539*^9, 3.745579828142853*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Block", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"mD", "=", 
     RowBox[{"mDcal", "[", 
      RowBox[{
       RowBox[{"2", "\[Pi]"}], ",", "0.155", ",", 
       RowBox[{"kfinal", "[", 
        RowBox[{"[", "1", "]"}], "]"}], ",", 
       RowBox[{"kfinal", "[", 
        RowBox[{"[", "2", "]"}], "]"}]}], "]"}]}], "}"}], ",", 
   RowBox[{"Show", "[", 
    RowBox[{"DiscretePlot", "[", 
     RowBox[{
      RowBox[{"ImVc", "[", 
       RowBox[{
        FractionBox["r", "0.197"], ",", "mD", ",", 
        RowBox[{"\[Alpha]cont", "[", 
         RowBox[{"[", "1", "]"}], "]"}], ",", "0.155"}], "]"}], ",", 
      RowBox[{"{", 
       RowBox[{"r", ",", "1", ",", "100", ",", "1"}], "}"}], ",", 
      RowBox[{"Joined", "\[Rule]", "True"}], ",", 
      RowBox[{"Filling", "\[Rule]", "None"}], ",", 
      RowBox[{"AxesStyle", "\[Rule]", 
       RowBox[{"Directive", "[", 
        RowBox[{
         RowBox[{"FontSize", "\[Rule]", "25"}], ",", 
         RowBox[{"Thickness", "\[Rule]", "0.004"}], ",", 
         RowBox[{"FontFamily", "\[Rule]", "\"\<Helvetica\>\""}], ",", 
         "Black"}], "]"}]}], ",", 
      RowBox[{"BaseStyle", "\[Rule]", 
       RowBox[{"{", 
        RowBox[{"FontSize", "\[Rule]", "14"}], "}"}]}], ",", 
      RowBox[{"PlotRange", "\[Rule]", "All"}], ",", 
      RowBox[{"AspectRatio", "\[Rule]", "0.85"}], ",", 
      RowBox[{"AxesLabel", "\[Rule]", 
       RowBox[{"{", 
        RowBox[{"\"\<r [fm]\>\"", ",", "\"\<Im[V]\>\""}], "}"}]}], ",", 
      RowBox[{"PlotLabel", "\[Rule]", 
       RowBox[{"Style", "[", 
        RowBox[{"\"\<T=150MeV\>\"", ",", 
         RowBox[{"FontSize", "\[Rule]", "25"}], ",", 
         RowBox[{"FontFamily", "\[Rule]", "\"\<Helvetica\>\""}], ",", 
         "Black"}], "]"}]}], ",", 
      RowBox[{"ImageSize", "\[Rule]", 
       RowBox[{"{", 
        RowBox[{"600", ",", "600"}], "}"}]}]}], "]"}], "]"}]}], 
  "]"}]], "Input",
 CellChangeTimes->{{3.745577653292407*^9, 3.745577656044977*^9}, {
  3.745577794695994*^9, 3.7455778033519907`*^9}, {3.745577837697983*^9, 
  3.745577861602961*^9}, {3.7455797727340918`*^9, 3.745579808974224*^9}}],

Cell[BoxData[
 GraphicsBox[{
   {RGBColor[0.368417, 0.506779, 0.709798], PointSize[0.004766666666666667], 
    AbsoluteThickness[1.6]}, 
   {RGBColor[0.368417, 0.506779, 0.709798], PointSize[0.004766666666666667], 
    AbsoluteThickness[1.6], LineBox[CompressedData["
1:eJw9y2tM02cYxuG/tCOICYENBQZjFUUIQ5ECcijYu5wpp9JS2jKxyARHMeBm
NYsj2B3E4zDgWIkiwQ94qKVCkajZllQMViGYzGRbAJmTxIlRM5ZMDRPD+NDn
eZPnw/Xe+a2taVLXigRBWLF8O5fPS6A3Lz92eFx1L+K03POBB6LQHYGPLnrs
g2/rbXnnHVc89ofduLfB4Bj0OBCBVQ//nHY4PQ6Gy/rUPSgf8jgM9jemkeFO
sgRHk8qqnePkCETeq6/d8zd5PWwDbxoUPlc93gDhxJRE+j45Gvsqw7zORJFj
4DbLtHPx5FgUovexkEbehJIWv5vNIG+Gxr7UdiuHHA+9bfC9cCVZii7xOqer
mJyAF5LIl7+oyIn40Xv1SKOGnASHb/qH/VryFoQlqFf36MjJELVsfFtiIKfA
+lVHw1glORWzXnengreR02DuPrBBUUWWoci+/0n+dnI6Ope+u55oJGdgj3vS
5FNN3gpT/+RGN1uOy18ed+zdQQZCzl6I86/x2AL4XUk720MWFLhxLeCM5BPa
FdA+ud1uJQuZ8JNJr4t30p6JUe+DofVkIQvPgob7RnnPwlxU0LrQWtqzcUvd
kWsiW7Lx8YXd/UO850DSr5t9zXsOgrtE1cl1tOfCV6Y89TnZkousWPHMJd7z
4L/ww6kZ3vMgaPPFfrtoz0ecy2iWkS35SOxbG1HHewE0r3tz2ngvwPzj5oCr
vCtx/1LL0O+8K7EyK1K7wHshjMPhYSGf0l6I0VeDMclkoQirLof2angvworv
H3Y18l6MjBT/uCO8F2N+TduBXt5LYG2Vt1/jvQSZ8ZmHJ3gvxX/eQU2zvJfC
qLpreMW7Che/CdCtrPcYKkxUmfeFki0qTA9tH4klu1RYNG5VZpCFMhSe6wou
5r4MnanhKdu4L8PssZ+dJu7L8PaFs/0L7tXINVtnDnGvRrSisaeDezV+Ozcw
3cO9Gj+9Y+i2ca/B/pfP/xrmXoPFiNabLu41aLZNxY9zr8GDruyMX7kvx8mx
O3N/cF+OqIQPUue4L0dlt0P6D/flOPi0b3KBey02P3se72WiXoueCancl2zR
YilmXvwu2aVF35ipNYQsVEAceOO2hPsKtKeP3onivgIDW1QnN3Ffgcm6f8OS
uNfh6Ppos4x7HUSrYFVwr0NK+GdH8rjXQee+X1DMvR677dUzau718K9bzNZz
r4doTdPXVdzr8dEjk7WGewPSS08c2rXs/wHPUL39
     "]], {}, {}}},
  AspectRatio->0.85,
  Axes->True,
  AxesLabel->{
    FormBox["\"r [fm]\"", TraditionalForm], 
    FormBox["\"Im[V]\"", TraditionalForm]},
  AxesOrigin->{1., 0.025523399049127295`},
  AxesStyle->Directive[
   FontSize -> 25, Thickness -> 0.004, FontFamily -> "Helvetica", 
    GrayLevel[0]],
  BaseStyle->{FontSize -> 14},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  ImageSize->{600, 600},
  Method->{
   "MessagesHead" -> DiscretePlot, "AxisPadding" -> Scaled[0.02], 
    "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
    AbsolutePointSize[6], "DefaultPlotStyle" -> {
      Directive[
       RGBColor[0.368417, 0.506779, 0.709798], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.880722, 0.611041, 0.142051], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.560181, 0.691569, 0.194885], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.922526, 0.385626, 0.209179], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.528488, 0.470624, 0.701351], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.772079, 0.431554, 0.102387], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.363898, 0.618501, 0.782349], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[1, 0.75, 0], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.647624, 0.37816, 0.614037], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.571589, 0.586483, 0.], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.915, 0.3325, 0.2125], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.40082222609352647`, 0.5220066643438841, 0.85], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.9728288904374106, 0.621644452187053, 0.07336199581899142], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.736782672705901, 0.358, 0.5030266573755369], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.28026441037696703`, 0.715, 0.4292089322474965], 
       AbsoluteThickness[1.6]]}, "DomainPadding" -> Scaled[0.02], 
    "PointSizeFunction" -> "SmallPointSize", "RangePadding" -> Scaled[0.05]},
  PlotLabel->FormBox[
    StyleBox["\"T=150MeV\"", FontSize -> 25, FontFamily -> "Helvetica", 
     GrayLevel[0], StripOnInput -> False], TraditionalForm],
  PlotRange->{{1., 100.}, {0.025523399049127295`, 0.07974860201312323}},
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.02], 
     Scaled[0.02]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{
  3.745577810841693*^9, {3.745577844395257*^9, 3.745577864054736*^9}, 
   3.7455797792488832`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"Series", "[", 
   RowBox[{
    RowBox[{
     FractionBox["1", "4"], " ", "mD", " ", 
     SqrtBox["\[Pi]"], " ", 
     SuperscriptBox["r", "3"], " ", "T", " ", "\[Sigma]", " ", 
     RowBox[{"MeijerG", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{
           RowBox[{"-", 
            FractionBox["1", "2"]}], ",", 
           RowBox[{"-", 
            FractionBox["1", "2"]}]}], "}"}], ",", 
         RowBox[{"{", "}"}]}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{
           FractionBox["1", "2"], ",", 
           FractionBox["1", "2"]}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"-", 
            FractionBox["3", "2"]}], ",", 
           RowBox[{"-", "1"}]}], "}"}]}], "}"}], ",", 
       FractionBox[
        RowBox[{
         SuperscriptBox["mD", "2"], " ", 
         SuperscriptBox["r", "2"]}], "4"]}], "]"}]}], ",", 
    RowBox[{"{", 
     RowBox[{"r", ",", "\[Infinity]", ",", "10"}], "}"}]}], "]"}], "//", 
  "FullSimplify"}]], "Input",
 CellChangeTimes->{{3.745580045184705*^9, 3.745580054032996*^9}, {
   3.745580114875794*^9, 3.745580122327056*^9}, 3.745580324784594*^9, {
   3.7455804302667933`*^9, 3.745580430387451*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{
   SuperscriptBox["\[ExponentialE]", 
    RowBox[{
     RowBox[{"-", "\[ImaginaryI]"}], " ", 
     SqrtBox[
      RowBox[{"-", 
       SuperscriptBox["mD", "2"]}]], " ", "r"}]], " ", 
   RowBox[{"(", 
    InterpretationBox[
     RowBox[{
      FractionBox[
       RowBox[{"mD", " ", "T", " ", "\[Sigma]", " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{
           RowBox[{"-", "\[ImaginaryI]"}], " ", "\[Pi]"}], "+", 
          RowBox[{"Log", "[", 
           RowBox[{"-", 
            SuperscriptBox["mD", "2"]}], "]"}], "-", 
          RowBox[{"Log", "[", 
           SuperscriptBox["mD", "2"], "]"}]}], ")"}], " ", 
        SuperscriptBox["r", "2"]}], 
       RowBox[{"4", " ", 
        SqrtBox[
         SuperscriptBox["mD", "2"]]}]], "-", 
      FractionBox[
       RowBox[{"3", " ", 
        RowBox[{"(", 
         RowBox[{"mD", " ", "T", " ", "\[Sigma]", " ", 
          RowBox[{"(", 
           RowBox[{"\[Pi]", "+", 
            RowBox[{"\[ImaginaryI]", " ", 
             RowBox[{"Log", "[", 
              RowBox[{"-", 
               SuperscriptBox["mD", "2"]}], "]"}]}], "-", 
            RowBox[{"\[ImaginaryI]", " ", 
             RowBox[{"Log", "[", 
              SuperscriptBox["mD", "2"], "]"}]}]}], ")"}]}], ")"}], " ", 
        "r"}], 
       RowBox[{"4", " ", 
        SqrtBox[
         RowBox[{"-", 
          SuperscriptBox["mD", "4"]}]]}]], "+", 
      FractionBox[
       RowBox[{"mD", " ", "T", " ", "\[Sigma]", " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{
           RowBox[{"-", "\[ImaginaryI]"}], " ", "\[Pi]"}], "+", 
          RowBox[{"Log", "[", 
           RowBox[{"-", 
            SuperscriptBox["mD", "2"]}], "]"}], "-", 
          RowBox[{"Log", "[", 
           SuperscriptBox["mD", "2"], "]"}]}], ")"}]}], 
       SuperscriptBox[
        RowBox[{"(", 
         SuperscriptBox["mD", "2"], ")"}], 
        RowBox[{"3", "/", "2"}]]], "+", 
      InterpretationBox[
       SuperscriptBox[
        RowBox[{"O", "[", 
         FractionBox["1", "r"], "]"}], "7"],
       SeriesData[$CellContext`r, 
        DirectedInfinity[1], {}, -2, 7, 1],
       Editable->False]}],
     SeriesData[$CellContext`r, 
      DirectedInfinity[1], {
      Rational[1, 4] $CellContext`mD ($CellContext`mD^2)^
        Rational[-1, 2] $CellContext`T $CellContext`\[Sigma] (
        Complex[0, -1] Pi + Log[-$CellContext`mD^2] - Log[$CellContext`mD^2]),
        Rational[-3, 4] $CellContext`mD (-$CellContext`mD^4)^
        Rational[-1, 2] $CellContext`T $CellContext`\[Sigma] (Pi + 
        Complex[0, 1] Log[-$CellContext`mD^2] + 
        Complex[0, -1] 
         Log[$CellContext`mD^2]), $CellContext`mD ($CellContext`mD^2)^
        Rational[-3, 2] $CellContext`T $CellContext`\[Sigma] (
        Complex[0, -1] Pi + Log[-$CellContext`mD^2] - 
        Log[$CellContext`mD^2])}, -2, 7, 1],
     Editable->False], ")"}]}], "+", 
  RowBox[{
   SuperscriptBox["\[ExponentialE]", 
    RowBox[{"\[ImaginaryI]", " ", 
     SqrtBox[
      RowBox[{"-", 
       SuperscriptBox["mD", "2"]}]], " ", "r"}]], " ", 
   RowBox[{"(", 
    InterpretationBox[
     RowBox[{
      FractionBox[
       RowBox[{"mD", " ", "T", " ", "\[Sigma]", " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"\[ImaginaryI]", " ", "\[Pi]"}], "+", 
          RowBox[{"Log", "[", 
           RowBox[{"-", 
            SuperscriptBox["mD", "2"]}], "]"}], "-", 
          RowBox[{"Log", "[", 
           SuperscriptBox["mD", "2"], "]"}]}], ")"}], " ", 
        SuperscriptBox["r", "2"]}], 
       RowBox[{"4", " ", 
        SqrtBox[
         SuperscriptBox["mD", "2"]]}]], "-", 
      FractionBox[
       RowBox[{"3", " ", 
        RowBox[{"(", 
         RowBox[{"mD", " ", "T", " ", "\[Sigma]", " ", 
          RowBox[{"(", 
           RowBox[{"\[Pi]", "-", 
            RowBox[{"\[ImaginaryI]", " ", 
             RowBox[{"Log", "[", 
              RowBox[{"-", 
               SuperscriptBox["mD", "2"]}], "]"}]}], "+", 
            RowBox[{"\[ImaginaryI]", " ", 
             RowBox[{"Log", "[", 
              SuperscriptBox["mD", "2"], "]"}]}]}], ")"}]}], ")"}], " ", 
        "r"}], 
       RowBox[{"4", " ", 
        SqrtBox[
         RowBox[{"-", 
          SuperscriptBox["mD", "4"]}]]}]], "+", 
      FractionBox[
       RowBox[{
        SqrtBox[
         SuperscriptBox["mD", "2"]], " ", "T", " ", "\[Sigma]", " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"\[ImaginaryI]", " ", "\[Pi]"}], "+", 
          RowBox[{"Log", "[", 
           RowBox[{"-", 
            SuperscriptBox["mD", "2"]}], "]"}], "-", 
          RowBox[{"Log", "[", 
           SuperscriptBox["mD", "2"], "]"}]}], ")"}]}], 
       SuperscriptBox["mD", "3"]], "+", 
      InterpretationBox[
       SuperscriptBox[
        RowBox[{"O", "[", 
         FractionBox["1", "r"], "]"}], "7"],
       SeriesData[$CellContext`r, 
        DirectedInfinity[1], {}, -2, 7, 1],
       Editable->False]}],
     SeriesData[$CellContext`r, 
      DirectedInfinity[1], {
      Rational[1, 4] $CellContext`mD ($CellContext`mD^2)^
        Rational[-1, 2] $CellContext`T $CellContext`\[Sigma] (
        Complex[0, 1] Pi + Log[-$CellContext`mD^2] - Log[$CellContext`mD^2]), 
       Rational[-3, 4] $CellContext`mD (-$CellContext`mD^4)^
        Rational[-1, 2] $CellContext`T $CellContext`\[Sigma] (Pi + 
        Complex[0, -1] Log[-$CellContext`mD^2] + 
        Complex[0, 1] 
         Log[$CellContext`mD^2]), $CellContext`mD^(-3) ($CellContext`mD^2)^
        Rational[1, 2] $CellContext`T $CellContext`\[Sigma] (Complex[0, 1] Pi + 
        Log[-$CellContext`mD^2] - Log[$CellContext`mD^2])}, -2, 7, 1],
     Editable->False], ")"}]}], "+", 
  RowBox[{"(", 
   InterpretationBox[
    RowBox[{
     FractionBox[
      RowBox[{"2", " ", 
       SqrtBox[
        SuperscriptBox["mD", "2"]], " ", "T", " ", "\[Sigma]", " ", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"-", "2"}], "+", 
         RowBox[{"2", " ", "EulerGamma"}], "+", 
         RowBox[{"Log", "[", 
          SuperscriptBox["mD", "2"], "]"}], "-", 
         RowBox[{"2", " ", 
          RowBox[{"Log", "[", 
           FractionBox["1", "r"], "]"}]}]}], ")"}]}], 
      SuperscriptBox["mD", "3"]], "-", 
     FractionBox[
      RowBox[{"16", " ", 
       RowBox[{"(", 
        RowBox[{
         SqrtBox[
          SuperscriptBox["mD", "2"]], " ", "T", " ", "\[Sigma]"}], ")"}]}], 
      RowBox[{
       SuperscriptBox["mD", "5"], " ", 
       SuperscriptBox["r", "2"]}]], "-", 
     FractionBox[
      RowBox[{"216", " ", 
       RowBox[{"(", 
        RowBox[{
         SqrtBox[
          SuperscriptBox["mD", "2"]], " ", "T", " ", "\[Sigma]"}], ")"}]}], 
      RowBox[{
       SuperscriptBox["mD", "7"], " ", 
       SuperscriptBox["r", "4"]}]], "-", 
     FractionBox[
      RowBox[{"7680", " ", 
       RowBox[{"(", 
        RowBox[{
         SqrtBox[
          SuperscriptBox["mD", "2"]], " ", "T", " ", "\[Sigma]"}], ")"}]}], 
      RowBox[{
       SuperscriptBox["mD", "9"], " ", 
       SuperscriptBox["r", "6"]}]], "+", 
     InterpretationBox[
      SuperscriptBox[
       RowBox[{"O", "[", 
        FractionBox["1", "r"], "]"}], "8"],
      SeriesData[$CellContext`r, 
       DirectedInfinity[1], {}, 0, 8, 1],
      Editable->False]}],
    SeriesData[$CellContext`r, 
     DirectedInfinity[1], {
     2 $CellContext`mD^(-3) ($CellContext`mD^2)^
       Rational[1, 2] $CellContext`T $CellContext`\[Sigma] (-2 + 2 EulerGamma + 
       Log[$CellContext`mD^2] - 2 Log[$CellContext`r^(-1)]), 
      0, (-16) $CellContext`mD^(-5) ($CellContext`mD^2)^
       Rational[1, 2] $CellContext`T $CellContext`\[Sigma], 
      0, (-216) $CellContext`mD^(-7) ($CellContext`mD^2)^
       Rational[1, 2] $CellContext`T $CellContext`\[Sigma], 
      0, (-7680) $CellContext`mD^(-9) ($CellContext`mD^2)^
       Rational[1, 2] $CellContext`T $CellContext`\[Sigma]}, 0, 8, 1],
    Editable->False], ")"}]}]], "Output",
 CellChangeTimes->{
  3.74558006185361*^9, {3.745580118452203*^9, 3.745580141682271*^9}, 
   3.7455803414031343`*^9, 3.745580449300448*^9}]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"ImVsS", "[", 
    RowBox[{"r_", ",", "mD_", ",", "\[Sigma]_", ",", "T_"}], "]"}], ":=", 
   RowBox[{
    FractionBox[
     RowBox[{"2", " ", 
      SqrtBox[
       SuperscriptBox["mD", "2"]], " ", "T", " ", "\[Sigma]", " ", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{"-", "2"}], "+", 
        RowBox[{"2", " ", "EulerGamma"}], "+", 
        RowBox[{"Log", "[", 
         SuperscriptBox["mD", "2"], "]"}], "-", 
        RowBox[{"2", " ", 
         RowBox[{"Log", "[", 
          FractionBox["1", "r"], "]"}]}]}], ")"}]}], 
     SuperscriptBox["mD", "3"]], "-", 
    FractionBox[
     RowBox[{"16", " ", 
      RowBox[{"(", 
       RowBox[{
        SqrtBox[
         SuperscriptBox["mD", "2"]], " ", "T", " ", "\[Sigma]"}], ")"}]}], 
     RowBox[{
      SuperscriptBox["mD", "5"], " ", 
      SuperscriptBox["r", "2"]}]], "-", 
    FractionBox[
     RowBox[{"216", " ", 
      RowBox[{"(", 
       RowBox[{
        SqrtBox[
         SuperscriptBox["mD", "2"]], " ", "T", " ", "\[Sigma]"}], ")"}]}], 
     RowBox[{
      SuperscriptBox["mD", "7"], " ", 
      SuperscriptBox["r", "4"]}]], "-", 
    RowBox[{
     FractionBox[
      RowBox[{"7680", " ", 
       RowBox[{"(", 
        RowBox[{
         SqrtBox[
          SuperscriptBox["mD", "2"]], " ", "T", " ", "\[Sigma]"}], ")"}]}], 
      RowBox[{
       SuperscriptBox["mD", "9"], " ", 
       SuperscriptBox["r", "6"]}]], 
     SuperscriptBox["\[ExponentialE]", 
      RowBox[{"\[ImaginaryI]", " ", 
       SqrtBox[
        RowBox[{"-", 
         SuperscriptBox["mD", "2"]}]], " ", "r"}]], 
     RowBox[{"(", 
      RowBox[{
       FractionBox[
        RowBox[{"mD", " ", "T", " ", "\[Sigma]", " ", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{"\[ImaginaryI]", " ", "\[Pi]"}], "+", 
           RowBox[{"Log", "[", 
            RowBox[{"-", 
             SuperscriptBox["mD", "2"]}], "]"}], "-", 
           RowBox[{"Log", "[", 
            SuperscriptBox["mD", "2"], "]"}]}], ")"}], " ", 
         SuperscriptBox["r", "2"]}], 
        RowBox[{"4", " ", 
         SqrtBox[
          SuperscriptBox["mD", "2"]]}]], "-", 
       FractionBox[
        RowBox[{"3", " ", 
         RowBox[{"(", 
          RowBox[{"mD", " ", "T", " ", "\[Sigma]", " ", 
           RowBox[{"(", 
            RowBox[{"\[Pi]", "-", 
             RowBox[{"\[ImaginaryI]", " ", 
              RowBox[{"Log", "[", 
               RowBox[{"-", 
                SuperscriptBox["mD", "2"]}], "]"}]}], "+", 
             RowBox[{"\[ImaginaryI]", " ", 
              RowBox[{"Log", "[", 
               SuperscriptBox["mD", "2"], "]"}]}]}], ")"}]}], ")"}], " ", 
         "r"}], 
        RowBox[{"4", " ", 
         SqrtBox[
          RowBox[{"-", 
           SuperscriptBox["mD", "4"]}]]}]], "+", 
       FractionBox[
        RowBox[{
         SqrtBox[
          SuperscriptBox["mD", "2"]], " ", "T", " ", "\[Sigma]", " ", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{"\[ImaginaryI]", " ", "\[Pi]"}], "+", 
           RowBox[{"Log", "[", 
            RowBox[{"-", 
             SuperscriptBox["mD", "2"]}], "]"}], "-", 
           RowBox[{"Log", "[", 
            SuperscriptBox["mD", "2"], "]"}]}], ")"}]}], 
        SuperscriptBox["mD", "3"]]}], ")"}]}], "+", 
    RowBox[{
     SuperscriptBox["\[ExponentialE]", 
      RowBox[{
       RowBox[{"-", "\[ImaginaryI]"}], " ", 
       SqrtBox[
        RowBox[{"-", 
         SuperscriptBox["mD", "2"]}]], " ", "r"}]], 
     RowBox[{"(", 
      RowBox[{
       FractionBox[
        RowBox[{"mD", " ", "T", " ", "\[Sigma]", " ", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{
            RowBox[{"-", "\[ImaginaryI]"}], " ", "\[Pi]"}], "+", 
           RowBox[{"Log", "[", 
            RowBox[{"-", 
             SuperscriptBox["mD", "2"]}], "]"}], "-", 
           RowBox[{"Log", "[", 
            SuperscriptBox["mD", "2"], "]"}]}], ")"}], " ", 
         SuperscriptBox["r", "2"]}], 
        RowBox[{"4", " ", 
         SqrtBox[
          SuperscriptBox["mD", "2"]]}]], "-", 
       FractionBox[
        RowBox[{"3", " ", 
         RowBox[{"(", 
          RowBox[{"mD", " ", "T", " ", "\[Sigma]", " ", 
           RowBox[{"(", 
            RowBox[{"\[Pi]", "+", 
             RowBox[{"\[ImaginaryI]", " ", 
              RowBox[{"Log", "[", 
               RowBox[{"-", 
                SuperscriptBox["mD", "2"]}], "]"}]}], "-", 
             RowBox[{"\[ImaginaryI]", " ", 
              RowBox[{"Log", "[", 
               SuperscriptBox["mD", "2"], "]"}]}]}], ")"}]}], ")"}], " ", 
         "r"}], 
        RowBox[{"4", " ", 
         SqrtBox[
          RowBox[{"-", 
           SuperscriptBox["mD", "4"]}]]}]], "+", 
       FractionBox[
        RowBox[{"mD", " ", "T", " ", "\[Sigma]", " ", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{
            RowBox[{"-", "\[ImaginaryI]"}], " ", "\[Pi]"}], "+", 
           RowBox[{"Log", "[", 
            RowBox[{"-", 
             SuperscriptBox["mD", "2"]}], "]"}], "-", 
           RowBox[{"Log", "[", 
            SuperscriptBox["mD", "2"], "]"}]}], ")"}]}], 
        SuperscriptBox[
         RowBox[{"(", 
          SuperscriptBox["mD", "2"], ")"}], 
         RowBox[{"3", "/", "2"}]]]}], ")"}]}]}]}], ";"}]], "Input",
 CellChangeTimes->{{3.74558014653168*^9, 3.745580235242845*^9}, {
   3.745580366525984*^9, 3.745580396016095*^9}, 3.745580461920547*^9}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"ImVsS", "[", 
  RowBox[{"169", ",", 
   RowBox[{"mDcal", "[", 
    RowBox[{
     RowBox[{"2", "\[Pi]"}], ",", "0.155", ",", 
     RowBox[{"kfinal", "[", 
      RowBox[{"[", "1", "]"}], "]"}], ",", 
     RowBox[{"kfinal", "[", 
      RowBox[{"[", "2", "]"}], "]"}]}], "]"}], ",", 
   RowBox[{"\[Sigma]cont", "[", 
    RowBox[{"[", "1", "]"}], "]"}], ",", "0.155"}], "]"}]], "Input",
 CellChangeTimes->{{3.7455802394650803`*^9, 3.74558032195033*^9}, {
  3.745580406129286*^9, 3.7455804119442263`*^9}, {3.745580496402567*^9, 
  3.745580514850016*^9}, {3.745580621757516*^9, 3.7455806601566*^9}}],

Cell[BoxData[
 RowBox[{"7.659016731488183`", "\[VeryThinSpace]", "-", 
  RowBox[{"2.1476705768875475`*^-18", " ", "\[ImaginaryI]"}]}]], "Output",
 CellChangeTimes->{{3.745580262970105*^9, 3.745580322242455*^9}, {
   3.745580398432563*^9, 3.745580412204077*^9}, 3.745580464472505*^9, {
   3.745580496974977*^9, 3.745580515138104*^9}, {3.7455806238347*^9, 
   3.745580660518334*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"ImVs", "[", 
  RowBox[{"140", ",", 
   RowBox[{"mDcal", "[", 
    RowBox[{
     RowBox[{"2", "\[Pi]"}], ",", "0.155", ",", 
     RowBox[{"kfinal", "[", 
      RowBox[{"[", "1", "]"}], "]"}], ",", 
     RowBox[{"kfinal", "[", 
      RowBox[{"[", "2", "]"}], "]"}]}], "]"}], ",", 
   RowBox[{"\[Sigma]cont", "[", 
    RowBox[{"[", "1", "]"}], "]"}], ",", "0.155"}], "]"}]], "Input",
 CellChangeTimes->{{3.7455802782294817`*^9, 3.745580319982308*^9}, {
  3.745580403697583*^9, 3.745580414480033*^9}}],

Cell[BoxData["7.648378812364974`"], "Output",
 CellChangeTimes->{{3.7455802788512983`*^9, 3.74558032032445*^9}, {
   3.7455804010652027`*^9, 3.745580414792426*^9}, 3.745580466932502*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Block", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"mD", "=", 
     RowBox[{"mDcal", "[", 
      RowBox[{
       RowBox[{"2", "\[Pi]"}], ",", "0.155", ",", 
       RowBox[{"kfinal", "[", 
        RowBox[{"[", "1", "]"}], "]"}], ",", 
       RowBox[{"kfinal", "[", 
        RowBox[{"[", "2", "]"}], "]"}]}], "]"}]}], "}"}], ",", 
   RowBox[{"Show", "[", 
    RowBox[{"DiscretePlot", "[", 
     RowBox[{
      RowBox[{"ImVs", "[", 
       RowBox[{"r", ",", "mD", ",", 
        RowBox[{"\[Sigma]cont", "[", 
         RowBox[{"[", "1", "]"}], "]"}], ",", "0.155"}], "]"}], ",", 
      RowBox[{"{", 
       RowBox[{"r", ",", "1", ",", "140", ",", "10"}], "}"}], ",", 
      RowBox[{"Joined", "\[Rule]", "True"}], ",", 
      RowBox[{"Filling", "\[Rule]", "None"}], ",", 
      RowBox[{"AxesStyle", "\[Rule]", 
       RowBox[{"Directive", "[", 
        RowBox[{
         RowBox[{"FontSize", "\[Rule]", "25"}], ",", 
         RowBox[{"Thickness", "\[Rule]", "0.004"}], ",", 
         RowBox[{"FontFamily", "\[Rule]", "\"\<Helvetica\>\""}], ",", 
         "Black"}], "]"}]}], ",", 
      RowBox[{"BaseStyle", "\[Rule]", 
       RowBox[{"{", 
        RowBox[{"FontSize", "\[Rule]", "14"}], "}"}]}], ",", 
      RowBox[{"PlotRange", "\[Rule]", "All"}], ",", 
      RowBox[{"AspectRatio", "\[Rule]", "0.85"}], ",", 
      RowBox[{"AxesLabel", "\[Rule]", 
       RowBox[{"{", 
        RowBox[{"\"\<r [fm]\>\"", ",", "\"\<Im[V]\>\""}], "}"}]}], ",", 
      RowBox[{"PlotLabel", "\[Rule]", 
       RowBox[{"Style", "[", 
        RowBox[{"\"\<T=150MeV\>\"", ",", 
         RowBox[{"FontSize", "\[Rule]", "25"}], ",", 
         RowBox[{"FontFamily", "\[Rule]", "\"\<Helvetica\>\""}], ",", 
         "Black"}], "]"}]}], ",", 
      RowBox[{"ImageSize", "\[Rule]", 
       RowBox[{"{", 
        RowBox[{"600", ",", "600"}], "}"}]}]}], "]"}], "]"}]}], 
  "]"}]], "Input",
 CellChangeTimes->{{3.745579906095461*^9, 3.7455800170575523`*^9}}],

Cell[BoxData[
 GraphicsBox[{
   {RGBColor[0.368417, 0.506779, 0.709798], PointSize[0.012833333333333334`], 
    AbsoluteThickness[1.6]}, 
   {RGBColor[0.368417, 0.506779, 0.709798], PointSize[0.012833333333333334`], 
    AbsoluteThickness[1.6], 
    LineBox[{{{1., 0.0003922893722529458}, {11., 0.617646062104437}, {21., 
     2.0231804045422233`}, {31., 3.1984690951213177`}, {41., 
     4.02536169826194}, {51., 4.629837141131305}, {61., 5.103577759229679}, {
     71., 5.4949462227752806`}, {81., 5.829665061236119}, {91., 
     6.12270429816033}, {101., 6.383613023575253}, {111., 6.61909383303778}, {
     121., 6.836210907137895}, {131., 7.078719774855127}}}], {}, {}}},
  AspectRatio->0.85,
  Axes->True,
  AxesLabel->{
    FormBox["\"r [fm]\"", TraditionalForm], 
    FormBox["\"Im[V]\"", TraditionalForm]},
  AxesOrigin->{1., 0.0003922893722529458},
  AxesStyle->Directive[
   FontSize -> 25, Thickness -> 0.004, FontFamily -> "Helvetica", 
    GrayLevel[0]],
  BaseStyle->{FontSize -> 14},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  ImageSize->{600, 600},
  Method->{
   "MessagesHead" -> DiscretePlot, "AxisPadding" -> Scaled[0.02], 
    "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
    AbsolutePointSize[6], "DefaultPlotStyle" -> {
      Directive[
       RGBColor[0.368417, 0.506779, 0.709798], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.880722, 0.611041, 0.142051], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.560181, 0.691569, 0.194885], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.922526, 0.385626, 0.209179], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.528488, 0.470624, 0.701351], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.772079, 0.431554, 0.102387], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.363898, 0.618501, 0.782349], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[1, 0.75, 0], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.647624, 0.37816, 0.614037], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.571589, 0.586483, 0.], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.915, 0.3325, 0.2125], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.40082222609352647`, 0.5220066643438841, 0.85], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.9728288904374106, 0.621644452187053, 0.07336199581899142], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.736782672705901, 0.358, 0.5030266573755369], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.28026441037696703`, 0.715, 0.4292089322474965], 
       AbsoluteThickness[1.6]]}, "DomainPadding" -> Scaled[0.02], 
    "PointSizeFunction" -> "SmallPointSize", "RangePadding" -> Scaled[0.05]},
  PlotLabel->FormBox[
    StyleBox["\"T=150MeV\"", FontSize -> 25, FontFamily -> "Helvetica", 
     GrayLevel[0], StripOnInput -> False], TraditionalForm],
  PlotRange->{{1., 131.}, {0.0003922893722529458, 7.078719774855127}},
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.02], 
     Scaled[0.02]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{{3.74557991687608*^9, 3.7455800176717777`*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"ImVs", "[", 
  RowBox[{"20000", ",", 
   RowBox[{"mDcal", "[", 
    RowBox[{
     RowBox[{"2", "\[Pi]"}], ",", "0.155", ",", 
     RowBox[{"kfinal", "[", 
      RowBox[{"[", "1", "]"}], "]"}], ",", 
     RowBox[{"kfinal", "[", 
      RowBox[{"[", "2", "]"}], "]"}]}], "]"}], ",", 
   RowBox[{"\[Sigma]cont", "[", 
    RowBox[{"[", "1", "]"}], "]"}], ",", "0.155"}], "]"}]], "Input",
 CellChangeTimes->{{3.745577603754464*^9, 3.74557762838006*^9}, {
  3.7455806010440903`*^9, 3.745580603507339*^9}}],

Cell[BoxData["4.545805220935398816247501517108855953`15.954589770191005*^\
1789"], "Output",
 CellChangeTimes->{3.7455776309339457`*^9, 3.7455806041695957`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"ImVsS", "[", 
  RowBox[{"20000", ",", 
   RowBox[{"mDcal", "[", 
    RowBox[{
     RowBox[{"2", "\[Pi]"}], ",", "0.155", ",", 
     RowBox[{"kfinal", "[", 
      RowBox[{"[", "1", "]"}], "]"}], ",", 
     RowBox[{"kfinal", "[", 
      RowBox[{"[", "2", "]"}], "]"}]}], "]"}], ",", 
   RowBox[{"\[Sigma]cont", "[", 
    RowBox[{"[", "1", "]"}], "]"}], ",", "0.155"}], "]"}]], "Input",
 CellChangeTimes->{{3.745580598596593*^9, 3.7455806094701967`*^9}}],

Cell[BoxData[
 RowBox[{"19.3543388699169`", "\[VeryThinSpace]", "+", 
  RowBox[{"0.`", " ", "\[ImaginaryI]"}]}]], "Output",
 CellChangeTimes->{3.745580609909973*^9}]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"swaveccspectrawsb", "[", 
    RowBox[{"n_", ",", "Tscan_"}], "]"}], ":=", 
   RowBox[{"Block", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{"T", "=", 
        RowBox[{"Tscan", "[", 
         RowBox[{"[", "n", "]"}], "]"}]}], ",", 
       RowBox[{"mD", "=", 
        RowBox[{"mDcal", "[", 
         RowBox[{
          RowBox[{"2", "\[Pi]"}], ",", 
          RowBox[{"Tscan", "[", 
           RowBox[{"[", "n", "]"}], "]"}], ",", 
          RowBox[{"kfinal", "[", 
           RowBox[{"[", "1", "]"}], "]"}], ",", 
          RowBox[{"kfinal", "[", 
           RowBox[{"[", "2", "]"}], "]"}]}], "]"}]}], ",", 
       RowBox[{"\[Sigma]", "=", 
        RowBox[{"\[Sigma]cont", "[", 
         RowBox[{"[", "1", "]"}], "]"}]}], ",", 
       RowBox[{"\[Alpha]", "=", 
        RowBox[{"\[Alpha]cont", "[", 
         RowBox[{"[", "1", "]"}], "]"}]}], ",", 
       RowBox[{"c", "=", 
        RowBox[{"ccont", "[", 
         RowBox[{"[", "1", "]"}], "]"}]}], ",", 
       RowBox[{"M", "=", "Mc"}], ",", 
       RowBox[{"l", "=", "0"}], ",", 
       RowBox[{"\[Omega]min", "=", 
        RowBox[{"-", "1"}]}], ",", 
       RowBox[{"\[Omega]max", "=", "2"}], ",", "ccsT", ",", "Tstring", ",", 
       "inf"}], "}"}], ",", "\[IndentingNewLine]", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"rev", "=", 
       RowBox[{"Interpolation", "[", 
        RowBox[{"Join", "[", 
         RowBox[{
          RowBox[{"ParallelTable", "[", 
           RowBox[{
            RowBox[{"{", 
             RowBox[{"r", ",", 
              RowBox[{"ReV", "[", 
               RowBox[{
               "r", ",", "mD", ",", "\[Alpha]", ",", "\[Sigma]", ",", "c"}], 
               "]"}]}], "}"}], ",", 
            RowBox[{"{", 
             RowBox[{"r", ",", 
              RowBox[{"1", "/", "1000"}], ",", "10", ",", 
              RowBox[{"1", "/", "100"}]}], "}"}]}], "]"}], ",", 
          RowBox[{"ParallelTable", "[", 
           RowBox[{
            RowBox[{"{", 
             RowBox[{"r", ",", 
              RowBox[{"ReV", "[", 
               RowBox[{
               "r", ",", "mD", ",", "\[Alpha]", ",", "\[Sigma]", ",", "c"}], 
               "]"}]}], "}"}], ",", 
            RowBox[{"{", 
             RowBox[{"r", ",", 
              RowBox[{"101", "/", "10"}], ",", "25", ",", 
              RowBox[{"1", "/", "10"}]}], "}"}]}], "]"}], ",", 
          RowBox[{"ParallelTable", "[", 
           RowBox[{
            RowBox[{"{", 
             RowBox[{"r", ",", 
              RowBox[{"ReV", "[", 
               RowBox[{
               "r", ",", "mD", ",", "\[Alpha]", ",", "\[Sigma]", ",", "c"}], 
               "]"}]}], "}"}], ",", 
            RowBox[{"{", 
             RowBox[{"r", ",", "26", ",", "1500", ",", "1"}], "}"}]}], "]"}], 
          ",", 
          RowBox[{"ParallelTable", "[", 
           RowBox[{
            RowBox[{"{", 
             RowBox[{"r", ",", 
              RowBox[{"ReV", "[", 
               RowBox[{
               "r", ",", "mD", ",", "\[Alpha]", ",", "\[Sigma]", ",", "c"}], 
               "]"}]}], "}"}], ",", 
            RowBox[{"{", 
             RowBox[{"r", ",", "1510", ",", "20000", ",", "1000"}], "}"}]}], 
           "]"}]}], "]"}], "]"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"imv", "=", 
       RowBox[{"Interpolation", "[", 
        RowBox[{"Join", "[", 
         RowBox[{
          RowBox[{"ParallelTable", "[", 
           RowBox[{
            RowBox[{"{", 
             RowBox[{"r", ",", 
              RowBox[{"ImV", "[", 
               RowBox[{
               "r", ",", "mD", ",", "\[Alpha]", ",", "\[Sigma]", ",", "T"}], 
               "]"}]}], "}"}], ",", 
            RowBox[{"{", 
             RowBox[{"r", ",", 
              RowBox[{"1", "/", "1000"}], ",", "10", ",", 
              RowBox[{"1", "/", "100"}]}], "}"}]}], "]"}], ",", 
          RowBox[{"ParallelTable", "[", 
           RowBox[{
            RowBox[{"{", 
             RowBox[{"r", ",", 
              RowBox[{"ImV", "[", 
               RowBox[{
               "r", ",", "mD", ",", "\[Alpha]", ",", "\[Sigma]", ",", "T"}], 
               "]"}]}], "}"}], ",", 
            RowBox[{"{", 
             RowBox[{"r", ",", 
              RowBox[{"101", "/", "10"}], ",", "25", ",", 
              RowBox[{"1", "/", "10"}]}], "}"}]}], "]"}], ",", 
          RowBox[{"ParallelTable", "[", 
           RowBox[{
            RowBox[{"{", 
             RowBox[{"r", ",", 
              RowBox[{"ImV", "[", 
               RowBox[{
               "r", ",", "mD", ",", "\[Alpha]", ",", "\[Sigma]", ",", "T"}], 
               "]"}]}], "}"}], ",", 
            RowBox[{"{", 
             RowBox[{"r", ",", "26", ",", "140", ",", "1"}], "}"}]}], "]"}], 
          ",", 
          RowBox[{"ParallelTable", "[", 
           RowBox[{
            RowBox[{"{", 
             RowBox[{"r", ",", 
              RowBox[{
               RowBox[{"ImVc", "[", 
                RowBox[{"r", ",", "mD", ",", "\[Alpha]", ",", "T"}], "]"}], 
               "+", 
               RowBox[{"ImVsS", "[", 
                RowBox[{
                 RowBox[{"r", "+", "18"}], ",", "mD", ",", "\[Sigma]", ",", 
                 "T"}], "]"}]}]}], "}"}], ",", 
            RowBox[{"{", 
             RowBox[{"r", ",", "141", ",", "1500", ",", "1"}], "}"}]}], "]"}],
           ",", 
          RowBox[{"ParallelTable", "[", 
           RowBox[{
            RowBox[{"{", 
             RowBox[{"r", ",", 
              RowBox[{
               RowBox[{"ImVc", "[", 
                RowBox[{
                 RowBox[{"r", "+", "18"}], ",", "mD", ",", "\[Alpha]", ",", 
                 "T"}], "]"}], "+", 
               RowBox[{"ImVsS", "[", 
                RowBox[{"r", ",", "mD", ",", "\[Sigma]", ",", "T"}], 
                "]"}]}]}], "}"}], ",", 
            RowBox[{"{", 
             RowBox[{"r", ",", "1510", ",", "20000", ",", "1000"}], "}"}]}], 
           "]"}]}], "]"}], "]"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"V", "[", "x_", "]"}], ":=", 
       RowBox[{
        RowBox[{"rev", "[", "x", "]"}], "+", 
        RowBox[{"\[ImaginaryI]", " ", 
         RowBox[{"imv", "[", "x", "]"}]}]}]}], ";", "\[IndentingNewLine]", 
      "\[IndentingNewLine]", 
      RowBox[{"\[Rho]table", "=", 
       RowBox[{
        RowBox[{
         RowBox[{
          RowBox[{"ParallelDo", "[", 
           RowBox[{
            RowBox[{
             RowBox[{"\[Omega]", "=", 
              RowBox[{"\[Omega]min", "+", 
               RowBox[{
                RowBox[{"(", 
                 RowBox[{"it", "-", "1"}], ")"}], " ", "d\[Omega]", " ", 
                "M"}]}]}], ";", 
             RowBox[{"inf", "=", 
              RowBox[{"40", "+", 
               RowBox[{"500", "*", "it", "*", "d\[Omega]"}]}]}], ";", 
             "\[IndentingNewLine]", 
             RowBox[{"(*", 
              RowBox[{
               RowBox[{"s0", "=", 
                RowBox[{"NDSolve", "[", 
                 RowBox[{
                  RowBox[{"{", 
                   RowBox[{
                    RowBox[{
                    RowBox[{
                    RowBox[{
                    RowBox[{"(", 
                    RowBox[{"\[Omega]", "-", 
                    FractionBox[
                    RowBox[{"l", 
                    RowBox[{"(", 
                    RowBox[{"l", "+", "1"}], ")"}]}], 
                    RowBox[{"M", " ", 
                    SuperscriptBox["r", "2"]}]], "-", 
                    RowBox[{"Re", "[", 
                    RowBox[{"V", "[", "r", "]"}], "]"}], "+", 
                    RowBox[{"\[ImaginaryI]", " ", 
                    RowBox[{"Abs", "[", 
                    RowBox[{"Im", "[", 
                    RowBox[{"V", "[", "r", "]"}], "]"}], "]"}]}]}], ")"}], 
                    RowBox[{"gr", "[", "r", "]"}]}], "+", 
                    RowBox[{
                    FractionBox["1", "M"], 
                    RowBox[{
                    RowBox[{"gr", "''"}], "[", "r", "]"}]}]}], "\[Equal]", 
                    "0"}], ",", " ", "\[IndentingNewLine]", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"gr", "'"}], "[", "\[Delta]", "]"}], "\[Equal]", 
                    RowBox[{
                    RowBox[{"2", " ", "\[Delta]", 
                    SuperscriptBox[
                    RowBox[{"(", 
                    RowBox[{"\[Alpha]", " ", "M"}], ")"}], "2"]}], "-", 
                    RowBox[{
                    FractionBox["3", "4"], 
                    SuperscriptBox["\[Delta]", "2"], 
                    SuperscriptBox[
                    RowBox[{"(", 
                    RowBox[{"M", " ", "\[Alpha]"}], ")"}], "3"]}]}]}], ",", 
                    "\[IndentingNewLine]", " ", 
                    RowBox[{
                    RowBox[{"gr", "[", "\[Delta]", "]"}], "==", " ", 
                    RowBox[{
                    RowBox[{
                    SuperscriptBox["\[Delta]", "2"], 
                    SuperscriptBox[
                    RowBox[{"(", 
                    RowBox[{"\[Alpha]", " ", "M"}], ")"}], "2"]}], "-", 
                    RowBox[{
                    FractionBox["1", "4"], 
                    SuperscriptBox["\[Delta]", "3"], 
                    SuperscriptBox[
                    RowBox[{"(", 
                    RowBox[{"M", " ", "\[Alpha]"}], ")"}], "3"]}]}]}]}], 
                   "}"}], ",", "gr", ",", 
                  RowBox[{"{", 
                   RowBox[{"r", ",", "\[Delta]", ",", "inf"}], "}"}], ",", 
                  RowBox[{"PrecisionGoal", "\[Rule]", "10"}], ",", 
                  RowBox[{"MaxSteps", "\[Rule]", "1000000"}]}], "]"}]}], ";", 
               "\[IndentingNewLine]", 
               RowBox[{
                RowBox[{"gr1", "[", "r_", "]"}], "=", 
                SubscriptBox[
                 RowBox[{"(", 
                  RowBox[{
                   RowBox[{"gr", "[", "r", "]"}], "/.", "s0"}], ")"}], 
                 RowBox[{
                 "\[LeftDoubleBracket]", "1", "\[RightDoubleBracket]"}]]}], 
               ";"}], "*)"}], "\[IndentingNewLine]", 
             RowBox[{"s01", "=", 
              RowBox[{"NDSolve", "[", 
               RowBox[{
                RowBox[{"{", 
                 RowBox[{
                  RowBox[{
                   RowBox[{
                    RowBox[{
                    RowBox[{"(", 
                    RowBox[{"\[Omega]", "-", 
                    FractionBox[
                    RowBox[{"l", 
                    RowBox[{"(", 
                    RowBox[{"l", "+", "1"}], ")"}]}], 
                    RowBox[{"M", " ", 
                    SuperscriptBox["r", "2"]}]], "-", 
                    RowBox[{"Re", "[", 
                    RowBox[{"V", "[", "r", "]"}], "]"}], "+", 
                    RowBox[{"\[ImaginaryI]", " ", 
                    RowBox[{"Abs", "[", 
                    RowBox[{"Im", "[", 
                    RowBox[{"V", "[", "r", "]"}], "]"}], "]"}]}]}], ")"}], 
                    RowBox[{"gr", "[", "r", "]"}]}], "+", 
                    RowBox[{
                    FractionBox["1", "M"], 
                    RowBox[{
                    RowBox[{"gr", "''"}], "[", "r", "]"}]}]}], "\[Equal]", 
                   "0"}], ",", " ", "\[IndentingNewLine]", 
                  RowBox[{
                   RowBox[{
                    RowBox[{"gr", "'"}], "[", "\[Delta]", "]"}], "\[Equal]", 
                   RowBox[{
                    RowBox[{"(", 
                    RowBox[{"\[Alpha]", " ", "M"}], ")"}], "-", 
                    RowBox[{"\[Delta]", 
                    SuperscriptBox[
                    RowBox[{"(", 
                    RowBox[{"M", " ", "\[Alpha]"}], ")"}], "2"]}]}]}], ",", 
                  "\[IndentingNewLine]", " ", 
                  RowBox[{
                   RowBox[{"gr", "[", "\[Delta]", "]"}], "\[Equal]", 
                   RowBox[{
                    RowBox[{"\[Delta]", 
                    RowBox[{"(", 
                    RowBox[{"\[Alpha]", " ", "M"}], ")"}]}], "-", " ", 
                    RowBox[{
                    FractionBox["1", "2"], 
                    SuperscriptBox["\[Delta]", "2"], 
                    SuperscriptBox[
                    RowBox[{"(", 
                    RowBox[{"\[Alpha]", " ", "M"}], ")"}], "2"]}]}]}]}], 
                 "}"}], ",", "gr", ",", 
                RowBox[{"{", 
                 RowBox[{"r", ",", "\[Delta]", ",", "inf"}], "}"}]}], "]"}]}],
              ";", "\[IndentingNewLine]", 
             RowBox[{
              RowBox[{"gr0", "[", "r_", "]"}], "=", 
              SubscriptBox[
               RowBox[{"(", 
                RowBox[{
                 RowBox[{"gr", "[", "r", "]"}], "/.", "s01"}], ")"}], 
               RowBox[{
               "\[LeftDoubleBracket]", "1", "\[RightDoubleBracket]"}]]}], ";",
              "\[IndentingNewLine]", 
             RowBox[{"s1", "=", 
              RowBox[{"NDSolve", "[", 
               RowBox[{
                RowBox[{"{", 
                 RowBox[{
                  RowBox[{
                   RowBox[{
                    RowBox[{"rho", "'"}], "[", "x", "]"}], "\[Equal]", 
                   RowBox[{
                    RowBox[{"-", 
                    FractionBox[
                    RowBox[{" ", 
                    RowBox[{"6", " ", "Nc", " ", 
                    SuperscriptBox["M", "2"], " ", "\[Alpha]"}]}], 
                    RowBox[{"4", "\[Pi]"}]]}], 
                    RowBox[{"Im", "[", 
                    FractionBox["1", 
                    SuperscriptBox[
                    RowBox[{"(", 
                    RowBox[{"gr0", "[", "x", "]"}], ")"}], "2"]], 
                    RowBox[{"(*", 
                    RowBox[{"+", 
                    FractionBox["36", 
                    SuperscriptBox[
                    RowBox[{"(", 
                    RowBox[{"gr1", "[", "x", "]"}], ")"}], "2"]]}], "*)"}], 
                    "]"}]}]}], ",", 
                  RowBox[{
                   RowBox[{"rho", "[", "\[Delta]", "]"}], "\[Equal]", "0"}]}],
                  "}"}], ",", "rho", ",", 
                RowBox[{"{", 
                 RowBox[{"x", ",", "\[Delta]", ",", "inf"}], "}"}]}], "]"}]}],
              ";", "\[IndentingNewLine]", 
             RowBox[{
              RowBox[{"rhow", "[", "r_", "]"}], "=", 
              SubscriptBox[
               RowBox[{"(", 
                RowBox[{
                 RowBox[{"rho", "[", "r", "]"}], "/.", "s1"}], ")"}], 
               RowBox[{
               "\[LeftDoubleBracket]", "1", "\[RightDoubleBracket]"}]]}], ";",
              "\[IndentingNewLine]", 
             RowBox[{"ParallelSow", "[", 
              RowBox[{"{", 
               RowBox[{
                RowBox[{"\[Omega]", "+", 
                 RowBox[{"2", "M"}]}], ",", 
                RowBox[{"rhow", "[", "inf", "]"}]}], "}"}], "]"}]}], ",", 
            RowBox[{"{", 
             RowBox[{"it", ",", "1", ",", 
              FractionBox[
               RowBox[{"\[Omega]max", "-", "\[Omega]min"}], 
               RowBox[{"d\[Omega]", " ", "M"}]]}], "}"}]}], "]"}], "//", 
          "Reap"}], "//", "Last"}], "//", "First"}]}], ";", 
      "\[IndentingNewLine]", "\[IndentingNewLine]", 
      RowBox[{"ccsT", "=", 
       RowBox[{"ParallelTable", "[", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{
           RowBox[{"\[Rho]table", "[", 
            RowBox[{"[", 
             RowBox[{"i", ",", "1"}], "]"}], "]"}], ",", 
           FractionBox[
            RowBox[{"-", 
             RowBox[{"\[Rho]table", "[", 
              RowBox[{"[", 
               RowBox[{"i", ",", "2"}], "]"}], "]"}]}], 
            SuperscriptBox[
             RowBox[{"\[Rho]table", "[", 
              RowBox[{"[", 
               RowBox[{"i", ",", "1"}], "]"}], "]"}], "2"]]}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"i", ",", "1", ",", 
           RowBox[{"Length", "[", "\[Rho]table", "]"}]}], "}"}]}], "]"}]}], 
      ";", "\[IndentingNewLine]", 
      RowBox[{"Tstring", "=", 
       RowBox[{"Round", "[", 
        RowBox[{"T", "*", "1000"}], "]"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"Export", "[", 
       RowBox[{
        RowBox[{"\"\<spectraldata/Tscan/cc/swccT\>\"", "<>", 
         RowBox[{"ToString", "[", "Tstring", "]"}], "<>", 
         "\"\<spectrawsb.dat\>\""}], ",", 
        RowBox[{"Sort", "[", "ccsT", "]"}]}], "]"}], ";"}]}], 
    "\[IndentingNewLine]", "]"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.724397604460712*^9, 3.724397621092863*^9}, {
   3.724398705481254*^9, 3.724398705798315*^9}, {3.72440624506767*^9, 
   3.7244062457361317`*^9}, {3.7244423136168756`*^9, 3.724442340980721*^9}, {
   3.7244423712224417`*^9, 3.724442377050403*^9}, {3.724442465925974*^9, 
   3.724442518695669*^9}, {3.7244426255599117`*^9, 3.724442639076613*^9}, {
   3.724443729204352*^9, 3.724443729749022*^9}, {3.724443881656342*^9, 
   3.7244438842850027`*^9}, 3.725261621115453*^9, 3.72526166634648*^9, {
   3.725271550289123*^9, 3.7252715504130163`*^9}, {3.725271609402791*^9, 
   3.7252716095188437`*^9}, {3.7252717762497*^9, 3.725271782362536*^9}, {
   3.725271824500347*^9, 3.725271826035269*^9}, {3.725271857701564*^9, 
   3.725271858192912*^9}, {3.725271928114049*^9, 3.7252719496618757`*^9}, {
   3.725271981807578*^9, 3.725271987122878*^9}, {3.725273718896678*^9, 
   3.72527377251343*^9}, {3.725273963159111*^9, 3.725273966198284*^9}, {
   3.725364382855975*^9, 3.725364384697238*^9}, {3.725364432753635*^9, 
   3.725364433681274*^9}, {3.725364595553596*^9, 3.725364595868292*^9}, {
   3.725364661141473*^9, 3.725364661301785*^9}, {3.725365068510941*^9, 
   3.7253650691073112`*^9}, {3.7256202924505177`*^9, 
   3.7256202938854313`*^9}, {3.7256265502253428`*^9, 3.725626559021003*^9}, {
   3.725798091627001*^9, 3.725798108963685*^9}, {3.725798150844287*^9, 
   3.725798156038417*^9}, {3.726312422974263*^9, 3.726312439922279*^9}, {
   3.726313778060986*^9, 3.726313794010726*^9}, {3.726313854887352*^9, 
   3.726313855417986*^9}, {3.726377533478507*^9, 3.726377535012369*^9}, {
   3.726379310729051*^9, 3.726379315935656*^9}, {3.726379351066524*^9, 
   3.7263793563685627`*^9}, 3.7263814533362722`*^9, {3.726468979312665*^9, 
   3.726469044993416*^9}, {3.726564279540083*^9, 3.726564288774165*^9}, {
   3.726564330005303*^9, 3.726564342424973*^9}, {3.7265645007454853`*^9, 
   3.7265645054085903`*^9}, 3.726565145221386*^9, {3.726836923420138*^9, 
   3.726836925204391*^9}, {3.7268417497448387`*^9, 3.726841749854889*^9}, {
   3.727357927216405*^9, 3.7273579306359463`*^9}, 3.72735811608375*^9, {
   3.7273582875862513`*^9, 3.727358296888235*^9}, {3.727520051444908*^9, 
   3.7275200665503483`*^9}, {3.727539483513708*^9, 3.72753949210455*^9}, {
   3.7275398377710333`*^9, 3.727539869000495*^9}, {3.7275879806550293`*^9, 
   3.727587984698921*^9}, {3.727606150288821*^9, 3.727606150994812*^9}, {
   3.728932814314426*^9, 3.728932860160056*^9}, 3.7289333254815903`*^9, 
   3.7299208725344887`*^9, {3.730007040539275*^9, 3.7300070509717903`*^9}, {
   3.730007357183831*^9, 3.7300073662633142`*^9}, {3.7331192829046183`*^9, 
   3.733119300197537*^9}, {3.733120717385792*^9, 3.733120717697629*^9}, {
   3.7331222711038847`*^9, 3.733122272703622*^9}, {3.733211538849382*^9, 
   3.7332115515038567`*^9}, {3.7332289443370447`*^9, 
   3.7332289447842827`*^9}, {3.742215948846467*^9, 3.742215959437643*^9}, {
   3.742216025305929*^9, 3.742216093257207*^9}, {3.7422172078868933`*^9, 
   3.7422172275906973`*^9}, 3.74221727383118*^9, {3.742217585069265*^9, 
   3.742217591716959*^9}, {3.7422176229823923`*^9, 3.742217653035615*^9}, {
   3.742269341112874*^9, 3.742269371527761*^9}, 3.742275694936644*^9, {
   3.742289467062118*^9, 3.742289486771803*^9}, {3.742289520463562*^9, 
   3.7422896027136*^9}, {3.7422896364561243`*^9, 3.74228964347093*^9}, {
   3.742289678232355*^9, 3.742289708137301*^9}, {3.7422897506101*^9, 
   3.7422897587096577`*^9}, {3.7422920316457787`*^9, 3.742292034487727*^9}, 
   3.742292186682322*^9, {3.742292303240778*^9, 3.742292303483521*^9}, {
   3.742292362481593*^9, 3.742292372544711*^9}, {3.742292408813004*^9, 
   3.742292447857381*^9}, {3.7422968206130743`*^9, 3.742296843480155*^9}, {
   3.7422970160890417`*^9, 3.742297024417719*^9}, {3.742297074890059*^9, 
   3.74229711910509*^9}, {3.7422973083294992`*^9, 3.742297309298213*^9}, {
   3.742297354168077*^9, 3.742297359897736*^9}, {3.742297415918168*^9, 
   3.7422974232482452`*^9}, {3.742297467739311*^9, 3.742297612963316*^9}, {
   3.7422977860232887`*^9, 3.7422977903561068`*^9}, {3.74229798181938*^9, 
   3.742298023677857*^9}, {3.7422980561712513`*^9, 3.74229805925661*^9}, 
   3.742298106308654*^9, {3.742300221204397*^9, 3.742300269720365*^9}, {
   3.742300416216001*^9, 3.742300416917211*^9}, {3.742300536315893*^9, 
   3.742300546756034*^9}, {3.742300626604027*^9, 3.742300638323701*^9}, {
   3.7423006769018583`*^9, 3.7423007163572683`*^9}, {3.7435037431402884`*^9, 
   3.743503799356997*^9}, {3.7435038425347443`*^9, 3.743503908279688*^9}, {
   3.7435046316079397`*^9, 3.743504651390107*^9}, 3.745326235801956*^9, {
   3.745577559422867*^9, 3.745577586968154*^9}, {3.745580528080043*^9, 
   3.74558059234057*^9}, {3.745580690187639*^9, 3.745580708875317*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Tscancorig", "[", 
  RowBox[{"[", 
   RowBox[{"5", ";;", "7"}], "]"}], "]"}]], "Input",
 CellChangeTimes->{{3.745580739493051*^9, 3.74558077207876*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"0.154`", ",", "0.155`", ",", "0.156`"}], "}"}]], "Output",
 CellChangeTimes->{{3.745580741288967*^9, 3.745580792412156*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"Do", "[", 
   RowBox[{
    RowBox[{"swaveccspectrawsb", "[", 
     RowBox[{"i", ",", 
      RowBox[{"Tscancorig", "[", 
       RowBox[{"[", 
        RowBox[{"5", ";;", "7"}], "]"}], "]"}]}], "]"}], ",", 
    RowBox[{"{", 
     RowBox[{"i", ",", 
      RowBox[{"Length", "[", 
       RowBox[{"Tscancorig", "[", 
        RowBox[{"[", 
         RowBox[{"5", ";;", "7"}], "]"}], "]"}], "]"}]}], "}"}]}], "]"}], "//",
   "AbsoluteTiming"}]], "Input",
 CellChangeTimes->{{3.7455807369101477`*^9, 3.745580776865053*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"5173.827289`", ",", "Null"}], "}"}]], "Output",
 CellChangeTimes->{3.745585979013007*^9}]
}, Open  ]]
}, Open  ]]
},
WindowSize->{1920, 1019},
WindowMargins->{{0, Automatic}, {0, 20}},
CellContext->Notebook,
FrontEndVersion->"11.0 for Linux x86 (64-bit) (September 21, 2016)",
StyleDefinitions->"Default.nb"
]
(* End of Notebook Content *)

(* Internal cache information *)
(*CellTagsOutline
CellTagsIndex->{}
*)
(*CellTagsIndex
CellTagsIndex->{}
*)
(*NotebookFileOutline
Notebook[{
Cell[400, 13, 482, 10, 57, "Input"],
Cell[CellGroupData[{
Cell[907, 27, 207, 3, 65, "Section"],
Cell[1117, 32, 15876, 455, 1281, "Input"]
}, Closed]],
Cell[CellGroupData[{
Cell[17030, 492, 160, 2, 51, "Section"],
Cell[17193, 496, 2021, 55, 264, "Input"],
Cell[CellGroupData[{
Cell[19239, 555, 113, 1, 45, "Subsection"],
Cell[19355, 558, 7125, 214, 387, "Input"],
Cell[26483, 774, 1400, 40, 63, "Input"]
}, Open  ]],
Cell[CellGroupData[{
Cell[27920, 819, 154, 2, 45, "Subsection"],
Cell[CellGroupData[{
Cell[28099, 825, 101, 1, 35, "Subsubsection"],
Cell[CellGroupData[{
Cell[28225, 830, 416, 13, 34, "Input"],
Cell[28644, 845, 1345, 20, 57, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[30026, 870, 3255, 88, 146, "Input"],
Cell[33284, 960, 166740, 2764, 1215, 83784, 1402, "CachedBoxData", "BoxData", \
"Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[200061, 3729, 3088, 85, 146, "Input"],
Cell[203152, 3816, 54485, 924, 1215, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[257674, 4745, 3086, 85, 146, "Input"],
Cell[260763, 4832, 175204, 2906, 1215, 102567, 1713, "CachedBoxData", \
"BoxData", "Output"]
}, Open  ]],
Cell[435982, 7741, 4383, 124, 153, "Input"],
Cell[440368, 7867, 5937, 158, 208, "Input"],
Cell[446308, 8027, 6000, 159, 208, "Input"],
Cell[452311, 8188, 5528, 152, 208, "Input"],
Cell[CellGroupData[{
Cell[457864, 8344, 316, 7, 34, "Input"],
Cell[458183, 8353, 5415, 103, 707, "Output"]
}, Open  ]],
Cell[463613, 8459, 2552, 51, 67, "Input"],
Cell[466168, 8512, 4639, 100, 195, "Input"],
Cell[470810, 8614, 3251, 81, 195, "Input"],
Cell[474064, 8697, 3277, 82, 195, "Input"],
Cell[477344, 8781, 1284, 32, 34, "Input"],
Cell[478631, 8815, 1082, 29, 34, "Input"],
Cell[479716, 8846, 1077, 29, 34, "Input"],
Cell[480796, 8877, 1642, 41, 80, "Input"],
Cell[482441, 8920, 135, 2, 32, "Input"],
Cell[482579, 8924, 1500, 39, 80, "Input"],
Cell[484082, 8965, 1497, 39, 80, "Input"],
Cell[CellGroupData[{
Cell[485604, 9008, 354, 9, 50, "Input"],
Cell[485961, 9019, 5420, 103, 239, "Output"]
}, Open  ]]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[491442, 9129, 95, 1, 44, "Subsection"],
Cell[491540, 9132, 246, 6, 57, "Input"],
Cell[491789, 9140, 412, 9, 76, "Input"],
Cell[CellGroupData[{
Cell[492226, 9153, 136, 2, 35, "Subsubsection"],
Cell[492365, 9157, 20684, 455, 761, "Input"],
Cell[513052, 9614, 20716, 456, 784, "Input"],
Cell[533771, 10072, 20741, 456, 784, "Input"]
}, Open  ]],
Cell[CellGroupData[{
Cell[554549, 10533, 186, 2, 35, "Subsubsection"],
Cell[554738, 10537, 20282, 446, 802, "Input"]
}, Closed]],
Cell[CellGroupData[{
Cell[575057, 10988, 237, 3, 29, "Subsubsection"],
Cell[575297, 10993, 20432, 450, 761, "Input"]
}, Closed]],
Cell[CellGroupData[{
Cell[595766, 11448, 287, 4, 29, "Subsubsection"],
Cell[596056, 11454, 20312, 447, 802, "Input"]
}, Closed]]
}, Open  ]],
Cell[CellGroupData[{
Cell[616417, 11907, 100, 1, 44, "Subsection"],
Cell[616520, 11910, 208, 4, 32, "Input"],
Cell[CellGroupData[{
Cell[616753, 11918, 1437, 21, 34, "Input"],
Cell[618193, 11941, 1560, 23, 34, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[619790, 11969, 240, 7, 34, "Input"],
Cell[620033, 11978, 1873, 29, 80, "Output"]
}, Open  ]],
Cell[621921, 12010, 983, 22, 34, "Input"],
Cell[CellGroupData[{
Cell[622929, 12036, 492, 13, 34, "Input"],
Cell[623424, 12051, 77, 1, 32, "Output"]
}, Open  ]],
Cell[623516, 12055, 633, 18, 34, "Input"],
Cell[624152, 12075, 287, 9, 34, "Input"],
Cell[624442, 12086, 729, 15, 34, "Input"],
Cell[625174, 12103, 386, 11, 34, "Input"],
Cell[625563, 12116, 381, 11, 34, "Input"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[625993, 12133, 205, 3, 65, "Section"],
Cell[CellGroupData[{
Cell[626223, 12140, 1459, 34, 34, "Input"],
Cell[627685, 12176, 2172, 35, 80, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[629894, 12216, 1508, 34, 34, "Input"],
Cell[631405, 12252, 1853, 30, 80, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[633295, 12287, 1557, 35, 34, "Input"],
Cell[634855, 12324, 1895, 33, 80, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[636787, 12362, 1118, 29, 34, "Input"],
Cell[637908, 12393, 2924, 45, 103, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[640869, 12443, 925, 26, 34, "Input"],
Cell[641797, 12471, 2761, 43, 103, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[644595, 12519, 925, 26, 34, "Input"],
Cell[645523, 12547, 2727, 41, 103, "Output"]
}, Open  ]]
}, Closed]],
Cell[CellGroupData[{
Cell[648299, 12594, 264, 3, 51, "Section"],
Cell[648566, 12599, 1872, 59, 61, "Input"],
Cell[CellGroupData[{
Cell[650463, 12662, 621, 14, 34, "Input"],
Cell[651087, 12678, 113, 1, 32, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[651237, 12684, 2123, 51, 117, "Input"],
Cell[653363, 12737, 4342, 104, 615, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[657742, 12846, 1311, 39, 58, "Input"],
Cell[659056, 12887, 8056, 220, 223, "Output"]
}, Open  ]],
Cell[667127, 13110, 5397, 158, 254, "Input"],
Cell[CellGroupData[{
Cell[672549, 13272, 616, 14, 34, "Input"],
Cell[673168, 13288, 381, 6, 34, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[673586, 13299, 521, 13, 34, "Input"],
Cell[674110, 13314, 186, 2, 32, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[674333, 13321, 1947, 48, 80, "Input"],
Cell[676283, 13371, 3414, 86, 615, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[679734, 13462, 522, 13, 34, "Input"],
Cell[680259, 13477, 160, 2, 34, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[680456, 13484, 475, 12, 34, "Input"],
Cell[680934, 13498, 165, 3, 32, "Output"]
}, Open  ]],
Cell[681114, 13504, 21225, 469, 765, "Input"],
Cell[CellGroupData[{
Cell[702364, 13977, 176, 4, 34, "Input"],
Cell[702543, 13983, 164, 3, 34, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[702744, 13991, 548, 16, 34, "Input"],
Cell[703295, 14009, 129, 3, 34, "Output"]
}, Open  ]]
}, Open  ]]
}
]
*)

