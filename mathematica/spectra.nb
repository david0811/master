(*CacheID: 234*)
(* Internal cache information:
NotebookFileLineBreakTest
NotebookFileLineBreakTest
NotebookDataPosition[         0,          0]
NotebookDataLength[    617683,      12553]
NotebookOptionsPosition[    611812,      12357]
NotebookOutlinePosition[    612167,      12373]
CellTagsIndexPosition[    612124,      12370]
WindowFrame->Normal*)

(* Beginning of Notebook Content *)
Notebook[{
Cell[BoxData[{
 RowBox[{
  RowBox[{"SetDirectory", "[", 
   RowBox[{"ParentDirectory", "[", 
    RowBox[{"NotebookDirectory", "[", "]"}], "]"}], "]"}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Needs", "[", "\"\<ErrorBarPlots`\>\"", "]"}], ";"}]}], "Input",
 CellChangeTimes->{{3.726830841029643*^9, 3.7268308412828083`*^9}, {
  3.7422157674558773`*^9, 3.742215769884161*^9}, {3.742217260745666*^9, 
  3.74221726600983*^9}, {3.745325859439938*^9, 3.74532586674417*^9}}],

Cell[CellGroupData[{

Cell["4 loop running coupling", "Section",
 CellChangeTimes->{{3.733038025331724*^9, 3.733038035264956*^9}, {
  3.7330493983743973`*^9, 3.733049402685856*^9}, {3.73312956042422*^9, 
  3.733129594184086*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", " ", 
   RowBox[{
    RowBox[{
     RowBox[{"form", " ", "hep"}], "-", 
     RowBox[{"ph", " ", "9703284"}]}], ",", " ", "vermaseren", ",", " ", 
    "larin", ",", " ", "Ritbergen"}], " ", "*)"}], "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{"\[CapitalLambda]QCD", "=", "0.2145"}], ";"}], " ", 
   "\[IndentingNewLine]", 
   RowBox[{"(*", " ", 
    RowBox[{
     RowBox[{"so", " ", "that", " ", "for", " ", "nF"}], "=", 
     RowBox[{
      RowBox[{"5", " ", "we", " ", "get", " ", "alpha_s", 
       RowBox[{"(", 
        RowBox[{"mz", "=", "91.188"}], ")"}]}], "=", 
      RowBox[{
       RowBox[{"0.1185", " ", 
        RowBox[{"(", 
         RowBox[{"PDG", " ", "value"}], ")"}], " ", "\[IndentingNewLine]", 
        "note", " ", "that", " ", "pdg", " ", "also", " ", "quotes", " ", 
        "\[Lambda]qcd"}], "=", 
       RowBox[{
        RowBox[{"0.214", " ", "for", " ", "nf"}], "=", 
        RowBox[{
        "5", " ", "everything", " ", "seems", " ", "consistent"}]}]}]}]}], 
    "*)"}], "\[IndentingNewLine]", "\[IndentingNewLine]", 
   RowBox[{"(*", "QCD", "*)"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"Nc", "=", "3."}], ";", 
    RowBox[{"CA", "=", "Nc"}], ";", " ", 
    RowBox[{"nF", "=", "3"}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"CF", "=", 
     FractionBox[
      RowBox[{
       SuperscriptBox["Nc", "2"], "-", "1"}], 
      RowBox[{"2", " ", "Nc"}]]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{"(*", 
    RowBox[{
    "coeft", " ", "of", " ", "the", " ", "renormalization", " ", "group", " ",
      "equations"}], "*)"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"\[Beta]0", "[", "Nf_", "]"}], "=", 
     FractionBox[
      RowBox[{
       RowBox[{
        RowBox[{"-", "11"}], "Nc"}], "+", 
       RowBox[{"2", "Nf"}]}], "12"]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"\[Beta]1", "[", "Nf_", "]"}], "=", 
     FractionBox[
      RowBox[{
       RowBox[{
        RowBox[{"-", "68"}], 
        SuperscriptBox["Nc", "2"]}], "+", 
       RowBox[{"20", "Nc", " ", "Nf"}], "+", 
       RowBox[{"12", "CF", " ", "Nf"}]}], 
      RowBox[{"3", " ", "32"}]]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"\[Beta]2", "[", "Nf_", "]"}], "=", 
     RowBox[{"-", 
      FractionBox[
       RowBox[{"(", 
        RowBox[{"2857", "-", 
         RowBox[{
          FractionBox["5033", "9"], "Nf"}], "+", 
         RowBox[{
          FractionBox["325", "27"], " ", 
          SuperscriptBox["Nf", "2"]}]}], ")"}], "128"]}]}], ";"}], " ", 
   RowBox[{"(*", 
    RowBox[{
     RowBox[{"for", " ", "Nc"}], "=", 
     RowBox[{"3", " ", "only"}]}], "*)"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"\[Beta]3", "[", "Nf_", "]"}], "=", 
     RowBox[{
      FractionBox[
       RowBox[{"-", "1"}], "256"], 
      RowBox[{"(", 
       RowBox[{
        RowBox[{"(", 
         RowBox[{
          FractionBox["149753", "6"], "+", 
          RowBox[{"3564", " ", 
           RowBox[{"Zeta", "[", "3", "]"}]}]}], ")"}], "-", 
        RowBox[{
         RowBox[{"(", 
          RowBox[{
           FractionBox["1078361", "162"], "+", 
           RowBox[{
            FractionBox["6508", "27"], " ", 
            RowBox[{"Zeta", "[", "3", "]"}]}]}], ")"}], "Nf"}], "+", 
        RowBox[{
         RowBox[{"(", 
          RowBox[{
           FractionBox["50065", "162"], "+", 
           RowBox[{
            FractionBox["6472", "81"], 
            RowBox[{"Zeta", "[", "3", "]"}]}]}], ")"}], 
         SuperscriptBox["Nf", "2"]}], "+", 
        RowBox[{
         FractionBox["1093", "729"], " ", 
         SuperscriptBox["Nf", "3"]}]}], ")"}]}]}], ";"}], 
   RowBox[{"(*", 
    RowBox[{
     RowBox[{"for", " ", "Nc"}], "=", 
     RowBox[{"3", " ", "only"}]}], "*)"}], "\[IndentingNewLine]", 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"\[Gamma]0", "[", "Nf_", "]"}], "=", 
     RowBox[{
      FractionBox["3", "4"], " ", "CF"}]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"\[Gamma]1", "[", "Nf_", "]"}], "=", 
     RowBox[{
      FractionBox["1", "16"], 
      RowBox[{"(", 
       RowBox[{
        FractionBox["202", "3"], "-", 
        RowBox[{
         FractionBox["20", "9"], "Nf"}]}], ")"}]}]}], ";"}], 
   RowBox[{"(*", 
    RowBox[{
     RowBox[{"for", " ", "Nc"}], "=", 
     RowBox[{"3", " ", "only"}]}], "*)"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"\[Gamma]2", "[", "Nf_", "]"}], "=", 
     RowBox[{
      FractionBox["1", "64"], 
      RowBox[{"(", 
       RowBox[{"1249", "+", 
        RowBox[{
         RowBox[{"(", 
          RowBox[{
           RowBox[{"-", 
            FractionBox["2216", "27"]}], "-", 
           RowBox[{
            FractionBox["160", "3"], " ", 
            RowBox[{"Zeta", "[", "3", "]"}]}]}], ")"}], "Nf"}], "-", 
        RowBox[{
         FractionBox["140", "81"], " ", 
         SuperscriptBox["Nf", "2"]}]}], ")"}]}]}], ";"}], 
   RowBox[{"(*", 
    RowBox[{
     RowBox[{"for", " ", "Nc"}], "=", 
     RowBox[{"3", " ", "only"}]}], "*)"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"\[Gamma]3", "[", "Nf_", "]"}], "=", 
     RowBox[{
      FractionBox["1", "256"], 
      RowBox[{"(", 
       RowBox[{
        FractionBox["4603055", "162"], "+", 
        RowBox[{
         FractionBox["135680", "27"], " ", 
         RowBox[{"Zeta", "[", "3", "]"}]}], "-", 
        RowBox[{"8800", 
         RowBox[{"Zeta", "[", "5", "]"}]}], "+", 
        RowBox[{
         RowBox[{"(", 
          RowBox[{
           RowBox[{"-", 
            FractionBox["91723", "27"]}], "-", 
           RowBox[{
            FractionBox["34192", "9"], " ", 
            RowBox[{"Zeta", "[", "3", "]"}]}], "+", 
           RowBox[{"880", " ", 
            RowBox[{"Zeta", "[", "4", "]"}]}], "+", 
           RowBox[{
            FractionBox["18400", "9"], 
            RowBox[{"Zeta", "[", "5", "]"}]}]}], ")"}], "Nf"}], "+", 
        RowBox[{
         RowBox[{"(", 
          RowBox[{
           FractionBox["5242", "243"], "+", 
           RowBox[{
            FractionBox["800", "9"], " ", 
            RowBox[{"Zeta", "[", "3", "]"}]}], "-", 
           RowBox[{
            FractionBox["160", "3"], 
            RowBox[{"Zeta", "[", "4", "]"}]}]}], ")"}], 
         SuperscriptBox["Nf", "2"]}], "+", 
        RowBox[{
         RowBox[{"(", 
          RowBox[{
           RowBox[{"-", 
            FractionBox["332", "243"]}], "+", 
           RowBox[{
            FractionBox["64", "27"], " ", 
            RowBox[{"Zeta", "[", "3", "]"}]}]}], ")"}], 
         SuperscriptBox["Nf", "3"]}]}], ")"}]}]}], ";"}], 
   "\[IndentingNewLine]", "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"b0", "[", "Nf_", "]"}], "=", 
     RowBox[{"-", 
      FractionBox[
       RowBox[{"8", 
        RowBox[{"\[Beta]0", "[", "Nf", "]"}]}], 
       RowBox[{"2", 
        SuperscriptBox[
         RowBox[{"(", 
          RowBox[{"4", "\[Pi]"}], ")"}], "2"]}]]}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"b1", "[", "Nf_", "]"}], "=", 
     RowBox[{"-", 
      FractionBox[
       RowBox[{"32", " ", 
        RowBox[{"\[Beta]1", "[", "Nf", "]"}]}], 
       RowBox[{"2", 
        SuperscriptBox[
         RowBox[{"(", 
          RowBox[{"4", "\[Pi]"}], ")"}], "2"]}]]}]}], ";"}], 
   "\[IndentingNewLine]", "\[IndentingNewLine]", 
   RowBox[{"(*", " ", 
    RowBox[{
     RowBox[{
     "Initial", " ", "conditions", " ", "of", " ", "the", " ", "RG", " ", 
      "equations"}], ",", " ", 
     RowBox[{
     "\[Mu]", " ", "in", " ", "units", " ", "of", " ", 
      "\[CapitalLambda]_MSbar"}]}], " ", "*)"}], "\[IndentingNewLine]", 
   "\[IndentingNewLine]", 
   RowBox[{"(*", 
    RowBox[{
     RowBox[{
      RowBox[{"gf", "[", "\[Mu]_", "]"}], "=", 
      RowBox[{"1", "/", 
       SqrtBox[
        RowBox[{
         RowBox[{"2", " ", "b0", " ", 
          RowBox[{"Log", "[", "\[Mu]", "]"}]}], "+", 
         RowBox[{"b1", " ", 
          RowBox[{
           RowBox[{"Log", "[", 
            RowBox[{"2", " ", 
             RowBox[{"Log", "[", "\[Mu]", "]"}]}], "]"}], "/", 
           "b0"}]}]}]]}]}], ";"}], "*)"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"gf", "[", "t_", "]"}], "=", 
     FractionBox["1", 
      SqrtBox[
       RowBox[{
        RowBox[{
         RowBox[{"b0", "[", "Nf", "]"}], " ", "t"}], "+", 
        RowBox[{
         RowBox[{"b1", "[", "Nf", "]"}], " ", 
         RowBox[{
          RowBox[{"Log", "[", "t", "]"}], "/", 
          RowBox[{"b0", "[", "Nf", "]"}]}]}]}]]]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"asf", "[", 
      RowBox[{"t_", ",", "Nf_"}], "]"}], "=", 
     RowBox[{
      FractionBox[
       RowBox[{"-", "1"}], 
       RowBox[{
        RowBox[{"\[Beta]0", "[", "Nf", "]"}], " ", "t"}]], "-", 
      FractionBox[
       RowBox[{
        RowBox[{"\[Beta]1", "[", "Nf", "]"}], " ", 
        RowBox[{"Log", "[", "t", "]"}]}], 
       RowBox[{
        SuperscriptBox[
         RowBox[{"\[Beta]0", "[", "Nf", "]"}], "3"], " ", 
        SuperscriptBox["t", "2"]}]], "-", 
      FractionBox[
       RowBox[{" ", 
        RowBox[{
         RowBox[{
          SuperscriptBox[
           RowBox[{"\[Beta]1", "[", "Nf", "]"}], "2"], 
          RowBox[{"(", 
           RowBox[{
            SuperscriptBox[
             RowBox[{"Log", "[", "t", "]"}], "2"], "-", 
            RowBox[{"Log", "[", "t", "]"}], "-", "1"}], ")"}]}], "+", 
         RowBox[{
          RowBox[{"\[Beta]2", "[", "Nf", "]"}], " ", 
          RowBox[{"\[Beta]0", "[", "Nf", "]"}]}]}]}], 
       RowBox[{
        SuperscriptBox[
         RowBox[{"\[Beta]0", "[", "Nf", "]"}], "5"], 
        SuperscriptBox["t", "3"]}]], "+", 
      RowBox[{
       FractionBox["1", 
        RowBox[{
         SuperscriptBox[
          RowBox[{"\[Beta]0", "[", "Nf", "]"}], "7"], 
         SuperscriptBox["t", "4"]}]], 
       RowBox[{"(", " ", 
        RowBox[{
         RowBox[{
          SuperscriptBox[
           RowBox[{"\[Beta]1", "[", "Nf", "]"}], "3"], 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"-", 
             SuperscriptBox[
              RowBox[{"Log", "[", "t", "]"}], "3"]}], "+", 
            RowBox[{
             FractionBox["5", "2"], 
             SuperscriptBox[
              RowBox[{"Log", "[", "t", "]"}], "2"]}], "+", 
            RowBox[{"2", 
             RowBox[{"Log", "[", "t", "]"}]}], "-", 
            FractionBox["1", "2"]}], ")"}]}], "-", 
         RowBox[{"3", " ", 
          RowBox[{"\[Beta]1", "[", "Nf", "]"}], " ", 
          RowBox[{"\[Beta]2", "[", "Nf", "]"}], " ", 
          RowBox[{"\[Beta]0", "[", "Nf", "]"}], " ", 
          RowBox[{"Log", "[", "t", "]"}]}], "+", 
         RowBox[{
          FractionBox["1", "2"], 
          RowBox[{"\[Beta]3", "[", "Nf", "]"}], " ", 
          SuperscriptBox[
           RowBox[{"\[Beta]0", "[", "Nf", "]"}], "2"]}]}], ")"}]}]}]}], ";"}],
    "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"\[Mu]0", "=", "2"}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"t0", "=", 
     RowBox[{"Log", "[", 
      SuperscriptBox["\[Mu]0", "2"], "]"}]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"tf", "=", 
     RowBox[{"10000", " ", "t0"}]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{"(*", 
    RowBox[{
    "solution", " ", "of", " ", "the", " ", "RG", " ", "equation", " ", "to", 
     " ", "3", " ", "loop"}], "*)"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"mcharm", "=", "1.275"}], ";"}], 
   RowBox[{"(*", 
    RowBox[{"m", 
     RowBox[{"(", "m", ")"}], " ", "in", " ", "msbar"}], "*)"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"mbottom", "=", "4.18"}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"nf", "[", "t_", "]"}], "=", 
     RowBox[{"If", "[", 
      RowBox[{
       RowBox[{"t", "<", 
        RowBox[{"Log", "[", 
         FractionBox[
          SuperscriptBox["mcharm", "2"], 
          SuperscriptBox["\[CapitalLambda]QCD", "2"]], "]"}]}], ",", "3", ",", 
       RowBox[{"If", "[", 
        RowBox[{
         RowBox[{"t", "<", 
          RowBox[{"Log", "[", 
           FractionBox[
            SuperscriptBox["mbottom", "2"], 
            SuperscriptBox["\[CapitalLambda]QCD", "2"]], "]"}]}], ",", "4", 
         ",", "5"}], "]"}]}], "]"}]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"sg4", "=", 
     RowBox[{"Quiet", "[", 
      RowBox[{"NDSolve", "[", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{
          RowBox[{
           RowBox[{"D", "[", 
            RowBox[{
             RowBox[{"as", "[", "t", "]"}], ",", "t"}], "]"}], "\[Equal]", 
           RowBox[{
            RowBox[{
             RowBox[{"+", 
              RowBox[{"\[Beta]0", "[", 
               RowBox[{"nf", "[", "t", "]"}], "]"}]}], " ", 
             SuperscriptBox[
              RowBox[{"as", "[", "t", "]"}], "2"]}], "+", 
            RowBox[{
             RowBox[{"\[Beta]1", "[", 
              RowBox[{"nf", "[", "t", "]"}], "]"}], " ", 
             SuperscriptBox[
              RowBox[{"as", "[", "t", "]"}], "3"]}], "+", " ", 
            RowBox[{
             RowBox[{"\[Beta]2", "[", 
              RowBox[{"nf", "[", "t", "]"}], "]"}], " ", 
             SuperscriptBox[
              RowBox[{"as", "[", "t", "]"}], "4"]}], "+", " ", 
            RowBox[{
             RowBox[{"\[Beta]3", "[", 
              RowBox[{"nf", "[", "t", "]"}], "]"}], " ", 
             SuperscriptBox[
              RowBox[{"as", "[", "t", "]"}], "5"]}]}]}], ",", 
          RowBox[{
           RowBox[{"as", "[", "tf", "]"}], "\[Equal]", 
           RowBox[{"asf", "[", 
            RowBox[{"tf", ",", 
             RowBox[{"nf", "[", "tf", "]"}]}], "]"}]}]}], "}"}], ",", "as", 
        ",", 
        RowBox[{"{", 
         RowBox[{"t", ",", "t0", ",", "tf"}], "}"}], ",", 
        RowBox[{"AccuracyGoal", "\[Rule]", "14"}], ",", 
        RowBox[{"WorkingPrecision", "\[Rule]", "32"}], ",", 
        RowBox[{"MaxSteps", "\[Rule]", "10000000"}]}], "]"}], "]"}]}], ";"}], 
   "\[IndentingNewLine]", "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"a4t", "[", "t_", "]"}], "=", " ", 
     RowBox[{"Part", "[", 
      RowBox[{
       RowBox[{"Evaluate", "[", 
        RowBox[{
         RowBox[{"as", "[", "t", "]"}], "/.", "sg4"}], "]"}], ",", "1"}], 
      "]"}]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"g4", "[", "\[Mu]_", "]"}], "=", 
     RowBox[{"2", " ", "\[Pi]", " ", 
      SqrtBox[
       RowBox[{"Part", "[", 
        RowBox[{
         RowBox[{"Evaluate", "[", 
          RowBox[{
           RowBox[{"as", "[", 
            RowBox[{"Log", "[", 
             FractionBox[
              SuperscriptBox["\[Mu]", "2"], 
              SuperscriptBox["\[CapitalLambda]QCD", "2"]], "]"}], "]"}], "/.",
            "sg4"}], "]"}], ",", "1"}], "]"}]]}]}], ";"}]}]}]], "Input",
 CellChangeTimes->{{3.722603722510141*^9, 3.72260372344028*^9}, {
   3.722604106111541*^9, 3.722604106838868*^9}, {3.722758514249189*^9, 
   3.72275851575694*^9}, {3.722759338268147*^9, 3.7227593794887047`*^9}, 
   3.722941350741787*^9, 3.725272685733177*^9, {3.7257977704878893`*^9, 
   3.725797773117529*^9}, {3.728106253645876*^9, 3.728106267238208*^9}, {
   3.728106981843108*^9, 3.72810698836581*^9}, {3.728107035483563*^9, 
   3.728107083980345*^9}, {3.728107191150432*^9, 3.7281072205275097`*^9}, {
   3.7289260533327723`*^9, 3.728926057125319*^9}, {3.728926987957735*^9, 
   3.728927012966138*^9}, {3.733038068527727*^9, 3.733038137498209*^9}, {
   3.733038320612577*^9, 3.7330383210148697`*^9}, {3.7330540354197693`*^9, 
   3.7330540356914186`*^9}, {3.733129571506283*^9, 3.73312957588968*^9}, {
   3.7422918081618557`*^9, 3.742291816377472*^9}, {3.742300291771085*^9, 
   3.742300292679388*^9}}]
}, Closed]],

Cell[CellGroupData[{

Cell["Generate Spectral Functions", "Section",
 CellChangeTimes->{{3.721037028308626*^9, 3.72103703898452*^9}, {
  3.725797990517199*^9, 3.725797994993998*^9}}],

Cell[BoxData[{
 RowBox[{
  RowBox[{"R", "=", "20000"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Mc", "=", "1.4689725245671532`"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Mb", "=", "4.882"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"kfinal", "=", 
    RowBox[{"{", 
     RowBox[{"0.6802525363662164`", ",", 
      RowBox[{"-", "0.31465604392609736`"}]}], "}"}]}], ";"}], 
  RowBox[{"(*", 
   RowBox[{"100", "k", " ", "run"}], "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"kfinalu", "=", 
   RowBox[{"{", 
    RowBox[{"0.9017845365143496`", ",", 
     RowBox[{"-", "0.3669424499609976`"}]}], "}"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"kfinall", "=", 
   RowBox[{"{", 
    RowBox[{"0.6802525363662164`", ",", 
     RowBox[{"-", "0.31465604392609736`"}]}], "}"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"\[Alpha]cont", "=", 
    RowBox[{"{", 
     RowBox[{"0.5146004500017507`", ",", "0.002579680095957094`"}], "}"}]}], 
   ";"}], 
  RowBox[{"(*", 
   RowBox[{"10", "k", " ", "run"}], "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"\[Sigma]cont", "=", 
   RowBox[{"{", 
    RowBox[{"0.16904257426266697`", ",", "0.0009046347484072015`"}], "}"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"ccont", "=", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"-", "0.15782092474161866`"}], ",", "0.0024785523617348124`"}], 
    "}"}]}], ";"}]}], "Input",
 CellChangeTimes->{{3.7422993784399157`*^9, 3.742299414675289*^9}, {
   3.7422995639032173`*^9, 3.742299568734294*^9}, {3.742300057817206*^9, 
   3.742300073064109*^9}, 3.745325935588238*^9, 3.7453259706451406`*^9, 
   3.7453260061502438`*^9, {3.7453261461583*^9, 3.745326156923254*^9}}],

Cell[CellGroupData[{

Cell["Define required functions", "Subsection",
 CellChangeTimes->{{3.726381295754898*^9, 3.726381308641871*^9}}],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"ImVc", "[", 
    RowBox[{"r_", ",", "mD_", ",", "\[Alpha]_", ",", "T_"}], "]"}], ":=", 
   RowBox[{"T", " ", "\[Alpha]", " ", 
    RowBox[{"NIntegrate", "[", 
     RowBox[{
      FractionBox[
       RowBox[{"2", " ", "z", " ", 
        RowBox[{"(", 
         RowBox[{"1", "-", 
          RowBox[{"Sinc", "[", 
           RowBox[{"mD", " ", "r", " ", "z"}], "]"}]}], ")"}]}], 
       SuperscriptBox[
        RowBox[{"(", 
         RowBox[{
          SuperscriptBox["z", "2"], "+", "1"}], ")"}], "2"]], ",", 
      RowBox[{"{", 
       RowBox[{"z", ",", "0", ",", "\[Infinity]"}], "}"}], ",", 
      RowBox[{"MaxRecursion", "\[Rule]", "20"}]}], "]"}]}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"ImVs", "[", 
    RowBox[{"r_", ",", "mD_", ",", "\[Sigma]_", ",", "T_"}], "]"}], ":=", 
   RowBox[{
    FractionBox["1", "4"], " ", "mD", " ", 
    SqrtBox["\[Pi]"], " ", 
    SuperscriptBox["r", "3"], " ", "T", " ", "\[Sigma]", " ", 
    RowBox[{"MeijerG", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{
          RowBox[{"-", 
           FractionBox["1", "2"]}], ",", 
          RowBox[{"-", 
           FractionBox["1", "2"]}]}], "}"}], ",", 
        RowBox[{"{", "}"}]}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{
          FractionBox["1", "2"], ",", 
          FractionBox["1", "2"]}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"-", 
           FractionBox["3", "2"]}], ",", 
          RowBox[{"-", "1"}]}], "}"}]}], "}"}], ",", 
      FractionBox[
       RowBox[{
        SuperscriptBox["mD", "2"], " ", 
        SuperscriptBox["r", "2"]}], "4"]}], "]"}]}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"ImV", "[", 
    RowBox[{"r_", ",", "mD_", ",", "\[Alpha]_", ",", "\[Sigma]_", ",", "T_"}],
     "]"}], ":=", 
   RowBox[{
    RowBox[{"T", " ", "\[Alpha]", " ", 
     RowBox[{"(", 
      RowBox[{"1", "-", 
       RowBox[{
        FractionBox["1", "2"], " ", 
        SqrtBox["\[Pi]"], " ", 
        RowBox[{"MeijerG", "[", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{
            RowBox[{"{", "0", "}"}], ",", 
            RowBox[{"{", "}"}]}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"{", 
             RowBox[{"0", ",", "1"}], "}"}], ",", 
            RowBox[{"{", 
             RowBox[{"-", 
              FractionBox["1", "2"]}], "}"}]}], "}"}], ",", 
          FractionBox[
           RowBox[{
            SuperscriptBox["mD", "2"], " ", 
            SuperscriptBox["r", "2"]}], "4"]}], "]"}]}]}], ")"}]}], "+", 
    RowBox[{
     FractionBox["1", "4"], " ", "mD", " ", 
     SqrtBox["\[Pi]"], " ", 
     SuperscriptBox["r", "3"], " ", "T", " ", "\[Sigma]", " ", 
     RowBox[{"MeijerG", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{
           RowBox[{"-", 
            FractionBox["1", "2"]}], ",", 
           RowBox[{"-", 
            FractionBox["1", "2"]}]}], "}"}], ",", 
         RowBox[{"{", "}"}]}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{
           FractionBox["1", "2"], ",", 
           FractionBox["1", "2"]}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"-", 
            FractionBox["3", "2"]}], ",", 
           RowBox[{"-", "1"}]}], "}"}]}], "}"}], ",", 
       FractionBox[
        RowBox[{
         SuperscriptBox["mD", "2"], " ", 
         SuperscriptBox["r", "2"]}], "4"]}], "]"}]}]}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"ImVsb", "[", 
    RowBox[{"r_", ",", "mD_", ",", "\[Alpha]_", ",", "\[Sigma]_", ",", "T_"}],
     "]"}], ":=", 
   RowBox[{"Piecewise", "[", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
        RowBox[{
         RowBox[{"T", " ", "\[Alpha]", " ", 
          RowBox[{"(", 
           RowBox[{"1", "-", 
            RowBox[{
             FractionBox["1", "2"], " ", 
             SqrtBox["\[Pi]"], " ", 
             RowBox[{"MeijerG", "[", 
              RowBox[{
               RowBox[{"{", 
                RowBox[{
                 RowBox[{"{", "0", "}"}], ",", 
                 RowBox[{"{", "}"}]}], "}"}], ",", 
               RowBox[{"{", 
                RowBox[{
                 RowBox[{"{", 
                  RowBox[{"0", ",", "1"}], "}"}], ",", 
                 RowBox[{"{", 
                  RowBox[{"-", 
                   FractionBox["1", "2"]}], "}"}]}], "}"}], ",", 
               FractionBox[
                RowBox[{
                 SuperscriptBox["mD", "2"], " ", 
                 SuperscriptBox["r", "2"]}], "4"]}], "]"}]}]}], ")"}]}], "+", 
         
         RowBox[{
          FractionBox["1", "4"], " ", "mD", " ", 
          SqrtBox["\[Pi]"], " ", 
          SuperscriptBox["r", "3"], " ", "T", " ", "\[Sigma]", " ", 
          RowBox[{"MeijerG", "[", 
           RowBox[{
            RowBox[{"{", 
             RowBox[{
              RowBox[{"{", 
               RowBox[{
                RowBox[{"-", 
                 FractionBox["1", "2"]}], ",", 
                RowBox[{"-", 
                 FractionBox["1", "2"]}]}], "}"}], ",", 
              RowBox[{"{", "}"}]}], "}"}], ",", 
            RowBox[{"{", 
             RowBox[{
              RowBox[{"{", 
               RowBox[{
                FractionBox["1", "2"], ",", 
                FractionBox["1", "2"]}], "}"}], ",", 
              RowBox[{"{", 
               RowBox[{
                RowBox[{"-", 
                 FractionBox["3", "2"]}], ",", 
                RowBox[{"-", "1"}]}], "}"}]}], "}"}], ",", 
            FractionBox[
             RowBox[{
              SuperscriptBox["mD", "2"], " ", 
              SuperscriptBox["r", "2"]}], "4"]}], "]"}]}]}], ",", 
        RowBox[{"r", "<", "rsb"}]}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{
         RowBox[{"T", " ", "\[Alpha]", " ", 
          RowBox[{"(", 
           RowBox[{"1", "-", 
            RowBox[{
             FractionBox["1", "2"], " ", 
             SqrtBox["\[Pi]"], " ", 
             RowBox[{"MeijerG", "[", 
              RowBox[{
               RowBox[{"{", 
                RowBox[{
                 RowBox[{"{", "0", "}"}], ",", 
                 RowBox[{"{", "}"}]}], "}"}], ",", 
               RowBox[{"{", 
                RowBox[{
                 RowBox[{"{", 
                  RowBox[{"0", ",", "1"}], "}"}], ",", 
                 RowBox[{"{", 
                  RowBox[{"-", 
                   FractionBox["1", "2"]}], "}"}]}], "}"}], ",", 
               FractionBox[
                RowBox[{
                 SuperscriptBox["mD", "2"], " ", 
                 SuperscriptBox["rsb", "2"]}], "4"]}], "]"}]}]}], ")"}]}], 
         "+", 
         RowBox[{
          FractionBox["1", "4"], " ", "mD", " ", 
          SqrtBox["\[Pi]"], " ", 
          SuperscriptBox[
           RowBox[{"(", "rsb", ")"}], "3"], " ", "T", " ", "\[Sigma]", " ", 
          RowBox[{"MeijerG", "[", 
           RowBox[{
            RowBox[{"{", 
             RowBox[{
              RowBox[{"{", 
               RowBox[{
                RowBox[{"-", 
                 FractionBox["1", "2"]}], ",", 
                RowBox[{"-", 
                 FractionBox["1", "2"]}]}], "}"}], ",", 
              RowBox[{"{", "}"}]}], "}"}], ",", 
            RowBox[{"{", 
             RowBox[{
              RowBox[{"{", 
               RowBox[{
                FractionBox["1", "2"], ",", 
                FractionBox["1", "2"]}], "}"}], ",", 
              RowBox[{"{", 
               RowBox[{
                RowBox[{"-", 
                 FractionBox["3", "2"]}], ",", 
                RowBox[{"-", "1"}]}], "}"}]}], "}"}], ",", 
            FractionBox[
             RowBox[{
              SuperscriptBox["mD", "2"], " ", 
              SuperscriptBox[
               RowBox[{"(", "rsb", ")"}], "2"]}], "4"]}], "]"}]}]}], ",", 
        RowBox[{"r", "\[GreaterEqual]", "rsb"}]}], "}"}]}], "}"}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"ReV", "[", 
    RowBox[{"r_", ",", "m_", ",", "\[Alpha]_", ",", "\[Sigma]_", ",", "c_"}], 
    "]"}], ":=", 
   RowBox[{"c", "-", 
    RowBox[{"\[Alpha]", " ", "m"}], "-", 
    RowBox[{"\[Alpha]", 
     FractionBox[
      RowBox[{"Exp", "[", 
       RowBox[{
        RowBox[{"-", "m"}], " ", "r"}], "]"}], "r"]}], "+", 
    FractionBox[
     RowBox[{"2", " ", "\[Sigma]"}], "m"], "-", 
    FractionBox[
     RowBox[{
      SuperscriptBox["\[ExponentialE]", 
       RowBox[{
        RowBox[{"-", "m"}], " ", "r"}]], " ", 
      RowBox[{"(", 
       RowBox[{"2", "+", 
        RowBox[{"m", " ", "r"}]}], ")"}], " ", "\[Sigma]"}], "m"]}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"ReVc", "[", 
    RowBox[{"r_", ",", "m_", ",", "\[Alpha]_", ",", "c_"}], "]"}], ":=", 
   RowBox[{"c", "-", 
    RowBox[{"\[Alpha]", " ", "m"}], "-", 
    RowBox[{"\[Alpha]", 
     FractionBox[
      RowBox[{"Exp", "[", 
       RowBox[{
        RowBox[{"-", "m"}], " ", "r"}], "]"}], "r"]}]}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"ReVs", "[", 
    RowBox[{"r_", ",", "m_", ",", "\[Sigma]_"}], "]"}], ":=", 
   RowBox[{
    FractionBox[
     RowBox[{"2", " ", "\[Sigma]"}], "m"], "-", 
    FractionBox[
     RowBox[{
      SuperscriptBox["\[ExponentialE]", 
       RowBox[{
        RowBox[{"-", "m"}], " ", "r"}]], " ", 
      RowBox[{"(", 
       RowBox[{"2", "+", 
        RowBox[{"m", " ", "r"}]}], ")"}], " ", "\[Sigma]"}], "m"]}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"ReVsb", "[", 
    RowBox[{"r_", ",", "mD_", ",", "\[Alpha]_", ",", "\[Sigma]_", ",", "c_"}],
     "]"}], ":=", 
   RowBox[{"Piecewise", "[", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
        RowBox[{"c", "-", 
         RowBox[{"\[Alpha]", " ", "mD"}], "-", 
         RowBox[{"\[Alpha]", 
          FractionBox[
           RowBox[{"Exp", "[", 
            RowBox[{
             RowBox[{"-", "mD"}], " ", "r"}], "]"}], "r"]}], "+", 
         FractionBox[
          RowBox[{"2", " ", "\[Sigma]"}], "mD"], "-", 
         FractionBox[
          RowBox[{
           SuperscriptBox["\[ExponentialE]", 
            RowBox[{
             RowBox[{"-", "mD"}], " ", "r"}]], " ", 
           RowBox[{"(", 
            RowBox[{"2", "+", 
             RowBox[{"mD", " ", "r"}]}], ")"}], " ", "\[Sigma]"}], "mD"]}], 
        ",", 
        RowBox[{"r", "<", "rsb"}]}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"c", "-", 
         RowBox[{"\[Alpha]", " ", "mD"}], "-", 
         RowBox[{"\[Alpha]", 
          FractionBox[
           RowBox[{"Exp", "[", 
            RowBox[{
             RowBox[{"-", "mD"}], " ", "rsb"}], "]"}], "rsb"]}], "+", 
         FractionBox[
          RowBox[{"2", " ", "\[Sigma]"}], "mD"], "-", 
         FractionBox[
          RowBox[{
           SuperscriptBox["\[ExponentialE]", 
            RowBox[{
             RowBox[{"-", "mD"}], " ", "rsb"}]], " ", 
           RowBox[{"(", 
            RowBox[{"2", "+", 
             RowBox[{"mD", " ", "rsb"}]}], ")"}], " ", "\[Sigma]"}], "mD"]}], 
        ",", 
        RowBox[{"r", "\[GreaterEqual]", "rsb"}]}], "}"}]}], "}"}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"ReVm0", "[", 
   RowBox[{"r_", ",", "\[Alpha]_", ",", "\[Sigma]_", ",", "c_"}], "]"}], ":=", 
  RowBox[{
   FractionBox[
    RowBox[{"-", "\[Alpha]"}], "r"], "+", 
   RowBox[{"\[Sigma]", " ", "r"}], "+", "c"}]}]}], "Input",
 CellChangeTimes->{{3.726314830177012*^9, 3.726314831502235*^9}, {
   3.727440050934029*^9, 3.72744006900066*^9}, {3.727440105160881*^9, 
   3.72744018557771*^9}, 3.742215933829735*^9, {3.742216557912931*^9, 
   3.7422165749213457`*^9}, {3.743503313030858*^9, 3.743503313892556*^9}, {
   3.743503595861423*^9, 3.743503635413424*^9}, {3.74350366900007*^9, 
   3.7435036693702087`*^9}, {3.745326036206037*^9, 3.7453260766277523`*^9}, {
   3.745482701111857*^9, 3.745482718072043*^9}, {3.745574124796708*^9, 
   3.745574141941175*^9}, {3.745575311385284*^9, 3.745575329696678*^9}, {
   3.745575550614532*^9, 3.745575581433758*^9}, {3.74557562828763*^9, 
   3.745575628386141*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"rsb", "=", 
   FractionBox["1.542442506842263`", "0.197327"]}], ";"}]], "Input"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"mDcal", "[", 
    RowBox[{"\[Mu]_", ",", "T_", ",", "c_", ",", "d_"}], "]"}], ":=", 
   RowBox[{"Re", "[", 
    RowBox[{
     RowBox[{
      RowBox[{"Sqrt", "[", 
       RowBox[{
        FractionBox["Nc", "3"], "+", 
        FractionBox["nF", "6"]}], "]"}], 
      RowBox[{"g4", "[", 
       RowBox[{"\[Mu]", " ", "T"}], "]"}], "T"}], "+", 
     RowBox[{
      FractionBox["1", 
       RowBox[{"4", "\[Pi]"}]], "Nc", " ", 
      SuperscriptBox[
       RowBox[{"g4", "[", 
        RowBox[{"\[Mu]", " ", "T"}], "]"}], "2"], " ", "T", " ", 
      RowBox[{"Log", "[", 
       FractionBox[
        RowBox[{"Sqrt", "[", 
         RowBox[{
          FractionBox["Nc", "3"], "+", 
          FractionBox["nF", "6"]}], "]"}], 
        RowBox[{"g4", "[", 
         RowBox[{"\[Mu]", " ", "T"}], "]"}]], "]"}]}], "+", 
     RowBox[{"c", " ", 
      SuperscriptBox[
       RowBox[{"g4", "[", 
        RowBox[{"\[Mu]", " ", "T"}], "]"}], "2"], " ", "T"}], "+", 
     RowBox[{"d", " ", 
      SuperscriptBox[
       RowBox[{"g4", "[", 
        RowBox[{"\[Mu]", " ", "T"}], "]"}], "3"], "T"}]}], " ", "]"}]}], 
  ";"}]], "Input",
 CellChangeTimes->{{3.733119265141554*^9, 3.733119265474297*^9}, {
   3.74221632141649*^9, 3.742216327416469*^9}, {3.7422976352608967`*^9, 
   3.742297638871463*^9}, 3.742297734696323*^9, {3.7422994189974327`*^9, 
   3.742299421228344*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell["Plot potentials", "Subsection",
 CellChangeTimes->{{3.726381295754898*^9, 3.726381308641871*^9}, {
  3.7455753009095373`*^9, 3.745575306157651*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"ReV150", "=", 
  RowBox[{"Block", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"mD", "=", 
      RowBox[{"mDcal", "[", 
       RowBox[{
        RowBox[{"2", "\[Pi]"}], ",", "0.150", ",", 
        RowBox[{"kfinal", "[", 
         RowBox[{"[", "1", "]"}], "]"}], ",", 
        RowBox[{"kfinal", "[", 
         RowBox[{"[", "2", "]"}], "]"}]}], "]"}]}], "}"}], ",", 
    RowBox[{"Show", "[", 
     RowBox[{"Plot", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{
         RowBox[{"ReV", "[", 
          RowBox[{
           FractionBox["r", "0.197"], ",", "mD", ",", 
           RowBox[{"\[Alpha]cont", "[", 
            RowBox[{"[", "1", "]"}], "]"}], ",", 
           RowBox[{"\[Sigma]cont", "[", 
            RowBox[{"[", "1", "]"}], "]"}], ",", 
           RowBox[{"ccont", "[", 
            RowBox[{"[", "1", "]"}], "]"}]}], "]"}], ",", 
         RowBox[{"ReVc", "[", 
          RowBox[{
           FractionBox["r", "0.197"], ",", "mD", ",", 
           RowBox[{"\[Alpha]cont", "[", 
            RowBox[{"[", "1", "]"}], "]"}], " ", ",", 
           RowBox[{"ccont", "[", 
            RowBox[{"[", "1", "]"}], "]"}]}], "]"}], ",", 
         RowBox[{"ReVs", "[", 
          RowBox[{
           FractionBox["r", "0.197"], ",", "mD", ",", 
           RowBox[{"\[Sigma]cont", "[", 
            RowBox[{"[", "1", "]"}], "]"}]}], " ", "]"}]}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"r", ",", 
         RowBox[{"1", "/", "1000"}], ",", "30"}], "}"}], ",", 
       RowBox[{"AxesStyle", "\[Rule]", 
        RowBox[{"Directive", "[", 
         RowBox[{
          RowBox[{"FontSize", "\[Rule]", "25"}], ",", 
          RowBox[{"Thickness", "\[Rule]", "0.004"}], ",", 
          RowBox[{"FontFamily", "\[Rule]", "\"\<Helvetica\>\""}], ",", 
          "Black"}], "]"}]}], ",", 
       RowBox[{"BaseStyle", "\[Rule]", 
        RowBox[{"{", 
         RowBox[{"FontSize", "\[Rule]", "14"}], "}"}]}], ",", 
       RowBox[{"AspectRatio", "\[Rule]", "0.85"}], ",", 
       RowBox[{"AxesLabel", "\[Rule]", 
        RowBox[{"{", 
         RowBox[{"\"\<r [fm]\>\"", ",", "\"\<Re[V]\>\""}], "}"}]}], ",", 
       RowBox[{"PlotLabel", "\[Rule]", 
        RowBox[{"Style", "[", 
         RowBox[{"\"\<T=150MeV\>\"", ",", 
          RowBox[{"FontSize", "\[Rule]", "25"}], ",", 
          RowBox[{"FontFamily", "\[Rule]", "\"\<Helvetica\>\""}], ",", 
          "Black"}], "]"}]}], ",", 
       RowBox[{"ImageSize", "\[Rule]", 
        RowBox[{"{", 
         RowBox[{"600", ",", "600"}], "}"}]}]}], "]"}], "]"}]}], 
   "]"}]}]], "Input",
 CellChangeTimes->{{3.745475546296351*^9, 3.745475685839365*^9}, {
   3.7454765574398537`*^9, 3.74547662928951*^9}, {3.7454782534168158`*^9, 
   3.745478304226069*^9}, 3.745478338770372*^9, {3.7454785706708527`*^9, 
   3.745478570981407*^9}, {3.745478622208112*^9, 3.745478625334886*^9}, {
   3.745482740497963*^9, 3.7454827637324667`*^9}, {3.745575342561571*^9, 
   3.745575384538911*^9}, {3.745575453748225*^9, 3.7455754696841497`*^9}, {
   3.745575588015256*^9, 3.745575632583729*^9}, {3.74557584319516*^9, 
   3.745575869677643*^9}, {3.745575927909433*^9, 3.7455759372534018`*^9}, {
   3.745576889455285*^9, 3.7455768953009653`*^9}}],

Cell[BoxData[
 GraphicsBox[{{{}, {}, 
    TagBox[
     {RGBColor[0.368417, 0.506779, 0.709798], AbsoluteThickness[1.6], Opacity[
      1.], LineBox[CompressedData["
1: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
/T+1VM6m
       "]]},
     Annotation[#, "Charting`Private`Tag$2425400#1"]& ], 
    TagBox[
     {RGBColor[0.880722, 0.611041, 0.142051], AbsoluteThickness[1.6], Opacity[
      1.], LineBox[CompressedData["
1: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

       "]]},
     Annotation[#, "Charting`Private`Tag$2425400#2"]& ], 
    TagBox[
     {RGBColor[0.560181, 0.691569, 0.194885], AbsoluteThickness[1.6], Opacity[
      1.], LineBox[CompressedData["
1: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
GX/33kZw4F9ZNVd0xfTKykZIqvi//wc6dI61
       "]]},
     Annotation[#, "Charting`Private`Tag$2425400#3"]& ]}, {}, {}},
  AspectRatio->0.85,
  Axes->{True, True},
  AxesLabel->{
    FormBox["\"r [fm]\"", TraditionalForm], 
    FormBox["\"Re[V]\"", TraditionalForm]},
  AxesOrigin->{0, 0},
  AxesStyle->Directive[
   FontSize -> 25, Thickness -> 0.004, FontFamily -> "Helvetica", 
    GrayLevel[0]],
  BaseStyle->{FontSize -> 14},
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  ImagePadding->All,
  ImageSize->{600, 600},
  Method->{
   "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
    AbsolutePointSize[6], "ScalingFunctions" -> None, 
    "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
        (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
         Part[#, 1]], 
        (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
         Part[#, 2]]}& ), "CopiedValueFunction" -> ({
        (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
         Part[#, 1]], 
        (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
         Part[#, 2]]}& )}},
  PlotLabel->FormBox[
    StyleBox["\"T=150MeV\"", FontSize -> 25, FontFamily -> "Helvetica", 
     GrayLevel[0], StripOnInput -> False], TraditionalForm],
  PlotRange->NCache[{{
      Rational[1, 1000], 30}, {-3.4239346988680346`, 1.8640626445373167`}}, {{
     0.001, 30}, {-3.4239346988680346`, 1.8640626445373167`}}],
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.05], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{{3.745475634309608*^9, 3.7454756866956463`*^9}, 
   3.7454765765704107`*^9, {3.745476609902925*^9, 3.7454766298387957`*^9}, {
   3.7454782554575768`*^9, 3.7454783048643312`*^9}, 3.745478339372567*^9, 
   3.745478571789694*^9, 3.745478626191983*^9, {3.745482705282934*^9, 
   3.745482764682366*^9}, {3.7455753435104513`*^9, 3.7455753851192904`*^9}, {
   3.745575459033552*^9, 3.745575476847671*^9}, {3.745575854418545*^9, 
   3.7455758700873013`*^9}, {3.745575935863566*^9, 3.745575938101738*^9}, 
   3.7455768958159723`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"ReV200", "=", 
  RowBox[{"Block", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"mD", "=", 
      RowBox[{"mDcal", "[", 
       RowBox[{
        RowBox[{"2", "\[Pi]"}], ",", "0.200", ",", 
        RowBox[{"kfinal", "[", 
         RowBox[{"[", "1", "]"}], "]"}], ",", 
        RowBox[{"kfinal", "[", 
         RowBox[{"[", "2", "]"}], "]"}]}], "]"}]}], "}"}], ",", 
    RowBox[{"Show", "[", 
     RowBox[{"Plot", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{
         RowBox[{"ReV", "[", 
          RowBox[{
           FractionBox["r", "0.197"], ",", "mD", ",", 
           RowBox[{"\[Alpha]cont", "[", 
            RowBox[{"[", "1", "]"}], "]"}], ",", 
           RowBox[{"\[Sigma]cont", "[", 
            RowBox[{"[", "1", "]"}], "]"}], ",", 
           RowBox[{"ccont", "[", 
            RowBox[{"[", "1", "]"}], "]"}]}], "]"}], ",", 
         RowBox[{"ReVc", "[", 
          RowBox[{
           FractionBox["r", "0.197"], ",", "mD", ",", 
           RowBox[{"\[Alpha]cont", "[", 
            RowBox[{"[", "1", "]"}], "]"}], " ", ",", 
           RowBox[{"ccont", "[", 
            RowBox[{"[", "1", "]"}], "]"}]}], "]"}], ",", 
         RowBox[{"ReVs", "[", 
          RowBox[{
           FractionBox["r", "0.197"], ",", "mD", ",", 
           RowBox[{"\[Sigma]cont", "[", 
            RowBox[{"[", "1", "]"}], "]"}]}], " ", "]"}]}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"r", ",", 
         RowBox[{"1", "/", "1000"}], ",", "30"}], "}"}], ",", 
       RowBox[{"AxesStyle", "\[Rule]", 
        RowBox[{"Directive", "[", 
         RowBox[{
          RowBox[{"FontSize", "\[Rule]", "25"}], ",", 
          RowBox[{"Thickness", "\[Rule]", "0.004"}], ",", 
          RowBox[{"FontFamily", "\[Rule]", "\"\<Helvetica\>\""}], ",", 
          "Black"}], "]"}]}], ",", 
       RowBox[{"BaseStyle", "\[Rule]", 
        RowBox[{"{", 
         RowBox[{"FontSize", "\[Rule]", "14"}], "}"}]}], ",", 
       RowBox[{"AspectRatio", "\[Rule]", "0.85"}], ",", 
       RowBox[{"AxesLabel", "\[Rule]", 
        RowBox[{"{", 
         RowBox[{"\"\<r [fm]\>\"", ",", "\"\<Re[V]\>\""}], "}"}]}], ",", 
       RowBox[{"PlotLabel", "\[Rule]", 
        RowBox[{"Style", "[", 
         RowBox[{"\"\<T=200MeV\>\"", ",", 
          RowBox[{"FontSize", "\[Rule]", "25"}], ",", 
          RowBox[{"FontFamily", "\[Rule]", "\"\<Helvetica\>\""}], ",", 
          "Black"}], "]"}]}], ",", 
       RowBox[{"ImageSize", "\[Rule]", 
        RowBox[{"{", 
         RowBox[{"600", ",", "600"}], "}"}]}]}], "]"}], "]"}]}], 
   "]"}]}]], "Input",
 CellChangeTimes->{{3.745575503356999*^9, 3.745575509572876*^9}, {
  3.745575957643385*^9, 3.745575981965461*^9}, {3.745576915930037*^9, 
  3.745576917362273*^9}}],

Cell[BoxData[
 GraphicsBox[{{{}, {}, 
    TagBox[
     {RGBColor[0.368417, 0.506779, 0.709798], AbsoluteThickness[1.6], Opacity[
      1.], LineBox[CompressedData["
1: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
978cRqaO
       "]]},
     Annotation[#, "Charting`Private`Tag$2425464#1"]& ], 
    TagBox[
     {RGBColor[0.880722, 0.611041, 0.142051], AbsoluteThickness[1.6], Opacity[
      1.], LineBox[CompressedData["
1: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
fywt/fP/+0ASBQ==
       "]]},
     Annotation[#, "Charting`Private`Tag$2425464#2"]& ], 
    TagBox[
     {RGBColor[0.560181, 0.691569, 0.194885], AbsoluteThickness[1.6], Opacity[
      1.], LineBox[CompressedData["
1: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
       "]]},
     Annotation[#, "Charting`Private`Tag$2425464#3"]& ]}, {}, {}},
  AspectRatio->0.85,
  Axes->{True, True},
  AxesLabel->{
    FormBox["\"r [fm]\"", TraditionalForm], 
    FormBox["\"Re[V]\"", TraditionalForm]},
  AxesOrigin->{0, 0},
  AxesStyle->Directive[
   FontSize -> 25, Thickness -> 0.004, FontFamily -> "Helvetica", 
    GrayLevel[0]],
  BaseStyle->{FontSize -> 14},
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  ImagePadding->All,
  ImageSize->{600, 600},
  Method->{
   "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
    AbsolutePointSize[6], "ScalingFunctions" -> None, 
    "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
        (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
         Part[#, 1]], 
        (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
         Part[#, 2]]}& ), "CopiedValueFunction" -> ({
        (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
         Part[#, 1]], 
        (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
         Part[#, 2]]}& )}},
  PlotLabel->FormBox[
    StyleBox["\"T=200MeV\"", FontSize -> 25, FontFamily -> "Helvetica", 
     GrayLevel[0], StripOnInput -> False], TraditionalForm],
  PlotRange->NCache[{{
      Rational[1, 1000], 30}, {-2.2135042868396173`, 0.8849857348779271}}, {{
     0.001, 30}, {-2.2135042868396173`, 0.8849857348779271}}],
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.05], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{
  3.745575510035975*^9, {3.7455759699566507`*^9, 3.745575982338203*^9}, 
   3.745576917989036*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"ReV300", "=", 
  RowBox[{"Block", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"mD", "=", 
      RowBox[{"mDcal", "[", 
       RowBox[{
        RowBox[{"2", "\[Pi]"}], ",", "0.3", ",", 
        RowBox[{"kfinal", "[", 
         RowBox[{"[", "1", "]"}], "]"}], ",", 
        RowBox[{"kfinal", "[", 
         RowBox[{"[", "2", "]"}], "]"}]}], "]"}]}], "}"}], ",", 
    RowBox[{"Show", "[", 
     RowBox[{"Plot", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{
         RowBox[{"ReV", "[", 
          RowBox[{
           FractionBox["r", "0.197"], ",", "mD", ",", 
           RowBox[{"\[Alpha]cont", "[", 
            RowBox[{"[", "1", "]"}], "]"}], ",", 
           RowBox[{"\[Sigma]cont", "[", 
            RowBox[{"[", "1", "]"}], "]"}], ",", 
           RowBox[{"ccont", "[", 
            RowBox[{"[", "1", "]"}], "]"}]}], "]"}], ",", 
         RowBox[{"ReVc", "[", 
          RowBox[{
           FractionBox["r", "0.197"], ",", "mD", ",", 
           RowBox[{"\[Alpha]cont", "[", 
            RowBox[{"[", "1", "]"}], "]"}], " ", ",", 
           RowBox[{"ccont", "[", 
            RowBox[{"[", "1", "]"}], "]"}]}], "]"}], ",", 
         RowBox[{"ReVs", "[", 
          RowBox[{
           FractionBox["r", "0.197"], ",", "mD", ",", 
           RowBox[{"\[Sigma]cont", "[", 
            RowBox[{"[", "1", "]"}], "]"}]}], " ", "]"}]}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"r", ",", 
         RowBox[{"1", "/", "1000"}], ",", "30"}], "}"}], ",", 
       RowBox[{"AxesStyle", "\[Rule]", 
        RowBox[{"Directive", "[", 
         RowBox[{
          RowBox[{"FontSize", "\[Rule]", "25"}], ",", 
          RowBox[{"Thickness", "\[Rule]", "0.004"}], ",", 
          RowBox[{"FontFamily", "\[Rule]", "\"\<Helvetica\>\""}], ",", 
          "Black"}], "]"}]}], ",", 
       RowBox[{"BaseStyle", "\[Rule]", 
        RowBox[{"{", 
         RowBox[{"FontSize", "\[Rule]", "14"}], "}"}]}], ",", 
       RowBox[{"AspectRatio", "\[Rule]", "0.85"}], ",", 
       RowBox[{"AxesLabel", "\[Rule]", 
        RowBox[{"{", 
         RowBox[{"\"\<r [fm]\>\"", ",", "\"\<Re[V]\>\""}], "}"}]}], ",", 
       RowBox[{"PlotLabel", "\[Rule]", 
        RowBox[{"Style", "[", 
         RowBox[{"\"\<T=300MeV\>\"", ",", 
          RowBox[{"FontSize", "\[Rule]", "25"}], ",", 
          RowBox[{"FontFamily", "\[Rule]", "\"\<Helvetica\>\""}], ",", 
          "Black"}], "]"}]}], ",", 
       RowBox[{"ImageSize", "\[Rule]", 
        RowBox[{"{", 
         RowBox[{"600", ",", "600"}], "}"}]}]}], "]"}], "]"}]}], 
   "]"}]}]], "Input",
 CellChangeTimes->{{3.745576006829959*^9, 3.74557601350111*^9}, {
  3.7455769215340147`*^9, 3.745576922938327*^9}}],

Cell[BoxData[
 GraphicsBox[{{{}, {}, 
    TagBox[
     {RGBColor[0.368417, 0.506779, 0.709798], AbsoluteThickness[1.6], Opacity[
      1.], LineBox[CompressedData["
1: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
nZX7z/xhFdPLy//8f9ZYS6I=
       "]]},
     Annotation[#, "Charting`Private`Tag$2425524#1"]& ], 
    TagBox[
     {RGBColor[0.880722, 0.611041, 0.142051], AbsoluteThickness[1.6], Opacity[
      1.], LineBox[CompressedData["
1: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
2GGW64MI0goxmkHB69mhzaXUQNKy1BfGJ/awQ0ddIWfSktvt0w/asUP11852
pMUuCXHre7LDI+HS5qTXDgTXiz9kh+OWGXqkWUvP2DV3sUNaKi5ImpFOurB4
mh1Gas9ykabTbpXNonJANf8jzKTnX+wejFTmgCfkF35rEZ7B6ff663PAlmy1
EdJTQjmvXC04YKhjei/p4WAFL5PLHLBiq00z6cH8ribtOxywVDuihnTv7GMd
+QQOmDCwWEYaP81BYSoh8tHlPNK1u4Zv5fFxQlfzjhTSaWlRGfr/cEJGBb1E
0tc4YHWxLicsvVn7hLRq9V2BKkdOaOd95y5pVrWtWgcvccK+4Ldhf+rf6znc
FMYJawQZQkhHWGnFYx844bKVjD/p0587C4+Xc0IPurHLpKHo7Z4+jBNGC3Vd
JD32s2PjGCsXFF6r6U5638nALMoRLtj30tOB9Prvis1BblxQt8DUjvTyhsZ5
1iAuaBFkdJR05rA85M3ggpkrtyxJ2765fF24kQu+NlM/QJrL60eZ1AoXvAXA
HtJ5WlI8G+W5YR57ohHps4vnLNQOcMOSC1YGpCsChXH9JG542yJJl/QVIxc5
kwpu2GWrrEVagR05HfzNDRtl5rb8ye9jbVbi5oHr9i2qkt5h/Hb+jQwPzGnZ
ovynfxxMMHsPD3xhpbmRdHK11fVCLx5okN0jR9r8flpZWSwPpC+WlybNaL3E
XVfCA3VODYmTfi+636JtjAd+M5BYR/o4lvioS5gX1hx5K0yaIqh5hjmHF167
MMJH+olpueaGo3wwV0WAm7TWDTvmPUt8kK6vi4N0/ZfJetfYNbDoSxI76Upr
11j2cn7IYhjORrp4sv/UixkB+PGd0h+fU7ygkrBNEEpGUv9Y8gTDXEygEJys
XKKSDi2lDQ+8E4bBovN/PKdUSNPuFoEVlbN/LNW9eXcY1zqofOg/Gz969gbX
EoNU5f8sO7JBKOKKOOSW+M8U/UxfkC8B84T/8w/7QlaZi5KQKvSfn8Qrma3n
koIugv/ZUFn6cdMbKaj6v4e+rO0OtpCG4v/b08u8V3daGgr+71nFu/0jUTJQ
4H/bzs/6VyrKQv7//a3ETji98K8NKNC4iGX9qq85ej5T1/xn1V4nP1Lo/eVX
LZt950dN4YZV39P+9H12dOOqsyynCi5rKK46Ou5an8UppVWr6yT5bb67adU3
PRvXnm1UXvWeX0rDvtdUVr1p6JKp13rVVY8IcJ85W/LXdywqhSNt1FbN2s1f
5kDZvGqH4Os89g//+pEF4LFT2rLqdI9r3BxVfx2bNJLcfUJ91Wdku7WdqRqr
5s+hPyGW+NdPfZyMazQ1V00JOaK0ufWvDTK8UvI9tFZtLykstSigveojuUzm
2h//WsNVVCxxr86qf7lm93wa+2v/69cMF4J1Vz3x7d5RIL511XoHN51Xzf9r
p5lxqX1W21adu63xdsrLv+YKyv69svLX/wJ14iRi
       "]]},
     Annotation[#, "Charting`Private`Tag$2425524#2"]& ], 
    TagBox[
     {RGBColor[0.560181, 0.691569, 0.194885], AbsoluteThickness[1.6], Opacity[
      1.], LineBox[CompressedData["
1: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
kvXtDfkw30SelkZaZpP18z1WfNj/4jemk5Y6v1Bo82k+TNN76JZBWqLneu3S
SD68qb8hKZs0d5mTVWM7H7IMuBwsIM3OIldYMsaHLzsalhWSZtFtUnjNw49+
k5YdH0hPJhv03lbnR0cZGb1S0gPXV7jv8uLHK3QB6wrSvQXtDboh/Bh7/ktF
Jemu8QfrlB7yo0HzTo0q0sQxfhpHKT+6vvJvqiZdvXMg6J2oANZ5v8hrIP30
aUTq5uUC6OZaNN5I+go/VpWsF0CdA6DSRFqjKoz+xU4Aj2fecGuh+tfU09lz
nqw/3xfQSuXf6TzYcFMAzwyV32WQvrVPJ56ZKYASKYuiCGp+b/5XaPtZANub
2UP/RxoX3+j8ziTvLzzh00Z6iNGqMsQtiMc3xmztIG3i4PeaZimIXvYeV76T
Vvyo2uh/ShCN0kw3d5OeVa6f5PYXxLHfhtOUXwwooUiqILYXWFv1kr5mUm1z
970gKnl/4e4jfeSl11XJekGk5wmmUhZ0r/wkO0fepxjX1U+9V/25gUdiQnjY
Y4P3AOl3OrLCKkpC6JW6XWCQtMv0GQvN3ULYFb9c7gfpcj9JYnOiECbdLlv0
k3RSZyFraZYQMgVcQil77zixbFe5EN7M9qYNk17Bl++855cQuvuYNFL2XZtR
0scujN7DO2CEyv/O3agmJIyO+xckUt6mnz75Ul4Y81lijo6SXjXJyT+qJoxM
1yu5lJc8s5RaqyOMKVox4r9Ij/JzYI6hMG61LsulnFS172qhuzDKsWv/GKPm
4fs8gv2yMN56zLn2N9WfJkvy9iBh1CtPvkDZPPzpp0+xwui0L3mGMm6ba+ZP
EcY+E0W9cdKqY3sGjF8J492JLE/K7PtnhGpKhZFf26yf8hC3mSy9Whg5w8/J
T5BuefNYc1+LMF5d37ufcsZiU4vmIWFcYdD/jrItM+F+u6QICl/I95yk6uWC
S3/Ji2A0szuB8l4H91GulSLI6f35M2WDgR3GqptFMMitXXKKdNEqDa+NhiLI
F70CKG88uyjZdK8IPksys6WsOdXP4u5M5g9YJVN+vrF+ZcBZEWTU7S2jrHgl
3zLqogh+HjbqoSzJE/Y6L0wE9V0sFadJ0xZoO3G+FUGtXXl3KV84KBOxsFgE
K918/6E8GsPzQeWLCN456fOR8neFliUm7SKY1L96nLL1sWL9owMiSJueEpwh
3fTshceZ3yJoQxNdRrlS07fqHp8ovlqOJpR3ejjPpNBF8aa/jS3lwjd7VHKl
yX3Dbg/Kr1HRn9ASxaj+VdGUo40/aysfEsUeA02CskRYht16B1FcNdT/g/Kt
upjbRq6iKCmnNkfZ75Brn5s/mddhuGSW9HTcgYX+IaK4/IaWCmWP9s3bIiJF
8XRfqjZlZ2d6XM5zUeQgnHdT7kid/VyeKYoj2a8OUz7y8/s4o0AUA+qjnSjv
9swxY6sTRR97y8uUda5ZcRrOiGJHdl0K5fSynVpHuMRQaovLK8qqAprWriJi
2Df5JpeydDh7TvgyMTz826uScmTDQNdjdTF8EvarnrLo4gaxN7pi2MyjxqTM
mZDi0mokho5XWwcpX+4Mu/9jnxjyWh8cozyp5F3KYiOGC4qiZygP/GMsq+gh
hjVrzvPNka7NG6k9GSuGaRr5CpSfh8Hbmidi+ExitQplf8cbD3VeiqGAiq86
ZS0R+ZOsRWI4dCBZl3KYnRlXRI8Y5t7eaUjZWTd2YHJYDOu/RZtS3izYW2M1
LYav/b6aU/6Z5RuvLCSOGSHMQ5RN+V7q5q0WxxtLHh+nrERMS8ttFMcXG+in
KNNe7+QM2CGO01uPn6b8zxGi2vSgOBq3VHpSFkwXOtFxSRylflzzp9x1zdJM
P1AclypjAOV3lk90XoSJY4tHZyDlkxzA4flIHH1CxkIoV+w/Gcv3WRy3hW+K
pJykluPvWiuOEa7O9yl7s3Ier2sVx0gfv2jKqs9jtOOGxLFzJCCecvBceZWm
BB3vK3Y9oWxXuzDrnjQd492jUyjrpdjFTCvR8abu9meU+8ymnUrW03HohvsL
ygaPV7AdPErH/+UbZlCeNPnwRf4sHZ+mTGRSTpk4GD1wjY6x3y+9ocxtFLTG
9zkdRcZk3lHOHpNl3ZVPR4ViKKDsGP+mUryajsPdUEi5ZKTbMfk3HTfP9RZT
3l3qNsrFL4EmW3NLKbfcn7zsKCOB0eJuZZQdTvoJlK6WwAuqfJ//zGsT/31F
fQnUUgsup8zZI/Wq000CeX/u/EJ5yS318qT7EjgSmP6Vsqb2pk7bDxLoU1Vd
Q3knw2xWrl8CE8+k11E+ctVuQZv4AqxZfKCB8hlVj1UPNyzA+sCKRsqxF6Js
pEMX4Nfatc2UP33MDY8hFuAgi0Qr5V8SRMlizYX4uTuQQVnGnm0iym8hpvk+
Zf6ZR1nbQM8rSSyTEWyjPKFW2KbbsQjvfZ78Y9kOLYObgkswXMqinbL+/Ucv
CR0pNIvy/GOFQeWFt7yX4obVAX9M2/ziIhRIo5d38B9XWhdyy5+TQYvdIX8c
Ha9mpigoiwc5Q/94q7rcg4aXshhg8q/78yQ6rlvIYbDTvz7tbt61fkwO007/
63HVsO7BCHmcdf/XRybHL1eoKqD8uX9dVGol+bxQAe/+Z/YOk5c69svww3/e
QkP9Yi5FrPnPNpoHzvnEKeK3/3zF7vSjNdrLsfk/e3eK1zxoXo4t/9ndIYvG
ellp3go5IZVfC5XnfUc3++P4D5V5v947+t5rreq878Vd+W7hqDbvNesSL2mF
rZx3wOl6CZd69Xkb9qkNXLyyat4r+88buytqzHuQLuTkUvrXIRYVkrcPa86b
u0P8kw1Na942168KW0f+9X0LELZSWz3v525XhPi//HVs4mBSh/2aeTspdOge
51k7b/G3rPZSCX8dc8FZ/6u29rxpgZZqWk1/vSXV/UmBm868rWUkZafpuvO2
zOUw183667UnF0slGK2bd9/JnM7sob++fPXK1qnr6+c9XHTnECzVm/fGPSvP
ahT8tfPvn7Im+zbMO3dD/Y0nz/5a0D/n19zcX/8fros2RQ==
       "]]},
     Annotation[#, "Charting`Private`Tag$2425524#3"]& ]}, {}, {}},
  AspectRatio->0.85,
  Axes->{True, True},
  AxesLabel->{
    FormBox["\"r [fm]\"", TraditionalForm], 
    FormBox["\"Re[V]\"", TraditionalForm]},
  AxesOrigin->{0, 0},
  AxesStyle->Directive[
   FontSize -> 25, Thickness -> 0.004, FontFamily -> "Helvetica", 
    GrayLevel[0]],
  BaseStyle->{FontSize -> 14},
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  ImagePadding->All,
  ImageSize->{600, 600},
  Method->{
   "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
    AbsolutePointSize[6], "ScalingFunctions" -> None, 
    "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
        (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
         Part[#, 1]], 
        (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
         Part[#, 2]]}& ), "CopiedValueFunction" -> ({
        (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
         Part[#, 1]], 
        (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
         Part[#, 2]]}& )}},
  PlotLabel->FormBox[
    StyleBox["\"T=300MeV\"", FontSize -> 25, FontFamily -> "Helvetica", 
     GrayLevel[0], StripOnInput -> False], TraditionalForm],
  PlotRange->NCache[{{
      Rational[1, 1000], 30}, {-2.0118741426654374`, 0.5131835407771592}}, {{
     0.001, 30}, {-2.0118741426654374`, 0.5131835407771592}}],
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.05], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{3.745576013883164*^9, 3.745576923585371*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"ReV500", "=", 
  RowBox[{"Block", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"mD", "=", 
      RowBox[{"mDcal", "[", 
       RowBox[{
        RowBox[{"2", "\[Pi]"}], ",", "0.5", ",", 
        RowBox[{"kfinal", "[", 
         RowBox[{"[", "1", "]"}], "]"}], ",", 
        RowBox[{"kfinal", "[", 
         RowBox[{"[", "2", "]"}], "]"}]}], "]"}]}], "}"}], ",", 
    RowBox[{"Show", "[", 
     RowBox[{"Plot", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{
         RowBox[{"ReV", "[", 
          RowBox[{
           FractionBox["r", "0.197"], ",", "mD", ",", 
           RowBox[{"\[Alpha]cont", "[", 
            RowBox[{"[", "1", "]"}], "]"}], ",", 
           RowBox[{"\[Sigma]cont", "[", 
            RowBox[{"[", "1", "]"}], "]"}], ",", 
           RowBox[{"ccont", "[", 
            RowBox[{"[", "1", "]"}], "]"}]}], "]"}], ",", 
         RowBox[{"ReVc", "[", 
          RowBox[{
           FractionBox["r", "0.197"], ",", "mD", ",", 
           RowBox[{"\[Alpha]cont", "[", 
            RowBox[{"[", "1", "]"}], "]"}], " ", ",", 
           RowBox[{"ccont", "[", 
            RowBox[{"[", "1", "]"}], "]"}]}], "]"}], ",", 
         RowBox[{"ReVs", "[", 
          RowBox[{
           FractionBox["r", "0.197"], ",", "mD", ",", 
           RowBox[{"\[Sigma]cont", "[", 
            RowBox[{"[", "1", "]"}], "]"}]}], " ", "]"}]}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"r", ",", 
         RowBox[{"1", "/", "1000"}], ",", "30"}], "}"}], ",", 
       RowBox[{"AxesStyle", "\[Rule]", 
        RowBox[{"Directive", "[", 
         RowBox[{
          RowBox[{"FontSize", "\[Rule]", "25"}], ",", 
          RowBox[{"Thickness", "\[Rule]", "0.004"}], ",", 
          RowBox[{"FontFamily", "\[Rule]", "\"\<Helvetica\>\""}], ",", 
          "Black"}], "]"}]}], ",", 
       RowBox[{"BaseStyle", "\[Rule]", 
        RowBox[{"{", 
         RowBox[{"FontSize", "\[Rule]", "14"}], "}"}]}], ",", 
       RowBox[{"AspectRatio", "\[Rule]", "0.85"}], ",", 
       RowBox[{"AxesLabel", "\[Rule]", 
        RowBox[{"{", 
         RowBox[{"\"\<r [fm]\>\"", ",", "\"\<Re[V]\>\""}], "}"}]}], ",", 
       RowBox[{"PlotLabel", "\[Rule]", 
        RowBox[{"Style", "[", 
         RowBox[{"\"\<T=500MeV\>\"", ",", 
          RowBox[{"FontSize", "\[Rule]", "25"}], ",", 
          RowBox[{"FontFamily", "\[Rule]", "\"\<Helvetica\>\""}], ",", 
          "Black"}], "]"}]}], ",", 
       RowBox[{"ImageSize", "\[Rule]", 
        RowBox[{"{", 
         RowBox[{"600", ",", "600"}], "}"}]}]}], "]"}], "]"}]}], 
   "]"}]}]], "Input",
 CellChangeTimes->{{3.745576028421537*^9, 3.745576034646163*^9}, {
  3.745576313813418*^9, 3.745576318943305*^9}, {3.745576928322773*^9, 
  3.745576929405034*^9}}],

Cell[BoxData[
 GraphicsBox[{{{}, {}, 
    TagBox[
     {RGBColor[0.368417, 0.506779, 0.709798], AbsoluteThickness[1.6], Opacity[
      1.], LineBox[CompressedData["
1:eJxF0nk0lO0bB/BhLEMIoVQSSrImyhb3XfSWUL2ytSFLCy2IeCkSKSK0KNTY
hUgJFeWWSLZIpHjGjLFk3/dtfs/zvr8z/XWdzx/XOdf5Xl8Zh0vmzpwkEkmX
g0QiJvXqEK0kJQOQK/qnN7pzlg4t7lVp+JwNVvMIr55fZqFPmuOt9iUvgV96
zL108iISdt2dcFTyNahsjGY58c6hk0lRjuaeBWDVSWoms2AaZbXQt5jUvwGZ
xmZkDWwSTQuqDRoqFgF9uZzgz0cnkKGR/8tdN9+DEX9vRtOacRTlW+e5g1EC
NJXqBSD/GLpoc3f9o6el4KVKo4yW3Ch6MFHgv6rmI+jub5a5/2YYFd+lMSJn
y8AeN5UQrhNDiLmV21BAvhw87KviTlccRJQK5bTbRyqAcFTYIYf1A0jV3oKX
O/AzUDDYMpys1I8sFvzOBb6oBF4H7ItGj/Qh35iUmqW2L0Ci5ox/bnQvSlKv
UfHlqwZ1Bj9UBjt+oy+145HTO2vAP0Plwtp7fqPhM2vHPZxqAWkPa0PEyx4k
Rt5jMRJdB86WSi1oK/UgPeq5Qlf0Fezs8/xc+7IbOehEr+kdrAcjpyUihGE3
MnI5ob89ogE40y87zbV0oRYtt4ujct+Ak+e+mCTvLuTCHZzwougb+KGQcHLP
hi4UnficQ6m3EfAEMZfqr3WiTRfR9j7/7+CBQbtC0o5O9Fbvu+Mz8SZQm1/q
qTLORCZ8vx84ZzeB1l7Ls4Kvmaj9x3yFnGEzYAZqinV7M5F7qtBMx69mIOEU
f80BMhGXh6xCotsPcGMX74FdAkykKHggbD21Bfycjt7OldOBPrSeLG7V/Ami
26MuBwZ2oMMZ7oOPa36CHt8bDG+bDuRtGHtQfO4XiN09My0n2IH4RXICvke2
Akq1a094PwNR20tfRsu3gUv/6Bc1VTFQ+T+9okIWGJiRnMu9HcFA1vsWDWv7
MUDT9oovcWegfjFhr7BAGtjfvBx02pqBRF5qtfDktgOxcC+zAnkGSr1mQqnY
Swfl9OZkTWEG0jax0wnC6CDo0MKWnCk6Urv8qY4VzAAhBol7g9LpaPaoWY9t
AwMcSFTc1xpIR2WwZfnDug4wS1LNZdnSkZXQgNrVvA7g0jp56sgGOto45bm/
bakDKGTVnLAg0VFf27K9rjET9DaodXzpbEdXM0XvzdKZ4PC6EtvSF+0oT+tU
1gv1TlDuF/Nm3YN21FeRW+YU1AlCBrQlW3zbkRXTdKJBvgs4Sh06KGvajsLd
4lfc8ukCpoMN8pE729Gn5T45/eou4O8Be8Vl29G2dbcsMi90g4QLf1F2LtLQ
6czm83aoG4SxFmZe99PQU61NN8VFekDcaEazWCsN8Vt8LAjM7wHFEXszDhfT
EGSu/KrF8xvcvEftEM+hIW83254h699g1q7t6r0EGuoKX5A4tvAbSOYdTAsP
oaG16w6oCZv1groRz5+zvjT0d+bjfZ+pvUDTlT9r7hINlVTs8Nm+pw9MF/Uc
iT9OQ5NHgqN67/cB68ndu1TNaUiJ2ZhB7e4DeRHvWnSMaejx8qVf/KH9gB4v
tCFFm4a+hpeMlbb2g0/VvGFT22iIe50gv7fyANgReU82aysNeWhl6XbWD4CY
5Kgz8utpKLNi1jxWZhAc05CY6xKnIcaRfa6HLg8C08JQ34mVNGTm1hVfLDEE
1OXdb41y0VDw8vZ897NDoFO56kULC0NF4YG1W4qGgL5zyCxrHkMKmRuW7p8c
BkfM1sjwjmPIVuuC+IHcYdDSILNEH8LQw4piFRLHCGhPLx8b6sMQJ9PG9nzq
CNi7lpVPZWJIx+3ZFdnpERAn7kHdRceQNst336DcKAhX+dXIjWHoYkSVXbLX
KBjWVIoX+YGh0KZR12vUUTA7+UT98HcMpa5b42NTOQqWG0+K5zVgqC3zdJSQ
5BhwF1Vt/lmDoenRiCd9u8dACmONW1wVhkS1CzLKXcaA537su08lhvZ/Jn/0
fT8G3sTsNwv5hCFHQaU6y+4xkHxna3HeRwz5W5j/2iY0Dh68ikycRhgqYCaO
9diNg1ecXzRK32OoYeuXpY+3xwFjG1ZoWIyhQbcRvqevxsH7srBjre8wJMvS
lz1CngB6YcsG+m8wpP+Xs6qq8gSIGBQs5i3EkE1EuC6f5QRwd5Kp68jHUOS6
NnOUPgEkf61O/JiH72eEG3XXTuB9JWv9eIWhQk2DnSsmJoDV37Bv6iWGMLMk
SWswCfp1P0Rb5GLoUqv5imvOk2D8glLUvRd43me4lpLvTIKKyrfvfuVgaOv1
M4zhlklgaWvTFpiNofcCko1iy5MgjzuUh/kcQ4djqz/pbpoCNdkJZca4r+Sp
PAtxmwI8FUIhqlkY4gP0x9kxU+BKlXBXViaGntREhTW+nwJxev0BKrg/dU1c
2MA3DZrbpfYbZWDIyj3NzkhtGpzoCu9teYah/iWrv10sp0HJiuwXbriFVxdp
FiZNA9r4k8KX6RhKSXGVxyqnQWxXW7A17p3bpNZwDk+Dj8YO0Zy4TxpfXzDT
nQE+k6lxTmkYGm1WH7psPwOWssa11uEOduhsjw2ZAeWbL1s0p2Ioy++vsu7G
GSBp/tnxCG59yuzrFXMzwFXlO+9q3A0PMtPUpWeBmOTRCFoKhmZyBEKvuc6C
mOWKPA/cYbolvinRs+Dd8RyR3bg3VF46X/VmFpDce+tFcBsxGg+Jc82BTDXf
2XfJGGo5H7xbT3EOnP6loRKN22Vuh8apw3OAnP3b0gV3tGisRM6TOXDDz2qz
LO5NCQco38vmQO9LLIGE+63S4txs7xw4Z/+rgJGEoXYjO5rRjnnQ2lx3Og23
+zfhepfj82BvjyUtFDeXbVlpVOA8EDlrl34Jt5L35lSsbh70X1EZNcBdQm55
yDk5D8buDpor4DaPun1LYe0CgGbCtaK4fTIHXDxPLwCTkvna/kQMrdj59ERc
+AIQt+Pd9RM3tezgwdK8BdD/biryM+6KtlfqAqwFoBCkUZyG2+aso9z2zYtg
36ot/jG4ByfFxG1MFoHyOe2lW7hFhXxmUx4tgvhVqwUu4E6L29pf9WERwALZ
O/a4tbe0tY10LoJJakmqBW47aID0ti0B62GbMAPciqv3SCdbLoEKwUZfTdyT
Q3sDKH5LQCD4Urci7rB4M9BcsQSmQ61EJXFbePydoDewBHIrequEcUsbW7KS
hJdBrJtiDwV3/vQJdPH4Mnj6ekJnPgFDAXX20s3Xl8HvseSzE7gPpDoF6KUv
g+clJv2DuOl/nweUsWWgyMXfwsCdpeCWcFGCBVqFv+u24fZkXWY16bFAddgs
sxk3f44fSgphgfx9kRM1uJuCAqQp2Sxw2XjBshJ3wrGggIvfWKAns2C0DPfa
4IoEKSESVK4KLS/Cff1SZX3DRhK0uJ09W4i7+1gVK0iDBB+9UT7+GvdL9Tq7
fhsSLA+4n5yNW0KqPvKpKwl+MnIIysTtR/mGDvuT4FunE2HpuP+iN0m/SSHB
mxwZ5CTcz6t/HHIpJEGl7lgPKm7hwp8BUlUk+HpkivQEd1s4Rg8aJkHDFK4r
j3BDn/aVWhwccLJ45OhD3OmODNC/igNab8+3vo/bTbcr4bAOB9SpGIiPxP1j
c0892ZQDfiwRY0Tg1hPpZRXackBz90CdcNw8vQN2UsEc0HjfJoVQ3K7fhyIb
Yjjgs3fexbdwN5SMoKBMDnjs1H77ENzxDyek+79ywPRPYm1BuEmBU4eednDA
8NVBuTdwnz4/E3B4kgPCLvN7gbi3GS7QCyU5YVS+3fUA3DGqSytdlDlhLtUy
zB/3giQLSAFOqMu3IfEa7s+jnIlBTpwwBPYP+uFWwrgadnpzQi4mQ5ZwVCUP
qT+UE97lj3TwxX2cym9/OJcTvtXWW/LBXRoqEEUu44SHao9bE5b3EiotbOKE
kVd93nnjHjUR3Sg1zwkVSXIPruC20hI73CBAhi658ysIF8tKXA+SJsOT5afC
vHCHzEky+ozIMCIvIdaTuE9IsGH7UTL84pexkTDvJlKp3wUyvPWV48Vl3LcP
9iQIxpBh+t5jrR64qxx/RVplkSGXYokPYf5/agMSSshwX4beesJ3UvLs1H+T
4QVNb3d33LVv0w75LpCh0cc3soQFvj4Gn1ZywTN3JH664b476y9tqc0F5SlW
Bwl/FfRYSTXlgpym34QIr5RzZvXYc8ET6QmNl4i8zEzoPqFckP98iCPhBgeD
+o9PuSAf03QbYREfdcSfxwV995exLuK+l7w64UkrF1w4oZxOuPENf2T3MBfs
bW6/SnhV3ZK/KpkbTqQWWxJ+MNNpW6rEDVMmAgUJNwm0HOSD3DB8fsfgBdzi
stUG5hbcUBVk1hKOMX25oesqN9RUd79HuOVUipBKNDcMehXnTXiNd8yyVxo3
HJhStiUcm3S1nfcrN3xmuFuNcGvhpa+HmdyQyyNRkvDaWoeS2GluKPpQlpvw
k+n9VCVpHsgdfYR+Hje2YtddTw0eKLK/p46wlIya/4d9PPBqvOMHwlQTcdtD
brjvDFEJt9tTDj4O5oG3PTujCEtfWdDveMwD9W7EBBFOTOyQuvyRBxowBFwJ
MwqaBN8388AO+gc7wjI1lUtc/TzwuCWvJeHkqRxajCgvnKAY7SbM5E+qo8vz
Qt5ABW3CchsffFDQ44UcP2+pEU494Pu0yJEXFqc/lSbcbXchguzDC49p7l9z
/t8+218zDeeF9Z8sRQg/S/jrZHs+Lww5fpOLcG++jtmWKl5o/+XpsituhWpl
fTcaL5SZ454jnDUpKsXJQ4EC4gXDhPv5eARN1lKg9+7JPsJK0nOL91Up8NGL
y92Es43p2GZrCuQf3UwjnBH4CIi5UKCWwb1fhNPeHUrmvEaBll+UfhCmbi09
Q0+mwLgyWj3h+FM+1XUFFBghPF5L+HHsNpX3XyjQ6ohSNeFovqTxx8MUOBjM
XUE47B+Rt15ifHC4wbaUcHBf4DVzXT44t6j4nvC1o+N71Oxxz9u+JXylyoEi
EMIH/WpH8wlf0vle1/ucDyacbXlF+Gym4f2Kb3wwLZU/l/ApyXyb5Bk+mLIh
KJvwsdBNGwKk+OEBRd0swqbnuDO1z/HDGBfTdMLAuEdjPJ8f6n9enUJ4E1+G
sbPpCli7woZKmFJ1zu5n5wp4XkYtnvDQbSUvEz8B+HadeCzhxv1DYSWigtDa
OfcR4dogScaelJXQNsDxIWFHenJcp6QI3LrEekD4ycEara0nRKHn0ZF/3fRh
oukidRVc6zP4r+tsLlJX1IhB08WBf/15ovdMxow4PNr1ny8rX9mWpL8aPqT/
543O5LnYoDWwuv0/h1cxh/peS8LM/3tOpYyp07UWJv/fMl0aByKE1sOk/9s4
Lu0VQ1uKbdKeF/6gVJrtJ4kq5vJCMmwPfpDoum0py/as8r3e4Rg5tssr7SSz
yzaxbUiCxhW88mzfcPJI26G1hW2v029InNcV2N5UdPfrt7KtbN/XeftldkSR
7QKryY9+O5XZfpRw47flGRW2d+imBGjcU2X7lscPiQs/1Ng2HVAZ8r+xjW3V
wX8Oesmrsz0svvLchco/vmtZJxl9cjvblC6xageSBtsOt28K2z/+4zhLIGyn
osl2tvuNlQL1f0xNGU7tct7B9rlNXTqufDvZFivmdJZK/uOnvi7G37S0/vwn
9LiKRusfG+Z4PSt112bbfqOkzKK4DtvH33Nb6Lz5450X10klm+myPXCxqPvt
6B9fv3nDaOG2Htvj5fdPgA272DY4ouqpXvrHLjNjMoes9dl+r//jzrPnfywU
XDTFYv3x/wAXvZCw
       "]]},
     Annotation[#, "Charting`Private`Tag$2425577#1"]& ], 
    TagBox[
     {RGBColor[0.880722, 0.611041, 0.142051], AbsoluteThickness[1.6], Opacity[
      1.], LineBox[CompressedData["
1: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
       "]]},
     Annotation[#, "Charting`Private`Tag$2425577#2"]& ], 
    TagBox[
     {RGBColor[0.560181, 0.691569, 0.194885], AbsoluteThickness[1.6], Opacity[
      1.], LineBox[CompressedData["
1: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
oXbL7bRnf8wflP+byfzj/wFjDbxD
       "]]},
     Annotation[#, "Charting`Private`Tag$2425577#3"]& ]}, {}, {}},
  AspectRatio->0.85,
  Axes->{True, True},
  AxesLabel->{
    FormBox["\"r [fm]\"", TraditionalForm], 
    FormBox["\"Re[V]\"", TraditionalForm]},
  AxesOrigin->{0, 0},
  AxesStyle->Directive[
   FontSize -> 25, Thickness -> 0.004, FontFamily -> "Helvetica", 
    GrayLevel[0]],
  BaseStyle->{FontSize -> 14},
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  ImagePadding->All,
  ImageSize->{600, 600},
  Method->{
   "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
    AbsolutePointSize[6], "ScalingFunctions" -> None, 
    "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
        (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
         Part[#, 1]], 
        (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
         Part[#, 2]]}& ), "CopiedValueFunction" -> ({
        (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
         Part[#, 1]], 
        (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
         Part[#, 2]]}& )}},
  PlotLabel->FormBox[
    StyleBox["\"T=500MeV\"", FontSize -> 25, FontFamily -> "Helvetica", 
     GrayLevel[0], StripOnInput -> False], TraditionalForm],
  PlotRange->NCache[{{
      Rational[1, 1000], 30}, {-2.305238656081771, 0.2967907644419779}}, {{
     0.001, 30}, {-2.305238656081771, 0.2967907644419779}}],
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.05], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{
  3.74557603497453*^9, {3.745576314410264*^9, 3.745576319703805*^9}, 
   3.745576929960609*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"ImV150", "=", 
  RowBox[{"Block", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"mD", "=", 
      RowBox[{"mDcal", "[", 
       RowBox[{
        RowBox[{"2", "\[Pi]"}], ",", "0.150", ",", 
        RowBox[{"kfinal", "[", 
         RowBox[{"[", "1", "]"}], "]"}], ",", 
        RowBox[{"kfinal", "[", 
         RowBox[{"[", "2", "]"}], "]"}]}], "]"}]}], "}"}], ",", 
    RowBox[{"Show", "[", 
     RowBox[{"DiscretePlot", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{
         RowBox[{"ImV", "[", 
          RowBox[{
           FractionBox["r", "0.197"], ",", "mD", ",", 
           RowBox[{"\[Alpha]cont", "[", 
            RowBox[{"[", "1", "]"}], "]"}], ",", 
           RowBox[{"\[Sigma]cont", "[", 
            RowBox[{"[", "1", "]"}], "]"}], ",", "0.150"}], "]"}], ",", 
         RowBox[{"ImVs", "[", 
          RowBox[{
           FractionBox["r", "0.197"], ",", "mD", ",", 
           RowBox[{"\[Sigma]cont", "[", 
            RowBox[{"[", "1", "]"}], "]"}], ",", "0.150"}], "]"}], ",", 
         RowBox[{"ImVc", "[", 
          RowBox[{
           FractionBox["r", "0.197"], ",", "mD", ",", 
           RowBox[{"\[Alpha]cont", "[", 
            RowBox[{"[", "1", "]"}], "]"}], ",", "0.150"}], "]"}]}], "}"}], 
       ",", 
       RowBox[{"{", 
        RowBox[{"r", ",", 
         RowBox[{"1", "/", "1000"}], ",", "10", ",", 
         RowBox[{"1", "/", "100"}]}], "}"}], ",", 
       RowBox[{"Joined", "\[Rule]", "True"}], ",", 
       RowBox[{"Filling", "\[Rule]", "None"}], ",", 
       RowBox[{"AxesStyle", "\[Rule]", 
        RowBox[{"Directive", "[", 
         RowBox[{
          RowBox[{"FontSize", "\[Rule]", "25"}], ",", 
          RowBox[{"Thickness", "\[Rule]", "0.004"}], ",", 
          RowBox[{"FontFamily", "\[Rule]", "\"\<Helvetica\>\""}], ",", 
          "Black"}], "]"}]}], ",", 
       RowBox[{"BaseStyle", "\[Rule]", 
        RowBox[{"{", 
         RowBox[{"FontSize", "\[Rule]", "14"}], "}"}]}], ",", 
       RowBox[{"AspectRatio", "\[Rule]", "0.85"}], ",", 
       RowBox[{"AxesLabel", "\[Rule]", 
        RowBox[{"{", 
         RowBox[{"\"\<r [fm]\>\"", ",", "\"\<Im[V]\>\""}], "}"}]}], ",", 
       RowBox[{"PlotLabel", "\[Rule]", 
        RowBox[{"Style", "[", 
         RowBox[{"\"\<T=150MeV\>\"", ",", 
          RowBox[{"FontSize", "\[Rule]", "25"}], ",", 
          RowBox[{"FontFamily", "\[Rule]", "\"\<Helvetica\>\""}], ",", 
          "Black"}], "]"}]}], ",", 
       RowBox[{"ImageSize", "\[Rule]", 
        RowBox[{"{", 
         RowBox[{"600", ",", "600"}], "}"}]}]}], "]"}], "]"}]}], 
   "]"}]}]], "Input",
 CellChangeTimes->{{3.7454784164664927`*^9, 3.745478482108008*^9}, 
   3.7454785154775476`*^9, {3.745576345644574*^9, 3.745576363683495*^9}, {
   3.7455769628397827`*^9, 3.745576984632985*^9}, {3.745577668646311*^9, 
   3.745577678285524*^9}}],

Cell[BoxData[
 GraphicsBox[{{
    {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
     0.0038500000000000006`], AbsoluteThickness[1.6]}, 
    {RGBColor[0.880722, 0.611041, 0.142051], PointSize[
     0.0038500000000000006`], AbsoluteThickness[1.6]}, 
    {RGBColor[0.560181, 0.691569, 0.194885], PointSize[
     0.0038500000000000006`], AbsoluteThickness[1.6]}}, {
    {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
     0.0038500000000000006`], AbsoluteThickness[1.6], LineBox[CompressedData["

1:eJw12ndcjV8cB/Db7Va3eXd73JEtIzPrfO2M0JBUkmT+kGwKRYVIWclIRaGk
QSKriEKkaIoGlfbe83fdvvcPL3Luc895zvt8nuec0xE4uVhskqVQKDLiP1Xi
f1DFf/dFNn8zc1pFHLUbhC3RPnOeL1GhjjnlQx4YL849Glw/R2f8L0N5zytE
sGtG+usUBWJjkvDhwOsQwuHb5O79qEEywhYmtvaHk5lxRRrckyJSPXwiPVo3
ijzKajjhFTmWiH+wdZ4ZSyqOKdXvC51ELmnSrNWMHpGrE33eXrxpQkRF3ce2
v0wgmYwF1p8EQB4FN95LW/aUvJGtCWr+MJ/Mc6zIEhYlkdcHPh179nYxyRZK
LiAxQe+Dk9SWE0lx92vyqyR75FnrVaTL8k/EjXcpxMHDavrErxaETHEQ39Jb
4jHnuuiT62pySr0ws9MylVjv2f6td44N+dopuYCwb6pcvTDNjmj8K/7znnyw
dXt80N6BOEg6JJ3Ej3n5zi7fkdy98Y4ft+cDWe9eNvL5VSfS4P6vho+ktYfC
b3NxHqqOmkH45OlgnONmclTyP5/JW9rhWWHbt5L34qu3XvhCUi5t/O/o+e3k
X2+Lm0RmHlR3kPuyg0T942BmEf9vmVaDw13ICiemuMuziJrOj7AbmbtJy79i
m2zycON2LtHcQwLnn93xtzebrM13eJazey8Z4vlGOlf1TPpYsI9I9OZ/JzcL
Gop8Vx0g4h/EF3wn0wKrDpwpOEiG/Ss+m0PisiPlproeJh/FV2uPzyXuzfP9
qTpuZOffXvEIySWbuYrNG/LcCVMyAPLI5tri+PQ7x4ikOu188mKyZd33uR44
PvJJ3dnnTjNnepKh8VVAnts88rGac4KEav8bUIVk5min6LXLTpIF/5ofWUjc
Rr8WeDt5EUl1Zj/Iu9WvDFhe3kRS3PyDNBl4vpwW50OGhmMRcfReV2z89xT5
/q87TH6Sb6JH42eNOkMO/mv+r58kaJMPx++ALxkav7/IWKWf1x2+niWSYsNi
0r4n+kj1JD8i6d4PxSRU04e6Ofw8kXTHjhLy35RSRR9mAMk99G9El5LJl26d
U8wNICP+DW/bUrJxd/5gQcgFclgy4EvJ3UvjrjJcL2IeSsnBC+Phg+kloice
/SUry8gTLVGI3ojLxIV9MuVTWBm5PUVLZbTKFfLm078LysiL0GEBCl1XiKR4
4W9y5mrG7681geTf1X5Xf5Pr4YFbbpZfJeIvzzlU/Zt80Cke41MRhPn6Q6ja
8eUR9deIpDq/P2SZTHUdp/86kRSX/CHXTzvOr+LcJAM5/26onORdMjszwziY
rPK7uot9spyMFr2kCG1ukdv/mp9TTuzfjDz7xDuEtP2rbngF6Tqom+O9LpQs
kjSggqxgm87Q6wslQbv+tbiCyFIccx7cCsP8V5LTM0ctn7XwNpE0f1cl6bE/
oFnYeJtIqkupJF8K37mfu3WHSIrZf8lx74rTjubhRNK9zn8J92us5np6BJF0
R+JfsmZ28vcLqRHoUUVOP5phRD15Fz2qyBq5iI1Ji+6hRxW5cCLRI0XtPnpU
EW7TnLX8ovvoUU2mxjD8yh5Eokc1WX2t3kfFMwo9qkmAua97pO0D9KghQRe9
dqVMj0aPGrJ5icvItToP0aOGFGqWgBs1Bj1qiTf1mNa4hhj0qCV1NYYlh4pj
0aOWzLPtXxC/LQ496sj9NZ8bDlXGoUcdeaZ2PSFwUzx61BF508pU1b/x6FFP
GK7jJ5Rtf4Qe9SR8uVorp/kRetSTXS8s6+4ffoweDSTlxMjft2kJ6NFA1LrH
edIuJqBHA6F43LXPEjxBj0aS+CSggZ7wBD0aybVFBVfjTBPRo5FsWHY49GNJ
Itn+cp/4kd5E1ug/mGZ9+Ck+35vIh8vK+2x4z4ik2LqJuJzJsPz2+BmRPK6P
NZFFd3++fG+VRMTvAvETv4mU2vGPTu5KItPOzBU/0pvIt/arS/m3nuPzvYlM
enkl1XfRCyIpFjaT2ezGXfubX+D7opmEnRz/suzWSyJ5O+xrJgPxn2WzV7wi
krdNcDPx5tqdWiDzmkiqS2sm191TXWcnviaS4sZm0mJxOP/lzmRyXHJDLaQj
2aaojJNC7qctEzephUzt+ew2ak8Kvn9ayOY/polPslNIz7/qLrWQu3UTqn2M
3+D7rIV8GpyxNfjyG7JcckMtZMzys+7dnW/IfkkHtRK5JdnON+zfklv/mj+t
lThUOa8++fYtSf9XnWMrqWvfeCh+VCpp+ld8ppUkBX+tH3YxlWhJbqiVcNSj
Mkp7U/H92EpytnL1f29+hx5thGWz4++o7+/Qo4242G7nP4P36NFGJjwgz87F
vkePNkL7L+HyPYM09Ggj0V8WXqRfSEOPNuJjvsArVjYdPdrIx/7myTcPpqNH
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
EAG9KMy1JxE9esX3s878zpXnPPgfjw23Mg==
      "]], {}, {}}, 
    {RGBColor[0.880722, 0.611041, 0.142051], PointSize[
     0.0038500000000000006`], AbsoluteThickness[1.6], LineBox[CompressedData["

1:eJw12ndczH8cB/Dquq5r3L72uEFlZGfr8zayV0r2CmVXMrLKCOFnlBCikCIU
IpKINGlop2hP7b37net9f3jk6+N7n/H8vu77+Xz6CG0dVmynyMnJyUv+VEn+
oiD52fu0KX2J7XIyZsfYSxtW75jxYYGawojz58h6v2XjKm/NMNcd/XuI0qkb
pGHcqdAhBw6ar57yJuHQJz8SmuGlrGd+y/z7A4vwlr4AsrpxM/3llZfm1UZj
lZ/rBRP2hRm5eS++mksu1m6bFkpifA5sWGqSbn5dS9GGYfqaiLJ17KZnF5qL
87tcd318Qzom5IrXF1abv77XEBS36B3RvxZ8tD27xXzW5vI0UX4EySuNWDmB
1Wf+UyS9gTxZ9H5R9WlFIi3u+kREDzJjHnHVSKdV6eO736LJxDSu+ZAPHELM
Nkq69JVcu394h4OjFjmvkZfSYRVDnhvdtPNfZEhSO6Q3kG2hyRc+vBUTzX/F
pbFkaMFA9jgXE7JROiDxZLq+rXZCnykJvPtN8HJ/Aun05Vg/HTGO1B//V0Mi
Obi5/WVbktlgdQrfSWLiwCen8inkhPRffpDWp9WH/5wxJ7GSu3d4JpOlxkkZ
Hjkzyb/RljSJrEodt7Tr3RwS/I+DlUYCYradj6ycR5basiRDnkbKVj/UX757
EWn+V7z6J4mxu8ifPm8ZuTn70p7Knp8k8WBLIiXakgzypJOc4FcrDdStiVRv
dgY5PbDRYPxlGyK5kNyQQYYd1ThwftYaMvRf8aVM0lVnR9s8ej1JlNytMzqL
XJ5y0UnOZhPZW9kjeUKyyJmstC0r128hLOkDkE3WKs25kjpyK5FWp5ND7j7e
+fCy/nYy+HzkkAvy1iYvRtuTwecrl5xc7y5euG0n8df590DlkbXeJpWuH3eT
Of+a/zSPTKMn1W+dso9Iq1vyiyRmPC6g7XMk0uKmXyQvTNXqe7oTGXwc80l0
6ahdZxc5k4x/wzGlgLCKhyp8yj1ADv9r/u8C0vSDEdVz9BAZfH5/k7OTjzXF
jHMh0uIhf0irVti9O3JHiXR4E/6QPutv6xTKjxHpcOwpJEryK22OF50gWS7/
nugiotw2ytyjxY0Y/3u81xaRls4ZghXMU+SI9IEvIuXULFejsafJYB6KSOos
l2jXTWeIvuTpL1xWTJzzJ/reuuNOHDhnopMeFBN517/tz0vOki9J/24oJgtp
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
n7UujTi/lw//A1opvY0=
      "]], {}, {}}, 
    {RGBColor[0.560181, 0.691569, 0.194885], PointSize[
     0.0038500000000000006`], AbsoluteThickness[1.6], LineBox[CompressedData["

1:eJw12nc81WscwHF7773PUtEeiNbzjYqU9k67lKZE4zZJCWlJIXvvcxzSRKmo
REqSkChUVEiEcE/nPN8/7uve5/4cv/H+fc75ncfD2rxvyTZJMTExccE/XwT/
ISH499+UjtdOmxeRcIP3Sm3pZ2fcnaskMcr3LLn+cMO756HfZxiOqzOV8Qom
7lUfc6RyZckqm5ynB/OjiOpu5zuWfF1SEjM799dAPNn+rehW9yYO+Tp8gly6
USo5an/BsHT9aCIYrNk6lUvenIzMrlg5iQTpSa1QGcMnskVd5TbGNoRT03ti
5/0cwl21rSTUgxB+xM+konm3SLmtVpPNSDtiu7GpnF1zh6TqGtdavZ9DXrGF
LyB/qirlAoociXBzbz7ZOOGgdm3rAvJn6aeEG48fkOVTD3RdiFtMiOV6wSkV
Ev0nGmMefVtKfHWqy3qWPiLb/MVezHRcQV72CF9AfrWXzX7/YBXR/bf50xOS
Oj1k1X6ntWS98IIUEzfpeWcHf6wjiTceM3nuT0nZxg2Ds5ZsJD+O/dvDM7Im
utE1OHeTaHcSJeR5SFWxhOkWclz4f16QlV+P7hkWtpU8Ebx6x+VSIr9pg9UN
PRfy72oLDolUxvkpyEZtJ6n/ONTKyQif3+5qY1zJgs1qgkteTlYHzpu2pXAn
6fy3edUrwjF353DX7ybX7AJ2t/S/Iq49jwKSxPcSEc9r0lpuOF0ybR8R6tlV
kM2clVozMtyIYCB4QQXRWv0xtMV3Pxn2b3PAG7Ld5oXk+m3u5Jng1QbjKkmI
R5279+wDZE9Lv+AOqSS5241hspkHURPeAG9JRNLdbxuUPYlwdwZVxNbVTbah
y5PeH1Uk9K3jhOgPB4no/npHVjfF9p9+fohEG/y7oarJvbLxTQduHyaz/h1+
SjXpttGbvyr5CBHuzuk9uZJTudkg7D8i3Nzxnjyd1jMsPvAoEd2ONSQp/PyS
j97HSMW/y2FTS77FzVh398hxcujf4dfVEhu5QVcT9xNEdP/WkSJv1Vm9u04S
4WbTD2Rfb9mo8EmniPDyPv1AxF/EvfmcdYoIL8fuenKvKPhL6XgvUnn43x39
kbieH9a3gOdFRvy7vdd8JO9L3eo3jPcmR4Q3/EdSoHyO+4fnTXv4SPZWNBeo
TzxNjAV3f/3CBkKWqMbGZZ8m+zROP3ge00CGvs5hJVn6kIfP/72ggUhO2w/a
t32IcPPsRtLvIWvdMuUM+ffqwOuNxDk45KBO/hki+OVvDn9tJHvzSq6EzzxL
+/pE/O53bDrw5CwR7i7wE2GWyH+4OteXCDfXfyJ1navH95f6ksE3/07oMzli
cjQjesk5sijw+l6N05/JFqmWipNV50jsv8N/85n0lYQ6Bjn7ka5/uxveRI5k
PqyvbPAjc4QH0ER+mR/3td3uT0L2/jviJvKDJK150+ZP+28m0/N4wWfdA4jw
8Pc2E//sM9eX/Qkgwt09aBZcxxMfbU6cJ8LNGi0kvHWN+kSpQCK8vFtbyIrx
875Z+wcS4eXIbSGMwIG5jmoXqMcXUq9/Z/TmaxeoxxdySOtU2jGji9TjC+nR
nNofHHuRenwhVV6/LZdrXaIeX4nfpM5Ja1deoh5fSd34czZrwy5Rj6/k4C2D
4KV1l6jHN3J8NCfGlnmZenwjGwtqHg3fcpl6fCOhHW17BxMuU49WYitrwnj6
5TL1aCWFs+ScvUddoR6t5MbOF7dG7b1CPdrIqFElZYW8K9Sjjdw9ssF+zq8r
1KONyF+/8SrHMoh6fCcWb2VHKB8Ooh7fSeibLQoL7gZRj+/kdcVU+4N/g6jH
DzIi6QjfZ8ZV6vGDNFvUmh0+dZV6/CBjHa5dXFh4lXr8JC+5w9/ISwVTj58k
Pudda8LsYOrxkzx+mlLB9g0mO+97CN7S20noIr1LJ58G0/f3dmLL7Bp9T/4a
EW5e0U4MZo/Pe+N4jQjfrk+0k4tvbq4pCbhGBJ8Fgnf8dlKcZj088sU1Mtlv
puAtvZ0sLlGyn698nb6/t5Miq4Fvb5yuE+FmdgeZ/oUzZ/KF6/TzooM49hVe
cS+7ToSfDh4d5EK8ifpZlRAi/LSJ6CAP/FbJ7l8QQoS7K+ogzSXzHk68EEKE
m392kA7nnZeel4aQk8IT6iQaVWElk5VDSXLRPMEhdRIznu7LI/ND6edPJ8lr
WPD3YkAo6fu3u6BOUl1SeOfI81D6edZJHpxudbeSDyPzhSfUSVjr9UOe2IcR
T+EF+kUOFKyMHH42jET+O/zJv8hS88VDqx6HkeJ/u9v4i/CPTbJxlrhB2v9t
9vtFfFyCy8bBDaIvPKFfpGO085yK4zfo5+MvYmkZO2rOvRvUo4uUTotUPvfn
BvXoIpnqASdDLMOpRxeZJnNJ75B7OPXoIlvrUw5wuOHUo4v8sLo6LqI1nHp0
kVfPsn98GhFBPbrIkUqxlT1bIqjHb5Jp36leFRVBPX6TORtcX3jXRFCP38Tq
ZoRVn04k9fhNuEnyUtOXRFKP30QxcWWrY2Ak9fhNZm9cmMh5Gkk9uon/w0cd
RRJR1KObtNR7BFpMj6Ie3cR27oRpuw9FUY9uksA/9GhPVhT16CbvF4a1WrdG
UY9u8iHmVYGLRjT16CGvJ8ckao+Lph6C8eMNGinzoqlHD9kc5tnG3BFNPXrI
2u2+jOM+0dSjh0w1cLueFx1NPXrIrATrmY33o6nHH1Ioo6HY+i6aevwhhn+c
Pld1RVOPP+Ss4uq8ZLUY6vGHpJtl+64bHUM9/pAT9l8su+1jqMcfsjvs8j33
LTHU4w8pnjhLueJEDPXoJS07rjB1w2KoRy/R2y3VNuNmDPXoJU4nNLY7lsdQ
j17yKZjhb9MaQz16ycqSAwuUZGKpRy/xGjE5s5AZSz36iKvb7njnqbHUo4/I
a7WNfr88lnr0kZeWG2ZNdYulHn1ErnzKl5P+sdSjj1j03NVJjo+lHn1k26gP
Zdn5sdSjn0SVblSLexdLPfpJQ+btGs/OWOrRT5Li1CaOVoqjHv0E5s7SLhoW
Rz36ydiKGl87Ekc9+klwq2xg/Ko46vGXpNyMMPu6P456/CW89xob1APiqMdf
opR5xNI4Po56/CUdu45nKeXFUY+/xPnM+ur6yjjq8ZewB39kX/sRRz3+klXf
LjhMkI2nHgNkbLNZFJcRTz0GyLKCsQ/UreOpxwDp0biWs3JRPPUYILFalWe8
dsRTjwHSsLB++sVT8dRjgLy/xG45FRJPPQaJSunp8yt48dRjkIxhOduoPY2n
HoPEtMGzN6M+nnoMkvHR8tXjeuKpxyAJSbn3OVglgXoMkponIeYfhyVQjyES
VqN5U2V6AvUYIrOZksGsZQnUY4hYBkZU6e1KoB5DJM/+cECXVwL1GCLLzHwK
ckISqMcQgWmKp1dzE+jzshhU7spsanySQByFD8RisE11S8+i2gT6/C0GORlu
T+M6E8iBHZe/HyNicC97r2uNXCJ9nheDRLBt7TFJJOH/Hs93iIFOm+GGXotE
8u9p+/sxMSi/5/m23jGRPn+Lwbs/alvSNiYS4eN+ghhkWHTpOB9MpM/zYjDV
xlWqMyCRiB7PxeAHo3/6nphE+v1ADG6v83hbmptIhJt7xOBEfe1HzReJ9PuG
OMywOOxGGhLJsn/fLpjikJT3KGRRdyIRHr6lOKR989hjr5hEvx+Ig+3hQxKm
zCQi3LxeHG7eb93VbJFEv2+Iw+d+0/wLc5OI6PuZOAwrTlI2Xp9Ev7+Iw4et
ZvsuuycR4e544rDF2q+n9WwS/T4kDlesqu+NvpFEv2+Iw7s9S14t5SYRlvAC
icPl8FVOmx4lUQ8JmLz00OzlVUnUQwLSHTa9HNeaRD0kYIfDD7GOwSTqIfh5
fYP2EI1k6iEBIZMls0cMT6YeEjA79uuGCJtk6iEB3p9GK/fNT6YeEjCnZt6r
6RuTqYcE7L3bWLjjQDL1kICc7pQ//51Nph4SsGePp59HaDL1kIAvZRPPL09P
ph4SsP7DF12TgmTqIQnBHTftyl4lUw9JqNj4crjL52TqIQnJ/JPvmrqTqYck
TLEa7uYkn0I9JGF4m6V0hGEK9ZAEawcL7psxKdRDEmatv32mi6RQD0nwK3aN
/rs4hXpIwtyyIZ3vW1KohyR4hIN4kWcK9ZCEbDWxQ76+KdRDEkpHMS5NCE2h
HlIQ9dd/6+PUFOohBTtypyrB/RTqIQU3R1pExZemUA8pcPU7Zdn5IYV6SEHk
ZKsWs/YU6iEFbkvdXziIp1IPKXi+fvXAYo1U6iEFCm46V2ZxUqmHFKTteR/L
tEilHlKgO6/GvnlWKvWQgknnloYGL0+lHlKw2NiLO9YllXpIAZmdEJt1MJV6
SINTrmSAiW8q9ZCGaR4Npzyvp1IPaaixPxOem5RKPaQhoduyu+FWKvWQhvxj
UxJ7ilOphzR461c/7qlKpR7S4FOwYmdjSyr1kIbrSd2Zt3pSqYc0lD7sTT0k
m0Y9pKF7IOIgWzeNekjDmmrjkbeHp1EPaVgyhldnbZVGPWTAaKRvSvzsNOoh
A3MkyxP6l6VRDxl4WMT/Nn1rGvWQgaGwxZd2HUijHjLwwPpppo93GvWQAa+c
Uev9LqdRDxkY2e6XeyQ6jXrIQL/615fLuWnUQwau7LEvNM5Pox4y0PUoLOHV
izTqIQO9gy8v769Jox4ysKX5eeTA1zTqIQPbg7Z99vyTRj1k4d1wt//ey6RT
D1mwvcE7PEo7nXrIwizJxu4dnHTqIQtPo3KUgiakUw9Z+Dix9FUKSacessB9
83hdhlM69ZCFtQVmTyPWplMPWegqP2J21DWdeshCmcXoa7MPpVMPWZjqkGQ2
4JNOPWTh2szZPTFX0qmHLOTnLdG3iE6nHnLwuV4lMTsjnXrIwa/NqTnMe+nU
Qw4Gpjg4H32aTj3k4L/Df7MfVaZTDzkIC3vxurcxnXrIwUgG96Vxezr1kIOr
1gEPxw2kUw85eP3CumCcQgb1kIO25pP1xroZ1EMO1jTp2fRxMqiHHNxoSGt8
PD6DeshBcV155/HpGdRDDhQmqJ4a5phBPeQhoqAu+t6KDOohD4/XxO6CLRnU
Qx5+9Wd1Z+/LoB7ysGvBolU6xzKohzycvclN3H4ug3rIw5X29p6kqxnUQx7A
irO5KjqDesjDhSK7/t/pGdRDHsIHp1dL3smgHvLwWqJVXfxJBvWQh81v1O99
L8+gHvJgNODy7VltBvVQgMFd528Gf8mgHgrgcUN94uKuDOqhAAvHHPD8O5RB
PRTgaJFB8HXFTOqhADuHb0hk62ZSDwXgyvjkR7AzqYcChDXe6ZQbm0k9FKD8
jvGqrTaZ1EMBitfekeTNyqQeCnBX57RC28JM6qEAE8LXeemtzaQeCvD4h+5x
S5dM6qEA1Zv3aNjtz6QeiqDmIb1i5rFM6qEIJdkHnMf7ZlIPRRhsnDxF7Uom
9VCEKPc8yYbwTOqhCBH6zqWxSZnUQxH4+ivTlvMzqYciBBXVZfXez6QeiuD8
VeH3heJM6qEI2xybzmm/zqQeivBVeoNXYG0m9RDsf8yKzu7mTOqhCD87g34u
7sikHkrwcX/p+cj+TOqhBJYGcXW10lzqoQRL86N/K6lxqYcS9CZN/zLWgEs9
lMD0Su1TW1Mu9VCCgwElqQ5judRDCbjldjFgzaUeShC8dGfBSFsu9VCCXbUL
9GTnc6mHEkhXtOVXLudSDyU4mjGy6NoGLvUQ7M/pPTi6cqmHErzNuD2z3Z1L
PZShlr235twxLvVQhmyTC0yts1zqoQyrPK9zrlzkUg9lOCfV1S0RyqUeyvCE
1ZvuEsulHsqgL9GyMi+NSz2U4aLHV3nZm1zqoQwl63Ur7fK51EMZFlS4lxwo
5lIPZQg3+Dp4rZxLPZRhqfRSr4xqLvVQhkgXj623GrnUQwUmef69k9PKpR4q
sKrhTFBCF3qoQPWiaxL+A+ihAlW+C5UmSPKohwocWnHi1zVZHvVQAQu/owXd
ijzqoQKR5R8PL1LjUQ8VcL063Sxei0c9VCDvu87bDj0e9VCB0NIWfxtjHvVQ
gWPPmAuPsnjUQwWeOZqNujWMRz1UoMt7zYjv5jzqoQorTsrPNx7Lox6qsFnq
eIz9RB71UIUZTzvH7bbiUQ9V0FsWOeQ/hUc9VEFVLkUvfgaPeqiC8pSJp2/Z
8qiHKqTqLrR/ModHPVQhrkZhT6kjj3qowqhrLn9fLuBRD1UIEDzPvFjCox6C
n3cuP/R4BY96qMKIyMwDuWt4ovlhcTXoW136J3Y9TzQfrqgG8S/6Vfw380Tz
zdpqEDRtKG+XC080v85Qgx/Dg5QddvJE89fmanCZ4SrN2MsTzddbqIF1k1lG
+36eaD58hhrs3OOmlOfJE803O6jB8PqKkT5HeKL59SVqsPtGneqc4zzR/PU6
NdizVOWRhBdPNF+/XQ38emrn3fXhiebD96uBa1Vu1u5zPNH8/1E1KLo41K9/
nieaXz+rBoGj1ScWXuSJ/p5wSQ365aet3RbEE83Xh6nBTOXiE5LXeaL58Hg1
YJ76GRcexhPN/3PVYLXV11fjI3mi+fU7ahD73wfVBzE80d8THqlB5rj2rY4J
PNF8faka1BVZvnuZzBP9feKdGlQtyHNblM4Tzf83qoGXZ4DlCy5PNL/epgZT
Qm+Mscvmif6e0K0GZaX1G27mooc6+NRABfsueqjDpoWRFwLy0EMdPh0rC/n5
AD3UYdeVyD8LHqOHOkRFvM5JKUYPdZjlMezN0HP0UAfTAYd1i8vQQx16u5pW
RL5CD3VYODK8uPkNeqiD7RKJ3JHv0EMdWpYmmu2sQQ/BWEp5eMIH9FCHtP/4
OTUN6KEOWq/la5Sb0EMdxu04HjX1C3qog927vXLbWtFDHWZ/tjLy/4Ee6pAf
N6whtQM91EHntPe64i70UIfpNuev1/eghzq0fT8c/KsPPdRh56iD6yQH0UMd
un8l/1YRz6IegvPNHbNVRyqLegjOx0uPqy+bRT00QOO1R62eQhb10ADnytmd
mspZ1EMDjt06262glkU9NKBX1vzngEYW9dAAWTvdxjbtLOqhAdkzJlVW6WVR
Dw0I811Rlm+YRT004Kr/kooYkyzqoQETDrR/PcXKoh4acCSnXdfZNIt6aID0
QeUtk0ZkUQ8N0JPsKZcZmUU9NMBoxortb0dnUQ8N4PeUjIodl0U9NOCmXgdn
58Qs6qEBYy6vWD7WMot6aMCU/848+TE5i3poQIPc0JG0KVnUQwNOh047vHV6
FvXQgOcPuU/0IYt6aID/+sLtJbZZ1EOwf5+3W47MzqIeGhCRMqeA44AeGtAd
uO3kc0f00ICFm06k7HFCD03o4b+xVV6EHpqQEBi/KGUJemgC8WS/m7kcPTSh
et/RD29XoocmhJhU7tixBj00YRPP6Vi3M3poQmZnv7HXBvTQhD1bfy6R24we
mpA7Zjzz/Fb00IRyiwJ/pe3ooQk5Zteu+7mihyY8OZ40T3I3emhC5ckPaUf2
oocmVCxj5LW5oYcmNGja+zgfQA9NELs9SuaZJ3poQt6McPuJh9FDE7LDNjqF
/IcemtD83Mao/xh6aMKVXw2315xED024M1HJ7JYXemiCa8vWvWo+6KEJW/0v
X3I5ix6acLh8fNCdc+ihCV0Z7/+TD0APLRi/gjl/RSB6aMFix/OK0RfRQwvm
eMbmNV9GDy34Iv3RZeRV9NACu4R7iruuoYcWRO1M4CWHoIcWRL+XWfMpDD20
4JC8nZJhBHpowczQ3JKFUeihBT/ib4V7xaCHFlT0BZ/mxaGHFjDEbvjUJqCH
Flx+IR8vnYweWhBmwmgelYoeWnDRW33hwnT0EJyvtfqnfZnooQWtyx0SA3no
Ifj9D96HJ/PRQwv+2DU/f5CDHlog6+Vt8TYXPbTASe1h3Zfb6KEFiw5lPP9z
Fz204KWD05B0HnpowVzZ6JNqBeihBdZLohbqPUQPbTCqnXHA+BF6aEPGzt0/
GE/QQxuW9ao+YRSjhza0Ryr2Gz1DD22ITp56VbcEPbRhfu7Bq6ql6KENc4MC
h6Reooc2HNw2r7qnHD204WuE57Avr9FDG3bqvGipfIMegp/vlzN9+BY9tIHV
9bEu5R16aMNdFUn9S+/RQxuOftKrPlCLHtpw5GgRa/kH9NCGXR6p3ZM+ooc2
qPWsW6vWiB7aoFHmsfTbJ/TQhmsbjjc+bEIPbdC5K6Z0vQU9tGHyde8K16/o
oQ2+e72mTWlFD23I8TzoKPcdPbThanSl2Jsf6KENP+4qb4loRw8d6Fl2zmNr
J3rowKPvKdbmXeihAz7vXvFbf6OHDiisWdOc1oMeOnAiIeStay966MDQp9qz
w/rRQwfS7d37PvxFDx3B/R5pcW0QPXTgFsRbzxPjUw8d+OCWLz8ozqceOtDw
yzQtU5JPPXTAaZsCc500n3roQPN/4bvkZfnUQweOsaUuZ8vxqYcOkNPbgtYq
8KmHDsBQvae4Ep966AB/xoWpCcp86qEDbyacbZmjyqceguM3rT7WrManHjrw
KSto8LQGn3rowMGavH0MLT710IG38msrbmvzqYcOvFfdOXqRLp966ICkRdPx
Jj0+9dCBlKmFzw8b8KmHLmjs7NRWMOJTD12Yc2Hz5lBjPvXQhZEDffzhDD71
0IUqbpQCn8mnHrrwhTl+91Q2n3rogv853/eFHD710AVO7rFVDsP41EMXxoxu
/FIynE89dGEi5+wFJzP00AWXcxPnl5qjhy4MaWWYzhuFHrrgN/2WQfFo9NCF
ufNUJswcix66YL5m184749BDF85tPv1s3AT00IXFVrKL4yeihy4cuBwnqWuB
HrownyH+2dcSPXRB8tDjrm4r9NCFk2MvWG+1Rg/B73/Zl/XSBj104Wh37Bab
qeihC0emGS6KmYYeusBf0nVEdgZ66ELR4N1Puwh66EE448/FMkAPPbibM95r
nC166EHDl6Y7F+zQQw+KNIKntc1CDz0Iy7ml6DAHPfTgytVH5rH26KEH6ryR
oX0O6KEHZrPXOi92RA89eNdY4Jk4Dz30wHBTQUvvfPTQg7i2+znzFqCHHixT
0au/sRA9BOP00a7fFqGHHvSqLl0+eQl66IH+r/oE76XooQeNnqbrXixDDz2Y
Zr33uNYK9BBsd5CVX7sSPfSgZJqVRPQq9NCDyaNn7Pq0Gj30YO2d9XOGrUUP
PVDVeRO8zRk99OCtXNXa+HXooQdq7eFhDevRQw/2l65cZrwRPfThJ7EKWLkJ
PfRB5tqWmZc2o4c+hD2RPVK8BT30wfqEvcXAVvTQB57pLM8JLuihD8feG87Y
uh099OGU99dLwTvQQx8WlDze98QVPfQhc0Rh7a+d6KEPXh87q5m70UMfdmhv
c52/Bz30wSGfE3hwL3roQxLXyj5qH3row9KE2NAiN/TQB7s5rmfb9qOHPpiZ
+qmqH0APfTj6YMDKwgM99OF0cMHgck/00IcQ48c7Dh5ED33QfDZwMPgQeuhD
g7HzqOzD6KEPuldLfF8eQQ99OPjU8sK3/9BDH3Y7e4HUMfTQh4sKV6KNjqOH
AZxPc+BNOoEeBhA05fT+uSfRwwDaSo2a151CDwMIz/iuut8LPQzgxNySdm9v
9DAAH9tz/kGn0cMAPPd2fYj1QQ8DkGqt/ck7gx4GsHhQsSDvLHoYwD6Yu+CZ
L3oYwPWA1VEV59BD8PskhrJr/dDDAGr0ewM/+6OHAchHSo1rDUAPA9iVVhPS
fh49DKDipmVpVyB6GAAjtri05wJ6GEBAml1470X0MICVnqun9F1CDwPwU89N
6b2MHgZQLyXV1nMFPQwgYWarxO8g9DCA1Zbq7e1X0cMAJJ7r3WwNRg8DmLI1
dmnTNfQwBP+ueaV119HDEK628jiVIehhCGfm7lxVEooehvAoXGXPgzD0MITY
oQlbcm6ghyHwzV2mJYWjhyFc3D+lLyQCPQxh/MOpkX6R6GEIncld5kei0MMQ
Xm75Hrk9Gj0MYX1J2uCyGPQwBOKa7TgzFj0MweDMGZ/RcehhCN0SMRk68ehh
CN8vexcPxaOHIQRciq9oSUAPQ9AecbKiLBE9BPsfe+5pThJ6GMLh9ZNyQpPR
wxDyjDuvH09BD0NYmDnJc2MqehhCGGObk20aehiC1fIOFicdPQzBQ3Vml0QG
ehjChDd3nzRkoIcRKDMfXS/IRA8jcJ19f1c4Fz2MoHCvjN1hHnoYwYLiIZOl
WehhBNYrpcTH8NHDCM5o7f0mnY0eRrD+49Xaumz0MILm+LJ3OTnoYQTdo/d9
9L+JHkawbv7Trg256GEESpXmuha30EOwv/MNDrK30cMIxi6fGlB9Gz2MwK//
VH3qHfQwAnuPvjlH76KHEWgkfi90vIceRlB+I3KZ/n30EBzPvoUDzffRwwhU
F0B+dh56GEGTNzfkZD56GEG9R3WgYwF6GMHK+D+RWg/QwwiS784urXuAHkYg
fr5HP/EhehjBYjm7s3sK0cMYJi9bq2nxCD2M4dmD/YW9j9DDGCxe3rya/xg9
jOHvpOUB3k/QwxiYdUeTZhehhzE4dC/9JluMHsYwq1p6+bNi9DCGkSNvf/F7
ih7GYFJ+MXHuM/Qwho1t3Ityz9HDGOYM2iQUPUcPY9iW4fTldAl6GEOguvwa
eIEexhB29Fx//wv0MIb2wObS3FL0EPy807TXbmXoYQxjVGLkR75ED2Nge4/0
bHyJHsaQk9mmHVaOHsbwXqavbdEr9DAG7qot/TKv0cMYwl9Ntr3/Gj2M4ZX0
mUK3CvQwhrMDK46bvkEPwfUae/tA1Rv0MAGlzVmJfpXoYQLfeubqTn2LHiZQ
l+xb1PoWPQTj9L03b1Shhwnk8cWbHN+hhwlMa5i5ovcdephARuNYhaRq9DCB
rIYi8WXv0cMEWo/KzBCrQQ8TsG/8UpBWgx4m0FGy/dyKWvQwgS27j4aI1aGH
CThcNOhIqUMPE+D7Tgla8gE9TGCWzcuTfR/QwwQGDEpuxdSjhwm8m8SY5vAR
PUxAYcQ95R8f0cMEro0PHBPUgB4msJ7hHT65ET1MoGz7mbU1jehhAg+MvXad
+IQeJmDetq6U+Rk9TKDNXNK78DN6CK5H7Qr/LU3owYD8yOktks3owQCV/LDQ
uGb0YMDcKYtibVvQgwGduTMkGlrQgwHrL8y+e+ILejDgaZltieFX9GCAywRN
q9tf0YMBd8dc6V/6DT0YQHpDjX5+Qw8GXDsoGebXih4M4M5P9OC0oQcDoGFV
xv029GDA95Xts5Z/Rw8GXAyFad+/owcD9i42uurzAz0YYPBrmZPhT/RggEfu
3R1ZP9GDAR/jjVrmtKMHAwbPOzyraUcPBvxSVlRz60APBpwIGXdfshM9GOC2
61TZtU70YIB5VJG9+S/0YMAWo+dm936hBwMMExa7z+/ii9b/ijHh/Wv2sDrB
WLjeWZoJWUwJ2z2/+aL1xApM+P2e/+yvYCxcP63KBGLTcz+gmy9an6zFhOfz
LhkZ9PBF67ENmFArOeNrkmAsXO/MYEIcKeBY/uGL1hObMuFx7qsXDwVj4fJl
cyYcUJ/Y5NTLF61PHssE9/obe6oFY+F67ElM+Bv6zGVrH1+03tmaCS0JHq9+
CMbC9d3TmRCzcnnm4X6+aP20HROUutiD4n/5ovXiDoLXZwU99BeMheuxnZiw
945zr8YAX7TeeQkTeoZNTAwTjIXLtVcyoU+r+ClrkC9aP+3MBP+A0k3JgrFw
vfgmJgRf7d4/dogvWo/twhR8/nf2ZgvGwvXnu5lwY/2+PmuxbNH67v1M0Gca
eeQJxsL10weZsGF/wvaZ4tmi9eJHmRC75FblY8FY6HGKCQ1P/+bbS2SLPM4w
4VQNw/S5YCz08GeCdtgz6fmS2SKPi0ywNI7dWioYCz2uMuGQ16KZC6SyRR5h
THjb8194mWAs9Ihiwn+5RQcXSGeLPOKZkC7+rrxUMBZ6pDDhzsQlafNlskUe
mUyw51XJlAjGQo9sJoxsl//sIJst8rgtuB4+fnZFgrHQI48JVUrdw+zkskUe
j5gwa9aPgALBWOjxlAk3+1UPTpXPFnmUMqGE+edzrmAs9HjNhB13basnKGSL
PKoEv/+z/9J0wVjoUcuEwdady4YrZos8Gphw1PxYbZRgLPRoZkKTyco2PaVs
kUcbE1zcg3wuK1GPDiZINhcnyCtTj24mrN7uv8hLmXr0C66HvNuZP8rUQ4wF
5ySVZ+9ToR7SLHh+q+tikwr1UGABi3fHZa0q9VBlQW3892flqtRDiwV3DrPu
zlajHgYsWEOaJt9Vox4MFnyb9NRurDr1MGXB5opVH2LUqYc5C9JyTeW0NajH
WBaszb390FeDekxiwfa6aMU+DephzYKx+3Y079KkHtNZkNkQuqROk3rYsUDl
Q/6iBVrUw4EFLss3NuRrUQ8nFvhvk5Eep009lrDAdJ/1/Uht6rGSBZcVjsuq
6FAPZxbUaKxpOaZDPTax4EncMudWHerhwoJmtQ6X1brUYzcLurr4ssW62AcL
rloYEws97IMFM39mKcfoYR8siPTpPKCsj32wICp+g/sRfeyDBZUOR+Sb9LEP
wfkn5tssMsA+WBBonyl5zwD7YMGugSfbhxliHyzo+OjtctEQ+2ABc90msV5D
7IMFyaPqLDcbYR8s+Lxkv2yJEfbBArFhIZ6TjLEPgdeiklM3jLEPFsx9dtpc
0gT7YEH0Rxu3nSbYBwsWW21b/soE+2BByKNj1ZMZ2IfgfN53/41gYB8sCNOe
+0CSiX2woPy/LxxXJvbBgslr5pqVMbEPFqx2ry+dyMI+WHD6kbH2dRb2wYJx
BQcH+1jYBws4o53917OxDxZEjCF3HrKxDxY4z7sUYMrBPtiQurNA3JeDfbDh
8uupRl852AcbWkZ71DiaYh9smBX4lqSbYh9sqF9XPld5GPbBhpBDZb17hmEf
bAhVmb6obBj2wYY71b5OY4djH2wor9LvDByOfbCh5/S6Gd+HYx9suHj7/sT5
I7APNtgXRr9MHYF9sMF3qbu2vBn2wYZPV0OltpthH2zYqHwi4rEZ9sEG3Udn
P7LMsQ82+DENyk6YYx9sUJSMdKkxxz7Y0J17KHXySOyDDex+xbCgkdgHG17I
FVj+HIl9sKHwRNdxx1HYBxvcT6keSBiFfbBhUrC7ttho7IMNAUUnt60ZjX2w
QTMoZEvOaOyDDUk/jNVUxmAfbGDMdtu1fQz2wQbjUz89H4zBPtgQ/LdvnP5Y
7IMN00I7QvePxT7YMD9jQs6zsdgHG6JU9E+yxmEfbIhTkO4/PA77YIOB2xKz
8nHYBxsWXF4nO2I89sEGazvvkOPjsQ82jHxiWFsxHvtgCz7PfV6bT8A+2LDH
QO/YyQnYBxv+Ux9X/WYC9iG4/yw438wnYh+C81nuxD0xEftgg1m9tHnFROyD
DSuz41eOmIR9sMHJ1mvq0UnYh+D6nep8UzYJ+2DD9B8LTNkW2Acbpga0mXta
YB+C++8bs7nYAvvgwLlhM1cbWGIfHHhRFXN6tyX2wQGJade35VtiHxyYLOs5
pGqFfXDg7IkLizdZYR8ccDxp5cy3wj44kOpSwJCcjH1wYKXZ0fClk7EPDqg6
3nsdNxn74MC7mvLCX5OxDw44n1TaY2eNfXCgf2/+qyvW2AcHkvdadTRYYx8c
MHn3qGS8DfbBgc7gm5tO2mAfHPAYtya71Ab74MCDW0MPDKdgHxx4W/fL33UK
9iE4v/rT6remYB8cyA79u0xqKvbBgY7DqcsXT8U+OKBzrlozcir2wQFpl8qL
36ZiHxywm//1mdU07ENw/qobC72nYR8cWGDoc6RsGvbBgUPHo37qT8c+OFBY
2W+6bTr2wYH32xv1edOxDw48VAsv65uOfXCgbe5+u9kzsA8OjByTevjiDOyD
A07uF/ZWz8A+BNfPbdswDsE+OJChdzBiN8E+OKApLVt1k2AfHCh1W/96kGAf
HPg8qvCiPWAfHEjPPaR6CbAPDoiPfbz4HWAfHFi3sG0Fcyb2wQHZExaMHTOx
Dw48LvqYyp2JfQiuxyuLvu6Z2AcHer4fUJ5hi31wwF2v4bOPLfYhuJ++5Z8q
scU+OOCfurBB3Q774EDtzEqZVXbYBwfOzLrcESEY/w+JgOgC
      "]], {}, {}}}},
  AspectRatio->0.85,
  Axes->True,
  AxesLabel->{
    FormBox["\"r [fm]\"", TraditionalForm], 
    FormBox["\"Im[V]\"", TraditionalForm]},
  AxesOrigin->NCache[{
     Rational[1, 1000], 0}, {0.001, 0}],
  AxesStyle->Directive[
   FontSize -> 25, Thickness -> 0.004, FontFamily -> "Helvetica", 
    GrayLevel[0]],
  BaseStyle->{FontSize -> 14},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  ImageSize->{600, 600},
  Method->{
   "MessagesHead" -> DiscretePlot, "AxisPadding" -> Scaled[0.02], 
    "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
    AbsolutePointSize[6], "DefaultPlotStyle" -> {
      Directive[
       RGBColor[0.368417, 0.506779, 0.709798], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.880722, 0.611041, 0.142051], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.560181, 0.691569, 0.194885], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.922526, 0.385626, 0.209179], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.528488, 0.470624, 0.701351], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.772079, 0.431554, 0.102387], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.363898, 0.618501, 0.782349], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[1, 0.75, 0], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.647624, 0.37816, 0.614037], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.571589, 0.586483, 0.], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.915, 0.3325, 0.2125], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.40082222609352647`, 0.5220066643438841, 0.85], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.9728288904374106, 0.621644452187053, 0.07336199581899142], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.736782672705901, 0.358, 0.5030266573755369], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.28026441037696703`, 0.715, 0.4292089322474965], 
       AbsoluteThickness[1.6]]}, "DomainPadding" -> Scaled[0.02], 
    "PointSizeFunction" -> "SmallPointSize", "RangePadding" -> Scaled[0.05]},
  PlotLabel->FormBox[
    StyleBox["\"T=150MeV\"", FontSize -> 25, FontFamily -> "Helvetica", 
     GrayLevel[0], StripOnInput -> False], TraditionalForm],
  PlotRange->NCache[{{
      Rational[1, 1000], 
      Rational[9991, 1000]}, {0, 5.432211448518004}}, {{0.001, 9.991}, {
     0, 5.432211448518004}}],
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.02], 
     Scaled[0.02]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{
  3.7454784954875526`*^9, 3.7454785290003977`*^9, {3.7455763663724337`*^9, 
   3.7455763817188587`*^9}, 3.745577062433737*^9, 3.745577755816695*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"ImV200", "=", 
  RowBox[{"Block", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"mD", "=", 
      RowBox[{"mDcal", "[", 
       RowBox[{
        RowBox[{"2", "\[Pi]"}], ",", "0.2", ",", 
        RowBox[{"kfinal", "[", 
         RowBox[{"[", "1", "]"}], "]"}], ",", 
        RowBox[{"kfinal", "[", 
         RowBox[{"[", "2", "]"}], "]"}]}], "]"}]}], "}"}], ",", 
    RowBox[{"Show", "[", 
     RowBox[{"DiscretePlot", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{
         RowBox[{"ImV", "[", 
          RowBox[{
           FractionBox["r", "0.197"], ",", "mD", ",", 
           RowBox[{"\[Alpha]cont", "[", 
            RowBox[{"[", "1", "]"}], "]"}], ",", 
           RowBox[{"\[Sigma]cont", "[", 
            RowBox[{"[", "1", "]"}], "]"}], ",", "0.2"}], "]"}], ",", 
         RowBox[{"ImVs", "[", 
          RowBox[{
           FractionBox["r", "0.197"], ",", "mD", ",", 
           RowBox[{"\[Sigma]cont", "[", 
            RowBox[{"[", "1", "]"}], "]"}], ",", "0.2"}], "]"}], ",", 
         RowBox[{"ImVc", "[", 
          RowBox[{
           FractionBox["r", "0.197"], ",", "mD", ",", 
           RowBox[{"\[Alpha]cont", "[", 
            RowBox[{"[", "1", "]"}], "]"}], ",", "0.2"}], "]"}]}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"r", ",", 
         RowBox[{"1", "/", "1000"}], ",", "10", ",", 
         RowBox[{"1", "/", "100"}]}], "}"}], ",", 
       RowBox[{"Joined", "\[Rule]", "True"}], ",", 
       RowBox[{"Filling", "\[Rule]", "None"}], ",", 
       RowBox[{"AxesStyle", "\[Rule]", 
        RowBox[{"Directive", "[", 
         RowBox[{
          RowBox[{"FontSize", "\[Rule]", "25"}], ",", 
          RowBox[{"Thickness", "\[Rule]", "0.004"}], ",", 
          RowBox[{"FontFamily", "\[Rule]", "\"\<Helvetica\>\""}], ",", 
          "Black"}], "]"}]}], ",", 
       RowBox[{"BaseStyle", "\[Rule]", 
        RowBox[{"{", 
         RowBox[{"FontSize", "\[Rule]", "14"}], "}"}]}], ",", 
       RowBox[{"AspectRatio", "\[Rule]", "0.85"}], ",", 
       RowBox[{"AxesLabel", "\[Rule]", 
        RowBox[{"{", 
         RowBox[{"\"\<r [fm]\>\"", ",", "\"\<Im[V]\>\""}], "}"}]}], ",", 
       RowBox[{"PlotLabel", "\[Rule]", 
        RowBox[{"Style", "[", 
         RowBox[{"\"\<T=200MeV\>\"", ",", 
          RowBox[{"FontSize", "\[Rule]", "25"}], ",", 
          RowBox[{"FontFamily", "\[Rule]", "\"\<Helvetica\>\""}], ",", 
          "Black"}], "]"}]}], ",", 
       RowBox[{"ImageSize", "\[Rule]", 
        RowBox[{"{", 
         RowBox[{"600", ",", "600"}], "}"}]}]}], "]"}], "]"}]}], 
   "]"}]}]], "Input",
 CellChangeTimes->{{3.74557640819739*^9, 3.7455764264056883`*^9}, {
  3.745577179263966*^9, 3.745577190875189*^9}}],

Cell[BoxData[
 GraphicsBox[{{
    {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
     0.0038500000000000006`], AbsoluteThickness[1.6]}, 
    {RGBColor[0.880722, 0.611041, 0.142051], PointSize[
     0.0038500000000000006`], AbsoluteThickness[1.6]}, 
    {RGBColor[0.560181, 0.691569, 0.194885], PointSize[
     0.0038500000000000006`], AbsoluteThickness[1.6]}}, {
    {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
     0.0038500000000000006`], AbsoluteThickness[1.6], LineBox[CompressedData["

1:eJw12ndczd8fB/A72vPWbd7WHX1lhrL96rwlq5CREVJEQkU2JcmIyMyIbMoM
GSUrK6FQpFLS3nvXrdvvuvd9/uihj9PnnvM5z/P6fM7n3CNYvm7OSjaDwWBK
fyqlv7Ck//bcasqcsXwW4fqZZA9wibNPmqbBGhS2nzx2+VPvmatLTIb+sVTa
fYos2BoWXHJsCFk49nHqlleXyGohq1HB1I58uTLpaUvvdbIvm5N77OAUUtVv
uMpd09vEbW55q7/ObCI9WLRi/H1ycMKP3g28BeSkkcJ8rSHxpN+Vr3mDM92J
KK8reM2Lx2TCvrFuQ88sJ/EXGmJTnBOI1se0G7dOehMHz7Lvwrxn5NqFwQHX
89aQDKHsBPKmJrefgt86IivuekU8c3MY/UQbSOfckhvn3yeTSZfXrIBHmwgZ
uVR6SW8J7/eirgPeW0mYQe7XjrnvSH7OrQcl/9tBvnXITiDD/w6d6DZqJzH8
V1zygQxW3Bh2YEAIWSrrkI/kYsGj7hufdpOY8+/5DzakkkstTPaDwD2kPuhf
DZ9I1OpPK3+TffLqWF/IzbZubU+DMLJT9j9pZES2asLuvgPkg/Rsn+PpZPBQ
w5t7xeHkX29Lm0RWeBu/eqgWQW7/4+B8J8lZo7e7DjlKZi7nSLv8O2E+m2v8
5+Ex0vyveGEGmffr1GOj7OPk9MRDvhXiDOIQsuf4XqWTRM6TSaKN5g+fCpFE
pjfxB+mzbs8K33uKSA+kJ/wgjh6/nTf+OE3++1d86Ce5nLcoyWrIWfJJejZv
aBZRvPFue/rxKOJXIZaOkCySfCes/gDzPOHIBsAv8mG2+uqdQdFEVh0vm6T8
iFBNZ13E8ZFNxh75GHs28hKRj68csuJhQ0Hf2cvkMu/fgMol5so2g475XSGO
/5p/K5eU394VrD71KpFVN+M3+ejzfeGu/teIrLjpN2nd1uzfqXWdyIdjHjH1
mxATKr5OfvzrjrH5ZPnmqToD6m+Qrf+a/yefVI8dV9dWHoPj9w/JPT7wcnNZ
LJEVWxYQg+GdCVY1N4mse1MLSDL7V1V0+y0i6w7fv8Tcc6Wum8odkrXt34gu
JHGhc0ct598lVv+G96JCMq3Jb89L+3tku2zAF5Jr/sI567ziMA+FpNjI0yrw
yH1iJh39f12KyBU9n7wmjwdkne6e5M9XikhmatyGLPED8ubzvxOKyP7HzPLK
cw+JrHhSMdmx1M99sF08+Xd2xJli8nH7sIuXiuOJ9MN/bqsqJirjtmk4HHqE
+SoholKbe7qjHxNZdREl5HN9mxWn/DGRFf8tIRrj21LHnH1CJD//XVApiTZT
3RM+4ymZFXHGX3dPKSk3f9PEUkogV/81/2cpqQ3ZvfjSmwTS+q+6fmVkffKt
R0tCEslkWQPKiPqat9GjHZ6Rs/7/WlxGGl88WDNYOQnzX04ux9dbjv6WRGTN
9y8nmRYpB+aee05k1SVLj59HqO/0eUFkxboVJKW1PD9u7Esi694VFWRwhLiy
RPMVkXXH0wqyl5v026DsFXpUkuluHHOH16/Ro5IUHNVpGjozGT0qiZrgjebI
V8noUUlg0eCJ94a+QY8q8r7A2fXU1TfoUUVS/LWqqwzeokcVsWj2iYw9/BY9
qgnf0+vLZ/Y79KgmFS7CRpegd+hRTdKYdTNs29+hRw2JSBhqEhDwHj1qSNGI
HTsU69+jRw15O3lHYO3aD+hRS7xtm02ENR/Qo5Ys6bw99eraFPSoJaawvMCn
LgU96oie+NHtgPUf0aOOzD7U55vY+hE96kj+pqnZY3akokc9eb9f92g94xN6
1JPjm8ZaZx34hB71RCXn3cRKnc/o0UB8zzx0FUV/Ro8GEn73Q/5uqy/o0UCq
nZ1d+h59IWtebJLe0huJ0PeX4ZkJaXh/byRt9/vOOX5PI7Li+Y3kyROT0WzP
dCK7XQc3kvKMOsevjelE+iyQ3vEbSc3Y+UZXQr+S0QcnSG/pjSQuRszYqv8N
7++NpGFLo5PzrW9EVixsIvb3bl3SsPiOz4smYpS6Wbd+9XciezpsaiIfPD0v
T3nyncieNheayOOJC2oMmBlEVl1KEynN6Ip0m5FBZMUNTSQnuMBe81wG2SW7
oGZiPepX+NCKDHIzxVnapGYSf3+IyasRmfj8aSbjntWeeBqaSbr/VXeymbjs
5J42yMjE51kzefA161OexQ8yXXZBzeTOrp8/2et+kM2yDmohp9NdPQ6/+kEu
/mv+6Bbyv8rN3I1aP8nHf9V5thC9CysuPFn6kzT+Kz7YQvZaR9yZff8nMZZd
kPTY40u9IyMLn48tZNbzs7yI2Vno0UomCceWWV3LQo9W4nytTJnbloUerUTh
Tpv99Cm/0KOVbDum5JQR9Qs9Wkl4mKD2Uu0v9GglY1iFNU9INnq0kpEHjnB1
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
      "]], {}, {}}, 
    {RGBColor[0.880722, 0.611041, 0.142051], PointSize[
     0.0038500000000000006`], AbsoluteThickness[1.6], LineBox[CompressedData["

1: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
aR98aKwqCd72hgX/B14rlIk=
      "]], {}, {}}, 
    {RGBColor[0.560181, 0.691569, 0.194885], PointSize[
     0.0038500000000000006`], AbsoluteThickness[1.6], LineBox[CompressedData["

1:eJw12nVcU2sYwHHphrGNrgWCdJqg7yOoYKLY2Fgoit2KgYiFLegFRFAQFJGG
oWIgaaKiYiAgSiopHXdu7/PH/dz73LPtnJ3vfovDy/Xe5LlaasiQIRLCf2qF
/yEp/HdffMvb6d4zyYcTNfe5HonjsicrS1oEHSNZ9bndih+ZRM/mm7Hs4ctk
oe6psXcDrMiC0WmFO3MiSeWvSfFNg87kedTEjLb+m0RiYYudo7cbqTOxk0/Q
v00Sft4YnfBzJhEOXquc7pENPne3HcmfRy5qS89TtUohBSd/dH2AJYT/pdt/
/YM0opEXOmUvz5ukRDTdyp+aSXzzgJdWtZq4LP/5hvdFQDrHXGxw+rKOlPBE
dyCLv3RkN8r6EdHm7hwy9IJC7wXbLaRr9o+YsGePyZL95nI/tm4jZPhS4VN6
SnapxTkEFe4gQZplrzpn55LIzrwlz212k9edojsQzlW1fM6tvUTr3+YfeeTO
LbvlOlYHyFLRCSkgtk6aXSsfHySxYc84SVsLyeoHnw5U2xwmf/b/20MRGfHb
/Acr8Ih4d5LPSYH5bbMx3wPIAdH/eUFWyrZGfR4bSPKE9/Y5/5I8HSGrcfj6
MfLvbAsPieiNeCP9RPY4uf2Pg/GG2N7aIzN88wkyw5shPOVvyOSgJWb+X0+S
1n+bF5SQVevU/F2nniYhrqc21PSWkJ8lR0LtHgQTMc9b8s1zqWmP9Vki0nN9
RxZFbHodP+scEQ7CO7wjDp8bNuxXPk+G/tt86j2pOvTC533BeVIkvLeuTSmZ
d3yXxcWAC2RjTa/wFVJKXn4zrAsjFwlD9AL4QAIajx9913uRiHan+5Fc63Xd
zsm6RF8fH0l+h+Tt9dsvE/Hr6xPRP1CzL8w2hFzX/feCKiN6r46fjWgMIRP+
HX58GSledyJ/cVwoEe1u+mdSMTfEMn/lFSLa3PKZ1Bve/VVgeJWIX45fyIsH
J/mzyq6Sd/9Ox+ivxO3kT2XPi/+RXf8O/9tXcijS7v79aWH09fuN+Lyea3JI
JpyINhuXk03Rm/UvPAwnotNbWE42bl8//Of2CCI6HRu+k8LuosKNFtdI6e5/
r+gKMjXu1w9O5TVi+u/l7VVBWllJ0H45kuwRveAriOuWg4ZNxtdpDxWk5ZN9
3Xr/68RA+Or/7lFJpHjObus+XiebmAGPi6MqicmMxxN/2USRJ8X/7lBJjqW8
dCwPiiKizROrSPhynZvTv0eRf/cODq0ittF1y+xGRBPhg7/fXVdF9n818zt2
Opr29YNcuBqjNKUqmoh2F/yDTC5ZG79n5A0i2vz9Bxn6zLmeefoGGXj/7wlV
k0vJs6+zKm6QmcGhfsyAalL9e6B4j8NNEv3v8N9Xk72jzl1yPXaTtP/bnclP
svae28xNn26SSaID+Ekcfh/b3WsWQ674/Tvin+TGyycJv/bG0P5/EQfZ6ns2
z2OI6PD9fpFsm//WlOrGEtHuHv8izIOC0g/rYoloM7OGrC7L5jhkxRLR6V1V
Q84GTTpeJ3OLiE5HRg0pM33t0+15i3rUEt6xqaO9I29Rj1oiN6XyBL/hFvWo
JbZX70uOHRFHPWqJe06ld+KhOOpRRzr69Q/uKo6jHnXEzK0BrrDiqUcdOXrk
QAxjcTz1qCdruE8eVNyIpx71JH7d9jj5hnjqUU+mtE0IO253m3o0kAMvOj8u
33WbejSQy73/JZ1/cJt6NJCaB48C9STuUI9GctXpYd7AhDvUo5EYe/Q2OB2/
Qz0ayeX6CYfeFd+hHr9JRCFXM185gXr8Jj0XRk5jz0igHr/JxddJz3POJFCP
P+Sizh23/FcJ1OMP8WLc2W+hepd6CGdHTdumaXepRxPZ4p1iwzx1l3o0EU6a
+azLhXepRxNR33J1yx6ZRLL+wXbhW3ozOSyltePR+ET6/t5MLl2cPsnnQCIR
bZ7XTDpGqn/YnpVIRG/X/s3k9to+3V+tiUT4WSB8x28msXEM9YeW98jIE+OF
b+nN5DV/kaBn9T36/t5MuswidK5fu0dEm3ktpGJml1Pih3v086KF7KueocWS
SyKiT4ftLeT598eHj/KSiOjTJqKF+D2Vr70zNomIdpffQg667fxwYkESEW1u
aiHcmDefDbclkYOiJ9RKTJRGHPUNTiJx+VOFh9RKJgb1eW++lUQ/f1pJ17RL
8tZPkkjPv91dbCXaW3zlYj4n0c+zVqLl/7a1tC2JTBM9oVZSdrVq6RPlZLJD
dILayJ/5qyrWDk0m1/4d/sg24midpVw8NpkU/Nvd8jYCLo/21M5NJs3/Np9o
IxNa8x7mbkwmOqIn1EZOsTdtWhyYTD8f28iFeZFDU8OTqUc76R/qu6swNZl6
tBPJ71J94cXJ1KOdjNoVO8WuMpl6tJPeCad6AjuTqUc7Sc0tjQ5TSaEe7eRu
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
+CIT1yjh/D/UTsyR
      "]], {}, {}}}},
  AspectRatio->0.85,
  Axes->True,
  AxesLabel->{
    FormBox["\"r [fm]\"", TraditionalForm], 
    FormBox["\"Im[V]\"", TraditionalForm]},
  AxesOrigin->NCache[{
     Rational[1, 1000], 0}, {0.001, 0}],
  AxesStyle->Directive[
   FontSize -> 25, Thickness -> 0.004, FontFamily -> "Helvetica", 
    GrayLevel[0]],
  BaseStyle->{FontSize -> 14},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  ImageSize->{600, 600},
  Method->{
   "MessagesHead" -> DiscretePlot, "AxisPadding" -> Scaled[0.02], 
    "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
    AbsolutePointSize[6], "DefaultPlotStyle" -> {
      Directive[
       RGBColor[0.368417, 0.506779, 0.709798], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.880722, 0.611041, 0.142051], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.560181, 0.691569, 0.194885], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.922526, 0.385626, 0.209179], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.528488, 0.470624, 0.701351], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.772079, 0.431554, 0.102387], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.363898, 0.618501, 0.782349], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[1, 0.75, 0], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.647624, 0.37816, 0.614037], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.571589, 0.586483, 0.], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.915, 0.3325, 0.2125], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.40082222609352647`, 0.5220066643438841, 0.85], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.9728288904374106, 0.621644452187053, 0.07336199581899142], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.736782672705901, 0.358, 0.5030266573755369], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.28026441037696703`, 0.715, 0.4292089322474965], 
       AbsoluteThickness[1.6]]}, "DomainPadding" -> Scaled[0.02], 
    "PointSizeFunction" -> "SmallPointSize", "RangePadding" -> Scaled[0.05]},
  PlotLabel->FormBox[
    StyleBox["\"T=200MeV\"", FontSize -> 25, FontFamily -> "Helvetica", 
     GrayLevel[0], StripOnInput -> False], TraditionalForm],
  PlotRange->NCache[{{
      Rational[1, 1000], 
      Rational[9991, 1000]}, {0, 2.4468297920942237`}}, {{0.001, 9.991}, {
     0, 2.4468297920942237`}}],
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.02], 
     Scaled[0.02]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{{3.7455764203990393`*^9, 3.745576443446989*^9}, 
   3.745577259452512*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"ImV300", "=", 
  RowBox[{"Block", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"mD", "=", 
      RowBox[{"mDcal", "[", 
       RowBox[{
        RowBox[{"2", "\[Pi]"}], ",", "0.3", ",", 
        RowBox[{"kfinal", "[", 
         RowBox[{"[", "1", "]"}], "]"}], ",", 
        RowBox[{"kfinal", "[", 
         RowBox[{"[", "2", "]"}], "]"}]}], "]"}]}], "}"}], ",", 
    RowBox[{"Show", "[", 
     RowBox[{"DiscretePlot", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{
         RowBox[{"ImV", "[", 
          RowBox[{
           FractionBox["r", "0.197"], ",", "mD", ",", 
           RowBox[{"\[Alpha]cont", "[", 
            RowBox[{"[", "1", "]"}], "]"}], ",", 
           RowBox[{"\[Sigma]cont", "[", 
            RowBox[{"[", "1", "]"}], "]"}], ",", "0.3"}], "]"}], ",", 
         RowBox[{"ImVs", "[", 
          RowBox[{
           FractionBox["r", "0.197"], ",", "mD", ",", 
           RowBox[{"\[Sigma]cont", "[", 
            RowBox[{"[", "1", "]"}], "]"}], ",", "0.3"}], "]"}], ",", 
         RowBox[{"ImVc", "[", 
          RowBox[{
           FractionBox["r", "0.197"], ",", "mD", ",", 
           RowBox[{"\[Alpha]cont", "[", 
            RowBox[{"[", "1", "]"}], "]"}], ",", "0.3"}], "]"}]}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"r", ",", 
         RowBox[{"1", "/", "1000"}], ",", "10", ",", 
         RowBox[{"1", "/", "100"}]}], "}"}], ",", 
       RowBox[{"Joined", "\[Rule]", "True"}], ",", 
       RowBox[{"Filling", "\[Rule]", "None"}], ",", 
       RowBox[{"AxesStyle", "\[Rule]", 
        RowBox[{"Directive", "[", 
         RowBox[{
          RowBox[{"FontSize", "\[Rule]", "25"}], ",", 
          RowBox[{"Thickness", "\[Rule]", "0.004"}], ",", 
          RowBox[{"FontFamily", "\[Rule]", "\"\<Helvetica\>\""}], ",", 
          "Black"}], "]"}]}], ",", 
       RowBox[{"BaseStyle", "\[Rule]", 
        RowBox[{"{", 
         RowBox[{"FontSize", "\[Rule]", "14"}], "}"}]}], ",", 
       RowBox[{"AspectRatio", "\[Rule]", "0.85"}], ",", 
       RowBox[{"AxesLabel", "\[Rule]", 
        RowBox[{"{", 
         RowBox[{"\"\<r [fm]\>\"", ",", "\"\<Im[V]\>\""}], "}"}]}], ",", 
       RowBox[{"PlotLabel", "\[Rule]", 
        RowBox[{"Style", "[", 
         RowBox[{"\"\<T=300MeV\>\"", ",", 
          RowBox[{"FontSize", "\[Rule]", "25"}], ",", 
          RowBox[{"FontFamily", "\[Rule]", "\"\<Helvetica\>\""}], ",", 
          "Black"}], "]"}]}], ",", 
       RowBox[{"ImageSize", "\[Rule]", 
        RowBox[{"{", 
         RowBox[{"600", ",", "600"}], "}"}]}]}], "]"}], "]"}]}], 
   "]"}]}]], "Input",
 CellChangeTimes->{{3.745576462589038*^9, 3.745576475910543*^9}, {
  3.745577312966981*^9, 3.745577322569326*^9}}],

Cell[BoxData[
 GraphicsBox[{{
    {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
     0.0038500000000000006`], AbsoluteThickness[1.6]}, 
    {RGBColor[0.880722, 0.611041, 0.142051], PointSize[
     0.0038500000000000006`], AbsoluteThickness[1.6]}, 
    {RGBColor[0.560181, 0.691569, 0.194885], PointSize[
     0.0038500000000000006`], AbsoluteThickness[1.6]}}, {
    {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
     0.0038500000000000006`], AbsoluteThickness[1.6], LineBox[CompressedData["

1:eJw12ndcTl8cB/CntPfe4xn2HikS52uUPRsiM2XPjEjZksgK+SUkhYTsiqwo
yohKlLSn1tOz279H93v+8OI6r3vPued9Pveee57D8d6ywLcXi8VSkP+plf9D
Uf53R3xLzmzveUSxWev77UHZE55P11IcdCyYfA7l6P0IGUksh/3prXLwApnz
/VLItG2ziOfYJx93vbpG1i7WHmN9zIt8uu78TNgZS+4cUT60o8mX1PUdoXbX
6g5JO3jR3dt7C5EfLPYZl0i4zz+1nmjbQcLNlDx0hjwivg5P41e9CyC83637
1qc+Ie4Hgicn7T9AHl1pvpUxM4lsu9l49lDOYTJpRdU37u8U8mvstiUTPI6R
79yeE4j3Cp+MAtUTpKe49RVx4gxYW1x5ishcK+Iuv39DLl/t43l751lCRi+T
31Iaaf+2Le3TyXByzKTgq9T1Hbn7LC3MLukCyZb2nEACdx/KXyqKIKb/iivS
yfmgiSeKJkeSZT0d8oE4Bk1bvjguity8/J79wO8jEbbdvX7W7BppCvxXQybJ
2na6KvZrNFOd4ieyLevX3DvmMSSo538+k2vcmkrnTTdIuvzstWe/ELgWu3FN
Ziz519vyJpEAe0EWa+hNcucfh9434j60Zqby5VtkjreevMu/EcfXEdrr9OKJ
4F+x53eiyqo+xD51h1ycfGJjTft3wgqI02Qb3SUMTw5Z1SK56hVzj/ToTc4l
6w/C0YwxiUR+ID8hlwiOZJyO3/CA9PlXfCKPDOKOXdo64SHJlJ9tMewHme68
7ekMk0dkU027fIT8IGcT37eeb3lE9HoGQD4R2r399fXbY9JTncVP8iz74dSm
x09wfPwkPuq/99VGPiXM+PpFps7RlD08+oxEW/wbUAXkws7+WybsSCJT/jU/
voCIkjdXHlidTHqqm11IgjNtojcsSSE9xS2F5FLFCge++3PCDMff5HzVgHPd
C16Q3H/dMbaIHIoXtxx3TSX+/5r/p4hM9xjWum/hSxy/f4hJvz6Pvyx7RXqK
excTxRXronzWvSY93fuxmGQ1pf24NO4N6emOjSVk3F7xYH35OPqx+9+ILiVT
bh3K15/zlvT7N7wXl5Ly1U9szxa8JXt6BnwpuXOZ1efo6jTMQylx9LuSXyFK
I9by0V8yt4xcatPsjDnyjmwxOPwm63oZmSUIH59s/J68zfp3Qhkp2HTXxvz2
e9JT7FxOXB7N1noxLp38OzssopzcYw9YEv4tncgvnre7rpzUXHw/P2J1Buar
ggRb+nNTOzNIT3VhFaRa37lVcuED6SkuqSAZYZFtTsM+kq68fzdUSeYklk89
nPmRzAuL2GxwuJLIHNoVX/tkkph/zc+rJF0fDs+vYmUR0b/q+laR4E1qK+qv
ZBGXngZUkbhlqr4Z4z6RS5v/tbiKOFV9v7Gh8BPmv5rk35q25duez6Sn+Zur
yX9Xtw/+a/6F9FT3ppqIbCRu959/IT3FBjUk+dDyPQZLvpKe7vWpISoqiyZr
dX0lPd3xrIb8CnnofzY6Gz1qSZuM1/GJ8w09aony/r/lodu/oUcteXE768CB
9G/oUUuC3ddLb5l+R486EnJ6SEDHuu/oUUdyYorn7En9jh515GvfaV/NdXPQ
4y/54/fWp2BlDnr8JaWye+ceP8lBj78ksru54YZqLnrUky1j5lrfXJyLHvVE
cju3/Om9XPSoJyu8jQ2yWXno0UAuBR280Oiahx4NJCTn/CbtW3no0UC0S7Qe
DmzLQ49GYjVXN2zi7B/o0UhYEdOc50T/QI9GEq2taDdb+AM9mkgif1iWo0s+
ejSRAa/8Txv+l48eTWSeyzBuXn0+ejQTjyI3hz0TfqJHM9FQOhjZfeYnejQT
m47vQ3wqfpL1qTvkj3Q+Kdv3ve7G6F/4fOeTawbuf14c+0V6ij345N34RUPi
C36Rnsf1Pj5xEfw0WjeogMjfBfInPp+M3R9ZKQssIA7HJ8of6Xzy3V21l8fX
Any+88nP+vr6INtC0lPMbSGhipOHb95aiO+LFmJwUbqz99tC0vN22NFC/JJj
/a/q/yY9b5srLeRuxAKlwpW/SU91GS3EonZ4d97D36SnuLmFeArmLA9TKCL7
e25IQG7snj9MYX4RuZ0xU94kASm60zdsaHQRvn8E5OTi5HjD5iLS9q+6cAG5
Gh318f74P/g+ExBHXjrpOvGHzOq5IQHp6jfEn1X4h+zs6SAhmXc5uPZxv2Jy
9V/zHYTEyr7axnRnMfnwr7oVQhJRu/lZ/7Riwv9XfFxIBt7t8KrRKSHmPTck
JCGlXz/P9yrB96OQpLqOzF99qwQ9RCTYcJB7H2EJeoiIo6GupYttKXqIiCBm
vOOXKaXoISK1nqPC+q0vRQ8R2Ro9ItrtdCl6iMgSz30qbk9K0UNEXIaNXdyn
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
ISphA/WwgcD++gYBG6mHDewPFPrO3Uo9bKBgo+KP59uohw1YiDNkPjuphw0E
xB2fsHsP9bABJ5OV7j7+1MMG9FPIx8B91MMGUv5bPHH0IephAy43Tv8Zcoh6
2MDe7zLLuiPUwwb61xz133qcetjAu9Q7xhNOUQ8b0JQcf1h/gnrYQFxsP5UZ
YdTDBhaeGeZQcp562MBn79pcw0vUwwbsS8tWa0ZSDxt4+WHNHsXr1MMG2Nv2
jy+/Rj1soTbuXfzRW9TDFuK3HfpcGkM9bEH8Z7ngQzz1sIWMzp014beohy0U
TK2O835APWwh+u6FRRsTqYctJBUPEgalUA9bMD7s+ndIMvWwhcxTK55HJFEP
W8gb9NbP6x31sIXUEM/VT5Oohy30NdzjtCGdesjrv89OfJVGPWyhf8SNB7u+
Uw9bcN9MErjvqYct7LuupuDxlXrYgjTsbrA0l3rYwuD/eL6fcqmH/PxhHo1j
SqmHLZweEbx8eRn1sIVNhorr++dRD1v4s15cN7qSethC8KHQCKti6mELifun
C4qrqIctVEsStl8tkTL7f1ls2Gtf/eZri5TZ76zMhtdvf90+LZYy+4k12NDV
7XRG1CRl9k/rsmHJLaXAolYpsz/ZiA0G3wv3HpGX9+zHtmBDzqZb2bbqMma/
sy0b5tmELhhmKGP2E/dmw7iSky9rO6TM/ukBbHCyGauvoSRj9icPZcPskV2L
k7VlzH7sUfLrt3530LGRMfudx7AhOHN1/zH9Zcz+7vFsiN2885mS/Lhn//Rk
NrikzGoPV5Ax+8WnsaHjoZt5iK6M2Y89mw0Nu5QqDXRkzH7nBWyYdKPwXtZw
GbO/eyEbBhja38oZL2P2Ty9hQ7d7jvlGSxmzX3wlG8LK9XonzJIx+7FXs+HJ
xSGtjcNkzP7zjWxY5bBr1jX5+T37u7exoXLtS9PhDjJm//QuNuS6qm5OmC9j
9ovvZcOwIV+2pXJkjMcBNrx8crnSRH79Ho+jbFCxLLiqvULGeISy4caAlybn
PWWMx2k2DG0d3/F1iozxOM8GZ7+G+Vs3yRiPSDZo/zqoMMcVPa6xQa3frnrF
tegRywbz6BTHJ/L29HjEs6Ffde9eT4PR4z4bJtpuqbbYhB6P5fefMeu9iwd6
JLOh1XNu7eit6PGSDTIzvX7+t9HjHRt84ye9sstEj4/y9guevay5ix5f2BAy
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
0IzBp9jwP4Rgo7U=
      "]], {}, {}}, 
    {RGBColor[0.880722, 0.611041, 0.142051], PointSize[
     0.0038500000000000006`], AbsoluteThickness[1.6], LineBox[CompressedData["

1:eJw12nVcVEsUB3C6Y+mGDRFssQF1jo2BKAaKooKBIhYqYiAGBghPxMRAsAkV
G0GRUBQbFBQEpDt2WXZpeCv3zB/v41vHe2fu/c5v79zZw/HY5rxeVkpKSlry
X43kf2Qkf3bHCHIcPRaQ3TJnk1jXEyYlzVaTGXLiOGFVPItKtz8y2WRE0QCF
w+eJ8vgzhWEDX05eZvv0g2/KdbJyzn/Ow8YWTP4UPeO5sOcWsYgrfHRSvWVy
7UAbpXjTWLIzOrS4Ok2WSD64rrN/SLbttvGcGa9NzhrKLdUY9pgYNHr3bC6z
ILw/HQe9Xj0ly6V3jqicNog8vtZ8N3PuC5LT9D5TWDOKTF1T+Z375yVRfVnX
665pT7K5/QeQuXOqxpjFTSX9zR0pZIBcSPPZXgfSvqj89pW3qYSjdudK4IIF
hIxdJbmkdHLzfcYKm9+LyQn9/K9tizJIoY+bSuwAV/Ktrf8AMvCDY9p3zhpi
8K+5/B0pGpG5Xy16LVnVf0PeE7/cDumhFzzJnStv2Qk+H8io959PCBW8SdOB
fz1kEdFsowaPA9uZ7mQ+kWt7ax4snLCT+Pf/zWcyzfiz4JytL3knOXrjmS9E
MabRb86RveTf3ZYMiRxNG7hsta4/if3HwfpOlMdx5n/wO0Tme7Akt/w7eb4o
T+t56BHS8q95WTYpvb3j272sQHJh2inv6q5sYtPc9dt22AnC8OQQl323LzUk
BpF+vWk/yKqYUXYjtoQQyQfJAT/I0xI7txVzThPLf82nfhJXDtdzhfUZkiU5
2nhELun0OMK1Sw0nW6q7JDMkl8j/4ukUeJ8jrP4JkEcej9K5NXX4BdLfnfEv
Eib34o+P3CXCzI9fZMmoSynuzRGEmV+/yVTu90e9TVdIlPG/CZVPNtsmF9rI
RpLp/4Yfk09snn+Z3qQXRfq7cywgpRY70r3HRJP+ZkEBke7Y8bp35Q3CTMc/
5MWavzGnTt8kP/7dDttCov761sz2T7fInn/DLyokV6t2ZA3UvkOY+VtE3F4H
Kre53yX9zQOKyZPzs2JmJt8j/bf3QzGZEJg0WWAWS/pvh/df4lN8fd/3oDiS
6/dvRpcQ4eIN81/1xhOrf9PbtYRcLPrMOnXgAdnbP+FLyCzu9e8npRMIk4cS
ovhT8FYrK4GYSWb/X6dSojlmfFjWuUdkm/bR1I/RpcTx0pecS+sek7SP/w4o
JZtWJz7ynPCE9DfPKCOJzeaVZqyn5N/RoRfLyPrtwzJv1D8lkpP/9KstIzfv
L19Z9PEZ5qucjCjR8Hp6/znp7y60nDxyzPDTOPeC9Df/LScedfsqsv0TSe/P
fxdUQXoWJFVVeL0kC0IvbtU+WkGOnWyMGrYiidz4N/yfFcRr6MyB4fOTSeu/
7gZWkqs3dY+1T39FZvYPoJL84ER9mzn5Nbm09d+IK4nN5MMD1tqlECb/VaS4
8cjz0bZvSP/wt1aRP4UKXk5mqaS/u9QqEnaYtWfG9VTS36xdTcbobXPaxk0j
/bd3XTW5/vinS+qdNNJ/O55Xk/lyPppDh6ajRw0ZJ31D+87jdPSoId6GG8y4
dhnoUUNKrz5VP5eegR41xNP2SmXz3LfoUUseDx//ZVDeW/SoJde0j+mOc3+H
HrXkdKryWOXGd+hRR/ZYLP1xcW8metSR+OWeqXkK79GjjvTpV3YmnXuPHvXE
ZipJsOV9QI968uFH/CSHxx/Qo56801e3KZyShR4NxPpL/Oz67Cz0aCC9Z/h+
mz0+okcDSflUWeYs/IgejUR7d3LxxcBP6NFIujt5bSP1P6NHI3FfG12ne+8z
ejSRoNJXcXZ2X9CjiWzoHuwe8fkLejSRqsVF661Xf0WPZrLKVHb2X8FX9Ggm
geM7vjwL/IYezWRYoJ44W/U78Xq1S/KVzifn1/tUL1jyHb/f+SRyXEjdj8jv
pL95KZ/4/Al2cKn5Tvq/rg/yibWTybpfNtlE8iyQfOPzycKZ8HLB/mwyPmiK
5CudT2TjzYrevM3G73c+ebv0jT9HI4f0N3MF5Pr8P+4+Ljn4vBCQgPbTGx9G
5ZD+p8MuAUnbZx6UW5tD+p821wTkzL3onNJRP0h/d5kCEpictjl7/w/S39ws
IK+s1odHv/1BAvovqIX0fVx1xUn9J7mXOVcypBbyLNGo5feSn/j8aSG1f6ca
2kf+JJ3/ujvbQlZmbr+9s+onPs9ayNuwrJmHhueSef0X1EK2h95NWeWbS3b3
3yAh0feZWKGWkksi/w1/vJBwDo6+eVI+j7z/190aIVF96Nz1bV4e4f9rDhKS
nBEmUqVn84hR/wUJidbwTb9fFuTh81FIhLY6Kcs4v9CjlTgvCepJ9vyFHq2S
59dOUen9X+jRShTGOutnCX+hRyuxbDUq22b7Gz1ayd/43PqfB3+jRytpXjv9
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
7PS3Cns2/A/2ypjH
      "]], {}, {}}, 
    {RGBColor[0.560181, 0.691569, 0.194885], PointSize[
     0.0038500000000000006`], AbsoluteThickness[1.6], LineBox[CompressedData["

1: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
Rw8HdkYdY0WjxwAH+g4pP4sR1/8DHnp/wQ==
      "]], {}, {}}}},
  AspectRatio->0.85,
  Axes->True,
  AxesLabel->{
    FormBox["\"r [fm]\"", TraditionalForm], 
    FormBox["\"Im[V]\"", TraditionalForm]},
  AxesOrigin->NCache[{
     Rational[1, 1000], 0}, {0.001, 0}],
  AxesStyle->Directive[
   FontSize -> 25, Thickness -> 0.004, FontFamily -> "Helvetica", 
    GrayLevel[0]],
  BaseStyle->{FontSize -> 14},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  ImageSize->{600, 600},
  Method->{
   "MessagesHead" -> DiscretePlot, "AxisPadding" -> Scaled[0.02], 
    "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
    AbsolutePointSize[6], "DefaultPlotStyle" -> {
      Directive[
       RGBColor[0.368417, 0.506779, 0.709798], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.880722, 0.611041, 0.142051], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.560181, 0.691569, 0.194885], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.922526, 0.385626, 0.209179], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.528488, 0.470624, 0.701351], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.772079, 0.431554, 0.102387], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.363898, 0.618501, 0.782349], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[1, 0.75, 0], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.647624, 0.37816, 0.614037], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.571589, 0.586483, 0.], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.915, 0.3325, 0.2125], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.40082222609352647`, 0.5220066643438841, 0.85], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.9728288904374106, 0.621644452187053, 0.07336199581899142], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.736782672705901, 0.358, 0.5030266573755369], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.28026441037696703`, 0.715, 0.4292089322474965], 
       AbsoluteThickness[1.6]]}, "DomainPadding" -> Scaled[0.02], 
    "PointSizeFunction" -> "SmallPointSize", "RangePadding" -> Scaled[0.05]},
  PlotLabel->FormBox[
    StyleBox["\"T=300MeV\"", FontSize -> 25, FontFamily -> "Helvetica", 
     GrayLevel[0], StripOnInput -> False], TraditionalForm],
  PlotRange->NCache[{{
      Rational[1, 1000], 
      Rational[9991, 1000]}, {0, 3.22323099059662}}, {{0.001, 9.991}, {
     0, 3.22323099059662}}],
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.02], 
     Scaled[0.02]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{3.745576489514667*^9, 
  3.7455773909958353`*^9},ImageCache->GraphicsData["CompressedBitmap", "\<\
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
90+jT57oSu1bBpNfYDO6rMsT9FloDBUjTGAroGOhX9LzvTpSmyaBFNCkLV1z
29P07Z8xVGRzbJ1qKFF8ZBBdid3m3YIeWmVaeiqn+LE3cuegd7O7aYmBZf5m
SlzkHmt9h1Ih7e/Xjo1ca6tHaW2WTf9GxPL4MXQDvvQSu36Btuut/xlY5++k
V1GiIIC2flKrEdI5sjyORt+AvnchsG+bzQL734p1YwPWt9GSpGIqLS2lsvIq
x9eIi99yIp6hi2BdWi+iZzaz2tRmIPtMf9X6TDVtq/W92yvLqUyAKs07Rt9z
l/zfOAt3MawAYwxL7JcsWtunFbe7+lzyIm3Ps2tWk79YglE4NEGzmrigwIMw
14XFvjjqc+rRvi21bdtWQMFnAHW4dxKdkV2ZtvTldH9zb1aOl762m/JV7MIf
Zz7QL9drHBR04xhh+RbTsU9voXY6KKv47EgPzEqqN/b8n/wL+o6/8R2+EEDH
0VvFCessr9QThjoCq/Bk6P9JGCf3rmwwjBORKxoM4+SepQ2HsXPBvx3GkZ0N
hwH6/Q/BiON/XKTMxXzbs8pszYiutQTbw8eqqfPWNBw0SBnFDFFhWT+6YsAh
VCpVU3atV+8I9VOWspkmfPwk3Xplawrx96fGF11FN/bqQ++NWUuxRTZLLYHf
6X8LnZU096CyvD4l5J4/Xo3frJNdmMFfsxmsGdC+7frpRZLVWaf4o43y9gyl
u5v7OM/qkofpl/1c96YfTeE+8Pz3UN1fx89O5VnJdPbMGUGpM+KzKSWeKwS1
tau+FfR1LpVv0GvVrlrx0U/YQfYOaEVXhgja+15Kb+wpqHHVGgmzZz29cZlY
Ly8/uujeQTRp2TaKSs6mrJRo2j7vG3rssgCOFvhe+qpwhm1qBasJoqsVPL5/
w9+ygkV0+D027/WjoBp1n0Mp8iSlOnYPKGfQs+4Ba72edkt1ELGQDrwneE0g
0eKB+bTmHczKhy55aTvKSr3ldja9La9yShjflUtfm987hWJL9UlWJC2gx1r7
sKF6szw3RS9Lrjn+P00tnDwm6u9eOH+nhXPfVBFkbqqQl0tHhTb/YHcNFdW9
4nBY3TRhVBOK1RevYA+9iS1jbUV91mZSwSEt+mS96BnanGPXHgt0v3iVyTS7
eyOxXa6kgXqZsxaSzNy1khYvWkzLNp93Wrlachd/z8oFSKhVJfmUl5tLubm5
Ynh8+lNeYbl0/qprNQkyt5pol2ufib5yrm0m1b1iCEO4tqZotL+4mo1jp7zt
L9ElPliqvrQpR0ArOUafXiUUkbU1Pb4h2+HTunu/cD+9Bje9yR20NstuaaLW
2YPsSp0WKTvaw0W6QmJgaqXRLuc+Gr3XxNRIU8OzLk03GnHbuCeOPYc29b1I
uM9CiL3MtfGASye+vpoCcETOw6txRE71xM3bTg+2UCf8Wcmr+f20TfubRdlC
HuZwfq8DrQtT9/IzmUfm1kLr9joSLj1DEpSbfqFAc7+Qu0ctLj0p2rM1yRFb
1lrq08oq+OsyeiuyQD8PqDT6B14xb0G+5em26sldEEnPXmRV1PZu/STtLnCm
toe5orpQW51PiUI2TxVHJWXvXkpzZ88WKM0Wn1ZaEBarRThJ5Scae9JBpV3u
uqcCzd1T7h51NNE5P1v9KtkofeWD1MJbSOr2H9LBIiWdGjvOSvRuSncvSdMs
UHerVBpDPyA0Jhhl8ZkCXyosLLTgM5/i5txCIRZHs4lDKNYttzW1huWLW/Yi
B1yqSjLqvXxmvW816n2JtUeNZrpOdtdoFmhuNNNX0PCovoKmZ6tdwao0WnJP
MyFuhAX+2TFYSY4VRFBz9I0UBClw+zxtQm51jrDwn7uYrL6X09uRBbq6F9Iy
4vmLhTUqVNc9KynDmEuoY4quphVMWKidRaAqWeuzgsI/Ht6Hbu3WTaxgN/Fp
pTtfDUPDVS0r6NyOp9vD7trxAs3teNrl/KirmNSe1a0yE/krU+ZRLzgDAZ3o
u5OlPvKxijMTeBN4hfSgGUmV1SVh83e/SZf5WqnpneMpptQQkLBR7vZB1DHA
SzP/lp13eOt1zyz+PWt3qaJIzZ2I+o5y14kYaO5ElALJ6VGHoeD8rPslqaSk
6UJoeSEzOZxOl5FaEub47oLjhQneddJZqnDvqQr3hmbe35ysXj7UrEc/mrRm
L51KFb551Db6Y1hfuhqpQUG+xreORVTfIRHrluCcItck6vCuC7gmbeRtUy9m
Na2YOs9U24oZTG5aMbWrju2bbhcrI4F+g5wRuv8mzZHUF0somOTZt1FjASL4
prEUn+726OXKjLU08CZOVFv0Pj3x0/S2L2ljRqXD8aljxlVfHXlI6oVdHVMX
ajVNqMYd7b4JNdhdE6q86ta4qp8WbEB4w4FfOB/l1ag7TRX63U8+U5W6QAt/
wAnZv8E4QYtaPntJHK0a/g49eAO6Gv0ppM1VdNNdz9NXs3ZQSpm9vunfv3NZ
fN013jqSoG46b9Xf6tp527D3jIt0G00djKCyUOE957AKV4sEq+IPtiqEN//J
VLrNsEj6Wdp1TGNProH68aH3NYj6SODWuZXY4hTh9LyXuEGvGegf0Jpubx3A
9vVdi84xjXT6QwSuQNRAqKvWPal1gBv61zEhr+h/7NgxV+6f36s2+p+Ur9tK
kuh0TDRFR0eL/+HTh6L3zaMejZF870Hz9kX7qD/GxFJKqXZIq+q+qK2FWp2c
4FELtQfPafLAz1C0pf1I31NFim1CeLIVriLFGrGbqrdrqh7QhI2peqBmcs+7
1VNy5+3ozSdJY2bBan7AYA97wrKVxLNmcD3dVXMzuIeP+bqlrJVa9VlLWTZH
FsWeResfb80lCy6U9XVX0WBRRe6uJQ1kmVQDWc/OvulCkfUud5PDQc6bcrDw
xtPLcyL6anzhOjk3BQ/65FwrHgyTi4qqz+T4vkq+Hj0Z/2+FcXDdGLcwoqIT
XGCg5ZZhFCQ5wTi0eoRbGKfjU3UYWmuOr95bWNu7OF73P+3dsye21vpuwoyr
3b4be3Sz23f5eum/N/5743/ohsXr/wF3KAeM\
\>"]]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"ImV500", "=", 
  RowBox[{"Block", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"mD", "=", 
      RowBox[{"mDcal", "[", 
       RowBox[{
        RowBox[{"2", "\[Pi]"}], ",", "0.5", ",", 
        RowBox[{"kfinal", "[", 
         RowBox[{"[", "1", "]"}], "]"}], ",", 
        RowBox[{"kfinal", "[", 
         RowBox[{"[", "2", "]"}], "]"}]}], "]"}]}], "}"}], ",", 
    RowBox[{"Show", "[", 
     RowBox[{"DiscretePlot", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{
         RowBox[{"ImV", "[", 
          RowBox[{
           FractionBox["r", "0.197"], ",", "mD", ",", 
           RowBox[{"\[Alpha]cont", "[", 
            RowBox[{"[", "1", "]"}], "]"}], ",", 
           RowBox[{"\[Sigma]cont", "[", 
            RowBox[{"[", "1", "]"}], "]"}], ",", "0.5"}], "]"}], ",", 
         RowBox[{"ImVs", "[", 
          RowBox[{
           FractionBox["r", "0.197"], ",", "mD", ",", 
           RowBox[{"\[Sigma]cont", "[", 
            RowBox[{"[", "1", "]"}], "]"}], ",", "0.5"}], "]"}], ",", 
         RowBox[{"ImVc", "[", 
          RowBox[{
           FractionBox["r", "0.197"], ",", "mD", ",", 
           RowBox[{"\[Alpha]cont", "[", 
            RowBox[{"[", "1", "]"}], "]"}], ",", "0.5"}], "]"}]}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"r", ",", 
         RowBox[{"1", "/", "1000"}], ",", "10", ",", 
         RowBox[{"1", "/", "100"}]}], "}"}], ",", 
       RowBox[{"Joined", "\[Rule]", "True"}], ",", 
       RowBox[{"Filling", "\[Rule]", "None"}], ",", 
       RowBox[{"AxesStyle", "\[Rule]", 
        RowBox[{"Directive", "[", 
         RowBox[{
          RowBox[{"FontSize", "\[Rule]", "25"}], ",", 
          RowBox[{"Thickness", "\[Rule]", "0.004"}], ",", 
          RowBox[{"FontFamily", "\[Rule]", "\"\<Helvetica\>\""}], ",", 
          "Black"}], "]"}]}], ",", 
       RowBox[{"BaseStyle", "\[Rule]", 
        RowBox[{"{", 
         RowBox[{"FontSize", "\[Rule]", "14"}], "}"}]}], ",", 
       RowBox[{"AspectRatio", "\[Rule]", "0.85"}], ",", 
       RowBox[{"AxesLabel", "\[Rule]", 
        RowBox[{"{", 
         RowBox[{"\"\<r [fm]\>\"", ",", "\"\<Im[V]\>\""}], "}"}]}], ",", 
       RowBox[{"PlotLabel", "\[Rule]", 
        RowBox[{"Style", "[", 
         RowBox[{"\"\<T=500MeV\>\"", ",", 
          RowBox[{"FontSize", "\[Rule]", "25"}], ",", 
          RowBox[{"FontFamily", "\[Rule]", "\"\<Helvetica\>\""}], ",", 
          "Black"}], "]"}]}], ",", 
       RowBox[{"ImageSize", "\[Rule]", 
        RowBox[{"{", 
         RowBox[{"600", ",", "600"}], "}"}]}]}], "]"}], "]"}]}], 
   "]"}]}]], "Input",
 CellChangeTimes->{{3.745576482406025*^9, 3.745576498758131*^9}, {
  3.7455773299429607`*^9, 3.745577333833832*^9}}],

Cell[BoxData[
 GraphicsBox[{{
    {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
     0.0038500000000000006`], AbsoluteThickness[1.6]}, 
    {RGBColor[0.880722, 0.611041, 0.142051], PointSize[
     0.0038500000000000006`], AbsoluteThickness[1.6]}, 
    {RGBColor[0.560181, 0.691569, 0.194885], PointSize[
     0.0038500000000000006`], AbsoluteThickness[1.6]}}, {
    {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
     0.0038500000000000006`], AbsoluteThickness[1.6], LineBox[CompressedData["

1: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
      "]], {}, {}}, 
    {RGBColor[0.880722, 0.611041, 0.142051], PointSize[
     0.0038500000000000006`], AbsoluteThickness[1.6], LineBox[CompressedData["

1:eJw12ndcjXscwPG29p6ncVYZDSJp4fdtCMkqKxIJlU0kJNkyspPIpuRSGSFR
J7Iqo6Vdp3Ha2nvd4zzf88d93Xvu0+kZ7+fzjF8/5rrtbhvERURERPn/1PP/
Q4z/76HH7Tnz1y0i2aZ7aPrcnBnJc+XFTE6eIC9GCkPG7bk/U3dSmaHU4avk
+q4dJk86i2ausHn5NfDDbXLiyxmPqAUDMzPvzkrqHH5AXLTzbls+UyENYydL
/6cXR3T97kJuA4vwP6xcbxdPNpes3r42ZDK5rC2xTNHsOREd/9U6wmEGYZf0
h2xKeUkOrWcf90x2Js+jW2M+z3tNbv8tX+wWv4g4rK39xSp5S7bO8GUPb11O
frMEXyBzF633CU9ZQwSL+z8Q5ZxrtkvK1pM+9+qHNz6lkbm2bRcV0jcRYunF
36V08tzxQ5N11g5yUrPoR6/7R6L0/eiMha92k5+9gi8Qkx1JLdsY+4jWv8XV
GeTTsszmUuUQ4iU4IF+I1TVRv2OfDpNHNz4xEnZ9JUczd/i5Zhwjf4P/reEb
yV9dYW8nd4panVgmkWh9M7A14gw5KPg/WWTVitlBCRvPkwz+t/0uZhPHLSMK
6e8vkn9Hm79JRKzqD1ut8TKJ+8eh/IuslH3rmWkVQRasU+Yf8l+kTPd+0YJH
kaTj3+IVv8mnS+0d9VNvkAjHM1vqBn8TzhoV+Z9V0YTiySF575/cvbj8DhHo
OeaS0L7ZIQey7hL+B/4XconKlY/3Hi28T4z+LT6TR7LMTE+HVz4g3/jfpk3K
JyV+ZfGPQx6RrXWD/DMknxRptp3aNCGWKAtOgALiaOe1GSofE8HqaH/Inqc+
PpH3nhDq/PhDwhhvesu2PyXU+VVIwocWlB2YHU/u0P6dUEXkzPy4+duuJBCn
f5v/uIgMtKtdeBWWSASrm19MmjJlHsw9+pwIFrcXE2szZxNu6AtCnY4lhEbz
TLQ48pLk/jscNqXkPE20tP/EK7L33+aXlRK3tylXW8KTCHX+lhEVyVUW36+/
JoLFhuWk6WXwFdeYN0RweL+WE51jN4nF67dEcDi2VJBcxfJ9M78lk/ygf2d0
JVEQ6V1pXvaOjPt3eq+sJEPfDpVldaSQfYITvpIk7e1uKpL5QKgeKsmL/c83
0VmpRJ9/9lcs5JLL7hduv9BPI9tVj6Z9v8slpwInx32ISyOc7/++wCWH6gp/
aFlziGDxrCoyVmqxXEwGh/z79rlrVcQ2+9Pape7phP/L84IaqsiEIp0ceW46
9lVNln4+5f1m20ciWN25amJkFqbgNPSRCBZXVJNWGaPsm2GfyEjevx2qIeq9
GWcSNDPIonPXtqkerSHdLucMt93PIPf+bX5eDUmtcV6dMekz6fq3urG1JHyG
JPfRu8/EWbABteSg+W5bidlfSOS2f1tcS4YL/mb//P0F++eRWdk+uUOrvhLB
5m/jkf+cVRcdqv1KBKtL45GVmyYou277RgSLVeuIY4TbnRU934jg8K6vI5n+
E2ffOPidCA5HUh35717miKxEJnrUk+UOBttuh2WiRz0peBFctUgxCz3qiYf+
+Lnal7LQo55UBNSMb1XPRo8GIrn5wY2fEdno0UCk8lznvNT6gR4N5Mr5S56R
136gRyORq+g+sVfzJ3o0kqDVZW3zr/xEj0Zy1cNf76z0L/RoIsMrdib5O/9C
jyYyqH/xyIejv9Cjicy9ZLo9LO0XejSTy43+Ud+GfqFHMymY8WxhiPVv9Ggm
OtoTJWMCfqNHC9k04ZKH47Pf6NFCjjMSVNzrf6NHC0l9s1yzgJmDHn+JYobF
rqyVOejxl0x2SV047XIOevwlJ6Ys6FXLzEGPVlIQNyF7g1guerSSa4dTF5ra
5KJHK3lyo0bDb3su2ZSym39JbyNLciZk6zzMxet7G5kh42jtUJxLBIuXtZFj
w4fMqhTziOByHdJGLhxZdnXAIY/w7wX8K34bGQ4d9jsbmEeswuz5l/Q24nlC
OzHycR5e39tI+OKAY4zSPCJYzGonH/OypIwU8/F+0U42+SX6xhD+devf3WF3
O1m73ocbuyOfCO420e1kvVzOa+O7+USwus/tpLsi2mri73wiWNzaTrK2G796
KVJADgl2qINEBqScSZ1UQGI/z+NvUgc5efaB3iKvArz/dJDS5Xt++J4tIAP/
Vne5g4QEzJKXTi7A+1kHEY8ddJpSV0BcBTvUQXrGP2qsU+NfJwUHqJOc3Vay
0xj+kFv/Nt+qk2RIGS0e3PyHfPm3urWd5J5WgIjntT+k7d/isE5yyul63/z0
P0RHsEOdRO9y7vOc5j94f+wkHsfcY5s0C9Gji9z6mrc4CgrRo4v4hNqMq/Qv
RI8u8lnX7PaHS4Xo0UUmtmdPtHpXiB5d5HL86rnzqgvRo4uIp/esGZItQo8u
8l/OHO68KUXo0U0OjvWwsfMoQo9ukp8/93fmoSL06CaflxgqjT4sQo9uoufx
eGlBZhF6dJNScyMJ9/Yi9OgmZ47NCQzULEaPHmLbIS7hYFeMHj0k/7if6Os1
xejRQx7A6Q8FR4vRo4escfE7eS+mGD16SP3s/Pu6mcXo0UO+LNmw3PFvMXr0
kg5fTy5NpQQ9ekn/7rvB9y1K0KOXXPyRsKZ8aQl69JLs8REpWXtL0KOXSJdz
07ZfL0GPXnIq4uHVr8kl6NHH99ixprCkBD36+Of7wpl3hkrQo4/QWr7MZ+qX
okcfOdFW9sBzRil69BEbF81l7qtL0aOPKJYHbZc6WIoefeRB9NWBwJul6NFP
Ru+dG3r4rhQ9+kncAu3AK8Wl6NFP6orCfBz7S9GjnySPcFNeaJWhRz/RnPJj
D8+yDD36yZnb7w6WupehxwB5VV+aGrGzDD0GiNnSaWzN82XoMUBCNj07veq/
MvQYIPfSNfJ9v5WhxwDRCp9WZscrQ48BonGkYl+hWDl6DJIzp3oPzqSXo8cg
WRp55M02u3L0GCRHu952+S8vR49BwilUHjAPKEePQTKrweXsp/By9Bgk47ee
22wUV44eQ6Rj2HPJkoxy9BgiQRFpo4sry9FjiGhfc2DTB8vRY4hc1VLZmaJR
gR5DJGWw+ZqxeQV6DBHVOxscN7lUoMcQecp7rRu8vgI9hgmzfiRjbUgFegyT
wkekRjuyAj2GyeQt/hoPEyvQY5gcKFrZLZlZgR7DRF+Orj+9pgI9hklsYjpr
znAFeozwj3e2q4ZcJXqMkJWHFWR2aVWixwhZait6LpldiR4jBLSsDFonVaLH
CPG+VC+iPL0SPUZIfqZ0kP6cSvQYJfppbhlaSyrRY5R0aVpPGF1TiR6jJKF1
uCp3cyV6jJJfJs/NI/ZWosco+ZExY6Hz0Ur0GCWJHqH7a8Ir8XlZBII5qi07
oiqJi+CBWATIvkuVTQ8r8flbBG6Xnz63NLGSBPhdbAkmInBrnK/Js5RKfJ4X
gUd/4tu6v1SSm/8ez/1EwNE0X9Ust5L8e9puCRaBDM/Nn93LK/H5WwR2N+bM
3NRQSQSP+w9F4BDn67MdXZX4PC8Cv9TqZvuOVhLq8Zy/fotq2wWyXHw/EAHX
nOLXRhpcIljcKwJ9e1+1tNC5+L4hCn9Tr8jGGHPJkn9vFwxR4KnrTl9sySWC
zbcUhY/Jd581Ey6+H4jCc7HJ4ftcuESw2EsUTPJ3SvYt4eL7hij0fZMlfmu4
hHo/E4UvJlPXf/fn4vuLKLxoqo822M0lgtUliEL0FG31DSFcfB8SBWOxA3+j
T3HxfUMUTqYEuX+7xCVMwQEShSvKAf51N7noIQbTTD4t7XvERQ8xuPi6cPpQ
Ahc9xED+oIZjZzIXPcTgHOfR2bJPXPQQA93grXbvfnDRQwx23DDddbaQix5i
4H6P67a4ioseYnBsXdioTDMXPcRgrabjtaRuLnqIwe2sB3bLR7noIQY5kh5y
zdJV6CEGiR5ORntUq9BDDDTpYY87dKvQQxxMara/Wm9UhR7iEKhK882cWIUe
4mBoEVc81roKPcRhzwSLiXvtq9BDHGw7FYJTXKrQg//zgeJVPe5V6CEOcSzX
/WNXV6GHOFjfjvKet7EKPcRB7sKehA3bq9CD//Px+w/vCapCD3HYunJW6/7D
VeghDn8TjdUCT1ehhwQMZ8lK+F6uQg8J+MHZVzH/ZhV6SMBrUpBk/LAKPSSg
5q1PzPDTKvSQgHmTcj9/TqpCDwmQMH5neiK1Cj0k4ICla5vd1yr0kIDtS5eM
q/9VhR4SUL8qpv50URV6SMB9j0Jnw6oq9JCAAiZj1ctGoYcEnLNrtLPrFHpI
gOKKgZ43g0IPSRiKcEswk6hGD0loiFq5+bp8NXpIAjhUkCH1avSQhElpLrOX
6VejhyQo/PWJijGqRg9JOHNwmU2bWTV6SILDDN0F5tOq0UMSpoiV/vCdWY0e
kiC2TrQuwrkaPSThZmVf3PsF1eghCT9XZNJLl1WjB3/7Kl+4dHhVo4cUuO0+
v0TEtxo9pGC6Yeciqe3V6CEFJn9TrSX2VqOHFBweeD5lIKQaPaSgwlDBvv5E
NXpIQdX2zqs/wqvRQwpGq+4N/BdRjR5S8Lx695ejt6rRQwpirSZ0uD2qRg8p
CIxs2UR7Vo0eUrBOJvho8atq9JCCWXu+SFx+X40eUnCnX2mmU0Y1eoyB2F1F
vS1ZQo8xYDrn95kLeUKPMcA68euvSanQYwzQT8lyU6uFHmMg9IJTn2uT0GMM
bGFkN+R0CD3GQNs6rbzFA0KPMSDzNu3pN9Ea9BgDDhdzc2xlatBjDLhv+iL6
ULkGPcbAysUeJ6S1a9BjDNzKUGlYT69BD2lQn3yzOHlsDXpIg+w+H1vZiTXo
IQ1Pr1Z3ulnWoIc08HZekr06vQY9pGHh06D3vxxr0EMa5E23n5ecV4Me0pB1
+LrLVLca9JCGrYoBvz09atBDGta3yIkdWluDHtKQZGV1N8q3Bj2kId/ATCNh
Ww16SIPlwLrs1D016CENxhuivn4NrkEPGbiw64VFFv+9nPKQAeblqyNfT9eg
hwwkOdp/Tb1Ygx4y8JKzeFtiZA16yMDp8IsON2/XoIcMBO8eaQp9VIMeMtBf
1KHh/bQGPWTAMWinj+1LoYcMtI0WHlN8J/SQgXHdrMhSjtBDBhJ7e0YefBV6
yEB8e8bPjT+FHrKw5uWxrYYFQg9ZOPmcnlZSKvSQhR5t2WXh1UIPWSi1d15i
2yj0kIWPc957ctuEHrKwXil++Giv0EMWVsic7KSPCD1k4ZHYYfMkiVr0kAWT
YzeWzJarRQ9ZUPF5lpirUosesjCht8txlXYtesjCTJV9x0oNatFDFjYERXmt
NKpFDzk4M+3Sz58mteghBxriBr72U2rRQw6y31StSLSuRQ85ELM98VOL1KKH
HEwW/zTjwKxa9JCDu7MGbxbOq0UPOZh/SM7O3K0WPeRAiXbW/fiKWvSQg7Yx
qvcLvGrRQw7s8kwP0zfUooccKD4aU7hhcy16yEHgw52Fj3bWooc8rF+dOcjd
W4se8nCi/80XWkgtesjDSqmndS7HatFDHiLU97YFn65FD3kI1yQr716oRQ95
uGZ6MC0johY95KGgVtK9+WYteshDzJfkRKn7Qg95OLDtajnzsdBDHs7LTNxv
Hi/0kOf3FRw/45XQQx4UlOm2c98JPeQhdsN+0XkcoYcCbJLqm7v4i9BDASqj
r+bMzhZ6KIDxaevNTrlCDwU4KRt8wKJI6KEA7bMVC00qhB4KYLc2ply6Vuih
AJ7h/g+GGoUeCvA94lhJZZvQQwGCf0759L5H6KEA2/O3nwsbEnooQKZM19xt
Yjz0UICUzesLHKV56KEI4hJNmv0KPPRQhFPlrbU1ajz0UISqsI+nYnR46KEI
EY0HXVfQeeihCC4W21OkjXjooQhZc4eWVRvz0EMRLqyk7b5pzkMPRTCs+Htx
+jQeeijCI4W3jr12PPRQhNqkteKn7HnooQhDyjckzWfz0EMRZvZ6rixw5aGH
InjoXg/zcOOhhxLQI/Nn0Vbw0EMJyipLnxes5qGHEliOLTu314eHHkpgc237
+E9+PPRQAu2EphmbtvHQQwlCaGVfBwN46KEErgcCW6L38dBDCcxl2yfYHOKh
hxKsvr7gwrRjPPRQggDpyJCiMB56KEHsxkrP3eeFHkrAirz26tMVHjU+LKoM
Oy468CKieNR4uJwybIz4w6m/zaPGmzWUQa6oeM+ShzxqfJ2uDGknCjfmxfGo
8esJylC65bfOogQeNV4/VRlqnKwvPnnFo8bDZyrDWDX7xNRkHjXePEcZDk9V
NmpN5VHj627KMGp46j3J4FHj16uVge134adOJo8ar/dVhh+K+XbnfvGo8fCd
ypA+OFvpTT6PGv8/oAzDQ9zny4p51Pj6CWXgHHLKTa/gUX9PuKAMJ3+NRDN5
PGq8Por/2WBK1PlGHjUe/kAZouN9ns1u41Hj//HK0PlxGqno5lHj62+VYVvU
cW2xAR7194SPymDdcDwsRKSOGq/PVgYaR36RlGQd9feJQmWQTf+Q9lSmjhr/
r1KG+uDP4TOV66jx9WZlMFM8aj9LvY76e0KPMnTt9rFNpNWhhwqsN+eGJtDr
0EMFoi3WnBxh1aGHCoSfO3f92Pg69FCByZxJZzaa16GHCize+eN3vmUdeqjA
7bQW03E2deihAmIGTdsDoA49+J8D379Z7FCHHirwzPLAwhlz69BDBfaXW5iU
LaxDDxUwkTtMHJbUoYcKZDhc5nWtqEMPFRiyejhznmcdeqjAwoQaRvLaOvRQ
gVdtpw11fevQQwUmGM+dXri5Dj1UgOkn8/1ZYB16qMALsz2ka18deqiAdbjO
i0f769BDBdqc3tfIhQo9VOCgZXnkuONCDxXwtgv74xYm9FCBkla/OW6RQg8V
kOvU2dJ3WejB3/4Y9/2f7gg9VMHb9fB95ZtCD1XoOffK+Uus0EMVPgzo93Jf
Cz1Uof2SgqzyG6GHKoi7DasEvRJ6qMKiAVFLzhehhypUxm3J2pEp9FAFw/t1
N74UCD1UYf5u77nGJUIPVXjt6HZ5SoHQQxUyfty9pFMu9FAFiYr8MesqhB6q
8OB3dsWJVqGHKvC46RuHa4QeqjAoPXGRV4fQQxVCWh1vjgwKPVThbddFww/y
9eihCumTKkRnjQg9VCHya3vKeZV69FCFRidG+gJaPXqowtnmTVpLptajB397
9mgFKWnVo4cqyC9x0Z8zvR49VGFX3CQbg5n16MH/+djj8vfZ9eihBs53JR+f
tqtHDzUYqO58oWhTjx5qsORhwq5zy+rRg7+800Laif/7KQ81+Pjnq8aNoHr0
UIOrMpzoB7vr0UMN9nr7lttvrEcPNfjxIKZh7tx69FCDbXq1Uwfv1aOHGrwK
aYw9fKcePdQg8raO5LVb9eihBp4qouyS9/XooQa5BRKZEcoN6KEGritLYr4a
NqCHGni8CRpZ1FSPHmpgqbqxd9LvevRQg1+2yZUlpg3ooQaKy+vfhP6qRw81
iPZb9fbvlgb0UAMz+2n6yyY1oIca1L6e1744pQE91GDCjoL7K642oIcajHhF
3UmobkAPNbgx39Em+XEDeqiBt//eo3YGDeihDlsSjGNP/mlAD3UwdWSMObGo
AT34y4dsZ+suaUAPdXDffchymnsDeqjDgqVRog5HGtFDHdRVQk+Tlgb0UIem
WNPkxZJN6KEOa/qLGYb9DeihDoZ7X4QvetiAHupwY8cxWQmnRvRQB8Xsji+y
4xrRQx0+TOQFW0AzeqiDTV1q5NqiJvRQBzsRJTd3r2b0UIeScq8ekW1N6KEO
WYrTjHt3NqKHOliU3Ptwf04zeqiDh9ogrTm9BT3UobgyZF7/uSb0UIfNfZ4z
eQea0UMdkk64H5gk0Ywe6tCjMmTdN7MZPdTB9aWUlN6eJvRQh8ZI5bFX/ZrR
Qx1G4mw8zZf/RQ8NuOk85kO9dSt6aMDqHNl0/TMt6KEB2RMHzo4LbUUPDXjA
9K2yP96OHhpgFJ97/vKOdvTQgE3PNCZrvmhDDw3I8NkclG3dhh4a4P07pjBv
Yid6aMD7Cu1fzNYO9NCA50+SYu6yO9BDA74s13sQ392JHvztMf3jOX1vB3po
wIWzr0aCjNrRQwMmjQaOpHi3o4cGxN8yvJV0qxM9NMBVrmFz7KVu9NCAYPaR
Julf7eihAT9Dlc5W53Sjhwb4VRjP2HKiCz00wCfigEXe2n700ICiaUdsbMz7
0UMDVsw/NnJwbAd6aMCa58lKRmu70EMD9l76XhLRMYgeGjB/2XepHskh9NCE
s1VfDv33sgs9NMGWHTdjcVYHemiClvsfq5MFw+ihCSoTZrvomw6ghyaceKHq
W/x8GD004aPnFX+uax96aELOQ968YbYYUB6a8H71pakFuySB8tCEEPNYg5j4
EfTQBMvIwaA7aySB8tAEs6bcawZxYkB5aEL3UY183a2SQHlogrrS5eX0seJA
eWjC2GZL11EPCaA8NCG87AxdcVgBKA9NSHbLh1hnKaA8NGHGgW7veBtloDw0
wUCp+OvmN+JAeWiCzt+ARwH2ykB5aIL/gZF56fz3VMpDE2YPnVL9YS4JlIcm
zPqY8LP7iRxQHpowZ9VP9YIRDaA8NEGi7fzxQVMFoDw0oa+Y65SXrgWUhxb4
mr2pTFPSBMpDC4Low6FbH6oC5aEFi994xx7jO1EeWvB0xZbPmb1aQHlogciv
pIiQ6ypAeWhB6/Rfryw3qwDloQVvGkm7TgkDPbRg94mtKZYy6uihBZfWK+ls
mUAHykMLjL87npx1lYYeWqDWZmU2S2IsemhBLa0zYXaPIXrw1284ZXNSgT56
aMHVKT62quLj0UMLNjFMtMcls9BDC1pSzhdMWctEDy04YeoeFug2ET34+5tu
1LxqiiF6aMF6y6V1bSXj0UMLrNS3ml2XNEcPLdg1pWE4rdgCPbRA4y67+Fas
MXpoQYV60G0ZhanooQX2UWb9JZ7T0EML5uz4HHXExxw9tOH1KZ++8pu26KEN
Yl+vzl0aZ44e2jBoGDTMKzFCD20Ys1ziR6/zZPTQBp7iI85e1xnooQ27rjMV
ZwxNRQ9t6GM+29Yy3xY9tAFGRycfWzUJPbT5z1t39o7CTPTQhm5XKf/d4+zR
QxsKXA0W652cih7aEDFqsOOzxGz00IbmabN16x9YoYc25ElHbT81aIse2vBq
z8Ijlnumo4c2HJ/besu3yBk9tOEyW23s8rI56KENkoUZzlN8rdFDG44VZTce
WmmFHtowfWKyv0OZPXpoQ3Z9Q9q0mYvQQxtsfnTZDPxxQA9tcHM7Ou6c4RL0
0AaLntizw+GL0EMb5scsiGZ7L0YPHbB9tmnOVLO56KEDi1oNPCNtF6OHDrxw
mH/ytqMXeujARb953/5arUQPHbivczxa8s8S9NCBl9nX2e1sL/TQAQ8FO6/w
JBf00IE28fFtq1TmoocOfL58cvZ0yzXooQPW4wP0k156oQd/fS+TnprLrEAP
Haiv8I6LT3JDDx1YZ1Z/agHTDz10YIZciLj3xCXowf/9He3jbmxxQQ8d2C8W
HefesB09dOCAW/Pk6cdXoIcOeClkhbnP3okeOvDu3fqAcxfXoYcOTKieqVSZ
5IceOrA+0yZL9tAm9NCBBUwHa2OrdeihA+1VT4OiE3ahhw6IpUXqHdfdhx78
7b1zfFZfWRB60IBhfh0aDwagBw2OSLAu0vM80IMGSzv3+TvHBaEHDc7ZZLa+
bd+DHjRoqLOovuSxBz1owA1qzcz3D0QPGux0W5398bE3etBg3+t9pqGloehB
A+dXVXNGJELQgwZb7S4kjwvdgh40yL7cN7L/+RH0oMFGaf+WgMn70YMG8rE8
CfUZa9GDBtUXB/V6ZQ+jBw1EUgIPRX4LQw8aHErzm9S7/xh60GC7i1il1+2T
6EGD+5r7p30eXIIeNOgZE7U8c/QEetAgYcL3FdNneqMHDTwLP5+kVwWiBw0W
+gbYr9AKRg8a9N0OU1o86yJ60CBKOUN3DD0MPWhgbjzC/caLQA9dqL72Kmj1
xEj00AX4vKWxZNtx9NCFWyH/NTdnXUYPXVCQem1pdeQ8euhCKHu8RpxVJHro
QoH6QXrLmmj00IUPrv7zmb8i0EMX4mJXSmbIXUcPXbgzkxPo7H8LPXQhxnTC
rdTaO+ihC5MlDimRrovooQvr2xM3KN7YmkZ56MJ565SOdS/D0UMX1gbo9T/d
/QQ9dMHWWv3aG6UH6KELLv+NOoRkCvvQhbtPtp36JfsUPXShjp1tJnr/Mnro
gl6KB63K/xl66EKhuZeZ9v5jaZSHLiT1y+dHTr6BHrogYiPBtJZ7jR66EDLl
fYGX+j300IUztz9KHQxIRA9dWK49hb780XP00INTkabX27ND0ygPPVC8LJqo
OBKDHnrQZhVj61v0FD30oPZbzTaz7NfooQeS4Y8zmxtfoYceiGT/PfJx2Qv0
0APZV2Z6t7zuoIcePPYNDVKgB6CHHtwdSrlubbIljfLQg5N5Pw/tC0lDDz34
MPj3TMj4z+ihB07DesPsyR+wDz14X/eSdiQsGj30YEqkc0UXNyKN8tCD70vO
Td2Y+x499KCgmgwVjE9HDz2YEVbnSZuVkkZ56MEGtYMnPb1/oIceGMRsadgw
5yd66MG8gb4EaHiFfehBJT3qQcDePPTQgwwd8zdNJvfSKA892D28+clrx0/o
oQe0eNv/DiW/T6M89KBKbnV1+dXENMpDH8RWvi2wG43HPvRhLWc+2RadnEZ5
6EPfgdeZ+8eWo4c+FCa2qn/z+o0e+vDleKb+gy/v0igPfaicNLH9mkIFeujD
d9vXK3w1StFDHzJjY8+/UslOozz0IZD+rXxeCRf70IfgU01SEk9S0UMftGnl
OR1qeWmUhz7YPj7YVBhThx768PJJUtatKWnowf95Q4aysn099qEPjXaBxheN
y9BDH4wl79v2arWghz486FGU3dTyED30YertTUGl46vRQx/uifSsNl/ejh76
kCv7/ZG7/Rv00IfLfjd8ajdXp1Ee+nB+2e6uTO827EMfGEoD8iWWvejB/2yy
wCb/TjN66IN3dLTlsFoH9mEA/k5+67WepWMfBtAr4dTxwnYY+zCAMDtWzGB5
EXoYQNU95wA3htDDAOytRrrcGyrRwwD2ZSz7eHBZexrlYQC2IaYa7VNq0MMA
Tv1X5ZBk1oF9GEDqZKfC9qUN6GEAgQ2XNegXuehhAEpSM1J2WYvZUx789T/7
ndG/oxavVwbA9Y5Tm2bWgx4GMLmp9Wj1aUl7ysOA/7yxxrYo8UUa5WEAKjyN
msXjqtDDAOiHV28/mjeK1ysDEK/sSw0+LmNPeRhA+Fb3BK7lTfQwAJsxFZY8
NxEO5WEAxqwYI5mx8vaUhwEMmymaZ66qwT4M4FCcxXQz/xH0MICds3JkVxdq
cCgPA/hm7KDmG16OHnTIefUncdNNTQ7lQYdJ+2/NqVz3F/ugQ4s4a3y/nao9
5UGHrfsnLriVLMmhPOgQN1BgmLtMzZ7yoMP7oyS3n9uFHnR4dKTnhMpiJofy
oIPsRe1zcoo16EEHS9dg1t+JohzKgw4quxhtuqvZHMqDDgmyxFF+ug6H8qCD
+hbWeqPNBvaUBx1iQkWHnQKy0igPOljTDx0ZLWZxKA86nJkZYBy1ZSyH8qDD
kgXSB5uYzehBh/GXA6QLDNvQgw4OorllWrb9aZQHHW6tqLC5aGnDoTzo4CX2
equ/jJE95UGHRbcCQ+2zbTiUBx2m7/jIq7QYxT7oEBVi+8T9LptDedDhk+ry
lcknRdCDDkfmDAcUrJ9mL5j/K8KAleIP79vJ0+0F850lGWC1rWjhOK65vWA+
sSwDggNXfQibZ8IRzJ9WYsCK8IqN+aYa9oL5yeoMuBl6bxZ70SSOYD42jQF7
ojTaTJUm2AvmO9MZoFEw6dIJOyeOYD6xIQPyXqm9tdaz5AimL09gwI3xnIun
5k/nCOYnT2SAox97x0tFZXvBfGwLBjyWjh++O38+RzDf2ZoBbnvuf2a9dOEI
5nfPYMA43xaflKNgL5g/7ciATyfiRkwOzuEI5ovPYYCLCe3epjhnjmA+9nwG
DHvYmg1rzecI5ju7MUDkieOXK8SEI5iuvZwB5y2Ye5+oO9oL5k97MmBTwHj5
rbluHMF8cW8GdP3Qp6+ydLAXzMfeyIDitkWzFecq2Avmn29hwIveIoNdHfM4
gvndOxnwNkva/KiRO0cwfzqQAd1KEyyeXXC0F0yvPsCAtbOHuRvPr+MIPEIZ
4H844NedZBuOwOM4AzhNG3ax8iw5Ao/TDPBx8bfSpDlRHucZkPx2ulrFjm0c
gccVBuQenpQbeYZFeUQxoFd5yGCeynKOwOM2Az6r7dOiW/lQHg8YcKYnfJ7V
2y2Ux2MG/30iLrXzs7S9wOMZA4ZiEt9sHvLlCDxeMCDQx9XscK6FvcDjDQNK
MycWnoreSnm8Z0DO64KBNE97jsDjIwNCNTk+xrODKI+vDFj4lW60Rv8A5ZHN
gJ2uryzvHQqkPHIYYF6x0WRX6iTK4w8D2jb3P9ZQCuEIPEoZUGf29orahy2U
B5d//tq/+JXHdqE8eAxwetub5rpoH0fg0cwA7UILWc34dfYCj3YGqOjqZjh/
XUF59DAgSevJxK37N1IegwxYrLV57L7HvtgHE7akt+3e47yB8pBkQtaiOzFd
EssoD1kmRJ21f/hY4Rj2wYQNh55yu7bupzzUmXAvsL98UbAn9sEE0zvbje4v
CKU86Ey4GNCql3QrDPtgwvUrT4ekFlzGPphAe+tTfuXkEeyDCRnmSzqKY9di
H0z4uK4oNKftFvbBhAqOKU1pShT2wQQdGfkJOyquUx6OTIh/+vuFbmgk9sHf
n7QrEuRvJPbBhLFvLj1uTvezp/pggou0172F67bYU30w4avPRj8nuE95eDJh
wjvFLU/8bmMfTHCuCAk4cdof+2DCuf/K4onNHcpjCxP+qgwMHeTcwD6YoDvo
PPsQ9yr2wYR3kfI5MpaxHKoPJhDj/nLHuhDKI5QJ/r0XFBmrE7APJqQN9f5u
4D3HPphQHFkwsejIc+yDCXfDVmZ91ziIfTCh2spb88nf59gHE3ZG/9kadTgG
+2DCokXsyJC2BOyDv786LcMSnjexDybU10DI4XFvKY9nTHg/9X3cYW/APpjQ
/rnpVcz2e5THGyYMj/+mI/U0GvtggtHxUqtree+wDyboK3at6197HftgwlrF
uQn7f4dhH0wI6aj88OcdB/tggn3X/rZAlzTsgwnenatuuX5+hn0wYevHabEr
x2/HPpigvNFwtaT7Sw7VB//8+Z13PEztBfbBBJPNL3WOiyZSHu1MYDcYO3UG
ZWIf/OPtE7Dw2ISflMcgEyy/nI2Ne/+Lul6JsODaasO5j55mYh8s0JX/tHX+
7/fYBwu+PY5f+M2rAPtgQcpz/ciSli/YBwse/+dqNqUiFftgwadhDfP9L7Ox
DxbMf2KsV/nkD/bBgpIb/rs3l3zAPlggG3OsMWIhF/tggdfRhzfPPnxBeViw
YLiOMaS87xz2wYIoTXdu4aEq7IMFqVOXa493q8I+WGDkULEu/79P2AcLTltM
KnA/wsU+WGBVznqgcbYM7x8sCDY0sBhMrcL7Bwsy9FMPS4+rxj5YMCMq+NeC
wpfYBwtOeYlmyU9Fj40s8F5PGqcMFmAfLHj4ae+5x/nV2AcL3puM6f/D5GEf
LFjq2VVGX/wc+2DBZI/3C4wz2/H+wQL1oy+TGx5wsQ8WuIe3zjs8vg/7YIH1
kY8br5jXYx8suJe5wD1Vcxj7YEFjo+JJRXY39sGC/65FO+T0d2MfLGjQeZG7
J08kneqDBat8vpysj5dMp/pgwXed7/bVyyTSqT5Y4OKc2ZyeLJ5O9cGChE1n
+36KiqZTfbDgNXvo9H+6bdgHC6L/RvuVHpNMp/pggc4j1xl9jYXYBwv8gmc9
2niuG/tgwfqm8JAc7zrsgwXTjI7aH9AaxT5YYJD4vXtzeiX2wT8/B7QzVdMU
0qk+WKCiOJLoniObTvXBAv2Rm9zObO10qg8WxGRlGy8f/ot9sGBOkt5G3euD
2Af//KE7Bd7ZIp5O9cGC1g+nfLM0VNKpPtigm5mz1ru5E/tgw9LQWK/t+0TS
qT7Y8Mmqqjv5vUQ61QcbMkVPZ38p0Eun+mDDyfsjavoOBulUH2xY8LWpafIb
w3SqDzZcOfw5LTvTkPIwZMPBN9Xqb+1VKI8JbFg8HF+/2HgA+2CDk0zYpAZt
FuVhwYY7HqP33p8Sozys2bD/3hJ1+XFG6VQfbIgboR1/U86kPBzZoDh2oDvS
elw61QcbNj65G+v5Rzmd6oMNa5s6Wz126aVTfbAh59JMg1R9djrVBxv6thKO
S9KEdKoPNsTM4laEfrOgPLzZ8PlqFYS+MKQ8NrLhj3LFdBNvFuWxhQ0F4zuu
+J6akk71wQa/ZyKmwXOs06k+2LA8Rf3ngxcWlMcBNljPbB5hS1pSHqFsWGVt
Gpo5Z0Y61QcbkuYUSrUvcKA8TrMh2sltecdLGuVxng27bNNckhPHUh5X+Nun
f3FEVmIS5RHFhr3uqXsu5NtRHrfZsE5CSWOVtQ32wYZtDCWVQeWJ2AcbWurk
PRwPzMM+2PC9v9Ilr9cQ++D73FO/d8PbFftgg8d4rZnt920pj/dsSN7mX2K1
ZBH2wYaKNfJ/Qm2A8vjKP982+wbUpM+mPLL5++ts3BsY70555PCPn5btfevH
DpTHHzYUh4o7lMMUyqOUDfIff219Omse9sEG/9u6Yb98nbAPNvT03POOqHXF
PvjLnSUV99yeS3m0syFo2Sc/nTYvyqOH//se7353yW0t9sEG8cwKwzljPdP/
B5iwTL8=
      "]], {}, {}}, 
    {RGBColor[0.560181, 0.691569, 0.194885], PointSize[
     0.0038500000000000006`], AbsoluteThickness[1.6], LineBox[CompressedData["

1:eJw92ndcTX0cB/D2nrdx290RsomQ9ftmJ5LKag+V1r2Nm6xSJOtBQtnZu5AZ
IVLaXZQ9Q2VWNKk8p+t+f388r+f5OM+5v3PO+3zuPefnx/UXugTKy8jIyDL/
NDD/Icf8u+t086PZ/s5ks+OQLRX3myfecNCQG7g+hZidyTY41OFKTIe+tlJK
2kUKL5/KhZsRZKHd5eKltzNJ1YnGO881V5Gyw1Ov/uo+RnZ/2Bdg/GQd+dx3
uMo5szNkruardXu2bSVMcF887jy5HjjGNrR7B9lhpDBfa3AOOXvLUkO1bTfh
v+xMCM27TAz1lO46cA6SnAONJ4scrxH1CicHzWuHySTfT2Ley1ySw/Hc2hFy
jDzkSXYgT6pPOXGsThLJ5s7bxHxoitbm96dJh+uH4/vu55NCY4fSuoPnCLH1
Zk7pHhGNiOKHLzpP1hs+r2x3LSAacbHPApQvkqp2yQ5kluhOw1rvHMLu3fyh
kDit3tM87eIl4i25IA/I12B3ddm/l8mJffc5F6KLSeb6mhNW06+SH6t6Rygh
1294z5q48dq/4eTKyF9/J7nm+9dJvORPyskplu74X525pJDZe8n2ClKh3WOn
YX2T9F5t5pDIspIJRbpz8siZXg4dMfmTdgXqBLeIk78Oc8nFxDG/+9vS9bfJ
z97NCx+SZa/XLbux+w5Jn7w5vP7PQxLvmvRswdx88o/nEfGZxbLJfpRPJHqT
HxPjgtXDg5zvEiYwOzwmSh+HuGwovUv69G7eXE10wrvA0v4eKWH2NhlaQyIt
dqaMvnyPRNT/Ye6QGrIrRXP8W34B0ZHcAE/InbZNxX1SC4hkOJOnhG9deMK0
s0B6fzwlqWPShj/yvk/+3V/PSJJHxlKPu/fJIZPeG+o5yQkXaJVyCsmU3sM/
/ZyUvTzYOSy+kEiGm/2C5Jx9m3T0SSGRbG5+QZ6NtLK0HVxE/t2OL4m+r7pv
Z2IRedx7OexekU8vZ9XIPyoicb2H//oVOXP90d9gzgPp/fuaTNO3sbcLf0Ak
m63ekA1Z9pWbrjwgkstb/IYMzU89Kux6QCSXI/wt2Zm4eeVvKCY1y3rv6Hdk
UT+zoglri0m/3tvb/R0xT8487FhQTJZLbvh3ZLexco2tbIm0D+9IeqlSmeaE
EmLO3P1v57wnx44P2/pxaQkRstbmlx5+T0xNPhSWZpeQu6W9O7wnXa4/L4k/
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
      "]], {}, {}}}},
  AspectRatio->0.85,
  Axes->True,
  AxesLabel->{
    FormBox["\"r [fm]\"", TraditionalForm], 
    FormBox["\"Im[V]\"", TraditionalForm]},
  AxesOrigin->NCache[{
     Rational[1, 1000], 0}, {0.001, 0}],
  AxesStyle->Directive[
   FontSize -> 25, Thickness -> 0.004, FontFamily -> "Helvetica", 
    GrayLevel[0]],
  BaseStyle->{FontSize -> 14},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  ImageSize->{600, 600},
  Method->{
   "MessagesHead" -> DiscretePlot, "AxisPadding" -> Scaled[0.02], 
    "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
    AbsolutePointSize[6], "DefaultPlotStyle" -> {
      Directive[
       RGBColor[0.368417, 0.506779, 0.709798], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.880722, 0.611041, 0.142051], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.560181, 0.691569, 0.194885], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.922526, 0.385626, 0.209179], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.528488, 0.470624, 0.701351], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.772079, 0.431554, 0.102387], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.363898, 0.618501, 0.782349], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[1, 0.75, 0], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.647624, 0.37816, 0.614037], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.571589, 0.586483, 0.], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.915, 0.3325, 0.2125], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.40082222609352647`, 0.5220066643438841, 0.85], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.9728288904374106, 0.621644452187053, 0.07336199581899142], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.736782672705901, 0.358, 0.5030266573755369], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.28026441037696703`, 0.715, 0.4292089322474965], 
       AbsoluteThickness[1.6]]}, "DomainPadding" -> Scaled[0.02], 
    "PointSizeFunction" -> "SmallPointSize", "RangePadding" -> Scaled[0.05]},
  PlotLabel->FormBox[
    StyleBox["\"T=500MeV\"", FontSize -> 25, FontFamily -> "Helvetica", 
     GrayLevel[0], StripOnInput -> False], TraditionalForm],
  PlotRange->NCache[{{
      Rational[1, 1000], 
      Rational[9991, 1000]}, {-1.372318278886332, 2.533038189669092}}, {{
    0.001, 9.991}, {-1.372318278886332, 2.533038189669092}}],
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.02], 
     Scaled[0.02]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{3.74557651089561*^9, 
  3.7455774587196407`*^9},ImageCache->GraphicsData["CompressedBitmap", "\<\
eJztnQd4FFXXx2dbNp1epPeiIiJdULGg2LCADbu+YkEUlc9PXwG7gnQRAUGq
SG+GHkKHAKEHSCAhkN57L7v/7547dyabxqb5gu9393l2k52duTPz+597bjv3
zuOvj33nrdGvj333zdfbPPTx62PeeffNT9o8+OHHbJPJoCjG5+ndRqH/oSja
R/FrBH04bpEb5Aa5oVIbPuD/mxGw4FGEL+ig7WLEufl9FFf+/6X53fjP9Ao5
s5vvdnjF+zg1f5CRvigm7Sv/5iK20SEJMZf5Nyv/tPD9/Nd8zpOgN9tHqct/
M/PTaNvZyU0OyYjNilGcgK5Ce/kvfY3/zg438nux4Pi2WXpK4ifFKO4zMvSE
fgMsGe0sdAg7Kd2EMk3iqQSetioHzRM/KkFJUBKUBCVB/aNBsd9HjhypnVDl
NkRyk9xkxpSgJCgJSoKSoCQoCUqCkqAkKAlKgpKgJCgJSoKSoCQoCUqCkqBk
F7rkduNzkxlTgpKgJCgJSoKSoCQoCUqCkqCuH6jG4gik7cWgugqUuoOwNw1W
yU/yk/wkP8lP8rsWP7YVsCE77CSO+vsr7vBnnyYcC0xAvnpqdiUScY0RZ+HU
O61hYd/cRfejZ6/FiCqUiGsNcTbOftQNDevUYYjrsE8Tmg9ajugiiVg62n8A
v+IBCTkOISHKnHzD8qvP/7jCXpCEkPOBCAwU78OL0Ntb8qweTxPyw2bgNndF
VI/Ep8qS7+EigVbNQG1pxzFv/Ci8PHQgOnqbIZYCkQZaRZ6NRGq2jAtYObIj
3Aw6Q0VCrGqpk3UCYztYpRFWlx/yEPxtV7hJfnJEQYKSoCQoCUqCkqAkKAlK
gpKgJCgJSoKS0zwkN5kxJSgJSoKSoCQoCUqCkqAkKAlKgpKgJCgJSoKSoCQo
CUqCkqAkKNmFLrn9s7nJjClBSVASlAQlQUlQEpQEJUFJUBKUBCVBSVASlAQl
QUlQEpQE9V8PSnahS24yY0pQEpQEJUFJUBKUBCVBSVASlAQlQUlQNQH1At9g
Qn7IJNwqVmt1Q9nVWl8Q5yi1yvDzfDNjmR8F3xmjMbRnWzT2ssLFoz5a3f4Q
3vxuHc5n2DpedyU8+W9uuDK7FRa/UBdP3+6Gbk3M8LQY0biJFf26e+GV5zth
92xNiushT8/yKbvqlGPgN1Ol3MjTCqtnI7TtORQfzNqD2AI8VJG4toSNuKuO
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\
\>"]]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Modules", "Subsection",
 CellChangeTimes->{{3.726381335500948*^9, 3.726381343557601*^9}}],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"ParallelSow", "[", "expr_", "]"}], ":=", 
   RowBox[{"Sow", "[", "expr", "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"SetSharedFunction", "[", "ParallelSow", "]"}], ";"}]}], "Input"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"\[Delta]", "=", 
    FractionBox["1", "100"]}], ";"}], " "}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"d\[Omega]", "=", "0.0002"}], ";"}]}], "Input",
 CellChangeTimes->{{3.74228955582731*^9, 3.742289558498271*^9}, {
  3.742298662461986*^9, 3.742298684870023*^9}, {3.742298729927827*^9, 
  3.7422987328788557`*^9}, {3.742299426624055*^9, 3.742299459795083*^9}}],

Cell[CellGroupData[{

Cell["Charmonium s - wave", "Subsubsection",
 CellChangeTimes->{{3.742291861612499*^9, 3.742291867360454*^9}, 
   3.742291901323778*^9}],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"swaveccspectra", "[", 
    RowBox[{"n_", ",", "Tscan_"}], "]"}], ":=", 
   RowBox[{"Block", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{"T", "=", 
        RowBox[{"Tscan", "[", 
         RowBox[{"[", "n", "]"}], "]"}]}], ",", 
       RowBox[{"mD", "=", 
        RowBox[{"mDcal", "[", 
         RowBox[{
          RowBox[{"2", "\[Pi]"}], ",", 
          RowBox[{"Tscan", "[", 
           RowBox[{"[", "n", "]"}], "]"}], ",", 
          RowBox[{"kfinal", "[", 
           RowBox[{"[", "1", "]"}], "]"}], ",", 
          RowBox[{"kfinal", "[", 
           RowBox[{"[", "2", "]"}], "]"}]}], "]"}]}], ",", 
       RowBox[{"\[Sigma]", "=", 
        RowBox[{"\[Sigma]cont", "[", 
         RowBox[{"[", "1", "]"}], "]"}]}], ",", 
       RowBox[{"\[Alpha]", "=", 
        RowBox[{"\[Alpha]cont", "[", 
         RowBox[{"[", "1", "]"}], "]"}]}], ",", 
       RowBox[{"c", "=", 
        RowBox[{"ccont", "[", 
         RowBox[{"[", "1", "]"}], "]"}]}], ",", 
       RowBox[{"M", "=", "Mc"}], ",", 
       RowBox[{"l", "=", "0"}], ",", 
       RowBox[{"\[Omega]min", "=", 
        RowBox[{"-", "1"}]}], ",", 
       RowBox[{"\[Omega]max", "=", "2"}], ",", "ccsT", ",", "Tstring", ",", 
       "inf"}], "}"}], ",", "\[IndentingNewLine]", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"rev", "=", 
       RowBox[{"Interpolation", "[", 
        RowBox[{"Join", "[", 
         RowBox[{
          RowBox[{"ParallelTable", "[", 
           RowBox[{
            RowBox[{"{", 
             RowBox[{"r", ",", 
              RowBox[{"ReVsb", "[", 
               RowBox[{
               "r", ",", "mD", ",", "\[Alpha]", ",", "\[Sigma]", ",", "c"}], 
               "]"}]}], "}"}], ",", 
            RowBox[{"{", 
             RowBox[{"r", ",", 
              RowBox[{"1", "/", "1000"}], ",", "10", ",", 
              RowBox[{"1", "/", "100"}]}], "}"}]}], "]"}], ",", 
          RowBox[{"ParallelTable", "[", 
           RowBox[{
            RowBox[{"{", 
             RowBox[{"r", ",", 
              RowBox[{"ReVsb", "[", 
               RowBox[{
               "r", ",", "mD", ",", "\[Alpha]", ",", "\[Sigma]", ",", "c"}], 
               "]"}]}], "}"}], ",", 
            RowBox[{"{", 
             RowBox[{"r", ",", 
              RowBox[{"101", "/", "10"}], ",", "25", ",", 
              RowBox[{"1", "/", "10"}]}], "}"}]}], "]"}], ",", 
          RowBox[{"ParallelTable", "[", 
           RowBox[{
            RowBox[{"{", 
             RowBox[{"r", ",", 
              RowBox[{"ReVsb", "[", 
               RowBox[{
               "r", ",", "mD", ",", "\[Alpha]", ",", "\[Sigma]", ",", "c"}], 
               "]"}]}], "}"}], ",", 
            RowBox[{"{", 
             RowBox[{"r", ",", "26", ",", "1500", ",", "1"}], "}"}]}], "]"}], 
          ",", 
          RowBox[{"ParallelTable", "[", 
           RowBox[{
            RowBox[{"{", 
             RowBox[{"r", ",", 
              RowBox[{"ReVsb", "[", 
               RowBox[{
               "r", ",", "mD", ",", "\[Alpha]", ",", "\[Sigma]", ",", "c"}], 
               "]"}]}], "}"}], ",", 
            RowBox[{"{", 
             RowBox[{"r", ",", "1510", ",", "20000", ",", "1000"}], "}"}]}], 
           "]"}]}], "]"}], "]"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"imv", "=", 
       RowBox[{"Interpolation", "[", 
        RowBox[{"Join", "[", 
         RowBox[{
          RowBox[{"ParallelTable", "[", 
           RowBox[{
            RowBox[{"{", 
             RowBox[{"r", ",", 
              RowBox[{"ImVsb", "[", 
               RowBox[{
               "r", ",", "mD", ",", "\[Alpha]", ",", "\[Sigma]", ",", "T"}], 
               "]"}]}], "}"}], ",", 
            RowBox[{"{", 
             RowBox[{"r", ",", 
              RowBox[{"1", "/", "1000"}], ",", "10", ",", 
              RowBox[{"1", "/", "100"}]}], "}"}]}], "]"}], ",", 
          RowBox[{"ParallelTable", "[", 
           RowBox[{
            RowBox[{"{", 
             RowBox[{"r", ",", 
              RowBox[{"ImVsb", "[", 
               RowBox[{
               "r", ",", "mD", ",", "\[Alpha]", ",", "\[Sigma]", ",", "T"}], 
               "]"}]}], "}"}], ",", 
            RowBox[{"{", 
             RowBox[{"r", ",", 
              RowBox[{"101", "/", "10"}], ",", "25", ",", 
              RowBox[{"1", "/", "10"}]}], "}"}]}], "]"}], ",", 
          RowBox[{"ParallelTable", "[", 
           RowBox[{
            RowBox[{"{", 
             RowBox[{"r", ",", 
              RowBox[{"ImVsb", "[", 
               RowBox[{
               "r", ",", "mD", ",", "\[Alpha]", ",", "\[Sigma]", ",", "T"}], 
               "]"}]}], "}"}], ",", 
            RowBox[{"{", 
             RowBox[{"r", ",", "26", ",", "1500", ",", "1"}], "}"}]}], "]"}], 
          ",", 
          RowBox[{"ParallelTable", "[", 
           RowBox[{
            RowBox[{"{", 
             RowBox[{"r", ",", 
              RowBox[{"ImVsb", "[", 
               RowBox[{
               "r", ",", "mD", ",", "\[Alpha]", ",", "\[Sigma]", ",", "T"}], 
               "]"}]}], "}"}], ",", 
            RowBox[{"{", 
             RowBox[{"r", ",", "1510", ",", "20000", ",", "1000"}], "}"}]}], 
           "]"}]}], "]"}], "]"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"V", "[", "x_", "]"}], ":=", 
       RowBox[{
        RowBox[{"rev", "[", "x", "]"}], "+", 
        RowBox[{"\[ImaginaryI]", " ", 
         RowBox[{"imv", "[", "x", "]"}]}]}]}], ";", "\[IndentingNewLine]", 
      "\[IndentingNewLine]", 
      RowBox[{"\[Rho]table", "=", 
       RowBox[{
        RowBox[{
         RowBox[{
          RowBox[{"ParallelDo", "[", 
           RowBox[{
            RowBox[{
             RowBox[{"\[Omega]", "=", 
              RowBox[{"\[Omega]min", "+", 
               RowBox[{
                RowBox[{"(", 
                 RowBox[{"it", "-", "1"}], ")"}], " ", "d\[Omega]", " ", 
                "M"}]}]}], ";", 
             RowBox[{"inf", "=", 
              RowBox[{"40", "+", 
               RowBox[{"500", "*", "it", "*", "d\[Omega]"}]}]}], ";", 
             "\[IndentingNewLine]", 
             RowBox[{"(*", 
              RowBox[{
               RowBox[{"s0", "=", 
                RowBox[{"NDSolve", "[", 
                 RowBox[{
                  RowBox[{"{", 
                   RowBox[{
                    RowBox[{
                    RowBox[{
                    RowBox[{
                    RowBox[{"(", 
                    RowBox[{"\[Omega]", "-", 
                    FractionBox[
                    RowBox[{"l", 
                    RowBox[{"(", 
                    RowBox[{"l", "+", "1"}], ")"}]}], 
                    RowBox[{"M", " ", 
                    SuperscriptBox["r", "2"]}]], "-", 
                    RowBox[{"Re", "[", 
                    RowBox[{"V", "[", "r", "]"}], "]"}], "+", 
                    RowBox[{"\[ImaginaryI]", " ", 
                    RowBox[{"Abs", "[", 
                    RowBox[{"Im", "[", 
                    RowBox[{"V", "[", "r", "]"}], "]"}], "]"}]}]}], ")"}], 
                    RowBox[{"gr", "[", "r", "]"}]}], "+", 
                    RowBox[{
                    FractionBox["1", "M"], 
                    RowBox[{
                    RowBox[{"gr", "''"}], "[", "r", "]"}]}]}], "\[Equal]", 
                    "0"}], ",", " ", "\[IndentingNewLine]", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"gr", "'"}], "[", "\[Delta]", "]"}], "\[Equal]", 
                    RowBox[{
                    RowBox[{"2", " ", "\[Delta]", 
                    SuperscriptBox[
                    RowBox[{"(", 
                    RowBox[{"\[Alpha]", " ", "M"}], ")"}], "2"]}], "-", 
                    RowBox[{
                    FractionBox["3", "4"], 
                    SuperscriptBox["\[Delta]", "2"], 
                    SuperscriptBox[
                    RowBox[{"(", 
                    RowBox[{"M", " ", "\[Alpha]"}], ")"}], "3"]}]}]}], ",", 
                    "\[IndentingNewLine]", " ", 
                    RowBox[{
                    RowBox[{"gr", "[", "\[Delta]", "]"}], "==", " ", 
                    RowBox[{
                    RowBox[{
                    SuperscriptBox["\[Delta]", "2"], 
                    SuperscriptBox[
                    RowBox[{"(", 
                    RowBox[{"\[Alpha]", " ", "M"}], ")"}], "2"]}], "-", 
                    RowBox[{
                    FractionBox["1", "4"], 
                    SuperscriptBox["\[Delta]", "3"], 
                    SuperscriptBox[
                    RowBox[{"(", 
                    RowBox[{"M", " ", "\[Alpha]"}], ")"}], "3"]}]}]}]}], 
                   "}"}], ",", "gr", ",", 
                  RowBox[{"{", 
                   RowBox[{"r", ",", "\[Delta]", ",", "inf"}], "}"}], ",", 
                  RowBox[{"PrecisionGoal", "\[Rule]", "10"}], ",", 
                  RowBox[{"MaxSteps", "\[Rule]", "1000000"}]}], "]"}]}], ";", 
               "\[IndentingNewLine]", 
               RowBox[{
                RowBox[{"gr1", "[", "r_", "]"}], "=", 
                SubscriptBox[
                 RowBox[{"(", 
                  RowBox[{
                   RowBox[{"gr", "[", "r", "]"}], "/.", "s0"}], ")"}], 
                 RowBox[{
                 "\[LeftDoubleBracket]", "1", "\[RightDoubleBracket]"}]]}], 
               ";"}], "*)"}], "\[IndentingNewLine]", 
             RowBox[{"s01", "=", 
              RowBox[{"NDSolve", "[", 
               RowBox[{
                RowBox[{"{", 
                 RowBox[{
                  RowBox[{
                   RowBox[{
                    RowBox[{
                    RowBox[{"(", 
                    RowBox[{"\[Omega]", "-", 
                    FractionBox[
                    RowBox[{"l", 
                    RowBox[{"(", 
                    RowBox[{"l", "+", "1"}], ")"}]}], 
                    RowBox[{"M", " ", 
                    SuperscriptBox["r", "2"]}]], "-", 
                    RowBox[{"Re", "[", 
                    RowBox[{"V", "[", "r", "]"}], "]"}], "+", 
                    RowBox[{"\[ImaginaryI]", " ", 
                    RowBox[{"Abs", "[", 
                    RowBox[{"Im", "[", 
                    RowBox[{"V", "[", "r", "]"}], "]"}], "]"}]}]}], ")"}], 
                    RowBox[{"gr", "[", "r", "]"}]}], "+", 
                    RowBox[{
                    FractionBox["1", "M"], 
                    RowBox[{
                    RowBox[{"gr", "''"}], "[", "r", "]"}]}]}], "\[Equal]", 
                   "0"}], ",", " ", "\[IndentingNewLine]", 
                  RowBox[{
                   RowBox[{
                    RowBox[{"gr", "'"}], "[", "\[Delta]", "]"}], "\[Equal]", 
                   RowBox[{
                    RowBox[{"(", 
                    RowBox[{"\[Alpha]", " ", "M"}], ")"}], "-", 
                    RowBox[{"\[Delta]", 
                    SuperscriptBox[
                    RowBox[{"(", 
                    RowBox[{"M", " ", "\[Alpha]"}], ")"}], "2"]}]}]}], ",", 
                  "\[IndentingNewLine]", " ", 
                  RowBox[{
                   RowBox[{"gr", "[", "\[Delta]", "]"}], "\[Equal]", 
                   RowBox[{
                    RowBox[{"\[Delta]", 
                    RowBox[{"(", 
                    RowBox[{"\[Alpha]", " ", "M"}], ")"}]}], "-", " ", 
                    RowBox[{
                    FractionBox["1", "2"], 
                    SuperscriptBox["\[Delta]", "2"], 
                    SuperscriptBox[
                    RowBox[{"(", 
                    RowBox[{"\[Alpha]", " ", "M"}], ")"}], "2"]}]}]}]}], 
                 "}"}], ",", "gr", ",", 
                RowBox[{"{", 
                 RowBox[{"r", ",", "\[Delta]", ",", "inf"}], "}"}]}], "]"}]}],
              ";", "\[IndentingNewLine]", 
             RowBox[{
              RowBox[{"gr0", "[", "r_", "]"}], "=", 
              SubscriptBox[
               RowBox[{"(", 
                RowBox[{
                 RowBox[{"gr", "[", "r", "]"}], "/.", "s01"}], ")"}], 
               RowBox[{
               "\[LeftDoubleBracket]", "1", "\[RightDoubleBracket]"}]]}], ";",
              "\[IndentingNewLine]", 
             RowBox[{"s1", "=", 
              RowBox[{"NDSolve", "[", 
               RowBox[{
                RowBox[{"{", 
                 RowBox[{
                  RowBox[{
                   RowBox[{
                    RowBox[{"rho", "'"}], "[", "x", "]"}], "\[Equal]", 
                   RowBox[{
                    RowBox[{"-", 
                    FractionBox[
                    RowBox[{" ", 
                    RowBox[{"6", " ", "Nc", " ", 
                    SuperscriptBox["M", "2"], " ", "\[Alpha]"}]}], 
                    RowBox[{"4", "\[Pi]"}]]}], 
                    RowBox[{"Im", "[", 
                    FractionBox["1", 
                    SuperscriptBox[
                    RowBox[{"(", 
                    RowBox[{"gr0", "[", "x", "]"}], ")"}], "2"]], 
                    RowBox[{"(*", 
                    RowBox[{"+", 
                    FractionBox["36", 
                    SuperscriptBox[
                    RowBox[{"(", 
                    RowBox[{"gr1", "[", "x", "]"}], ")"}], "2"]]}], "*)"}], 
                    "]"}]}]}], ",", 
                  RowBox[{
                   RowBox[{"rho", "[", "\[Delta]", "]"}], "\[Equal]", "0"}]}],
                  "}"}], ",", "rho", ",", 
                RowBox[{"{", 
                 RowBox[{"x", ",", "\[Delta]", ",", "inf"}], "}"}]}], "]"}]}],
              ";", "\[IndentingNewLine]", 
             RowBox[{
              RowBox[{"rhow", "[", "r_", "]"}], "=", 
              SubscriptBox[
               RowBox[{"(", 
                RowBox[{
                 RowBox[{"rho", "[", "r", "]"}], "/.", "s1"}], ")"}], 
               RowBox[{
               "\[LeftDoubleBracket]", "1", "\[RightDoubleBracket]"}]]}], ";",
              "\[IndentingNewLine]", 
             RowBox[{"ParallelSow", "[", 
              RowBox[{"{", 
               RowBox[{
                RowBox[{"\[Omega]", "+", 
                 RowBox[{"2", "M"}]}], ",", 
                RowBox[{"rhow", "[", "inf", "]"}]}], "}"}], "]"}]}], ",", 
            RowBox[{"{", 
             RowBox[{"it", ",", "1", ",", 
              FractionBox[
               RowBox[{"\[Omega]max", "-", "\[Omega]min"}], 
               RowBox[{"d\[Omega]", " ", "M"}]]}], "}"}]}], "]"}], "//", 
          "Reap"}], "//", "Last"}], "//", "First"}]}], ";", 
      "\[IndentingNewLine]", "\[IndentingNewLine]", 
      RowBox[{"ccsT", "=", 
       RowBox[{"ParallelTable", "[", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{
           RowBox[{"\[Rho]table", "[", 
            RowBox[{"[", 
             RowBox[{"i", ",", "1"}], "]"}], "]"}], ",", 
           FractionBox[
            RowBox[{"-", 
             RowBox[{"\[Rho]table", "[", 
              RowBox[{"[", 
               RowBox[{"i", ",", "2"}], "]"}], "]"}]}], 
            SuperscriptBox[
             RowBox[{"\[Rho]table", "[", 
              RowBox[{"[", 
               RowBox[{"i", ",", "1"}], "]"}], "]"}], "2"]]}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"i", ",", "1", ",", 
           RowBox[{"Length", "[", "\[Rho]table", "]"}]}], "}"}]}], "]"}]}], 
      ";", "\[IndentingNewLine]", 
      RowBox[{"Tstring", "=", 
       RowBox[{"Round", "[", 
        RowBox[{"T", "*", "1000"}], "]"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"Export", "[", 
       RowBox[{
        RowBox[{"\"\<spectraldata/Tscan/cc/swccT\>\"", "<>", 
         RowBox[{"ToString", "[", "Tstring", "]"}], "<>", 
         "\"\<spectra.dat\>\""}], ",", 
        RowBox[{"Sort", "[", "ccsT", "]"}]}], "]"}], ";"}]}], 
    "\[IndentingNewLine]", "]"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.724397604460712*^9, 3.724397621092863*^9}, {
   3.724398705481254*^9, 3.724398705798315*^9}, {3.72440624506767*^9, 
   3.7244062457361317`*^9}, {3.7244423136168756`*^9, 3.724442340980721*^9}, {
   3.7244423712224417`*^9, 3.724442377050403*^9}, {3.724442465925974*^9, 
   3.724442518695669*^9}, {3.7244426255599117`*^9, 3.724442639076613*^9}, {
   3.724443729204352*^9, 3.724443729749022*^9}, {3.724443881656342*^9, 
   3.7244438842850027`*^9}, 3.725261621115453*^9, 3.72526166634648*^9, {
   3.725271550289123*^9, 3.7252715504130163`*^9}, {3.725271609402791*^9, 
   3.7252716095188437`*^9}, {3.7252717762497*^9, 3.725271782362536*^9}, {
   3.725271824500347*^9, 3.725271826035269*^9}, {3.725271857701564*^9, 
   3.725271858192912*^9}, {3.725271928114049*^9, 3.7252719496618757`*^9}, {
   3.725271981807578*^9, 3.725271987122878*^9}, {3.725273718896678*^9, 
   3.72527377251343*^9}, {3.725273963159111*^9, 3.725273966198284*^9}, {
   3.725364382855975*^9, 3.725364384697238*^9}, {3.725364432753635*^9, 
   3.725364433681274*^9}, {3.725364595553596*^9, 3.725364595868292*^9}, {
   3.725364661141473*^9, 3.725364661301785*^9}, {3.725365068510941*^9, 
   3.7253650691073112`*^9}, {3.7256202924505177`*^9, 
   3.7256202938854313`*^9}, {3.7256265502253428`*^9, 3.725626559021003*^9}, {
   3.725798091627001*^9, 3.725798108963685*^9}, {3.725798150844287*^9, 
   3.725798156038417*^9}, {3.726312422974263*^9, 3.726312439922279*^9}, {
   3.726313778060986*^9, 3.726313794010726*^9}, {3.726313854887352*^9, 
   3.726313855417986*^9}, {3.726377533478507*^9, 3.726377535012369*^9}, {
   3.726379310729051*^9, 3.726379315935656*^9}, {3.726379351066524*^9, 
   3.7263793563685627`*^9}, 3.7263814533362722`*^9, {3.726468979312665*^9, 
   3.726469044993416*^9}, {3.726564279540083*^9, 3.726564288774165*^9}, {
   3.726564330005303*^9, 3.726564342424973*^9}, {3.7265645007454853`*^9, 
   3.7265645054085903`*^9}, 3.726565145221386*^9, {3.726836923420138*^9, 
   3.726836925204391*^9}, {3.7268417497448387`*^9, 3.726841749854889*^9}, {
   3.727357927216405*^9, 3.7273579306359463`*^9}, 3.72735811608375*^9, {
   3.7273582875862513`*^9, 3.727358296888235*^9}, {3.727520051444908*^9, 
   3.7275200665503483`*^9}, {3.727539483513708*^9, 3.72753949210455*^9}, {
   3.7275398377710333`*^9, 3.727539869000495*^9}, {3.7275879806550293`*^9, 
   3.727587984698921*^9}, {3.727606150288821*^9, 3.727606150994812*^9}, {
   3.728932814314426*^9, 3.728932860160056*^9}, 3.7289333254815903`*^9, 
   3.7299208725344887`*^9, {3.730007040539275*^9, 3.7300070509717903`*^9}, {
   3.730007357183831*^9, 3.7300073662633142`*^9}, {3.7331192829046183`*^9, 
   3.733119300197537*^9}, {3.733120717385792*^9, 3.733120717697629*^9}, {
   3.7331222711038847`*^9, 3.733122272703622*^9}, {3.733211538849382*^9, 
   3.7332115515038567`*^9}, {3.7332289443370447`*^9, 
   3.7332289447842827`*^9}, {3.742215948846467*^9, 3.742215959437643*^9}, {
   3.742216025305929*^9, 3.742216093257207*^9}, {3.7422172078868933`*^9, 
   3.7422172275906973`*^9}, 3.74221727383118*^9, {3.742217585069265*^9, 
   3.742217591716959*^9}, {3.7422176229823923`*^9, 3.742217653035615*^9}, {
   3.742269341112874*^9, 3.742269371527761*^9}, 3.742275694936644*^9, {
   3.742289467062118*^9, 3.742289486771803*^9}, {3.742289520463562*^9, 
   3.7422896027136*^9}, {3.7422896364561243`*^9, 3.74228964347093*^9}, {
   3.742289678232355*^9, 3.742289708137301*^9}, {3.7422897506101*^9, 
   3.7422897587096577`*^9}, {3.7422920316457787`*^9, 3.742292034487727*^9}, 
   3.742292186682322*^9, {3.742292303240778*^9, 3.742292303483521*^9}, {
   3.742292362481593*^9, 3.742292372544711*^9}, {3.742292408813004*^9, 
   3.742292447857381*^9}, {3.7422968206130743`*^9, 3.742296843480155*^9}, {
   3.7422970160890417`*^9, 3.742297024417719*^9}, {3.742297074890059*^9, 
   3.74229711910509*^9}, {3.7422973083294992`*^9, 3.742297309298213*^9}, {
   3.742297354168077*^9, 3.742297359897736*^9}, {3.742297415918168*^9, 
   3.7422974232482452`*^9}, {3.742297467739311*^9, 3.742297612963316*^9}, {
   3.7422977860232887`*^9, 3.7422977903561068`*^9}, {3.74229798181938*^9, 
   3.742298023677857*^9}, {3.7422980561712513`*^9, 3.74229805925661*^9}, 
   3.742298106308654*^9, {3.742300221204397*^9, 3.742300269720365*^9}, {
   3.742300416216001*^9, 3.742300416917211*^9}, {3.742300536315893*^9, 
   3.742300546756034*^9}, {3.742300626604027*^9, 3.742300638323701*^9}, {
   3.7423006769018583`*^9, 3.7423007163572683`*^9}, {3.7435037431402884`*^9, 
   3.743503799356997*^9}, {3.7435038425347443`*^9, 3.743503908279688*^9}, {
   3.7435046316079397`*^9, 3.743504651390107*^9}, 3.745326235801956*^9}],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"swaveccuspectra", "[", 
    RowBox[{"n_", ",", "Tscan_"}], "]"}], ":=", 
   RowBox[{"Block", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{"T", "=", 
        RowBox[{"Tscan", "[", 
         RowBox[{"[", "n", "]"}], "]"}]}], ",", 
       RowBox[{"mD", "=", 
        RowBox[{"mDcal", "[", 
         RowBox[{
          RowBox[{"2", "\[Pi]"}], ",", 
          RowBox[{"Tscan", "[", 
           RowBox[{"[", "n", "]"}], "]"}], ",", 
          RowBox[{"kfinalu", "[", 
           RowBox[{"[", "1", "]"}], "]"}], ",", 
          RowBox[{"kfinalu", "[", 
           RowBox[{"[", "2", "]"}], "]"}]}], "]"}]}], ",", 
       RowBox[{"\[Sigma]", "=", 
        RowBox[{"\[Sigma]cont", "[", 
         RowBox[{"[", "1", "]"}], "]"}]}], ",", 
       RowBox[{"\[Alpha]", "=", 
        RowBox[{"\[Alpha]cont", "[", 
         RowBox[{"[", "1", "]"}], "]"}]}], ",", 
       RowBox[{"c", "=", 
        RowBox[{"ccont", "[", 
         RowBox[{"[", "1", "]"}], "]"}]}], ",", 
       RowBox[{"M", "=", "Mc"}], ",", 
       RowBox[{"l", "=", "0"}], ",", 
       RowBox[{"\[Omega]min", "=", 
        RowBox[{"-", "1"}]}], ",", 
       RowBox[{"\[Omega]max", "=", "2"}], ",", "ccsT", ",", "Tstring", ",", 
       "inf"}], "}"}], ",", "\[IndentingNewLine]", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"rev", "=", 
       RowBox[{"Interpolation", "[", 
        RowBox[{"Join", "[", 
         RowBox[{
          RowBox[{"ParallelTable", "[", 
           RowBox[{
            RowBox[{"{", 
             RowBox[{"r", ",", 
              RowBox[{"ReVsb", "[", 
               RowBox[{
               "r", ",", "mD", ",", "\[Alpha]", ",", "\[Sigma]", ",", "c"}], 
               "]"}]}], "}"}], ",", 
            RowBox[{"{", 
             RowBox[{"r", ",", 
              RowBox[{"1", "/", "1000"}], ",", "10", ",", 
              RowBox[{"1", "/", "100"}]}], "}"}]}], "]"}], ",", 
          RowBox[{"ParallelTable", "[", 
           RowBox[{
            RowBox[{"{", 
             RowBox[{"r", ",", 
              RowBox[{"ReVsb", "[", 
               RowBox[{
               "r", ",", "mD", ",", "\[Alpha]", ",", "\[Sigma]", ",", "c"}], 
               "]"}]}], "}"}], ",", 
            RowBox[{"{", 
             RowBox[{"r", ",", 
              RowBox[{"101", "/", "10"}], ",", "25", ",", 
              RowBox[{"1", "/", "10"}]}], "}"}]}], "]"}], ",", 
          RowBox[{"ParallelTable", "[", 
           RowBox[{
            RowBox[{"{", 
             RowBox[{"r", ",", 
              RowBox[{"ReVsb", "[", 
               RowBox[{
               "r", ",", "mD", ",", "\[Alpha]", ",", "\[Sigma]", ",", "c"}], 
               "]"}]}], "}"}], ",", 
            RowBox[{"{", 
             RowBox[{"r", ",", "26", ",", "1500", ",", "1"}], "}"}]}], "]"}], 
          ",", 
          RowBox[{"ParallelTable", "[", 
           RowBox[{
            RowBox[{"{", 
             RowBox[{"r", ",", 
              RowBox[{"ReVsb", "[", 
               RowBox[{
               "r", ",", "mD", ",", "\[Alpha]", ",", "\[Sigma]", ",", "c"}], 
               "]"}]}], "}"}], ",", 
            RowBox[{"{", 
             RowBox[{"r", ",", "1510", ",", "20000", ",", "1000"}], "}"}]}], 
           "]"}]}], "]"}], "]"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"imv", "=", 
       RowBox[{"Interpolation", "[", 
        RowBox[{"Join", "[", 
         RowBox[{
          RowBox[{"ParallelTable", "[", 
           RowBox[{
            RowBox[{"{", 
             RowBox[{"r", ",", 
              RowBox[{"ImVsb", "[", 
               RowBox[{
               "r", ",", "mD", ",", "\[Alpha]", ",", "\[Sigma]", ",", "T"}], 
               "]"}]}], "}"}], ",", 
            RowBox[{"{", 
             RowBox[{"r", ",", 
              RowBox[{"1", "/", "1000"}], ",", "10", ",", 
              RowBox[{"1", "/", "100"}]}], "}"}]}], "]"}], ",", 
          RowBox[{"ParallelTable", "[", 
           RowBox[{
            RowBox[{"{", 
             RowBox[{"r", ",", 
              RowBox[{"ImVsb", "[", 
               RowBox[{
               "r", ",", "mD", ",", "\[Alpha]", ",", "\[Sigma]", ",", "T"}], 
               "]"}]}], "}"}], ",", 
            RowBox[{"{", 
             RowBox[{"r", ",", 
              RowBox[{"101", "/", "10"}], ",", "25", ",", 
              RowBox[{"1", "/", "10"}]}], "}"}]}], "]"}], ",", 
          RowBox[{"ParallelTable", "[", 
           RowBox[{
            RowBox[{"{", 
             RowBox[{"r", ",", 
              RowBox[{"ImVsb", "[", 
               RowBox[{
               "r", ",", "mD", ",", "\[Alpha]", ",", "\[Sigma]", ",", "T"}], 
               "]"}]}], "}"}], ",", 
            RowBox[{"{", 
             RowBox[{"r", ",", "26", ",", "1500", ",", "1"}], "}"}]}], "]"}], 
          ",", 
          RowBox[{"ParallelTable", "[", 
           RowBox[{
            RowBox[{"{", 
             RowBox[{"r", ",", 
              RowBox[{"ImVsb", "[", 
               RowBox[{
               "r", ",", "mD", ",", "\[Alpha]", ",", "\[Sigma]", ",", "T"}], 
               "]"}]}], "}"}], ",", 
            RowBox[{"{", 
             RowBox[{"r", ",", "1510", ",", "20000", ",", "1000"}], "}"}]}], 
           "]"}]}], "]"}], "]"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"V", "[", "x_", "]"}], ":=", 
       RowBox[{
        RowBox[{"rev", "[", "x", "]"}], "+", 
        RowBox[{"\[ImaginaryI]", " ", 
         RowBox[{"imv", "[", "x", "]"}]}]}]}], ";", "\[IndentingNewLine]", 
      "\[IndentingNewLine]", 
      RowBox[{"\[Rho]table", "=", 
       RowBox[{
        RowBox[{
         RowBox[{
          RowBox[{"ParallelDo", "[", 
           RowBox[{
            RowBox[{
             RowBox[{"\[Omega]", "=", 
              RowBox[{"\[Omega]min", "+", 
               RowBox[{
                RowBox[{"(", 
                 RowBox[{"it", "-", "1"}], ")"}], " ", "d\[Omega]", " ", 
                "M"}]}]}], ";", 
             RowBox[{"inf", "=", 
              RowBox[{"40", "+", 
               RowBox[{"500", "*", "it", "*", "d\[Omega]"}]}]}], ";", 
             "\[IndentingNewLine]", 
             RowBox[{"(*", 
              RowBox[{
               RowBox[{"s0", "=", 
                RowBox[{"NDSolve", "[", 
                 RowBox[{
                  RowBox[{"{", 
                   RowBox[{
                    RowBox[{
                    RowBox[{
                    RowBox[{
                    RowBox[{"(", 
                    RowBox[{"\[Omega]", "-", 
                    FractionBox[
                    RowBox[{"l", 
                    RowBox[{"(", 
                    RowBox[{"l", "+", "1"}], ")"}]}], 
                    RowBox[{"M", " ", 
                    SuperscriptBox["r", "2"]}]], "-", 
                    RowBox[{"Re", "[", 
                    RowBox[{"V", "[", "r", "]"}], "]"}], "+", 
                    RowBox[{"\[ImaginaryI]", " ", 
                    RowBox[{"Abs", "[", 
                    RowBox[{"Im", "[", 
                    RowBox[{"V", "[", "r", "]"}], "]"}], "]"}]}]}], ")"}], 
                    RowBox[{"gr", "[", "r", "]"}]}], "+", 
                    RowBox[{
                    FractionBox["1", "M"], 
                    RowBox[{
                    RowBox[{"gr", "''"}], "[", "r", "]"}]}]}], "\[Equal]", 
                    "0"}], ",", " ", "\[IndentingNewLine]", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"gr", "'"}], "[", "\[Delta]", "]"}], "\[Equal]", 
                    RowBox[{
                    RowBox[{"2", " ", "\[Delta]", 
                    SuperscriptBox[
                    RowBox[{"(", 
                    RowBox[{"\[Alpha]", " ", "M"}], ")"}], "2"]}], "-", 
                    RowBox[{
                    FractionBox["3", "4"], 
                    SuperscriptBox["\[Delta]", "2"], 
                    SuperscriptBox[
                    RowBox[{"(", 
                    RowBox[{"M", " ", "\[Alpha]"}], ")"}], "3"]}]}]}], ",", 
                    "\[IndentingNewLine]", " ", 
                    RowBox[{
                    RowBox[{"gr", "[", "\[Delta]", "]"}], "==", " ", 
                    RowBox[{
                    RowBox[{
                    SuperscriptBox["\[Delta]", "2"], 
                    SuperscriptBox[
                    RowBox[{"(", 
                    RowBox[{"\[Alpha]", " ", "M"}], ")"}], "2"]}], "-", 
                    RowBox[{
                    FractionBox["1", "4"], 
                    SuperscriptBox["\[Delta]", "3"], 
                    SuperscriptBox[
                    RowBox[{"(", 
                    RowBox[{"M", " ", "\[Alpha]"}], ")"}], "3"]}]}]}]}], 
                   "}"}], ",", "gr", ",", 
                  RowBox[{"{", 
                   RowBox[{"r", ",", "\[Delta]", ",", "inf"}], "}"}], ",", 
                  RowBox[{"PrecisionGoal", "\[Rule]", "10"}], ",", 
                  RowBox[{"MaxSteps", "\[Rule]", "1000000"}]}], "]"}]}], ";", 
               "\[IndentingNewLine]", 
               RowBox[{
                RowBox[{"gr1", "[", "r_", "]"}], "=", 
                SubscriptBox[
                 RowBox[{"(", 
                  RowBox[{
                   RowBox[{"gr", "[", "r", "]"}], "/.", "s0"}], ")"}], 
                 RowBox[{
                 "\[LeftDoubleBracket]", "1", "\[RightDoubleBracket]"}]]}], 
               ";"}], "*)"}], "\[IndentingNewLine]", 
             RowBox[{"s01", "=", 
              RowBox[{"NDSolve", "[", 
               RowBox[{
                RowBox[{"{", 
                 RowBox[{
                  RowBox[{
                   RowBox[{
                    RowBox[{
                    RowBox[{"(", 
                    RowBox[{"\[Omega]", "-", 
                    FractionBox[
                    RowBox[{"l", 
                    RowBox[{"(", 
                    RowBox[{"l", "+", "1"}], ")"}]}], 
                    RowBox[{"M", " ", 
                    SuperscriptBox["r", "2"]}]], "-", 
                    RowBox[{"Re", "[", 
                    RowBox[{"V", "[", "r", "]"}], "]"}], "+", 
                    RowBox[{"\[ImaginaryI]", " ", 
                    RowBox[{"Abs", "[", 
                    RowBox[{"Im", "[", 
                    RowBox[{"V", "[", "r", "]"}], "]"}], "]"}]}]}], ")"}], 
                    RowBox[{"gr", "[", "r", "]"}]}], "+", 
                    RowBox[{
                    FractionBox["1", "M"], 
                    RowBox[{
                    RowBox[{"gr", "''"}], "[", "r", "]"}]}]}], "\[Equal]", 
                   "0"}], ",", " ", "\[IndentingNewLine]", 
                  RowBox[{
                   RowBox[{
                    RowBox[{"gr", "'"}], "[", "\[Delta]", "]"}], "\[Equal]", 
                   RowBox[{
                    RowBox[{"(", 
                    RowBox[{"\[Alpha]", " ", "M"}], ")"}], "-", 
                    RowBox[{"\[Delta]", 
                    SuperscriptBox[
                    RowBox[{"(", 
                    RowBox[{"M", " ", "\[Alpha]"}], ")"}], "2"]}]}]}], ",", 
                  "\[IndentingNewLine]", " ", 
                  RowBox[{
                   RowBox[{"gr", "[", "\[Delta]", "]"}], "\[Equal]", 
                   RowBox[{
                    RowBox[{"\[Delta]", 
                    RowBox[{"(", 
                    RowBox[{"\[Alpha]", " ", "M"}], ")"}]}], "-", " ", 
                    RowBox[{
                    FractionBox["1", "2"], 
                    SuperscriptBox["\[Delta]", "2"], 
                    SuperscriptBox[
                    RowBox[{"(", 
                    RowBox[{"\[Alpha]", " ", "M"}], ")"}], "2"]}]}]}]}], 
                 "}"}], ",", "gr", ",", 
                RowBox[{"{", 
                 RowBox[{"r", ",", "\[Delta]", ",", "inf"}], "}"}]}], "]"}]}],
              ";", "\[IndentingNewLine]", 
             RowBox[{
              RowBox[{"gr0", "[", "r_", "]"}], "=", 
              SubscriptBox[
               RowBox[{"(", 
                RowBox[{
                 RowBox[{"gr", "[", "r", "]"}], "/.", "s01"}], ")"}], 
               RowBox[{
               "\[LeftDoubleBracket]", "1", "\[RightDoubleBracket]"}]]}], ";",
              "\[IndentingNewLine]", 
             RowBox[{"s1", "=", 
              RowBox[{"NDSolve", "[", 
               RowBox[{
                RowBox[{"{", 
                 RowBox[{
                  RowBox[{
                   RowBox[{
                    RowBox[{"rho", "'"}], "[", "x", "]"}], "\[Equal]", 
                   RowBox[{
                    RowBox[{"-", 
                    FractionBox[
                    RowBox[{" ", 
                    RowBox[{"6", " ", "Nc", " ", 
                    SuperscriptBox["M", "2"], " ", "\[Alpha]"}]}], 
                    RowBox[{"4", "\[Pi]"}]]}], 
                    RowBox[{"Im", "[", 
                    FractionBox["1", 
                    SuperscriptBox[
                    RowBox[{"(", 
                    RowBox[{"gr0", "[", "x", "]"}], ")"}], "2"]], 
                    RowBox[{"(*", 
                    RowBox[{"+", 
                    FractionBox["36", 
                    SuperscriptBox[
                    RowBox[{"(", 
                    RowBox[{"gr1", "[", "x", "]"}], ")"}], "2"]]}], "*)"}], 
                    "]"}]}]}], ",", 
                  RowBox[{
                   RowBox[{"rho", "[", "\[Delta]", "]"}], "\[Equal]", "0"}]}],
                  "}"}], ",", "rho", ",", 
                RowBox[{"{", 
                 RowBox[{"x", ",", "\[Delta]", ",", "inf"}], "}"}]}], "]"}]}],
              ";", "\[IndentingNewLine]", 
             RowBox[{
              RowBox[{"rhow", "[", "r_", "]"}], "=", 
              SubscriptBox[
               RowBox[{"(", 
                RowBox[{
                 RowBox[{"rho", "[", "r", "]"}], "/.", "s1"}], ")"}], 
               RowBox[{
               "\[LeftDoubleBracket]", "1", "\[RightDoubleBracket]"}]]}], ";",
              "\[IndentingNewLine]", 
             RowBox[{"ParallelSow", "[", 
              RowBox[{"{", 
               RowBox[{
                RowBox[{"\[Omega]", "+", 
                 RowBox[{"2", "M"}]}], ",", 
                RowBox[{"rhow", "[", "inf", "]"}]}], "}"}], "]"}]}], ",", 
            RowBox[{"{", 
             RowBox[{"it", ",", "1", ",", 
              FractionBox[
               RowBox[{"\[Omega]max", "-", "\[Omega]min"}], 
               RowBox[{"d\[Omega]", " ", "M"}]]}], "}"}]}], "]"}], "//", 
          "Reap"}], "//", "Last"}], "//", "First"}]}], ";", 
      "\[IndentingNewLine]", "\[IndentingNewLine]", 
      RowBox[{"ccsT", "=", 
       RowBox[{"ParallelTable", "[", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{
           RowBox[{"\[Rho]table", "[", 
            RowBox[{"[", 
             RowBox[{"i", ",", "1"}], "]"}], "]"}], ",", 
           FractionBox[
            RowBox[{"-", 
             RowBox[{"\[Rho]table", "[", 
              RowBox[{"[", 
               RowBox[{"i", ",", "2"}], "]"}], "]"}]}], 
            SuperscriptBox[
             RowBox[{"\[Rho]table", "[", 
              RowBox[{"[", 
               RowBox[{"i", ",", "1"}], "]"}], "]"}], "2"]]}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"i", ",", "1", ",", 
           RowBox[{"Length", "[", "\[Rho]table", "]"}]}], "}"}]}], "]"}]}], 
      ";", "\[IndentingNewLine]", 
      RowBox[{"Tstring", "=", 
       RowBox[{"Round", "[", 
        RowBox[{"T", "*", "1000"}], "]"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"Export", "[", 
       RowBox[{
        RowBox[{"\"\<spectraldata/Tscan/cc/swccT\>\"", "<>", 
         RowBox[{"ToString", "[", "Tstring", "]"}], "<>", 
         "\"\<uspectra.dat\>\""}], ",", 
        RowBox[{"Sort", "[", "ccsT", "]"}]}], "]"}], ";"}]}], 
    "\[IndentingNewLine]", "]"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.724397604460712*^9, 3.724397621092863*^9}, {
   3.724398705481254*^9, 3.724398705798315*^9}, {3.72440624506767*^9, 
   3.7244062457361317`*^9}, {3.7244423136168756`*^9, 3.724442340980721*^9}, {
   3.7244423712224417`*^9, 3.724442377050403*^9}, {3.724442465925974*^9, 
   3.724442518695669*^9}, {3.7244426255599117`*^9, 3.724442639076613*^9}, {
   3.724443729204352*^9, 3.724443729749022*^9}, {3.724443881656342*^9, 
   3.7244438842850027`*^9}, 3.725261621115453*^9, 3.72526166634648*^9, {
   3.725271550289123*^9, 3.7252715504130163`*^9}, {3.725271609402791*^9, 
   3.7252716095188437`*^9}, {3.7252717762497*^9, 3.725271782362536*^9}, {
   3.725271824500347*^9, 3.725271826035269*^9}, {3.725271857701564*^9, 
   3.725271858192912*^9}, {3.725271928114049*^9, 3.7252719496618757`*^9}, {
   3.725271981807578*^9, 3.725271987122878*^9}, {3.725273718896678*^9, 
   3.72527377251343*^9}, {3.725273963159111*^9, 3.725273966198284*^9}, {
   3.725364382855975*^9, 3.725364384697238*^9}, {3.725364432753635*^9, 
   3.725364433681274*^9}, {3.725364595553596*^9, 3.725364595868292*^9}, {
   3.725364661141473*^9, 3.725364661301785*^9}, {3.725365068510941*^9, 
   3.7253650691073112`*^9}, {3.7256202924505177`*^9, 
   3.7256202938854313`*^9}, {3.7256265502253428`*^9, 3.725626559021003*^9}, {
   3.725798091627001*^9, 3.725798108963685*^9}, {3.725798150844287*^9, 
   3.725798156038417*^9}, {3.726312422974263*^9, 3.726312439922279*^9}, {
   3.726313778060986*^9, 3.726313794010726*^9}, {3.726313854887352*^9, 
   3.726313855417986*^9}, {3.726377533478507*^9, 3.726377535012369*^9}, {
   3.726379310729051*^9, 3.726379315935656*^9}, {3.726379351066524*^9, 
   3.7263793563685627`*^9}, 3.7263814533362722`*^9, {3.726468979312665*^9, 
   3.726469044993416*^9}, {3.726564279540083*^9, 3.726564288774165*^9}, {
   3.726564330005303*^9, 3.726564342424973*^9}, {3.7265645007454853`*^9, 
   3.7265645054085903`*^9}, 3.726565145221386*^9, {3.726836923420138*^9, 
   3.726836925204391*^9}, {3.7268417497448387`*^9, 3.726841749854889*^9}, {
   3.727357927216405*^9, 3.7273579306359463`*^9}, 3.72735811608375*^9, {
   3.7273582875862513`*^9, 3.727358296888235*^9}, {3.727520051444908*^9, 
   3.7275200665503483`*^9}, {3.727539483513708*^9, 3.72753949210455*^9}, {
   3.7275398377710333`*^9, 3.727539869000495*^9}, {3.7275879806550293`*^9, 
   3.727587984698921*^9}, {3.727606150288821*^9, 3.727606150994812*^9}, {
   3.728932814314426*^9, 3.728932860160056*^9}, 3.7289333254815903`*^9, 
   3.7299208725344887`*^9, {3.730007040539275*^9, 3.7300070509717903`*^9}, {
   3.730007357183831*^9, 3.7300073662633142`*^9}, {3.7331192829046183`*^9, 
   3.733119300197537*^9}, {3.733120717385792*^9, 3.733120717697629*^9}, {
   3.7331222711038847`*^9, 3.733122272703622*^9}, {3.733211538849382*^9, 
   3.7332115515038567`*^9}, {3.7332289443370447`*^9, 
   3.7332289447842827`*^9}, {3.742215948846467*^9, 3.742215959437643*^9}, {
   3.742216025305929*^9, 3.742216093257207*^9}, {3.7422172078868933`*^9, 
   3.7422172275906973`*^9}, 3.74221727383118*^9, {3.742217585069265*^9, 
   3.742217591716959*^9}, {3.7422176229823923`*^9, 3.742217653035615*^9}, {
   3.742269341112874*^9, 3.742269371527761*^9}, 3.742275694936644*^9, {
   3.742289467062118*^9, 3.742289486771803*^9}, {3.742289520463562*^9, 
   3.7422896027136*^9}, {3.7422896364561243`*^9, 3.74228964347093*^9}, {
   3.742289678232355*^9, 3.742289708137301*^9}, {3.7422897506101*^9, 
   3.7422897587096577`*^9}, {3.7422920316457787`*^9, 3.742292034487727*^9}, 
   3.742292186682322*^9, {3.742292303240778*^9, 3.742292303483521*^9}, {
   3.742292362481593*^9, 3.742292372544711*^9}, {3.742292408813004*^9, 
   3.742292447857381*^9}, {3.7422968206130743`*^9, 3.742296843480155*^9}, {
   3.7422970160890417`*^9, 3.742297024417719*^9}, {3.742297074890059*^9, 
   3.74229711910509*^9}, {3.7422973083294992`*^9, 3.742297309298213*^9}, {
   3.742297354168077*^9, 3.742297359897736*^9}, {3.742297415918168*^9, 
   3.7422974232482452`*^9}, {3.742297467739311*^9, 3.742297612963316*^9}, {
   3.7422977860232887`*^9, 3.7422977903561068`*^9}, {3.74229798181938*^9, 
   3.742298023677857*^9}, {3.7422980561712513`*^9, 3.74229805925661*^9}, 
   3.742298106308654*^9, {3.742300221204397*^9, 3.742300269720365*^9}, {
   3.742300416216001*^9, 3.742300416917211*^9}, {3.742300536315893*^9, 
   3.742300546756034*^9}, {3.742300626604027*^9, 3.742300638323701*^9}, {
   3.7423006769018583`*^9, 3.7423007163572683`*^9}, {3.7435037431402884`*^9, 
   3.743503799356997*^9}, {3.7435038425347443`*^9, 3.743503908279688*^9}, {
   3.7435046316079397`*^9, 3.743504651390107*^9}, {3.743506123736985*^9, 
   3.743506149660468*^9}, 3.745326235841404*^9}],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"swavecclspectra", "[", 
    RowBox[{"n_", ",", "Tscan_"}], "]"}], ":=", 
   RowBox[{"Block", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{"T", "=", 
        RowBox[{"Tscan", "[", 
         RowBox[{"[", "n", "]"}], "]"}]}], ",", 
       RowBox[{"mD", "=", 
        RowBox[{"mDcal", "[", 
         RowBox[{
          RowBox[{"2", "\[Pi]"}], ",", 
          RowBox[{"Tscan", "[", 
           RowBox[{"[", "n", "]"}], "]"}], ",", 
          RowBox[{"kfinall", "[", 
           RowBox[{"[", "1", "]"}], "]"}], ",", 
          RowBox[{"kfinall", "[", 
           RowBox[{"[", "2", "]"}], "]"}]}], "]"}]}], ",", 
       RowBox[{"\[Sigma]", "=", 
        RowBox[{"\[Sigma]cont", "[", 
         RowBox[{"[", "1", "]"}], "]"}]}], ",", 
       RowBox[{"\[Alpha]", "=", 
        RowBox[{"\[Alpha]cont", "[", 
         RowBox[{"[", "1", "]"}], "]"}]}], ",", 
       RowBox[{"c", "=", 
        RowBox[{"ccont", "[", 
         RowBox[{"[", "1", "]"}], "]"}]}], ",", 
       RowBox[{"M", "=", "Mc"}], ",", 
       RowBox[{"l", "=", "0"}], ",", 
       RowBox[{"\[Omega]min", "=", 
        RowBox[{"-", "1"}]}], ",", 
       RowBox[{"\[Omega]max", "=", "2"}], ",", "ccsT", ",", "Tstring", ",", 
       "inf"}], "}"}], ",", "\[IndentingNewLine]", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"rev", "=", 
       RowBox[{"Interpolation", "[", 
        RowBox[{"Join", "[", 
         RowBox[{
          RowBox[{"ParallelTable", "[", 
           RowBox[{
            RowBox[{"{", 
             RowBox[{"r", ",", 
              RowBox[{"ReVsb", "[", 
               RowBox[{
               "r", ",", "mD", ",", "\[Alpha]", ",", "\[Sigma]", ",", "c"}], 
               "]"}]}], "}"}], ",", 
            RowBox[{"{", 
             RowBox[{"r", ",", 
              RowBox[{"1", "/", "1000"}], ",", "10", ",", 
              RowBox[{"1", "/", "100"}]}], "}"}]}], "]"}], ",", 
          RowBox[{"ParallelTable", "[", 
           RowBox[{
            RowBox[{"{", 
             RowBox[{"r", ",", 
              RowBox[{"ReVsb", "[", 
               RowBox[{
               "r", ",", "mD", ",", "\[Alpha]", ",", "\[Sigma]", ",", "c"}], 
               "]"}]}], "}"}], ",", 
            RowBox[{"{", 
             RowBox[{"r", ",", 
              RowBox[{"101", "/", "10"}], ",", "25", ",", 
              RowBox[{"1", "/", "10"}]}], "}"}]}], "]"}], ",", 
          RowBox[{"ParallelTable", "[", 
           RowBox[{
            RowBox[{"{", 
             RowBox[{"r", ",", 
              RowBox[{"ReVsb", "[", 
               RowBox[{
               "r", ",", "mD", ",", "\[Alpha]", ",", "\[Sigma]", ",", "c"}], 
               "]"}]}], "}"}], ",", 
            RowBox[{"{", 
             RowBox[{"r", ",", "26", ",", "1500", ",", "1"}], "}"}]}], "]"}], 
          ",", 
          RowBox[{"ParallelTable", "[", 
           RowBox[{
            RowBox[{"{", 
             RowBox[{"r", ",", 
              RowBox[{"ReVsb", "[", 
               RowBox[{
               "r", ",", "mD", ",", "\[Alpha]", ",", "\[Sigma]", ",", "c"}], 
               "]"}]}], "}"}], ",", 
            RowBox[{"{", 
             RowBox[{"r", ",", "1510", ",", "20000", ",", "1000"}], "}"}]}], 
           "]"}]}], "]"}], "]"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"imv", "=", 
       RowBox[{"Interpolation", "[", 
        RowBox[{"Join", "[", 
         RowBox[{
          RowBox[{"ParallelTable", "[", 
           RowBox[{
            RowBox[{"{", 
             RowBox[{"r", ",", 
              RowBox[{"ImVsb", "[", 
               RowBox[{
               "r", ",", "mD", ",", "\[Alpha]", ",", "\[Sigma]", ",", "T"}], 
               "]"}]}], "}"}], ",", 
            RowBox[{"{", 
             RowBox[{"r", ",", 
              RowBox[{"1", "/", "1000"}], ",", "10", ",", 
              RowBox[{"1", "/", "100"}]}], "}"}]}], "]"}], ",", 
          RowBox[{"ParallelTable", "[", 
           RowBox[{
            RowBox[{"{", 
             RowBox[{"r", ",", 
              RowBox[{"ImVsb", "[", 
               RowBox[{
               "r", ",", "mD", ",", "\[Alpha]", ",", "\[Sigma]", ",", "T"}], 
               "]"}]}], "}"}], ",", 
            RowBox[{"{", 
             RowBox[{"r", ",", 
              RowBox[{"101", "/", "10"}], ",", "25", ",", 
              RowBox[{"1", "/", "10"}]}], "}"}]}], "]"}], ",", 
          RowBox[{"ParallelTable", "[", 
           RowBox[{
            RowBox[{"{", 
             RowBox[{"r", ",", 
              RowBox[{"ImVsb", "[", 
               RowBox[{
               "r", ",", "mD", ",", "\[Alpha]", ",", "\[Sigma]", ",", "T"}], 
               "]"}]}], "}"}], ",", 
            RowBox[{"{", 
             RowBox[{"r", ",", "26", ",", "1500", ",", "1"}], "}"}]}], "]"}], 
          ",", 
          RowBox[{"ParallelTable", "[", 
           RowBox[{
            RowBox[{"{", 
             RowBox[{"r", ",", 
              RowBox[{"ImVsb", "[", 
               RowBox[{
               "r", ",", "mD", ",", "\[Alpha]", ",", "\[Sigma]", ",", "T"}], 
               "]"}]}], "}"}], ",", 
            RowBox[{"{", 
             RowBox[{"r", ",", "1510", ",", "20000", ",", "1000"}], "}"}]}], 
           "]"}]}], "]"}], "]"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"V", "[", "x_", "]"}], ":=", 
       RowBox[{
        RowBox[{"rev", "[", "x", "]"}], "+", 
        RowBox[{"\[ImaginaryI]", " ", 
         RowBox[{"imv", "[", "x", "]"}]}]}]}], ";", "\[IndentingNewLine]", 
      "\[IndentingNewLine]", 
      RowBox[{"\[Rho]table", "=", 
       RowBox[{
        RowBox[{
         RowBox[{
          RowBox[{"ParallelDo", "[", 
           RowBox[{
            RowBox[{
             RowBox[{"\[Omega]", "=", 
              RowBox[{"\[Omega]min", "+", 
               RowBox[{
                RowBox[{"(", 
                 RowBox[{"it", "-", "1"}], ")"}], " ", "d\[Omega]", " ", 
                "M"}]}]}], ";", 
             RowBox[{"inf", "=", 
              RowBox[{"40", "+", 
               RowBox[{"500", "*", "it", "*", "d\[Omega]"}]}]}], ";", 
             "\[IndentingNewLine]", 
             RowBox[{"(*", 
              RowBox[{
               RowBox[{"s0", "=", 
                RowBox[{"NDSolve", "[", 
                 RowBox[{
                  RowBox[{"{", 
                   RowBox[{
                    RowBox[{
                    RowBox[{
                    RowBox[{
                    RowBox[{"(", 
                    RowBox[{"\[Omega]", "-", 
                    FractionBox[
                    RowBox[{"l", 
                    RowBox[{"(", 
                    RowBox[{"l", "+", "1"}], ")"}]}], 
                    RowBox[{"M", " ", 
                    SuperscriptBox["r", "2"]}]], "-", 
                    RowBox[{"Re", "[", 
                    RowBox[{"V", "[", "r", "]"}], "]"}], "+", 
                    RowBox[{"\[ImaginaryI]", " ", 
                    RowBox[{"Abs", "[", 
                    RowBox[{"Im", "[", 
                    RowBox[{"V", "[", "r", "]"}], "]"}], "]"}]}]}], ")"}], 
                    RowBox[{"gr", "[", "r", "]"}]}], "+", 
                    RowBox[{
                    FractionBox["1", "M"], 
                    RowBox[{
                    RowBox[{"gr", "''"}], "[", "r", "]"}]}]}], "\[Equal]", 
                    "0"}], ",", " ", "\[IndentingNewLine]", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"gr", "'"}], "[", "\[Delta]", "]"}], "\[Equal]", 
                    RowBox[{
                    RowBox[{"2", " ", "\[Delta]", 
                    SuperscriptBox[
                    RowBox[{"(", 
                    RowBox[{"\[Alpha]", " ", "M"}], ")"}], "2"]}], "-", 
                    RowBox[{
                    FractionBox["3", "4"], 
                    SuperscriptBox["\[Delta]", "2"], 
                    SuperscriptBox[
                    RowBox[{"(", 
                    RowBox[{"M", " ", "\[Alpha]"}], ")"}], "3"]}]}]}], ",", 
                    "\[IndentingNewLine]", " ", 
                    RowBox[{
                    RowBox[{"gr", "[", "\[Delta]", "]"}], "==", " ", 
                    RowBox[{
                    RowBox[{
                    SuperscriptBox["\[Delta]", "2"], 
                    SuperscriptBox[
                    RowBox[{"(", 
                    RowBox[{"\[Alpha]", " ", "M"}], ")"}], "2"]}], "-", 
                    RowBox[{
                    FractionBox["1", "4"], 
                    SuperscriptBox["\[Delta]", "3"], 
                    SuperscriptBox[
                    RowBox[{"(", 
                    RowBox[{"M", " ", "\[Alpha]"}], ")"}], "3"]}]}]}]}], 
                   "}"}], ",", "gr", ",", 
                  RowBox[{"{", 
                   RowBox[{"r", ",", "\[Delta]", ",", "inf"}], "}"}], ",", 
                  RowBox[{"PrecisionGoal", "\[Rule]", "10"}], ",", 
                  RowBox[{"MaxSteps", "\[Rule]", "1000000"}]}], "]"}]}], ";", 
               "\[IndentingNewLine]", 
               RowBox[{
                RowBox[{"gr1", "[", "r_", "]"}], "=", 
                SubscriptBox[
                 RowBox[{"(", 
                  RowBox[{
                   RowBox[{"gr", "[", "r", "]"}], "/.", "s0"}], ")"}], 
                 RowBox[{
                 "\[LeftDoubleBracket]", "1", "\[RightDoubleBracket]"}]]}], 
               ";"}], "*)"}], "\[IndentingNewLine]", 
             RowBox[{"s01", "=", 
              RowBox[{"NDSolve", "[", 
               RowBox[{
                RowBox[{"{", 
                 RowBox[{
                  RowBox[{
                   RowBox[{
                    RowBox[{
                    RowBox[{"(", 
                    RowBox[{"\[Omega]", "-", 
                    FractionBox[
                    RowBox[{"l", 
                    RowBox[{"(", 
                    RowBox[{"l", "+", "1"}], ")"}]}], 
                    RowBox[{"M", " ", 
                    SuperscriptBox["r", "2"]}]], "-", 
                    RowBox[{"Re", "[", 
                    RowBox[{"V", "[", "r", "]"}], "]"}], "+", 
                    RowBox[{"\[ImaginaryI]", " ", 
                    RowBox[{"Abs", "[", 
                    RowBox[{"Im", "[", 
                    RowBox[{"V", "[", "r", "]"}], "]"}], "]"}]}]}], ")"}], 
                    RowBox[{"gr", "[", "r", "]"}]}], "+", 
                    RowBox[{
                    FractionBox["1", "M"], 
                    RowBox[{
                    RowBox[{"gr", "''"}], "[", "r", "]"}]}]}], "\[Equal]", 
                   "0"}], ",", " ", "\[IndentingNewLine]", 
                  RowBox[{
                   RowBox[{
                    RowBox[{"gr", "'"}], "[", "\[Delta]", "]"}], "\[Equal]", 
                   RowBox[{
                    RowBox[{"(", 
                    RowBox[{"\[Alpha]", " ", "M"}], ")"}], "-", 
                    RowBox[{"\[Delta]", 
                    SuperscriptBox[
                    RowBox[{"(", 
                    RowBox[{"M", " ", "\[Alpha]"}], ")"}], "2"]}]}]}], ",", 
                  "\[IndentingNewLine]", " ", 
                  RowBox[{
                   RowBox[{"gr", "[", "\[Delta]", "]"}], "\[Equal]", 
                   RowBox[{
                    RowBox[{"\[Delta]", 
                    RowBox[{"(", 
                    RowBox[{"\[Alpha]", " ", "M"}], ")"}]}], "-", " ", 
                    RowBox[{
                    FractionBox["1", "2"], 
                    SuperscriptBox["\[Delta]", "2"], 
                    SuperscriptBox[
                    RowBox[{"(", 
                    RowBox[{"\[Alpha]", " ", "M"}], ")"}], "2"]}]}]}]}], 
                 "}"}], ",", "gr", ",", 
                RowBox[{"{", 
                 RowBox[{"r", ",", "\[Delta]", ",", "inf"}], "}"}]}], "]"}]}],
              ";", "\[IndentingNewLine]", 
             RowBox[{
              RowBox[{"gr0", "[", "r_", "]"}], "=", 
              SubscriptBox[
               RowBox[{"(", 
                RowBox[{
                 RowBox[{"gr", "[", "r", "]"}], "/.", "s01"}], ")"}], 
               RowBox[{
               "\[LeftDoubleBracket]", "1", "\[RightDoubleBracket]"}]]}], ";",
              "\[IndentingNewLine]", 
             RowBox[{"s1", "=", 
              RowBox[{"NDSolve", "[", 
               RowBox[{
                RowBox[{"{", 
                 RowBox[{
                  RowBox[{
                   RowBox[{
                    RowBox[{"rho", "'"}], "[", "x", "]"}], "\[Equal]", 
                   RowBox[{
                    RowBox[{"-", 
                    FractionBox[
                    RowBox[{" ", 
                    RowBox[{"6", " ", "Nc", " ", 
                    SuperscriptBox["M", "2"], " ", "\[Alpha]"}]}], 
                    RowBox[{"4", "\[Pi]"}]]}], 
                    RowBox[{"Im", "[", 
                    FractionBox["1", 
                    SuperscriptBox[
                    RowBox[{"(", 
                    RowBox[{"gr0", "[", "x", "]"}], ")"}], "2"]], 
                    RowBox[{"(*", 
                    RowBox[{"+", 
                    FractionBox["36", 
                    SuperscriptBox[
                    RowBox[{"(", 
                    RowBox[{"gr1", "[", "x", "]"}], ")"}], "2"]]}], "*)"}], 
                    "]"}]}]}], ",", 
                  RowBox[{
                   RowBox[{"rho", "[", "\[Delta]", "]"}], "\[Equal]", "0"}]}],
                  "}"}], ",", "rho", ",", 
                RowBox[{"{", 
                 RowBox[{"x", ",", "\[Delta]", ",", "inf"}], "}"}]}], "]"}]}],
              ";", "\[IndentingNewLine]", 
             RowBox[{
              RowBox[{"rhow", "[", "r_", "]"}], "=", 
              SubscriptBox[
               RowBox[{"(", 
                RowBox[{
                 RowBox[{"rho", "[", "r", "]"}], "/.", "s1"}], ")"}], 
               RowBox[{
               "\[LeftDoubleBracket]", "1", "\[RightDoubleBracket]"}]]}], ";",
              "\[IndentingNewLine]", 
             RowBox[{"ParallelSow", "[", 
              RowBox[{"{", 
               RowBox[{
                RowBox[{"\[Omega]", "+", 
                 RowBox[{"2", "M"}]}], ",", 
                RowBox[{"rhow", "[", "inf", "]"}]}], "}"}], "]"}]}], ",", 
            RowBox[{"{", 
             RowBox[{"it", ",", "1", ",", 
              FractionBox[
               RowBox[{"\[Omega]max", "-", "\[Omega]min"}], 
               RowBox[{"d\[Omega]", " ", "M"}]]}], "}"}]}], "]"}], "//", 
          "Reap"}], "//", "Last"}], "//", "First"}]}], ";", 
      "\[IndentingNewLine]", "\[IndentingNewLine]", 
      RowBox[{"ccsT", "=", 
       RowBox[{"ParallelTable", "[", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{
           RowBox[{"\[Rho]table", "[", 
            RowBox[{"[", 
             RowBox[{"i", ",", "1"}], "]"}], "]"}], ",", 
           FractionBox[
            RowBox[{"-", 
             RowBox[{"\[Rho]table", "[", 
              RowBox[{"[", 
               RowBox[{"i", ",", "2"}], "]"}], "]"}]}], 
            SuperscriptBox[
             RowBox[{"\[Rho]table", "[", 
              RowBox[{"[", 
               RowBox[{"i", ",", "1"}], "]"}], "]"}], "2"]]}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"i", ",", "1", ",", 
           RowBox[{"Length", "[", "\[Rho]table", "]"}]}], "}"}]}], "]"}]}], 
      ";", "\[IndentingNewLine]", 
      RowBox[{"Tstring", "=", 
       RowBox[{"Round", "[", 
        RowBox[{"T", "*", "1000"}], "]"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"Export", "[", 
       RowBox[{
        RowBox[{"\"\<spectraldata/Tscan/cc/swccT\>\"", "<>", 
         RowBox[{"ToString", "[", "Tstring", "]"}], "<>", 
         "\"\<lspectra.dat\>\""}], ",", 
        RowBox[{"Sort", "[", "ccsT", "]"}]}], "]"}], ";"}]}], 
    "\[IndentingNewLine]", "]"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.724397604460712*^9, 3.724397621092863*^9}, {
   3.724398705481254*^9, 3.724398705798315*^9}, {3.72440624506767*^9, 
   3.7244062457361317`*^9}, {3.7244423136168756`*^9, 3.724442340980721*^9}, {
   3.7244423712224417`*^9, 3.724442377050403*^9}, {3.724442465925974*^9, 
   3.724442518695669*^9}, {3.7244426255599117`*^9, 3.724442639076613*^9}, {
   3.724443729204352*^9, 3.724443729749022*^9}, {3.724443881656342*^9, 
   3.7244438842850027`*^9}, 3.725261621115453*^9, 3.72526166634648*^9, {
   3.725271550289123*^9, 3.7252715504130163`*^9}, {3.725271609402791*^9, 
   3.7252716095188437`*^9}, {3.7252717762497*^9, 3.725271782362536*^9}, {
   3.725271824500347*^9, 3.725271826035269*^9}, {3.725271857701564*^9, 
   3.725271858192912*^9}, {3.725271928114049*^9, 3.7252719496618757`*^9}, {
   3.725271981807578*^9, 3.725271987122878*^9}, {3.725273718896678*^9, 
   3.72527377251343*^9}, {3.725273963159111*^9, 3.725273966198284*^9}, {
   3.725364382855975*^9, 3.725364384697238*^9}, {3.725364432753635*^9, 
   3.725364433681274*^9}, {3.725364595553596*^9, 3.725364595868292*^9}, {
   3.725364661141473*^9, 3.725364661301785*^9}, {3.725365068510941*^9, 
   3.7253650691073112`*^9}, {3.7256202924505177`*^9, 
   3.7256202938854313`*^9}, {3.7256265502253428`*^9, 3.725626559021003*^9}, {
   3.725798091627001*^9, 3.725798108963685*^9}, {3.725798150844287*^9, 
   3.725798156038417*^9}, {3.726312422974263*^9, 3.726312439922279*^9}, {
   3.726313778060986*^9, 3.726313794010726*^9}, {3.726313854887352*^9, 
   3.726313855417986*^9}, {3.726377533478507*^9, 3.726377535012369*^9}, {
   3.726379310729051*^9, 3.726379315935656*^9}, {3.726379351066524*^9, 
   3.7263793563685627`*^9}, 3.7263814533362722`*^9, {3.726468979312665*^9, 
   3.726469044993416*^9}, {3.726564279540083*^9, 3.726564288774165*^9}, {
   3.726564330005303*^9, 3.726564342424973*^9}, {3.7265645007454853`*^9, 
   3.7265645054085903`*^9}, 3.726565145221386*^9, {3.726836923420138*^9, 
   3.726836925204391*^9}, {3.7268417497448387`*^9, 3.726841749854889*^9}, {
   3.727357927216405*^9, 3.7273579306359463`*^9}, 3.72735811608375*^9, {
   3.7273582875862513`*^9, 3.727358296888235*^9}, {3.727520051444908*^9, 
   3.7275200665503483`*^9}, {3.727539483513708*^9, 3.72753949210455*^9}, {
   3.7275398377710333`*^9, 3.727539869000495*^9}, {3.7275879806550293`*^9, 
   3.727587984698921*^9}, {3.727606150288821*^9, 3.727606150994812*^9}, {
   3.728932814314426*^9, 3.728932860160056*^9}, 3.7289333254815903`*^9, 
   3.7299208725344887`*^9, {3.730007040539275*^9, 3.7300070509717903`*^9}, {
   3.730007357183831*^9, 3.7300073662633142`*^9}, {3.7331192829046183`*^9, 
   3.733119300197537*^9}, {3.733120717385792*^9, 3.733120717697629*^9}, {
   3.7331222711038847`*^9, 3.733122272703622*^9}, {3.733211538849382*^9, 
   3.7332115515038567`*^9}, {3.7332289443370447`*^9, 
   3.7332289447842827`*^9}, {3.742215948846467*^9, 3.742215959437643*^9}, {
   3.742216025305929*^9, 3.742216093257207*^9}, {3.7422172078868933`*^9, 
   3.7422172275906973`*^9}, 3.74221727383118*^9, {3.742217585069265*^9, 
   3.742217591716959*^9}, {3.7422176229823923`*^9, 3.742217653035615*^9}, {
   3.742269341112874*^9, 3.742269371527761*^9}, 3.742275694936644*^9, {
   3.742289467062118*^9, 3.742289486771803*^9}, {3.742289520463562*^9, 
   3.7422896027136*^9}, {3.7422896364561243`*^9, 3.74228964347093*^9}, {
   3.742289678232355*^9, 3.742289708137301*^9}, {3.7422897506101*^9, 
   3.7422897587096577`*^9}, {3.7422920316457787`*^9, 3.742292034487727*^9}, 
   3.742292186682322*^9, {3.742292303240778*^9, 3.742292303483521*^9}, {
   3.742292362481593*^9, 3.742292372544711*^9}, {3.742292408813004*^9, 
   3.742292447857381*^9}, {3.7422968206130743`*^9, 3.742296843480155*^9}, {
   3.7422970160890417`*^9, 3.742297024417719*^9}, {3.742297074890059*^9, 
   3.74229711910509*^9}, {3.7422973083294992`*^9, 3.742297309298213*^9}, {
   3.742297354168077*^9, 3.742297359897736*^9}, {3.742297415918168*^9, 
   3.7422974232482452`*^9}, {3.742297467739311*^9, 3.742297612963316*^9}, {
   3.7422977860232887`*^9, 3.7422977903561068`*^9}, {3.74229798181938*^9, 
   3.742298023677857*^9}, {3.7422980561712513`*^9, 3.74229805925661*^9}, 
   3.742298106308654*^9, {3.742300221204397*^9, 3.742300269720365*^9}, {
   3.742300416216001*^9, 3.742300416917211*^9}, {3.742300536315893*^9, 
   3.742300546756034*^9}, {3.742300626604027*^9, 3.742300638323701*^9}, {
   3.7423006769018583`*^9, 3.7423007163572683`*^9}, {3.7435037431402884`*^9, 
   3.743503799356997*^9}, {3.7435038425347443`*^9, 3.743503908279688*^9}, {
   3.7435046316079397`*^9, 3.743504651390107*^9}, {3.7435061629251003`*^9, 
   3.743506172581184*^9}, 3.745326235903029*^9}]
}, Closed]],

Cell[CellGroupData[{

Cell["Charmonium p - wave", "Subsubsection",
 CellChangeTimes->{{3.742291861612499*^9, 3.742291867360454*^9}, 
   3.742291901323778*^9, {3.7435061781726627`*^9, 3.7435061783084917`*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"pwaveccspectra", "[", 
    RowBox[{"n_", ",", "Tscan_"}], "]"}], ":=", 
   RowBox[{"Block", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{"T", "=", 
        RowBox[{"Tscan", "[", 
         RowBox[{"[", "n", "]"}], "]"}]}], ",", 
       RowBox[{"mD", "=", 
        RowBox[{"mDcal", "[", 
         RowBox[{
          RowBox[{"2", "\[Pi]"}], ",", 
          RowBox[{"Tscan", "[", 
           RowBox[{"[", "n", "]"}], "]"}], ",", 
          RowBox[{"kfinal", "[", 
           RowBox[{"[", "1", "]"}], "]"}], ",", 
          RowBox[{"kfinal", "[", 
           RowBox[{"[", "2", "]"}], "]"}]}], "]"}]}], ",", 
       RowBox[{"\[Sigma]", "=", 
        RowBox[{"\[Sigma]cont", "[", 
         RowBox[{"[", "1", "]"}], "]"}]}], ",", 
       RowBox[{"\[Alpha]", "=", 
        RowBox[{"\[Alpha]cont", "[", 
         RowBox[{"[", "1", "]"}], "]"}]}], ",", 
       RowBox[{"c", "=", 
        RowBox[{"ccont", "[", 
         RowBox[{"[", "1", "]"}], "]"}]}], ",", 
       RowBox[{"M", "=", "Mc"}], ",", 
       RowBox[{"l", "=", "1"}], ",", 
       RowBox[{"\[Omega]min", "=", 
        RowBox[{"-", "1"}]}], ",", 
       RowBox[{"\[Omega]max", "=", "2"}], ",", "ccsT", ",", "Tstring", ",", 
       "inf"}], "}"}], ",", "\[IndentingNewLine]", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"rev", "=", 
       RowBox[{"Interpolation", "[", 
        RowBox[{"Join", "[", 
         RowBox[{
          RowBox[{"ParallelTable", "[", 
           RowBox[{
            RowBox[{"{", 
             RowBox[{"r", ",", 
              RowBox[{"ReVsb", "[", 
               RowBox[{
               "r", ",", "mD", ",", "\[Alpha]", ",", "\[Sigma]", ",", "c"}], 
               "]"}]}], "}"}], ",", 
            RowBox[{"{", 
             RowBox[{"r", ",", 
              RowBox[{"1", "/", "1000"}], ",", "10", ",", 
              RowBox[{"1", "/", "100"}]}], "}"}]}], "]"}], ",", 
          RowBox[{"ParallelTable", "[", 
           RowBox[{
            RowBox[{"{", 
             RowBox[{"r", ",", 
              RowBox[{"ReVsb", "[", 
               RowBox[{
               "r", ",", "mD", ",", "\[Alpha]", ",", "\[Sigma]", ",", "c"}], 
               "]"}]}], "}"}], ",", 
            RowBox[{"{", 
             RowBox[{"r", ",", 
              RowBox[{"101", "/", "10"}], ",", "25", ",", 
              RowBox[{"1", "/", "10"}]}], "}"}]}], "]"}], ",", 
          RowBox[{"ParallelTable", "[", 
           RowBox[{
            RowBox[{"{", 
             RowBox[{"r", ",", 
              RowBox[{"ReVsb", "[", 
               RowBox[{
               "r", ",", "mD", ",", "\[Alpha]", ",", "\[Sigma]", ",", "c"}], 
               "]"}]}], "}"}], ",", 
            RowBox[{"{", 
             RowBox[{"r", ",", "26", ",", "1500", ",", "1"}], "}"}]}], "]"}], 
          ",", 
          RowBox[{"ParallelTable", "[", 
           RowBox[{
            RowBox[{"{", 
             RowBox[{"r", ",", 
              RowBox[{"ReVsb", "[", 
               RowBox[{
               "r", ",", "mD", ",", "\[Alpha]", ",", "\[Sigma]", ",", "c"}], 
               "]"}]}], "}"}], ",", 
            RowBox[{"{", 
             RowBox[{"r", ",", "1510", ",", "20000", ",", "1000"}], "}"}]}], 
           "]"}]}], "]"}], "]"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"imv", "=", 
       RowBox[{"Interpolation", "[", 
        RowBox[{"Join", "[", 
         RowBox[{
          RowBox[{"ParallelTable", "[", 
           RowBox[{
            RowBox[{"{", 
             RowBox[{"r", ",", 
              RowBox[{"ImVsb", "[", 
               RowBox[{
               "r", ",", "mD", ",", "\[Alpha]", ",", "\[Sigma]", ",", "T"}], 
               "]"}]}], "}"}], ",", 
            RowBox[{"{", 
             RowBox[{"r", ",", 
              RowBox[{"1", "/", "1000"}], ",", "10", ",", 
              RowBox[{"1", "/", "100"}]}], "}"}]}], "]"}], ",", 
          RowBox[{"ParallelTable", "[", 
           RowBox[{
            RowBox[{"{", 
             RowBox[{"r", ",", 
              RowBox[{"ImVsb", "[", 
               RowBox[{
               "r", ",", "mD", ",", "\[Alpha]", ",", "\[Sigma]", ",", "T"}], 
               "]"}]}], "}"}], ",", 
            RowBox[{"{", 
             RowBox[{"r", ",", 
              RowBox[{"101", "/", "10"}], ",", "25", ",", 
              RowBox[{"1", "/", "10"}]}], "}"}]}], "]"}], ",", 
          RowBox[{"ParallelTable", "[", 
           RowBox[{
            RowBox[{"{", 
             RowBox[{"r", ",", 
              RowBox[{"ImVsb", "[", 
               RowBox[{
               "r", ",", "mD", ",", "\[Alpha]", ",", "\[Sigma]", ",", "T"}], 
               "]"}]}], "}"}], ",", 
            RowBox[{"{", 
             RowBox[{"r", ",", "26", ",", "1500", ",", "1"}], "}"}]}], "]"}], 
          ",", 
          RowBox[{"ParallelTable", "[", 
           RowBox[{
            RowBox[{"{", 
             RowBox[{"r", ",", 
              RowBox[{"ImVsb", "[", 
               RowBox[{
               "r", ",", "mD", ",", "\[Alpha]", ",", "\[Sigma]", ",", "T"}], 
               "]"}]}], "}"}], ",", 
            RowBox[{"{", 
             RowBox[{"r", ",", "1510", ",", "20000", ",", "1000"}], "}"}]}], 
           "]"}]}], "]"}], "]"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"V", "[", "x_", "]"}], ":=", 
       RowBox[{
        RowBox[{"rev", "[", "x", "]"}], "+", 
        RowBox[{"\[ImaginaryI]", " ", 
         RowBox[{"imv", "[", "x", "]"}]}]}]}], ";", "\[IndentingNewLine]", 
      "\[IndentingNewLine]", 
      RowBox[{"\[Rho]table", "=", 
       RowBox[{
        RowBox[{
         RowBox[{
          RowBox[{"ParallelDo", "[", 
           RowBox[{
            RowBox[{
             RowBox[{"\[Omega]", "=", 
              RowBox[{"\[Omega]min", "+", 
               RowBox[{
                RowBox[{"(", 
                 RowBox[{"it", "-", "1"}], ")"}], " ", "d\[Omega]", " ", 
                "M"}]}]}], ";", 
             RowBox[{"inf", "=", 
              RowBox[{"40", "+", 
               RowBox[{"500", "*", "it", "*", "d\[Omega]"}]}]}], ";", 
             "\[IndentingNewLine]", 
             RowBox[{"s0", "=", 
              RowBox[{"NDSolve", "[", 
               RowBox[{
                RowBox[{"{", 
                 RowBox[{
                  RowBox[{
                   RowBox[{
                    RowBox[{
                    RowBox[{"(", 
                    RowBox[{"\[Omega]", "-", 
                    FractionBox[
                    RowBox[{"l", 
                    RowBox[{"(", 
                    RowBox[{"l", "+", "1"}], ")"}]}], 
                    RowBox[{"M", " ", 
                    SuperscriptBox["r", "2"]}]], "-", 
                    RowBox[{"Re", "[", 
                    RowBox[{"V", "[", "r", "]"}], "]"}], "+", 
                    RowBox[{"\[ImaginaryI]", " ", 
                    RowBox[{"Abs", "[", 
                    RowBox[{"Im", "[", 
                    RowBox[{"V", "[", "r", "]"}], "]"}], "]"}]}]}], ")"}], 
                    RowBox[{"gr", "[", "r", "]"}]}], "+", 
                    RowBox[{
                    FractionBox["1", "M"], 
                    RowBox[{
                    RowBox[{"gr", "''"}], "[", "r", "]"}]}]}], "\[Equal]", 
                   "0"}], ",", " ", "\[IndentingNewLine]", 
                  RowBox[{
                   RowBox[{
                    RowBox[{"gr", "'"}], "[", "\[Delta]", "]"}], "\[Equal]", 
                   RowBox[{
                    RowBox[{"2", " ", "\[Delta]", 
                    SuperscriptBox[
                    RowBox[{"(", 
                    RowBox[{"\[Alpha]", " ", "M"}], ")"}], "2"]}], "-", 
                    RowBox[{
                    FractionBox["3", "4"], 
                    SuperscriptBox["\[Delta]", "2"], 
                    SuperscriptBox[
                    RowBox[{"(", 
                    RowBox[{"M", " ", "\[Alpha]"}], ")"}], "3"]}]}]}], ",", 
                  "\[IndentingNewLine]", " ", 
                  RowBox[{
                   RowBox[{"gr", "[", "\[Delta]", "]"}], "==", " ", 
                   RowBox[{
                    RowBox[{
                    SuperscriptBox["\[Delta]", "2"], 
                    SuperscriptBox[
                    RowBox[{"(", 
                    RowBox[{"\[Alpha]", " ", "M"}], ")"}], "2"]}], "-", 
                    RowBox[{
                    FractionBox["1", "4"], 
                    SuperscriptBox["\[Delta]", "3"], 
                    SuperscriptBox[
                    RowBox[{"(", 
                    RowBox[{"M", " ", "\[Alpha]"}], ")"}], "3"]}]}]}]}], 
                 "}"}], ",", "gr", ",", 
                RowBox[{"{", 
                 RowBox[{"r", ",", "\[Delta]", ",", "inf"}], "}"}], ",", 
                RowBox[{"PrecisionGoal", "\[Rule]", "10"}], ",", 
                RowBox[{"MaxSteps", "\[Rule]", "1000000"}]}], "]"}]}], ";", 
             "\[IndentingNewLine]", 
             RowBox[{
              RowBox[{"gr1", "[", "r_", "]"}], "=", 
              SubscriptBox[
               RowBox[{"(", 
                RowBox[{
                 RowBox[{"gr", "[", "r", "]"}], "/.", "s0"}], ")"}], 
               RowBox[{
               "\[LeftDoubleBracket]", "1", "\[RightDoubleBracket]"}]]}], ";",
              "\[IndentingNewLine]", 
             RowBox[{"s01", "=", 
              RowBox[{"NDSolve", "[", 
               RowBox[{
                RowBox[{"{", 
                 RowBox[{
                  RowBox[{
                   RowBox[{
                    RowBox[{
                    RowBox[{"(", 
                    RowBox[{"\[Omega]", "-", 
                    FractionBox[
                    RowBox[{"l", 
                    RowBox[{"(", 
                    RowBox[{"l", "+", "1"}], ")"}]}], 
                    RowBox[{"M", " ", 
                    SuperscriptBox["r", "2"]}]], "-", 
                    RowBox[{"Re", "[", 
                    RowBox[{"V", "[", "r", "]"}], "]"}], "+", 
                    RowBox[{"\[ImaginaryI]", " ", 
                    RowBox[{"Abs", "[", 
                    RowBox[{"Im", "[", 
                    RowBox[{"V", "[", "r", "]"}], "]"}], "]"}]}]}], ")"}], 
                    RowBox[{"gr", "[", "r", "]"}]}], "+", 
                    RowBox[{
                    FractionBox["1", "M"], 
                    RowBox[{
                    RowBox[{"gr", "''"}], "[", "r", "]"}]}]}], "\[Equal]", 
                   "0"}], ",", " ", "\[IndentingNewLine]", 
                  RowBox[{
                   RowBox[{
                    RowBox[{"gr", "'"}], "[", "\[Delta]", "]"}], "\[Equal]", 
                   RowBox[{
                    RowBox[{"(", 
                    RowBox[{"\[Alpha]", " ", "M"}], ")"}], "-", 
                    RowBox[{"\[Delta]", 
                    SuperscriptBox[
                    RowBox[{"(", 
                    RowBox[{"M", " ", "\[Alpha]"}], ")"}], "2"]}]}]}], ",", 
                  "\[IndentingNewLine]", " ", 
                  RowBox[{
                   RowBox[{"gr", "[", "\[Delta]", "]"}], "\[Equal]", 
                   RowBox[{
                    RowBox[{"\[Delta]", 
                    RowBox[{"(", 
                    RowBox[{"\[Alpha]", " ", "M"}], ")"}]}], "-", " ", 
                    RowBox[{
                    FractionBox["1", "2"], 
                    SuperscriptBox["\[Delta]", "2"], 
                    SuperscriptBox[
                    RowBox[{"(", 
                    RowBox[{"\[Alpha]", " ", "M"}], ")"}], "2"]}]}]}]}], 
                 "}"}], ",", "gr", ",", 
                RowBox[{"{", 
                 RowBox[{"r", ",", "\[Delta]", ",", "inf"}], "}"}]}], "]"}]}],
              ";", "\[IndentingNewLine]", 
             RowBox[{
              RowBox[{"gr0", "[", "r_", "]"}], "=", 
              SubscriptBox[
               RowBox[{"(", 
                RowBox[{
                 RowBox[{"gr", "[", "r", "]"}], "/.", "s01"}], ")"}], 
               RowBox[{
               "\[LeftDoubleBracket]", "1", "\[RightDoubleBracket]"}]]}], ";",
              "\[IndentingNewLine]", 
             RowBox[{"s1", "=", 
              RowBox[{"NDSolve", "[", 
               RowBox[{
                RowBox[{"{", 
                 RowBox[{
                  RowBox[{
                   RowBox[{
                    RowBox[{"rho", "'"}], "[", "x", "]"}], "\[Equal]", 
                   RowBox[{
                    FractionBox[
                    RowBox[{" ", 
                    RowBox[{"Nc", " ", 
                    SuperscriptBox["M", "2"], " ", 
                    SuperscriptBox["\[Alpha]", "3"]}]}], 
                    RowBox[{"8", "\[Pi]"}]], 
                    RowBox[{"Im", "[", 
                    RowBox[{
                    FractionBox["1", 
                    SuperscriptBox[
                    RowBox[{"(", 
                    RowBox[{"gr0", "[", "x", "]"}], ")"}], "2"]], "+", 
                    FractionBox["36", 
                    SuperscriptBox[
                    RowBox[{"(", 
                    RowBox[{"gr1", "[", "x", "]"}], ")"}], "2"]]}], "]"}]}]}],
                   ",", 
                  RowBox[{
                   RowBox[{"rho", "[", "\[Delta]", "]"}], "\[Equal]", "0"}]}],
                  "}"}], ",", "rho", ",", 
                RowBox[{"{", 
                 RowBox[{"x", ",", "\[Delta]", ",", "inf"}], "}"}]}], "]"}]}],
              ";", "\[IndentingNewLine]", 
             RowBox[{
              RowBox[{"rhow", "[", "r_", "]"}], "=", 
              SubscriptBox[
               RowBox[{"(", 
                RowBox[{
                 RowBox[{"rho", "[", "r", "]"}], "/.", "s1"}], ")"}], 
               RowBox[{
               "\[LeftDoubleBracket]", "1", "\[RightDoubleBracket]"}]]}], ";",
              "\[IndentingNewLine]", 
             RowBox[{"ParallelSow", "[", 
              RowBox[{"{", 
               RowBox[{
                RowBox[{"\[Omega]", "+", 
                 RowBox[{"2", "M"}]}], ",", 
                RowBox[{"rhow", "[", "inf", "]"}]}], "}"}], "]"}]}], ",", 
            RowBox[{"{", 
             RowBox[{"it", ",", "1", ",", 
              FractionBox[
               RowBox[{"\[Omega]max", "-", "\[Omega]min"}], 
               RowBox[{"d\[Omega]", " ", "M"}]]}], "}"}]}], "]"}], "//", 
          "Reap"}], "//", "Last"}], "//", "First"}]}], ";", 
      "\[IndentingNewLine]", "\[IndentingNewLine]", 
      RowBox[{"ccsT", "=", 
       RowBox[{"ParallelTable", "[", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{
           RowBox[{"\[Rho]table", "[", 
            RowBox[{"[", 
             RowBox[{"i", ",", "1"}], "]"}], "]"}], ",", 
           FractionBox[
            RowBox[{"\[Rho]table", "[", 
             RowBox[{"[", 
              RowBox[{"i", ",", "2"}], "]"}], "]"}], 
            SuperscriptBox[
             RowBox[{"\[Rho]table", "[", 
              RowBox[{"[", 
               RowBox[{"i", ",", "1"}], "]"}], "]"}], "2"]]}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"i", ",", "1", ",", 
           RowBox[{"Length", "[", "\[Rho]table", "]"}]}], "}"}]}], "]"}]}], 
      ";", "\[IndentingNewLine]", 
      RowBox[{"Tstring", "=", 
       RowBox[{"Round", "[", 
        RowBox[{"T", "*", "1000"}], "]"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"Export", "[", 
       RowBox[{
        RowBox[{"\"\<spectraldata/Tscan/cc/pwccT\>\"", "<>", 
         RowBox[{"ToString", "[", "Tstring", "]"}], "<>", 
         "\"\<spectra.dat\>\""}], ",", 
        RowBox[{"Sort", "[", "ccsT", "]"}]}], "]"}], ";"}]}], 
    "\[IndentingNewLine]", "]"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.724397604460712*^9, 3.724397621092863*^9}, {
   3.724398705481254*^9, 3.724398705798315*^9}, {3.72440624506767*^9, 
   3.7244062457361317`*^9}, {3.7244423136168756`*^9, 3.724442340980721*^9}, {
   3.7244423712224417`*^9, 3.724442377050403*^9}, {3.724442465925974*^9, 
   3.724442518695669*^9}, {3.7244426255599117`*^9, 3.724442639076613*^9}, {
   3.724443729204352*^9, 3.724443729749022*^9}, {3.724443881656342*^9, 
   3.7244438842850027`*^9}, 3.725261621115453*^9, 3.72526166634648*^9, {
   3.725271550289123*^9, 3.7252715504130163`*^9}, {3.725271609402791*^9, 
   3.7252716095188437`*^9}, {3.7252717762497*^9, 3.725271782362536*^9}, {
   3.725271824500347*^9, 3.725271826035269*^9}, {3.725271857701564*^9, 
   3.725271858192912*^9}, {3.725271928114049*^9, 3.7252719496618757`*^9}, {
   3.725271981807578*^9, 3.725271987122878*^9}, {3.725273718896678*^9, 
   3.72527377251343*^9}, {3.725273963159111*^9, 3.725273966198284*^9}, {
   3.725364382855975*^9, 3.725364384697238*^9}, {3.725364432753635*^9, 
   3.725364433681274*^9}, {3.725364595553596*^9, 3.725364595868292*^9}, {
   3.725364661141473*^9, 3.725364661301785*^9}, {3.725365068510941*^9, 
   3.7253650691073112`*^9}, {3.7256202924505177`*^9, 
   3.7256202938854313`*^9}, {3.7256265502253428`*^9, 3.725626559021003*^9}, {
   3.725798091627001*^9, 3.725798108963685*^9}, {3.725798150844287*^9, 
   3.725798156038417*^9}, {3.726312422974263*^9, 3.726312439922279*^9}, {
   3.726313778060986*^9, 3.726313794010726*^9}, {3.726313854887352*^9, 
   3.726313855417986*^9}, {3.726377533478507*^9, 3.726377535012369*^9}, {
   3.726379310729051*^9, 3.726379315935656*^9}, {3.726379351066524*^9, 
   3.7263793563685627`*^9}, 3.7263814533362722`*^9, {3.726468979312665*^9, 
   3.726469044993416*^9}, {3.726564279540083*^9, 3.726564288774165*^9}, {
   3.726564330005303*^9, 3.726564342424973*^9}, {3.7265645007454853`*^9, 
   3.7265645054085903`*^9}, 3.726565145221386*^9, {3.726836923420138*^9, 
   3.726836925204391*^9}, {3.7268417497448387`*^9, 3.726841749854889*^9}, {
   3.727357927216405*^9, 3.7273579306359463`*^9}, 3.72735811608375*^9, {
   3.7273582875862513`*^9, 3.727358296888235*^9}, {3.727520051444908*^9, 
   3.7275200665503483`*^9}, {3.727539483513708*^9, 3.72753949210455*^9}, {
   3.7275398377710333`*^9, 3.727539869000495*^9}, {3.7275879806550293`*^9, 
   3.727587984698921*^9}, {3.727606150288821*^9, 3.727606150994812*^9}, {
   3.728932814314426*^9, 3.728932860160056*^9}, 3.7289333254815903`*^9, 
   3.7299208725344887`*^9, {3.730007040539275*^9, 3.7300070509717903`*^9}, {
   3.730007357183831*^9, 3.7300073662633142`*^9}, {3.7331192829046183`*^9, 
   3.733119300197537*^9}, {3.733120717385792*^9, 3.733120717697629*^9}, {
   3.7331222711038847`*^9, 3.733122272703622*^9}, {3.733211538849382*^9, 
   3.7332115515038567`*^9}, {3.7332289443370447`*^9, 
   3.7332289447842827`*^9}, {3.742215948846467*^9, 3.742215959437643*^9}, {
   3.742216025305929*^9, 3.742216093257207*^9}, {3.7422172078868933`*^9, 
   3.7422172275906973`*^9}, 3.74221727383118*^9, {3.742217585069265*^9, 
   3.742217591716959*^9}, {3.7422176229823923`*^9, 3.742217653035615*^9}, {
   3.742269341112874*^9, 3.742269371527761*^9}, 3.742275694936644*^9, {
   3.742289467062118*^9, 3.742289486771803*^9}, {3.742289520463562*^9, 
   3.7422896027136*^9}, {3.7422896364561243`*^9, 3.74228964347093*^9}, {
   3.742289678232355*^9, 3.742289708137301*^9}, {3.7422897506101*^9, 
   3.7422897587096577`*^9}, {3.7422920316457787`*^9, 3.742292034487727*^9}, 
   3.742292186682322*^9, {3.742292303240778*^9, 3.742292303483521*^9}, {
   3.742292362481593*^9, 3.742292372544711*^9}, {3.742292408813004*^9, 
   3.742292447857381*^9}, {3.7422968206130743`*^9, 3.742296843480155*^9}, {
   3.7422970160890417`*^9, 3.742297024417719*^9}, {3.742297074890059*^9, 
   3.74229711910509*^9}, {3.7422973083294992`*^9, 3.742297309298213*^9}, {
   3.742297354168077*^9, 3.742297359897736*^9}, {3.742297415918168*^9, 
   3.7422974232482452`*^9}, {3.742297467739311*^9, 3.742297612963316*^9}, {
   3.7422977860232887`*^9, 3.7422977903561068`*^9}, {3.74229798181938*^9, 
   3.742298023677857*^9}, {3.7422980561712513`*^9, 3.74229805925661*^9}, 
   3.742298106308654*^9, {3.742300221204397*^9, 3.742300269720365*^9}, {
   3.742300416216001*^9, 3.742300416917211*^9}, {3.742300536315893*^9, 
   3.742300546756034*^9}, {3.742300626604027*^9, 3.742300638323701*^9}, {
   3.7423006769018583`*^9, 3.7423007163572683`*^9}, {3.7435037431402884`*^9, 
   3.743503799356997*^9}, {3.7435038425347443`*^9, 3.743503908279688*^9}, {
   3.7435046316079397`*^9, 3.743504651390107*^9}, {3.7435061817655*^9, 
   3.743506182021901*^9}, {3.743506221115732*^9, 3.743506260429055*^9}, 
   3.743506602721039*^9, {3.745326287005268*^9, 3.7453262895250797`*^9}}]
}, Closed]],

Cell[CellGroupData[{

Cell["Bottomonium s - wave", "Subsubsection",
 CellChangeTimes->{{3.742291861612499*^9, 3.742291867360454*^9}, 
   3.742291901323778*^9, {3.7435061781726627`*^9, 3.7435061783084917`*^9}, {
   3.743506307127768*^9, 3.743506311615374*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"swavebbspectra", "[", 
    RowBox[{"n_", ",", "Tscan_"}], "]"}], ":=", 
   RowBox[{"Block", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{"T", "=", 
        RowBox[{"Tscan", "[", 
         RowBox[{"[", "n", "]"}], "]"}]}], ",", 
       RowBox[{"mD", "=", 
        RowBox[{"mDcal", "[", 
         RowBox[{
          RowBox[{"2", "\[Pi]"}], ",", 
          RowBox[{"Tscan", "[", 
           RowBox[{"[", "n", "]"}], "]"}], ",", 
          RowBox[{"kfinal", "[", 
           RowBox[{"[", "1", "]"}], "]"}], ",", 
          RowBox[{"kfinal", "[", 
           RowBox[{"[", "2", "]"}], "]"}]}], "]"}]}], ",", 
       RowBox[{"\[Sigma]", "=", 
        RowBox[{"\[Sigma]cont", "[", 
         RowBox[{"[", "1", "]"}], "]"}]}], ",", 
       RowBox[{"\[Alpha]", "=", 
        RowBox[{"\[Alpha]cont", "[", 
         RowBox[{"[", "1", "]"}], "]"}]}], ",", 
       RowBox[{"c", "=", 
        RowBox[{"ccont", "[", 
         RowBox[{"[", "1", "]"}], "]"}]}], ",", 
       RowBox[{"M", "=", "Mb"}], ",", 
       RowBox[{"l", "=", "0"}], ",", 
       RowBox[{"\[Omega]min", "=", 
        RowBox[{"-", "1"}]}], ",", 
       RowBox[{"\[Omega]max", "=", "3"}], ",", "ccsT", ",", "Tstring", ",", 
       "inf"}], "}"}], ",", "\[IndentingNewLine]", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"rev", "=", 
       RowBox[{"Interpolation", "[", 
        RowBox[{"Join", "[", 
         RowBox[{
          RowBox[{"ParallelTable", "[", 
           RowBox[{
            RowBox[{"{", 
             RowBox[{"r", ",", 
              RowBox[{"ReVsb", "[", 
               RowBox[{
               "r", ",", "mD", ",", "\[Alpha]", ",", "\[Sigma]", ",", "c"}], 
               "]"}]}], "}"}], ",", 
            RowBox[{"{", 
             RowBox[{"r", ",", 
              RowBox[{"1", "/", "1000"}], ",", "10", ",", 
              RowBox[{"1", "/", "100"}]}], "}"}]}], "]"}], ",", 
          RowBox[{"ParallelTable", "[", 
           RowBox[{
            RowBox[{"{", 
             RowBox[{"r", ",", 
              RowBox[{"ReVsb", "[", 
               RowBox[{
               "r", ",", "mD", ",", "\[Alpha]", ",", "\[Sigma]", ",", "c"}], 
               "]"}]}], "}"}], ",", 
            RowBox[{"{", 
             RowBox[{"r", ",", 
              RowBox[{"101", "/", "10"}], ",", "25", ",", 
              RowBox[{"1", "/", "10"}]}], "}"}]}], "]"}], ",", 
          RowBox[{"ParallelTable", "[", 
           RowBox[{
            RowBox[{"{", 
             RowBox[{"r", ",", 
              RowBox[{"ReVsb", "[", 
               RowBox[{
               "r", ",", "mD", ",", "\[Alpha]", ",", "\[Sigma]", ",", "c"}], 
               "]"}]}], "}"}], ",", 
            RowBox[{"{", 
             RowBox[{"r", ",", "26", ",", "1500", ",", "1"}], "}"}]}], "]"}], 
          ",", 
          RowBox[{"ParallelTable", "[", 
           RowBox[{
            RowBox[{"{", 
             RowBox[{"r", ",", 
              RowBox[{"ReVsb", "[", 
               RowBox[{
               "r", ",", "mD", ",", "\[Alpha]", ",", "\[Sigma]", ",", "c"}], 
               "]"}]}], "}"}], ",", 
            RowBox[{"{", 
             RowBox[{"r", ",", "1510", ",", "20000", ",", "1000"}], "}"}]}], 
           "]"}]}], "]"}], "]"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"imv", "=", 
       RowBox[{"Interpolation", "[", 
        RowBox[{"Join", "[", 
         RowBox[{
          RowBox[{"ParallelTable", "[", 
           RowBox[{
            RowBox[{"{", 
             RowBox[{"r", ",", 
              RowBox[{"ImVsb", "[", 
               RowBox[{
               "r", ",", "mD", ",", "\[Alpha]", ",", "\[Sigma]", ",", "T"}], 
               "]"}]}], "}"}], ",", 
            RowBox[{"{", 
             RowBox[{"r", ",", 
              RowBox[{"1", "/", "1000"}], ",", "10", ",", 
              RowBox[{"1", "/", "100"}]}], "}"}]}], "]"}], ",", 
          RowBox[{"ParallelTable", "[", 
           RowBox[{
            RowBox[{"{", 
             RowBox[{"r", ",", 
              RowBox[{"ImVsb", "[", 
               RowBox[{
               "r", ",", "mD", ",", "\[Alpha]", ",", "\[Sigma]", ",", "T"}], 
               "]"}]}], "}"}], ",", 
            RowBox[{"{", 
             RowBox[{"r", ",", 
              RowBox[{"101", "/", "10"}], ",", "25", ",", 
              RowBox[{"1", "/", "10"}]}], "}"}]}], "]"}], ",", 
          RowBox[{"ParallelTable", "[", 
           RowBox[{
            RowBox[{"{", 
             RowBox[{"r", ",", 
              RowBox[{"ImVsb", "[", 
               RowBox[{
               "r", ",", "mD", ",", "\[Alpha]", ",", "\[Sigma]", ",", "T"}], 
               "]"}]}], "}"}], ",", 
            RowBox[{"{", 
             RowBox[{"r", ",", "26", ",", "1500", ",", "1"}], "}"}]}], "]"}], 
          ",", 
          RowBox[{"ParallelTable", "[", 
           RowBox[{
            RowBox[{"{", 
             RowBox[{"r", ",", 
              RowBox[{"ImVsb", "[", 
               RowBox[{
               "r", ",", "mD", ",", "\[Alpha]", ",", "\[Sigma]", ",", "T"}], 
               "]"}]}], "}"}], ",", 
            RowBox[{"{", 
             RowBox[{"r", ",", "1510", ",", "20000", ",", "1000"}], "}"}]}], 
           "]"}]}], "]"}], "]"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"V", "[", "x_", "]"}], ":=", 
       RowBox[{
        RowBox[{"rev", "[", "x", "]"}], "+", 
        RowBox[{"\[ImaginaryI]", " ", 
         RowBox[{"imv", "[", "x", "]"}]}]}]}], ";", "\[IndentingNewLine]", 
      "\[IndentingNewLine]", 
      RowBox[{"\[Rho]table", "=", 
       RowBox[{
        RowBox[{
         RowBox[{
          RowBox[{"ParallelDo", "[", 
           RowBox[{
            RowBox[{
             RowBox[{"\[Omega]", "=", 
              RowBox[{"\[Omega]min", "+", 
               RowBox[{
                RowBox[{"(", 
                 RowBox[{"it", "-", "1"}], ")"}], " ", "d\[Omega]", " ", 
                "M"}]}]}], ";", 
             RowBox[{"inf", "=", 
              RowBox[{"40", "+", 
               RowBox[{"500", "*", "it", "*", "d\[Omega]"}]}]}], ";", 
             "\[IndentingNewLine]", 
             RowBox[{"(*", 
              RowBox[{
               RowBox[{"s0", "=", 
                RowBox[{"NDSolve", "[", 
                 RowBox[{
                  RowBox[{"{", 
                   RowBox[{
                    RowBox[{
                    RowBox[{
                    RowBox[{
                    RowBox[{"(", 
                    RowBox[{"\[Omega]", "-", 
                    FractionBox[
                    RowBox[{"l", 
                    RowBox[{"(", 
                    RowBox[{"l", "+", "1"}], ")"}]}], 
                    RowBox[{"M", " ", 
                    SuperscriptBox["r", "2"]}]], "-", 
                    RowBox[{"Re", "[", 
                    RowBox[{"V", "[", "r", "]"}], "]"}], "+", 
                    RowBox[{"\[ImaginaryI]", " ", 
                    RowBox[{"Abs", "[", 
                    RowBox[{"Im", "[", 
                    RowBox[{"V", "[", "r", "]"}], "]"}], "]"}]}]}], ")"}], 
                    RowBox[{"gr", "[", "r", "]"}]}], "+", 
                    RowBox[{
                    FractionBox["1", "M"], 
                    RowBox[{
                    RowBox[{"gr", "''"}], "[", "r", "]"}]}]}], "\[Equal]", 
                    "0"}], ",", " ", "\[IndentingNewLine]", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"gr", "'"}], "[", "\[Delta]", "]"}], "\[Equal]", 
                    RowBox[{
                    RowBox[{"2", " ", "\[Delta]", 
                    SuperscriptBox[
                    RowBox[{"(", 
                    RowBox[{"\[Alpha]", " ", "M"}], ")"}], "2"]}], "-", 
                    RowBox[{
                    FractionBox["3", "4"], 
                    SuperscriptBox["\[Delta]", "2"], 
                    SuperscriptBox[
                    RowBox[{"(", 
                    RowBox[{"M", " ", "\[Alpha]"}], ")"}], "3"]}]}]}], ",", 
                    "\[IndentingNewLine]", " ", 
                    RowBox[{
                    RowBox[{"gr", "[", "\[Delta]", "]"}], "==", " ", 
                    RowBox[{
                    RowBox[{
                    SuperscriptBox["\[Delta]", "2"], 
                    SuperscriptBox[
                    RowBox[{"(", 
                    RowBox[{"\[Alpha]", " ", "M"}], ")"}], "2"]}], "-", 
                    RowBox[{
                    FractionBox["1", "4"], 
                    SuperscriptBox["\[Delta]", "3"], 
                    SuperscriptBox[
                    RowBox[{"(", 
                    RowBox[{"M", " ", "\[Alpha]"}], ")"}], "3"]}]}]}]}], 
                   "}"}], ",", "gr", ",", 
                  RowBox[{"{", 
                   RowBox[{"r", ",", "\[Delta]", ",", "inf"}], "}"}], ",", 
                  RowBox[{"PrecisionGoal", "\[Rule]", "10"}], ",", 
                  RowBox[{"MaxSteps", "\[Rule]", "1000000"}]}], "]"}]}], ";", 
               "\[IndentingNewLine]", 
               RowBox[{
                RowBox[{"gr1", "[", "r_", "]"}], "=", 
                SubscriptBox[
                 RowBox[{"(", 
                  RowBox[{
                   RowBox[{"gr", "[", "r", "]"}], "/.", "s0"}], ")"}], 
                 RowBox[{
                 "\[LeftDoubleBracket]", "1", "\[RightDoubleBracket]"}]]}], 
               ";"}], "*)"}], "\[IndentingNewLine]", 
             RowBox[{"s01", "=", 
              RowBox[{"NDSolve", "[", 
               RowBox[{
                RowBox[{"{", 
                 RowBox[{
                  RowBox[{
                   RowBox[{
                    RowBox[{
                    RowBox[{"(", 
                    RowBox[{"\[Omega]", "-", 
                    FractionBox[
                    RowBox[{"l", 
                    RowBox[{"(", 
                    RowBox[{"l", "+", "1"}], ")"}]}], 
                    RowBox[{"M", " ", 
                    SuperscriptBox["r", "2"]}]], "-", 
                    RowBox[{"Re", "[", 
                    RowBox[{"V", "[", "r", "]"}], "]"}], "+", 
                    RowBox[{"\[ImaginaryI]", " ", 
                    RowBox[{"Abs", "[", 
                    RowBox[{"Im", "[", 
                    RowBox[{"V", "[", "r", "]"}], "]"}], "]"}]}]}], ")"}], 
                    RowBox[{"gr", "[", "r", "]"}]}], "+", 
                    RowBox[{
                    FractionBox["1", "M"], 
                    RowBox[{
                    RowBox[{"gr", "''"}], "[", "r", "]"}]}]}], "\[Equal]", 
                   "0"}], ",", " ", "\[IndentingNewLine]", 
                  RowBox[{
                   RowBox[{
                    RowBox[{"gr", "'"}], "[", "\[Delta]", "]"}], "\[Equal]", 
                   RowBox[{
                    RowBox[{"(", 
                    RowBox[{"\[Alpha]", " ", "M"}], ")"}], "-", 
                    RowBox[{"\[Delta]", 
                    SuperscriptBox[
                    RowBox[{"(", 
                    RowBox[{"M", " ", "\[Alpha]"}], ")"}], "2"]}]}]}], ",", 
                  "\[IndentingNewLine]", " ", 
                  RowBox[{
                   RowBox[{"gr", "[", "\[Delta]", "]"}], "\[Equal]", 
                   RowBox[{
                    RowBox[{"\[Delta]", 
                    RowBox[{"(", 
                    RowBox[{"\[Alpha]", " ", "M"}], ")"}]}], "-", " ", 
                    RowBox[{
                    FractionBox["1", "2"], 
                    SuperscriptBox["\[Delta]", "2"], 
                    SuperscriptBox[
                    RowBox[{"(", 
                    RowBox[{"\[Alpha]", " ", "M"}], ")"}], "2"]}]}]}]}], 
                 "}"}], ",", "gr", ",", 
                RowBox[{"{", 
                 RowBox[{"r", ",", "\[Delta]", ",", "inf"}], "}"}]}], "]"}]}],
              ";", "\[IndentingNewLine]", 
             RowBox[{
              RowBox[{"gr0", "[", "r_", "]"}], "=", 
              SubscriptBox[
               RowBox[{"(", 
                RowBox[{
                 RowBox[{"gr", "[", "r", "]"}], "/.", "s01"}], ")"}], 
               RowBox[{
               "\[LeftDoubleBracket]", "1", "\[RightDoubleBracket]"}]]}], ";",
              "\[IndentingNewLine]", 
             RowBox[{"s1", "=", 
              RowBox[{"NDSolve", "[", 
               RowBox[{
                RowBox[{"{", 
                 RowBox[{
                  RowBox[{
                   RowBox[{
                    RowBox[{"rho", "'"}], "[", "x", "]"}], "\[Equal]", 
                   RowBox[{
                    RowBox[{"-", 
                    FractionBox[
                    RowBox[{" ", 
                    RowBox[{"6", " ", "Nc", " ", 
                    SuperscriptBox["M", "2"], " ", "\[Alpha]"}]}], 
                    RowBox[{"4", "\[Pi]"}]]}], 
                    RowBox[{"Im", "[", 
                    FractionBox["1", 
                    SuperscriptBox[
                    RowBox[{"(", 
                    RowBox[{"gr0", "[", "x", "]"}], ")"}], "2"]], 
                    RowBox[{"(*", 
                    RowBox[{"+", 
                    FractionBox["36", 
                    SuperscriptBox[
                    RowBox[{"(", 
                    RowBox[{"gr1", "[", "x", "]"}], ")"}], "2"]]}], "*)"}], 
                    "]"}]}]}], ",", 
                  RowBox[{
                   RowBox[{"rho", "[", "\[Delta]", "]"}], "\[Equal]", "0"}]}],
                  "}"}], ",", "rho", ",", 
                RowBox[{"{", 
                 RowBox[{"x", ",", "\[Delta]", ",", "inf"}], "}"}]}], "]"}]}],
              ";", "\[IndentingNewLine]", 
             RowBox[{
              RowBox[{"rhow", "[", "r_", "]"}], "=", 
              SubscriptBox[
               RowBox[{"(", 
                RowBox[{
                 RowBox[{"rho", "[", "r", "]"}], "/.", "s1"}], ")"}], 
               RowBox[{
               "\[LeftDoubleBracket]", "1", "\[RightDoubleBracket]"}]]}], ";",
              "\[IndentingNewLine]", 
             RowBox[{"ParallelSow", "[", 
              RowBox[{"{", 
               RowBox[{
                RowBox[{"\[Omega]", "+", 
                 RowBox[{"2", "M"}]}], ",", 
                RowBox[{"rhow", "[", "inf", "]"}]}], "}"}], "]"}]}], ",", 
            RowBox[{"{", 
             RowBox[{"it", ",", "1", ",", 
              FractionBox[
               RowBox[{"\[Omega]max", "-", "\[Omega]min"}], 
               RowBox[{"d\[Omega]", " ", "M"}]]}], "}"}]}], "]"}], "//", 
          "Reap"}], "//", "Last"}], "//", "First"}]}], ";", 
      "\[IndentingNewLine]", "\[IndentingNewLine]", 
      RowBox[{"bbsT", "=", 
       RowBox[{"ParallelTable", "[", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{
           RowBox[{"\[Rho]table", "[", 
            RowBox[{"[", 
             RowBox[{"i", ",", "1"}], "]"}], "]"}], ",", 
           FractionBox[
            RowBox[{"-", 
             RowBox[{"\[Rho]table", "[", 
              RowBox[{"[", 
               RowBox[{"i", ",", "2"}], "]"}], "]"}]}], 
            SuperscriptBox[
             RowBox[{"\[Rho]table", "[", 
              RowBox[{"[", 
               RowBox[{"i", ",", "1"}], "]"}], "]"}], "2"]]}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"i", ",", "1", ",", 
           RowBox[{"Length", "[", "\[Rho]table", "]"}]}], "}"}]}], "]"}]}], 
      ";", "\[IndentingNewLine]", 
      RowBox[{"Tstring", "=", 
       RowBox[{"Round", "[", 
        RowBox[{"T", "*", "1000"}], "]"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"Export", "[", 
       RowBox[{
        RowBox[{"\"\<spectraldata/Tscan/bb/swbbT\>\"", "<>", 
         RowBox[{"ToString", "[", "Tstring", "]"}], "<>", 
         "\"\<spectra.dat\>\""}], ",", 
        RowBox[{"Sort", "[", "bbsT", "]"}]}], "]"}], ";"}]}], 
    "\[IndentingNewLine]", "]"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.724397604460712*^9, 3.724397621092863*^9}, {
   3.724398705481254*^9, 3.724398705798315*^9}, {3.72440624506767*^9, 
   3.7244062457361317`*^9}, {3.7244423136168756`*^9, 3.724442340980721*^9}, {
   3.7244423712224417`*^9, 3.724442377050403*^9}, {3.724442465925974*^9, 
   3.724442518695669*^9}, {3.7244426255599117`*^9, 3.724442639076613*^9}, {
   3.724443729204352*^9, 3.724443729749022*^9}, {3.724443881656342*^9, 
   3.7244438842850027`*^9}, 3.725261621115453*^9, 3.72526166634648*^9, {
   3.725271550289123*^9, 3.7252715504130163`*^9}, {3.725271609402791*^9, 
   3.7252716095188437`*^9}, {3.7252717762497*^9, 3.725271782362536*^9}, {
   3.725271824500347*^9, 3.725271826035269*^9}, {3.725271857701564*^9, 
   3.725271858192912*^9}, {3.725271928114049*^9, 3.7252719496618757`*^9}, {
   3.725271981807578*^9, 3.725271987122878*^9}, {3.725273718896678*^9, 
   3.72527377251343*^9}, {3.725273963159111*^9, 3.725273966198284*^9}, {
   3.725364382855975*^9, 3.725364384697238*^9}, {3.725364432753635*^9, 
   3.725364433681274*^9}, {3.725364595553596*^9, 3.725364595868292*^9}, {
   3.725364661141473*^9, 3.725364661301785*^9}, {3.725365068510941*^9, 
   3.7253650691073112`*^9}, {3.7256202924505177`*^9, 
   3.7256202938854313`*^9}, {3.7256265502253428`*^9, 3.725626559021003*^9}, {
   3.725798091627001*^9, 3.725798108963685*^9}, {3.725798150844287*^9, 
   3.725798156038417*^9}, {3.726312422974263*^9, 3.726312439922279*^9}, {
   3.726313778060986*^9, 3.726313794010726*^9}, {3.726313854887352*^9, 
   3.726313855417986*^9}, {3.726377533478507*^9, 3.726377535012369*^9}, {
   3.726379310729051*^9, 3.726379315935656*^9}, {3.726379351066524*^9, 
   3.7263793563685627`*^9}, 3.7263814533362722`*^9, {3.726468979312665*^9, 
   3.726469044993416*^9}, {3.726564279540083*^9, 3.726564288774165*^9}, {
   3.726564330005303*^9, 3.726564342424973*^9}, {3.7265645007454853`*^9, 
   3.7265645054085903`*^9}, 3.726565145221386*^9, {3.726836923420138*^9, 
   3.726836925204391*^9}, {3.7268417497448387`*^9, 3.726841749854889*^9}, {
   3.727357927216405*^9, 3.7273579306359463`*^9}, 3.72735811608375*^9, {
   3.7273582875862513`*^9, 3.727358296888235*^9}, {3.727520051444908*^9, 
   3.7275200665503483`*^9}, {3.727539483513708*^9, 3.72753949210455*^9}, {
   3.7275398377710333`*^9, 3.727539869000495*^9}, {3.7275879806550293`*^9, 
   3.727587984698921*^9}, {3.727606150288821*^9, 3.727606150994812*^9}, {
   3.728932814314426*^9, 3.728932860160056*^9}, 3.7289333254815903`*^9, 
   3.7299208725344887`*^9, {3.730007040539275*^9, 3.7300070509717903`*^9}, {
   3.730007357183831*^9, 3.7300073662633142`*^9}, {3.7331192829046183`*^9, 
   3.733119300197537*^9}, {3.733120717385792*^9, 3.733120717697629*^9}, {
   3.7331222711038847`*^9, 3.733122272703622*^9}, {3.733211538849382*^9, 
   3.7332115515038567`*^9}, {3.7332289443370447`*^9, 
   3.7332289447842827`*^9}, {3.742215948846467*^9, 3.742215959437643*^9}, {
   3.742216025305929*^9, 3.742216093257207*^9}, {3.7422172078868933`*^9, 
   3.7422172275906973`*^9}, 3.74221727383118*^9, {3.742217585069265*^9, 
   3.742217591716959*^9}, {3.7422176229823923`*^9, 3.742217653035615*^9}, {
   3.742269341112874*^9, 3.742269371527761*^9}, 3.742275694936644*^9, {
   3.742289467062118*^9, 3.742289486771803*^9}, {3.742289520463562*^9, 
   3.7422896027136*^9}, {3.7422896364561243`*^9, 3.74228964347093*^9}, {
   3.742289678232355*^9, 3.742289708137301*^9}, {3.7422897506101*^9, 
   3.7422897587096577`*^9}, {3.7422920316457787`*^9, 3.742292034487727*^9}, 
   3.742292186682322*^9, {3.742292303240778*^9, 3.742292303483521*^9}, {
   3.742292362481593*^9, 3.742292372544711*^9}, {3.742292408813004*^9, 
   3.742292447857381*^9}, {3.7422968206130743`*^9, 3.742296843480155*^9}, {
   3.7422970160890417`*^9, 3.742297024417719*^9}, {3.742297074890059*^9, 
   3.74229711910509*^9}, {3.7422973083294992`*^9, 3.742297309298213*^9}, {
   3.742297354168077*^9, 3.742297359897736*^9}, {3.742297415918168*^9, 
   3.7422974232482452`*^9}, {3.742297467739311*^9, 3.742297612963316*^9}, {
   3.7422977860232887`*^9, 3.7422977903561068`*^9}, {3.74229798181938*^9, 
   3.742298023677857*^9}, {3.7422980561712513`*^9, 3.74229805925661*^9}, 
   3.742298106308654*^9, {3.742300221204397*^9, 3.742300269720365*^9}, {
   3.742300416216001*^9, 3.742300416917211*^9}, {3.742300536315893*^9, 
   3.742300546756034*^9}, {3.742300626604027*^9, 3.742300638323701*^9}, {
   3.7423006769018583`*^9, 3.7423007163572683`*^9}, {3.7435037431402884`*^9, 
   3.743503799356997*^9}, {3.7435038425347443`*^9, 3.743503908279688*^9}, {
   3.7435046316079397`*^9, 3.743504651390107*^9}, {3.743506325612351*^9, 
   3.7435063377910748`*^9}, {3.74350638604452*^9, 3.743506401938177*^9}, 
   3.745326244961722*^9}]
}, Closed]],

Cell[CellGroupData[{

Cell["Bottomonium p - wave", "Subsubsection",
 CellChangeTimes->{{3.742291861612499*^9, 3.742291867360454*^9}, 
   3.742291901323778*^9, {3.7435061781726627`*^9, 3.7435061783084917`*^9}, {
   3.743506307127768*^9, 3.743506311615374*^9}, {3.743506475554695*^9, 
   3.743506475770885*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"pwavebbspectra", "[", 
    RowBox[{"n_", ",", "Tscan_"}], "]"}], ":=", 
   RowBox[{"Block", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{"T", "=", 
        RowBox[{"Tscan", "[", 
         RowBox[{"[", "n", "]"}], "]"}]}], ",", 
       RowBox[{"mD", "=", 
        RowBox[{"mDcal", "[", 
         RowBox[{
          RowBox[{"2", "\[Pi]"}], ",", 
          RowBox[{"Tscan", "[", 
           RowBox[{"[", "n", "]"}], "]"}], ",", 
          RowBox[{"kfinal", "[", 
           RowBox[{"[", "1", "]"}], "]"}], ",", 
          RowBox[{"kfinal", "[", 
           RowBox[{"[", "2", "]"}], "]"}]}], "]"}]}], ",", 
       RowBox[{"\[Sigma]", "=", 
        RowBox[{"\[Sigma]cont", "[", 
         RowBox[{"[", "1", "]"}], "]"}]}], ",", 
       RowBox[{"\[Alpha]", "=", 
        RowBox[{"\[Alpha]cont", "[", 
         RowBox[{"[", "1", "]"}], "]"}]}], ",", 
       RowBox[{"c", "=", 
        RowBox[{"ccont", "[", 
         RowBox[{"[", "1", "]"}], "]"}]}], ",", 
       RowBox[{"M", "=", "Mb"}], ",", 
       RowBox[{"l", "=", "1"}], ",", 
       RowBox[{"\[Omega]min", "=", 
        RowBox[{"-", "1"}]}], ",", 
       RowBox[{"\[Omega]max", "=", "3"}], ",", "ccsT", ",", "Tstring", ",", 
       "inf"}], "}"}], ",", "\[IndentingNewLine]", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"rev", "=", 
       RowBox[{"Interpolation", "[", 
        RowBox[{"Join", "[", 
         RowBox[{
          RowBox[{"ParallelTable", "[", 
           RowBox[{
            RowBox[{"{", 
             RowBox[{"r", ",", 
              RowBox[{"ReVsb", "[", 
               RowBox[{
               "r", ",", "mD", ",", "\[Alpha]", ",", "\[Sigma]", ",", "c"}], 
               "]"}]}], "}"}], ",", 
            RowBox[{"{", 
             RowBox[{"r", ",", 
              RowBox[{"1", "/", "1000"}], ",", "10", ",", 
              RowBox[{"1", "/", "100"}]}], "}"}]}], "]"}], ",", 
          RowBox[{"ParallelTable", "[", 
           RowBox[{
            RowBox[{"{", 
             RowBox[{"r", ",", 
              RowBox[{"ReVsb", "[", 
               RowBox[{
               "r", ",", "mD", ",", "\[Alpha]", ",", "\[Sigma]", ",", "c"}], 
               "]"}]}], "}"}], ",", 
            RowBox[{"{", 
             RowBox[{"r", ",", 
              RowBox[{"101", "/", "10"}], ",", "25", ",", 
              RowBox[{"1", "/", "10"}]}], "}"}]}], "]"}], ",", 
          RowBox[{"ParallelTable", "[", 
           RowBox[{
            RowBox[{"{", 
             RowBox[{"r", ",", 
              RowBox[{"ReVsb", "[", 
               RowBox[{
               "r", ",", "mD", ",", "\[Alpha]", ",", "\[Sigma]", ",", "c"}], 
               "]"}]}], "}"}], ",", 
            RowBox[{"{", 
             RowBox[{"r", ",", "26", ",", "1500", ",", "1"}], "}"}]}], "]"}], 
          ",", 
          RowBox[{"ParallelTable", "[", 
           RowBox[{
            RowBox[{"{", 
             RowBox[{"r", ",", 
              RowBox[{"ReVsb", "[", 
               RowBox[{
               "r", ",", "mD", ",", "\[Alpha]", ",", "\[Sigma]", ",", "c"}], 
               "]"}]}], "}"}], ",", 
            RowBox[{"{", 
             RowBox[{"r", ",", "1510", ",", "20000", ",", "1000"}], "}"}]}], 
           "]"}]}], "]"}], "]"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"imv", "=", 
       RowBox[{"Interpolation", "[", 
        RowBox[{"Join", "[", 
         RowBox[{
          RowBox[{"ParallelTable", "[", 
           RowBox[{
            RowBox[{"{", 
             RowBox[{"r", ",", 
              RowBox[{"ImVsb", "[", 
               RowBox[{
               "r", ",", "mD", ",", "\[Alpha]", ",", "\[Sigma]", ",", "T"}], 
               "]"}]}], "}"}], ",", 
            RowBox[{"{", 
             RowBox[{"r", ",", 
              RowBox[{"1", "/", "1000"}], ",", "10", ",", 
              RowBox[{"1", "/", "100"}]}], "}"}]}], "]"}], ",", 
          RowBox[{"ParallelTable", "[", 
           RowBox[{
            RowBox[{"{", 
             RowBox[{"r", ",", 
              RowBox[{"ImVsb", "[", 
               RowBox[{
               "r", ",", "mD", ",", "\[Alpha]", ",", "\[Sigma]", ",", "T"}], 
               "]"}]}], "}"}], ",", 
            RowBox[{"{", 
             RowBox[{"r", ",", 
              RowBox[{"101", "/", "10"}], ",", "25", ",", 
              RowBox[{"1", "/", "10"}]}], "}"}]}], "]"}], ",", 
          RowBox[{"ParallelTable", "[", 
           RowBox[{
            RowBox[{"{", 
             RowBox[{"r", ",", 
              RowBox[{"ImVsb", "[", 
               RowBox[{
               "r", ",", "mD", ",", "\[Alpha]", ",", "\[Sigma]", ",", "T"}], 
               "]"}]}], "}"}], ",", 
            RowBox[{"{", 
             RowBox[{"r", ",", "26", ",", "1500", ",", "1"}], "}"}]}], "]"}], 
          ",", 
          RowBox[{"ParallelTable", "[", 
           RowBox[{
            RowBox[{"{", 
             RowBox[{"r", ",", 
              RowBox[{"ImVsb", "[", 
               RowBox[{
               "r", ",", "mD", ",", "\[Alpha]", ",", "\[Sigma]", ",", "T"}], 
               "]"}]}], "}"}], ",", 
            RowBox[{"{", 
             RowBox[{"r", ",", "1510", ",", "20000", ",", "1000"}], "}"}]}], 
           "]"}]}], "]"}], "]"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"V", "[", "x_", "]"}], ":=", 
       RowBox[{
        RowBox[{"rev", "[", "x", "]"}], "+", 
        RowBox[{"\[ImaginaryI]", " ", 
         RowBox[{"imv", "[", "x", "]"}]}]}]}], ";", "\[IndentingNewLine]", 
      "\[IndentingNewLine]", 
      RowBox[{"\[Rho]table", "=", 
       RowBox[{
        RowBox[{
         RowBox[{
          RowBox[{"ParallelDo", "[", 
           RowBox[{
            RowBox[{
             RowBox[{"\[Omega]", "=", 
              RowBox[{"\[Omega]min", "+", 
               RowBox[{
                RowBox[{"(", 
                 RowBox[{"it", "-", "1"}], ")"}], " ", "d\[Omega]", " ", 
                "M"}]}]}], ";", 
             RowBox[{"inf", "=", 
              RowBox[{"40", "+", 
               RowBox[{"500", "*", "it", "*", "d\[Omega]"}]}]}], ";", 
             "\[IndentingNewLine]", 
             RowBox[{"s0", "=", 
              RowBox[{"NDSolve", "[", 
               RowBox[{
                RowBox[{"{", 
                 RowBox[{
                  RowBox[{
                   RowBox[{
                    RowBox[{
                    RowBox[{"(", 
                    RowBox[{"\[Omega]", "-", 
                    FractionBox[
                    RowBox[{"l", 
                    RowBox[{"(", 
                    RowBox[{"l", "+", "1"}], ")"}]}], 
                    RowBox[{"M", " ", 
                    SuperscriptBox["r", "2"]}]], "-", 
                    RowBox[{"Re", "[", 
                    RowBox[{"V", "[", "r", "]"}], "]"}], "+", 
                    RowBox[{"\[ImaginaryI]", " ", 
                    RowBox[{"Abs", "[", 
                    RowBox[{"Im", "[", 
                    RowBox[{"V", "[", "r", "]"}], "]"}], "]"}]}]}], ")"}], 
                    RowBox[{"gr", "[", "r", "]"}]}], "+", 
                    RowBox[{
                    FractionBox["1", "M"], 
                    RowBox[{
                    RowBox[{"gr", "''"}], "[", "r", "]"}]}]}], "\[Equal]", 
                   "0"}], ",", " ", "\[IndentingNewLine]", 
                  RowBox[{
                   RowBox[{
                    RowBox[{"gr", "'"}], "[", "\[Delta]", "]"}], "\[Equal]", 
                   RowBox[{
                    RowBox[{"2", " ", "\[Delta]", 
                    SuperscriptBox[
                    RowBox[{"(", 
                    RowBox[{"\[Alpha]", " ", "M"}], ")"}], "2"]}], "-", 
                    RowBox[{
                    FractionBox["3", "4"], 
                    SuperscriptBox["\[Delta]", "2"], 
                    SuperscriptBox[
                    RowBox[{"(", 
                    RowBox[{"M", " ", "\[Alpha]"}], ")"}], "3"]}]}]}], ",", 
                  "\[IndentingNewLine]", " ", 
                  RowBox[{
                   RowBox[{"gr", "[", "\[Delta]", "]"}], "==", " ", 
                   RowBox[{
                    RowBox[{
                    SuperscriptBox["\[Delta]", "2"], 
                    SuperscriptBox[
                    RowBox[{"(", 
                    RowBox[{"\[Alpha]", " ", "M"}], ")"}], "2"]}], "-", 
                    RowBox[{
                    FractionBox["1", "4"], 
                    SuperscriptBox["\[Delta]", "3"], 
                    SuperscriptBox[
                    RowBox[{"(", 
                    RowBox[{"M", " ", "\[Alpha]"}], ")"}], "3"]}]}]}]}], 
                 "}"}], ",", "gr", ",", 
                RowBox[{"{", 
                 RowBox[{"r", ",", "\[Delta]", ",", "inf"}], "}"}], ",", 
                RowBox[{"PrecisionGoal", "\[Rule]", "10"}], ",", 
                RowBox[{"MaxSteps", "\[Rule]", "1000000"}]}], "]"}]}], ";", 
             "\[IndentingNewLine]", 
             RowBox[{
              RowBox[{"gr1", "[", "r_", "]"}], "=", 
              SubscriptBox[
               RowBox[{"(", 
                RowBox[{
                 RowBox[{"gr", "[", "r", "]"}], "/.", "s0"}], ")"}], 
               RowBox[{
               "\[LeftDoubleBracket]", "1", "\[RightDoubleBracket]"}]]}], ";",
              "\[IndentingNewLine]", 
             RowBox[{"s01", "=", 
              RowBox[{"NDSolve", "[", 
               RowBox[{
                RowBox[{"{", 
                 RowBox[{
                  RowBox[{
                   RowBox[{
                    RowBox[{
                    RowBox[{"(", 
                    RowBox[{"\[Omega]", "-", 
                    FractionBox[
                    RowBox[{"l", 
                    RowBox[{"(", 
                    RowBox[{"l", "+", "1"}], ")"}]}], 
                    RowBox[{"M", " ", 
                    SuperscriptBox["r", "2"]}]], "-", 
                    RowBox[{"Re", "[", 
                    RowBox[{"V", "[", "r", "]"}], "]"}], "+", 
                    RowBox[{"\[ImaginaryI]", " ", 
                    RowBox[{"Abs", "[", 
                    RowBox[{"Im", "[", 
                    RowBox[{"V", "[", "r", "]"}], "]"}], "]"}]}]}], ")"}], 
                    RowBox[{"gr", "[", "r", "]"}]}], "+", 
                    RowBox[{
                    FractionBox["1", "M"], 
                    RowBox[{
                    RowBox[{"gr", "''"}], "[", "r", "]"}]}]}], "\[Equal]", 
                   "0"}], ",", " ", "\[IndentingNewLine]", 
                  RowBox[{
                   RowBox[{
                    RowBox[{"gr", "'"}], "[", "\[Delta]", "]"}], "\[Equal]", 
                   RowBox[{
                    RowBox[{"(", 
                    RowBox[{"\[Alpha]", " ", "M"}], ")"}], "-", 
                    RowBox[{"\[Delta]", 
                    SuperscriptBox[
                    RowBox[{"(", 
                    RowBox[{"M", " ", "\[Alpha]"}], ")"}], "2"]}]}]}], ",", 
                  "\[IndentingNewLine]", " ", 
                  RowBox[{
                   RowBox[{"gr", "[", "\[Delta]", "]"}], "\[Equal]", 
                   RowBox[{
                    RowBox[{"\[Delta]", 
                    RowBox[{"(", 
                    RowBox[{"\[Alpha]", " ", "M"}], ")"}]}], "-", " ", 
                    RowBox[{
                    FractionBox["1", "2"], 
                    SuperscriptBox["\[Delta]", "2"], 
                    SuperscriptBox[
                    RowBox[{"(", 
                    RowBox[{"\[Alpha]", " ", "M"}], ")"}], "2"]}]}]}]}], 
                 "}"}], ",", "gr", ",", 
                RowBox[{"{", 
                 RowBox[{"r", ",", "\[Delta]", ",", "inf"}], "}"}]}], "]"}]}],
              ";", "\[IndentingNewLine]", 
             RowBox[{
              RowBox[{"gr0", "[", "r_", "]"}], "=", 
              SubscriptBox[
               RowBox[{"(", 
                RowBox[{
                 RowBox[{"gr", "[", "r", "]"}], "/.", "s01"}], ")"}], 
               RowBox[{
               "\[LeftDoubleBracket]", "1", "\[RightDoubleBracket]"}]]}], ";",
              "\[IndentingNewLine]", 
             RowBox[{"s1", "=", 
              RowBox[{"NDSolve", "[", 
               RowBox[{
                RowBox[{"{", 
                 RowBox[{
                  RowBox[{
                   RowBox[{
                    RowBox[{"rho", "'"}], "[", "x", "]"}], "\[Equal]", 
                   RowBox[{
                    FractionBox[
                    RowBox[{"  ", 
                    RowBox[{"Nc", " ", 
                    SuperscriptBox["M", "2"], " ", 
                    SuperscriptBox["\[Alpha]", "3"]}]}], 
                    RowBox[{"8", "\[Pi]"}]], 
                    RowBox[{"Im", "[", 
                    RowBox[{
                    FractionBox["1", 
                    SuperscriptBox[
                    RowBox[{"(", 
                    RowBox[{"gr0", "[", "x", "]"}], ")"}], "2"]], "+", 
                    FractionBox["36", 
                    SuperscriptBox[
                    RowBox[{"(", 
                    RowBox[{"gr1", "[", "x", "]"}], ")"}], "2"]]}], "]"}]}]}],
                   ",", 
                  RowBox[{
                   RowBox[{"rho", "[", "\[Delta]", "]"}], "\[Equal]", "0"}]}],
                  "}"}], ",", "rho", ",", 
                RowBox[{"{", 
                 RowBox[{"x", ",", "\[Delta]", ",", "inf"}], "}"}]}], "]"}]}],
              ";", "\[IndentingNewLine]", 
             RowBox[{
              RowBox[{"rhow", "[", "r_", "]"}], "=", 
              SubscriptBox[
               RowBox[{"(", 
                RowBox[{
                 RowBox[{"rho", "[", "r", "]"}], "/.", "s1"}], ")"}], 
               RowBox[{
               "\[LeftDoubleBracket]", "1", "\[RightDoubleBracket]"}]]}], ";",
              "\[IndentingNewLine]", 
             RowBox[{"ParallelSow", "[", 
              RowBox[{"{", 
               RowBox[{
                RowBox[{"\[Omega]", "+", 
                 RowBox[{"2", "M"}]}], ",", 
                RowBox[{"rhow", "[", "inf", "]"}]}], "}"}], "]"}]}], ",", 
            RowBox[{"{", 
             RowBox[{"it", ",", "1", ",", 
              FractionBox[
               RowBox[{"\[Omega]max", "-", "\[Omega]min"}], 
               RowBox[{"d\[Omega]", " ", "M"}]]}], "}"}]}], "]"}], "//", 
          "Reap"}], "//", "Last"}], "//", "First"}]}], ";", 
      "\[IndentingNewLine]", "\[IndentingNewLine]", 
      RowBox[{"bbsT", "=", 
       RowBox[{"ParallelTable", "[", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{
           RowBox[{"\[Rho]table", "[", 
            RowBox[{"[", 
             RowBox[{"i", ",", "1"}], "]"}], "]"}], ",", 
           FractionBox[
            RowBox[{"\[Rho]table", "[", 
             RowBox[{"[", 
              RowBox[{"i", ",", "2"}], "]"}], "]"}], 
            SuperscriptBox[
             RowBox[{"\[Rho]table", "[", 
              RowBox[{"[", 
               RowBox[{"i", ",", "1"}], "]"}], "]"}], "2"]]}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"i", ",", "1", ",", 
           RowBox[{"Length", "[", "\[Rho]table", "]"}]}], "}"}]}], "]"}]}], 
      ";", "\[IndentingNewLine]", 
      RowBox[{"Tstring", "=", 
       RowBox[{"Round", "[", 
        RowBox[{"T", "*", "1000"}], "]"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"Export", "[", 
       RowBox[{
        RowBox[{"\"\<spectraldata/Tscan/bb/pwbbT\>\"", "<>", 
         RowBox[{"ToString", "[", "Tstring", "]"}], "<>", 
         "\"\<spectra.dat\>\""}], ",", 
        RowBox[{"Sort", "[", "bbsT", "]"}]}], "]"}], ";"}]}], 
    "\[IndentingNewLine]", "]"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.724397604460712*^9, 3.724397621092863*^9}, {
   3.724398705481254*^9, 3.724398705798315*^9}, {3.72440624506767*^9, 
   3.7244062457361317`*^9}, {3.7244423136168756`*^9, 3.724442340980721*^9}, {
   3.7244423712224417`*^9, 3.724442377050403*^9}, {3.724442465925974*^9, 
   3.724442518695669*^9}, {3.7244426255599117`*^9, 3.724442639076613*^9}, {
   3.724443729204352*^9, 3.724443729749022*^9}, {3.724443881656342*^9, 
   3.7244438842850027`*^9}, 3.725261621115453*^9, 3.72526166634648*^9, {
   3.725271550289123*^9, 3.7252715504130163`*^9}, {3.725271609402791*^9, 
   3.7252716095188437`*^9}, {3.7252717762497*^9, 3.725271782362536*^9}, {
   3.725271824500347*^9, 3.725271826035269*^9}, {3.725271857701564*^9, 
   3.725271858192912*^9}, {3.725271928114049*^9, 3.7252719496618757`*^9}, {
   3.725271981807578*^9, 3.725271987122878*^9}, {3.725273718896678*^9, 
   3.72527377251343*^9}, {3.725273963159111*^9, 3.725273966198284*^9}, {
   3.725364382855975*^9, 3.725364384697238*^9}, {3.725364432753635*^9, 
   3.725364433681274*^9}, {3.725364595553596*^9, 3.725364595868292*^9}, {
   3.725364661141473*^9, 3.725364661301785*^9}, {3.725365068510941*^9, 
   3.7253650691073112`*^9}, {3.7256202924505177`*^9, 
   3.7256202938854313`*^9}, {3.7256265502253428`*^9, 3.725626559021003*^9}, {
   3.725798091627001*^9, 3.725798108963685*^9}, {3.725798150844287*^9, 
   3.725798156038417*^9}, {3.726312422974263*^9, 3.726312439922279*^9}, {
   3.726313778060986*^9, 3.726313794010726*^9}, {3.726313854887352*^9, 
   3.726313855417986*^9}, {3.726377533478507*^9, 3.726377535012369*^9}, {
   3.726379310729051*^9, 3.726379315935656*^9}, {3.726379351066524*^9, 
   3.7263793563685627`*^9}, 3.7263814533362722`*^9, {3.726468979312665*^9, 
   3.726469044993416*^9}, {3.726564279540083*^9, 3.726564288774165*^9}, {
   3.726564330005303*^9, 3.726564342424973*^9}, {3.7265645007454853`*^9, 
   3.7265645054085903`*^9}, 3.726565145221386*^9, {3.726836923420138*^9, 
   3.726836925204391*^9}, {3.7268417497448387`*^9, 3.726841749854889*^9}, {
   3.727357927216405*^9, 3.7273579306359463`*^9}, 3.72735811608375*^9, {
   3.7273582875862513`*^9, 3.727358296888235*^9}, {3.727520051444908*^9, 
   3.7275200665503483`*^9}, {3.727539483513708*^9, 3.72753949210455*^9}, {
   3.7275398377710333`*^9, 3.727539869000495*^9}, {3.7275879806550293`*^9, 
   3.727587984698921*^9}, {3.727606150288821*^9, 3.727606150994812*^9}, {
   3.728932814314426*^9, 3.728932860160056*^9}, 3.7289333254815903`*^9, 
   3.7299208725344887`*^9, {3.730007040539275*^9, 3.7300070509717903`*^9}, {
   3.730007357183831*^9, 3.7300073662633142`*^9}, {3.7331192829046183`*^9, 
   3.733119300197537*^9}, {3.733120717385792*^9, 3.733120717697629*^9}, {
   3.7331222711038847`*^9, 3.733122272703622*^9}, {3.733211538849382*^9, 
   3.7332115515038567`*^9}, {3.7332289443370447`*^9, 
   3.7332289447842827`*^9}, {3.742215948846467*^9, 3.742215959437643*^9}, {
   3.742216025305929*^9, 3.742216093257207*^9}, {3.7422172078868933`*^9, 
   3.7422172275906973`*^9}, 3.74221727383118*^9, {3.742217585069265*^9, 
   3.742217591716959*^9}, {3.7422176229823923`*^9, 3.742217653035615*^9}, {
   3.742269341112874*^9, 3.742269371527761*^9}, 3.742275694936644*^9, {
   3.742289467062118*^9, 3.742289486771803*^9}, {3.742289520463562*^9, 
   3.7422896027136*^9}, {3.7422896364561243`*^9, 3.74228964347093*^9}, {
   3.742289678232355*^9, 3.742289708137301*^9}, {3.7422897506101*^9, 
   3.7422897587096577`*^9}, {3.7422920316457787`*^9, 3.742292034487727*^9}, 
   3.742292186682322*^9, {3.742292303240778*^9, 3.742292303483521*^9}, {
   3.742292362481593*^9, 3.742292372544711*^9}, {3.742292408813004*^9, 
   3.742292447857381*^9}, {3.7422968206130743`*^9, 3.742296843480155*^9}, {
   3.7422970160890417`*^9, 3.742297024417719*^9}, {3.742297074890059*^9, 
   3.74229711910509*^9}, {3.7422973083294992`*^9, 3.742297309298213*^9}, {
   3.742297354168077*^9, 3.742297359897736*^9}, {3.742297415918168*^9, 
   3.7422974232482452`*^9}, {3.742297467739311*^9, 3.742297612963316*^9}, {
   3.7422977860232887`*^9, 3.7422977903561068`*^9}, {3.74229798181938*^9, 
   3.742298023677857*^9}, {3.7422980561712513`*^9, 3.74229805925661*^9}, 
   3.742298106308654*^9, {3.742300221204397*^9, 3.742300269720365*^9}, {
   3.742300416216001*^9, 3.742300416917211*^9}, {3.742300536315893*^9, 
   3.742300546756034*^9}, {3.742300626604027*^9, 3.742300638323701*^9}, {
   3.7423006769018583`*^9, 3.7423007163572683`*^9}, {3.7435037431402884`*^9, 
   3.743503799356997*^9}, {3.7435038425347443`*^9, 3.743503908279688*^9}, {
   3.7435046316079397`*^9, 3.743504651390107*^9}, {3.743506325612351*^9, 
   3.7435063377910748`*^9}, {3.74350638604452*^9, 3.743506401938177*^9}, {
   3.743506481181818*^9, 3.743506513038129*^9}, {3.745326264884691*^9, 
   3.745326273933687*^9}}]
}, Closed]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Run modules", "Subsection",
 CellChangeTimes->{{3.72656471093397*^9, 3.7265647203644247`*^9}}],

Cell[BoxData[
 RowBox[{"Off", "[", 
  RowBox[{"NIntegrate", "::", "inumr"}], "]"}]], "Input",
 CellChangeTimes->{{3.725619483363937*^9, 3.725619483377707*^9}, {
  3.727606183390926*^9, 3.727606185317863*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Tscancorig", "=", 
  RowBox[{"Join", "[", 
   RowBox[{
    RowBox[{"Table", "[", 
     RowBox[{"i", ",", 
      RowBox[{"{", 
       RowBox[{"i", ",", "0.15", ",", "0.16", ",", "0.001"}], "}"}]}], "]"}], 
    ",", 
    RowBox[{"Table", "[", 
     RowBox[{"i", ",", 
      RowBox[{"{", 
       RowBox[{"i", ",", "0.162", ",", "0.299", ",", "0.003"}], "}"}]}], 
     "]"}]}], "]"}]}]], "Input",
 CellChangeTimes->{{3.7252739758591213`*^9, 3.7252739764997463`*^9}, {
   3.725274428998905*^9, 3.7252745030941057`*^9}, {3.725274536208749*^9, 
   3.7252745365240393`*^9}, 3.725274670147171*^9, {3.72646894850772*^9, 
   3.7264689620651827`*^9}, {3.7265643570074453`*^9, 3.726564368280005*^9}, {
   3.72656440184023*^9, 3.726564419184311*^9}, {3.7265645136898127`*^9, 
   3.726564515211121*^9}, {3.7265646945508137`*^9, 3.726564696903001*^9}, {
   3.726565152943614*^9, 3.726565157181899*^9}, {3.726568893755868*^9, 
   3.726568900938162*^9}, {3.726573125445169*^9, 3.726573166388653*^9}, 
   3.726837002653183*^9, {3.7273581385416317`*^9, 3.7273581450067587`*^9}, {
   3.727439388625534*^9, 3.7274393888340597`*^9}, {3.727520073959399*^9, 
   3.727520114297689*^9}, {3.727520158787784*^9, 3.727520201249905*^9}, {
   3.72758789714799*^9, 3.727587916626915*^9}, {3.72760617876633*^9, 
   3.727606248912722*^9}, {3.727608151834311*^9, 3.727608152841201*^9}, {
   3.727608360293288*^9, 3.7276083612270947`*^9}, {3.733294559452797*^9, 
   3.7332945598909187`*^9}, {3.7422173899159927`*^9, 3.742217420228848*^9}, {
   3.743504682433591*^9, 3.743504724593437*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
  "0.15`", ",", "0.151`", ",", "0.152`", ",", "0.153`", ",", "0.154`", ",", 
   "0.155`", ",", "0.156`", ",", "0.157`", ",", "0.158`", ",", "0.159`", ",", 
   "0.16`", ",", "0.162`", ",", "0.165`", ",", "0.168`", ",", "0.171`", ",", 
   "0.17400000000000002`", ",", "0.177`", ",", "0.18`", ",", "0.183`", ",", 
   "0.186`", ",", "0.189`", ",", "0.192`", ",", "0.195`", ",", "0.198`", ",", 
   "0.201`", ",", "0.20400000000000001`", ",", "0.20700000000000002`", ",", 
   "0.21000000000000002`", ",", "0.21300000000000002`", ",", "0.216`", ",", 
   "0.219`", ",", "0.222`", ",", "0.225`", ",", "0.228`", ",", "0.231`", ",", 
   "0.234`", ",", "0.237`", ",", "0.24`", ",", "0.243`", ",", "0.246`", ",", 
   "0.249`", ",", "0.252`", ",", "0.255`", ",", "0.258`", ",", "0.261`", ",", 
   "0.264`", ",", "0.267`", ",", "0.27`", ",", "0.273`", ",", "0.276`", ",", 
   "0.279`", ",", "0.28200000000000003`", ",", "0.28500000000000003`", ",", 
   "0.28800000000000003`", ",", "0.29100000000000004`", ",", 
   "0.29400000000000004`", ",", "0.29700000000000004`"}], "}"}]], "Output",
 CellChangeTimes->{{3.727606230929288*^9, 3.72760624964671*^9}, 
   3.727608154200349*^9, 3.727608361684507*^9, 3.727701011309236*^9, 
   3.728468096800242*^9, 3.728882494638784*^9, 3.728889116000985*^9, 
   3.729920891490452*^9, 3.733228990340488*^9, 3.733294585030677*^9, 
   3.733294698241495*^9, 3.733393453222761*^9, 3.7422174217220097`*^9, 
   3.742217538055772*^9, 3.7422176005942307`*^9, 3.742217724792449*^9, {
   3.743504659971809*^9, 3.743504684673637*^9}, {3.743504719446714*^9, 
   3.743504725180386*^9}, 3.743505066896949*^9, 3.743742129441505*^9, 
   3.7437446291766043`*^9, 3.7453261613314953`*^9, 3.745580727693656*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Tscanborig", "=", 
  RowBox[{"Table", "[", 
   RowBox[{"i", ",", 
    RowBox[{"{", 
     RowBox[{"i", ",", "0.15", ",", "0.6", ",", "0.005"}], "}"}]}], 
   "]"}]}]], "Input",
 CellChangeTimes->{3.743506566566243*^9}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
  "0.15`", ",", "0.155`", ",", "0.16`", ",", "0.16499999999999998`", ",", 
   "0.16999999999999998`", ",", "0.175`", ",", "0.18`", ",", "0.185`", ",", 
   "0.19`", ",", "0.195`", ",", "0.2`", ",", "0.205`", ",", "0.21`", ",", 
   "0.215`", ",", "0.22`", ",", "0.22499999999999998`", ",", 
   "0.22999999999999998`", ",", "0.235`", ",", "0.24`", ",", "0.245`", ",", 
   "0.25`", ",", "0.255`", ",", "0.26`", ",", "0.265`", ",", "0.27`", ",", 
   "0.275`", ",", "0.28`", ",", "0.28500000000000003`", ",", 
   "0.29000000000000004`", ",", "0.295`", ",", "0.3`", ",", "0.305`", ",", 
   "0.31`", ",", "0.315`", ",", "0.32`", ",", "0.325`", ",", 
   "0.32999999999999996`", ",", "0.33499999999999996`", ",", 
   "0.33999999999999997`", ",", "0.345`", ",", "0.35`", ",", "0.355`", ",", 
   "0.36`", ",", "0.365`", ",", "0.37`", ",", "0.375`", ",", "0.38`", ",", 
   "0.385`", ",", "0.39`", ",", "0.395`", ",", "0.4`", ",", "0.405`", ",", 
   "0.41000000000000003`", ",", "0.41500000000000004`", ",", 
   "0.42000000000000004`", ",", "0.42500000000000004`", ",", 
   "0.43000000000000005`", ",", "0.43500000000000005`", ",", 
   "0.43999999999999995`", ",", "0.44499999999999995`", ",", 
   "0.44999999999999996`", ",", "0.45499999999999996`", ",", 
   "0.45999999999999996`", ",", "0.46499999999999997`", ",", "0.47`", ",", 
   "0.475`", ",", "0.48`", ",", "0.485`", ",", "0.49`", ",", "0.495`", ",", 
   "0.5`", ",", "0.505`", ",", "0.51`", ",", "0.515`", ",", "0.52`", ",", 
   "0.525`", ",", "0.53`", ",", "0.535`", ",", "0.54`", ",", "0.545`", ",", 
   "0.55`", ",", "0.555`", ",", "0.56`", ",", "0.5650000000000001`", ",", 
   "0.57`", ",", "0.575`", ",", "0.58`", ",", "0.585`", ",", "0.59`", ",", 
   "0.595`", ",", "0.6`"}], "}"}]], "Output",
 CellChangeTimes->{3.743742173192466*^9, 3.743744630091731*^9, 
  3.745326162677362*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"Do", "[", 
   RowBox[{
    RowBox[{"swaveccspectra", "[", 
     RowBox[{"i", ",", "Tscancorig"}], "]"}], ",", 
    RowBox[{"{", 
     RowBox[{"i", ",", 
      RowBox[{"Length", "[", "Tscancorig", "]"}]}], "}"}]}], "]"}], "//", 
  "AbsoluteTiming"}]], "Input",
 CellChangeTimes->{{3.728933359292989*^9, 3.728933362027852*^9}, {
  3.729839091943986*^9, 3.7298390941512823`*^9}, {3.730007158009296*^9, 
  3.730007173757739*^9}, {3.730007395541212*^9, 3.7300074047007923`*^9}, {
  3.7300956579830637`*^9, 3.7300956714067*^9}, {3.7331193685238667`*^9, 
  3.733119388052079*^9}, {3.733229002019576*^9, 3.7332290054678097`*^9}, {
  3.733294668540216*^9, 3.733294671589388*^9}, {3.7422174364369907`*^9, 
  3.7422174379809513`*^9}}],

Cell[BoxData["$Aborted"], "Output",
 CellChangeTimes->{3.7435048062491693`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"Do", "[", 
   RowBox[{
    RowBox[{"swaveccuspectra", "[", 
     RowBox[{"i", ",", "Tscancorig"}], "]"}], ",", 
    RowBox[{"{", 
     RowBox[{"i", ",", 
      RowBox[{"Length", "[", "Tscancorig", "]"}]}], "}"}]}], "]"}], "//", 
  "AbsoluteTiming"}]], "Input",
 CellChangeTimes->{
  3.733211653597514*^9, {3.733229014339467*^9, 3.733229018787479*^9}, {
   3.7332946555940523`*^9, 3.7332946649052143`*^9}, {3.743506542901225*^9, 
   3.7435065456418333`*^9}}],

Cell[BoxData["$Aborted"], "Output",
 CellChangeTimes->{3.733393474001999*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"Do", "[", 
   RowBox[{
    RowBox[{"swavecclspectra", "[", 
     RowBox[{"i", ",", "Tscancorig"}], "]"}], ",", 
    RowBox[{"{", 
     RowBox[{"i", ",", 
      RowBox[{"Length", "[", "Tscancorig", "]"}]}], "}"}]}], "]"}], "//", 
  "AbsoluteTiming"}]], "Input",
 CellChangeTimes->{{3.733211663813525*^9, 3.733211664905531*^9}, {
  3.733229025987722*^9, 3.733229029627775*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"2110.255172`", ",", "Null"}], "}"}]], "Output",
 CellChangeTimes->{3.733213847087154*^9}]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{"Do", "[", 
   RowBox[{
    RowBox[{"pwaveccspectrau", "[", 
     RowBox[{"i", ",", "Tscanc"}], "]"}], ",", 
    RowBox[{"{", 
     RowBox[{"i", ",", 
      RowBox[{"Length", "[", "Tscanc", "]"}]}], "}"}]}], "]"}], "//", 
  "AbsoluteTiming"}]], "Input"],

Cell[BoxData[
 RowBox[{
  RowBox[{"Do", "[", 
   RowBox[{
    RowBox[{"swavebbspectra", "[", 
     RowBox[{"i", ",", "Tscanborig"}], "]"}], ",", 
    RowBox[{"{", 
     RowBox[{"i", ",", 
      RowBox[{"Length", "[", "Tscanb", "]"}]}], "}"}]}], "]"}], "//", 
  "AbsoluteTiming"}]], "Input",
 CellChangeTimes->{{3.725274688827108*^9, 3.7252746921689157`*^9}, {
   3.726314352501986*^9, 3.726314352595883*^9}, {3.7264025876977463`*^9, 
   3.7264025901211853`*^9}, {3.726564747997864*^9, 3.72656475634035*^9}, {
   3.72657522016017*^9, 3.72657522520866*^9}, {3.726837005709298*^9, 
   3.7268370281174517`*^9}, {3.727439373867774*^9, 3.727439374658628*^9}, 
   3.727606951248332*^9, {3.7435065808390827`*^9, 3.7435065812868633`*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"Do", "[", 
   RowBox[{
    RowBox[{"swavebbspectrau", "[", 
     RowBox[{"i", ",", "Tscanborig"}], "]"}], ",", 
    RowBox[{"{", 
     RowBox[{"i", ",", 
      RowBox[{"Length", "[", "Tscanb", "]"}]}], "}"}]}], "]"}], "//", 
  "AbsoluteTiming"}]], "Input",
 CellChangeTimes->{
  3.728469127565364*^9, {3.7435065857274847`*^9, 3.7435065860385017`*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"Do", "[", 
   RowBox[{
    RowBox[{"swavebbspectral", "[", 
     RowBox[{"i", ",", "Tscanborig"}], "]"}], ",", 
    RowBox[{"{", 
     RowBox[{"i", ",", 
      RowBox[{"Length", "[", "Tscanb", "]"}]}], "}"}]}], "]"}], "//", 
  "AbsoluteTiming"}]], "Input",
 CellChangeTimes->{
  3.72846912896104*^9, {3.743506588862314*^9, 3.743506589255273*^9}}]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Continuum Energies", "Section",
 CellChangeTimes->{{3.727415296394449*^9, 3.727415310980733*^9}, {
  3.727438974368733*^9, 3.7274389775611553`*^9}, {3.7274415699177094`*^9, 
  3.727441571125741*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"2", "Mc"}], "+", 
  RowBox[{"Table", "[", 
   RowBox[{
    RowBox[{"ReVsb", "[", 
     RowBox[{"100000", ",", 
      RowBox[{"mDcal", "[", 
       RowBox[{
        RowBox[{"2", "\[Pi]"}], ",", 
        RowBox[{"Tscancorig", "[", 
         RowBox[{"[", "i", "]"}], "]"}], ",", 
        RowBox[{"kfinal", "[", 
         RowBox[{"[", "1", "]"}], "]"}], ",", 
        RowBox[{"kfinal", "[", 
         RowBox[{"[", "2", "]"}], "]"}]}], "]"}], ",", 
      RowBox[{"\[Alpha]cont", "[", 
       RowBox[{"[", "1", "]"}], "]"}], ",", 
      RowBox[{"\[Sigma]cont", "[", 
       RowBox[{"[", "1", "]"}], "]"}], ",", 
      RowBox[{"ccont", "[", 
       RowBox[{"[", "1", "]"}], "]"}]}], "]"}], ",", 
    RowBox[{"{", 
     RowBox[{"i", ",", "1", ",", 
      RowBox[{"Length", "[", "Tscancorig", "]"}]}], "}"}]}], "]"}]}]], "Input",\

 CellChangeTimes->{{3.727415329654827*^9, 3.727415395125635*^9}, {
   3.727419032739399*^9, 3.72741906893994*^9}, {3.727421895354998*^9, 
   3.727421965803722*^9}, {3.7274307503359957`*^9, 3.727430756438754*^9}, 
   3.727430792744117*^9, {3.727430844015986*^9, 3.72743086825692*^9}, {
   3.727435921951792*^9, 3.727435928127816*^9}, {3.727435989113798*^9, 
   3.727435990152746*^9}, {3.727440645712977*^9, 3.72744064973628*^9}, 
   3.727440900797185*^9, {3.727441441830037*^9, 3.727441489781925*^9}, {
   3.727441549095484*^9, 3.7274415558390417`*^9}, {3.74350605299688*^9, 
   3.743506054597587*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
  "3.763181332911958`", ",", "3.7518435696663435`", ",", "3.74067477475388`", 
   ",", "3.7296741825826576`", ",", "3.718840436017753`", ",", 
   "3.7081717027404326`", ",", "3.697665773634211`", ",", 
   "3.6873201471683714`", ",", "3.6771320964440526`", ",", 
   "3.6670987219054907`", ",", "3.6572169979301856`", ",", 
   "3.637896007371223`", ",", "3.609972880986729`", ",", "3.583243567833084`",
    ",", "3.557624939878538`", ",", "3.533038410955702`", ",", 
   "3.5094107913671864`", ",", "3.4866745396362857`", ",", 
   "3.464767673116813`", ",", "3.4436334932418915`", ",", 
   "3.423220221697599`", ",", "3.403480600482261`", ",", "3.384371489786864`",
    ",", "3.3658534815309187`", ",", "3.3478905379797643`", ",", 
   "3.3307403962053574`", ",", "3.3145408408882395`", ",", 
   "3.2987241587813605`", ",", "3.283273007458792`", ",", 
   "3.2681711376152407`", ",", "3.2534033065183103`", ",", 
   "3.2389551999786637`", ",", "3.224813360156021`", ",", 
   "3.210965119705163`", ",", "3.1973985417840636`", ",", 
   "3.184102365180179`", ",", "3.171065956267937`", ",", "3.158279262654146`",
    ",", "3.145732767449939`", ",", "3.1334174596594244`", ",", 
   "3.1213247921467273`", ",", "3.109446651602164`", ",", 
   "3.0977753335576863`", ",", "3.086303508214484`", ",", "3.07502420325843`",
    ",", "3.063930776529459`", ",", "3.0530168962326854`", ",", 
   "3.042276524368965`", ",", "3.031703894001095`", ",", "3.021293499212745`",
    ",", "3.01104007372912`", ",", "3.000938582360552`", ",", 
   "2.9909842039083627`", ",", "2.981172321787519`", ",", 
   "2.9714985115200356`", ",", "2.96195853173295`", ",", 
   "2.952548310917463`"}], "}"}]], "Output",
 CellChangeTimes->{
  3.727430794938345*^9, {3.727430847248849*^9, 3.727430884327338*^9}, 
   3.72743592889662*^9, 3.7274359905230417`*^9, 3.7274406531364183`*^9, 
   3.7274409014406137`*^9, {3.727441454899707*^9, 3.727441490492607*^9}, 
   3.727441556474641*^9, 3.7276062557522497`*^9, 3.7276081615624523`*^9, 
   3.727608365761633*^9, 3.727701017406023*^9, 3.7333934903492393`*^9, 
   3.743742133361291*^9, 3.743744632817905*^9, 3.7453261678866367`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"2", "Mc"}], "+", 
  RowBox[{"Table", "[", 
   RowBox[{
    RowBox[{"ReVsb", "[", 
     RowBox[{"100000", ",", 
      RowBox[{"mDcal", "[", 
       RowBox[{
        RowBox[{"2", "\[Pi]"}], ",", 
        RowBox[{"Tscancorig", "[", 
         RowBox[{"[", "i", "]"}], "]"}], ",", 
        RowBox[{"kfinall", "[", 
         RowBox[{"[", "1", "]"}], "]"}], ",", 
        RowBox[{"kfinall", "[", 
         RowBox[{"[", "2", "]"}], "]"}]}], "]"}], ",", 
      RowBox[{"\[Alpha]cont", "[", 
       RowBox[{"[", "1", "]"}], "]"}], ",", 
      RowBox[{"\[Sigma]cont", "[", 
       RowBox[{"[", "1", "]"}], "]"}], ",", 
      RowBox[{"ccont", "[", 
       RowBox[{"[", "1", "]"}], "]"}]}], "]"}], ",", 
    RowBox[{"{", 
     RowBox[{"i", ",", "1", ",", 
      RowBox[{"Length", "[", "Tscancorig", "]"}]}], "}"}]}], "]"}]}]], "Input",\

 CellChangeTimes->{{3.727415329654827*^9, 3.727415395125635*^9}, {
   3.727419032739399*^9, 3.72741906893994*^9}, {3.727421895354998*^9, 
   3.727421965803722*^9}, {3.7274307503359957`*^9, 3.727430756438754*^9}, 
   3.727430792744117*^9, {3.727430844015986*^9, 3.72743086825692*^9}, {
   3.727435921951792*^9, 3.727435928127816*^9}, {3.727435989113798*^9, 
   3.727435990152746*^9}, {3.727440645712977*^9, 3.72744064973628*^9}, 
   3.727440900797185*^9, {3.727441441830037*^9, 3.727441489781925*^9}, {
   3.727441549095484*^9, 3.7274415558390417`*^9}, {3.727701046035239*^9, 
   3.727701049032592*^9}, {3.743506060571969*^9, 3.743506060883605*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
  "3.763181332911958`", ",", "3.7518435696663435`", ",", "3.74067477475388`", 
   ",", "3.7296741825826576`", ",", "3.718840436017753`", ",", 
   "3.7081717027404326`", ",", "3.697665773634211`", ",", 
   "3.6873201471683714`", ",", "3.6771320964440526`", ",", 
   "3.6670987219054907`", ",", "3.6572169979301856`", ",", 
   "3.637896007371223`", ",", "3.609972880986729`", ",", "3.583243567833084`",
    ",", "3.557624939878538`", ",", "3.533038410955702`", ",", 
   "3.5094107913671864`", ",", "3.4866745396362857`", ",", 
   "3.464767673116813`", ",", "3.4436334932418915`", ",", 
   "3.423220221697599`", ",", "3.403480600482261`", ",", "3.384371489786864`",
    ",", "3.3658534815309187`", ",", "3.3478905379797643`", ",", 
   "3.3307403962053574`", ",", "3.3145408408882395`", ",", 
   "3.2987241587813605`", ",", "3.283273007458792`", ",", 
   "3.2681711376152407`", ",", "3.2534033065183103`", ",", 
   "3.2389551999786637`", ",", "3.224813360156021`", ",", 
   "3.210965119705163`", ",", "3.1973985417840636`", ",", 
   "3.184102365180179`", ",", "3.171065956267937`", ",", "3.158279262654146`",
    ",", "3.145732767449939`", ",", "3.1334174596594244`", ",", 
   "3.1213247921467273`", ",", "3.109446651602164`", ",", 
   "3.0977753335576863`", ",", "3.086303508214484`", ",", "3.07502420325843`",
    ",", "3.063930776529459`", ",", "3.0530168962326854`", ",", 
   "3.042276524368965`", ",", "3.031703894001095`", ",", "3.021293499212745`",
    ",", "3.01104007372912`", ",", "3.000938582360552`", ",", 
   "2.9909842039083627`", ",", "2.981172321787519`", ",", 
   "2.9714985115200356`", ",", "2.96195853173295`", ",", 
   "2.952548310917463`"}], "}"}]], "Output",
 CellChangeTimes->{3.7277010503471737`*^9, 3.733393492727314*^9, 
  3.743742135125255*^9, 3.743744635617934*^9, 3.7453261710920258`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"2", "Mc"}], "+", 
  RowBox[{"Table", "[", 
   RowBox[{
    RowBox[{"ReVsb", "[", 
     RowBox[{"100000", ",", 
      RowBox[{"mDcal", "[", 
       RowBox[{
        RowBox[{"2", "\[Pi]"}], ",", 
        RowBox[{"Tscancorig", "[", 
         RowBox[{"[", "i", "]"}], "]"}], ",", 
        RowBox[{"kfinalu", "[", 
         RowBox[{"[", "1", "]"}], "]"}], ",", 
        RowBox[{"kfinalu", "[", 
         RowBox[{"[", "2", "]"}], "]"}]}], "]"}], ",", 
      RowBox[{"\[Alpha]cont", "[", 
       RowBox[{"[", "1", "]"}], "]"}], ",", 
      RowBox[{"\[Sigma]cont", "[", 
       RowBox[{"[", "1", "]"}], "]"}], ",", 
      RowBox[{"ccont", "[", 
       RowBox[{"[", "1", "]"}], "]"}]}], "]"}], ",", 
    RowBox[{"{", 
     RowBox[{"i", ",", "1", ",", 
      RowBox[{"Length", "[", "Tscancorig", "]"}]}], "}"}]}], "]"}]}]], "Input",\

 CellChangeTimes->{{3.727415329654827*^9, 3.727415395125635*^9}, {
   3.727419032739399*^9, 3.72741906893994*^9}, {3.727421895354998*^9, 
   3.727421965803722*^9}, {3.7274307503359957`*^9, 3.727430756438754*^9}, 
   3.727430792744117*^9, {3.727430844015986*^9, 3.72743086825692*^9}, {
   3.727435921951792*^9, 3.727435928127816*^9}, {3.727435989113798*^9, 
   3.727435990152746*^9}, {3.727440645712977*^9, 3.72744064973628*^9}, 
   3.727440900797185*^9, {3.727441441830037*^9, 3.727441489781925*^9}, {
   3.727441549095484*^9, 3.7274415558390417`*^9}, {3.727701046035239*^9, 
   3.727701049032592*^9}, {3.727701100776236*^9, 3.727701103498499*^9}, {
   3.74350606216481*^9, 3.743506062444581*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
  "3.5791830387522943`", ",", "3.567289138433294`", ",", 
   "3.5556503723789357`", ",", "3.5442576206893737`", ",", 
   "3.533102065065233`", ",", "3.5221751972169515`", ",", 
   "3.5114688237828506`", ",", "3.500975069369446`", ",", 
   "3.4906863731702398`", ",", "3.4805954807013757`", ",", 
   "3.4706954368624583`", ",", "3.451441532866215`", ",", 
   "3.4238344753291066`", ",", "3.397623014576678`", ",", 
   "3.3726745497632846`", ",", "3.3488727583081506`", ",", 
   "3.3261154051794732`", ",", "3.3043124125383376`", ",", 
   "3.2833841867442826`", ",", "3.263260181060541`", ",", 
   "3.2438776687450175`", ",", "3.2251806963547076`", ",", 
   "3.207119192276581`", ",", "3.1896482068439953`", ",", 
   "3.1727272637065087`", ",", "3.1565330090648005`", ",", 
   "3.14114900505712`", ",", "3.1261475577959037`", ",", 
   "3.1115088396473602`", ",", "3.097214471583686`", ",", 
   "3.0832473857203793`", ",", "3.069591704316709`", ",", 
   "3.0562326316670503`", ",", "3.043156357895957`", ",", 
   "3.030349973192077`", ",", "3.01780139102723`", ",", "3.0054992807235235`",
    ",", "2.99343300520031`", ",", "2.9815925627395403`", ",", 
   "2.969968542558579`", ",", "2.9585520747764695`", ",", 
   "2.9473347907443856`", ",", "2.936308788655026`", ",", 
   "2.925466595078078`", ",", "2.9148011390509816`", ",", 
   "2.9043057211027543`", ",", "2.893973988399696`", ",", 
   "2.8837999130001233`", ",", "2.873777767367428`", ",", 
   "2.8639021085913052`", ",", "2.85416775655554`", ",", 
   "2.8445697806038126`", ",", "2.83510348178534`", ",", 
   "2.8257643803056323`", ",", "2.8165482016992334`", ",", 
   "2.807450865542591`", ",", "2.7984684722748296`"}], "}"}]], "Output",
 CellChangeTimes->{3.7277010503471737`*^9, 3.727701104179261*^9, 
  3.733393495041349*^9, 3.7437421368192883`*^9, 3.743744636592963*^9, 
  3.745326173906633*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"2", "Mb"}], "+", 
  RowBox[{"Table", "[", 
   RowBox[{
    RowBox[{"ReVsb", "[", 
     RowBox[{"100000", ",", 
      RowBox[{"mDcal", "[", 
       RowBox[{
        RowBox[{"2", "\[Pi]"}], ",", 
        RowBox[{"Tscanborig", "[", 
         RowBox[{"[", "i", "]"}], "]"}], ",", 
        RowBox[{"kfinal", "[", 
         RowBox[{"[", "1", "]"}], "]"}], ",", 
        RowBox[{"kfinal", "[", 
         RowBox[{"[", "2", "]"}], "]"}]}], "]"}], ",", 
      RowBox[{"\[Alpha]cont", "[", 
       RowBox[{"[", "1", "]"}], "]"}], ",", 
      RowBox[{"\[Sigma]cont", "[", 
       RowBox[{"[", "1", "]"}], "]"}], ",", 
      RowBox[{"ccont", "[", 
       RowBox[{"[", "1", "]"}], "]"}]}], "]"}], ",", 
    RowBox[{"{", 
     RowBox[{"i", ",", "1", ",", 
      RowBox[{"Length", "[", "Tscanborig", "]"}]}], "}"}]}], "]"}]}]], "Input",\

 CellChangeTimes->{{3.727422276937283*^9, 3.727422316833344*^9}, {
  3.727436086210723*^9, 3.727436090850267*^9}, {3.727436126467115*^9, 
  3.727436128483083*^9}, {3.727441501086624*^9, 3.727441564686953*^9}, {
  3.7435060639965477`*^9, 3.743506065563201*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
  "10.58923628377765`", ",", "10.534226653606126`", ",", 
   "10.483271948795878`", ",", "10.436027831852423`", ",", 
   "10.392100981483651`", ",", "10.351114394832186`", ",", 
   "10.31272949050198`", ",", "10.276650609682116`", ",", 
   "10.24262265998009`", ",", "10.210426440652556`", ",", 
   "10.179873558932522`", ",", "10.151351836066674`", ",", 
   "10.124779109647054`", ",", "10.099222196348231`", ",", 
   "10.074607378577106`", ",", "10.050868311021715`", ",", 
   "10.027945098041112`", ",", "10.005783491956423`", ",", 
   "9.984334213519839`", ",", "9.963552362989178`", ",", "9.943396915218841`",
    ",", "9.92383028442338`", ",", "9.904817948228562`", ",", 
   "9.886328121909221`", ",", "9.868331475234658`", ",", "9.850800885553422`",
    ",", "9.833711221790352`", ",", "9.817039154774056`", ",", 
   "9.800762989788248`", ",", "9.78486252068906`", ",", "9.769318895519934`", 
   ",", "9.754114502501272`", ",", "9.739232867357634`", ",", 
   "9.724658557243744`", ",", "9.71037709821086`", ",", "9.696374902529463`", 
   ",", "9.682639197706262`", ",", "9.669157966194666`", ",", 
   "9.655919891674172`", ",", "9.642914305398403`", ",", "9.630131142495102`",
    ",", "9.617560899567092`", ",", "9.605194594755673`", ",", 
   "9.593023735158647`", ",", "9.581040281820588`", ",", "9.56923662195106`", 
   ",", "9.55760554066793`", ",", "9.546140195597411`", ",", 
   "9.534834094498203`", ",", "9.52368107219188`", ",", "9.512675272330092`", 
   ",", "9.501811127015541`", ",", "9.491083341361769`", ",", 
   "9.480486875835359`", ",", "9.470016932862476`", ",", "9.459668941593367`",
    ",", "9.44943854620343`", ",", "9.439321592674228`", ",", 
   "9.429314118581926`", ",", "9.419412341545232`", ",", "9.40961265030515`", 
   ",", "9.399911594606197`", ",", "9.390305877331679`", ",", 
   "9.380792345702346`", ",", "9.371367984202703`", ",", "9.362029907041354`",
    ",", "9.352775351644434`", ",", "9.34360167229153`", ",", 
   "9.334506334071014`", ",", "9.325486907469063`", ",", "9.31654106290543`", 
   ",", "9.307666565945729`", ",", "9.298861272458458`", ",", 
   "9.290123124350437`", ",", "9.281450145270922`", ",", "9.272840436784044`",
    ",", "9.264292174577834`", ",", "9.255803605002086`", ",", 
   "9.247373041726298`", ",", "9.238998862609098`", ",", "9.23067950672692`", 
   ",", "9.222413471569432`", ",", "9.214199310361348`", ",", 
   "9.206035629567364`", ",", "9.197921086474913`", ",", "9.18985438694353`", 
   ",", "9.181834283265156`", ",", "9.173859572105156`", ",", 
   "9.165929092579036`", ",", "9.158041724415769`", ",", 
   "9.150196386213752`"}], "}"}]], "Output",
 CellChangeTimes->{{3.727422278964765*^9, 3.727422317765297*^9}, 
   3.727436091516931*^9, 3.72743612877216*^9, {3.727441513483501*^9, 
   3.727441532911517*^9}, 3.7274415653440447`*^9, 3.72760695509595*^9, 
   3.743742179241749*^9, 3.745326175676339*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"2", "Mb"}], "+", 
  RowBox[{"Table", "[", 
   RowBox[{
    RowBox[{"ReV", "[", 
     RowBox[{"100000", ",", 
      RowBox[{"mDcal", "[", 
       RowBox[{
        RowBox[{"2", "\[Pi]"}], ",", 
        RowBox[{"Tscanborig", "[", 
         RowBox[{"[", "i", "]"}], "]"}], ",", 
        RowBox[{"kfinall", "[", 
         RowBox[{"[", "1", "]"}], "]"}], ",", 
        RowBox[{"kfinall", "[", 
         RowBox[{"[", "2", "]"}], "]"}]}], "]"}], ",", 
      RowBox[{"\[Alpha]cont", "[", 
       RowBox[{"[", "1", "]"}], "]"}], ",", 
      RowBox[{"\[Sigma]cont", "[", 
       RowBox[{"[", "1", "]"}], "]"}], ",", 
      RowBox[{"ccont", "[", 
       RowBox[{"[", "1", "]"}], "]"}]}], "]"}], ",", 
    RowBox[{"{", 
     RowBox[{"i", ",", "1", ",", 
      RowBox[{"Length", "[", "Tscanborig", "]"}]}], "}"}]}], "]"}]}]], "Input",\

 CellChangeTimes->{{3.727701620681362*^9, 3.7277016228229237`*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
  "11.37690860675615`", ",", "11.133758350670227`", ",", 
   "10.953960335622138`", ",", "10.814107578444037`", ",", 
   "10.701167689825878`", ",", "10.607292417224789`", ",", 
   "10.52746319350613`", ",", "10.458314872854425`", ",", 
   "10.39750233282896`", ",", "10.343338248555575`", ",", 
   "10.294575461050309`", ",", "10.25109165466662`", ",", 
   "10.212152072986566`", ",", "10.175984055081795`", ",", 
   "10.142222434511147`", ",", "10.110566228260826`", ",", 
   "10.080764867289595`", ",", "10.052607848051313`", ",", 
   "10.025916866765758`", ",", "10.000539750505004`", ",", 
   "9.97634572778627`", ",", "9.953221702457093`", ",", "9.931069289699568`", 
   ",", "9.909802436992523`", ",", "9.889345498680433`", ",", 
   "9.869631665599941`", ",", "9.850601675077675`", ",", "9.832202744014436`",
    ",", "9.81438768053418`", ",", "9.79711414254867`", ",", 
   "9.780344008177279`", ",", "9.764042848838171`", ",", "9.748179480147519`",
    ",", "9.73272557378001`", ",", "9.717655328220134`", ",", 
   "9.702945186703925`", ",", "9.688573587571355`", ",", "9.674520751491638`",
    ",", "9.660768497011924`", ",", "9.647300074286735`", ",", 
   "9.634100024473295`", ",", "9.621154053441245`", ",", "9.608448919099745`",
    ",", "9.595972335739521`", ",", "9.583712883962274`", ",", 
   "9.571659934976346`", ",", "9.559803580377501`", ",", "9.548134570016122`",
    ",", "9.536644257410618`", ",", "9.525324548328694`", ",", 
   "9.514167857651648`", ",", "9.503167066989114`", ",", "9.492315489860067`",
    ",", "9.481606836860832`", ",", "9.47103518710574`", ",", 
   "9.460594959520506`", ",", "9.450280889215538`", ",", "9.44008800365047`", 
   ",", "9.430011603000013`", ",", "9.420047240198961`", ",", 
   "9.410190704548265`", ",", "9.400438004919438`", ",", "9.390785355939638`",
    ",", "9.381229163866617`", ",", "9.371766014761114`", ",", 
   "9.36239266268907`", ",", "9.353106019404594`", ",", "9.343903144570156`", 
   ",", "9.334781236648817`", ",", "9.325737624745503`", ",", 
   "9.316769760674456`", ",", "9.307875211954903`", ",", "9.299051654974537`",
    ",", "9.290296868932524`", ",", "9.281608729929888`", ",", 
   "9.272985205689324`", ",", "9.264424350455254`", ",", "9.255924300352044`",
    ",", "9.247483268978087`", ",", "9.239099543315492`", ",", 
   "9.230771479892514`", ",", "9.222497501196802`", ",", "9.214276092290644`",
    ",", "9.206105797677424`", ",", "9.197985218307117`", ",", 
   "9.18991300880364`", ",", "9.181887874852894`", ",", "9.173908570716351`", 
   ",", "9.165973896920834`", ",", "9.158082698071423`", ",", 
   "9.150233860789964`"}], "}"}]], "Output",
 CellChangeTimes->{3.72770162335463*^9, 3.743742181075818*^9, 
  3.745326178130927*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"2", "Mb"}], "+", 
  RowBox[{"Table", "[", 
   RowBox[{
    RowBox[{"ReV", "[", 
     RowBox[{"100000", ",", 
      RowBox[{"mDcal", "[", 
       RowBox[{
        RowBox[{"2", "\[Pi]"}], ",", 
        RowBox[{"Tscanborig", "[", 
         RowBox[{"[", "i", "]"}], "]"}], ",", 
        RowBox[{"kfinalu", "[", 
         RowBox[{"[", "1", "]"}], "]"}], ",", 
        RowBox[{"kfinalu", "[", 
         RowBox[{"[", "2", "]"}], "]"}]}], "]"}], ",", 
      RowBox[{"\[Alpha]cont", "[", 
       RowBox[{"[", "1", "]"}], "]"}], ",", 
      RowBox[{"\[Sigma]cont", "[", 
       RowBox[{"[", "1", "]"}], "]"}], ",", 
      RowBox[{"ccont", "[", 
       RowBox[{"[", "1", "]"}], "]"}]}], "]"}], ",", 
    RowBox[{"{", 
     RowBox[{"i", ",", "1", ",", 
      RowBox[{"Length", "[", "Tscanborig", "]"}]}], "}"}]}], "]"}]}]], "Input",\

 CellChangeTimes->{{3.7277016586540737`*^9, 3.727701661137645*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
  "10.733471264419798`", ",", "10.601042450894274`", ",", 
   "10.496194206789603`", ",", "10.410163166482977`", ",", 
   "10.337606410601257`", ",", "10.275071734605609`", ",", 
   "10.220223394953713`", ",", "10.171420630768415`", ",", 
   "10.127474412799389`", ",", "10.087500117852997`", ",", 
   "10.050824623602853`", ",", "10.017418259253223`", ",", 
   "9.986867208494267`", ",", "9.95811743138849`", ",", "9.930951988942066`", 
   ",", "9.905189335634025`", ",", "9.880676204694083`", ",", 
   "9.857282158882251`", ",", "9.834895377234453`", ",", "9.813419351538418`",
    ",", "9.792770273632954`", ",", "9.772874948354755`", ",", 
   "9.753669111814911`", ",", "9.735096065154668`", ",", "9.717105556164142`",
    ",", "9.69965285731419`", ",", "9.68269800069132`", ",", 
   "9.666205139148632`", ",", "9.650142009548773`", ",", "9.634479480724313`",
    ",", "9.619191166878018`", ",", "9.60425310103977`", ",", 
   "9.589643454632235`", ",", "9.575342293898457`", ",", "9.561331371466018`",
    ",", "9.547593946251913`", ",", "9.534114623959331`", ",", 
   "9.520879219707867`", ",", "9.507874637939612`", ",", "9.495088764650436`",
    ",", "9.482510374622207`", ",", "9.470129048202965`", ",", 
   "9.457935097105425`", ",", "9.445919499871376`", ",", "9.434073842484448`",
    ",", "9.422390266813979`", ",", "9.410861423509061`", ",", 
   "9.399480429956697`", ",", "9.388240832668831`", ",", "9.377136572845517`",
    ",", "9.366161955873023`", ",", "9.355311623115119`", ",", 
   "9.344580526811967`", ",", "9.33396390692256`", ",", "9.323457270249204`", 
   ",", "9.313056371334923`", ",", "9.302757194964805`", ",", 
   "9.292555940327167`", ",", "9.28244900623269`", ",", "9.272432977932091`", 
   ",", "9.262504614529453`", ",", "9.252660837975004`", ",", 
   "9.242898722282563`", ",", "9.233215484269445`", ",", "9.22360847433725`", 
   ",", "9.214075168533466`", ",", "9.204613160787419`", ",", 
   "9.195220155882808`", ",", "9.18589396308152`", ",", "9.176632489780635`", 
   ",", "9.167433736204565`", ",", "9.158295789809722`", ",", 
   "9.149216820786384`", ",", "9.140195077085489`", ",", "9.131228880607853`",
    ",", "9.122316622812127`", ",", "9.113456761383405`", ",", 
   "9.10464781647803`", ",", "9.095888367634386`", ",", "9.08717705073061`", 
   ",", "9.078512554959204`", ",", "9.069893620479226`", ",", 
   "9.061319035461572`", ",", "9.052787634186481`", ",", "9.044298294443827`",
    ",", "9.035849935635342`", ",", "9.027441516827041`", ",", 
   "9.019072034759612`", ",", "9.010740522178438`", ",", "9.002446046176203`",
    ",", "8.994187706631605`"}], "}"}]], "Output",
 CellChangeTimes->{3.743742183230177*^9, 3.745326179665771*^9}]
}, Open  ]]
}, Closed]],

Cell[CellGroupData[{

Cell["Spectra without string-breaking", "Section",
 CellChangeTimes->{{3.727415296394449*^9, 3.727415310980733*^9}, {
  3.727438974368733*^9, 3.7274389775611553`*^9}, {3.7274415699177094`*^9, 
  3.727441571125741*^9}, {3.745577449918088*^9, 3.745577465526945*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"ImV", "[", 
    RowBox[{"r_", ",", "mD_", ",", "\[Alpha]_", ",", "\[Sigma]_", ",", "T_"}],
     "]"}], ":=", 
   RowBox[{
    RowBox[{"T", " ", "\[Alpha]", " ", 
     RowBox[{"(", 
      RowBox[{"1", "-", 
       RowBox[{
        FractionBox["1", "2"], " ", 
        SqrtBox["\[Pi]"], " ", 
        RowBox[{"MeijerG", "[", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{
            RowBox[{"{", "0", "}"}], ",", 
            RowBox[{"{", "}"}]}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"{", 
             RowBox[{"0", ",", "1"}], "}"}], ",", 
            RowBox[{"{", 
             RowBox[{"-", 
              FractionBox["1", "2"]}], "}"}]}], "}"}], ",", 
          FractionBox[
           RowBox[{
            SuperscriptBox["mD", "2"], " ", 
            SuperscriptBox["r", "2"]}], "4"]}], "]"}]}]}], ")"}]}], "+", 
    RowBox[{
     FractionBox["1", "4"], " ", "mD", " ", 
     SqrtBox["\[Pi]"], " ", 
     SuperscriptBox["r", "3"], " ", "T", " ", "\[Sigma]", " ", 
     RowBox[{"MeijerG", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{
           RowBox[{"-", 
            FractionBox["1", "2"]}], ",", 
           RowBox[{"-", 
            FractionBox["1", "2"]}]}], "}"}], ",", 
         RowBox[{"{", "}"}]}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{
           FractionBox["1", "2"], ",", 
           FractionBox["1", "2"]}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"-", 
            FractionBox["3", "2"]}], ",", 
           RowBox[{"-", "1"}]}], "}"}]}], "}"}], ",", 
       FractionBox[
        RowBox[{
         SuperscriptBox["mD", "2"], " ", 
         SuperscriptBox["r", "2"]}], "4"]}], "]"}]}]}]}], ";"}]], "Input"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"ImVc", "[", 
  RowBox[{"1000000", ",", 
   RowBox[{"mDcal", "[", 
    RowBox[{
     RowBox[{"2", "\[Pi]"}], ",", "0.155", ",", 
     RowBox[{"kfinal", "[", 
      RowBox[{"[", "1", "]"}], "]"}], ",", 
     RowBox[{"kfinal", "[", 
      RowBox[{"[", "2", "]"}], "]"}]}], "]"}], ",", 
   RowBox[{"\[Alpha]cont", "[", 
    RowBox[{"[", "1", "]"}], "]"}], ",", "0.155"}], "]"}]], "Input",
 CellChangeTimes->{{3.745577872707444*^9, 3.745577874393169*^9}, {
  3.74557964044923*^9, 3.7455796426334267`*^9}, {3.745579711091261*^9, 
  3.7455797233061247`*^9}, {3.745579812379731*^9, 3.745579827661113*^9}}],

Cell[BoxData["0.07976306974654478`"], "Output",
 CellChangeTimes->{{3.745579821155539*^9, 3.745579828142853*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Block", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"mD", "=", 
     RowBox[{"mDcal", "[", 
      RowBox[{
       RowBox[{"2", "\[Pi]"}], ",", "0.155", ",", 
       RowBox[{"kfinal", "[", 
        RowBox[{"[", "1", "]"}], "]"}], ",", 
       RowBox[{"kfinal", "[", 
        RowBox[{"[", "2", "]"}], "]"}]}], "]"}]}], "}"}], ",", 
   RowBox[{"Show", "[", 
    RowBox[{"DiscretePlot", "[", 
     RowBox[{
      RowBox[{"ImVc", "[", 
       RowBox[{
        FractionBox["r", "0.197"], ",", "mD", ",", 
        RowBox[{"\[Alpha]cont", "[", 
         RowBox[{"[", "1", "]"}], "]"}], ",", "0.155"}], "]"}], ",", 
      RowBox[{"{", 
       RowBox[{"r", ",", "1", ",", "100", ",", "1"}], "}"}], ",", 
      RowBox[{"Joined", "\[Rule]", "True"}], ",", 
      RowBox[{"Filling", "\[Rule]", "None"}], ",", 
      RowBox[{"AxesStyle", "\[Rule]", 
       RowBox[{"Directive", "[", 
        RowBox[{
         RowBox[{"FontSize", "\[Rule]", "25"}], ",", 
         RowBox[{"Thickness", "\[Rule]", "0.004"}], ",", 
         RowBox[{"FontFamily", "\[Rule]", "\"\<Helvetica\>\""}], ",", 
         "Black"}], "]"}]}], ",", 
      RowBox[{"BaseStyle", "\[Rule]", 
       RowBox[{"{", 
        RowBox[{"FontSize", "\[Rule]", "14"}], "}"}]}], ",", 
      RowBox[{"PlotRange", "\[Rule]", "All"}], ",", 
      RowBox[{"AspectRatio", "\[Rule]", "0.85"}], ",", 
      RowBox[{"AxesLabel", "\[Rule]", 
       RowBox[{"{", 
        RowBox[{"\"\<r [fm]\>\"", ",", "\"\<Im[V]\>\""}], "}"}]}], ",", 
      RowBox[{"PlotLabel", "\[Rule]", 
       RowBox[{"Style", "[", 
        RowBox[{"\"\<T=150MeV\>\"", ",", 
         RowBox[{"FontSize", "\[Rule]", "25"}], ",", 
         RowBox[{"FontFamily", "\[Rule]", "\"\<Helvetica\>\""}], ",", 
         "Black"}], "]"}]}], ",", 
      RowBox[{"ImageSize", "\[Rule]", 
       RowBox[{"{", 
        RowBox[{"600", ",", "600"}], "}"}]}]}], "]"}], "]"}]}], 
  "]"}]], "Input",
 CellChangeTimes->{{3.745577653292407*^9, 3.745577656044977*^9}, {
  3.745577794695994*^9, 3.7455778033519907`*^9}, {3.745577837697983*^9, 
  3.745577861602961*^9}, {3.7455797727340918`*^9, 3.745579808974224*^9}}],

Cell[BoxData[
 GraphicsBox[{
   {RGBColor[0.368417, 0.506779, 0.709798], PointSize[0.004766666666666667], 
    AbsoluteThickness[1.6]}, 
   {RGBColor[0.368417, 0.506779, 0.709798], PointSize[0.004766666666666667], 
    AbsoluteThickness[1.6], LineBox[CompressedData["
1:eJw9y2tM02cYxuG/tCOICYENBQZjFUUIQ5ECcijYu5wpp9JS2jKxyARHMeBm
NYsj2B3E4zDgWIkiwQ94qKVCkajZllQMViGYzGRbAJmTxIlRM5ZMDRPD+NDn
eZPnw/Xe+a2taVLXigRBWLF8O5fPS6A3Lz92eFx1L+K03POBB6LQHYGPLnrs
g2/rbXnnHVc89ofduLfB4Bj0OBCBVQ//nHY4PQ6Gy/rUPSgf8jgM9jemkeFO
sgRHk8qqnePkCETeq6/d8zd5PWwDbxoUPlc93gDhxJRE+j45Gvsqw7zORJFj
4DbLtHPx5FgUovexkEbehJIWv5vNIG+Gxr7UdiuHHA+9bfC9cCVZii7xOqer
mJyAF5LIl7+oyIn40Xv1SKOGnASHb/qH/VryFoQlqFf36MjJELVsfFtiIKfA
+lVHw1glORWzXnengreR02DuPrBBUUWWoci+/0n+dnI6Ope+u55oJGdgj3vS
5FNN3gpT/+RGN1uOy18ed+zdQQZCzl6I86/x2AL4XUk720MWFLhxLeCM5BPa
FdA+ud1uJQuZ8JNJr4t30p6JUe+DofVkIQvPgob7RnnPwlxU0LrQWtqzcUvd
kWsiW7Lx8YXd/UO850DSr5t9zXsOgrtE1cl1tOfCV6Y89TnZkousWPHMJd7z
4L/ww6kZ3vMgaPPFfrtoz0ecy2iWkS35SOxbG1HHewE0r3tz2ngvwPzj5oCr
vCtx/1LL0O+8K7EyK1K7wHshjMPhYSGf0l6I0VeDMclkoQirLof2angvworv
H3Y18l6MjBT/uCO8F2N+TduBXt5LYG2Vt1/jvQSZ8ZmHJ3gvxX/eQU2zvJfC
qLpreMW7Che/CdCtrPcYKkxUmfeFki0qTA9tH4klu1RYNG5VZpCFMhSe6wou
5r4MnanhKdu4L8PssZ+dJu7L8PaFs/0L7tXINVtnDnGvRrSisaeDezV+Ozcw
3cO9Gj+9Y+i2ca/B/pfP/xrmXoPFiNabLu41aLZNxY9zr8GDruyMX7kvx8mx
O3N/cF+OqIQPUue4L0dlt0P6D/flOPi0b3KBey02P3se72WiXoueCancl2zR
YilmXvwu2aVF35ipNYQsVEAceOO2hPsKtKeP3onivgIDW1QnN3Ffgcm6f8OS
uNfh6Ppos4x7HUSrYFVwr0NK+GdH8rjXQee+X1DMvR677dUzau718K9bzNZz
r4doTdPXVdzr8dEjk7WGewPSS08c2rXs/wHPUL39
     "]], {}, {}}},
  AspectRatio->0.85,
  Axes->True,
  AxesLabel->{
    FormBox["\"r [fm]\"", TraditionalForm], 
    FormBox["\"Im[V]\"", TraditionalForm]},
  AxesOrigin->{1., 0.025523399049127295`},
  AxesStyle->Directive[
   FontSize -> 25, Thickness -> 0.004, FontFamily -> "Helvetica", 
    GrayLevel[0]],
  BaseStyle->{FontSize -> 14},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  ImageSize->{600, 600},
  Method->{
   "MessagesHead" -> DiscretePlot, "AxisPadding" -> Scaled[0.02], 
    "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
    AbsolutePointSize[6], "DefaultPlotStyle" -> {
      Directive[
       RGBColor[0.368417, 0.506779, 0.709798], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.880722, 0.611041, 0.142051], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.560181, 0.691569, 0.194885], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.922526, 0.385626, 0.209179], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.528488, 0.470624, 0.701351], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.772079, 0.431554, 0.102387], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.363898, 0.618501, 0.782349], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[1, 0.75, 0], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.647624, 0.37816, 0.614037], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.571589, 0.586483, 0.], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.915, 0.3325, 0.2125], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.40082222609352647`, 0.5220066643438841, 0.85], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.9728288904374106, 0.621644452187053, 0.07336199581899142], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.736782672705901, 0.358, 0.5030266573755369], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.28026441037696703`, 0.715, 0.4292089322474965], 
       AbsoluteThickness[1.6]]}, "DomainPadding" -> Scaled[0.02], 
    "PointSizeFunction" -> "SmallPointSize", "RangePadding" -> Scaled[0.05]},
  PlotLabel->FormBox[
    StyleBox["\"T=150MeV\"", FontSize -> 25, FontFamily -> "Helvetica", 
     GrayLevel[0], StripOnInput -> False], TraditionalForm],
  PlotRange->{{1., 100.}, {0.025523399049127295`, 0.07974860201312323}},
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.02], 
     Scaled[0.02]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{
  3.745577810841693*^9, {3.745577844395257*^9, 3.745577864054736*^9}, 
   3.7455797792488832`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"Series", "[", 
   RowBox[{
    RowBox[{
     FractionBox["1", "4"], " ", "mD", " ", 
     SqrtBox["\[Pi]"], " ", 
     SuperscriptBox["r", "3"], " ", "T", " ", "\[Sigma]", " ", 
     RowBox[{"MeijerG", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{
           RowBox[{"-", 
            FractionBox["1", "2"]}], ",", 
           RowBox[{"-", 
            FractionBox["1", "2"]}]}], "}"}], ",", 
         RowBox[{"{", "}"}]}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{
           FractionBox["1", "2"], ",", 
           FractionBox["1", "2"]}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"-", 
            FractionBox["3", "2"]}], ",", 
           RowBox[{"-", "1"}]}], "}"}]}], "}"}], ",", 
       FractionBox[
        RowBox[{
         SuperscriptBox["mD", "2"], " ", 
         SuperscriptBox["r", "2"]}], "4"]}], "]"}]}], ",", 
    RowBox[{"{", 
     RowBox[{"r", ",", "\[Infinity]", ",", "10"}], "}"}]}], "]"}], "//", 
  "FullSimplify"}]], "Input",
 CellChangeTimes->{{3.745580045184705*^9, 3.745580054032996*^9}, {
   3.745580114875794*^9, 3.745580122327056*^9}, 3.745580324784594*^9, {
   3.7455804302667933`*^9, 3.745580430387451*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{
   SuperscriptBox["\[ExponentialE]", 
    RowBox[{
     RowBox[{"-", "\[ImaginaryI]"}], " ", 
     SqrtBox[
      RowBox[{"-", 
       SuperscriptBox["mD", "2"]}]], " ", "r"}]], " ", 
   RowBox[{"(", 
    InterpretationBox[
     RowBox[{
      FractionBox[
       RowBox[{"mD", " ", "T", " ", "\[Sigma]", " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{
           RowBox[{"-", "\[ImaginaryI]"}], " ", "\[Pi]"}], "+", 
          RowBox[{"Log", "[", 
           RowBox[{"-", 
            SuperscriptBox["mD", "2"]}], "]"}], "-", 
          RowBox[{"Log", "[", 
           SuperscriptBox["mD", "2"], "]"}]}], ")"}], " ", 
        SuperscriptBox["r", "2"]}], 
       RowBox[{"4", " ", 
        SqrtBox[
         SuperscriptBox["mD", "2"]]}]], "-", 
      FractionBox[
       RowBox[{"3", " ", 
        RowBox[{"(", 
         RowBox[{"mD", " ", "T", " ", "\[Sigma]", " ", 
          RowBox[{"(", 
           RowBox[{"\[Pi]", "+", 
            RowBox[{"\[ImaginaryI]", " ", 
             RowBox[{"Log", "[", 
              RowBox[{"-", 
               SuperscriptBox["mD", "2"]}], "]"}]}], "-", 
            RowBox[{"\[ImaginaryI]", " ", 
             RowBox[{"Log", "[", 
              SuperscriptBox["mD", "2"], "]"}]}]}], ")"}]}], ")"}], " ", 
        "r"}], 
       RowBox[{"4", " ", 
        SqrtBox[
         RowBox[{"-", 
          SuperscriptBox["mD", "4"]}]]}]], "+", 
      FractionBox[
       RowBox[{"mD", " ", "T", " ", "\[Sigma]", " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{
           RowBox[{"-", "\[ImaginaryI]"}], " ", "\[Pi]"}], "+", 
          RowBox[{"Log", "[", 
           RowBox[{"-", 
            SuperscriptBox["mD", "2"]}], "]"}], "-", 
          RowBox[{"Log", "[", 
           SuperscriptBox["mD", "2"], "]"}]}], ")"}]}], 
       SuperscriptBox[
        RowBox[{"(", 
         SuperscriptBox["mD", "2"], ")"}], 
        RowBox[{"3", "/", "2"}]]], "+", 
      InterpretationBox[
       SuperscriptBox[
        RowBox[{"O", "[", 
         FractionBox["1", "r"], "]"}], "7"],
       SeriesData[$CellContext`r, 
        DirectedInfinity[1], {}, -2, 7, 1],
       Editable->False]}],
     SeriesData[$CellContext`r, 
      DirectedInfinity[1], {
      Rational[1, 4] $CellContext`mD ($CellContext`mD^2)^
        Rational[-1, 2] $CellContext`T $CellContext`\[Sigma] (
        Complex[0, -1] Pi + Log[-$CellContext`mD^2] - Log[$CellContext`mD^2]),
        Rational[-3, 4] $CellContext`mD (-$CellContext`mD^4)^
        Rational[-1, 2] $CellContext`T $CellContext`\[Sigma] (Pi + 
        Complex[0, 1] Log[-$CellContext`mD^2] + 
        Complex[0, -1] 
         Log[$CellContext`mD^2]), $CellContext`mD ($CellContext`mD^2)^
        Rational[-3, 2] $CellContext`T $CellContext`\[Sigma] (
        Complex[0, -1] Pi + Log[-$CellContext`mD^2] - 
        Log[$CellContext`mD^2])}, -2, 7, 1],
     Editable->False], ")"}]}], "+", 
  RowBox[{
   SuperscriptBox["\[ExponentialE]", 
    RowBox[{"\[ImaginaryI]", " ", 
     SqrtBox[
      RowBox[{"-", 
       SuperscriptBox["mD", "2"]}]], " ", "r"}]], " ", 
   RowBox[{"(", 
    InterpretationBox[
     RowBox[{
      FractionBox[
       RowBox[{"mD", " ", "T", " ", "\[Sigma]", " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"\[ImaginaryI]", " ", "\[Pi]"}], "+", 
          RowBox[{"Log", "[", 
           RowBox[{"-", 
            SuperscriptBox["mD", "2"]}], "]"}], "-", 
          RowBox[{"Log", "[", 
           SuperscriptBox["mD", "2"], "]"}]}], ")"}], " ", 
        SuperscriptBox["r", "2"]}], 
       RowBox[{"4", " ", 
        SqrtBox[
         SuperscriptBox["mD", "2"]]}]], "-", 
      FractionBox[
       RowBox[{"3", " ", 
        RowBox[{"(", 
         RowBox[{"mD", " ", "T", " ", "\[Sigma]", " ", 
          RowBox[{"(", 
           RowBox[{"\[Pi]", "-", 
            RowBox[{"\[ImaginaryI]", " ", 
             RowBox[{"Log", "[", 
              RowBox[{"-", 
               SuperscriptBox["mD", "2"]}], "]"}]}], "+", 
            RowBox[{"\[ImaginaryI]", " ", 
             RowBox[{"Log", "[", 
              SuperscriptBox["mD", "2"], "]"}]}]}], ")"}]}], ")"}], " ", 
        "r"}], 
       RowBox[{"4", " ", 
        SqrtBox[
         RowBox[{"-", 
          SuperscriptBox["mD", "4"]}]]}]], "+", 
      FractionBox[
       RowBox[{
        SqrtBox[
         SuperscriptBox["mD", "2"]], " ", "T", " ", "\[Sigma]", " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"\[ImaginaryI]", " ", "\[Pi]"}], "+", 
          RowBox[{"Log", "[", 
           RowBox[{"-", 
            SuperscriptBox["mD", "2"]}], "]"}], "-", 
          RowBox[{"Log", "[", 
           SuperscriptBox["mD", "2"], "]"}]}], ")"}]}], 
       SuperscriptBox["mD", "3"]], "+", 
      InterpretationBox[
       SuperscriptBox[
        RowBox[{"O", "[", 
         FractionBox["1", "r"], "]"}], "7"],
       SeriesData[$CellContext`r, 
        DirectedInfinity[1], {}, -2, 7, 1],
       Editable->False]}],
     SeriesData[$CellContext`r, 
      DirectedInfinity[1], {
      Rational[1, 4] $CellContext`mD ($CellContext`mD^2)^
        Rational[-1, 2] $CellContext`T $CellContext`\[Sigma] (
        Complex[0, 1] Pi + Log[-$CellContext`mD^2] - Log[$CellContext`mD^2]), 
       Rational[-3, 4] $CellContext`mD (-$CellContext`mD^4)^
        Rational[-1, 2] $CellContext`T $CellContext`\[Sigma] (Pi + 
        Complex[0, -1] Log[-$CellContext`mD^2] + 
        Complex[0, 1] 
         Log[$CellContext`mD^2]), $CellContext`mD^(-3) ($CellContext`mD^2)^
        Rational[1, 2] $CellContext`T $CellContext`\[Sigma] (Complex[0, 1] Pi + 
        Log[-$CellContext`mD^2] - Log[$CellContext`mD^2])}, -2, 7, 1],
     Editable->False], ")"}]}], "+", 
  RowBox[{"(", 
   InterpretationBox[
    RowBox[{
     FractionBox[
      RowBox[{"2", " ", 
       SqrtBox[
        SuperscriptBox["mD", "2"]], " ", "T", " ", "\[Sigma]", " ", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"-", "2"}], "+", 
         RowBox[{"2", " ", "EulerGamma"}], "+", 
         RowBox[{"Log", "[", 
          SuperscriptBox["mD", "2"], "]"}], "-", 
         RowBox[{"2", " ", 
          RowBox[{"Log", "[", 
           FractionBox["1", "r"], "]"}]}]}], ")"}]}], 
      SuperscriptBox["mD", "3"]], "-", 
     FractionBox[
      RowBox[{"16", " ", 
       RowBox[{"(", 
        RowBox[{
         SqrtBox[
          SuperscriptBox["mD", "2"]], " ", "T", " ", "\[Sigma]"}], ")"}]}], 
      RowBox[{
       SuperscriptBox["mD", "5"], " ", 
       SuperscriptBox["r", "2"]}]], "-", 
     FractionBox[
      RowBox[{"216", " ", 
       RowBox[{"(", 
        RowBox[{
         SqrtBox[
          SuperscriptBox["mD", "2"]], " ", "T", " ", "\[Sigma]"}], ")"}]}], 
      RowBox[{
       SuperscriptBox["mD", "7"], " ", 
       SuperscriptBox["r", "4"]}]], "-", 
     FractionBox[
      RowBox[{"7680", " ", 
       RowBox[{"(", 
        RowBox[{
         SqrtBox[
          SuperscriptBox["mD", "2"]], " ", "T", " ", "\[Sigma]"}], ")"}]}], 
      RowBox[{
       SuperscriptBox["mD", "9"], " ", 
       SuperscriptBox["r", "6"]}]], "+", 
     InterpretationBox[
      SuperscriptBox[
       RowBox[{"O", "[", 
        FractionBox["1", "r"], "]"}], "8"],
      SeriesData[$CellContext`r, 
       DirectedInfinity[1], {}, 0, 8, 1],
      Editable->False]}],
    SeriesData[$CellContext`r, 
     DirectedInfinity[1], {
     2 $CellContext`mD^(-3) ($CellContext`mD^2)^
       Rational[1, 2] $CellContext`T $CellContext`\[Sigma] (-2 + 2 EulerGamma + 
       Log[$CellContext`mD^2] - 2 Log[$CellContext`r^(-1)]), 
      0, (-16) $CellContext`mD^(-5) ($CellContext`mD^2)^
       Rational[1, 2] $CellContext`T $CellContext`\[Sigma], 
      0, (-216) $CellContext`mD^(-7) ($CellContext`mD^2)^
       Rational[1, 2] $CellContext`T $CellContext`\[Sigma], 
      0, (-7680) $CellContext`mD^(-9) ($CellContext`mD^2)^
       Rational[1, 2] $CellContext`T $CellContext`\[Sigma]}, 0, 8, 1],
    Editable->False], ")"}]}]], "Output",
 CellChangeTimes->{
  3.74558006185361*^9, {3.745580118452203*^9, 3.745580141682271*^9}, 
   3.7455803414031343`*^9, 3.745580449300448*^9}]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"ImVsS", "[", 
    RowBox[{"r_", ",", "mD_", ",", "\[Sigma]_", ",", "T_"}], "]"}], ":=", 
   RowBox[{
    FractionBox[
     RowBox[{"2", " ", 
      SqrtBox[
       SuperscriptBox["mD", "2"]], " ", "T", " ", "\[Sigma]", " ", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{"-", "2"}], "+", 
        RowBox[{"2", " ", "EulerGamma"}], "+", 
        RowBox[{"Log", "[", 
         SuperscriptBox["mD", "2"], "]"}], "-", 
        RowBox[{"2", " ", 
         RowBox[{"Log", "[", 
          FractionBox["1", "r"], "]"}]}]}], ")"}]}], 
     SuperscriptBox["mD", "3"]], "-", 
    FractionBox[
     RowBox[{"16", " ", 
      RowBox[{"(", 
       RowBox[{
        SqrtBox[
         SuperscriptBox["mD", "2"]], " ", "T", " ", "\[Sigma]"}], ")"}]}], 
     RowBox[{
      SuperscriptBox["mD", "5"], " ", 
      SuperscriptBox["r", "2"]}]], "-", 
    FractionBox[
     RowBox[{"216", " ", 
      RowBox[{"(", 
       RowBox[{
        SqrtBox[
         SuperscriptBox["mD", "2"]], " ", "T", " ", "\[Sigma]"}], ")"}]}], 
     RowBox[{
      SuperscriptBox["mD", "7"], " ", 
      SuperscriptBox["r", "4"]}]], "-", 
    RowBox[{
     FractionBox[
      RowBox[{"7680", " ", 
       RowBox[{"(", 
        RowBox[{
         SqrtBox[
          SuperscriptBox["mD", "2"]], " ", "T", " ", "\[Sigma]"}], ")"}]}], 
      RowBox[{
       SuperscriptBox["mD", "9"], " ", 
       SuperscriptBox["r", "6"]}]], 
     SuperscriptBox["\[ExponentialE]", 
      RowBox[{"\[ImaginaryI]", " ", 
       SqrtBox[
        RowBox[{"-", 
         SuperscriptBox["mD", "2"]}]], " ", "r"}]], 
     RowBox[{"(", 
      RowBox[{
       FractionBox[
        RowBox[{"mD", " ", "T", " ", "\[Sigma]", " ", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{"\[ImaginaryI]", " ", "\[Pi]"}], "+", 
           RowBox[{"Log", "[", 
            RowBox[{"-", 
             SuperscriptBox["mD", "2"]}], "]"}], "-", 
           RowBox[{"Log", "[", 
            SuperscriptBox["mD", "2"], "]"}]}], ")"}], " ", 
         SuperscriptBox["r", "2"]}], 
        RowBox[{"4", " ", 
         SqrtBox[
          SuperscriptBox["mD", "2"]]}]], "-", 
       FractionBox[
        RowBox[{"3", " ", 
         RowBox[{"(", 
          RowBox[{"mD", " ", "T", " ", "\[Sigma]", " ", 
           RowBox[{"(", 
            RowBox[{"\[Pi]", "-", 
             RowBox[{"\[ImaginaryI]", " ", 
              RowBox[{"Log", "[", 
               RowBox[{"-", 
                SuperscriptBox["mD", "2"]}], "]"}]}], "+", 
             RowBox[{"\[ImaginaryI]", " ", 
              RowBox[{"Log", "[", 
               SuperscriptBox["mD", "2"], "]"}]}]}], ")"}]}], ")"}], " ", 
         "r"}], 
        RowBox[{"4", " ", 
         SqrtBox[
          RowBox[{"-", 
           SuperscriptBox["mD", "4"]}]]}]], "+", 
       FractionBox[
        RowBox[{
         SqrtBox[
          SuperscriptBox["mD", "2"]], " ", "T", " ", "\[Sigma]", " ", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{"\[ImaginaryI]", " ", "\[Pi]"}], "+", 
           RowBox[{"Log", "[", 
            RowBox[{"-", 
             SuperscriptBox["mD", "2"]}], "]"}], "-", 
           RowBox[{"Log", "[", 
            SuperscriptBox["mD", "2"], "]"}]}], ")"}]}], 
        SuperscriptBox["mD", "3"]]}], ")"}]}], "+", 
    RowBox[{
     SuperscriptBox["\[ExponentialE]", 
      RowBox[{
       RowBox[{"-", "\[ImaginaryI]"}], " ", 
       SqrtBox[
        RowBox[{"-", 
         SuperscriptBox["mD", "2"]}]], " ", "r"}]], 
     RowBox[{"(", 
      RowBox[{
       FractionBox[
        RowBox[{"mD", " ", "T", " ", "\[Sigma]", " ", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{
            RowBox[{"-", "\[ImaginaryI]"}], " ", "\[Pi]"}], "+", 
           RowBox[{"Log", "[", 
            RowBox[{"-", 
             SuperscriptBox["mD", "2"]}], "]"}], "-", 
           RowBox[{"Log", "[", 
            SuperscriptBox["mD", "2"], "]"}]}], ")"}], " ", 
         SuperscriptBox["r", "2"]}], 
        RowBox[{"4", " ", 
         SqrtBox[
          SuperscriptBox["mD", "2"]]}]], "-", 
       FractionBox[
        RowBox[{"3", " ", 
         RowBox[{"(", 
          RowBox[{"mD", " ", "T", " ", "\[Sigma]", " ", 
           RowBox[{"(", 
            RowBox[{"\[Pi]", "+", 
             RowBox[{"\[ImaginaryI]", " ", 
              RowBox[{"Log", "[", 
               RowBox[{"-", 
                SuperscriptBox["mD", "2"]}], "]"}]}], "-", 
             RowBox[{"\[ImaginaryI]", " ", 
              RowBox[{"Log", "[", 
               SuperscriptBox["mD", "2"], "]"}]}]}], ")"}]}], ")"}], " ", 
         "r"}], 
        RowBox[{"4", " ", 
         SqrtBox[
          RowBox[{"-", 
           SuperscriptBox["mD", "4"]}]]}]], "+", 
       FractionBox[
        RowBox[{"mD", " ", "T", " ", "\[Sigma]", " ", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{
            RowBox[{"-", "\[ImaginaryI]"}], " ", "\[Pi]"}], "+", 
           RowBox[{"Log", "[", 
            RowBox[{"-", 
             SuperscriptBox["mD", "2"]}], "]"}], "-", 
           RowBox[{"Log", "[", 
            SuperscriptBox["mD", "2"], "]"}]}], ")"}]}], 
        SuperscriptBox[
         RowBox[{"(", 
          SuperscriptBox["mD", "2"], ")"}], 
         RowBox[{"3", "/", "2"}]]]}], ")"}]}]}]}], ";"}]], "Input",
 CellChangeTimes->{{3.74558014653168*^9, 3.745580235242845*^9}, {
   3.745580366525984*^9, 3.745580396016095*^9}, 3.745580461920547*^9}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"ImVsS", "[", 
  RowBox[{"169", ",", 
   RowBox[{"mDcal", "[", 
    RowBox[{
     RowBox[{"2", "\[Pi]"}], ",", "0.155", ",", 
     RowBox[{"kfinal", "[", 
      RowBox[{"[", "1", "]"}], "]"}], ",", 
     RowBox[{"kfinal", "[", 
      RowBox[{"[", "2", "]"}], "]"}]}], "]"}], ",", 
   RowBox[{"\[Sigma]cont", "[", 
    RowBox[{"[", "1", "]"}], "]"}], ",", "0.155"}], "]"}]], "Input",
 CellChangeTimes->{{3.7455802394650803`*^9, 3.74558032195033*^9}, {
  3.745580406129286*^9, 3.7455804119442263`*^9}, {3.745580496402567*^9, 
  3.745580514850016*^9}, {3.745580621757516*^9, 3.7455806601566*^9}}],

Cell[BoxData[
 RowBox[{"7.659016731488183`", "\[VeryThinSpace]", "-", 
  RowBox[{"2.1476705768875475`*^-18", " ", "\[ImaginaryI]"}]}]], "Output",
 CellChangeTimes->{{3.745580262970105*^9, 3.745580322242455*^9}, {
   3.745580398432563*^9, 3.745580412204077*^9}, 3.745580464472505*^9, {
   3.745580496974977*^9, 3.745580515138104*^9}, {3.7455806238347*^9, 
   3.745580660518334*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"ImVs", "[", 
  RowBox[{"140", ",", 
   RowBox[{"mDcal", "[", 
    RowBox[{
     RowBox[{"2", "\[Pi]"}], ",", "0.155", ",", 
     RowBox[{"kfinal", "[", 
      RowBox[{"[", "1", "]"}], "]"}], ",", 
     RowBox[{"kfinal", "[", 
      RowBox[{"[", "2", "]"}], "]"}]}], "]"}], ",", 
   RowBox[{"\[Sigma]cont", "[", 
    RowBox[{"[", "1", "]"}], "]"}], ",", "0.155"}], "]"}]], "Input",
 CellChangeTimes->{{3.7455802782294817`*^9, 3.745580319982308*^9}, {
  3.745580403697583*^9, 3.745580414480033*^9}}],

Cell[BoxData["7.648378812364974`"], "Output",
 CellChangeTimes->{{3.7455802788512983`*^9, 3.74558032032445*^9}, {
   3.7455804010652027`*^9, 3.745580414792426*^9}, 3.745580466932502*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Block", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"mD", "=", 
     RowBox[{"mDcal", "[", 
      RowBox[{
       RowBox[{"2", "\[Pi]"}], ",", "0.155", ",", 
       RowBox[{"kfinal", "[", 
        RowBox[{"[", "1", "]"}], "]"}], ",", 
       RowBox[{"kfinal", "[", 
        RowBox[{"[", "2", "]"}], "]"}]}], "]"}]}], "}"}], ",", 
   RowBox[{"Show", "[", 
    RowBox[{"DiscretePlot", "[", 
     RowBox[{
      RowBox[{"ImVs", "[", 
       RowBox[{"r", ",", "mD", ",", 
        RowBox[{"\[Sigma]cont", "[", 
         RowBox[{"[", "1", "]"}], "]"}], ",", "0.155"}], "]"}], ",", 
      RowBox[{"{", 
       RowBox[{"r", ",", "1", ",", "140", ",", "10"}], "}"}], ",", 
      RowBox[{"Joined", "\[Rule]", "True"}], ",", 
      RowBox[{"Filling", "\[Rule]", "None"}], ",", 
      RowBox[{"AxesStyle", "\[Rule]", 
       RowBox[{"Directive", "[", 
        RowBox[{
         RowBox[{"FontSize", "\[Rule]", "25"}], ",", 
         RowBox[{"Thickness", "\[Rule]", "0.004"}], ",", 
         RowBox[{"FontFamily", "\[Rule]", "\"\<Helvetica\>\""}], ",", 
         "Black"}], "]"}]}], ",", 
      RowBox[{"BaseStyle", "\[Rule]", 
       RowBox[{"{", 
        RowBox[{"FontSize", "\[Rule]", "14"}], "}"}]}], ",", 
      RowBox[{"PlotRange", "\[Rule]", "All"}], ",", 
      RowBox[{"AspectRatio", "\[Rule]", "0.85"}], ",", 
      RowBox[{"AxesLabel", "\[Rule]", 
       RowBox[{"{", 
        RowBox[{"\"\<r [fm]\>\"", ",", "\"\<Im[V]\>\""}], "}"}]}], ",", 
      RowBox[{"PlotLabel", "\[Rule]", 
       RowBox[{"Style", "[", 
        RowBox[{"\"\<T=150MeV\>\"", ",", 
         RowBox[{"FontSize", "\[Rule]", "25"}], ",", 
         RowBox[{"FontFamily", "\[Rule]", "\"\<Helvetica\>\""}], ",", 
         "Black"}], "]"}]}], ",", 
      RowBox[{"ImageSize", "\[Rule]", 
       RowBox[{"{", 
        RowBox[{"600", ",", "600"}], "}"}]}]}], "]"}], "]"}]}], 
  "]"}]], "Input",
 CellChangeTimes->{{3.745579906095461*^9, 3.7455800170575523`*^9}}],

Cell[BoxData[
 GraphicsBox[{
   {RGBColor[0.368417, 0.506779, 0.709798], PointSize[0.012833333333333334`], 
    AbsoluteThickness[1.6]}, 
   {RGBColor[0.368417, 0.506779, 0.709798], PointSize[0.012833333333333334`], 
    AbsoluteThickness[1.6], 
    LineBox[{{{1., 0.0003922893722529458}, {11., 0.617646062104437}, {21., 
     2.0231804045422233`}, {31., 3.1984690951213177`}, {41., 
     4.02536169826194}, {51., 4.629837141131305}, {61., 5.103577759229679}, {
     71., 5.4949462227752806`}, {81., 5.829665061236119}, {91., 
     6.12270429816033}, {101., 6.383613023575253}, {111., 6.61909383303778}, {
     121., 6.836210907137895}, {131., 7.078719774855127}}}], {}, {}}},
  AspectRatio->0.85,
  Axes->True,
  AxesLabel->{
    FormBox["\"r [fm]\"", TraditionalForm], 
    FormBox["\"Im[V]\"", TraditionalForm]},
  AxesOrigin->{1., 0.0003922893722529458},
  AxesStyle->Directive[
   FontSize -> 25, Thickness -> 0.004, FontFamily -> "Helvetica", 
    GrayLevel[0]],
  BaseStyle->{FontSize -> 14},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  ImageSize->{600, 600},
  Method->{
   "MessagesHead" -> DiscretePlot, "AxisPadding" -> Scaled[0.02], 
    "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
    AbsolutePointSize[6], "DefaultPlotStyle" -> {
      Directive[
       RGBColor[0.368417, 0.506779, 0.709798], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.880722, 0.611041, 0.142051], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.560181, 0.691569, 0.194885], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.922526, 0.385626, 0.209179], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.528488, 0.470624, 0.701351], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.772079, 0.431554, 0.102387], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.363898, 0.618501, 0.782349], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[1, 0.75, 0], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.647624, 0.37816, 0.614037], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.571589, 0.586483, 0.], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.915, 0.3325, 0.2125], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.40082222609352647`, 0.5220066643438841, 0.85], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.9728288904374106, 0.621644452187053, 0.07336199581899142], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.736782672705901, 0.358, 0.5030266573755369], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.28026441037696703`, 0.715, 0.4292089322474965], 
       AbsoluteThickness[1.6]]}, "DomainPadding" -> Scaled[0.02], 
    "PointSizeFunction" -> "SmallPointSize", "RangePadding" -> Scaled[0.05]},
  PlotLabel->FormBox[
    StyleBox["\"T=150MeV\"", FontSize -> 25, FontFamily -> "Helvetica", 
     GrayLevel[0], StripOnInput -> False], TraditionalForm],
  PlotRange->{{1., 131.}, {0.0003922893722529458, 7.078719774855127}},
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.02], 
     Scaled[0.02]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{{3.74557991687608*^9, 3.7455800176717777`*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"ImVs", "[", 
  RowBox[{"20000", ",", 
   RowBox[{"mDcal", "[", 
    RowBox[{
     RowBox[{"2", "\[Pi]"}], ",", "0.155", ",", 
     RowBox[{"kfinal", "[", 
      RowBox[{"[", "1", "]"}], "]"}], ",", 
     RowBox[{"kfinal", "[", 
      RowBox[{"[", "2", "]"}], "]"}]}], "]"}], ",", 
   RowBox[{"\[Sigma]cont", "[", 
    RowBox[{"[", "1", "]"}], "]"}], ",", "0.155"}], "]"}]], "Input",
 CellChangeTimes->{{3.745577603754464*^9, 3.74557762838006*^9}, {
  3.7455806010440903`*^9, 3.745580603507339*^9}}],

Cell[BoxData["4.545805220935398816247501517108855953`15.954589770191005*^\
1789"], "Output",
 CellChangeTimes->{3.7455776309339457`*^9, 3.7455806041695957`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"ImVsS", "[", 
  RowBox[{"20000", ",", 
   RowBox[{"mDcal", "[", 
    RowBox[{
     RowBox[{"2", "\[Pi]"}], ",", "0.155", ",", 
     RowBox[{"kfinal", "[", 
      RowBox[{"[", "1", "]"}], "]"}], ",", 
     RowBox[{"kfinal", "[", 
      RowBox[{"[", "2", "]"}], "]"}]}], "]"}], ",", 
   RowBox[{"\[Sigma]cont", "[", 
    RowBox[{"[", "1", "]"}], "]"}], ",", "0.155"}], "]"}]], "Input",
 CellChangeTimes->{{3.745580598596593*^9, 3.7455806094701967`*^9}}],

Cell[BoxData[
 RowBox[{"19.3543388699169`", "\[VeryThinSpace]", "+", 
  RowBox[{"0.`", " ", "\[ImaginaryI]"}]}]], "Output",
 CellChangeTimes->{3.745580609909973*^9}]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"swaveccspectrawsb", "[", 
    RowBox[{"n_", ",", "Tscan_"}], "]"}], ":=", 
   RowBox[{"Block", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{"T", "=", 
        RowBox[{"Tscan", "[", 
         RowBox[{"[", "n", "]"}], "]"}]}], ",", 
       RowBox[{"mD", "=", 
        RowBox[{"mDcal", "[", 
         RowBox[{
          RowBox[{"2", "\[Pi]"}], ",", 
          RowBox[{"Tscan", "[", 
           RowBox[{"[", "n", "]"}], "]"}], ",", 
          RowBox[{"kfinal", "[", 
           RowBox[{"[", "1", "]"}], "]"}], ",", 
          RowBox[{"kfinal", "[", 
           RowBox[{"[", "2", "]"}], "]"}]}], "]"}]}], ",", 
       RowBox[{"\[Sigma]", "=", 
        RowBox[{"\[Sigma]cont", "[", 
         RowBox[{"[", "1", "]"}], "]"}]}], ",", 
       RowBox[{"\[Alpha]", "=", 
        RowBox[{"\[Alpha]cont", "[", 
         RowBox[{"[", "1", "]"}], "]"}]}], ",", 
       RowBox[{"c", "=", 
        RowBox[{"ccont", "[", 
         RowBox[{"[", "1", "]"}], "]"}]}], ",", 
       RowBox[{"M", "=", "Mc"}], ",", 
       RowBox[{"l", "=", "0"}], ",", 
       RowBox[{"\[Omega]min", "=", 
        RowBox[{"-", "1"}]}], ",", 
       RowBox[{"\[Omega]max", "=", "2"}], ",", "ccsT", ",", "Tstring", ",", 
       "inf"}], "}"}], ",", "\[IndentingNewLine]", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"rev", "=", 
       RowBox[{"Interpolation", "[", 
        RowBox[{"Join", "[", 
         RowBox[{
          RowBox[{"ParallelTable", "[", 
           RowBox[{
            RowBox[{"{", 
             RowBox[{"r", ",", 
              RowBox[{"ReV", "[", 
               RowBox[{
               "r", ",", "mD", ",", "\[Alpha]", ",", "\[Sigma]", ",", "c"}], 
               "]"}]}], "}"}], ",", 
            RowBox[{"{", 
             RowBox[{"r", ",", 
              RowBox[{"1", "/", "1000"}], ",", "10", ",", 
              RowBox[{"1", "/", "100"}]}], "}"}]}], "]"}], ",", 
          RowBox[{"ParallelTable", "[", 
           RowBox[{
            RowBox[{"{", 
             RowBox[{"r", ",", 
              RowBox[{"ReV", "[", 
               RowBox[{
               "r", ",", "mD", ",", "\[Alpha]", ",", "\[Sigma]", ",", "c"}], 
               "]"}]}], "}"}], ",", 
            RowBox[{"{", 
             RowBox[{"r", ",", 
              RowBox[{"101", "/", "10"}], ",", "25", ",", 
              RowBox[{"1", "/", "10"}]}], "}"}]}], "]"}], ",", 
          RowBox[{"ParallelTable", "[", 
           RowBox[{
            RowBox[{"{", 
             RowBox[{"r", ",", 
              RowBox[{"ReV", "[", 
               RowBox[{
               "r", ",", "mD", ",", "\[Alpha]", ",", "\[Sigma]", ",", "c"}], 
               "]"}]}], "}"}], ",", 
            RowBox[{"{", 
             RowBox[{"r", ",", "26", ",", "1500", ",", "1"}], "}"}]}], "]"}], 
          ",", 
          RowBox[{"ParallelTable", "[", 
           RowBox[{
            RowBox[{"{", 
             RowBox[{"r", ",", 
              RowBox[{"ReV", "[", 
               RowBox[{
               "r", ",", "mD", ",", "\[Alpha]", ",", "\[Sigma]", ",", "c"}], 
               "]"}]}], "}"}], ",", 
            RowBox[{"{", 
             RowBox[{"r", ",", "1510", ",", "20000", ",", "1000"}], "}"}]}], 
           "]"}]}], "]"}], "]"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"imv", "=", 
       RowBox[{"Interpolation", "[", 
        RowBox[{"Join", "[", 
         RowBox[{
          RowBox[{"ParallelTable", "[", 
           RowBox[{
            RowBox[{"{", 
             RowBox[{"r", ",", 
              RowBox[{"ImV", "[", 
               RowBox[{
               "r", ",", "mD", ",", "\[Alpha]", ",", "\[Sigma]", ",", "T"}], 
               "]"}]}], "}"}], ",", 
            RowBox[{"{", 
             RowBox[{"r", ",", 
              RowBox[{"1", "/", "1000"}], ",", "10", ",", 
              RowBox[{"1", "/", "100"}]}], "}"}]}], "]"}], ",", 
          RowBox[{"ParallelTable", "[", 
           RowBox[{
            RowBox[{"{", 
             RowBox[{"r", ",", 
              RowBox[{"ImV", "[", 
               RowBox[{
               "r", ",", "mD", ",", "\[Alpha]", ",", "\[Sigma]", ",", "T"}], 
               "]"}]}], "}"}], ",", 
            RowBox[{"{", 
             RowBox[{"r", ",", 
              RowBox[{"101", "/", "10"}], ",", "25", ",", 
              RowBox[{"1", "/", "10"}]}], "}"}]}], "]"}], ",", 
          RowBox[{"ParallelTable", "[", 
           RowBox[{
            RowBox[{"{", 
             RowBox[{"r", ",", 
              RowBox[{"ImV", "[", 
               RowBox[{
               "r", ",", "mD", ",", "\[Alpha]", ",", "\[Sigma]", ",", "T"}], 
               "]"}]}], "}"}], ",", 
            RowBox[{"{", 
             RowBox[{"r", ",", "26", ",", "140", ",", "1"}], "}"}]}], "]"}], 
          ",", 
          RowBox[{"ParallelTable", "[", 
           RowBox[{
            RowBox[{"{", 
             RowBox[{"r", ",", 
              RowBox[{
               RowBox[{"ImVc", "[", 
                RowBox[{"r", ",", "mD", ",", "\[Alpha]", ",", "T"}], "]"}], 
               "+", 
               RowBox[{"ImVsS", "[", 
                RowBox[{
                 RowBox[{"r", "+", "18"}], ",", "mD", ",", "\[Sigma]", ",", 
                 "T"}], "]"}]}]}], "}"}], ",", 
            RowBox[{"{", 
             RowBox[{"r", ",", "141", ",", "1500", ",", "1"}], "}"}]}], "]"}],
           ",", 
          RowBox[{"ParallelTable", "[", 
           RowBox[{
            RowBox[{"{", 
             RowBox[{"r", ",", 
              RowBox[{
               RowBox[{"ImVc", "[", 
                RowBox[{
                 RowBox[{"r", "+", "18"}], ",", "mD", ",", "\[Alpha]", ",", 
                 "T"}], "]"}], "+", 
               RowBox[{"ImVsS", "[", 
                RowBox[{"r", ",", "mD", ",", "\[Sigma]", ",", "T"}], 
                "]"}]}]}], "}"}], ",", 
            RowBox[{"{", 
             RowBox[{"r", ",", "1510", ",", "20000", ",", "1000"}], "}"}]}], 
           "]"}]}], "]"}], "]"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"V", "[", "x_", "]"}], ":=", 
       RowBox[{
        RowBox[{"rev", "[", "x", "]"}], "+", 
        RowBox[{"\[ImaginaryI]", " ", 
         RowBox[{"imv", "[", "x", "]"}]}]}]}], ";", "\[IndentingNewLine]", 
      "\[IndentingNewLine]", 
      RowBox[{"\[Rho]table", "=", 
       RowBox[{
        RowBox[{
         RowBox[{
          RowBox[{"ParallelDo", "[", 
           RowBox[{
            RowBox[{
             RowBox[{"\[Omega]", "=", 
              RowBox[{"\[Omega]min", "+", 
               RowBox[{
                RowBox[{"(", 
                 RowBox[{"it", "-", "1"}], ")"}], " ", "d\[Omega]", " ", 
                "M"}]}]}], ";", 
             RowBox[{"inf", "=", 
              RowBox[{"40", "+", 
               RowBox[{"500", "*", "it", "*", "d\[Omega]"}]}]}], ";", 
             "\[IndentingNewLine]", 
             RowBox[{"(*", 
              RowBox[{
               RowBox[{"s0", "=", 
                RowBox[{"NDSolve", "[", 
                 RowBox[{
                  RowBox[{"{", 
                   RowBox[{
                    RowBox[{
                    RowBox[{
                    RowBox[{
                    RowBox[{"(", 
                    RowBox[{"\[Omega]", "-", 
                    FractionBox[
                    RowBox[{"l", 
                    RowBox[{"(", 
                    RowBox[{"l", "+", "1"}], ")"}]}], 
                    RowBox[{"M", " ", 
                    SuperscriptBox["r", "2"]}]], "-", 
                    RowBox[{"Re", "[", 
                    RowBox[{"V", "[", "r", "]"}], "]"}], "+", 
                    RowBox[{"\[ImaginaryI]", " ", 
                    RowBox[{"Abs", "[", 
                    RowBox[{"Im", "[", 
                    RowBox[{"V", "[", "r", "]"}], "]"}], "]"}]}]}], ")"}], 
                    RowBox[{"gr", "[", "r", "]"}]}], "+", 
                    RowBox[{
                    FractionBox["1", "M"], 
                    RowBox[{
                    RowBox[{"gr", "''"}], "[", "r", "]"}]}]}], "\[Equal]", 
                    "0"}], ",", " ", "\[IndentingNewLine]", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"gr", "'"}], "[", "\[Delta]", "]"}], "\[Equal]", 
                    RowBox[{
                    RowBox[{"2", " ", "\[Delta]", 
                    SuperscriptBox[
                    RowBox[{"(", 
                    RowBox[{"\[Alpha]", " ", "M"}], ")"}], "2"]}], "-", 
                    RowBox[{
                    FractionBox["3", "4"], 
                    SuperscriptBox["\[Delta]", "2"], 
                    SuperscriptBox[
                    RowBox[{"(", 
                    RowBox[{"M", " ", "\[Alpha]"}], ")"}], "3"]}]}]}], ",", 
                    "\[IndentingNewLine]", " ", 
                    RowBox[{
                    RowBox[{"gr", "[", "\[Delta]", "]"}], "==", " ", 
                    RowBox[{
                    RowBox[{
                    SuperscriptBox["\[Delta]", "2"], 
                    SuperscriptBox[
                    RowBox[{"(", 
                    RowBox[{"\[Alpha]", " ", "M"}], ")"}], "2"]}], "-", 
                    RowBox[{
                    FractionBox["1", "4"], 
                    SuperscriptBox["\[Delta]", "3"], 
                    SuperscriptBox[
                    RowBox[{"(", 
                    RowBox[{"M", " ", "\[Alpha]"}], ")"}], "3"]}]}]}]}], 
                   "}"}], ",", "gr", ",", 
                  RowBox[{"{", 
                   RowBox[{"r", ",", "\[Delta]", ",", "inf"}], "}"}], ",", 
                  RowBox[{"PrecisionGoal", "\[Rule]", "10"}], ",", 
                  RowBox[{"MaxSteps", "\[Rule]", "1000000"}]}], "]"}]}], ";", 
               "\[IndentingNewLine]", 
               RowBox[{
                RowBox[{"gr1", "[", "r_", "]"}], "=", 
                SubscriptBox[
                 RowBox[{"(", 
                  RowBox[{
                   RowBox[{"gr", "[", "r", "]"}], "/.", "s0"}], ")"}], 
                 RowBox[{
                 "\[LeftDoubleBracket]", "1", "\[RightDoubleBracket]"}]]}], 
               ";"}], "*)"}], "\[IndentingNewLine]", 
             RowBox[{"s01", "=", 
              RowBox[{"NDSolve", "[", 
               RowBox[{
                RowBox[{"{", 
                 RowBox[{
                  RowBox[{
                   RowBox[{
                    RowBox[{
                    RowBox[{"(", 
                    RowBox[{"\[Omega]", "-", 
                    FractionBox[
                    RowBox[{"l", 
                    RowBox[{"(", 
                    RowBox[{"l", "+", "1"}], ")"}]}], 
                    RowBox[{"M", " ", 
                    SuperscriptBox["r", "2"]}]], "-", 
                    RowBox[{"Re", "[", 
                    RowBox[{"V", "[", "r", "]"}], "]"}], "+", 
                    RowBox[{"\[ImaginaryI]", " ", 
                    RowBox[{"Abs", "[", 
                    RowBox[{"Im", "[", 
                    RowBox[{"V", "[", "r", "]"}], "]"}], "]"}]}]}], ")"}], 
                    RowBox[{"gr", "[", "r", "]"}]}], "+", 
                    RowBox[{
                    FractionBox["1", "M"], 
                    RowBox[{
                    RowBox[{"gr", "''"}], "[", "r", "]"}]}]}], "\[Equal]", 
                   "0"}], ",", " ", "\[IndentingNewLine]", 
                  RowBox[{
                   RowBox[{
                    RowBox[{"gr", "'"}], "[", "\[Delta]", "]"}], "\[Equal]", 
                   RowBox[{
                    RowBox[{"(", 
                    RowBox[{"\[Alpha]", " ", "M"}], ")"}], "-", 
                    RowBox[{"\[Delta]", 
                    SuperscriptBox[
                    RowBox[{"(", 
                    RowBox[{"M", " ", "\[Alpha]"}], ")"}], "2"]}]}]}], ",", 
                  "\[IndentingNewLine]", " ", 
                  RowBox[{
                   RowBox[{"gr", "[", "\[Delta]", "]"}], "\[Equal]", 
                   RowBox[{
                    RowBox[{"\[Delta]", 
                    RowBox[{"(", 
                    RowBox[{"\[Alpha]", " ", "M"}], ")"}]}], "-", " ", 
                    RowBox[{
                    FractionBox["1", "2"], 
                    SuperscriptBox["\[Delta]", "2"], 
                    SuperscriptBox[
                    RowBox[{"(", 
                    RowBox[{"\[Alpha]", " ", "M"}], ")"}], "2"]}]}]}]}], 
                 "}"}], ",", "gr", ",", 
                RowBox[{"{", 
                 RowBox[{"r", ",", "\[Delta]", ",", "inf"}], "}"}]}], "]"}]}],
              ";", "\[IndentingNewLine]", 
             RowBox[{
              RowBox[{"gr0", "[", "r_", "]"}], "=", 
              SubscriptBox[
               RowBox[{"(", 
                RowBox[{
                 RowBox[{"gr", "[", "r", "]"}], "/.", "s01"}], ")"}], 
               RowBox[{
               "\[LeftDoubleBracket]", "1", "\[RightDoubleBracket]"}]]}], ";",
              "\[IndentingNewLine]", 
             RowBox[{"s1", "=", 
              RowBox[{"NDSolve", "[", 
               RowBox[{
                RowBox[{"{", 
                 RowBox[{
                  RowBox[{
                   RowBox[{
                    RowBox[{"rho", "'"}], "[", "x", "]"}], "\[Equal]", 
                   RowBox[{
                    RowBox[{"-", 
                    FractionBox[
                    RowBox[{" ", 
                    RowBox[{"6", " ", "Nc", " ", 
                    SuperscriptBox["M", "2"], " ", "\[Alpha]"}]}], 
                    RowBox[{"4", "\[Pi]"}]]}], 
                    RowBox[{"Im", "[", 
                    FractionBox["1", 
                    SuperscriptBox[
                    RowBox[{"(", 
                    RowBox[{"gr0", "[", "x", "]"}], ")"}], "2"]], 
                    RowBox[{"(*", 
                    RowBox[{"+", 
                    FractionBox["36", 
                    SuperscriptBox[
                    RowBox[{"(", 
                    RowBox[{"gr1", "[", "x", "]"}], ")"}], "2"]]}], "*)"}], 
                    "]"}]}]}], ",", 
                  RowBox[{
                   RowBox[{"rho", "[", "\[Delta]", "]"}], "\[Equal]", "0"}]}],
                  "}"}], ",", "rho", ",", 
                RowBox[{"{", 
                 RowBox[{"x", ",", "\[Delta]", ",", "inf"}], "}"}]}], "]"}]}],
              ";", "\[IndentingNewLine]", 
             RowBox[{
              RowBox[{"rhow", "[", "r_", "]"}], "=", 
              SubscriptBox[
               RowBox[{"(", 
                RowBox[{
                 RowBox[{"rho", "[", "r", "]"}], "/.", "s1"}], ")"}], 
               RowBox[{
               "\[LeftDoubleBracket]", "1", "\[RightDoubleBracket]"}]]}], ";",
              "\[IndentingNewLine]", 
             RowBox[{"ParallelSow", "[", 
              RowBox[{"{", 
               RowBox[{
                RowBox[{"\[Omega]", "+", 
                 RowBox[{"2", "M"}]}], ",", 
                RowBox[{"rhow", "[", "inf", "]"}]}], "}"}], "]"}]}], ",", 
            RowBox[{"{", 
             RowBox[{"it", ",", "1", ",", 
              FractionBox[
               RowBox[{"\[Omega]max", "-", "\[Omega]min"}], 
               RowBox[{"d\[Omega]", " ", "M"}]]}], "}"}]}], "]"}], "//", 
          "Reap"}], "//", "Last"}], "//", "First"}]}], ";", 
      "\[IndentingNewLine]", "\[IndentingNewLine]", 
      RowBox[{"ccsT", "=", 
       RowBox[{"ParallelTable", "[", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{
           RowBox[{"\[Rho]table", "[", 
            RowBox[{"[", 
             RowBox[{"i", ",", "1"}], "]"}], "]"}], ",", 
           FractionBox[
            RowBox[{"-", 
             RowBox[{"\[Rho]table", "[", 
              RowBox[{"[", 
               RowBox[{"i", ",", "2"}], "]"}], "]"}]}], 
            SuperscriptBox[
             RowBox[{"\[Rho]table", "[", 
              RowBox[{"[", 
               RowBox[{"i", ",", "1"}], "]"}], "]"}], "2"]]}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"i", ",", "1", ",", 
           RowBox[{"Length", "[", "\[Rho]table", "]"}]}], "}"}]}], "]"}]}], 
      ";", "\[IndentingNewLine]", 
      RowBox[{"Tstring", "=", 
       RowBox[{"Round", "[", 
        RowBox[{"T", "*", "1000"}], "]"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"Export", "[", 
       RowBox[{
        RowBox[{"\"\<spectraldata/Tscan/cc/swccT\>\"", "<>", 
         RowBox[{"ToString", "[", "Tstring", "]"}], "<>", 
         "\"\<spectrawsb.dat\>\""}], ",", 
        RowBox[{"Sort", "[", "ccsT", "]"}]}], "]"}], ";"}]}], 
    "\[IndentingNewLine]", "]"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.724397604460712*^9, 3.724397621092863*^9}, {
   3.724398705481254*^9, 3.724398705798315*^9}, {3.72440624506767*^9, 
   3.7244062457361317`*^9}, {3.7244423136168756`*^9, 3.724442340980721*^9}, {
   3.7244423712224417`*^9, 3.724442377050403*^9}, {3.724442465925974*^9, 
   3.724442518695669*^9}, {3.7244426255599117`*^9, 3.724442639076613*^9}, {
   3.724443729204352*^9, 3.724443729749022*^9}, {3.724443881656342*^9, 
   3.7244438842850027`*^9}, 3.725261621115453*^9, 3.72526166634648*^9, {
   3.725271550289123*^9, 3.7252715504130163`*^9}, {3.725271609402791*^9, 
   3.7252716095188437`*^9}, {3.7252717762497*^9, 3.725271782362536*^9}, {
   3.725271824500347*^9, 3.725271826035269*^9}, {3.725271857701564*^9, 
   3.725271858192912*^9}, {3.725271928114049*^9, 3.7252719496618757`*^9}, {
   3.725271981807578*^9, 3.725271987122878*^9}, {3.725273718896678*^9, 
   3.72527377251343*^9}, {3.725273963159111*^9, 3.725273966198284*^9}, {
   3.725364382855975*^9, 3.725364384697238*^9}, {3.725364432753635*^9, 
   3.725364433681274*^9}, {3.725364595553596*^9, 3.725364595868292*^9}, {
   3.725364661141473*^9, 3.725364661301785*^9}, {3.725365068510941*^9, 
   3.7253650691073112`*^9}, {3.7256202924505177`*^9, 
   3.7256202938854313`*^9}, {3.7256265502253428`*^9, 3.725626559021003*^9}, {
   3.725798091627001*^9, 3.725798108963685*^9}, {3.725798150844287*^9, 
   3.725798156038417*^9}, {3.726312422974263*^9, 3.726312439922279*^9}, {
   3.726313778060986*^9, 3.726313794010726*^9}, {3.726313854887352*^9, 
   3.726313855417986*^9}, {3.726377533478507*^9, 3.726377535012369*^9}, {
   3.726379310729051*^9, 3.726379315935656*^9}, {3.726379351066524*^9, 
   3.7263793563685627`*^9}, 3.7263814533362722`*^9, {3.726468979312665*^9, 
   3.726469044993416*^9}, {3.726564279540083*^9, 3.726564288774165*^9}, {
   3.726564330005303*^9, 3.726564342424973*^9}, {3.7265645007454853`*^9, 
   3.7265645054085903`*^9}, 3.726565145221386*^9, {3.726836923420138*^9, 
   3.726836925204391*^9}, {3.7268417497448387`*^9, 3.726841749854889*^9}, {
   3.727357927216405*^9, 3.7273579306359463`*^9}, 3.72735811608375*^9, {
   3.7273582875862513`*^9, 3.727358296888235*^9}, {3.727520051444908*^9, 
   3.7275200665503483`*^9}, {3.727539483513708*^9, 3.72753949210455*^9}, {
   3.7275398377710333`*^9, 3.727539869000495*^9}, {3.7275879806550293`*^9, 
   3.727587984698921*^9}, {3.727606150288821*^9, 3.727606150994812*^9}, {
   3.728932814314426*^9, 3.728932860160056*^9}, 3.7289333254815903`*^9, 
   3.7299208725344887`*^9, {3.730007040539275*^9, 3.7300070509717903`*^9}, {
   3.730007357183831*^9, 3.7300073662633142`*^9}, {3.7331192829046183`*^9, 
   3.733119300197537*^9}, {3.733120717385792*^9, 3.733120717697629*^9}, {
   3.7331222711038847`*^9, 3.733122272703622*^9}, {3.733211538849382*^9, 
   3.7332115515038567`*^9}, {3.7332289443370447`*^9, 
   3.7332289447842827`*^9}, {3.742215948846467*^9, 3.742215959437643*^9}, {
   3.742216025305929*^9, 3.742216093257207*^9}, {3.7422172078868933`*^9, 
   3.7422172275906973`*^9}, 3.74221727383118*^9, {3.742217585069265*^9, 
   3.742217591716959*^9}, {3.7422176229823923`*^9, 3.742217653035615*^9}, {
   3.742269341112874*^9, 3.742269371527761*^9}, 3.742275694936644*^9, {
   3.742289467062118*^9, 3.742289486771803*^9}, {3.742289520463562*^9, 
   3.7422896027136*^9}, {3.7422896364561243`*^9, 3.74228964347093*^9}, {
   3.742289678232355*^9, 3.742289708137301*^9}, {3.7422897506101*^9, 
   3.7422897587096577`*^9}, {3.7422920316457787`*^9, 3.742292034487727*^9}, 
   3.742292186682322*^9, {3.742292303240778*^9, 3.742292303483521*^9}, {
   3.742292362481593*^9, 3.742292372544711*^9}, {3.742292408813004*^9, 
   3.742292447857381*^9}, {3.7422968206130743`*^9, 3.742296843480155*^9}, {
   3.7422970160890417`*^9, 3.742297024417719*^9}, {3.742297074890059*^9, 
   3.74229711910509*^9}, {3.7422973083294992`*^9, 3.742297309298213*^9}, {
   3.742297354168077*^9, 3.742297359897736*^9}, {3.742297415918168*^9, 
   3.7422974232482452`*^9}, {3.742297467739311*^9, 3.742297612963316*^9}, {
   3.7422977860232887`*^9, 3.7422977903561068`*^9}, {3.74229798181938*^9, 
   3.742298023677857*^9}, {3.7422980561712513`*^9, 3.74229805925661*^9}, 
   3.742298106308654*^9, {3.742300221204397*^9, 3.742300269720365*^9}, {
   3.742300416216001*^9, 3.742300416917211*^9}, {3.742300536315893*^9, 
   3.742300546756034*^9}, {3.742300626604027*^9, 3.742300638323701*^9}, {
   3.7423006769018583`*^9, 3.7423007163572683`*^9}, {3.7435037431402884`*^9, 
   3.743503799356997*^9}, {3.7435038425347443`*^9, 3.743503908279688*^9}, {
   3.7435046316079397`*^9, 3.743504651390107*^9}, 3.745326235801956*^9, {
   3.745577559422867*^9, 3.745577586968154*^9}, {3.745580528080043*^9, 
   3.74558059234057*^9}, {3.745580690187639*^9, 3.745580708875317*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Tscancorig", "[", 
  RowBox[{"[", 
   RowBox[{"5", ";;", "7"}], "]"}], "]"}]], "Input",
 CellChangeTimes->{{3.745580739493051*^9, 3.74558077207876*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"0.154`", ",", "0.155`", ",", "0.156`"}], "}"}]], "Output",
 CellChangeTimes->{{3.745580741288967*^9, 3.745580792412156*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"Do", "[", 
   RowBox[{
    RowBox[{"swaveccspectrawsb", "[", 
     RowBox[{"i", ",", 
      RowBox[{"Tscancorig", "[", 
       RowBox[{"[", 
        RowBox[{"5", ";;", "7"}], "]"}], "]"}]}], "]"}], ",", 
    RowBox[{"{", 
     RowBox[{"i", ",", 
      RowBox[{"Length", "[", 
       RowBox[{"Tscancorig", "[", 
        RowBox[{"[", 
         RowBox[{"5", ";;", "7"}], "]"}], "]"}], "]"}]}], "}"}]}], "]"}], "//",
   "AbsoluteTiming"}]], "Input",
 CellChangeTimes->{{3.7455807369101477`*^9, 3.745580776865053*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"5173.827289`", ",", "Null"}], "}"}]], "Output",
 CellChangeTimes->{3.745585979013007*^9}]
}, Open  ]]
}, Open  ]]
},
WindowSize->{1920, 1019},
WindowMargins->{{0, Automatic}, {0, 20}},
CellContext->Notebook,
FrontEndVersion->"11.0 for Linux x86 (64-bit) (September 21, 2016)",
StyleDefinitions->"Default.nb"
]
(* End of Notebook Content *)

(* Internal cache information *)
(*CellTagsOutline
CellTagsIndex->{}
*)
(*CellTagsIndex
CellTagsIndex->{}
*)
(*NotebookFileOutline
Notebook[{
Cell[400, 13, 482, 10, 57, "Input"],
Cell[CellGroupData[{
Cell[907, 27, 207, 3, 65, "Section"],
Cell[1117, 32, 15876, 455, 1281, "Input"]
}, Closed]],
Cell[CellGroupData[{
Cell[17030, 492, 160, 2, 51, "Section"],
Cell[17193, 496, 1754, 49, 218, "Input"],
Cell[CellGroupData[{
Cell[18972, 549, 113, 1, 45, "Subsection"],
Cell[19088, 552, 12326, 362, 516, "Input"],
Cell[31417, 916, 115, 3, 53, "Input"],
Cell[31535, 921, 1400, 40, 63, "Input"]
}, Open  ]],
Cell[CellGroupData[{
Cell[32972, 966, 154, 2, 45, "Subsection"],
Cell[CellGroupData[{
Cell[33151, 972, 3198, 74, 140, "Input"],
Cell[36352, 1048, 32608, 557, 615, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[68997, 1610, 2724, 68, 140, "Input"],
Cell[71724, 1680, 27142, 469, 615, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[98903, 2154, 2674, 67, 140, "Input"],
Cell[101580, 2223, 23471, 407, 615, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[125088, 2635, 2722, 68, 140, "Input"],
Cell[127813, 2705, 18985, 335, 615, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[146835, 3045, 2831, 69, 140, "Input"],
Cell[149669, 3116, 47509, 818, 615, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[197215, 3939, 2687, 66, 140, "Input"],
Cell[199905, 4007, 46816, 807, 615, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[246758, 4819, 2686, 66, 140, "Input"],
Cell[249447, 4887, 76561, 1296, 615, 46509, 802, "CachedBoxData", "BoxData", \
"Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[326045, 6188, 2688, 66, 140, "Input"],
Cell[328736, 6256, 71893, 1218, 615, 47129, 811, "CachedBoxData", "BoxData", \
"Output"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[400678, 7480, 95, 1, 44, "Subsection"],
Cell[400776, 7483, 246, 6, 57, "Input"],
Cell[401025, 7491, 412, 9, 76, "Input"],
Cell[CellGroupData[{
Cell[401462, 7504, 136, 2, 35, "Subsubsection"],
Cell[401601, 7508, 20331, 448, 761, "Input"],
Cell[421935, 7958, 20385, 449, 761, "Input"],
Cell[442323, 8409, 20387, 449, 761, "Input"]
}, Closed]],
Cell[CellGroupData[{
Cell[462747, 8863, 186, 2, 29, "Subsubsection"],
Cell[462936, 8867, 20282, 446, 802, "Input"]
}, Closed]],
Cell[CellGroupData[{
Cell[483255, 9318, 237, 3, 29, "Subsubsection"],
Cell[483495, 9323, 20432, 450, 761, "Input"]
}, Closed]],
Cell[CellGroupData[{
Cell[503964, 9778, 287, 4, 29, "Subsubsection"],
Cell[504254, 9784, 20312, 447, 802, "Input"]
}, Closed]]
}, Open  ]],
Cell[CellGroupData[{
Cell[524615, 10237, 100, 1, 44, "Subsection"],
Cell[524718, 10240, 208, 4, 32, "Input"],
Cell[CellGroupData[{
Cell[524951, 10248, 1576, 29, 34, "Input"],
Cell[526530, 10279, 1749, 25, 57, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[528316, 10309, 240, 7, 34, "Input"],
Cell[528559, 10318, 1873, 29, 80, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[530469, 10352, 758, 16, 34, "Input"],
Cell[531230, 10370, 79, 1, 32, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[531346, 10376, 492, 13, 34, "Input"],
Cell[531841, 10391, 77, 1, 32, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[531955, 10397, 410, 11, 34, "Input"],
Cell[532368, 10410, 129, 3, 34, "Output"]
}, Open  ]],
Cell[532512, 10416, 287, 9, 34, "Input"],
Cell[532802, 10427, 729, 15, 34, "Input"],
Cell[533534, 10444, 386, 11, 34, "Input"],
Cell[533923, 10457, 381, 11, 34, "Input"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[534353, 10474, 205, 3, 65, "Section"],
Cell[CellGroupData[{
Cell[534583, 10481, 1459, 34, 34, "Input"],
Cell[536045, 10517, 2172, 35, 80, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[538254, 10557, 1508, 34, 34, "Input"],
Cell[539765, 10593, 1853, 30, 80, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[541655, 10628, 1557, 35, 34, "Input"],
Cell[543215, 10665, 1895, 33, 80, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[545147, 10703, 1118, 29, 34, "Input"],
Cell[546268, 10734, 2924, 45, 103, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[549229, 10784, 925, 26, 34, "Input"],
Cell[550157, 10812, 2761, 43, 103, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[552955, 10860, 925, 26, 34, "Input"],
Cell[553883, 10888, 2727, 41, 103, "Output"]
}, Open  ]]
}, Closed]],
Cell[CellGroupData[{
Cell[556659, 10935, 264, 3, 51, "Section"],
Cell[556926, 10940, 1872, 59, 61, "Input"],
Cell[CellGroupData[{
Cell[558823, 11003, 621, 14, 34, "Input"],
Cell[559447, 11019, 113, 1, 32, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[559597, 11025, 2123, 51, 117, "Input"],
Cell[561723, 11078, 4342, 104, 615, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[566102, 11187, 1311, 39, 56, "Input"],
Cell[567416, 11228, 8056, 220, 191, "Output"]
}, Open  ]],
Cell[575487, 11451, 5397, 158, 248, "Input"],
Cell[CellGroupData[{
Cell[580909, 11613, 616, 14, 34, "Input"],
Cell[581528, 11629, 381, 6, 32, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[581946, 11640, 521, 13, 34, "Input"],
Cell[582470, 11655, 186, 2, 32, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[582693, 11662, 1947, 48, 80, "Input"],
Cell[584643, 11712, 3414, 86, 615, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[588094, 11803, 522, 13, 34, "Input"],
Cell[588619, 11818, 160, 2, 32, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[588816, 11825, 475, 12, 34, "Input"],
Cell[589294, 11839, 165, 3, 32, "Output"]
}, Open  ]],
Cell[589474, 11845, 21225, 469, 761, "Input"],
Cell[CellGroupData[{
Cell[610724, 12318, 176, 4, 34, "Input"],
Cell[610903, 12324, 164, 3, 34, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[611104, 12332, 548, 16, 34, "Input"],
Cell[611655, 12350, 129, 3, 34, "Output"]
}, Open  ]]
}, Open  ]]
}
]
*)

