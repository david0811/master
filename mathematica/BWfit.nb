(* Content-type: application/vnd.wolfram.mathematica *)

(*** Wolfram Notebook File ***)
(* http://www.wolfram.com/nb *)

(* CreatedBy='Mathematica 11.0' *)

(*CacheID: 234*)
(* Internal cache information:
NotebookFileLineBreakTest
NotebookFileLineBreakTest
NotebookDataPosition[       158,          7]
NotebookDataLength[    237853,       5392]
NotebookOptionsPosition[    234337,       5274]
NotebookOutlinePosition[    234676,       5289]
CellTagsIndexPosition[    234633,       5286]
WindowFrame->Normal*)

(* Beginning of Notebook Content *)
Notebook[{
Cell[BoxData[
 RowBox[{"(*", 
  RowBox[{
   RowBox[{"(", 
    RowBox[{
     RowBox[{"ccdata", "[", "7", "]"}], "/.", 
     RowBox[{
      RowBox[{
       RowBox[{"{", 
        RowBox[{"x_", ",", "y_"}], "}"}], "/;", 
       RowBox[{"x", ">", "maxyx"}]}], "\[Rule]", 
      RowBox[{"{", 
       RowBox[{"x", ",", "0"}], "}"}]}]}], ")"}], "[", 
   RowBox[{"[", 
    RowBox[{"All", ",", "2"}], "]"}], "]"}], "*)"}]], "Input"],

Cell[BoxData[
 RowBox[{
  RowBox[{"SetDirectory", "[", 
   RowBox[{"ParentDirectory", "[", 
    RowBox[{"NotebookDirectory", "[", "]"}], "]"}], "]"}], ";"}]], "Input"],

Cell[CellGroupData[{

Cell["Define BWs", "Section",
 CellChangeTimes->{{3.72535801930616*^9, 3.72535802431168*^9}, {
  3.7253585975521927`*^9, 3.725358607310637*^9}}],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"BW", "[", 
    RowBox[{
    "w_", ",", "wr_", ",", "\[CapitalGamma]_", ",", "\[Delta]bg_", ",", 
     "const_", ",", "shift_", ",", "shift2_"}], "]"}], ":=", 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"const", 
     RowBox[{"(", 
      FractionBox[
       SuperscriptBox[
        RowBox[{"(", 
         RowBox[{"\[CapitalGamma]", "/", "2"}], ")"}], "2"], 
       RowBox[{
        SuperscriptBox[
         RowBox[{"(", 
          RowBox[{"w", "-", "wr"}], ")"}], "2"], "+", 
        SuperscriptBox[
         RowBox[{"(", 
          RowBox[{"\[CapitalGamma]", "/", "2"}], ")"}], "2"]}]], ")"}]}], "+",
     " ", 
    RowBox[{"\[Delta]bg", 
     FractionBox[
      RowBox[{
       RowBox[{"(", 
        RowBox[{"\[CapitalGamma]", "/", "2"}], ")"}], 
       RowBox[{"(", 
        RowBox[{"w", "-", "wr"}], ")"}]}], 
      RowBox[{
       SuperscriptBox[
        RowBox[{"(", 
         RowBox[{"w", "-", "wr"}], ")"}], "2"], "+", 
       SuperscriptBox[
        RowBox[{"(", 
         RowBox[{"\[CapitalGamma]", "/", "2"}], ")"}], "2"]}]]}], "+", 
    RowBox[{"0", " ", 
     FractionBox[
      RowBox[{
       RowBox[{"(", 
        RowBox[{
         RowBox[{"4", " ", 
          SuperscriptBox[
           RowBox[{"(", 
            RowBox[{"w", "-", "wr"}], ")"}], "2"]}], "-", " ", 
         SuperscriptBox["\[CapitalGamma]", "2"]}], ")"}], " ", 
       SuperscriptBox["deltabg", "2"]}], 
      RowBox[{
       RowBox[{"4", " ", 
        SuperscriptBox[
         RowBox[{"(", 
          RowBox[{"w", "-", "wr"}], ")"}], "2"]}], "+", 
       SuperscriptBox["\[CapitalGamma]", "2"]}]]}], "+", 
    RowBox[{"shift", " ", 
     RowBox[{"(", 
      RowBox[{"w", "-", "wr"}], ")"}]}], "+", "shift2"}]}], " ", 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"BWi", "[", 
    RowBox[{"w_", ",", "wr_", ",", "\[CapitalGamma]_", ",", "const_"}], "]"}],
    ":=", 
   RowBox[{"const", 
    RowBox[{"(", 
     FractionBox[
      SuperscriptBox[
       RowBox[{"(", 
        RowBox[{"\[CapitalGamma]", "/", "2"}], ")"}], "2"], 
      RowBox[{
       SuperscriptBox[
        RowBox[{"(", 
         RowBox[{"w", "-", "wr"}], ")"}], "2"], "+", 
       SuperscriptBox[
        RowBox[{"(", 
         RowBox[{"\[CapitalGamma]", "/", "2"}], ")"}], "2"]}]], ")"}]}]}], 
  " ", ";"}]}], "Input",
 CellChangeTimes->{{3.725011819995084*^9, 3.725011822739936*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell["Charmonium", "Section",
 CellChangeTimes->{{3.725358029993801*^9, 3.725358039838393*^9}}],

Cell[CellGroupData[{

Cell["Import Data", "Subsection",
 CellChangeTimes->{{3.725358042278319*^9, 3.725358055245266*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Tscanc", "=", 
  RowBox[{"IntegerPart", "[", 
   RowBox[{"1000", " ", 
    RowBox[{"Table", "[", 
     RowBox[{"i", ",", 
      RowBox[{"{", 
       RowBox[{"i", ",", "0.15", ",", "0.25", ",", "0.003"}], "}"}]}], 
     "]"}]}], "]"}]}]], "Input",
 CellChangeTimes->{{3.727415000625399*^9, 3.727415037238654*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
  "150", ",", "153", ",", "156", ",", "159", ",", "162", ",", "164", ",", 
   "167", ",", "170", ",", "174", ",", "177", ",", "180", ",", "183", ",", 
   "186", ",", "189", ",", "192", ",", "195", ",", "198", ",", "201", ",", 
   "204", ",", "207", ",", "210", ",", "213", ",", "216", ",", "219", ",", 
   "222", ",", "224", ",", "227", ",", "230", ",", "234", ",", "237", ",", 
   "240", ",", "243", ",", "246", ",", "249"}], "}"}]], "Output",
 CellChangeTimes->{{3.727415018125125*^9, 3.727415038272635*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"Do", "[", 
   RowBox[{
    RowBox[{
     RowBox[{
      RowBox[{"ccdata", "[", "n", "]"}], "=", 
      RowBox[{"Import", "[", 
       RowBox[{"\"\<spectraldata/Tscan/cc/swccT\>\"", "<>", 
        RowBox[{"ToString", "[", 
         RowBox[{"Tscanc", "[", 
          RowBox[{"[", "n", "]"}], "]"}], "]"}], "<>", 
        "\"\<spectra.dat\>\""}], "]"}]}], ";"}], ",", 
    RowBox[{"{", 
     RowBox[{"n", ",", 
      RowBox[{"Length", "[", "Tscanc", "]"}]}], "}"}]}], "]"}], ";"}], "\n", 
 RowBox[{"Manipulate", "[", 
  RowBox[{
   RowBox[{"ListPlot", "[", 
    RowBox[{
     RowBox[{"ccdata", "[", "n", "]"}], ",", 
     RowBox[{"Joined", "\[Rule]", "True"}]}], "]"}], ",", 
   RowBox[{"{", 
    RowBox[{"n", ",", "1", ",", 
     RowBox[{"Length", "[", "Tscanc", "]"}], ",", "1"}], "}"}]}], 
  "]"}]}], "Input",
 CellChangeTimes->{{3.725358141297976*^9, 3.725358229741619*^9}, {
  3.726381203252303*^9, 3.72638122981116*^9}, {3.726817443686364*^9, 
  3.726817450558557*^9}, {3.7268175034474773`*^9, 3.7268175195436897`*^9}, {
  3.726817549624247*^9, 3.726817584073985*^9}, {3.726817645844924*^9, 
  3.726817661849916*^9}, {3.7268178518132267`*^9, 3.726817853316984*^9}, {
  3.726818220884605*^9, 3.726818248043754*^9}, {3.726818395112039*^9, 
  3.726818405030871*^9}}],

Cell[BoxData[
 TagBox[
  StyleBox[
   DynamicModuleBox[{$CellContext`n$$ = 1, Typeset`show$$ = True, 
    Typeset`bookmarkList$$ = {}, Typeset`bookmarkMode$$ = "Menu", 
    Typeset`animator$$, Typeset`animvar$$ = 1, Typeset`name$$ = 
    "\"untitled\"", Typeset`specs$$ = {{
      Hold[$CellContext`n$$], 1, 34, 1}}, Typeset`size$$ = {
    360., {106., 112.}}, Typeset`update$$ = 0, Typeset`initDone$$, 
    Typeset`skipInitDone$$ = True, $CellContext`n$8664$$ = 0}, 
    DynamicBox[Manipulate`ManipulateBoxes[
     1, StandardForm, "Variables" :> {$CellContext`n$$ = 1}, 
      "ControllerVariables" :> {
        Hold[$CellContext`n$$, $CellContext`n$8664$$, 0]}, 
      "OtherVariables" :> {
       Typeset`show$$, Typeset`bookmarkList$$, Typeset`bookmarkMode$$, 
        Typeset`animator$$, Typeset`animvar$$, Typeset`name$$, 
        Typeset`specs$$, Typeset`size$$, Typeset`update$$, Typeset`initDone$$,
         Typeset`skipInitDone$$}, "Body" :> ListPlot[
        $CellContext`ccdata[$CellContext`n$$], Joined -> True], 
      "Specifications" :> {{$CellContext`n$$, 1, 34, 1}}, "Options" :> {}, 
      "DefaultOptions" :> {}],
     ImageSizeCache->{407., {150., 157.}},
     SingleEvaluation->True],
    Deinitialization:>None,
    DynamicModuleValues:>{},
    SynchronousInitialization->True,
    UndoTrackedVariables:>{Typeset`show$$, Typeset`bookmarkMode$$},
    UnsavedVariables:>{Typeset`initDone$$},
    UntrackedVariables:>{Typeset`size$$}], "Manipulate",
   Deployed->True,
   StripOnInput->False],
  Manipulate`InterpretManipulate[1]]], "Output",
 CellChangeTimes->{
  3.726824276224249*^9, {3.727414606382472*^9, 3.727414632551548*^9}, 
   3.727415049897785*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"Do", "[", 
   RowBox[{
    RowBox[{
     RowBox[{
      RowBox[{"ccdatau", "[", "n", "]"}], "=", 
      RowBox[{"Import", "[", 
       RowBox[{"\"\<spectraldata/Tscan/cc/swccT\>\"", "<>", 
        RowBox[{"ToString", "[", 
         RowBox[{"Tscanc", "[", 
          RowBox[{"[", "n", "]"}], "]"}], "]"}], "<>", 
        "\"\<uspectra.dat\>\""}], "]"}]}], ";"}], ",", 
    RowBox[{"{", 
     RowBox[{"n", ",", 
      RowBox[{"Length", "[", "Tscanc", "]"}]}], "}"}]}], "]"}], ";"}], "\n", 
 RowBox[{"Manipulate", "[", 
  RowBox[{
   RowBox[{"ListPlot", "[", 
    RowBox[{
     RowBox[{"ccdatau", "[", "n", "]"}], ",", 
     RowBox[{"Joined", "\[Rule]", "True"}]}], "]"}], ",", 
   RowBox[{"{", 
    RowBox[{"n", ",", "1", ",", 
     RowBox[{"Length", "[", "Tscanc", "]"}], ",", "1"}], "}"}]}], 
  "]"}]}], "Input",
 CellChangeTimes->{{3.727415066415371*^9, 3.727415069647493*^9}, 
   3.727430207293042*^9}],

Cell[BoxData[
 TagBox[
  StyleBox[
   DynamicModuleBox[{$CellContext`n$$ = 1, Typeset`show$$ = True, 
    Typeset`bookmarkList$$ = {}, Typeset`bookmarkMode$$ = "Menu", 
    Typeset`animator$$, Typeset`animvar$$ = 1, Typeset`name$$ = 
    "\"untitled\"", Typeset`specs$$ = {{
      Hold[$CellContext`n$$], 1, 34, 1}}, Typeset`size$$ = {
    360., {106., 112.}}, Typeset`update$$ = 0, Typeset`initDone$$, 
    Typeset`skipInitDone$$ = True, $CellContext`n$23753$$ = 0}, 
    DynamicBox[Manipulate`ManipulateBoxes[
     1, StandardForm, "Variables" :> {$CellContext`n$$ = 1}, 
      "ControllerVariables" :> {
        Hold[$CellContext`n$$, $CellContext`n$23753$$, 0]}, 
      "OtherVariables" :> {
       Typeset`show$$, Typeset`bookmarkList$$, Typeset`bookmarkMode$$, 
        Typeset`animator$$, Typeset`animvar$$, Typeset`name$$, 
        Typeset`specs$$, Typeset`size$$, Typeset`update$$, Typeset`initDone$$,
         Typeset`skipInitDone$$}, "Body" :> ListPlot[
        $CellContext`ccdatau[$CellContext`n$$], Joined -> True], 
      "Specifications" :> {{$CellContext`n$$, 1, 34, 1}}, "Options" :> {}, 
      "DefaultOptions" :> {}],
     ImageSizeCache->{407., {150., 157.}},
     SingleEvaluation->True],
    Deinitialization:>None,
    DynamicModuleValues:>{},
    SynchronousInitialization->True,
    UndoTrackedVariables:>{Typeset`show$$, Typeset`bookmarkMode$$},
    UnsavedVariables:>{Typeset`initDone$$},
    UntrackedVariables:>{Typeset`size$$}], "Manipulate",
   Deployed->True,
   StripOnInput->False],
  Manipulate`InterpretManipulate[1]]], "Output",
 CellChangeTimes->{3.7274150755771017`*^9, 3.727430213928583*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"Do", "[", 
   RowBox[{
    RowBox[{
     RowBox[{
      RowBox[{"ccdatal", "[", "n", "]"}], "=", 
      RowBox[{"Import", "[", 
       RowBox[{"\"\<spectraldata/Tscan/cc/swccT\>\"", "<>", 
        RowBox[{"ToString", "[", 
         RowBox[{"Tscanc", "[", 
          RowBox[{"[", "n", "]"}], "]"}], "]"}], "<>", 
        "\"\<lspectra.dat\>\""}], "]"}]}], ";"}], ",", 
    RowBox[{"{", 
     RowBox[{"n", ",", 
      RowBox[{"Length", "[", "Tscanc", "]"}]}], "}"}]}], "]"}], ";"}], "\n", 
 RowBox[{"Manipulate", "[", 
  RowBox[{
   RowBox[{"ListPlot", "[", 
    RowBox[{
     RowBox[{"ccdatal", "[", "n", "]"}], ",", 
     RowBox[{"Joined", "\[Rule]", "True"}]}], "]"}], ",", 
   RowBox[{"{", 
    RowBox[{"n", ",", "1", ",", 
     RowBox[{"Length", "[", "Tscanc", "]"}], ",", "1"}], "}"}]}], 
  "]"}]}], "Input",
 CellChangeTimes->{{3.727415086263685*^9, 3.7274150893276997`*^9}, 
   3.727430220844936*^9}],

Cell[BoxData[
 TagBox[
  StyleBox[
   DynamicModuleBox[{$CellContext`n$$ = 6, Typeset`show$$ = True, 
    Typeset`bookmarkList$$ = {}, Typeset`bookmarkMode$$ = "Menu", 
    Typeset`animator$$, Typeset`animvar$$ = 1, Typeset`name$$ = 
    "\"untitled\"", Typeset`specs$$ = {{
      Hold[$CellContext`n$$], 1, 34, 1}}, Typeset`size$$ = {
    360., {106., 112.}}, Typeset`update$$ = 0, Typeset`initDone$$, 
    Typeset`skipInitDone$$ = True, $CellContext`n$25721$$ = 0}, 
    DynamicBox[Manipulate`ManipulateBoxes[
     1, StandardForm, "Variables" :> {$CellContext`n$$ = 1}, 
      "ControllerVariables" :> {
        Hold[$CellContext`n$$, $CellContext`n$25721$$, 0]}, 
      "OtherVariables" :> {
       Typeset`show$$, Typeset`bookmarkList$$, Typeset`bookmarkMode$$, 
        Typeset`animator$$, Typeset`animvar$$, Typeset`name$$, 
        Typeset`specs$$, Typeset`size$$, Typeset`update$$, Typeset`initDone$$,
         Typeset`skipInitDone$$}, "Body" :> ListPlot[
        $CellContext`ccdatal[$CellContext`n$$], Joined -> True], 
      "Specifications" :> {{$CellContext`n$$, 1, 34, 1}}, "Options" :> {}, 
      "DefaultOptions" :> {}],
     ImageSizeCache->{407., {161., 168.}},
     SingleEvaluation->True],
    Deinitialization:>None,
    DynamicModuleValues:>{},
    SynchronousInitialization->True,
    UndoTrackedVariables:>{Typeset`show$$, Typeset`bookmarkMode$$},
    UnsavedVariables:>{Typeset`initDone$$},
    UntrackedVariables:>{Typeset`size$$}], "Manipulate",
   Deployed->True,
   StripOnInput->False],
  Manipulate`InterpretManipulate[1]]], "Output",
 CellChangeTimes->{3.727415094627001*^9, 3.72743022601332*^9}]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Fitting", "Subsection",
 CellChangeTimes->{{3.7253580702221193`*^9, 3.725358078577265*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"fit", "[", 
   RowBox[{"input_", ",", "output_"}], "]"}], ":=", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
      RowBox[{"temp", "=", 
       RowBox[{"Range", "[", 
        RowBox[{"1", ",", 
         RowBox[{"Length", "[", "Tscanc", "]"}]}], "]"}]}], ",", "n", ",", 
      "maxx", ",", "minx", ",", "maxy", ",", "maxyx", ",", "maxyi", ",", 
      "maxxy", ",", "inter", ",", "maxxs", ",", "maxxis", ",", "maxys", ",", 
      "mins", ",", "hwhmi", ",", "gammas", ",", "inputc", ",", "bad"}], "}"}],
     ",", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"SetSharedVariable", "[", "temp", "]"}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"ParallelDo", "[", 
      RowBox[{
       RowBox[{
        RowBox[{"n", "=", 
         RowBox[{"temp", "[", 
          RowBox[{"[", "ii", "]"}], "]"}]}], ";", "\[IndentingNewLine]", 
        RowBox[{"maxx", "=", 
         RowBox[{"Max", "[", 
          RowBox[{
           RowBox[{"input", "[", "n", "]"}], "[", 
           RowBox[{"[", 
            RowBox[{"All", ",", "1"}], "]"}], "]"}], "]"}]}], ";", 
        "\[IndentingNewLine]", 
        RowBox[{"minx", "=", 
         RowBox[{"Min", "[", 
          RowBox[{
           RowBox[{"input", "[", "n", "]"}], "[", 
           RowBox[{"[", 
            RowBox[{"All", ",", "1"}], "]"}], "]"}], "]"}]}], ";", 
        "\[IndentingNewLine]", 
        RowBox[{"maxy", "=", 
         RowBox[{"Max", "[", 
          RowBox[{
           RowBox[{"input", "[", "n", "]"}], "[", 
           RowBox[{"[", 
            RowBox[{"All", ",", "2"}], "]"}], "]"}], "]"}]}], ";", 
        "\[IndentingNewLine]", 
        RowBox[{"maxyx", "=", 
         RowBox[{
          RowBox[{"input", "[", "n", "]"}], "[", 
          RowBox[{"[", 
           RowBox[{
            RowBox[{
             RowBox[{"Position", "[", 
              RowBox[{
               RowBox[{"input", "[", "n", "]"}], ",", 
               RowBox[{"Max", "[", 
                RowBox[{
                 RowBox[{"input", "[", "n", "]"}], "[", 
                 RowBox[{"[", 
                  RowBox[{"All", ",", "2"}], "]"}], "]"}], "]"}]}], "]"}], 
             "[", 
             RowBox[{"[", 
              RowBox[{"1", ",", "1"}], "]"}], "]"}], ",", "1"}], "]"}], 
          "]"}]}], ";", "\[IndentingNewLine]", 
        RowBox[{"maxyi", "=", 
         RowBox[{
          RowBox[{"Position", "[", 
           RowBox[{
            RowBox[{
             RowBox[{"input", "[", "n", "]"}], "[", 
             RowBox[{"[", 
              RowBox[{"All", ",", "1"}], "]"}], "]"}], ",", "maxyx"}], "]"}], 
          "[", 
          RowBox[{"[", 
           RowBox[{"1", ",", "1"}], "]"}], "]"}]}], ";", 
        "\[IndentingNewLine]", 
        RowBox[{"maxxy", "=", 
         RowBox[{
          RowBox[{"input", "[", "n", "]"}], "[", 
          RowBox[{"[", 
           RowBox[{
            RowBox[{
             RowBox[{"Position", "[", 
              RowBox[{
               RowBox[{"input", "[", "n", "]"}], ",", 
               RowBox[{"Max", "[", 
                RowBox[{
                 RowBox[{"input", "[", "n", "]"}], "[", 
                 RowBox[{"[", 
                  RowBox[{"All", ",", "1"}], "]"}], "]"}], "]"}]}], "]"}], 
             "[", 
             RowBox[{"[", 
              RowBox[{"1", ",", "1"}], "]"}], "]"}], ",", "2"}], "]"}], 
          "]"}]}], ";", "\[IndentingNewLine]", 
        RowBox[{"inter", "=", 
         RowBox[{"Interpolation", "[", 
          RowBox[{
           RowBox[{"input", "[", "n", "]"}], ",", 
           RowBox[{"InterpolationOrder", "\[Rule]", "1"}]}], "]"}]}], ";", 
        "\n", 
        RowBox[{"maxxs", "=", 
         RowBox[{"Sort", "[", 
          RowBox[{"Quiet", "[", 
           RowBox[{
            RowBox[{"DeleteDuplicatesBy", "[", 
             RowBox[{
              RowBox[{"Table", "[", 
               RowBox[{
                RowBox[{"{", 
                 RowBox[{
                  RowBox[{"Round", "[", 
                   RowBox[{
                    RowBox[{"FindMaxValue", "[", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"inter", "[", "x", "]"}], ",", 
                    RowBox[{
                    "maxyx", "\[LessEqual]", "x", "\[LessEqual]", "maxx"}]}], 
                    "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"x", ",", "a"}], "}"}]}], "]"}], ",", "maxxy"}], 
                   "]"}], ",", 
                  RowBox[{
                   RowBox[{"FindArgMax", "[", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"inter", "[", "x", "]"}], ",", 
                    RowBox[{
                    "maxyx", "\[LessEqual]", "x", "\[LessEqual]", "maxx"}]}], 
                    "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"x", ",", "a"}], "}"}]}], "]"}], "[", 
                   RowBox[{"[", "1", "]"}], "]"}]}], "}"}], ",", 
                RowBox[{"{", 
                 RowBox[{"a", ",", "maxyx", ",", "maxx", ",", 
                  FractionBox[
                   RowBox[{"maxx", "-", "maxyx"}], "50"]}], "}"}]}], "]"}], 
              ",", "First"}], "]"}], "[", 
            RowBox[{"[", 
             RowBox[{"All", ",", "2"}], "]"}], "]"}], "]"}], "]"}]}], ";", 
        "\[IndentingNewLine]", 
        RowBox[{"maxxis", "=", 
         RowBox[{"Sort", "[", 
          RowBox[{"Table", "[", 
           RowBox[{
            RowBox[{
             RowBox[{"Position", "[", 
              RowBox[{
               RowBox[{
                RowBox[{"input", "[", "n", "]"}], "[", 
                RowBox[{"[", 
                 RowBox[{"All", ",", "1"}], "]"}], "]"}], ",", 
               RowBox[{
                RowBox[{"Nearest", "[", 
                 RowBox[{
                  RowBox[{
                   RowBox[{"input", "[", "n", "]"}], "[", 
                   RowBox[{"[", 
                    RowBox[{"All", ",", "1"}], "]"}], "]"}], ",", 
                  RowBox[{"maxxs", "[", 
                   RowBox[{"[", "i", "]"}], "]"}]}], "]"}], "[", 
                RowBox[{"[", "1", "]"}], "]"}]}], "]"}], "[", 
             RowBox[{"[", 
              RowBox[{"1", ",", "1"}], "]"}], "]"}], ",", 
            RowBox[{"{", 
             RowBox[{"i", ",", 
              RowBox[{"Length", "[", "maxxs", "]"}]}], "}"}]}], "]"}], 
          "]"}]}], ";", "\[IndentingNewLine]", 
        RowBox[{"maxys", "=", 
         RowBox[{"Table", "[", 
          RowBox[{
           RowBox[{
            RowBox[{"input", "[", "n", "]"}], "[", 
            RowBox[{"[", 
             RowBox[{
              RowBox[{"maxxis", "[", 
               RowBox[{"[", "i", "]"}], "]"}], ",", "2"}], "]"}], "]"}], ",", 
           
           RowBox[{"{", 
            RowBox[{"i", ",", 
             RowBox[{"Length", "[", "maxxs", "]"}]}], "}"}]}], "]"}]}], ";", 
        "\[IndentingNewLine]", 
        RowBox[{"bad", "=", 
         RowBox[{"{", "}"}]}], ";", "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{"Do", "[", 
          RowBox[{
           RowBox[{"If", "[", 
            RowBox[{
             RowBox[{
              RowBox[{"maxys", "[", 
               RowBox[{"[", "i", "]"}], "]"}], "<", 
              RowBox[{"maxys", "[", 
               RowBox[{"[", 
                RowBox[{"i", "+", "1"}], "]"}], "]"}]}], ",", 
             RowBox[{"bad", "=", 
              RowBox[{"Append", "[", 
               RowBox[{"bad", ",", "i"}], "]"}]}]}], "]"}], ",", 
           RowBox[{"{", 
            RowBox[{"i", ",", 
             RowBox[{
              RowBox[{"Length", "[", "maxys", "]"}], "-", "1"}]}], "}"}]}], 
          "]"}], "\n", 
         RowBox[{"Do", "[", 
          RowBox[{
           RowBox[{
            RowBox[{"maxxs", "=", 
             RowBox[{"Delete", "[", 
              RowBox[{"maxxs", ",", 
               RowBox[{"bad", "[", 
                RowBox[{"[", "i", "]"}], "]"}]}], "]"}]}], ";", 
            RowBox[{"maxys", "=", 
             RowBox[{"Delete", "[", 
              RowBox[{"maxys", ",", 
               RowBox[{"bad", "[", 
                RowBox[{"[", "i", "]"}], "]"}]}], "]"}]}], ";", 
            RowBox[{"maxxis", "=", 
             RowBox[{"Delete", "[", 
              RowBox[{"maxxis", ",", 
               RowBox[{"bad", "[", 
                RowBox[{"[", "i", "]"}], "]"}]}], "]"}]}], ";"}], ",", 
           RowBox[{"{", 
            RowBox[{"i", ",", 
             RowBox[{"Length", "[", "bad", "]"}]}], "}"}]}], "]"}], 
         "\[IndentingNewLine]", 
         RowBox[{"If", "[", 
          RowBox[{
           RowBox[{
            RowBox[{"Length", "[", "maxxs", "]"}], ">", "1"}], ",", 
           "\[IndentingNewLine]", 
           RowBox[{
            RowBox[{"mins", "=", 
             RowBox[{"Range", "[", 
              RowBox[{
               RowBox[{"Length", "[", "maxxs", "]"}], "-", "1"}], "]"}]}], 
            ";", "\[IndentingNewLine]", 
            RowBox[{"Do", "[", 
             RowBox[{
              RowBox[{
               RowBox[{"mins", "[", 
                RowBox[{"[", "i", "]"}], "]"}], "=", 
               RowBox[{
                RowBox[{"Position", "[", 
                 RowBox[{
                  RowBox[{
                   RowBox[{"input", "[", "n", "]"}], "[", 
                   RowBox[{"[", 
                    RowBox[{"All", ",", "2"}], "]"}], "]"}], ",", 
                  RowBox[{"Min", "[", 
                   RowBox[{
                    RowBox[{"input", "[", "n", "]"}], "[", 
                    RowBox[{"[", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"maxxis", "[", 
                    RowBox[{"[", "i", "]"}], "]"}], ";;", 
                    RowBox[{"maxxis", "[", 
                    RowBox[{"[", 
                    RowBox[{"i", "+", "1"}], "]"}], "]"}]}], ",", "2"}], 
                    "]"}], "]"}], "]"}]}], "]"}], "[", 
                RowBox[{"[", 
                 RowBox[{"1", ",", "1"}], "]"}], "]"}]}], ",", 
              RowBox[{"{", 
               RowBox[{"i", ",", 
                RowBox[{
                 RowBox[{"Length", "[", "maxxs", "]"}], "-", "1"}]}], "}"}]}],
              "]"}], ";", "\[IndentingNewLine]", 
            RowBox[{"mins", "=", 
             RowBox[{"Append", "[", 
              RowBox[{
               RowBox[{"Prepend", "[", 
                RowBox[{"mins", ",", 
                 RowBox[{
                  RowBox[{"maxxis", "[", 
                   RowBox[{"[", "1", "]"}], "]"}], "-", 
                  RowBox[{"2", " ", 
                   RowBox[{"(", 
                    RowBox[{
                    RowBox[{"mins", "[", 
                    RowBox[{"[", "1", "]"}], "]"}], "-", 
                    RowBox[{"maxxis", "[", 
                    RowBox[{"[", "1", "]"}], "]"}]}], ")"}]}]}]}], "]"}], ",", 
               RowBox[{"If", "[", 
                RowBox[{
                 RowBox[{
                  RowBox[{
                   RowBox[{"maxxis", "[", 
                    RowBox[{"[", 
                    RowBox[{"-", "1"}], "]"}], "]"}], "+", 
                   RowBox[{"(", 
                    RowBox[{
                    RowBox[{"maxxis", "[", 
                    RowBox[{"[", 
                    RowBox[{"-", "1"}], "]"}], "]"}], "-", 
                    RowBox[{"mins", "[", 
                    RowBox[{"[", 
                    RowBox[{"-", "1"}], "]"}], "]"}]}], ")"}]}], 
                  "\[LessEqual]", " ", 
                  RowBox[{"Length", "[", 
                   RowBox[{"input", "[", "n", "]"}], "]"}]}], ",", 
                 RowBox[{
                  RowBox[{"maxxis", "[", 
                   RowBox[{"[", 
                    RowBox[{"-", "1"}], "]"}], "]"}], "+", 
                  RowBox[{"(", 
                   RowBox[{
                    RowBox[{"maxxis", "[", 
                    RowBox[{"[", 
                    RowBox[{"-", "1"}], "]"}], "]"}], "-", 
                    RowBox[{"mins", "[", 
                    RowBox[{"[", 
                    RowBox[{"-", "1"}], "]"}], "]"}]}], ")"}]}], ",", 
                 RowBox[{"Length", "[", 
                  RowBox[{"input", "[", "n", "]"}], "]"}]}], "]"}]}], "]"}]}],
             ";"}], ",", "\[IndentingNewLine]", 
           RowBox[{
            RowBox[{"hwhmi", "=", 
             RowBox[{
              RowBox[{"Position", "[", 
               RowBox[{
                RowBox[{"input", "[", "n", "]"}], ",", 
                RowBox[{
                 RowBox[{"Nearest", "[", 
                  RowBox[{
                   RowBox[{
                    RowBox[{"input", "[", "n", "]"}], "[", 
                    RowBox[{"[", 
                    RowBox[{
                    RowBox[{";;", "maxyi"}], ",", "2"}], "]"}], "]"}], ",", 
                   RowBox[{"maxy", "/", "2"}]}], "]"}], "[", 
                 RowBox[{"[", "1", "]"}], "]"}]}], "]"}], "[", 
              RowBox[{"[", 
               RowBox[{"1", ",", "1"}], "]"}], "]"}]}], ";", 
            "\[IndentingNewLine]", 
            RowBox[{"mins", "=", 
             RowBox[{"{", 
              RowBox[{
               RowBox[{"maxyi", "-", 
                RowBox[{"3", 
                 RowBox[{"(", 
                  RowBox[{"maxyi", "-", "hwhmi"}], ")"}]}]}], ",", 
               RowBox[{"maxyi", "+", 
                RowBox[{"3", 
                 RowBox[{"(", 
                  RowBox[{"maxyi", "-", "hwhmi"}], ")"}]}]}]}], "}"}]}], 
            ";"}]}], "]"}]}], ";", "\n", 
        RowBox[{"hwhmi", "=", 
         RowBox[{"Range", "[", 
          RowBox[{"Length", "[", "maxxs", "]"}], "]"}]}], ";", "\n", 
        RowBox[{"Do", "[", 
         RowBox[{
          RowBox[{
           RowBox[{"hwhmi", "[", 
            RowBox[{"[", "i", "]"}], "]"}], "=", 
           RowBox[{
            RowBox[{"Position", "[", 
             RowBox[{
              RowBox[{"input", "[", "n", "]"}], ",", 
              RowBox[{
               RowBox[{"Nearest", "[", 
                RowBox[{
                 RowBox[{
                  RowBox[{"input", "[", "n", "]"}], "[", 
                  RowBox[{"[", 
                   RowBox[{
                    RowBox[{
                    RowBox[{"mins", "[", 
                    RowBox[{"[", "i", "]"}], "]"}], ";;", 
                    RowBox[{"maxxis", "[", 
                    RowBox[{"[", "i", "]"}], "]"}]}], ",", "2"}], "]"}], 
                  "]"}], ",", 
                 RowBox[{
                  RowBox[{"inter", "[", 
                   RowBox[{"maxxs", "[", 
                    RowBox[{"[", "i", "]"}], "]"}], "]"}], "/", "2"}]}], 
                "]"}], "[", 
               RowBox[{"[", "1", "]"}], "]"}]}], "]"}], "[", 
            RowBox[{"[", 
             RowBox[{"1", ",", "1"}], "]"}], "]"}]}], ",", 
          RowBox[{"{", 
           RowBox[{"i", ",", 
            RowBox[{"Length", "[", "maxxs", "]"}]}], "}"}]}], "]"}], ";", 
        "\[IndentingNewLine]", 
        RowBox[{"Do", "[", 
         RowBox[{
          RowBox[{"If", "[", 
           RowBox[{
            RowBox[{"Or", "[", 
             RowBox[{
              RowBox[{
               RowBox[{"2", " ", 
                RowBox[{
                 RowBox[{"input", "[", "n", "]"}], "[", 
                 RowBox[{"[", 
                  RowBox[{
                   RowBox[{"hwhmi", "[", 
                    RowBox[{"[", 
                    RowBox[{"-", "i"}], "]"}], "]"}], ",", "2"}], "]"}], 
                 "]"}]}], "\[LessEqual]", 
               RowBox[{"0.5", " ", 
                RowBox[{"maxys", "[", 
                 RowBox[{"[", 
                  RowBox[{"-", "i"}], "]"}], "]"}]}]}], ",", 
              RowBox[{
               RowBox[{"2", " ", 
                RowBox[{
                 RowBox[{"input", "[", "n", "]"}], "[", 
                 RowBox[{"[", 
                  RowBox[{
                   RowBox[{"hwhmi", "[", 
                    RowBox[{"[", 
                    RowBox[{"-", "i"}], "]"}], "]"}], ",", "2"}], "]"}], 
                 "]"}]}], "\[GreaterEqual]", 
               RowBox[{"1.5", " ", 
                RowBox[{"maxys", "[", 
                 RowBox[{"[", 
                  RowBox[{"-", "i"}], "]"}], "]"}]}]}]}], "]"}], ",", 
            RowBox[{
             RowBox[{"hwhmi", "[", 
              RowBox[{"[", 
               RowBox[{"-", "i"}], "]"}], "]"}], "=", 
             RowBox[{"maxxis", "[", 
              RowBox[{"[", 
               RowBox[{"-", "i"}], "]"}], "]"}]}]}], "]"}], ",", 
          RowBox[{"{", 
           RowBox[{"i", ",", 
            RowBox[{
             RowBox[{"Length", "[", "hwhmi", "]"}], "-", "1"}]}], "}"}]}], 
         "]"}], ";", "\[IndentingNewLine]", 
        RowBox[{"bad", "=", 
         RowBox[{"Position", "[", 
          RowBox[{
           RowBox[{"maxxis", "-", "hwhmi"}], ",", "0"}], "]"}]}], ";", 
        "\[IndentingNewLine]", 
        RowBox[{"hwhmi", "=", 
         RowBox[{"DeleteCases", "[", 
          RowBox[{
           RowBox[{"maxxis", "-", "hwhmi"}], ",", "0"}], "]"}]}], ";", 
        "\[IndentingNewLine]", 
        RowBox[{"maxxis", "=", 
         RowBox[{"Delete", "[", 
          RowBox[{"maxxis", ",", "bad"}], "]"}]}], ";", "\n", 
        RowBox[{"maxxs", "=", 
         RowBox[{"Delete", "[", 
          RowBox[{"maxxs", ",", "bad"}], "]"}]}], ";", "\[IndentingNewLine]", 
        
        RowBox[{"If", "[", 
         RowBox[{
          RowBox[{
           RowBox[{"Length", "[", "maxxs", "]"}], ">", "1"}], ",", 
          "\[IndentingNewLine]", 
          RowBox[{
           RowBox[{"mins", "=", 
            RowBox[{"Range", "[", 
             RowBox[{
              RowBox[{"Length", "[", "maxxs", "]"}], "-", "1"}], "]"}]}], ";",
            "\[IndentingNewLine]", 
           RowBox[{"Do", "[", 
            RowBox[{
             RowBox[{
              RowBox[{"mins", "[", 
               RowBox[{"[", "i", "]"}], "]"}], "=", 
              RowBox[{
               RowBox[{"Position", "[", 
                RowBox[{
                 RowBox[{
                  RowBox[{"input", "[", "n", "]"}], "[", 
                  RowBox[{"[", 
                   RowBox[{"All", ",", "2"}], "]"}], "]"}], ",", 
                 RowBox[{"Min", "[", 
                  RowBox[{
                   RowBox[{"input", "[", "n", "]"}], "[", 
                   RowBox[{"[", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"maxxis", "[", 
                    RowBox[{"[", "i", "]"}], "]"}], ";;", 
                    RowBox[{"maxxis", "[", 
                    RowBox[{"[", 
                    RowBox[{"i", "+", "1"}], "]"}], "]"}]}], ",", "2"}], 
                    "]"}], "]"}], "]"}]}], "]"}], "[", 
               RowBox[{"[", 
                RowBox[{"1", ",", "1"}], "]"}], "]"}]}], ",", 
             RowBox[{"{", 
              RowBox[{"i", ",", 
               RowBox[{
                RowBox[{"Length", "[", "maxxs", "]"}], "-", "1"}]}], "}"}]}], 
            "]"}], ";", "\[IndentingNewLine]", 
           RowBox[{"mins", "=", 
            RowBox[{"Append", "[", 
             RowBox[{
              RowBox[{"Prepend", "[", 
               RowBox[{"mins", ",", 
                RowBox[{
                 RowBox[{"maxxis", "[", 
                  RowBox[{"[", "1", "]"}], "]"}], "-", 
                 RowBox[{"2", " ", 
                  RowBox[{"(", 
                   RowBox[{
                    RowBox[{"mins", "[", 
                    RowBox[{"[", "1", "]"}], "]"}], "-", 
                    RowBox[{"maxxis", "[", 
                    RowBox[{"[", "1", "]"}], "]"}]}], ")"}]}]}]}], "]"}], ",", 
              RowBox[{"If", "[", 
               RowBox[{
                RowBox[{
                 RowBox[{
                  RowBox[{"maxxis", "[", 
                   RowBox[{"[", 
                    RowBox[{"-", "1"}], "]"}], "]"}], "+", 
                  RowBox[{"(", 
                   RowBox[{
                    RowBox[{"maxxis", "[", 
                    RowBox[{"[", 
                    RowBox[{"-", "1"}], "]"}], "]"}], "-", 
                    RowBox[{"mins", "[", 
                    RowBox[{"[", 
                    RowBox[{"-", "1"}], "]"}], "]"}]}], ")"}]}], 
                 "\[LessEqual]", " ", 
                 RowBox[{"Length", "[", 
                  RowBox[{"input", "[", "n", "]"}], "]"}]}], ",", 
                RowBox[{
                 RowBox[{"maxxis", "[", 
                  RowBox[{"[", 
                   RowBox[{"-", "1"}], "]"}], "]"}], "+", 
                 RowBox[{"(", 
                  RowBox[{
                   RowBox[{"maxxis", "[", 
                    RowBox[{"[", 
                    RowBox[{"-", "1"}], "]"}], "]"}], "-", 
                   RowBox[{"mins", "[", 
                    RowBox[{"[", 
                    RowBox[{"-", "1"}], "]"}], "]"}]}], ")"}]}], ",", 
                RowBox[{"Length", "[", 
                 RowBox[{"input", "[", "n", "]"}], "]"}]}], "]"}]}], "]"}]}], 
           ";"}], ",", "\[IndentingNewLine]", 
          RowBox[{
           RowBox[{"hwhmi", "=", 
            RowBox[{
             RowBox[{"Position", "[", 
              RowBox[{
               RowBox[{"input", "[", "n", "]"}], ",", 
               RowBox[{
                RowBox[{"Nearest", "[", 
                 RowBox[{
                  RowBox[{
                   RowBox[{"input", "[", "n", "]"}], "[", 
                   RowBox[{"[", 
                    RowBox[{
                    RowBox[{";;", "maxyi"}], ",", "2"}], "]"}], "]"}], ",", 
                  RowBox[{"maxy", "/", "2"}]}], "]"}], "[", 
                RowBox[{"[", "1", "]"}], "]"}]}], "]"}], "[", 
             RowBox[{"[", 
              RowBox[{"1", ",", "1"}], "]"}], "]"}]}], ";", 
           "\[IndentingNewLine]", 
           RowBox[{"mins", "=", 
            RowBox[{"{", 
             RowBox[{
              RowBox[{"maxyi", "-", 
               RowBox[{"3", 
                RowBox[{"(", 
                 RowBox[{"maxyi", "-", "hwhmi"}], ")"}]}]}], ",", 
              RowBox[{"maxyi", "+", 
               RowBox[{"3", 
                RowBox[{"(", 
                 RowBox[{"maxyi", "-", "hwhmi"}], ")"}]}]}]}], "}"}]}], 
           ";"}]}], "]"}], ";", "\n", 
        RowBox[{"gammas", "=", 
         RowBox[{"Range", "[", 
          RowBox[{"Length", "[", "hwhmi", "]"}], "]"}]}], ";", 
        "\[IndentingNewLine]", 
        RowBox[{"Do", "[", 
         RowBox[{
          RowBox[{
           RowBox[{"gammas", "[", 
            RowBox[{"[", "i", "]"}], "]"}], "=", 
           RowBox[{"2", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{"maxxs", "[", 
               RowBox[{"[", "i", "]"}], "]"}], "-", 
              RowBox[{
               RowBox[{"input", "[", "n", "]"}], "[", 
               RowBox[{"[", 
                RowBox[{
                 RowBox[{
                  RowBox[{"maxxis", "[", 
                   RowBox[{"[", "i", "]"}], "]"}], "-", 
                  RowBox[{"hwhmi", "[", 
                   RowBox[{"[", "i", "]"}], "]"}]}], ",", "1"}], "]"}], 
               "]"}]}], ")"}]}]}], ",", 
          RowBox[{"{", 
           RowBox[{"i", ",", 
            RowBox[{"Length", "[", "hwhmi", "]"}]}], "}"}]}], "]"}], ";", 
        "\n", 
        RowBox[{"inputc", "=", 
         RowBox[{"Range", "[", 
          RowBox[{"Length", "[", "maxxs", "]"}], "]"}]}], ";", 
        "\[IndentingNewLine]", 
        RowBox[{"Do", "[", 
         RowBox[{
          RowBox[{
           RowBox[{"inputc", "[", 
            RowBox[{"[", "i", "]"}], "]"}], "=", 
           RowBox[{
            RowBox[{"input", "[", "n", "]"}], "[", 
            RowBox[{"[", 
             RowBox[{
              RowBox[{"mins", "[", 
               RowBox[{"[", "i", "]"}], "]"}], ";;", 
              RowBox[{"mins", "[", 
               RowBox[{"[", 
                RowBox[{"i", "+", "1"}], "]"}], "]"}]}], "]"}], "]"}]}], ",", 
          
          RowBox[{"{", 
           RowBox[{"i", ",", 
            RowBox[{"Length", "[", "maxxs", "]"}]}], "}"}]}], "]"}], ";", 
        "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{"temp", "[", 
          RowBox[{"[", "ii", "]"}], "]"}], "=", 
         RowBox[{"Range", "[", 
          RowBox[{"Length", "[", "hwhmi", "]"}], "]"}]}], ";", 
        "\[IndentingNewLine]", 
        RowBox[{"Do", "[", 
         RowBox[{
          RowBox[{
           RowBox[{"temp", "[", 
            RowBox[{"[", 
             RowBox[{"ii", ",", "i"}], "]"}], "]"}], "=", 
           RowBox[{"NonlinearModelFit", "[", 
            RowBox[{
             RowBox[{"inputc", "[", 
              RowBox[{"[", "i", "]"}], "]"}], ",", 
             RowBox[{"{", 
              RowBox[{
               RowBox[{"BW", "[", 
                RowBox[{
                "w", ",", "wr", ",", "\[CapitalGamma]", ",", "\[Delta]bg", 
                 ",", "const", ",", "shift", ",", "shift2"}], "]"}], ",", 
               RowBox[{"const", ">", "0"}], ",", 
               RowBox[{"\[CapitalGamma]", ">", "0"}]}], "}"}], ",", 
             RowBox[{"{", 
              RowBox[{
               RowBox[{"{", 
                RowBox[{"wr", ",", 
                 RowBox[{"maxxs", "[", 
                  RowBox[{"[", "i", "]"}], "]"}]}], "}"}], ",", 
               RowBox[{"{", 
                RowBox[{"\[CapitalGamma]", ",", 
                 RowBox[{"gammas", "[", 
                  RowBox[{"[", "i", "]"}], "]"}]}], "}"}], ",", 
               RowBox[{"{", 
                RowBox[{"const", ",", 
                 RowBox[{"maxys", "[", 
                  RowBox[{"[", "i", "]"}], "]"}]}], "}"}], ",", 
               RowBox[{"{", 
                RowBox[{"\[Delta]bg", ",", "0.0"}], "}"}], ",", 
               RowBox[{"{", 
                RowBox[{"shift", ",", "0.0"}], "}"}], ",", 
               RowBox[{"{", 
                RowBox[{"shift2", ",", "0.0"}], "}"}]}], "}"}], ",", "w"}], 
            "]"}]}], ",", 
          RowBox[{"{", 
           RowBox[{"i", ",", 
            RowBox[{"Length", "[", "hwhmi", "]"}]}], "}"}]}], "]"}], ";"}], 
       ",", 
       RowBox[{"{", 
        RowBox[{"ii", ",", 
         RowBox[{"Length", "[", "Tscanc", "]"}]}], "}"}]}], "]"}], ";", 
     RowBox[{"output", "=", "temp"}], ";"}]}], "]"}]}]], "Input",
 CellChangeTimes->{{3.7250168129484653`*^9, 3.7250168395302067`*^9}, 
   3.7250169477770243`*^9, {3.725016986405937*^9, 3.7250169871938963`*^9}, {
   3.7250171453879147`*^9, 3.7250171636018257`*^9}, {3.725020649579236*^9, 
   3.725020650938236*^9}, 3.7251870520612803`*^9, {3.725189773391038*^9, 
   3.725189775615027*^9}, {3.725189825776582*^9, 3.725189829345358*^9}, {
   3.72519008468959*^9, 3.7251901038497667`*^9}, {3.725192986511909*^9, 
   3.725192989113798*^9}, {3.725193119745401*^9, 3.725193132066327*^9}, {
   3.725193440304281*^9, 3.725193441917924*^9}, {3.7252752776883907`*^9, 
   3.725275281588447*^9}, {3.7268179861480093`*^9, 3.726817990801214*^9}, {
   3.726818095257213*^9, 3.726818097840543*^9}, 3.726818170136559*^9, {
   3.726818261852936*^9, 3.726818294113308*^9}, {3.726818572998138*^9, 
   3.726818573793661*^9}, {3.726822919949441*^9, 3.726822920754781*^9}, {
   3.7268237516318903`*^9, 3.726823762127667*^9}, {3.726823850625949*^9, 
   3.726823858025086*^9}, {3.726823916092051*^9, 3.7268239385465517`*^9}, {
   3.726825097527788*^9, 3.726825110960245*^9}, {3.726826462383067*^9, 
   3.72682647073528*^9}, {3.727415949012204*^9, 3.7274160320931673`*^9}, {
   3.727416100232439*^9, 3.727416183591053*^9}, {3.727416441341929*^9, 
   3.727416442205001*^9}, {3.727417410278479*^9, 3.727417433522455*^9}, {
   3.7274175689287252`*^9, 3.7274175880575438`*^9}, {3.727417711642158*^9, 
   3.7274177953543653`*^9}, {3.727417826372617*^9, 3.727417827379353*^9}, {
   3.727418090562904*^9, 3.727418091464826*^9}, {3.7274188253751717`*^9, 
   3.727418831717588*^9}, {3.727420498194615*^9, 3.7274204999295473`*^9}, {
   3.727420588787874*^9, 3.7274205961235027`*^9}, {3.727420680111175*^9, 
   3.727420776942709*^9}, {3.7274208283770027`*^9, 3.727420838743737*^9}, {
   3.72742091434662*^9, 3.727420926345141*^9}, {3.727420979763693*^9, 
   3.727420983210945*^9}, {3.72742143963507*^9, 3.727421532851613*^9}, {
   3.727421687048719*^9, 3.7274217277508373`*^9}, {3.727422060405018*^9, 
   3.727422101461569*^9}, {3.727422148999579*^9, 3.7274222032871637`*^9}, {
   3.727443565207184*^9, 3.7274435661732807`*^9}, {3.7274439301170464`*^9, 
   3.727443930411191*^9}, {3.7274445245916843`*^9, 3.727444525894269*^9}, {
   3.7274473850202923`*^9, 3.727447388243943*^9}, {3.727447421872549*^9, 
   3.727447437034699*^9}, {3.727447569944088*^9, 3.727447573427516*^9}}],

Cell[BoxData[{
 RowBox[{
  RowBox[{"fit", "[", 
   RowBox[{"ccdata", ",", "ccmodel"}], "]"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"fit", "[", 
   RowBox[{"ccdatau", ",", "ccmodelu"}], "]"}], ";"}]}], "Input",
 CellChangeTimes->{{3.727416051468713*^9, 3.7274160575358353`*^9}, {
   3.7274161968752193`*^9, 3.727416198058267*^9}, {3.7274225476469812`*^9, 
   3.72742256799887*^9}, 3.727443572204034*^9}],

Cell[BoxData[
 RowBox[{"Clear", "[", "ccmodell", "]"}]], "Input",
 CellChangeTimes->{{3.7274436192184753`*^9, 3.727443622235807*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"fit", "[", 
   RowBox[{"ccdatal", ",", "ccmodell"}], "]"}], ";"}]], "Input",
 CellChangeTimes->{{3.727416051468713*^9, 3.7274160575358353`*^9}, {
   3.7274161968752193`*^9, 3.727416198058267*^9}, {3.7274225476469812`*^9, 
   3.72742256799887*^9}, 3.727443572204034*^9}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"ccmodell", "[", 
  RowBox[{"[", "6", "]"}], "]"}]], "Input",
 CellChangeTimes->{{3.727444477732299*^9, 3.727444485499689*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   TagBox[
    RowBox[{"FittedModel", "[", 
     TagBox[
      PanelBox[
       TagBox[
        RowBox[{"0.015725719434372103`", "\[VeryThinSpace]", "+", 
         FractionBox["0.0010982803693462735`", 
          RowBox[{"0.00004245955469266103`", "\[VeryThinSpace]", "+", 
           SuperscriptBox[
            RowBox[{"(", 
             RowBox[{
              RowBox[{"-", "3.0794995278023554`"}], "+", "w"}], ")"}], 
            "2"]}]], "+", 
         RowBox[{"0.03149846992728758`", " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"-", "3.0794995278023554`"}], "+", "w"}], ")"}]}], "+", 
         FractionBox[
          RowBox[{"0.003405315023854359`", " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"-", "3.0794995278023554`"}], "+", "w"}], ")"}]}], 
          RowBox[{"0.00004245955469266103`", "\[VeryThinSpace]", "+", 
           SuperscriptBox[
            RowBox[{"(", 
             RowBox[{
              RowBox[{"-", "3.0794995278023554`"}], "+", "w"}], ")"}], 
            "2"]}]]}],
        Short[#, 2]& ],
       FrameMargins->5],
      Editable -> False], "]"}],
    InterpretTemplate[
    FittedModel[{
      "Nonlinear", {$CellContext`wr -> 
        3.0794995278023554`, $CellContext`\[CapitalGamma] -> 
        0.013032199306741902`, $CellContext`const -> 
        25.866507015819153`, $CellContext`\[Delta]bg -> 
        0.522600206412236, $CellContext`shift -> 
        0.03149846992728758, $CellContext`shift2 -> 
        0.015725719434372103`}, {{$CellContext`w}, {$CellContext`shift2 + \
$CellContext`shift ($CellContext`w - $CellContext`wr) + 
         Rational[
           1, 4] $CellContext`const \
$CellContext`\[CapitalGamma]^2/(($CellContext`w - $CellContext`wr)^2 + 
          Rational[1, 4] $CellContext`\[CapitalGamma]^2) + 
         Rational[
           1, 2] ($CellContext`w - $CellContext`wr) $CellContext`\
\[CapitalGamma] (($CellContext`w - $CellContext`wr)^2 + 
            Rational[
              1, 4] $CellContext`\[CapitalGamma]^2)^(-1) \
$CellContext`\[Delta]bg, $CellContext`const > 0, $CellContext`\[CapitalGamma] > 
         0}}}, {1}, CompressedData["
1:eJwU13c81f8XB3DJvRdJIclIkpCRbF/rvJGslJBQsrL3tffee++tFCGjQkJS
KqskCZGVESVpIPm9f3/1eD4eN/dzP+/zPud1jlu46FpRUlBQXKWhoPj/v02z
LBKvZ6iQ+vidZ0Iy1qD+o0befpYK5f8u5FgEa5igPKtKNUeFnvzKf0apZg2u
jGPaRdieZVUrqxesgYrb1UBmngpRRTYWeRpYQ44o0XQIO9jBrPDsdWsQUiqw
cfxMha4zmHycsbKGJzpirsQFKtR1ZkH2n6M1XDZ74VOCXS3Ba8HuaQ1LLtdD
ZRep0BEWsZC8AGsIDN6IHcYeY34vHBphDQzJcWnOS1ToW356x5EEa7hZxJVP
vUyFRo7pmR3IsIb/ah+Ul2ErrsS1N+VbQ//j83flv+Dvt21xLy+3BvP+maYR
bOUfx4fqqq3h54TPY9cVKvTD+fF7zUZriFuhf067SoVo82gbZB5ZA+ffioEK
7K9/bh9x7rKGhn1y7xW/UiERuSGr4VfWcI79zdQo9uxP6W3HIWsYE7BZJH+j
Qmfm7iqSx6zBWXZnjW6NCmVHZp1ImLEGSs30zVvYp/fyztouW0OW0SlKpe9U
qH3AVsJs3RoE7Dpox7Fbvqt8ydmyhnafy0ye61Ro0EbY3YPSBnRjvrAf+EGF
esM4l/bQ2sDn7FCeO9i2h5mSBRltwL+SRVhlgwp5r//7kctmAwce1kh+xJYw
TCjby20D5c9VFL1/UiH96lxNcQEbkB75cI7hFxVKYtDM8hOzgd55l4vV2IW1
2T1csjZg+pNgqPqbCrUK72W3VLaBH1QFZlPYRk0d/GRNG4g+JGbn+4cKvcmL
YrbStQEOnhduTJv4POxVnO8Z28A98et+Ndgfei9eZLO0gbMqG2FqW/jvJx0z
nXCwgVHduPhp7O/reVtb7jbgaMGV4b9NhUazeiYuBNgABflBAfNfKnThv8q8
UxE2kBF6/mYd9nzkJHd7gg3wp87UaOzg7/v66axEpg20lfg8mMU+SbVK61po
Azr36DsC/1GhmD/OGds3bWCuo6KHZZcKTax+PCVQawM+g7Kv67Gpkzs5WB/Y
wP6p16NaFAR0NWytbavdBkq/Wk/PY282PfmPrscGJP/9XQreQ0BPh8vsAgdt
4OX+9HVWSgKS4ooZZRq1AZOjp7YbsZ1pOp5QTtvAd6GOvRf2EhBJ864555IN
RMpfplvE5uKcufHvuw2wnv9yKIyKgOq1V3ZmNm2g9mroUQ4CAQVZaLsbUdqC
sgML7wPsLOGRrQ5aWxjxqzmtQySg6Yy2dCkmW7CPU5Fexv67OsVQyG4L/3I/
QASJgAoeXsp4zmMLaXdc1DmpCYhbnsaNXtgWeFsIl5qxP2Skk/MlbaH1Rb6R
Lg0BNYjuV9FVtIULo6IWK9iPFvK2ONRsYWahxz6KFv+94P3xPy7agtdvE3eu
fQR0y+qKuIqhLdCSNvxbsUXD3V0szG2h6HBchD4dAd3bU9ZxyN4WxHi5Er9i
F16OfcbgbgvPJR9kxuwnIPusAOdP/rZwVfV8ETc9AXknMO/2RNjCN/2ZW23Y
fKmbUQmJthB+w6fO4AABPWO8ahaUZQssHvTNa9hf/L3T9YptoTq8ojPuIAEl
NXxNY7ttC5Au+5KHgYC+j1s/ItTbwtuy12/asXtkt0rettiCTYP1mCEjAdG1
asPRp7bw98nfmXXsP6J3+/T6bCHlTdqXBCYCmvxy131p2BZ4pvk3eA8R0GLt
6NjFSVtoXmv/24nN3LaT9+izLZynuEy4ykxAoyVBpS3fbOHTgS/7f2Jv65Vc
SftjCx7HQg8nHyagtUZxquOUdkAtwnLsFAs+f+W5Bel9dlCgWMP3FJtsYFM4
ccgOzlxQOWNyBJ9necOx5KN20G3yQeY39q6gmnQVrx0YOrkopbISUFpSnP4L
ETtYDSBoCrIR0OfF3pcc/9lBaEK+7jNsx+vqR0WU7YC5QPSqKTsBBYtOajlq
2cGd6h7LTWyzxOCpBn07UHhk4pjOQUAPhyJlZkzs4M2rHx7CRwnIyXotodnG
DqzGYgN7sKvX+l8R3Oxgc+lYlDknAT1+vtdK2s8OkjbvJ21j1+VlHNWNsANu
mvPZmccIiHjvFUtGoh08ODJTLMJFQHOyWnNmWXagye9z+yW2t+yJ7c/FdjAp
TV9veRzfL87agp3bdkBWq2jZwSZ4zX4LaLAD4hXZrmxuAirPUWK0bbODPOvX
r0RPEJBVUehVqud2cNrL+m0v9jBjxcMXg3bQFfl33IqHgDLvGDf/HbUDg8y0
uV1s09Ka86UzdrBcwb+ae5KAzlXxXT+wYgfBTe0/xXkJyDdzK3nppx0wdev/
68euQiVu9bt2UPl2mWjLR0DZVhLaQGMPcrMhByj5Ccij2zCdlskeBtcPHynA
HpVX/LzKYQ+WlDVcUqcIiNqX904Crz38ZlA59Rp7n81L4/ci9hB//IOovQAB
6TkR3r3/zx6OibrIUgkSkGKY+sigij00IYJKEbYYVyBfl7Y9qOvka8kIEdDp
G+Ta+Cv2MGEqqj+ErbBANjlgbg+uLj3XHIUJ6Fj138cEB3ugCjaxIp4mIAlr
aaaXHvaQk/TDqQS72e1VGnWwPQgVxXrJihDQKXYy5+sYe+isORY8jG3SPNdx
Nd0e9B/fj3Y+Q0D73Ud7WgrsYbFPK4VaFP++pL4LOZX2EDAxnVOG7d+guHCj
3h4OrniXyosRkLmg7uVLj+yhYnt/1Qi2tvSOvegze5DZV9HgKk5ACzmnLt8e
tId+NtlHtBK4X0wGrmx/sAdzgddPK7BpWN6/ZJuzh5//WfcpShJQ7ftlhwer
9hCr8Xd4FNvhv93i+d/2cNQo7SNZioBC7XY0lCkdoN6W/zOdNAHRNn0N8qZz
AFWf9q+3sN33r5rcOuwAH6L1fyMZAmLzqFB0Ou4AztnLu2PYNRJvP6QJOgBl
ZQi153/4fDToVwWkHCDrwWGGA7IEdBQxZjgjBxB4fpf1DnZ0tnKfoZYDtL9T
5laRI6CEqzvUvJcdQHd+VOAj9qPLc8sCZg7wecNZ3Fse93Ol2+/W7BzAj4og
z6BAQOPdldcHPRyA/lD+2WrsbUuL8PPBDlB2QlRbVZGAfCwE+9djHUBKvOfy
FLY2iWY4NcMBXimbXPcFAvrkH/70a5EDmOr+sGZCBLT8pyDa6o4D/DCPdanB
TvpLK/G90QGi3Y75qCnhfp+4bVXf7gDsofdDprGZz5p0Fr90gLoUrVh/ZQJS
Xfi8r2jYAVRKplOZVQioWxJuP55ygPd13nl12J1ztDdGlxzAoWN/ucZZfB+V
Q2+nbTgAxWB59Sz2ttqyheOuA2RM/tcUqIrn32yoqcE+R+D/OtjGco6AzhyY
JR9ldoS2Hatn9dj/2TpwMnI5gs7+v/1aanje5AXqeAs6whxH2sg8tr7s0kMn
KUfwEeKfClYnoJ+HvtiQlByBTr59gVWDgCpdVHZMtByhREt/rRH7gUbart4V
R5C4uvxHW5OAcgZGDTksHOGFfcieRezaGOtHAk6OcM3vMG2YFv6+VzXVFj6O
sBZ7l5HjPAF1qVLzngt3hIhcZfYH2LdDO3fuJjkC653REzraBPSjgPXdXK4j
1DQ7Cy1jG7h7RwnedASlF1SSERfw/epjHAy65wjv3ucpcF4kIMvpfK7gR45g
t3DmXDO27Pknq/+eO8LOr+cXdHVwvyaxFTUOOUIq0eTKCjaZ5Ur0/EdHOHn4
h2nUJQKKUlvTp11yhNaTsbZcuvg+l75Tu7bhCBckj7m1YlvM07CzUjjBzNn7
vvp6eJ4c2VHI3OcEXvpaYV+xdbeKCNmHnYD2xnRcjD6ef388x6W4naDI3Tud
+zI+750V3mRhJxAL31/Qhv1LUfDSwf+c4HlaeYWBAQFpmB4dUFJ1AuOy/2rW
sG8z6Kj26TjB1/rB+3FXCKhF+uVFvmtOEPbEqp3HkICuux5kqLJxgsNvtp+3
Y/MEcJQc8nCCqk+pg4ZGeH7RtH4bDnYCWOMbXcfO2z+V/DbOCd7uPv6UYExA
V/YLcz3McgKbA/pLvFfx/dbYmWEtd4JtzuXvndhLgT4ytbVOkHw6ZMv4Gq6v
vxwWn1ud4ITi4b0/sX1CxJP8nzvBQ+27+5JNCOi9ZMnjzTdOoGWifOjUdQJ6
+VSymnLSCT45jnI8xRYwynC1WnYCjwDnkyam+HnDEqkyfzkBdQLV6d/Y21vt
155ROkNBfp5Uqhnux7OzEhfoneFM9RkQNCeg0g2m7glWZ+hufa72DLu6yvlU
Na8zGL66pmNqgeef1c83gWLOsPJh3XAT+8r5wIgwRWcIWYoxT7ckINsL2Y42
Ws5waJPTXvgGPs83U8e8rjjDber75B7sfT5+TO8snUHhiJa/uRUBBVynpCK4
OsMbvunwbeyNyWcuUgHOYCXtnZBpTUDzSsOxMjHOsHluf6aIDf5+hcGxVxnO
kGhQXvgSe8Iys0O71BmOW/93y9KWgDJYfGIbapzhvudg7Q4255fXf861OoNG
pNXDbDs8zxtvNkCPM3zM2O4Qtcd56Y1D5fJbZ3CrSH3Ri81QHfra85MzEJv4
3lg5EFAcj+H+phVnyHv6+MMuNp9sg3HSpjOcfqs3k+tIQDf0K1/uElyga2Zp
WdyJgMIDz63dZXQBg/XgH/3YP/TMDW4ec4HlPYf/2jgTkM1T6dhEIRcIYrhL
RelCQK3hfX/+yLgA43Hl/QXY3vvcW7xVXeDWmVFmKVf8flyCanj0XEAWOXO+
xv6hYSn0wdQFBi5S8dm7EdChjcpvXE4uYGGaJ0JFJiCW7YZikp8L/HI+I1OE
/dno18GPUS4QF/QcybgTUKxoze5EugscS7qmMYT9JV7vUWGJCzQWrl9y9CCg
3CHCUm6NC6jVxBgTPQlIk+ZTyPtWFxhv47QswX74MN+T/oULuPQ1Och6EdDW
X5ufnO9cYO+Epscwtsq+iaKSGRfI+fIpwNmbgIyrhwqOrLmA0LZXJLUPvl+h
T80a/rpAJ+3+pDLsfyW5mUcIrqDPVp4l70tAXmdKnCjoXGHx1H/FI9iqxtS2
6YyuEPDfYKWrHwHJi0tSmbG6wkENq3u0/gQ0WGl2bvmYK1QYbjdXYOd+4doz
x+sKMrapTxQDCOjumY7FTGFX6PPmezWKTTHIlqUg4Qpm0Y+HyIEE9Eb9hM8J
OVfYyNIbpwvCeXIku3FDyRVibi3N3sK+EfZIrkXdFTgeBK+gYDwffMKkHC+6
wr1nzD/HsM9dc1m4YOAKqu+qdzxC8Pk09U2eNnGFD3NKxAOhBOTJmHnrm6Ur
OG28p7+Dfe96hO6ovSvsoXJmUQnDeY+ZRq7CzRUymai4PmIzPiFnPfZxBYET
efze4QTkNhGbWxfsCu1iZ0QZIgiIcpb1zKMoV9BVfv5fNfaa4MjRpERX+Hzp
mrJqJK4Hq3TvugxX8DNf15zCjjq978x2vivQu8Xo+Ubh5wsL1Vouc4WyEM5r
TNEEdHw6NG/njitIpTTdqMEmDV62OFDvCq+KNZ3UYgjo5Mrpc0bNrnC97pPn
NHZfpFuVfocrrLd7BfnH4n5f0Z4X8NwVogboopnjCOhE/NSUc78rsE2WJddh
X7piIz0/7Aq1qzI5GvF4nj98c3Vq3BWUdwZKZrGrvI0/0cy6wns6qzuBCTjP
7g0QyVh2BQeO7XqWRAKSUacYjfjuCruCqa312GdZkiqn/rhCuhzfU60kAuIP
XqZVoHADPq3HvfPYnyd/GTmS3OCRsd5wcDKe7+MoZYLeDS7aL02wpuD8J+8h
PcPsBrO+wfON2FGDJDrNo27gHcv8VTsV55fCtvanPG5Al1v9awHb+sctN1ch
Nyi5rbQbmkZARRKXeDrF3UCi+T2JIx3Xx4/XUw5ybvCix+ngA2yHiJexPcpu
cO39XladDNx/sky4djXcYO1z7vFlbBJnm6bmJTeI+CUiEJGJ63mea0zDyA2O
EJ+LcWYRkFz8gA3ZzA3uMl+Ta8a2NxQ5oGPrBujkuopuNt4fFN16H7u4wbBE
zPkV7MdRronW3m5ge5bzclQOzkdjfblywW6wo9dkwpWL9x+KgQD3KDdItdS0
bsVW/oyCxJPc4KT7J2f9PNx/1p1LaLPcoCXMy/srtqUjr59ioRtop9GFxOTj
PPD+byjrTTeYLi2L4S4gIPbLBnOv7rqBZ71Maht2GNeFH81NbkDzZCDXoBD/
f+VjWvltblD4+kbZGrZUlBGDQbcbiH7aqoorwvetOvyecJ8bPP+W0shTjPtJ
+rKO3LAbGO/ytrVjj514d3Fy3A2+0j/uNiwhoOfkMsrMWTcI49TrX8fODPgl
3/TFDQ6fXnqXUIrnfxgfIf+HG1QpBE/ylhFQ0+Unt/S23UBRm3mhE3viV6um
2F4yDF2r/mZcjs9/y2Fhh5YM1o5Kfzaw+4UGN4OYyLDl/54iuQLXa2P9cWZ2
MiTHO9Gcuonzv0r/GtsJMpzI38v4FHtSLPXcpgAZHlblspncIiCla49mZMXJ
oNUqcuI3tuund5slcmSYevlMMLUS14v1i9xJFTK4f7gqIXgb52t+k7VJLTKQ
lr7LP8M+PrjoS6VPhvw/0aqmd3C/99PL/XCVDCLUnBc2sSMpXuRs3iDDU5Ym
g/QqAhLMGr1W40gGQz5NU+FqnDdy1gb/eJBhReqTTQ82V5rwylQAGULOebma
3yWglPvkDr1IMhwyoPPdxj6UbGCdlkiG21ZloZk1eN/e+834fSYZ5D1l4kRq
cd4pkJq8UESG1xEDaS+xn9rz3Ru8RYYbGTfyLevwfdyKOMxVR4Y/5VvlO9i6
jE0zKw/JkNCYcjf7HgG9EuJ+199BBq6nvPdF6wkoH74Em7wgQ9NQ2+Ne7LD4
wPL7r8mgPqP73KoB70cLuiOXPpDh4/fFgV1s+5OZ4h7TZHDbE/w+txE/z2et
yZRlMhAYmD+JN+F8e9NETvIHGXK5qhf7sdd2+6P+bZNB+IzSd5v7BCRiKv4q
kcodnsD7zT0P8OeHzhjv0rnD5YtOlAXY22HLxv+Y3WH5+t59Ug9xXvo97x3G
6Q5BzrlMr7G3v0zvnuRzB8YgEQ77ZpwPc0m5lGfc4VbiMx6qFrxv8NyJ/iLj
DrKFV4WLsL/LMDZ0KrnDwN3vkjKt+H4ldjLza7qDRVu04hC2rdzVehU9d/jV
e1TN8RGu5xA2VZpr7hA33niR2Ib3NVGVK99vuAPnFw3DEmz6knsnRpzcoWFr
ykz2Md7Xtd/aP/Jyh3O0XnbD2L9eKNiXBbvDGCsd2bkd768FC/wvY9zB+VSZ
H3UHvl9lTpy9qe5A+Z9MeBl2Z0vYz9t57pCtPhAv34nfb6Oq4PNydxA0vJEx
gm19suv02F136LDZKnB9gvuH0RIx4YE76Hmn3KTtwvtezZ9l3g53WIjira3A
ttdsKIAX7hCQ1fZA8SkBPekluca9cYeDt3Q7RrGLm+2f3hlzh4r7iz3kbtzP
Qqm6WOfcQeZZ0Gu6ZwRk2GQyM7biDn3Dhz7cwo6WsKi/+csdzOaqptFzAnqh
UiFos+sOGz/Q8hg2w0f3NHoaD4jZ+37do4eAehlMzocxegAHk9M2/QsC+saq
3fWT3QPuce+luoP9ODrTap3HA86K5dKpvMT7pUpcQ/lpDxhVEmH+iB31sLuL
XcYDHC89O+r9ioBm3jAk6Cl5AIX5VV6GXtwv5tdoHbU8IMP1++lq7KMti0Fp
+h5wKiRaWrWPgGLe8dEPm3jA4+SjaAq7tdFX4JONB1wqblT37cf1xH9Q0szN
A+ZrNS4xDeB5Tu7mZfD3AN/2KaMa7NFnuk7TER6wf8DTQm0Q73Nf6HKDkjyg
9OM+h+n/u09tmj3HA6RWS939XxOQC/81m/VSD3j1VzqA+Q3ORxLDY43VHnCd
biCiDlv/g4auzn0PWGe/kagxREBHRspV1Do8IEpwK3MWu+jXvj2KLz2ATS6l
KPAtAen9mA2UfusBtZq8lSzDOF97UlW/mvAAZeO2unpsR9lPjiufPWDETrdZ
6x0BSXrR/v685gH2voud89jx+YysX7c84F9M0MvgEdyfdivTlAmekJZzaIj1
PQHxrvIo99F7Au/tqrHG9/+fj84qk0c84dFDNKs9SkAd4+Ivl7k94WLPyJcF
7LeaC1uGwp4wO+K4EfoB988AIUZ9aU/w/ky5wz5GQFeHqhXKlTxh368cwgPs
1tW1/B4tTygmiNDrjON+3vWp+99lTxBnfnZ4GdvfLvp7hpkn9PBcPRYxgfvP
7I6QtoMnXJX4zsf5kYASr+1zofH0hG8q0WeasQPZXHsOhXhChN7R/3QnCWg6
4ENlbawnHLFsVFrBrqvdOSGd4Ql3yRqaUVMENHS3Pa+4yBNQ2JQu1ycCGml2
kdm47QnDqZ5XW7Fd4j9n3mr0BNvSfTf0pwmoufn7Nep2T/h7r9TxK3bOG+a2
jy88IaVT2jNmhoA+HpgErbeewPO6P5B7loCC3JepmCY9oXnKMqoNO+tazteZ
RU84/20zyWAO54XXthFGPzxh+l9y9hp2+EEjK/I/T/Ck5y2Jm/9/f167f4jG
C2g4227zfCagsps2lg1MXlAorFvfjv1OvtrDm9MLRBUWWwwX8P54cJxb4JQX
PDsf1LWO/fZWxiN1CS8wunaoN2ERv68l9hxt8IJVh6q3vEt4/kfbGElrekGo
P5roxL7qHFKwoe8FzPEjc8bLBFT57ngVk5kXVOU5rm5gO8tc+c3v4AWKVZS/
kr7g/Pk8YZrPywuGWnL+8a/gfMCsoG8Q6gXWL0+TnmI7M794553gBVuj3QdM
Vglodf+dqqRsL0haND7yG7tM5chwW5kXcP9Z40r9SkB7OR4UU9V6wQNS9CnB
bzgf2c3SJLZ4gSbLUbFn2HsdM+VedHvBJG+jrOkangfIx3N60AvIUhoqm9g2
nFGVQeNeQDw3pZX+nYBQWnO6+mcvyL/sqS+8jvcpQmOl0roXiFjtM+nBvuxr
MWe/4wVPPUqtzH8QkNje+bbjNN5wJULaeRv73pLh5axD3vAlvd8rcwPnoVdq
RkQubwgutwwW+UlAQnIPzmcLegNT42b0S2yeVx4zStLeUNmVnGL5i4CWMsjH
VpS9QX7oZO4OtunBopbfF7zh9fSj0uzf+Hxrz6mGG3vDje+XqkT/EJBTzdCX
69be8IdisaEXOzxtfodA9oaEg0GPrDbx8zaYxHYFegMX16HuXWzPm2v6m7He
0CRS1Ze7hT/PNhVcm+kN6oDeiW/jPPKsunem1BsmLox87Mcm6PYXeNR4g+t1
x882f3F9U/ivebV4A5Uz5bc9OzgfKlhttj3zhpzAnN/52M8WP+RlvvEGocTT
FFL/8POxG/fe/+gNnQXd1K+x//Cv+n5a8gb9u8YM9rv4fXwp1Df+5Q1Lj9ZY
qSiIaKRd/UAQpQ8E9kZxF2G/6Iq4WEjvAwzjHIIye4go667eMwp2H7i53CA+
hH3ky0bIOT4f+G9LXd6RkoiqvT5MBor7wADN1FniXiLSce/9jwX5gAWrp3YJ
tqWOFLvGeR/4xb/PQJaKiPap0fKdMvKBOJnS68PYupepqs5Y+QCnujRe14ko
Oveh4C83H2i40u9CTSSio2Uex3yCfOCcjaVPGfYVkrRKaLwPjHlthsiTiOh9
ZSxiy/EB56jk2BHsI+6NTc8qfIAy62SaKzUReZAMU7XqfSDr5qM8WhoiCuLM
Zmdq9wGB+5fKK7Bn7qawiff6QHv3QrUiLRGdOZhwZPW9D+gOBzaNYlcwPOde
mPOBz7NMj8n7iEg0XF2q67sP+P+484yOjojYYjvEL/3zgQN70cAtbBXB+IOl
+3yhnHFkBO0nIifO9w2dR3xBmttxagz7+Iskh0cnfaFXlHLRg56IahTyxF+L
+YKpUs4a/QEiavkv5+sp5AsbOqc3b2OHnavltdL2hRiz7j0qB4no4XNpjTpj
X+BwNab9iE3wzY1ytPWFe8FrjN4MRFSyeG7tgacvnE2OYmdgxH/fP6OlM8wX
Ros4eKqxr/y5U8CS4guOtQ1CqkxEtM4une9V6AsU7eqSU9g/qYfPzFX5Qkb/
pILvISIKbBlqZ232Bf6PHueYmImI/bX59XfPfKFthfZiDTbSXLbMfOsLOn9L
rqgdJiKfJdoH7NO+MLdP2mwa+ySqP9v11Rd82Ptt/VmIiDebZrH7ry/sF7R0
Yz5CRO1Pc5Niaf2gVHbTtw57qZvB0+yIH0hqJodpsBLRsRyRFTleP3hpdDJ+
FntbZejecQk/MLF7lB7IRkSOSf2P55X84LvPpQIWdiIaknouIKXjB5ExCxX1
2N6HyUyC1/2ANSewRouDiAxffVrUcPSDmkqmB/PYtO5LORl+fqD08E578FEi
svI/4KYZ4wcjz6GHlZOItP90+qRn+YH9yLvBRuykUsfHSjf94N+8w6j2MSLS
SqmVP9PoB2k/90wvYJMePDzd9MQPeAk5S6FcRCTd02Ao/NoPWg+dXmc/TkSD
8XWnKif94AJP99Z97O+9O0unV/1gRtx4rw43ETVfFo2q2PYDL5W1fcvY1mfq
71nR+AOtXtShiBNENLDJj9qO+EOxBcdRTh5c3xbhr4r4/EGc3HCyGfuX+dVr
1FL+0BOqflr3JBHlvtKyHj7rD1dTJ6VWsHUZFKK+6/nDtxKcWXhxfT9hZZOx
8Ifwe7TqXHxEVEajdSzTzR9YOkt0WrE/FkY/HA/xh+pBKSN9flxfPht8N5L9
Aab6zL9iewwsxdoV+cPbrxb2MaeIaOtvmYpRjT/Y/vtD5hYgIpftkWPRbf7w
d3+yfxv2XXPbp6W9/pBy9GSEgSARrd4X4Ts07g88wo8S1rDvDuw3urHsD83y
lzLjhIioPk3Nt2HTH86fXyjkEcbn+eiNlx1NAHy6GnirHZs1nbb8zpEA8HBg
qjM8TURxjEaOx/kDgNr/zsN1bIXRZrok6QAoiIPOBBEi0rMTEXNUC4Azee9e
8J7B578Zs3fJIAC67zi86cS+x5Q96WIdAEYte8aMRYlISkFpD7NXAKy+yJ7Z
wPaqK/F9HhkAoaPCX5LEiKgwmJ9PNjMAmBef/uAXJyKJ6r1LFDcD4M5vo79d
2H3n9erhfgAokNaoTCSIKOBNMqfOswB4czhq/29sPraV7PJ3AWDFy3E4VZKI
1rSFVsvmA2BTsoFTUArX21lPNp+fAZCkqs73DDsrTH3hGiEQuC9PiphKE1GK
yAmvKuZAeHDDQ2YTm/NWHa0HbyBoetAqpcsQUc5/NbL3pQJhMrxEQ/g/3I/W
9/kcVQsEcrqUbg+227u3zzOvBAKxvM/YXBafRzJRVsg2EPIaLCy3sQ+13y8T
9wmE011/HDLliIhl4e7Ev5hA6HqT5CEiT0TjF6fuTuUGgsE0T+BLbO4Or+zM
qkBYXmuNtFQgoreZ+fGGjwIhiOJS0g429aDkc/G+QGA8uJCVrUhEwhXh5/k+
BsKtY4HFooDPb2Bc+85qIMiJMN3uxb5ydi1o4V8gDCreuWeFiIj+AalU4GAQ
WF6All3sBK+FTeLxIPht8u5JrhKujz16tfZiQRDv5PBKXJmISkVuVtiqBAFX
4J63/disUsvml/WDoCkhe9xGhYgi5KfuU1kHgXqB8Nyes0RE9yqD3sU7CCaq
n67kY6+3vdZqjwkC10dGPyVViSi1XPTtcG4QUPV+2xnEvpTY6VpdHQQ5Y5FE
+3P4PIyfchY8DgKhZfYDVGpElGyxxSA+GASdm/UsRdibLCEnhz4FgT6NOpeM
OhGJ9HQ2kdeDYPHIJP8Q9lbDlfsyhGAI4PcQddQgIkny1MkLh4PhoAytLFGT
iNLDlD3o+YOhQq1EuQRbiynYllM2GGSuSGnJahHRHo09lUrng6Hfuk9vGLv3
eImP6fVgMPeyuOZ8noge37+zfME1GH5G/rlBrU1Ev1OUBBbCgiE2M8mpDHs/
T6SUe2YwHL3J4yV/Aff/qvRTwZXB0NDUGjSC7WAqXlfQEgznunWiXS8S0TO6
0ZyQvmAYe/s5mVaHiLhK+HOaJ4PBeTYgpwL7+jbpYdT3YKD8wViqeAnfrxVa
CnbKEMiivHNnFDujhaMvaV8ICDBCA1mXiG4VFaw8OBQC7cfftdLp4f41wGQm
xRkCuqIOT2/p/T+v3Lfr4guBz2hPH9InInGht75GoiHgp5M9PIatqrgySiEX
AvRmwh89LhORzPku3dSzIVDm8nSe3oCIlK1oj/3TDgGpYKOvt7Ezmm0Ek66E
wKukb7+UrxBRMb/cawvzEDAtitydwI7zDfu0zyEEftSwU3sbEpEA7ejr1x4h
EP24/iCDEZ6XZgejg4NCgL1fjbX6/76/aAwxIVA38fG4qjGe3wTzvcZpIaCy
4i4whf2VtufD9/wQeL9NI+57Fd+fwKHx2Zsh4LCvRI7pGv59cSdOPa4LgV02
qbM12JUGZqSWlhDIEOg7r2ZCRAzvx39OPA0BflmLy9PYGc/FSR/7Q6BN44+J
/3Uimsv9Hjn7PgR0jJKsmU1x3ons52uZDoE5Wx6XOuy+vBfvqFdCwMen1VvD
DNe/PqOv068QoIvRCZnF5qk9O5FIEQol2Z9jAs1xXik2rhugDQWJyoBUFgsi
Cp7v9+VgDoUXDxjz6rGfNP9munosFK49v12mZUlEUDK+cvtUKHx/p1g9j+1A
UIlilgiFyPnhxuAbRPSKr2kpSTEUWH/at7Fa4fO7PtDfpR4KNVR7njViH33o
bqquFwpKh7L7ta1xvzvCd7vNJBTenRAeWcBmPJJqb2wbCnbiTydDbYgovySz
74B7KOwoGy2w2+L8dG/mdn9gKKTqfvt2H/sd04ta25hQOGkR+eeiHc5PwTbR
VOmh0OrGvmcZW2ZcI/llYShcCK2nibAnIs8X+jF3bofCTIoaI6cDEWmsmCZc
aQwFr5KPbM3Y/DIeS3rtoUB7z/2EriMR2S8kLki9DIWiDhqhFezah8MGLMOh
IDZYLBHlhO+D9seb9FOh8HxSUoHLGdePd8yt08uhYPy1V7UV+7/HtZYHfobC
1x3zC/ou+P0+fWAoTREG4fv/GHzFZpUwPwn7woDlaJJpjCsRTY45rEQcDoNq
IR5bbjciuj+TrpJ4PAxAvtW1Ddv9fdvOI6EweKul42tAJqJzLHLM12XCwObq
59A17JcrvBkPVcJg2z4gLs4dn4d2Zvn0hTBI9mNM5/HA///5XiF94zA4EXc7
vx276K787QarMHiYq1hh6InrTe/kPyG3MDh/Z/juOnapXpJxTUAYfGq2v5/g
hed17ya3YkwYeLygaOf1xnmj12XgTXoYUI9mPe/ErswUHu4pDoOCBaFBYx8i
8mdb/qxZHQZnfne938C+fHXA9euDMOgmGn1K8sXzWmUv3eeuMDA8/G2R3w/n
q2/a7kUDYbByMvJ7F/abR0tyAmNhECLJvnXNn4giCYPPMz6HwSHVesrf2B6W
CnsurYfBbX21fakBuD7mTlp4/gsD+RsfmQQDiciv5sA5KdpweO3uzvEMu71x
LjbhcDjcCKc5aRpERAcLh/6EcYfDZlqx8Cb2N+YDtt2nwyGxTFIqPRjPCwO6
AaJcOBxv6FUUDsHzyFT8U4VaONx/Yq7Wg+2vIXMrVS8cNN78vmgeSkSNxTff
jpuGw8dPiYbb2MT6yG4Px3Agr50wzwwjIsHPjOk1PuFApGi1EwknolN/WuZQ
ZDjkHdAhv8Re2LQZKE4Nh9PHPvtZRuD39b0/9HRROHSdDgjfwc5uV6Gmrw4H
A0XGhOxIfB6nOMuzH4bDsvbtDNEonDdDlS0ku8MhyESxsBe7cY934pE34cDo
NHzTKhr3owYrlfGP4XArwL52FzuUdLO2bjkcZBMoHubG4Pz5JZoq7Hc4DORn
dYjHEtEE4bBOPFUEWFQLvejHTvUJWTZkiIBfrV2vbeKIyPTUxr8WzgiIe2X4
YU883p/YmDZiBCPg2NjX6XzsXwrbP1/IREDjUsSyZALut9YBX/efiwC1TbYf
g9g5op1HtPUiYJy6ftsukYgOH++SCTCLAJcjalRUSXif/C+ZZtopAqj4P9IV
YT8skdlj4h8BOdLuzDLJeP7w2/gmxESAkBoN5xC2Z0R8k1lWBHQaFPM6phDR
p+b4h4/KI0DfWlKEmIr75QcxQZv6CFj07JUuwRbL6osZbI+AgEhzJJtGREY3
KmkG+yLgYOZv9WFsTgsBc/axCKioSLzknI7vd5NvLixGgEzTCWPqDJxXVG45
Vf2MgL6nLRZl2FEup3917o0Es7cXHeQz8f03MbPpZYiEjZl59xFszU/GC5PH
IiFm3T/ANYuIYrm3KqOEI4GDkjGSNhvn9aTgsSa5SKhnuJ1YgX3LLb+UQzMS
VI8rZinmENEK19Xp84aR8OHMcNEoNlWLk/+gdSQ4IftKci4R2U7MvP/mEQl7
dCju0eXh3yfIQHk0PBIyTbOab2Gfa3mqezM1Ek65CD1B+Tj/2O628ZVEwuOg
rpdj2GpIs/llbSToJhkOeRTgvLOfucjjcSR8Lvw6Rl9IRJSLll/4+iLBryZi
9jb2FfPtjyNjkUD/mG1FuQjfvztf5OOXIqGs797GBHZC8L4Tl/9EgtTEuR2v
Ytz/K8yiFEhR8OrLBIGhBOeFE98f0R+OguvbZPpq7MbzFqnHTkbBOi0Ni2op
ngdPBTv3S0RBFFvxsSnsEdOZbFmVKGATkOT3LSOizHNNHZd0o6D2v94zTOU4
/xK/cDSbR4GKhvl/NeX/79/HWlZdo+C94W8ltQr8fntGvnmERIGDbaLmNLY5
MX+6JTkKdr1P6PnfxP1sLKtArjgK0qNbrjLfwvtoj+d5o9oo4Mu+eKMOW1+Y
uZ2xPQoe3Zp31Kgkov6TtkepB6Lg4gN/z1ns4HXBfOePUTD7jCEo8DbePy6R
VLVXo8D7XWUUyx1cD1E0Mnt3ooBuXiG5HrvNd7ucbn80lGy8zdaqwv05cWfy
NUc0SFDZl8xjaywecu0VioYXTBR3gqtx/xoes6VUiIZrJ7LqWe/i/kTsnmPV
joY1MaHWRmztHcu4OJNoiFDu6tKuIaJwzw4Wf6doOKJr2LuArSGSIjgcGA13
zb++Da3F71P1xH2WpGhAbhET7HV4n1Nz560sioZ3IWzz97HLzbqkLtRFg13K
vdWL94ho0e/v19yOaNgpPvdrCTs1WN2t4nU0pNZN/Auvx/vOA0Ne2eloONlB
JnE24M8bsA7wrkdDywD1wWbsnOgP5a8oY0B7suiIbiMRuTZY0XczxcD0qsTx
FexW3b3bmTwx4Lnz6lRUE74vJ9vDP0nGAM1+czGu+7h/6fXvkVSLgSKO37Kt
2LGDxT1mhjEgJpSoov8A34dy3tIiuxh4Lnfi/FfsKs5xwyd+MWCs1aIf8xD3
h6TomdCEGPhqfNGEuxm/z8rFuTuFMRBmP2/Vhk3KlbxkXBcDh/38nQ1aiOjk
Y16Zxc4YqIpl8F7DFqebcwwbigHF3MrguFacx+T3KyrPxcDQbYUYnke4/yU7
lnD+igHr5rcp7dj2AoTqdVIsbPXY5Rq24XxXf7BymzUWkt7vlq5jm9NxytMJ
xcKJhcyqhMdE1HRMKkpdMRYe/hJs5G3H+8CfLXZvnVjQInY96sQ2lp9vdbKI
hSlmw27jDrxPVjLZznnEgvvJr30b2OoK/sLXomOBJBnxLqkT52Uhj/bG3FjI
P8s2yf+EiIZOXObTuxsLZ/Tvfe7Clrqgof64PRa6Lc99u9ZFRM8tPvVGvIkF
Q/eJ37+wT17UOp09FwsrYWSK1Kf4flcoF5N/x0JIGjWNYDfuD6JiRkq0cXCo
rIjhGXbqlNRN86NxcLtegs30Gc4vNVTZbmfiQP7JK+5N7MzKuAN5KnHw+rWZ
YPpzItoYuMQtdyUObnz6JS7cg8+rikbhsn0c/PmWIN+D/YU+vrMpMA4SdrlV
zV/gfsw+qieWGgdcB1q0t7GTfJS3qivioInzokHmS1w/P4YUhpvjQP30/HWR
V3j+sKR3CPXFwUcFf5uX2GHdZ6fXp+LATZvB1bIX552jbIssG3FAMKn02cHm
F5N9OEuKh1xHhdDsPiIqae79N8YeD8IBb2NF+4nIzklH4+SZeHgSb5fWi02Q
bH8adjYeDPJ386wG8P3bG3UowzAelqsyy3ex5ehIPwWd4iGoVfBu7iARJW5V
pjWExgPjqydN4q9x/X2o1r6UFQ+3Plx53I8t9HyByHQnHmSXVp/ZvCGi5b7v
uZ874mHgT/jAniF8P+c5f/UMx4MFNdv7fOzSvKzApKV4+MVyb0ryLd5v6IQ0
7/+Lhzi+c4uD2C8q89FdpgTglJ5YsxvGedmQZmmYPwEazpE3977D+T1RSlBO
MQHOGVBTFmHbvWUvmddLgDGrIlqZESKqYXwroWKXAM6eEkxD2DFr2jp3gxJg
b+Qrdsf3+P6S+g9dykiA7AwzHuIors/Jd6tHqhJAsOKXUAk2Mt/z83BnAnQ0
JkjKfsB5f0dTa+5dAug95VYcxp4ReZMz+SUBFoaazzmP4Xr06cH7YyL4z1y4
SD1ORB18nWcSjiTCwfW5K2XY99RGvfpOJ0LFHn8z+Qmc32TbJrlVE0GGgcFu
BLtT5grnw6uJ0MdV6eb6kYgMyy8NypMTweyMgh/tJO7/8Y5zVLGJsAFvwyqw
O+MpOVqKEyHmol284hR+/rsqY9kPEoHDdDd9FJvcDyvT/YlwzzmzgPwJ99tG
ctHoXCKcDRK8STeN76cJSWNzOxFGE5/U3MLu3/zenciUBI6FVx6gGSI60yPI
+1ggCShqVtvHsEPmFf/ZKydBZlt4j8cs/j3MyZ4rRklwqo/1Nf0cEQUMyet2
uSXB4/G60dvYEi4XD8XHJsGlL6rTyvNEtDmUd+1caRLMb40vTWBnX+247NKS
BL605HWvz0REXfvifvybJNjPRr19cIGIqslznktLSVB6qmhvNfbV+aVHVyiT
QfI/CTrVRdy/jkuyvGFLhpfqrw5N/d+h13nkxJPhuqHZUd8lnEcjFNn+aiXD
us2vk0zLeB/UkXr/+kYyRHknnK7BPjLQ+HswMBnYorml1b4QkQHbzSOjWclQ
m9UM09j99Sfil+qSQfnWBXX/Ffx+xe5PKb9MhpH7czrMq0TUM92+XjiTDPbP
/IzqsM9dYjEh/k2Gf8MHLTS+4vro4Lr5jjYF0uZu2c9ii3tKMLazpADfhrx7
4Dd8npc0/tzjSYFHe9/6s6wREVNHY0aGaApcZLKLqMeuSBa4W6SYArPcuwla
34loOlDX5qlWCniLZWbOYzNUdcu+M0yBfcqCRcHrRDTcMN5La50CxZee3GL9
QUQ081/6VN1TQNz8Sl0jtq1st1FNSAr0uK4+1N7A/SFzm8yUlAJXQ8I7F7CL
Io1X4vNTYC2Z9WXoTzx/k80vU9xJgYjiujfsv4hIMW9lJ/FBChypUx27j33S
aviBUHcK3G0fn7n4G8//tN8nDg6lABpw+7KEffKsqcrtqRQY/kjaCP9DRCcW
aET9V1PAdrXw79FNIjLzGXMN206Bv3/FCc3Yta/P/b5EkwopdK/2624R0a7g
qo4xSyrwcJgdXsE+TF10N+VkKjQL/uKM2sb7a2JXZ5F4KpyXS+Dj+ktEVkbJ
XW+VUmFak/tMKzbrYIgz0kkFT+NmGf0dIrJ8fzzZ7noq0NhfUPqKLTtWNPvW
MRUKfec0Yv7hed01/lHVPxVEY/10uXdxP5KbWX0XmwrPcg5ebcOm+B12LiIn
FYxu37I0oCCh3R72TanKVFh9KO+4hn0+ZCH9xf1UCOsZ8ojbQ0IecSa/4rpT
4fB720AeShJyCt00C3mbClWf/0W2Y3+n+pLoMpMKir8ykgz3khBLgm2L/fdU
GCIIZq9jI+mvthEUaWDN/KQ4gYqE4jUOZPccSIMtniu3eQkk9PVo/NttzjRI
kli914l93sf2of7pNOA+G95iTCSh4+9+UDYppMEDPdauDewCU8V+Ee000LSs
e5VEIqEXkjv03dfSYJKs+pafmoQenU3fNnZMA3LY+HgX9vnWgmdSAWlATHOb
u0ZDQrNWSs8fxadBXilp9Re2AHP2v4T8NBCpL/yZQktCa8bTklHVafC0U/yf
wD4Seju6zhb6KA2uvH5JfIZ9PmKSObU3Db5MmR4wpSOhbD1OkcbxNAj+9pNl
E3vu+pgqxUoaHNqN50rfT0L7e5M4xP6mwW167lPC9CR016yiJpUuHeQ5m0V7
sE/S1Sd95UiH18IXZM0PkBC8rtKJFE6HGwpzytvYWntyvsgqpsOf835amQfx
ebFfcV65kA4J1w7qizCQUGn/eGaVaTpwOd669hLb5Oa7S66u6dDkL29lyUhC
6cKX6cmh6aAeP+S0g925e+yoTVo6TOTZemUzkdCTDk+BjPJ0cK36FyR6iIQY
nZ9ktzWlA1VrRnQv9oiT5F3q5+mQ81IgxYqZhCrmXdd036eD0IfOnF3sB6nT
3k8W0+HJokFp7mESeicywXNxKx0u/1m5I85CQnaFQ+mr+zJgiRTe0I/9m7mL
vfpoBgSysD6yOUJCjtR77aJEMoCBr+7pHlYSuhTiPqyllAE3pVT78rGtZi5k
GutlgOy58WFJNhJ6fy2wSc8qAwYuu30cxKbRWopJ8s4ACyvSZzt2Ejp8OrOn
KzYDfnkUft3LQUIqwbG1jAUZEBch/rsQ22v6g71rbQZwZrzclT5KQoIzdwSP
P8mAhnJT6iFsqpGVjptvM+Bc48+DjpwkxHZDfKHucwaMdcWzEo+RUPIXEWe2
zQxwHjrOXYKdds1H+O++TKCceSggy4XrRfRM0LFjmZD1XVt8GPufOtGGRiwT
BPbMyTkfJ6E7Cgpi11Qzof2g31lqbhIytuBjyjXMBF2ug9pl2CsCChLrDpmw
IHLrsvwJEvJkrOCxCM4Ef5C/PoLdf/yiD1V6Jhy4OGTtykNCljLacTdvZUL5
dVsX2pMkZChG8gxrzQRp53/eFdi1rvt5dQcyoTcwI0SRl4TOqotl6s5kgmmi
QOwo9utr77XNfmXCj4LOVDIfCYXb5nIW0GZB9F2DPDp+EnrVzWDWwZkF7G0r
Zbew/4ZofmISz4J7vWHV6BQJZSVQcoSpZcHZ8SNNY9jUJotjwteyYHS5ts1D
AN///I2ARdcscNw6+4xekIScez1aOyKzgIJ2vP829nC++mZmXhZksLqNKAuR
kLJv35mSuizgP0WamsBWs1R9/qQ7C9pkChe8hEmopWo9/feHLNBRF187eBrX
Txex3vBbFsxdefmnCtt/HRnzE7LB18Z0j6oI/vzYzEAUWzbs9/5JM4VN5uHs
5DuTDaVR8Yy+Z0hIm/W13x/VbJDMOs7OJEpCoRJjKZtXs+HlzYcnarDXztRQ
SJOzweS+tpCaGO5/M33HJWOy4Xv3rMQ09m/lklrtomyIHPZV8BcnIT1v70tv
m7KBde7AOWYJElroj99j2JsNNT9uXqjDXnJmj5+ZzgblvfJXNCRJqDtHKbPg
TzaMMA6ZzmKXPlg6Hn0gB+y5bW0DpUgo/+9YYDxvDvwT/efKIo3fxxuZiBKF
HEhTyvCtx16of8Axrp8DvJcEwrRkSOh+4N5RUcccaDXrjJvHvtrRdP5ReA5c
cDVID/6PhH5w1JqZ5OfATPBKPqss7l8Kh0Y4GnPAKzmsohH7w4vDVZuvcoC2
+EiNthw+71b35J8zOVBcW3t/AftmmvSpE9s5IN5+tj1UnoS4Rw87GzHlQk//
2HN2Bdx/2oaonwnmwtWProP3sUe+bgUrns2FbyvE0YuKeF5UpZ9avpYL4X8L
Pi1hE/45+HR65gILnfhSOOD6ZWWbr0vKhWr2l9+PIhJiVyiZb6nMBRA03XqI
vYeq1fpbZy4My/6k1FUioTGF2PMaY7lgqxm/bwVbXe+iatePXPhrdPxQlDJ+
X4e5RRr350GK3UMOLhUSenO+fe0oXx7w+GqfbMUuIFlnUSrlQXPMrLD+WXxf
TfKFWK/mwfkcX6mv2Pf3TDqd88yDT5UHIEaVhHy+j+XnJeeBx8ObatznSOjA
48M/jlblAXWPnE4bdtW3qaC27jwoGHljaKCGn+/GSceyqTw489nGfA3brWXd
PnUrD7p/7tjFqeN+fEHpwG3mfDAkZJB5NEiIsoOyd+pMPqwcEvBvxw7utB5T
O58PoTyd4YaaJFR/tun5qk0+MEsYJKxj0/aJzdaG58MdlZWMBC0S2itPcdO1
OB8U9MIKec+TUF2H6kT5o3x4Y3HkVid2aQ9HfMv7fLAm19Yaa+Pf5yEhdWgj
H7ZCzz7cwD5W7CSYdbAAklLHOpIu4Oc9q3uKT7gAuEtdX/BfxPPB6s5Pas0C
eHCP+KYL23kj+jqHTQFodhZ8uKaD78csWt0fUQCTg2Izv7BlciKP3SgtAPLU
i+WUS7geaf5lVrYXAPHb9R8Curg/7P2uoD5RAHn/Nra7sRMPGFed2SqA0/Tx
VKZ6JNRXl+0ucKQQuo4e37+J/cVy4ni+VCEYCD9kTtcnIQ1L3uMf9AthWV6b
U/gyri8vzZr/3Ash6Pwsbw+2WoySwURqITBd8xUxN8D9nKR3aPVeIVQ6HJDZ
xnaXTS1/M1gIcv43UeYVEpIN6JPY860QBuPkNEQMScjBb5+mPX0RWOa9ufQS
O3NOuot0ugj+3LExtjQioY3ywjbaC0WQ0LJjsYMdNa5E3OdcBFwv0x2yjfH5
/+e3SZlUBE2jpzxEr5IQb1Fej11tEagvdgT0YptU0krvDBTBxO/LkVbXSMgF
Fl/c+lYErqSVxF3svdFhslUHi4GKJSwr14SE5OxeBZeKFkMO75Fi8ev497sc
6jikVwxCUrWV/diJIqKjVz2KoVP17D0bUxKS7P6ufzarGPQvjzXvMSMhoRSp
K3rNxbB4w/VJPnbfbt2W71gxBHgQX0ma4/rOOZtf87cYDkYUDA1iz/uIxdw7
UAI308XG7Szw++EutqY9XgL/lb+Y3WtJQkUHwrq9xEqgv+H6SiF2WVLskYNn
S8C8a2ND+gauXw+BnfHLJfDzTdzOG+yM8K++kTYlEDvNRXS0wvdd8U1noG8J
HP3+gJ5oTUINLKzKgfElUE+hzVKCzWCqeCWvsARUD84ek7Uhofa1Iq2ZuhL4
cMyXfxh76iCykugqAWeRA6LOtni+h9YINA6XACXc/I/aDp9H6ik69YUSyLog
p1yGLWi6mrm9WQIC199oytvjfPSNo+AZXSm0O9nojWAbFTnMNR8rBd3Anauu
DjhPconGvBYrhc8J6TdoHfE8MBPiGlYtBb+CU04V2MJh9swyRqVAf7fDU9GJ
hP5cnmxvdSyFskeXg0axWaPFAulDSkGq90sU2ZmEjnz4Ut2QXgq9Y6HJdC44
HzqHznlXloLpMkvOLezuBs1ZnUel8GOzpgQv94grTe2m+WApRNOcvTOGLbaR
Ux47WwrsrGP1Hm74ecPaXr7/XQp1/K6t9GQS+mT5YUmOrgxUZIhPb2O/vtJL
e4erDN6rFfQqu5PQ5fxZxwuSZeBwRWx4Art3910Gi2YZ7Fq/mPDyIKHRKt89
jKZlkOF1ff6gJwkdaiJu0nuUAX/UxmoVdkUU/WXF2DJoy4z7ddYL1+sfW/GS
ojLQucm1O4lt8QcOUDSVwVzTA5KvN6730DDzpJdl4NN9/iCTD87b93mO6k2V
Ad3wzJEabP677JXnf5ZByazPcTVfPI+2qPis9pWDxA96gWlsexFLkczj5fCC
8qaYvx8JbdGEFg9Il4MJo5wcsz8J7ePiEr14oRy+H3+jUoet/aXuzMSNcogU
tTmvEUBCzN66A/n+5cCqtKM/i21jFmTmnVYONTrpJoGB+LyUVtjz75SDktkp
a5YgElK4Op1T01kO71w6nOuxdeRLw36+Lwe74MveWsF4fthHyZZ8K4edpC/B
89hlpsXHFUkVkFoUGhMcQkKpM1zqxGMVwFvLkvo/iuw7nsq3DQB4ss6RZCah
kCREVqi47hQlSVSSpCFJIeQnKaVISJKRJCVJsvfeZO+9s0ck2TPv9f75/Ryd
8zz3fc1PPE8ZyTxz4QibQhhk5sQEJqGT7aiwUzsMTlcfDdV6hvNsmriviWkY
9He1R46gx/bG3Gl/EgZ2E3eTnjozEuaP0hU33oUB0yp9Nq8LI7l1f4pjX0IY
fNz0oTgFzfL4dJhcRRjI8MpUaz/H8xEpeXh8IAxKxMqax9DJVVfKvFfDwOCg
UY+zK84///2LYtr6FSY1Zof5XzCSAxUH6KKlvsKzix5/0tBvPoi5u2h8ha1m
Aos6bjg/mS8y/Gf8FSLtUzdMoFs3cA2EOH4FFbdTVFd33OfC58f/BnyFxoB+
NgEPnAcMc4NuJn4F02/22zPRzWsqvdurv8JKKsuucy+xHnZvzdgy+hVel4SJ
T6JzOPqqd9OGw66Wg3Junjhfd4WwW+8Ih/ShusNCr7D+uZxnn1IKh1NzN9Wy
0QflnO3dz4dDL92alp4Xfv/xd47HrMPBltNXbwq9596bdZVX4UAR3nvF4zX2
Y9eBn27fw+GDbJ6psDcj6Tvx98Xwj3DYf/S8VS46Je/M0Rv94VCsO26v/4aR
TD8gD9XWw0H/+tOn0+iSw+UrJ/m+wYQ1t4enD87Peww9Hip9A6enMT4ivrif
qMdWdOt9A843R4Py0Q9vXd3y2PYbRIS0fzHww32Axtj1hs83OBx/N3oWHWq0
mmMd/w3q8uhTvPwZCb+m18nymm9gUhuUI/oW94HiV2yyv7/BUo90SSH6eiZT
XdumCHg1WVpjGID1f/N6appYBAj+u9w6j+Z8tXvvhEYEpGye/en9DvexPvNp
c7MIOMnvMSoWiPv7VPTzTrcI6JEQ+FuMXnDK/VYfEQE2h1OXjN7jPtGrnd9U
FgEMp05tXEJvEIAPk6MR8P5SP5NvEJ7v5aw4O+p3kLxjz7HvAyPZu/P2aVWx
71DowMJXipbRPJgqrfkd9DzChK8FM5K11obvlubf4VfgwX0r6IP/WRj2v/oO
j7/Xyft/xPoj/qMtMO47sGfcVJH6hM9rONHoV/8dwstW1cvRL8e2/6uY+Q4H
23y0jUOwP+lcOn5rayTUjIjqr6Gbbl29JKYUCdcXcq8GfGYkattNWXYaRsIC
w3kz6VBGUspv9Ef5SSS83DpuXYl+dPl0RHJoJOwUeepg8gXv12a53aIkEpLk
uZ3X0Y8vXVOL/BUJx9ViXgaGYf013dyyzhIFXeeO+sl+ZSSF7yjPvWSjwOpG
+4dqdJ5eZqqufhTQ2d79ahqO5+Ne+lreMQreOdPH0nzD7x8U29kQGgUSvkGp
QeipDZIc7mVRkB8qnScfwUgGRES1rkxGwbnE0tJadPNo5yN/zmgYLbhcZ/Yd
499dP1XqUDQ8qp9po41kJNGOg2nc16OBtc+9LxgtLnLdSdU9GsKmdv5SiML5
wYQnNSc+GhQ3pE7Xo6kX6lkd2qKhasuplTvRjCTqleX29xti4OrOflqGGOyf
97eGb9wbA7OS9swh6JUYua5wnRhwU2HhOhiL9xNs6BnhEAP8p8P4m9CpjZ/a
GMNiIOHyQRHLOJyvzQqnI6pjQM2iTpISj/tJlcvt1IUYaH90UyEUnRuje3NS
MBYsPFfhcAIjKbrjNxNzKhZoPvicaEEbz9nzxt2PhbdRojpWibg/27C9/B0a
C2JZuReZkrD/6BoF+9TEQm7Fueth6ECRGLVPy7Gg2/HrtkoyI5mjp1fesCcO
hsec7rWh464fCc06GwcOS1sf2aQwEo4XUd1VTnHAQo1xYU7F/WU4fOJ0bByE
bjv6KhxN/yBxhacrDg6ItvuTNMxH+TxHUfp4qFC4+7EDLc657/tdvngwOk7/
zTYd5w/+NotR2XiY1guKY8nAfGooEnihGQ+uN6XTI9DbrnrwmhvHw3a70nzV
TNzX7f/O2j6Mh9jnl8u70H8rzD+n+caDqv9MvV0Wzuutps0i0fHQEubewZqN
z8PX0lVdHA+3k3cORKKttD/WR3fHw3pRyvixHEbyPuBNX+p8PPg2as72oA+E
z67QsSbAnoG+VftcrEcv75c77U2ArOn79Bx5+DxXxC/KH00A7Y0sLDHouf2Z
RymXE2CALWzr8XyMj+MZkXvuJ4C94MGdfejc4ZdBlm8SgFm6bs/DAkZyXyVm
54boBAghN/dzFeL5u/5mrihJALkzq4pxaBj2T2jqS4CyKz5HNIoYSSZTwSnG
tQQwvCt6cgDtpXvP1G1bIkw9ztV1LGYkLveHWuTkEsHF69wl7h9YDy0Yynef
SYRtH38ZJ6BTxOfjdc0TITrGyVyzhJF0nci6lu+WCCRn639D6GD7tUsPviZC
U1W045NSRsI3kN1/uzARbnWpuvKUMZL0tFqOdz8TYXW8zSsJnTExfOjfaiJ4
r1gGaJUzklEdkxth25Ng9yb6kBF0WpRRd4BiEmRsD4p4WsFIlGhjVvP0kkBL
TDqBtxL3zb1xaor/JUGfUmlGCrq5tKVr2jcJ/tO4XKhdxUhCov/EryYmAdPF
mYox9H9baprkG5Lg4y33RudqRuK+eN285m8SyNjv7OKvYSQ6ysYXvrAlQ8mL
lME0dN/ukbg46WQwCND8rVOL88nUCwtZ3WSYDO+bG0c3MD6WqrJJhmep9/89
r2MkJ2uehVf4JsPWks2MAvU4D2QLF+1LSYbI5i9bMtE3VwprslqSQWVIadu5
Bswfq10drxeToWG2VmAS3fU+lLd8ewrcpLu5162RkZRx9qYcVU6BZY5VaaEm
7B+XZTQ3X00Br10+B7PR2dZ/dwk6p4CQrOhRvWaMH0sD8jk8BdJUczWn0EcW
k9usK1JAU/fcOY8WRvLne9yxwMkU+Hntl6FwKyN5nhEbS+FIhXvWTia5aDaO
va86FVKB8elWS/02RrJ7IJ6W5nIqfPCOtptGj+1jk3d/lgr7Q1SfeLbjfpWl
yK8dkQrFcW0vRDoYyWFrjj73mlTQz7P0zkfv2myuyD+XChM1dIEGnYzkKSWx
mp4vDZx63n+eRUtXuEwfOZoGnJP7I726cL90rSmduZ0GEWsliaLdmL8G/q/W
fNLg8ObLWYVoKrm5fjkrDer4ZooMe/6/L1yr4x5MgxsS7lXz6AM/3WYvbU6H
xUM7m71/YrxKnJviV0gHT82UbrFevF/Pf53Ua+kgcElzuBitajdTf/5lOiTf
7ps06mMkSSXbTsmkpoOGw/2FRbSW1gU1p7506HbfvMG3H+vtqTs1uzdngHXg
F8q+AUbyzTYxi18pA+i/K7GVou+/WP7UYJIBgem1PNcGGYm6g+brJJ8MkCwz
EVpBv8rYLMeanwGFrSti/kPYz/zf8S39zgC9kTeyUsN4v3Xtr07zZcKv+T2H
y9E/Ow+95NPMhMcMuceMR7Be0m6kqDlkAvvWc1pr6DeXvjrLRGZC+O5f5wNG
GUk7R+kulY5MOCjvZCQ9hvHb2HRnkikLao5tNa1E6+VVtPAfzoLr56Lvmvxi
JIb5e+cTLLJg3ljVfh29x+mQFkNIFnjca3MKHMd5jj5ELKohC3Y4W7rLTjCS
X2KlF+gZsiHRh86nGv2+ZvNwoVI2qIe+f2/6G+cd7QpPJsts6EzY/4VmkpFs
8VR1bw3NhrsFJVFB6EmZOIejbdlAW2+YLP+HkXxxFZ+QYcmBgN7p7Fr0plo2
9vxjOSA+5fbDbArj855E58jDHMhb31FD+xfn+fwRV9ekHDi3JaUlGK3e7c72
fTwHRndo/lSYZiQKO/59DhPOhUeSfSP16I2/m7W3GOUCq8r9qTszmC876P3F
3+VCmNbmJfpZPH8D5ta8+lxQvPyFJgS9/Wb/shhLHlSZKzEdnGMksnEuk3Ay
D64+qmVvQu+/tfdKnWsezL404bWcx30ncspqc3EeuAWt7KIsYH6nN5lx0uQD
X9QbiVB0XT2n1yWBfIjP3CN/eBHn52H31SXIh2MVOcot6HPzNItrV/Khrf2s
utUS7sODUzsNnfLBfGzsNNMy7iNOdKWcn/Nhw9KTC2Hok6feje0uzAc/ytar
Kiu4r6V+aQwcyAfRbdG32tCmx5Oe2NMXQM4eVWubVewHJyRefdxTADoKbQ+Y
13D/CEjvVjpZAEPqls/C0bsvTpjqWBTAAz26l+Qf1uNvbL3vvQtg8833vh3o
Iw831v6XXACf/9v/wXYd5+ca1U6ftgI48LwkjGUDhZy+bxu3d60AKvwMYyLQ
16/uvCYjVAhGYdMpqjQUck2vjfnd8UKYTnLL7UI/YUkt8bEoBNeiHaV2GylE
TOeFVpFvIWxvTK5lpaUQv5zb2WmZhRDbf7ItEs35Wnaiu68QVKd7e4/RUUj0
za90ftQiaKG5P9aDPvYuRDlEughus22etqenEC6dC+r6BkXwT+DLMjsDhXia
Wp+0cS4Cn/3YOdAqS/Kb2WKKQITUbjrOSCEn8m5yktYiyNQ24exD8z7Sicuj
KYbTV1b4HlLweZ+MDQxJFMOA5ZvdXFQKWdHhlHiiXwz3H++RjEN/2Ty0udKl
GDZ55RzQYKIQA727Pf8lFMOn4LMwgJZOHPMv7CkG2Zix446bKERL1XXGh/kH
lGY/OcPNTCHP+YQPDx/8AYZVXBcT0KfH5RwbzH7AVGfUNc3NFFLCOnjIJPAH
uIwfuT2ETtCKvutX/gO2rbTaPGGhkHdfzQbPL/+AaCbLhzxbKCT48svlQPES
INvpXJLQ93nuXo28XAJNe997arFSiMh0IucB7xK4pbTffwRdUPhS+35RCaye
KAl+ykYhDnGV9rcXSsBb3zCcl51CFNk8lmfES0H41nRsCto58g6X6rVSSL/v
lqbNQSG9VpsdxAJK4dSLHfljaLo7I9/iqkuh921ymTMnhWS/HP8uSV8GtuEn
6/m5KIT/Ib+QinIZUFN729PQrEcTHm+wK4PgH3b9OlspZIRxh8fTuDKQbmYe
H0fb9Xn5doyVwY/B0Jnn3Pi8GskfeXaXw8VZxdWd2ygk+Vzy/OTVcpikraXL
RB8uaNJwDS6HZxwmm8/x4PO8iblD11kOW3etcE2iaZOtN53lqYBImTc73Lbj
/YjfuBygXwEqqnv2CPFSSLq4sHDkuwpo0MmRykavj6qwv2yvgJvXzirq8VHI
v/ArBuq8lbBsNUam0KP2pw6zGFWCl9MTDQ9+CtFpePgp/nMlCHlz6QrvwHim
l/K8OFwJqZ+iDHLRkelMXD/Fq+Bk3BFj/Z0UcidKY+meTRX05LbemUZfUz9k
9iejCmxqLGw9BShEW1NS12ljNTD00DqKCFJIkQa7Hdepagj6Hfg8H81yrvDp
x7fVILUm5WUgRCFdKkwLx/qroYi55O0s2mf/UYs5yRq4wGf4yWsXhfh+5bi6
9qgGxsWnv4kKU8jFlstVi5U14HTILb4QPTu8XMTHVwucmjsyDHdTyLMYIclr
FrUQYZBcMI/WXdgdQcmvhcO3T1Z4i2D+vHFz6aDWQd2D3gaxPRSi3KN5x1iu
Dm6423UWo3tt/NK8rtTB4jvmQSNRCmlykla6/LIOPCNCJxbRJ22vGRel1YFA
uuKcz14Kaby1maV7sA6SS2vWJMQohN2yOTGRvR5OtN5gKEXveXlF+MiReuga
Xma5Jo71wSs00s6qHqzmvblX0EJ7vopdD6kHOoY9Av4SFJLmsbCbo74e3nHl
iErtw3xVrt/zemMD7Nt9VrocLXOz6UOpXAMUyI0pGUtSiPnnvfuzTBvg/LEn
qmvo16lPFoKDGmDsLJdmgBSF7GrsYtGoawBH46iz0vsxviuPjhTQNwL7vSOG
lWjOmOL1bYcbIfxZ6w0TaQopZtC6fe5eIxz0sbBYRzuw7NF5GNUINZ9p7QJl
KIRQPlwJG2yE6wmBj2Vl8fmChWnsdjTBfL7Ui2o04/E7iw8uNoFH3Y/XpnIU
ck5QP1/Hvwl29F56RyNPIZKWAxdONDRB4p+/IUHoJ+8+fpBkbQb19Rff5Q9g
PVq7HqSo3QwdLDsSa9ExDZ23DV43g+WO5EwzBQq5oNRZqlfXDBslTxbRKlLI
wzM8ca/ZW+Ctcm9lMNrWs/7xwPkWENOya1JQopCQi5tX77xvgVxD5u56tHlz
JUWgtwV0zUOH7hykkBm2gzJrIq0w/FBxkv4QxlNoF4fC3VZ4+LJm/hPaovZn
Ump6K2wJurGudBjjyaso7j5tG3yJXGZsQqdVdF9w1G4DhUxvVktl/Dw+uvrf
hzaoLBfhoahQCN+cbnfXeBtcac8WDEXbHPoqs+lwO8yO6oodBgqJ63A+N/Oq
HdwWR2Va0Gd7tOuZ+9qBj/LkkBWhEDb9lPxy+Q6I5+Y6xnSEQgRThdL4PTvg
2J6oU2FoOWt+I47BDmg7cOS8iiqF2F9mr0lV7gRz9dbLbejzPBYWDIGdsEHP
4qbNUczPyKkFhvlO8DOhvct8jEJqqs+9rj/XBaL/Bd4PR3/zLy54lNIF2S5S
TkSNQsKEPU7NcXfDGb8fbh1oFdHb9oqPumHwy6U3tuoUQnnBIPOtvxvsk/4G
shynkBvTczlMmj3AXPQiNAI94vjvh1NKD4Q08EepnsB6cFTjHr/gT5DvT0rq
Qv91Nioq8v4J5X81su00KIRmxk+xb0MvXKbpLWY9SSGOk8JaDw72wl9Wu+pI
9OlfrfZn/+uF5wLMLcc0KSQwISpLN6EXtu8P7elB6zXr5PhM9kIsKI7Yn6KQ
gB6FSMF9faCqXfOHXYtCFml+OS2Y90GL0Y3FaPSo8Wddmdg+uG25vOH4aQrZ
ltWnHzfVB/8cval96KbzZqx5cv3g80qE/aE2hcTmXN8i6tAPIsHZ27nOUMiq
qO3gpoJ+yIzW3RWHzvv77OAr6gCczh4V19DB95X5o552dgD6Kx/LDaBVH+4k
dp8GwK6TU9lRl0Iux6pB58QAMI1HqnGfxXix6x77fWgQPi6T0wnoCwIuxeOe
gyDD1KqneQ7/fWVS0qefg1DKY3FlCH1d17/svNwQXNpLe+vJeQox3VxQ2Osx
BH8UA6149CgEznReeDUwBM4npB4koZ1F8rlkVIaBW//HU60LOM+82Zq3/n4Y
ok0veYyg5UfOz4gvDwO5/9fnqT6F/Djxdczg0gg0ub4I4r2I9f7lg6y/uSNw
6y1/WAr60MZ9+38Lj8Lq16RobQMK2Zz5VM781Sh4p2ikjKGN802Lny+OgvCP
nznOl7D/2+4p0Lo5BulN/5XwG1LIFEPA8EDLGJwa3FSbhr74oGKR9uQv6J35
3KpzmUKY+GLF9PN/gS2tYu84urbK3i9AaRwoHDWjz40wX+Wvpq+ljMMHoRt/
d17B++h7ct5LfgL2yywvZaBvs/Nm30ifgOIj3hvPXcV548p5h0yV36CvI7Jp
En1dX/Fyftlv+H01m8PtGoVY3feTM9abhKdWunxC17HfVWw71TEyCVxOo8LZ
6FZX63s6jn/g++vH+/SMKUSzKeqB2aYpUP7EeWAKbase3qVhMAUNsZEqHjco
5Kn0ke06UVNwM5ccFzahkAX3S7Tt/6ZgubpFOxf9PH+VxevcX/DqNtfXv0kh
L1W3SWVE/wWh3xuvTaPFbdvCHBinIXX1nZmnKYW4K2tOdd6YhpPMUjYit7Cf
MoVpsvyYhh7eHw756D2vLjQyi86AjfglZwMzCokKsslefTUDDIf+vpxFi0VM
p9ItzMD7ky/8vG5TSN+x+reKxrMgacAfLHoH64Wc1WxzwywUmiV9LUR70BY4
lqvNgd4DjVhDcwrZca7hx6PsOfjl9jN1Hs0hrr1ae2Aenrz7L8/bAvt1oP3L
HSnzwBGxqUzMkkLGQ7d6higswLe0z3XF6KWduzfL5C7AoVKFdqO7WG9uO0nK
aCxCbUt13yKaUYWiUtG2CDeGjX/5WGH9s5s1ErZYgsW5pWkJa4yPvvcTQQzL
4EnvvVKCbhboBY2vyyDAJUJ3zYZC9ko0crtqrECycDbzClpG4kL9o5kVOCGn
y+V/D//+ncxZtS+r0HV0lF/KlkLOON4/a3FxDazOPhYpRw8+Pf1BYOs/oDPm
lDL+D+Ph63j2m/Z/8M4mUmENbQFH0o+HrYPEM0IC7Cgk6V3l8JFDG0j+m5YT
0vcp5O7xicKjERvIuc/mOpXor2HzBY94aMho/EYDE3s8b4OuzAUvGvIo/931
dXSbeq7OGmUjYa2TvBP4gEJMNMsu1b/YSL7+LL4n64D99cEttsBNtETpj8Gj
arTLss1YoR8tqf435WL6EPtJ1Mp9souOXGN58YrmEc5TLyjFzWl0ZI6f/20Q
ml2FNe2mLj1x35f0Ud4R67XgiaM3Z+gJv7LGt1o0c5qQyeEgBpJ46mec2WMK
SSmOOqZwEvdUw//SaZ/g7+/NayzDPanjzqaCYHSjoVPiyTwKsXz4uVzBCft7
d/5WLVcq2fhSoaEe3S7NaECnx0Tevq/uuPMU69d8sLy81CYiFmk8QP8M80lq
N48hOzPJzVga/4ROjveXH1hnJrrlr2eVnLGfLXxverq4mQy37V5rRC/5Btze
tMZCHEaz6C1dcP5W5ByZY2AlLIs6LJTnFPLAc66c7i0rCWUc3RqKVrp+qeCP
OBs5wP1452FXfL4/XpkXytlIhQinaAv695YPpn6W7MToQOR+qxcYDykH7/Dy
cZBpNaLE5EYh9LdlFl41cJAX51uOhKHztfmt1X04Ca+J+UkVdwpRoJw9M32J
i8TZbjzbhn4XrD6xf/9WctTl3SUbD8z3A3Vvgrdwk1ZfyRvML7H+PrvdO7vM
Tcy/FJuHo39N7ng1Ob2NbEgy+I94Yv7nKXLoLPIQv8Ipxw708dTFhopNvES0
wdXV9hX2T+Ftzo8k+Uh2H99rFi8KYThjNstwjZ+c+ZsYEIFe9rr+yztsBxnc
oBGi+ppCjp4RERxY2knsWX9GdKGtb63Lbk0QIMwC/yXYeePfO/wt2XtXkIRI
bcpkfYPnQ/NBOk1BiMjB58JIdOwtumvqm3aRstMKlcd8cD7KYyw4/WsXMTSq
buxB76NbffuoWZhMWRh32fvi/RUF7qCv3k1cHJcG2f0o5EqgNa9bvQjhefX6
dzTa8YB2j/LAHhLzYfe8uj/OHzw/S9w37iVHorP+9aIPUbPWLaTESHOWDuPD
t7gff9slKnZbnJhVjmzhCsD5NdClWy1RgvzrcNwWhxbMSn5syyhJfH5xCGq8
o5DSzzd0xc2kiMjy970D6DBm522sd/aTTCqRcQzE+gTjZm9EpMlpnpaD3O9x
ns2umhAclib9ouZHE9BH0w293SNkiJ3ixlOaQbg/qpnvMDOXJUwn3p0bQq+/
vzUtsF+OfLwgefnJB9yHs9nX3/6VIzKmxSY8wRTy6eT+bSGx8qTEzsAyCd2l
TleUfOMAMXCdstP6iPvb3a304mwKZNLf9ckImrJNdvhmggJ59pXP7eknvO8K
raGzqopka0qiN28IhciC4RG5AkUSVXwiMAV96PrEY39xJQJNPZ+1P+N8wln5
UPCJEmkcsI0cQ28NUnKcyFAipjNMSc6hmM/cEY1lHUpkZePnLP4vuP/JDWtU
9SoRb3aF4jT0gSw55blKJSIsVF2lE4b3qSotuytYiaRLGzePoyW5tcJ2nlci
p44sdT//ivOWmo5n1pwi6T3zenhnOIUE+Y5qXH+qSGyv7v6TgRbiMv6iuKxA
KFZZC2e/UYjoGqsvxViBfHiis2ESPVi06V967gGy//UIxS0C60f2JcLGeoAU
f3RkE/qO+3LOc+3vF+WJfizH9mz0oLNp179gOTKR811IL5JC6s96Mt76KUuc
qkF8Cj1G/cLQtVOWcHY3y3pE4Xnh4s9yTYZETNw5LByNn6cbun8IkyaHV2nU
ctGpUuyhvuP7Sf2md1r6MZjPzTzc/w7sJya8knrT/7dyeBLPFimyJFZs5BmL
84DEJ/GxrH3k1UEDU5E4Col4nebL8J8EETw5dTcfXfSky4d6SJykXnS1N4in
EKprzIvlzWLkpBnf01l0iPjusH2ToqTHPtHdK4FCMro3LV3v3ENs3E74iCZi
v+N/Hu/VLEIY3vW8L0Tfkr358VTXbvL+m+0XwyQK6dwb4C75R5hIpjFFz6N9
Vb0lFzcLk8KSkGTvZArpVzvYzqS4i+i1HMgRS8H4u2l+b8RciPwaqvpRjE7X
DdzJFy1IHs9drzFKpZCfG3XslOYECDv9Ussi+s5b54y44wIknPP1T5803Lfp
HN8sq+0kB4V3j0qk4/zJZtV7YfMOUiObNVWCznT1P1EyyEeMj+osXc3A+pp8
K4Szkpcs6I7QrKCrkpvkkvO2k5fXHZn8M3FerPpDm1zAQ3bacHBIZVHIEe3R
RfW6bSTp6XfecjQ/7yXOsV/c5PgbEDbOxvmG3rU0gZWbdIU0S6yhrZgPfpQ6
spVYxd+RD8ihkMSt21XCH3IRunwaFelcrGce/Uft8zjJu9oA9Ur0C06vglPM
nETi5z5tE+xL/zSuFNpd4yD5k0UX1tFhbtdDvHPZybl/F68G5mO8ZHsK7t3F
TkY3T92SLaCQnSbqAs1ebOQRv6t1NfpInKH4Tho2wrqPz8G0kEJ6rm6/2fyA
lYQdTnxGU0QhykfC6bf+3UIUT514GYS+GE1hdlxiIVWXenzliymk0kaMq5SZ
hVy9Y/uhFj2aXufNLLaZzDowfTX7gfV7drKbTYeZuHmExNCW4L4kwB+28ekm
wvf+QGow+g+15eW3DCYS/70qV6EU82XzV2+lZSo5lnG9tB7tQdfmXaRKJe1l
i7V3yrA+Rxi0PMO6bNHm1UZfTiHDo+z+smOMhGZUuO8TenmGPiFUnZH4L2SO
KVXg/R2nPtKNZCB7GXWmG9EjEWGFHJwMJHfryLJFJYXoP443OetMT3RFHGkp
VTivlK8GrS/QkWF5DuZQNF/Wwbk5azrioPad83A19nemH+3VU7SE5Tzwt6C3
D4t9uGxLS0JvNO+2qqEQcjZ80Hx1Izlge0eSqRb76+70qhC3jaTCmUYhDL3i
avNqcdtGYuQbACp1eB/cMRHyMTRkOnTfiTZ0wKm489xqNMQ1seiMTT2FzLv4
r3zq3UC2F168yNxAIcKmUzvdn2wgsfV/roWjC68GevsKbiCqfc9vk0bsNwfZ
lXpfrUPLFO+9DnThzc8te3r+wZ0NiQ9tm3Bff5PrdVTuH6xvOeHC0oz745HR
1pLXa+C7s8czAh0j8VvCeWoV9kjZ+qu24DlnSXGY661ClgrTxy702eatfdSC
FThzOiTcrhXjb9NTOdP9KzB4+UAcaxvuK4qW1dNflsHeoiotEm1N7yA7zLsM
zI7X84+1Y31yeburPWAJQjwXy3rQFYV0/6q5l0Dug1e9fQeFfBz6VuQWtAhl
UcId7J0437dotvcJLYJhVmZ/NFow9iTN+5gFmKo4M67eRSGPPo8E1B5aAJeO
4Zle9MycVZNk9Txs+/Vo1aEb4zvk7vHMa/MQvcROz9WD5zvl+On80hwQ6vfN
cejNzxn0qn3noGkbbNX4if3YXdlpk/Qc3BJt3jGA9s1Y7Busm4U1hTt7HHsp
pPphmuW1e7Pw5jjNfu4+vM/HSwnnt83C7gsBigno5Heml5LzZiDj5r4jmv04
r/Gn37I0mwEtuyKNIXSSAWurIdcM9D+/qPtkAPtZ9Z/7wUXTYOf/x4BnEL+v
0+Z8671pYPr63DgJrVzMZcIsMg0fk3nNtYbwflPVDdQ7/oJMcYLtCDp8oera
Ze+/UNJ43PHpMPbjMsV8oxN/wWCg+znvCOZT/eUE9o1/YXL6nlcK+sFnSdXn
OVPwbCNTgPYohdzj97aJcJiCrewhn8bQK6eN8tSUpiBS8ECE8xiFvC/WNeKY
+QMq0lXx/L+w3rH6lXvY/YEGcj0jDT3PMOzPuTYJN88sFuiMY/6cuK9g5ToJ
y1e8KsbRF2zNej3YJ+H1XeHG5xO4jzlMXtH+/Bt2Pcns3Pkb5/XbOSWmMr8h
zevMYAZ69a/+KcWSCdD8ODxxdhL7JS3zorXhBPyMeTT3Gz01RG2bmx0H2xz2
fy/+4Pv060ouvsb9uDqCQWiKQgzeZigvSOB+3KWyJRvd8rqqgKXqF+yfaOLW
+0shWY87l/wtfkHxym2BKTRD9YDKT9ZfoL+JZq/HNO7fcSMjkqljMLE9QFp4
hkJK3v+i2F8eAyexfQdz0RD1+MAbhjHgPFikqj+L8SYxfs4nYRQiNC5qTqPd
bmhkihmNwuGLf856zuE+3mi39y3zKNTdem4oMk8hhizstJHZI3DDntckH11t
oiVkazkCiy8SLAwWKMTUL3rlg+AIeAYct5tFy2udFPdrGQbBb92PvRaxPm8N
5vrpOQwpqfdeiC5RSFrSt9sJx4ZBo4TqXYjequD1bWltCLqbP70zXMZ94pcG
5XH6EFgPyX+eR9/vsDt61XYI6Ocqv3uvYHxx6czGSA/Be7rriWKreF47Ji0l
pgZBknMxsxhtom5aNRc3CIW7vIqM1iiktZzlLIv1IOjJClctooONhsR3yg7C
L9XMJp9/uM9Hl+57Nj8Aj3XPdEus437g2SQwmTkA7NeHh0rQC9sVlN45DUC4
9aPJqxuohFmad4j3+AAcfMq+sIzmGXBIKWIZgBrviHU/GioJYWTiftjaD9dD
VChSG6nkK8tbO9bP/TAf18RajpaKlv/ScKcfPPJu8xjTUgmt/tBFJ4V+2FG7
QWgNraT6SvQvbT8k9rwVC6CjEm0DTZcH9X2gPikhK02Pn28vqkz81Acda4WH
KtGRCY51bZZ9YLn54jETBiqZZFj7OK/SB7T8f06to+2f/s1u2dIHARLPzwcy
UsnyIc0x075eED/MayRLoRIjnWHlyaReyNNMuFmNfmbr0L77RS+cvXT8rimV
SrLX/RoYLvXCyO3u+zRMVGLGn2zWJtULjxzuOQWhwzlfDEvQ9wKrB9VdfhOV
tMrrGQel/oSwwE9vatEaR7RY1G78BMXv8u/NmKkk32no2VGOn1CVXhlKu5lK
Gm2sPz0v6oGrZdeigtHktl+10H89MNu6kKTAQiVDmznuje7pAbeRV9n1aM9Y
Tf/ezm7gW9j1484WKglz8ojc9aYb4hkyq+lZqeSk0hWLt8e74djWMy2f0CtJ
uQVkvQvadg/3KLFRSUneoCg1vQvM5R+NNKLfb60cr7Tugg1q7FMW7FRCv2Yn
UCzRBX7nIhYZOaikQLQuunC0E0RvqNCEohnO21imfu2EnHtN1MOcVKKqdGcn
041O0HG+zd6CVmd73vtTqBOGfDbwWnFRCa9nzKbh/g54EPp2F9NWKpmnNd4w
8KUDNidKSIShfVPKfpWadEBoQaGcCjeVvA7ouhgv2gEH6vWV29DbJ1I7TCfa
oaJ3Us1mG5U8V6GfWYtvB6Mpl9PMPFTiHCzxwdWuHabXt18IR5umBO0cOdwO
rlsSrpDteJ+MxxhF6Nph+87jtzrQrKGNd0Sr2iBWstvKlpdKyl6dvjrt1waq
KvcesPBRycXrL2ZDjdqgRYv6LAIdtcIQumFvG9y+/MlDlR9/r4NVj2W2Ff6Z
y/t2oVkmKkOW8lrB51FlkN0OKvkR3Drm5tkKIp7Xwlh3UsmeI2wq5RdbITNo
IToSLSFf19+zpxW0o16lHBOgkrrYJwUf5ltgIHNXbg+6bzy0pOtHC9yvyCix
F6SSJ2P1yin+LbCpQ7uWXYhKpmekXMJvtsCnsaHWaPQhN44RXsUWkFt62Ku+
C+euNosPvEwtUEZhH+tFD7NJ0ER1NYPhtoi/DsJUck/l5PW+uGaY2qOyzLmb
Sk5tGPNNd24GF4WmjXFoPifbg8sXmmHb8dubNESopDMuY2haohmi9TZwDqBX
/+h6vdnYDOTmWz7HPVQSCq/NPrc1QdN/Eru5Ramkg680QDuuCW49L9yXgA6/
p6392LUJVv30D2juxfPJ0XSRNmoC77BJlSH0bK8rq/GBJhBOdjn+RIxKdHJT
7+7Z0gTpRdvP8IhTiR9pPuw60ginGuP1k9BOUzppmwoboa9f/ZqWBJVs9P4B
ih8a4b/pLrMRdF7o0wvjdo1A3XjP5uk+KhHuHzfeqtsIwWzUh7ySVCIp3MOY
sq8RpAU/OaegQ9q/O8RSG6Fkv7ynthSVXCiY01AabgADUuk3hhYmvM6cRQ0w
qX0t2Hk/fn7wNM3jkAZ4dmXhK780lUSzLFRLPm6ArXdfxaah84tk7ngZNkDk
411pOjJU4h067yJ0qAFUvDLyxtHPpT+l8W1vgIZg7bLnslivuj6xkaV6uBkz
VLdTDuPPLUv5cns9LGc/bM9AX2EysHXNqAevKrb+s/JUEhg1378eWA9CXd9+
/UaP+MVxLzvUQ+q48syLA1RyI//zxFHDeji50rgiqID54Cn3b1y5HnqYbtNl
o31O2IjQCtTDve0bNuspUsn172mvL26sB0axt1xTaJ/Dj2dYBusgSElih4cS
lXA3+VK5y+pASqNQRPgglSy8O0N9GFUHRfr6Urno4ANfRzW96kD/1qSC/iEq
Kdr5gV/iXh1M3Hch02jhoMltby/UgdOL7Rqeh7Ee0qWpHTpcB5wB8Toiypif
0vEqRwXrICJc3SAf/Sjt5e6nDHVwOLXruoEKlTzOuDai0VILdT9s7syiqU83
L9R9qYUbzRRbL6CSm3UjglJWtbA4+PGRKKESoeyig8zKteA5K/e8EK1Em+bi
wVQLAnSVrwyP4HmEvm/waquBZI5rb+fRSQO6Lpu+1cCJXQsfvXFvsT3150mb
bQ10ybz6JnaUSkQ2ums+VK8BK9Vd8cXoKo0Hv39x1QCdbka60TH8fp6TgqnD
1fDumnbBIrqoVS+rIq0aJKyHyn3UsP+J2wjFuFdDgdPDBgl1KpnyprvSdKka
znuzdZagT/OIcupKVsPYp28DV49jPv51knlAUw2OccoTy+h9FnKbLzZXAVte
46zfCSpxbBxo0/heBV9rzNYkNahk6RNn9bxjFRzsWacvR68I5J14plMFNb/9
WYxPUslL3fIuA9EquL4mzr2GfnT0sqzev0qYZy7cGaBJJXpJL6TcmyrBg09f
VPoUlZy5vfbYMqoSdkhM7q9EO3KOdfs+q4TEQy5KJlrYb9se1isaVIK65nbV
dbTKLg9vGZlK6DCIPxl4Gs8jR8jTh6kSLG+rn5XVxvo3y1q81F8BGx26LlWj
7xq9YEnMroC37jY3TM9g/0ly0Dr4tgLEAikWNDp4/hUC25WsKiA34uN/QejW
sCer/icrQDdd7rG8Lp7flT8Zd3ZXwHBphWst+oEI3a0nGyrAofXqa7OzVPJr
+6Wwhc5y2DIyH0B7jkpE53/u7kkrhy/zniHB6PfN8t9Z/MpBgWHXd4XzVHLp
N31NoFU5VHJlJNSjw3oTNH21yuHKbu3MO3pU8mKvdp6DWDnMyg0V0l+gkl0w
KnuPUg5uxx5WfkJr52+7oj1cBnzn2JqU9PH9A+R4IovLIN74W1cjmnopkkX8
Sxkcu6c8ZHHx//3+y162Z2XQ9qzxN6MBlVSo1hYqXSsDcx+z+c/oB20SC92k
DDaErv87dIlKrjF5CMYLlIFfgj9jC7plv4Xk2IYyEC0QZ7UypJKfGxTpDvaV
QnZdwTamy1QSw6ccElZQCmd6LwiGoZt3fO9aDC2FwT+/96oY4ffLfsu67FIK
9uvOMm3oLzW7nu6/WQrMW7YfsrmC9faIqPvg8VL4vCP+KPNVKtn/SDtJSKwU
5CXVT4Wjgy7WbPJkLoVy5a5z5BqVcL48KaD7pwQua9lc7kDPhh4putxQAn8N
KTdtr1PJf7R1Oh9SSsDV/KMlizHOF2WXm8UCS2D7I7n7EejQbL+WlkclEPuy
4onqDeyvnic3jl8tAdWgq25daLZVYX1ttRJoiZz3tjOhkiY3k6/Ve0vgdqZn
IOtNKjnq8yEwgaUE/pULhUaim/bP/Jc+8wN82tMjj5lSiUCsAllu+wEiY6eT
etATIQ82ruX+gMzFwSz7W1ivWfYG7Q77AacpD4vZzXCetWZ9fMbjB/Rzs1VH
o2t3J2/7z+oH2O351qx+Gz9/qLV/SO8HMCko9/Sif13z+/tN+Qd8VG8cdriD
84QmvVu/8A+Q1TP7w2lOJfdpPjlNbPoBpSbrC7FoDYn973lmiuHSf/4bNCyw
3/VWVfl1FMMfF3HqAFq6nKvTsrAYnP0K2BwtMd5FR+ZPRxbDtrAL27nv4vzt
ffG2jk8xRCf9FkpAN4bF/1l2KAZS5CyuaUUlXuAb7G9cDE0NPHJDaGvasPc2
WsVwqz/u8BNr7EddzjIO8sWw+ldNjccG5wuTwnfPdxSDN02XVhI61rPR9wdj
MQiz2ehp3cP+fYR3W+rfIkgXoFwZQS9y8LaYdhbBqf0fTZ/a4vxcdFzy6o8i
6AU5K97/qOTyg8/fPOOKwFa7wj4FLc/TnN4RWASUK1efattRibHUtJirSxF8
sJx3H0PnJcrn7bhbBPsfe/o438f50Grte+7FIvjxSiiI355KoD751Bn1IrgY
nP4lDV3a1bPp2v4i+B19OlrnAfZzJoO/NbxF8DR7MHkc7T7u93IbYxFwVTnk
PHegkk2OLn86pgshspO1ZOdDKrnNnvtqvqcQVMbDazLQ1o/Uti1XFELD8uHW
s4+oJEFSc1g5rRBuMjX+/I1O3HTxfdmXQljmMRt94Ugl5skXbYl3IXjtXZ8S
fEwlM8O5gxaOhSCk5L+UhW4vt7DqNCuE1BPiG/WeYL4cPVu+rFcIJ/ULmKbQ
hVOMLqNHC6HH9AKHhxP2W1/+TF3pQrC5/5tX+CnOh783vBjYUQgML5yFc9Ep
JELYgbkQ3r/l2af/jErqGwq0Ty4XgGR4nPw02sH/xsWc4QIoTFFT8XSmknP+
U12kpQD0fnSqi7hQieX4J2bbogL41WStnY/2s2dn/ZVYAE8GGfUNnmO8hQ5K
X/tcAByzwVdn0Rtoe+9u8C6Ab7RyZl6uVMK0od6q6HEBHOKosBZ9gfU0rl7p
m0UB1ApddShEfy6RKPMyLABjmflnhm74Pk2+24Y0C2DxiOfLeXQn17ZPZw8V
gKeOkJ+3O+bLER0/b7ECELiW/kHMA+OnMKJHaHsBJFud/lqMtpiXYCVMBXDC
aTDG6CWV9O5iv3JxKR+6XjukLqI7rM6u+4/lg9Un1jwfTyoZpSYdKm7PB7q4
8FKJV1SS1TqXPF+eD+9yD9eVoOVVc/gPZeaDRE1D21UvjO9mmy81kfmQ332r
bxldo8n3sScwH879/jfm9xrv2/9I6sLLfBhd9ZuW9MbnNXsl7fEoHx4xi6+U
oQsvm7h6WOQDK18BrfEbKqHzvyeVZJQPYeIXmNf+by4z1x7tfFA89JszwIdK
KNulBemP5EP1SWd+aV8qOa44feKSTD5cM+ARqUT/pa0SlRLOhzmzOEkTP8z3
FLuBMc58cH+gprCOrm3mn5ZmzAd+904I9Md5Ewrb3kzlQeI76xOybzH/7Zsz
3FvyQD2CUaca/cdf2KQwIw860oIvmgZQyTH3He1ewXlgWSp7neYdlaSREOmL
z/JgY2v57SC01nMNPm6TPHg7fOWefCDOA/mkoEYzD8Tm5x7WonWdUuwkpfMg
l97Txew9zu/Vzm9/bM0DXS6hV7RBVKLG42NQvJILw8Lp/sFoidWMoDt9ueAg
d/qjwgesx7Z/jhiW5gLLscHwerRPt/YcicmF0LMOcXeCsR9nKpbFv8mFA8as
6fQfqaRHn23rTdtcqLAJz/+E7ia7+82v5oLRs8PlSp+ohKO15Dvb8VyYedNQ
34ju78h+tUMyF158vtVhEYL11undMzeuXOBN+NfP+Bn3g4gcuZ+rORCX7zf+
GX1s3WZ4rT8HjtaJzR4K/X89WLRoq8yBtp/5q82h//9PuRSL2qQcMP+jR2/1
hUoGWQYfsQfmwIb1ic1MYdi/zlb+03fJAT8W561haLNLzk5G5jkguoNnp8pX
rH+Shi3r53Ige1/cnjZ09+v7f0KUc+CMstp+m3Dcr5gr9D6J5MDgqU5F5m+4
zwzOyiZvyQF7Q+sj4ejAcFu+wcVsYDZnPEkiqMTkEM+lzt5sCHkYrNuBdno7
dTqoMhvkXspesv2O9W7afv+/hGwoe19uzBKJ9VFr/NXDT9lgGHnFPAKdq6cu
YOOeDVMZc7aqUTj/ClP4393LhuflLx270KcYOYXVDLKBp13Q1S4a66/QmM7j
E9kQM5rmxRpDJVzdzUKbZLPhyKJWQCT6pcKcZwJ/NjQzDn46Fksl/k50m1Ip
2XCb2yGiBx06VhKWOpMF/0RYE+zjsP/X1K1U9mSBz4HwDPZ4zO+tK5VmFVkg
on64MBptufvpAl9qFmSeb6hQT8B6RHPQOe9zFpw2udXYi85zvap3zCsL+m3/
dTok4j5CXdxx60EW2Ln4DXImYT4rsyUeM8kCJj+x37Ho9wL3ww7oZsHHL/lz
J5KpRCG+/V6achbIJOn960fbcnX2C4hlQUnhBINjCpXQZuvBG+4sMGh4toU7
FeclaQGpctosmOzbti0B3W5rPdM0lQnP/sYKaKZh//rB1cjRkwncNGp7h9A7
VF4ubKrMhCjWTukn6Tg/7lrp/JOeCSBgfZAnA+vBOZMLHV8zoVGK8WgSeuXw
CVN1n0wwhWBNrUzc/6NHXwk+zYTV07LnRtAd3G8ajltmgrdRueHTLJyfk8Vm
ogwzQdjyiglvNpUoZ7TXJp7MhHTHOYsUtG7jFfHfiplw6tVLO+0cfB/tBclN
ezKh94PgkzF05nXFpiCuTLCNTnvhnEslVqylsZvpMoGSreXNn4f73/Yz3kKT
GfChcuBdGnoh3FD4XV8G7O988Fknn0rcfAU03eoyoPjXlshxtL8MM4dZXgbo
L39NfF6A+ZbWHRYUnQET1MNZOwvx+yzKMyOCM8CJp6EoA+0e/d6f4VUGcO69
VXW2iEpW2btooh5lQITiv6bf6A5LH4fuOxmgfMKv+0UxlXy0rmX9eCkD6i+I
DQv+wHntjjVNvmYGmJjmT2ah3daf6WofzIAlO72F8yXYr3mXrS3FM+CV68T6
H7TKjlhrva0ZIPj2GcWjFOv3PZtNZFMGpH7dxiZchu/3J+3M6Eo6nEyJ5clF
vzT5T85vIh16io8J6ZdTSeWlwdMG3elg09QhNo3eLxog2lqdDgyDVrKeFZj/
P1nf+uSmw/sZhsMilVjfmz3hZlw6SNIGH8tHq7jebwgLSYdCdlktgyoq+Z1r
3s37Kh30hMrPz6JdzUvO5jxLh1/SV4y8qqnk4VS5go9NOjw+MndTtIZKDA5m
NOZeSQd2nZd3C9E8R7YtteilQ/hVQXvDWiphqZD7fu5EOhy0SnOaRzf13xXJ
U0qHmida7t51GA8bhfR6xdPh+uuBN2L1GD/7TS8ybk+H+Y8P3hejtQNXFJy3
pINH7JYvRg1UwiDFfeUwTTrszP0atYj+72VJ7K2ZNEiqPpTs00glfeW50DKU
Bse767MlmrB/tF8Q3dOWBp0Tpj9K0AEfD3TfrUiDu6tr1Veb8b4HHlpRctKA
jtmvZRm9hdnmyoO4NHjHK/bTrwX//pOuo2RoGkiI549ItuI80sHMzuyfBvkH
9abK0Lz6DYrjL9Lg3MmJxettGA+iR2VS7dNg9OIzmjX0jbzdbK0WafDIbBtT
QDuVeNiOO9NcSwPWB7Hs0h1UcsgMXsueS4Mwt2O8lejmLsPD+sfTQPFdxy6T
TipR3ftZy18pDaq+WUmsow8bGFcrS6bB1TQG+cAurCdpK8xJgmkwW/JBWbab
SmhC/4jxcqWBW4uMejV6O83jB82UNOAbLjtt2kMlz+fNzP6upkLCnNEFmp9U
8u0yXUDWVCqo0c9dCUK7V7t4PBhMhXbOl7fke6nkk/3Dw/5tqWAhLGhdi07a
KET/oyoVaOTSHpj1UcmVl3sexeenwtujWs9o+3FfGFy5zpuSCmJnBzyC0QwO
y2K231Mh9/oDX4UBnA+5Y114P6aCrs2WD/Xo42Kf5Dx9UmH46dewO4NUou77
R43lRSo4vDkUQz+E85rWrb0sj1KB5XN9yif0Yr+9t71VKoTGm+YqDWO/YlFb
rjJOhQP5ayWN6NVvei84DFKhota31mIE98+FSNJ3OhWMfu5tYxylEsf1Wzw0
x1JhejKv9zP6r9pbaTmlVHD9d37s0BjWN8OYs6clU2E7y8TfZvRcoXbUs12p
EMv/bPnuL6xPuczzndtSQXXfNlqmcezXkmRYlSUVWg/HbgpD36xUayykTYU7
p45xqkzg93ff+269lALrlzr42tB5z4T0RydTwPeO1W6b31jfhdKNvQZTYM9D
BknmSdwPlweXNDpSINvjw4FwdO9Uv7JQXQqceS8D5A/OAx+C51lKUmDwe9nx
DvT2wC3e/7JSwD7D6IztFO7nQrdoORNTgLl8Vp/lL5Wslfee3hSRAiFtHtci
0LuOWe+T+pgCcqMCt1WnqWS3cs2Wi34pULaQatOFXprdoVfikQKGjFoP7WZw
fnvLVl3yLAWmtg44s87ivj4k9MbUPgVcRB54RqKDfqfrMlqmwLYDW/yPzVFJ
yJYyOqsbKRCt9jW4B/2Eaj20/1IKkPOHwu3n8fOnH9+F66RA0436WPYFzPdS
lka1EylgZmuaFo0W6F5SYYAUWHNey1NfxHzaJ2TXKJ8Cb3x9y3rRAvVRjeMS
KbD7y956hyWsZyv3het3pUBGYl475zLOC4aZNdK8KXC68Hx/7P9drroyxZYC
/fXjv06s4H3tPt9+iJoCdn1PZ/rRP9bEuWw3pADTX+7VR6v4viZPvtMuJcPH
DbF03GtoCQ7+vslkkGE9tjkBrS7Uymw6nAwlOzu4NP/hPpXRTRPUnQwGUlY7
htANpSLxZs3JMKnCsOfJOsa/vKnYaFUyPDv9QYpnAxMZOtp1vbM4GbYaySgm
oecNGCwtspMh0qKMaNEwEc5bRlmzScmg4mikMYL+ZlCw1hGVDA2eszpPNzIR
uj79N1lfkuHmBw8DXlomcohD7mtAUDKsRAkYp6DbR/e6+fsmw+us1DvadEzE
6vH7XO+XybCr8pTtGPpn4b7mEOdkSOvof+RMz0SqSgNY9B8lg+Yv++f8DEzk
gAf9yuy9ZOhdYvFKQ3NWlbbsNU8GW+rXtzqMTMTNPF4u7EYyUHgOfRpHh1nH
n/ljmAwfROu/PacwEeoFnU7vc8mwX9E0fieVibC/mN3ZqpUMxcfX0jPQNAfV
rG3Vk0H/gm/BWSYmUlzgbZyrkgwTN/dW/EYbyc/9c1NMBie7vIYXm5jIrFmr
QOf+ZOB0Pd8pyMxEBq+NRD8VTYYI//GBLPSNjZ+SPQWT4fDXpxPnNzMRnR75
vUXbk6EumXvuD1r3g0UuH0cy3CiOWXNnYSJ5M99dxJiTYbHxKIPwFiaSk9Ot
IkWfDJ4D7Sy56A6NHdse/UsCgZm73PqsTET7y71szsUkSN7IIDCNpiy650ZN
JcEJ9g+inmxMJPhjasDoWBJ0C8pIi7AzEQHjihDxwSSwli5TykcbqEXuMe9K
AvojRqoGHEzEUsSNras+CQLPzJ6cRW8+VGL6tzoJ9l31OOvFyURO1IS47S5J
goK7AoaiXExElSScsC9MAr0nqTcK0aFh0wZc2Unwy+uUheFWJnImqjGTLTUJ
Hn/s/28e/fuPG0NPbBKwx9o/9uZmIjJ+PpdfRSRBeA7LC7FtTCRdMHr32sck
OFgd9roY7Vk/2fLtQxLUdB18Z8SDv9+7I6XNPwmuT9SFLKI7lLdtqXqdBPMr
N7/7bGciURuiuRvck8Bj01qCBC8TIXztISpPkmAHr29mCdrjWEkrvX0SJIrt
LbrKx0SO0+eevnQ/CdQP5lUuo99y5B4VskmCDo3zTX78TCR17eXcG/MksLw4
3iW5g4mcY3t40OFmEtCaPR0qQ7c6yP52vpoEAfbck9d3YvyfFZRaNEgCcbeY
+VX0ifYVsYvnkyAv4Oj6WwEmkh23p/WrdhKc/dbOKC3IRP7NmN5e00iC0dS7
rJVotUKG5nfHkuBRCT2PiRATCQiKYepVSQLWliDBdbSn0dHREKUkCBuSFgvc
xUQUPaZWVeWSQHGuVEZWmImY3lT1ipVIgv9VXOfhXGZtHMCz17FUxhhFqciW
QdYsuY9tCAlpI5KiTRSFFEMiGXklTYMR2RKi5/wiWlTy2so2hn7JyBLCJK+M
FtJ7z5+f63me6zzXfb7nnPs8F/YybUZ/38vXCFLngbfMtNWBtYQGTmh/3KzM
g2mlBEcBFULl540dFyvyIF5v1bYM9LiDUE7XMh4oWFV4GqgSqjUncqpKhge3
XR39WtEdNt3JNYt5YO0zEHBIjVDHuk2XCggP+MfDQoXUCXWYcJmUEuSBf7RU
VCY6xLdKK30BDxZcyos30iDUKFXktcMsgyvZJpfa0Y7ap1e3zjBQv92WdmQd
oYVFwXz9SQYPH/nliGhiHp9G2lq/Y+DSOleUhe5LVvcJestgqDeFZ/wjoaUl
tQrFgwzCJ9QedKDjs4onhF4zkJqvrj2qReh/XsdGRHczyJHc1iymjfMzVPay
rZOB4Yrxzuto/0CZZul2Bk2a0b2mOji+X8Yz2sLAy+yHkU703hXT0hoNDKYc
br0PXE9osrjFmo21DOI8rD4t0iW06Z+FTkkPGCw/8nJBHtprXZymwH0GpeGB
i8z1CD3nqTlfX8HAMkFEmo+20L376jJj0JWWsTxIn9B1JIB6lTI4fHO9koQB
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
FKFNInlFn9BZKb4/W8fgfSshbMq0jIP/AwhqXr0=
      "], 
      Function[Null, 
       Internal`LocalizedBlock[{$CellContext`const, $CellContext`shift, \
$CellContext`shift2, $CellContext`w, $CellContext`wr, $CellContext`\
\[CapitalGamma], $CellContext`\[Delta]bg}, #], {HoldAll}]]& ],
    Editable->False,
    SelectWithContents->True,
    Selectable->True], ",", 
   TagBox[
    RowBox[{"FittedModel", "[", 
     TagBox[
      PanelBox[
       TagBox[
        RowBox[{"0.4915195040401236`", "\[VeryThinSpace]", "+", 
         FractionBox["2.7339935129520143`*^-8", 
          RowBox[{"5.442393623166955`*^-13", "+", 
           SuperscriptBox[
            RowBox[{"(", 
             RowBox[{
              RowBox[{"-", "3.5601426200086395`"}], "+", "w"}], ")"}], 
            "2"]}]], "+", 
         RowBox[{"1.094116247720858`", " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"-", "3.5601426200086395`"}], "+", "w"}], ")"}]}], "+", 
         FractionBox[
          RowBox[{"0.000021111322301911422`", " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"-", "3.5601426200086395`"}], "+", "w"}], ")"}]}], 
          RowBox[{"5.442393623166955`*^-13", "+", 
           SuperscriptBox[
            RowBox[{"(", 
             RowBox[{
              RowBox[{"-", "3.5601426200086395`"}], "+", "w"}], ")"}], 
            "2"]}]]}],
        Short[#, 2]& ],
       FrameMargins->5],
      Editable -> False], "]"}],
    InterpretTemplate[
    FittedModel[{
      "Nonlinear", {$CellContext`wr -> 
        3.5601426200086395`, $CellContext`\[CapitalGamma] -> 
        1.4754516085818546`*^-6, $CellContext`const -> 
        50235.1300228279, $CellContext`\[Delta]bg -> 
        28.616760019940994`, $CellContext`shift -> 
        1.094116247720858, $CellContext`shift2 -> 
        0.4915195040401236}, {{$CellContext`w}, {$CellContext`shift2 + \
$CellContext`shift ($CellContext`w - $CellContext`wr) + 
         Rational[
           1, 4] $CellContext`const \
$CellContext`\[CapitalGamma]^2/(($CellContext`w - $CellContext`wr)^2 + 
          Rational[1, 4] $CellContext`\[CapitalGamma]^2) + 
         Rational[
           1, 2] ($CellContext`w - $CellContext`wr) $CellContext`\
\[CapitalGamma] (($CellContext`w - $CellContext`wr)^2 + 
            Rational[
              1, 4] $CellContext`\[CapitalGamma]^2)^(-1) \
$CellContext`\[Delta]bg, $CellContext`const > 0, $CellContext`\[CapitalGamma] > 
         0}}}, {1}, CompressedData["
1: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
      "], 
      Function[Null, 
       Internal`LocalizedBlock[{$CellContext`const, $CellContext`shift, \
$CellContext`shift2, $CellContext`w, $CellContext`wr, $CellContext`\
\[CapitalGamma], $CellContext`\[Delta]bg}, #], {HoldAll}]]& ],
    Editable->False,
    SelectWithContents->True,
    Selectable->True]}], "}"}]], "Output",
 CellChangeTimes->{{3.727444485771426*^9, 3.727444510843336*^9}, 
   3.72744785326763*^9}]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Store Results", "Subsection",
 CellChangeTimes->{{3.7253580978611917`*^9, 3.725358116881402*^9}, {
  3.727422831649886*^9, 3.7274228342822647`*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"Do", "[", 
   RowBox[{
    RowBox[{
     RowBox[{"If", "[", 
      RowBox[{
       RowBox[{
        RowBox[{"Length", "[", 
         RowBox[{"ccmodel", "[", 
          RowBox[{"[", "i", "]"}], "]"}], "]"}], ">", "2"}], ",", 
       RowBox[{
        RowBox[{"ccmodel", "[", 
         RowBox[{"[", "i", "]"}], "]"}], "=", 
        RowBox[{"ccmodel", "[", 
         RowBox[{"[", 
          RowBox[{"i", ",", 
           RowBox[{";;", "2"}]}], "]"}], "]"}]}]}], "]"}], ";", 
     RowBox[{"If", "[", 
      RowBox[{
       RowBox[{
        RowBox[{"Length", "[", 
         RowBox[{"ccmodelu", "[", 
          RowBox[{"[", "i", "]"}], "]"}], "]"}], ">", "2"}], ",", 
       RowBox[{
        RowBox[{"ccmodelu", "[", 
         RowBox[{"[", "i", "]"}], "]"}], "=", 
        RowBox[{"ccmodelu", "[", 
         RowBox[{"[", 
          RowBox[{"i", ",", 
           RowBox[{";;", "2"}]}], "]"}], "]"}]}]}], "]"}], ";", 
     RowBox[{"If", "[", 
      RowBox[{
       RowBox[{
        RowBox[{"Length", "[", 
         RowBox[{"ccmodell", "[", 
          RowBox[{"[", "i", "]"}], "]"}], "]"}], ">", "2"}], ",", 
       RowBox[{
        RowBox[{"ccmodell", "[", 
         RowBox[{"[", "i", "]"}], "]"}], "=", 
        RowBox[{"ccmodell", "[", 
         RowBox[{"[", 
          RowBox[{"i", ",", 
           RowBox[{";;", "2"}]}], "]"}], "]"}]}]}], "]"}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"If", "[", 
      RowBox[{
       RowBox[{
        RowBox[{"Length", "[", 
         RowBox[{"ccmodel", "[", 
          RowBox[{"[", "i", "]"}], "]"}], "]"}], ">", "1"}], ",", 
       RowBox[{"ccTcut", "=", "i"}]}], "]"}], ";", 
     RowBox[{"If", "[", 
      RowBox[{
       RowBox[{
        RowBox[{"Length", "[", 
         RowBox[{"ccmodelu", "[", 
          RowBox[{"[", "i", "]"}], "]"}], "]"}], ">", "1"}], ",", 
       RowBox[{"ccTucut", "=", "i"}]}], "]"}], ";", 
     RowBox[{"If", "[", 
      RowBox[{
       RowBox[{
        RowBox[{"Length", "[", 
         RowBox[{"ccmodell", "[", 
          RowBox[{"[", "i", "]"}], "]"}], "]"}], ">", "1"}], ",", 
       RowBox[{"ccTlcut", "=", "i"}]}], "]"}], ";"}], ",", 
    RowBox[{"{", 
     RowBox[{"i", ",", 
      RowBox[{"Length", "[", "ccmodel", "]"}]}], "}"}]}], "]"}], 
  ";"}]], "Input",
 CellChangeTimes->{{3.7251730891229553`*^9, 3.725173094983835*^9}, {
   3.725173272655423*^9, 3.7251732805514793`*^9}, {3.725173350795*^9, 
   3.725173413425877*^9}, {3.725173467793077*^9, 3.725173470814598*^9}, 
   3.7251735935001373`*^9, {3.725173783270134*^9, 3.72517379187675*^9}, 
   3.725358521929027*^9, {3.725358778796464*^9, 3.725358870151351*^9}, {
   3.7253589451252193`*^9, 3.72535895049085*^9}, {3.725361185263607*^9, 
   3.72536119100323*^9}, {3.726821905018765*^9, 3.7268219064257097`*^9}, 
   3.726822003774082*^9, {3.726822145373521*^9, 3.7268221817260637`*^9}, 
   3.7268267850043592`*^9, 3.727415780454134*^9, {3.727422627157667*^9, 
   3.727422650753038*^9}, {3.7274228489562607`*^9, 3.727423096283319*^9}, {
   3.727423303475884*^9, 3.727423306945921*^9}, 3.7274237786195183`*^9, {
   3.727428763847452*^9, 3.727428803308795*^9}, {3.727429118421546*^9, 
   3.727429158490671*^9}}],

Cell[CellGroupData[{

Cell[BoxData["ccTcut"], "Input",
 CellChangeTimes->{{3.727428805939682*^9, 3.727428806500229*^9}}],

Cell[BoxData["17"], "Output",
 CellChangeTimes->{3.727428807120061*^9, 3.727429162138607*^9, 
  3.72744789392962*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData["ccTucut"], "Input",
 CellChangeTimes->{{3.727428808510271*^9, 3.7274288100041*^9}}],

Cell[BoxData["9"], "Output",
 CellChangeTimes->{3.7274288108795977`*^9, 3.727429163754325*^9, 
  3.7274478965358353`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData["ccTlcut"], "Input",
 CellChangeTimes->{{3.727428826665946*^9, 3.727428828188525*^9}}],

Cell[BoxData["29"], "Output",
 CellChangeTimes->{3.727428828808494*^9, 3.727429165814815*^9, 
  3.727443888113721*^9, 3.727447897111068*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData["\[CapitalGamma]fitccl"], "Input",
 CellChangeTimes->{{3.727447903873115*^9, 3.727447907454399*^9}, {
  3.727448008280148*^9, 3.72744800980752*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"0.00432195016107247`", ",", "0.02635008213294355`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0.005854320574057894`", ",", "0.035306927619860325`"}], "}"}], 
   ",", 
   RowBox[{"{", 
    RowBox[{"0.007556024510044606`", ",", "0.045024687442573035`"}], "}"}], 
   ",", 
   RowBox[{"{", 
    RowBox[{"0.009256533874836189`", ",", "0.05516597821134509`"}], "}"}], 
   ",", 
   RowBox[{"{", 
    RowBox[{"0.011107729138599219`", ",", "0.0658615806840552`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0.013032199306741902`", ",", "1.4754516085818546`*^-6"}], "}"}], 
   ",", 
   RowBox[{"{", 
    RowBox[{"0.01505154241050082`", ",", "0.0814631981616903`"}], "}"}], ",", 
   
   RowBox[{"{", 
    RowBox[{"0.017426491853207247`", ",", "0.09488957394908228`"}], "}"}], 
   ",", 
   RowBox[{"{", 
    RowBox[{"0.019153789333383766`", ",", "0.10887672608467927`"}], "}"}], 
   ",", 
   RowBox[{"{", 
    RowBox[{"0.021113577786076115`", ",", "0.12377713915500181`"}], "}"}], 
   ",", 
   RowBox[{"{", 
    RowBox[{"0.023662903705252966`", ",", "0.13984861240613683`"}], "}"}], 
   ",", 
   RowBox[{"{", 
    RowBox[{"0.025987846259270926`", ",", "0.1559705225253204`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0.0283802769687635`", ",", "0.1721841528258521`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0.03081600049887481`", ",", "6.67687943974597`*^-7"}], "}"}], 
   ",", 
   RowBox[{"{", 
    RowBox[{"0.03330771041888829`", ",", "0.20403883436567813`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0.03586088697039601`", ",", "0.21930818687007084`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0.038452021645698914`", ",", "0.23386769001374572`"}], "}"}], 
   ",", 
   RowBox[{"{", 
    RowBox[{"0.04112593400041286`", ",", "0.24757881121364306`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0.04372478444711308`", ",", "0.26013523039584346`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0.04624283370021185`", ",", "0.27135748497178047`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0.048993643936091666`", ",", "0.28171066311304593`"}], "}"}], 
   ",", 
   RowBox[{"{", 
    RowBox[{"0.051598814885546636`", ",", "0.2910954929824853`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0.05443449852448597`", ",", "0.2996892563604308`"}], "}"}], ",", 
   
   RowBox[{"{", 
    RowBox[{"0.057223820473097056`", ",", "0.30813407647458935`"}], "}"}], 
   ",", 
   RowBox[{"{", 
    RowBox[{"0.06006128720296102`", ",", "0.3180235403231178`"}], "}"}], ",", 
   
   RowBox[{"{", 
    RowBox[{"0.06292942912284166`", ",", "0.32779427358194446`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0.06585647073197283`", ",", "0.3377332152696869`"}], "}"}], ",", 
   
   RowBox[{"{", 
    RowBox[{"0.06885767170825466`", ",", "0.3471845878979903`"}], "}"}], ",", 
   
   RowBox[{"{", 
    RowBox[{"0.07178552683305599`", ",", "0.35651745720904643`"}], "}"}], ",", 
   RowBox[{"{", "}"}], ",", 
   RowBox[{"{", "}"}], ",", 
   RowBox[{"{", "}"}], ",", 
   RowBox[{"{", "}"}], ",", 
   RowBox[{"{", "}"}]}], "}"}]], "Output",
 CellChangeTimes->{{3.7274479056852217`*^9, 3.727447908099131*^9}, 
   3.727448010343976*^9}]
}, Open  ]],

Cell[BoxData[{
 RowBox[{
  RowBox[{"wrfitcc", "=", 
   RowBox[{"Range", "[", 
    RowBox[{"Length", "[", "ccmodel", "]"}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Do", "[", 
   RowBox[{
    RowBox[{
     RowBox[{"wrfitcc", "[", 
      RowBox[{"[", "i", "]"}], "]"}], "=", 
     RowBox[{"Range", "[", 
      RowBox[{"Length", "[", 
       RowBox[{"ccmodel", "[", 
        RowBox[{"[", "i", "]"}], "]"}], "]"}], "]"}]}], ",", 
    RowBox[{"{", 
     RowBox[{"i", ",", 
      RowBox[{"Length", "[", "ccmodel", "]"}]}], "}"}]}], "]"}], ";"}], "\n", 

 RowBox[{
  RowBox[{"Do", "[", 
   RowBox[{
    RowBox[{"Do", "[", 
     RowBox[{
      RowBox[{
       RowBox[{"wrfitcc", "[", 
        RowBox[{"[", 
         RowBox[{"i", ",", "ii"}], "]"}], "]"}], "=", 
       RowBox[{"wr", "/.", 
        RowBox[{
         RowBox[{"ccmodel", "[", 
          RowBox[{"[", 
           RowBox[{"i", ",", "ii"}], "]"}], "]"}], "[", 
         "\"\<BestFitParameters\>\"", "]"}]}]}], ",", 
      RowBox[{"{", 
       RowBox[{"ii", ",", 
        RowBox[{"Length", "[", 
         RowBox[{"wrfitcc", "[", 
          RowBox[{"[", "i", "]"}], "]"}], "]"}]}], "}"}]}], "]"}], ",", 
    RowBox[{"{", 
     RowBox[{"i", ",", 
      RowBox[{"Length", "[", "wrfitcc", "]"}]}], "}"}]}], "]"}], "\n"}], "\n", 
 RowBox[{
  RowBox[{"wrfitccu", "=", 
   RowBox[{"Range", "[", 
    RowBox[{"Length", "[", "ccmodelu", "]"}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Do", "[", 
   RowBox[{
    RowBox[{
     RowBox[{"wrfitccu", "[", 
      RowBox[{"[", "i", "]"}], "]"}], "=", 
     RowBox[{"Range", "[", 
      RowBox[{"Length", "[", 
       RowBox[{"ccmodelu", "[", 
        RowBox[{"[", "i", "]"}], "]"}], "]"}], "]"}]}], ",", 
    RowBox[{"{", 
     RowBox[{"i", ",", 
      RowBox[{"Length", "[", "ccmodelu", "]"}]}], "}"}]}], "]"}], ";"}], "\n", 
 RowBox[{
  RowBox[{"Do", "[", 
   RowBox[{
    RowBox[{"Do", "[", 
     RowBox[{
      RowBox[{
       RowBox[{"wrfitccu", "[", 
        RowBox[{"[", 
         RowBox[{"i", ",", "ii"}], "]"}], "]"}], "=", 
       RowBox[{"wr", "/.", 
        RowBox[{
         RowBox[{"ccmodelu", "[", 
          RowBox[{"[", 
           RowBox[{"i", ",", "ii"}], "]"}], "]"}], "[", 
         "\"\<BestFitParameters\>\"", "]"}]}]}], ",", 
      RowBox[{"{", 
       RowBox[{"ii", ",", 
        RowBox[{"Length", "[", 
         RowBox[{"wrfitccu", "[", 
          RowBox[{"[", "i", "]"}], "]"}], "]"}]}], "}"}]}], "]"}], ",", 
    RowBox[{"{", 
     RowBox[{"i", ",", 
      RowBox[{"Length", "[", "wrfitccu", "]"}]}], "}"}]}], "]"}], 
  "\[IndentingNewLine]"}], "\n", 
 RowBox[{
  RowBox[{"wrfitccl", "=", 
   RowBox[{"Range", "[", 
    RowBox[{"Length", "[", "ccmodell", "]"}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Do", "[", 
   RowBox[{
    RowBox[{
     RowBox[{"wrfitccl", "[", 
      RowBox[{"[", "i", "]"}], "]"}], "=", 
     RowBox[{"Range", "[", 
      RowBox[{"Length", "[", 
       RowBox[{"ccmodell", "[", 
        RowBox[{"[", "i", "]"}], "]"}], "]"}], "]"}]}], ",", 
    RowBox[{"{", 
     RowBox[{"i", ",", 
      RowBox[{"Length", "[", "ccmodell", "]"}]}], "}"}]}], "]"}], ";"}], "\n", 
 RowBox[{
  RowBox[{"Do", "[", 
   RowBox[{
    RowBox[{"Do", "[", 
     RowBox[{
      RowBox[{
       RowBox[{"wrfitccl", "[", 
        RowBox[{"[", 
         RowBox[{"i", ",", "ii"}], "]"}], "]"}], "=", 
       RowBox[{"wr", "/.", 
        RowBox[{
         RowBox[{"ccmodell", "[", 
          RowBox[{"[", 
           RowBox[{"i", ",", "ii"}], "]"}], "]"}], "[", 
         "\"\<BestFitParameters\>\"", "]"}]}]}], ",", 
      RowBox[{"{", 
       RowBox[{"ii", ",", 
        RowBox[{"Length", "[", 
         RowBox[{"wrfitccl", "[", 
          RowBox[{"[", "i", "]"}], "]"}], "]"}]}], "}"}]}], "]"}], ",", 
    RowBox[{"{", 
     RowBox[{"i", ",", 
      RowBox[{"Length", "[", "wrfitccl", "]"}]}], "}"}]}], "]"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"\[CapitalGamma]fitcc", "=", 
   RowBox[{"Range", "[", 
    RowBox[{"Length", "[", "ccmodel", "]"}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Do", "[", 
   RowBox[{
    RowBox[{
     RowBox[{"\[CapitalGamma]fitcc", "[", 
      RowBox[{"[", "i", "]"}], "]"}], "=", 
     RowBox[{"Range", "[", 
      RowBox[{"Length", "[", 
       RowBox[{"ccmodel", "[", 
        RowBox[{"[", "i", "]"}], "]"}], "]"}], "]"}]}], ",", 
    RowBox[{"{", 
     RowBox[{"i", ",", 
      RowBox[{"Length", "[", "ccmodel", "]"}]}], "}"}]}], "]"}], ";"}], "\n", 

 RowBox[{
  RowBox[{"Do", "[", 
   RowBox[{
    RowBox[{"Do", "[", 
     RowBox[{
      RowBox[{
       RowBox[{"\[CapitalGamma]fitcc", "[", 
        RowBox[{"[", 
         RowBox[{"i", ",", "ii"}], "]"}], "]"}], "=", 
       RowBox[{"\[CapitalGamma]", "/.", 
        RowBox[{
         RowBox[{"ccmodel", "[", 
          RowBox[{"[", 
           RowBox[{"i", ",", "ii"}], "]"}], "]"}], "[", 
         "\"\<BestFitParameters\>\"", "]"}]}]}], ",", 
      RowBox[{"{", 
       RowBox[{"ii", ",", 
        RowBox[{"Length", "[", 
         RowBox[{"\[CapitalGamma]fitcc", "[", 
          RowBox[{"[", "i", "]"}], "]"}], "]"}]}], "}"}]}], "]"}], ",", 
    RowBox[{"{", 
     RowBox[{"i", ",", 
      RowBox[{"Length", "[", "\[CapitalGamma]fitcc", "]"}]}], "}"}]}], "]"}], 
  "\[IndentingNewLine]"}], "\n", 
 RowBox[{
  RowBox[{"\[CapitalGamma]fitccu", "=", 
   RowBox[{"Range", "[", 
    RowBox[{"Length", "[", "ccmodelu", "]"}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Do", "[", 
   RowBox[{
    RowBox[{
     RowBox[{"\[CapitalGamma]fitccu", "[", 
      RowBox[{"[", "i", "]"}], "]"}], "=", 
     RowBox[{"Range", "[", 
      RowBox[{"Length", "[", 
       RowBox[{"ccmodelu", "[", 
        RowBox[{"[", "i", "]"}], "]"}], "]"}], "]"}]}], ",", 
    RowBox[{"{", 
     RowBox[{"i", ",", 
      RowBox[{"Length", "[", "ccmodelu", "]"}]}], "}"}]}], "]"}], ";"}], "\n", 
 RowBox[{
  RowBox[{"Do", "[", 
   RowBox[{
    RowBox[{"Do", "[", 
     RowBox[{
      RowBox[{
       RowBox[{"\[CapitalGamma]fitccu", "[", 
        RowBox[{"[", 
         RowBox[{"i", ",", "ii"}], "]"}], "]"}], "=", 
       RowBox[{"\[CapitalGamma]", "/.", 
        RowBox[{
         RowBox[{"ccmodelu", "[", 
          RowBox[{"[", 
           RowBox[{"i", ",", "ii"}], "]"}], "]"}], "[", 
         "\"\<BestFitParameters\>\"", "]"}]}]}], ",", 
      RowBox[{"{", 
       RowBox[{"ii", ",", 
        RowBox[{"Length", "[", 
         RowBox[{"\[CapitalGamma]fitccu", "[", 
          RowBox[{"[", "i", "]"}], "]"}], "]"}]}], "}"}]}], "]"}], ",", 
    RowBox[{"{", 
     RowBox[{"i", ",", 
      RowBox[{"Length", "[", "\[CapitalGamma]fitccu", "]"}]}], "}"}]}], "]"}],
   "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"\[CapitalGamma]fitccl", "=", 
   RowBox[{"Range", "[", 
    RowBox[{"Length", "[", "ccmodell", "]"}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Do", "[", 
   RowBox[{
    RowBox[{
     RowBox[{"\[CapitalGamma]fitccl", "[", 
      RowBox[{"[", "i", "]"}], "]"}], "=", 
     RowBox[{"Range", "[", 
      RowBox[{"Length", "[", 
       RowBox[{"ccmodell", "[", 
        RowBox[{"[", "i", "]"}], "]"}], "]"}], "]"}]}], ",", 
    RowBox[{"{", 
     RowBox[{"i", ",", 
      RowBox[{"Length", "[", "ccmodell", "]"}]}], "}"}]}], "]"}], ";"}], "\n", 
 RowBox[{
  RowBox[{"Do", "[", 
   RowBox[{
    RowBox[{"Do", "[", 
     RowBox[{
      RowBox[{
       RowBox[{"\[CapitalGamma]fitccl", "[", 
        RowBox[{"[", 
         RowBox[{"i", ",", "ii"}], "]"}], "]"}], "=", 
       RowBox[{"\[CapitalGamma]", "/.", 
        RowBox[{
         RowBox[{"ccmodell", "[", 
          RowBox[{"[", 
           RowBox[{"i", ",", "ii"}], "]"}], "]"}], "[", 
         "\"\<BestFitParameters\>\"", "]"}]}]}], ",", 
      RowBox[{"{", 
       RowBox[{"ii", ",", 
        RowBox[{"Length", "[", 
         RowBox[{"\[CapitalGamma]fitccl", "[", 
          RowBox[{"[", "i", "]"}], "]"}], "]"}]}], "}"}]}], "]"}], ",", 
    RowBox[{"{", 
     RowBox[{"i", ",", 
      RowBox[{"Length", "[", "\[CapitalGamma]fitccl", "]"}]}], "}"}]}], "]"}],
   "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"constfitcc", "=", 
   RowBox[{"Range", "[", 
    RowBox[{"Length", "[", "ccmodel", "]"}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Do", "[", 
   RowBox[{
    RowBox[{
     RowBox[{"constfitcc", "[", 
      RowBox[{"[", "i", "]"}], "]"}], "=", 
     RowBox[{"Range", "[", 
      RowBox[{"Length", "[", 
       RowBox[{"ccmodel", "[", 
        RowBox[{"[", "i", "]"}], "]"}], "]"}], "]"}]}], ",", 
    RowBox[{"{", 
     RowBox[{"i", ",", 
      RowBox[{"Length", "[", "ccmodel", "]"}]}], "}"}]}], "]"}], ";"}], "\n", 

 RowBox[{
  RowBox[{"Do", "[", 
   RowBox[{
    RowBox[{"Do", "[", 
     RowBox[{
      RowBox[{
       RowBox[{"constfitcc", "[", 
        RowBox[{"[", 
         RowBox[{"i", ",", "ii"}], "]"}], "]"}], "=", 
       RowBox[{"const", "/.", 
        RowBox[{
         RowBox[{"ccmodel", "[", 
          RowBox[{"[", 
           RowBox[{"i", ",", "ii"}], "]"}], "]"}], "[", 
         "\"\<BestFitParameters\>\"", "]"}]}]}], ",", 
      RowBox[{"{", 
       RowBox[{"ii", ",", 
        RowBox[{"Length", "[", 
         RowBox[{"constfitcc", "[", 
          RowBox[{"[", "i", "]"}], "]"}], "]"}]}], "}"}]}], "]"}], ",", 
    RowBox[{"{", 
     RowBox[{"i", ",", 
      RowBox[{"Length", "[", "constfitcc", "]"}]}], "}"}]}], "]"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"constfitccu", "=", 
   RowBox[{"Range", "[", 
    RowBox[{"Length", "[", "ccmodelu", "]"}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Do", "[", 
   RowBox[{
    RowBox[{
     RowBox[{"constfitccu", "[", 
      RowBox[{"[", "i", "]"}], "]"}], "=", 
     RowBox[{"Range", "[", 
      RowBox[{"Length", "[", 
       RowBox[{"ccmodelu", "[", 
        RowBox[{"[", "i", "]"}], "]"}], "]"}], "]"}]}], ",", 
    RowBox[{"{", 
     RowBox[{"i", ",", 
      RowBox[{"Length", "[", "ccmodelu", "]"}]}], "}"}]}], "]"}], ";"}], "\n", 
 RowBox[{
  RowBox[{"Do", "[", 
   RowBox[{
    RowBox[{"Do", "[", 
     RowBox[{
      RowBox[{
       RowBox[{"constfitccu", "[", 
        RowBox[{"[", 
         RowBox[{"i", ",", "ii"}], "]"}], "]"}], "=", 
       RowBox[{"const", "/.", 
        RowBox[{
         RowBox[{"ccmodelu", "[", 
          RowBox[{"[", 
           RowBox[{"i", ",", "ii"}], "]"}], "]"}], "[", 
         "\"\<BestFitParameters\>\"", "]"}]}]}], ",", 
      RowBox[{"{", 
       RowBox[{"ii", ",", 
        RowBox[{"Length", "[", 
         RowBox[{"constfitccu", "[", 
          RowBox[{"[", "i", "]"}], "]"}], "]"}]}], "}"}]}], "]"}], ",", 
    RowBox[{"{", 
     RowBox[{"i", ",", 
      RowBox[{"Length", "[", "constfitccu", "]"}]}], "}"}]}], "]"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"constfitccl", "=", 
   RowBox[{"Range", "[", 
    RowBox[{"Length", "[", "ccmodell", "]"}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Do", "[", 
   RowBox[{
    RowBox[{
     RowBox[{"constfitccl", "[", 
      RowBox[{"[", "i", "]"}], "]"}], "=", 
     RowBox[{"Range", "[", 
      RowBox[{"Length", "[", 
       RowBox[{"ccmodell", "[", 
        RowBox[{"[", "i", "]"}], "]"}], "]"}], "]"}]}], ",", 
    RowBox[{"{", 
     RowBox[{"i", ",", 
      RowBox[{"Length", "[", "ccmodell", "]"}]}], "}"}]}], "]"}], ";"}], "\n", 
 RowBox[{
  RowBox[{"Do", "[", 
   RowBox[{
    RowBox[{"Do", "[", 
     RowBox[{
      RowBox[{
       RowBox[{"constfitccl", "[", 
        RowBox[{"[", 
         RowBox[{"i", ",", "ii"}], "]"}], "]"}], "=", 
       RowBox[{"const", "/.", 
        RowBox[{
         RowBox[{"ccmodell", "[", 
          RowBox[{"[", 
           RowBox[{"i", ",", "ii"}], "]"}], "]"}], "[", 
         "\"\<BestFitParameters\>\"", "]"}]}]}], ",", 
      RowBox[{"{", 
       RowBox[{"ii", ",", 
        RowBox[{"Length", "[", 
         RowBox[{"constfitccl", "[", 
          RowBox[{"[", "i", "]"}], "]"}], "]"}]}], "}"}]}], "]"}], ",", 
    RowBox[{"{", 
     RowBox[{"i", ",", 
      RowBox[{"Length", "[", "constfitccl", "]"}]}], "}"}]}], "]"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"areafitcc", "=", 
   RowBox[{"Range", "[", 
    RowBox[{"Length", "[", "ccmodel", "]"}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Do", "[", 
   RowBox[{
    RowBox[{
     RowBox[{"areafitcc", "[", 
      RowBox[{"[", "i", "]"}], "]"}], "=", 
     RowBox[{"Range", "[", 
      RowBox[{"Length", "[", 
       RowBox[{"ccmodel", "[", 
        RowBox[{"[", "i", "]"}], "]"}], "]"}], "]"}]}], ",", 
    RowBox[{"{", 
     RowBox[{"i", ",", 
      RowBox[{"Length", "[", "ccmodel", "]"}]}], "}"}]}], "]"}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Do", "[", 
   RowBox[{
    RowBox[{"Do", "[", 
     RowBox[{
      RowBox[{
       RowBox[{"areafitcc", "[", 
        RowBox[{"[", 
         RowBox[{"i", ",", "ii"}], "]"}], "]"}], "=", 
       RowBox[{
        FractionBox["\[Pi]", "2"], " ", 
        RowBox[{"constfitcc", "[", 
         RowBox[{"[", 
          RowBox[{"i", ",", "ii"}], "]"}], "]"}], " ", 
        RowBox[{"\[CapitalGamma]fitcc", "[", 
         RowBox[{"[", 
          RowBox[{"i", ",", "ii"}], "]"}], "]"}]}]}], ",", 
      RowBox[{"{", 
       RowBox[{"ii", ",", 
        RowBox[{"Length", "[", 
         RowBox[{"areafitcc", "[", 
          RowBox[{"[", "i", "]"}], "]"}], "]"}]}], "}"}]}], "]"}], ",", 
    RowBox[{"{", 
     RowBox[{"i", ",", 
      RowBox[{"Length", "[", "areafitcc", "]"}]}], "}"}]}], "]"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"areafitccu", "=", 
   RowBox[{"Range", "[", 
    RowBox[{"Length", "[", "ccmodelu", "]"}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Do", "[", 
   RowBox[{
    RowBox[{
     RowBox[{"areafitccu", "[", 
      RowBox[{"[", "i", "]"}], "]"}], "=", 
     RowBox[{"Range", "[", 
      RowBox[{"Length", "[", 
       RowBox[{"ccmodelu", "[", 
        RowBox[{"[", "i", "]"}], "]"}], "]"}], "]"}]}], ",", 
    RowBox[{"{", 
     RowBox[{"i", ",", 
      RowBox[{"Length", "[", "ccmodelu", "]"}]}], "}"}]}], "]"}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Do", "[", 
   RowBox[{
    RowBox[{"Do", "[", 
     RowBox[{
      RowBox[{
       RowBox[{"areafitccu", "[", 
        RowBox[{"[", 
         RowBox[{"i", ",", "ii"}], "]"}], "]"}], "=", 
       RowBox[{
        FractionBox["\[Pi]", "2"], " ", 
        RowBox[{"constfitccu", "[", 
         RowBox[{"[", 
          RowBox[{"i", ",", "ii"}], "]"}], "]"}], " ", 
        RowBox[{"\[CapitalGamma]fitccu", "[", 
         RowBox[{"[", 
          RowBox[{"i", ",", "ii"}], "]"}], "]"}]}]}], ",", 
      RowBox[{"{", 
       RowBox[{"ii", ",", 
        RowBox[{"Length", "[", 
         RowBox[{"areafitccu", "[", 
          RowBox[{"[", "i", "]"}], "]"}], "]"}]}], "}"}]}], "]"}], ",", 
    RowBox[{"{", 
     RowBox[{"i", ",", 
      RowBox[{"Length", "[", "areafitccu", "]"}]}], "}"}]}], "]"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"areafitccl", "=", 
   RowBox[{"Range", "[", 
    RowBox[{"Length", "[", "ccmodell", "]"}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Do", "[", 
   RowBox[{
    RowBox[{
     RowBox[{"areafitccl", "[", 
      RowBox[{"[", "i", "]"}], "]"}], "=", 
     RowBox[{"Range", "[", 
      RowBox[{"Length", "[", 
       RowBox[{"ccmodell", "[", 
        RowBox[{"[", "i", "]"}], "]"}], "]"}], "]"}]}], ",", 
    RowBox[{"{", 
     RowBox[{"i", ",", 
      RowBox[{"Length", "[", "ccmodell", "]"}]}], "}"}]}], "]"}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{"Do", "[", 
  RowBox[{
   RowBox[{"Do", "[", 
    RowBox[{
     RowBox[{
      RowBox[{"areafitccl", "[", 
       RowBox[{"[", 
        RowBox[{"i", ",", "ii"}], "]"}], "]"}], "=", 
      RowBox[{
       FractionBox["\[Pi]", "2"], " ", 
       RowBox[{"constfitccl", "[", 
        RowBox[{"[", 
         RowBox[{"i", ",", "ii"}], "]"}], "]"}], " ", 
       RowBox[{"\[CapitalGamma]fitccl", "[", 
        RowBox[{"[", 
         RowBox[{"i", ",", "ii"}], "]"}], "]"}]}]}], ",", 
     RowBox[{"{", 
      RowBox[{"ii", ",", 
       RowBox[{"Length", "[", 
        RowBox[{"areafitccl", "[", 
         RowBox[{"[", "i", "]"}], "]"}], "]"}]}], "}"}]}], "]"}], ",", 
   RowBox[{"{", 
    RowBox[{"i", ",", 
     RowBox[{"Length", "[", "areafitccl", "]"}]}], "}"}]}], "]"}]}], "Input",
 CellChangeTimes->{{3.7251730891229553`*^9, 3.725173094983835*^9}, {
   3.725173272655423*^9, 3.7251732805514793`*^9}, {3.725173350795*^9, 
   3.725173413425877*^9}, {3.725173467793077*^9, 3.725173470814598*^9}, 
   3.7251735935001373`*^9, {3.725173783270134*^9, 3.72517379187675*^9}, 
   3.725358521929027*^9, {3.725358778796464*^9, 3.725358870151351*^9}, {
   3.7253589451252193`*^9, 3.72535895049085*^9}, {3.725361185263607*^9, 
   3.72536119100323*^9}, {3.726821905018765*^9, 3.7268219064257097`*^9}, 
   3.726822003774082*^9, {3.726822145373521*^9, 3.7268221817260637`*^9}, 
   3.7268267850043592`*^9, 3.727415780454134*^9, {3.727422627157667*^9, 
   3.727422650753038*^9}, {3.7274228489562607`*^9, 3.727423096283319*^9}, {
   3.727423303475884*^9, 3.727423306945921*^9}, {3.7274237786195183`*^9, 
   3.72742378191131*^9}, {3.727428339468873*^9, 3.727428346005621*^9}, 
   3.727429331221364*^9}],

Cell[BoxData[
 RowBox[{"Manipulate", "[", 
  RowBox[{
   RowBox[{"Show", "[", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"ListPlot", "[", 
       RowBox[{
        RowBox[{"ccdatal", "[", "i", "]"}], ",", 
        RowBox[{"Joined", "\[Rule]", "True"}]}], "]"}], ",", 
      RowBox[{"Plot", "[", 
       RowBox[{
        RowBox[{
         RowBox[{"ccmodell", "[", 
          RowBox[{"[", 
           RowBox[{"i", ",", "ii"}], "]"}], "]"}], "[", "x", "]"}], ",", 
        RowBox[{"{", 
         RowBox[{"x", ",", 
          RowBox[{
           RowBox[{"0.7", " ", "wr"}], "/.", 
           RowBox[{
            RowBox[{"ccmodell", "[", 
             RowBox[{"[", 
              RowBox[{"i", ",", "ii"}], "]"}], "]"}], "[", 
            "\"\<BestFitParameters\>\"", "]"}]}], ",", 
          RowBox[{
           RowBox[{"1.3", " ", "wr"}], "/.", 
           RowBox[{
            RowBox[{"ccmodell", "[", 
             RowBox[{"[", 
              RowBox[{"i", ",", "ii"}], "]"}], "]"}], "[", 
            "\"\<BestFitParameters\>\"", "]"}]}]}], "}"}], ",", 
        RowBox[{"PlotStyle", "\[Rule]", 
         RowBox[{"{", 
          RowBox[{"Red", ",", "Dashed"}], "}"}]}], ",", 
        RowBox[{"PlotRange", "\[Rule]", "All"}]}], "]"}], ",", 
      RowBox[{"Plot", "[", 
       RowBox[{
        RowBox[{"BWi", "[", 
         RowBox[{"x", ",", 
          RowBox[{"wr", "/.", 
           RowBox[{
            RowBox[{"ccmodell", "[", 
             RowBox[{"[", 
              RowBox[{"i", ",", "ii"}], "]"}], "]"}], "[", 
            "\"\<BestFitParameters\>\"", "]"}]}], ",", 
          RowBox[{"\[CapitalGamma]", "/.", 
           RowBox[{
            RowBox[{"ccmodell", "[", 
             RowBox[{"[", 
              RowBox[{"i", ",", "ii"}], "]"}], "]"}], "[", 
            "\"\<BestFitParameters\>\"", "]"}]}], ",", 
          RowBox[{"const", "/.", 
           RowBox[{
            RowBox[{"ccmodell", "[", 
             RowBox[{"[", 
              RowBox[{"i", ",", "ii"}], "]"}], "]"}], "[", 
            "\"\<BestFitParameters\>\"", "]"}]}]}], "]"}], ",", 
        RowBox[{"{", 
         RowBox[{"x", ",", 
          RowBox[{
           RowBox[{"0.7", " ", "wr"}], "/.", 
           RowBox[{
            RowBox[{"ccmodell", "[", 
             RowBox[{"[", 
              RowBox[{"i", ",", "ii"}], "]"}], "]"}], "[", 
            "\"\<BestFitParameters\>\"", "]"}]}], ",", 
          RowBox[{
           RowBox[{"1.3", " ", "wr"}], "/.", 
           RowBox[{
            RowBox[{"ccmodell", "[", 
             RowBox[{"[", 
              RowBox[{"i", ",", "ii"}], "]"}], "]"}], "[", 
            "\"\<BestFitParameters\>\"", "]"}]}]}], "}"}], ",", 
        RowBox[{"PlotStyle", "\[Rule]", 
         RowBox[{"{", 
          RowBox[{"Green", ",", "Dashed"}], "}"}]}], ",", 
        RowBox[{"PlotRange", "\[Rule]", "All"}]}], "]"}]}], "}"}], "]"}], ",", 
   RowBox[{"{", 
    RowBox[{"i", ",", "1", ",", 
     RowBox[{"Length", "[", "ccmodell", "]"}], ",", "1"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"ii", ",", "1", ",", 
     RowBox[{"Length", "[", 
      RowBox[{"ccmodell", "[", 
       RowBox[{"[", "1", "]"}], "]"}], "]"}], ",", "1"}], "}"}]}], 
  "]"}]], "Input",
 CellChangeTimes->{{3.725018906220598*^9, 3.725019110591589*^9}, {
  3.725019211801218*^9, 3.725019213160674*^9}, {3.725019468691352*^9, 
  3.725019542662833*^9}, {3.7250195833383083`*^9, 3.7250196093119087`*^9}, {
  3.7250197504957047`*^9, 3.725019768253553*^9}, {3.725020661321162*^9, 
  3.725020757760775*^9}, {3.725021003443694*^9, 3.7250210491369047`*^9}, {
  3.725021133320426*^9, 3.725021140462159*^9}, {3.725172852224782*^9, 
  3.7251728542018414`*^9}, {3.725182456719808*^9, 3.725182480073546*^9}, {
  3.72518760640889*^9, 3.725187608717104*^9}, {3.725188770874642*^9, 
  3.7251887878960667`*^9}, {3.726822327067115*^9, 3.7268223273311653`*^9}, {
  3.7274433588338137`*^9, 3.72744338089509*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"cccont", "=", 
   RowBox[{"{", 
    RowBox[{
    "3.648553230970728`", ",", "3.592872558615657`", ",", 
     "3.5462423968160763`", ",", "3.50627749401972`", ",", 
     "3.471390082559803`", ",", "3.440477098160211`", ",", 
     "3.4127452560222915`", ",", "3.3876075252547677`", ",", 
     "3.3646189484121436`", ",", "3.3434352822109226`", ",", 
     "3.323785454856247`", ",", "3.3054526994473723`", ",", 
     "3.288261308642187`", ",", "3.272067135253791`", ",", 
     "3.2567506466093215`", ",", "3.2422117602027`", ",", 
     "3.2283659447979494`", ",", "3.2151412362308114`", ",", 
     "3.2027178984093014`", ",", "3.191176351511658`", ",", 
     "3.1800210358114978`", ",", "3.1692213413581785`", ",", 
     "3.158750046801837`", ",", "3.1485828474763107`", ",", 
     "3.138697962475392`", ",", "3.129075804122139`", ",", 
     "3.1196986990116966`", ",", "3.1105506514104317`", ",", 
     "3.1016171414292035`", ",", "3.0928849538048953`", ",", 
     "3.0843420286931376`", ",", "3.0759773300200837`", ",", 
     "3.067780741067037`", ",", "3.0597429617989613`"}], "}"}]}], ";"}]], \
"Input",
 CellChangeTimes->{{3.727440712454924*^9, 3.7274407298315697`*^9}, {
  3.7274415819335814`*^9, 3.727441583584762*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"ccbind", "=", 
  RowBox[{"cccont", "-", "wrfitcc"}]}]], "Input",
 CellChangeTimes->{{3.7274407354498787`*^9, 3.727440742147352*^9}, {
  3.727441591113603*^9, 3.7274416302733507`*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"0.5710504775915424`", ",", "0.1052590148416157`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0.5188247374777202`", ",", "0.070865991928875`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0.47566592024226884`", ",", "0.04440101626191639`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0.4391779977686019`", ",", "0.02458669595770413`"}], "}"}], ",", 
   
   RowBox[{"{", 
    RowBox[{"0.40776538103086546`", ",", "0.008782910043206638`"}], "}"}], 
   ",", 
   RowBox[{"{", 
    RowBox[{"0.38032100453151374`", ",", 
     RowBox[{"-", "0.004013008317457878`"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0.35604744047329584`", ",", 
     RowBox[{"-", "0.013912299739360368`"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0.3343573120753218`", ",", 
     RowBox[{"-", "0.02168266876584113`"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0.3148029314472165`", ",", 
     RowBox[{"-", "0.00760634169491059`"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0.2970437124566998`", ",", 
     RowBox[{"-", "0.03277796003853917`"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0.28080601990727905`", ",", 
     RowBox[{"-", "0.036939756598433515`"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0.26587316801718996`", ",", 
     RowBox[{"-", "0.041643508499698445`"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0.2520744259941674`", ",", 
     RowBox[{"-", "0.05197342429230423`"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0.23926318753884646`", ",", 
     RowBox[{"-", "0.057930640893179675`"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0.2273236256551221`", ",", 
     RowBox[{"-", "0.07192873987812698`"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0.2161597321389821`", ",", 
     RowBox[{"-", "0.08166262780850664`"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0.2056826094123494`", ",", 
     RowBox[{"-", "0.09161743628199837`"}]}], "}"}], ",", 
   RowBox[{"{", "0.19582822696482038`", "}"}], ",", 
   RowBox[{"{", "0.18671212360603917`", "}"}], ",", 
   RowBox[{"{", "0.17836947174916506`", "}"}], ",", 
   RowBox[{"{", "0.1704254486826926`", "}"}], ",", 
   RowBox[{"{", "0.16285695645880827`", "}"}], ",", 
   RowBox[{"{", "0.15564278788793473`", "}"}], ",", 
   RowBox[{"{", "0.14877632377143124`", "}"}], ",", 
   RowBox[{"{", "0.14219347004491656`", "}"}], ",", 
   RowBox[{"{", "0.1359396709487508`", "}"}], ",", 
   RowBox[{"{", "0.12999106051909548`", "}"}], ",", 
   RowBox[{"{", "0.12437734882545959`", "}"}], ",", 
   RowBox[{"{", "0.11933031284888251`", "}"}], ",", 
   RowBox[{"{", "0.10940792236837948`", "}"}], ",", 
   RowBox[{"{", "0.10387227858838921`", "}"}], ",", 
   RowBox[{"{", "0.09851645440340207`", "}"}], ",", 
   RowBox[{"{", "0.09332843884273334`", "}"}], ",", 
   RowBox[{"{", "0.08830542421596244`", "}"}]}], "}"}]], "Output",
 CellChangeTimes->{
  3.727440744206793*^9, {3.727441587273119*^9, 3.727441631570334*^9}}]
}, Open  ]],

Cell[BoxData[{
 RowBox[{
  RowBox[{"Do", "[", 
   RowBox[{
    RowBox[{"If", "[", 
     RowBox[{
      RowBox[{
       RowBox[{
        RowBox[{"(", 
         RowBox[{"ccbind", "-", "\[CapitalGamma]fitcc"}], ")"}], "[", 
        RowBox[{"[", 
         RowBox[{"i", ",", "1"}], "]"}], "]"}], ">", "0"}], ",", 
      RowBox[{"cc1Tmelt", "=", 
       RowBox[{"i", "+", "1"}]}]}], "]"}], ",", 
    RowBox[{"{", 
     RowBox[{"i", ",", "1", ",", 
      RowBox[{"Length", "[", "ccbind", "]"}]}], "}"}]}], "]"}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Do", "[", 
   RowBox[{
    RowBox[{"If", "[", 
     RowBox[{
      RowBox[{
       RowBox[{
        RowBox[{"(", 
         RowBox[{"ccbind", "-", "\[CapitalGamma]fitcc"}], ")"}], "[", 
        RowBox[{"[", 
         RowBox[{"i", ",", "2"}], "]"}], "]"}], ">", "0"}], ",", 
      RowBox[{"cc2Tmelt", "=", 
       RowBox[{"i", "+", "1"}]}]}], "]"}], ",", 
    RowBox[{"{", 
     RowBox[{"i", ",", "1", ",", "ccTcut"}], "}"}]}], "]"}], ";"}]}], "Input",\

 CellChangeTimes->{{3.727441735939802*^9, 3.727441738371702*^9}, {
  3.727441960007325*^9, 3.727441975825563*^9}, {3.727442008264069*^9, 
  3.72744206640923*^9}, {3.727442109650753*^9, 3.727442155069572*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"ListPlot", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{"Transpose", "[", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"Tscanc", "[", 
         RowBox[{"[", 
          RowBox[{";;", "cc1Tmelt"}], "]"}], "]"}], ",", 
        RowBox[{"wrfitcc", "[", 
         RowBox[{"[", 
          RowBox[{
           RowBox[{";;", "cc1Tmelt"}], ",", "1"}], "]"}], "]"}]}], "}"}], 
      "]"}], ",", 
     RowBox[{"Transpose", "[", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"Tscanc", "[", 
         RowBox[{"[", 
          RowBox[{";;", "cc1Tmelt"}], "]"}], "]"}], ",", 
        RowBox[{"wrfitccl", "[", 
         RowBox[{"[", 
          RowBox[{
           RowBox[{";;", "cc1Tmelt"}], ",", "1"}], "]"}], "]"}]}], "}"}], 
      "]"}], ",", 
     RowBox[{"Transpose", "[", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"Tscanc", "[", 
         RowBox[{"[", 
          RowBox[{";;", "cc1Tmelt"}], "]"}], "]"}], ",", 
        RowBox[{"wrfitccu", "[", 
         RowBox[{"[", 
          RowBox[{
           RowBox[{";;", "cc1Tmelt"}], ",", "1"}], "]"}], "]"}]}], "}"}], 
      "]"}], ",", 
     RowBox[{"Transpose", "[", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"Tscanc", "[", 
         RowBox[{"[", 
          RowBox[{";;", "cc2Tmelt"}], "]"}], "]"}], ",", 
        RowBox[{"wrfitcc", "[", 
         RowBox[{"[", 
          RowBox[{
           RowBox[{";;", "cc2Tmelt"}], ",", "2"}], "]"}], "]"}]}], "}"}], 
      "]"}], ",", 
     RowBox[{"Transpose", "[", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"Tscanc", "[", 
         RowBox[{"[", 
          RowBox[{";;", "cc2Tmelt"}], "]"}], "]"}], ",", 
        RowBox[{"wrfitccl", "[", 
         RowBox[{"[", 
          RowBox[{
           RowBox[{";;", "cc2Tmelt"}], ",", "2"}], "]"}], "]"}]}], "}"}], 
      "]"}], ",", 
     RowBox[{"Transpose", "[", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"Tscanc", "[", 
         RowBox[{"[", 
          RowBox[{";;", "cc2Tmelt"}], "]"}], "]"}], ",", 
        RowBox[{"wrfitccu", "[", 
         RowBox[{"[", 
          RowBox[{
           RowBox[{";;", "cc2Tmelt"}], ",", "2"}], "]"}], "]"}]}], "}"}], 
      "]"}]}], "}"}], ",", 
   RowBox[{"PlotRange", "\[Rule]", "All"}], ",", 
   RowBox[{"Filling", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"1", "\[Rule]", 
       RowBox[{"{", "2", "}"}]}], ",", 
      RowBox[{"1", "\[Rule]", 
       RowBox[{"{", "3", "}"}]}], ",", 
      RowBox[{"4", "\[Rule]", 
       RowBox[{"{", "5", "}"}]}], ",", 
      RowBox[{"4", "\[Rule]", 
       RowBox[{"{", "6", "}"}]}]}], "}"}]}], ",", 
   RowBox[{"FillingStyle", "\[Rule]", 
    RowBox[{"Opacity", "[", "0.2", "]"}]}], ",", 
   RowBox[{"PlotStyle", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"Blue", ",", 
      RowBox[{"{", 
       RowBox[{"Blue", ",", "Thin"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"Blue", ",", "Thin"}], "}"}], ",", "Green", ",", 
      RowBox[{"{", 
       RowBox[{"Green", ",", "Thin"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"Green", ",", "Thin"}], "}"}]}], "}"}]}]}], "]"}]], "Input",
 CellChangeTimes->{{3.726827633847341*^9, 3.726827636859535*^9}, {
  3.726827677669911*^9, 3.726827709286421*^9}, {3.726827935822178*^9, 
  3.726827951268824*^9}, {3.726828005340424*^9, 3.726828011491425*^9}, {
  3.727442198396728*^9, 3.7274422070275173`*^9}, {3.727442247229615*^9, 
  3.7274423339087687`*^9}, {3.727442560467084*^9, 3.727442580090201*^9}, {
  3.727442613431574*^9, 3.727442740597671*^9}, {3.727442784854865*^9, 
  3.7274429572311497`*^9}, {3.7274431842709093`*^9, 3.727443184416456*^9}}],

Cell[BoxData[
 TemplateBox[{
  "Part","partw",
   "\"Part \\!\\(\\*RowBox[{\\\"1\\\"}]\\) of \\!\\(\\*RowBox[{\\\"{\\\", \
\\\"}\\\"}]\\) does not exist.\"",2,721,183,29188995265012828252,"Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.727447871871208*^9}],

Cell[BoxData[
 TemplateBox[{
  "Transpose","nmtx",
   "\"The first two levels of \\!\\(\\*RowBox[{\\\"{\\\", \
RowBox[{RowBox[{\\\"{\\\", RowBox[{\\\"150\\\", \\\",\\\", \\\"153\\\", \\\",\
\\\", \\\"156\\\", \\\",\\\", \\\"159\\\", \\\",\\\", \\\"162\\\", \\\",\\\", \
\\\"164\\\", \\\",\\\", \\\"167\\\", \\\",\\\", \\\"170\\\", \\\",\\\", \
\\\"174\\\", \\\",\\\", \\\"177\\\", \\\",\\\", \\\"180\\\", \\\",\\\", \
\\\"183\\\", \\\",\\\", \\\"186\\\", \\\",\\\", \\\"189\\\", \\\",\\\", \
\\\"192\\\", \\\",\\\", \\\"195\\\", \\\",\\\", \\\"198\\\", \\\",\\\", \
\\\"201\\\", \\\",\\\", \\\"204\\\", \\\",\\\", \\\"207\\\", \\\",\\\", \
\\\"210\\\", \\\",\\\", \\\"213\\\", \\\",\\\", \\\"216\\\", \\\",\\\", \
\\\"219\\\", \\\",\\\", \\\"222\\\", \\\",\\\", \\\"224\\\", \\\",\\\", \
\\\"227\\\", \\\",\\\", \\\"230\\\", \\\",\\\", \\\"234\\\", \\\",\\\", \
\\\"237\\\"}], \\\"}\\\"}], \\\",\\\", RowBox[{RowBox[{\\\"{\\\", \
RowBox[{RowBox[{\\\"{\\\", RowBox[{\\\"3.0898162653104064`\\\", \\\",\\\", \\\
\"3.6253630471429354`\\\"}], \\\"}\\\"}], \\\",\\\", RowBox[{\\\"{\\\", \
RowBox[{\\\"3.087847998413299`\\\", \\\",\\\", \\\"3.6117185710186126`\\\"}], \
\\\"}\\\"}], \\\",\\\", RowBox[{\\\"{\\\", \
RowBox[{\\\"3.0858174503813403`\\\", \\\",\\\", \\\"3.597995371206535`\\\"}], \
\\\"}\\\"}], \\\",\\\", RowBox[{\\\"{\\\", \
RowBox[{\\\"3.083741719142633`\\\", \\\",\\\", \\\"3.58424035100316`\\\"}], \
\\\"}\\\"}], \\\",\\\", RowBox[{\\\"{\\\", \
RowBox[{\\\"3.0816330072271167`\\\", \\\",\\\", \
\\\"3.5704319656547785`\\\"}], \\\"}\\\"}], \\\",\\\", RowBox[{\\\"{\\\", \
RowBox[{\\\"3.0794995278023554`\\\", \\\",\\\", \
\\\"3.5601426200086395`\\\"}], \\\"}\\\"}], \\\",\\\", RowBox[{\\\"{\\\", \
RowBox[{\\\"3.077348167354971`\\\", \\\",\\\", \\\"3.5446542938043026`\\\"}], \
\\\"}\\\"}], \\\",\\\", RowBox[{\\\"{\\\", \
RowBox[{\\\"3.0751822563131346`\\\", \\\",\\\", \\\"3.531000586867712`\\\"}], \
\\\"}\\\"}], \\\",\\\", RowBox[{\\\"{\\\", \
RowBox[{\\\"3.0730065793717767`\\\", \\\",\\\", \
\\\"3.5177419748654177`\\\"}], \\\"}\\\"}], \\\",\\\", RowBox[{\\\"{\\\", \
RowBox[{\\\"3.07082283612782`\\\", \\\",\\\", \\\"3.5046971481270894`\\\"}], \
\\\"}\\\"}], \\\",\\\", RowBox[{\\\"{\\\", \
RowBox[{\\\"3.0686325340683354`\\\", \\\",\\\", \
\\\"3.4922382440966038`\\\"}], \\\"}\\\"}], \\\",\\\", RowBox[{\\\"\
\[LeftSkeleton]\\\", \\\"13\\\", \\\"\[RightSkeleton]\\\"}], \\\",\\\", \
RowBox[{\\\"{\\\", RowBox[{\\\"3.038508988845202`\\\", \\\",\\\", \
\\\"3.356361771616842`\\\"}], \\\"}\\\"}], \\\",\\\", RowBox[{\\\"{\\\", \
RowBox[{\\\"3.0363943063418963`\\\", \\\",\\\", \\\"3.353358740460765`\\\"}], \
\\\"}\\\"}], \\\",\\\", RowBox[{\\\"{\\\", \
RowBox[{\\\"3.034268802795067`\\\", \\\",\\\", \\\"3.350633994393747`\\\"}], \
\\\"}\\\"}], \\\",\\\", RowBox[{\\\"{\\\", \
RowBox[{\\\"3.032137745527814`\\\", \\\",\\\", \\\"3.3483072751114005`\\\"}], \
\\\"}\\\"}], \\\",\\\", RowBox[{\\\"{\\\", \
RowBox[{\\\"3.029995264609043`\\\", \\\",\\\", \\\"3.346269595796103`\\\"}], \
\\\"}\\\"}], \\\",\\\", RowBox[{\\\"{\\\", \\\"}\\\"}], \\\",\\\", RowBox[{\\\
\"{\\\", \\\"}\\\"}], \\\",\\\", RowBox[{\\\"{\\\", \\\"}\\\"}], \\\",\\\", \
RowBox[{\\\"{\\\", \\\"}\\\"}], \\\",\\\", RowBox[{\\\"{\\\", \\\"}\\\"}]}], \
\\\"}\\\"}], \\\"\[LeftDoubleBracket]\\\", RowBox[{RowBox[{\\\"1\\\", \
\\\";;\\\", \\\"30\\\"}], \\\",\\\", \\\"1\\\"}], \\\"\[RightDoubleBracket]\\\
\"}]}], \\\"}\\\"}]\\) cannot be transposed.\"",2,721,184,
   29188995265012828252,"Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.727447871898294*^9}],

Cell[BoxData[
 TemplateBox[{
  "Transpose","nmtx",
   "\"The first two levels of \\!\\(\\*RowBox[{\\\"{\\\", \
RowBox[{RowBox[{\\\"{\\\", RowBox[{\\\"150.`16.\\\", \\\",\\\", \
\\\"153.`16.\\\", \\\",\\\", \\\"156.`16.\\\", \\\",\\\", \\\"159.`16.\\\", \
\\\",\\\", \\\"162.`16.\\\", \\\",\\\", \\\"164.`16.\\\", \\\",\\\", \
\\\"167.`16.\\\", \\\",\\\", \\\"170.`16.\\\", \\\",\\\", \\\"174.`16.\\\", \
\\\",\\\", \\\"177.`16.\\\", \\\",\\\", \\\"180.`16.\\\", \\\",\\\", \
\\\"183.`16.\\\", \\\",\\\", \\\"186.`16.\\\", \\\",\\\", \\\"189.`16.\\\", \
\\\",\\\", \\\"192.`16.\\\", \\\",\\\", \\\"195.`16.\\\", \\\",\\\", \
\\\"198.`16.\\\", \\\",\\\", \\\"201.`16.\\\", \\\",\\\", \\\"204.`16.\\\", \
\\\",\\\", \\\"207.`16.\\\", \\\",\\\", \\\"210.`16.\\\", \\\",\\\", \
\\\"213.`16.\\\", \\\",\\\", \\\"216.`16.\\\", \\\",\\\", \\\"219.`16.\\\", \
\\\",\\\", \\\"222.`16.\\\", \\\",\\\", \\\"224.`16.\\\", \\\",\\\", \
\\\"227.`16.\\\", \\\",\\\", \\\"230.`16.\\\", \\\",\\\", \\\"234.`16.\\\", \
\\\",\\\", \\\"237.`16.\\\"}], \\\"}\\\"}], \\\",\\\", \
RowBox[{RowBox[{\\\"{\\\", RowBox[{RowBox[{\\\"{\\\", \
RowBox[{\\\"3.0898162653104064`\\\", \\\",\\\", \
\\\"3.6253630471429354`\\\"}], \\\"}\\\"}], \\\",\\\", RowBox[{\\\"{\\\", \
RowBox[{\\\"3.087847998413299`\\\", \\\",\\\", \\\"3.6117185710186126`\\\"}], \
\\\"}\\\"}], \\\",\\\", RowBox[{\\\"{\\\", \
RowBox[{\\\"3.0858174503813403`\\\", \\\",\\\", \\\"3.597995371206535`\\\"}], \
\\\"}\\\"}], \\\",\\\", RowBox[{\\\"{\\\", \
RowBox[{\\\"3.083741719142633`\\\", \\\",\\\", \\\"3.58424035100316`\\\"}], \
\\\"}\\\"}], \\\",\\\", RowBox[{\\\"{\\\", \
RowBox[{\\\"3.0816330072271167`\\\", \\\",\\\", \
\\\"3.5704319656547785`\\\"}], \\\"}\\\"}], \\\",\\\", RowBox[{\\\"{\\\", \
RowBox[{\\\"3.0794995278023554`\\\", \\\",\\\", \
\\\"3.5601426200086395`\\\"}], \\\"}\\\"}], \\\",\\\", RowBox[{\\\"{\\\", \
RowBox[{\\\"3.077348167354971`\\\", \\\",\\\", \\\"3.5446542938043026`\\\"}], \
\\\"}\\\"}], \\\",\\\", RowBox[{\\\"{\\\", \
RowBox[{\\\"3.0751822563131346`\\\", \\\",\\\", \\\"3.531000586867712`\\\"}], \
\\\"}\\\"}], \\\",\\\", RowBox[{\\\"{\\\", \
RowBox[{\\\"3.0730065793717767`\\\", \\\",\\\", \
\\\"3.5177419748654177`\\\"}], \\\"}\\\"}], \\\",\\\", RowBox[{\\\"\
\[LeftSkeleton]\\\", \\\"17\\\", \\\"\[RightSkeleton]\\\"}], \\\",\\\", \
RowBox[{\\\"{\\\", RowBox[{\\\"3.034268802795067`\\\", \\\",\\\", \
\\\"3.350633994393747`\\\"}], \\\"}\\\"}], \\\",\\\", RowBox[{\\\"{\\\", \
RowBox[{\\\"3.032137745527814`\\\", \\\",\\\", \\\"3.3483072751114005`\\\"}], \
\\\"}\\\"}], \\\",\\\", RowBox[{\\\"{\\\", \
RowBox[{\\\"3.029995264609043`\\\", \\\",\\\", \\\"3.346269595796103`\\\"}], \
\\\"}\\\"}], \\\",\\\", RowBox[{\\\"{\\\", \\\"}\\\"}], \\\",\\\", RowBox[{\\\
\"{\\\", \\\"}\\\"}], \\\",\\\", RowBox[{\\\"{\\\", \\\"}\\\"}], \\\",\\\", \
RowBox[{\\\"{\\\", \\\"}\\\"}], \\\",\\\", RowBox[{\\\"{\\\", \\\"}\\\"}]}], \
\\\"}\\\"}], \\\"\[LeftDoubleBracket]\\\", RowBox[{RowBox[{\\\"1\\\", \
\\\";;\\\", \\\"30\\\"}], \\\",\\\", \\\"1\\\"}], \\\"\[RightDoubleBracket]\\\
\"}]}], \\\"}\\\"}]\\) cannot be transposed.\"",2,721,185,
   29188995265012828252,"Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.7274478723378553`*^9}],

Cell[BoxData[
 TemplateBox[{
  "Transpose","nmtx",
   "\"The first two levels of \\!\\(\\*RowBox[{\\\"{\\\", \
RowBox[{RowBox[{\\\"{\\\", RowBox[{\\\"150.`\\\", \\\",\\\", \\\"153.`\\\", \
\\\",\\\", \\\"156.`\\\", \\\",\\\", \\\"159.`\\\", \\\",\\\", \\\"162.`\\\", \
\\\",\\\", \\\"164.`\\\", \\\",\\\", \\\"167.`\\\", \\\",\\\", \\\"170.`\\\", \
\\\",\\\", \\\"174.`\\\", \\\",\\\", \\\"177.`\\\", \\\",\\\", \\\"180.`\\\", \
\\\",\\\", \\\"183.`\\\", \\\",\\\", \\\"186.`\\\", \\\",\\\", \\\"189.`\\\", \
\\\",\\\", \\\"192.`\\\", \\\",\\\", \\\"195.`\\\", \\\",\\\", \\\"198.`\\\", \
\\\",\\\", \\\"201.`\\\", \\\",\\\", \\\"204.`\\\", \\\",\\\", \\\"207.`\\\", \
\\\",\\\", \\\"210.`\\\", \\\",\\\", \\\"213.`\\\", \\\",\\\", \\\"216.`\\\", \
\\\",\\\", \\\"219.`\\\", \\\",\\\", \\\"222.`\\\", \\\",\\\", \\\"224.`\\\", \
\\\",\\\", \\\"227.`\\\", \\\",\\\", \\\"230.`\\\", \\\",\\\", \\\"234.`\\\", \
\\\",\\\", \\\"237.`\\\"}], \\\"}\\\"}], \\\",\\\", \
RowBox[{RowBox[{\\\"{\\\", RowBox[{RowBox[{\\\"{\\\", \
RowBox[{\\\"3.0898162653104064`\\\", \\\",\\\", \
\\\"3.6253630471429354`\\\"}], \\\"}\\\"}], \\\",\\\", RowBox[{\\\"{\\\", \
RowBox[{\\\"3.087847998413299`\\\", \\\",\\\", \\\"3.6117185710186126`\\\"}], \
\\\"}\\\"}], \\\",\\\", RowBox[{\\\"{\\\", \
RowBox[{\\\"3.0858174503813403`\\\", \\\",\\\", \\\"3.597995371206535`\\\"}], \
\\\"}\\\"}], \\\",\\\", RowBox[{\\\"{\\\", \
RowBox[{\\\"3.083741719142633`\\\", \\\",\\\", \\\"3.58424035100316`\\\"}], \
\\\"}\\\"}], \\\",\\\", RowBox[{\\\"{\\\", \
RowBox[{\\\"3.0816330072271167`\\\", \\\",\\\", \
\\\"3.5704319656547785`\\\"}], \\\"}\\\"}], \\\",\\\", RowBox[{\\\"{\\\", \
RowBox[{\\\"3.0794995278023554`\\\", \\\",\\\", \
\\\"3.5601426200086395`\\\"}], \\\"}\\\"}], \\\",\\\", RowBox[{\\\"{\\\", \
RowBox[{\\\"3.077348167354971`\\\", \\\",\\\", \\\"3.5446542938043026`\\\"}], \
\\\"}\\\"}], \\\",\\\", RowBox[{\\\"{\\\", \
RowBox[{\\\"3.0751822563131346`\\\", \\\",\\\", \\\"3.531000586867712`\\\"}], \
\\\"}\\\"}], \\\",\\\", RowBox[{\\\"{\\\", \
RowBox[{\\\"3.0730065793717767`\\\", \\\",\\\", \
\\\"3.5177419748654177`\\\"}], \\\"}\\\"}], \\\",\\\", RowBox[{\\\"{\\\", \
RowBox[{\\\"3.07082283612782`\\\", \\\",\\\", \\\"3.5046971481270894`\\\"}], \
\\\"}\\\"}], \\\",\\\", RowBox[{\\\"\[LeftSkeleton]\\\", \\\"14\\\", \\\"\
\[RightSkeleton]\\\"}], \\\",\\\", RowBox[{\\\"{\\\", \
RowBox[{\\\"3.038508988845202`\\\", \\\",\\\", \\\"3.356361771616842`\\\"}], \
\\\"}\\\"}], \\\",\\\", RowBox[{\\\"{\\\", \
RowBox[{\\\"3.0363943063418963`\\\", \\\",\\\", \\\"3.353358740460765`\\\"}], \
\\\"}\\\"}], \\\",\\\", RowBox[{\\\"{\\\", \
RowBox[{\\\"3.034268802795067`\\\", \\\",\\\", \\\"3.350633994393747`\\\"}], \
\\\"}\\\"}], \\\",\\\", RowBox[{\\\"{\\\", \
RowBox[{\\\"3.032137745527814`\\\", \\\",\\\", \\\"3.3483072751114005`\\\"}], \
\\\"}\\\"}], \\\",\\\", RowBox[{\\\"{\\\", \
RowBox[{\\\"3.029995264609043`\\\", \\\",\\\", \\\"3.346269595796103`\\\"}], \
\\\"}\\\"}], \\\",\\\", RowBox[{\\\"{\\\", \\\"}\\\"}], \\\",\\\", RowBox[{\\\
\"{\\\", \\\"}\\\"}], \\\",\\\", RowBox[{\\\"{\\\", \\\"}\\\"}], \\\",\\\", \
RowBox[{\\\"{\\\", \\\"}\\\"}], \\\",\\\", RowBox[{\\\"{\\\", \\\"}\\\"}]}], \
\\\"}\\\"}], \\\"\[LeftDoubleBracket]\\\", RowBox[{RowBox[{\\\"1\\\", \
\\\";;\\\", \\\"30\\\"}], \\\",\\\", \\\"1\\\"}], \\\"\[RightDoubleBracket]\\\
\"}]}], \\\"}\\\"}]\\) cannot be transposed.\"",2,721,186,
   29188995265012828252,"Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.727447872459957*^9}],

Cell[BoxData[
 TemplateBox[{
  "General","stop",
   "\"Further output of \\!\\(\\*StyleBox[RowBox[{\\\"Transpose\\\", \\\"::\\\
\", \\\"nmtx\\\"}], \\\"MessageName\\\"]\\) will be suppressed during this \
calculation.\"",2,721,187,29188995265012828252,"Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.727447872479287*^9}],

Cell[BoxData[
 GraphicsBox[{{}, GraphicsComplexBox[CompressedData["
1:eJxTTMoPSmViYGBYBsQgGgwOJDlMeFFxeOc8DgcwXyHZQZY1MGnZdCi/Idnh
KVNYWtcEKP9BsoPShfel2Z1QvkOKw0G3R6t8m2DqUxzWBpnJGVfD1Kc4fPX5
81u2BKY+1eHCowVFfLlQ/oFUh5TiuR9Y02D2pzmk2oh3M8XDzEtz4OeVmcUa
ATMvzcFr9Qkh/kCYeekOW5R1ImW8oPwF6Q6+b0K26zlD+QwZDrPeP7F2sYHy
EzIcFluyHIkyhdmf4bBOc+/MEj2Y/ZkOOVWWU3rVYfZnOjDN27XouALM/kwH
+c++dVZSMPuzHNZYP7+5TBhmf5bDf2aPoxy8MPuzHY4GWUvGssHsz3Zol+Od
MOs/O9T+bIeFRa8irv+A8hlyHISXJkd//AjlJ+Q47Mqaf+31K5j6HIe6YLEr
6x5D+Q65DgZRCUY7b0P5C3IdJktsNtG8B1Of5OCkvttZoBYRv7stHpcsLELE
r0vWYyunDET8zp9yOOlrLCJ+1c894dwTjIjfTvs9K6d5IuJ3P7tERbM9Uvwa
6Zo1miLi10JIYnmfNiJ+I1u371msiIjf1UvzHh0VR8RvDW/Ck1e8SPE7Mfm6
MAsifm0ysq7q/YKFV4bD1KuzGJw/wMIrw6F9g+5vh2cw/2c4WLzp6eC5ww6P
37pd8itiL7LD49enmr2q/Dw7PH75u0sXvzkGC98sh7u/eF6l7oOFb5bD+pn7
Pt3bCrM/2+Gcg8vayLUw+7MdlnGVrLyyBBG/rt/nxAfMQcQvt/yPb6cmI+LX
Ucbnjms3In7LNzav39+EiN+w/CY2pypE/L7a4bB+byEifh24gxeviuCBx2/M
nsTjgro8cPmtN2LC9zHwwuXvcR/fcuYJQv6ZR7Ckz1RuuHySdM2ZD3HcRMuj
m49u/2j6G97pb7T+GK0/RvPv0M2/tKo/AHYMzTs=
    
    "], {{{}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, \
{}, {}, {}, {}, {}, {}, {}, {}, 
      {RGBColor[0, 0, 1], Opacity[0.2], LineBox[{1, 71}], LineBox[{2, 72}], 
       LineBox[{3, 73}], LineBox[{4, 74}], LineBox[{5, 75}], LineBox[{6, 76}],
        LineBox[{7, 77}], LineBox[{8, 78}], LineBox[{9, 79}], 
       LineBox[{10, 80}], LineBox[{11, 81}], LineBox[{12, 82}], 
       LineBox[{13, 83}], LineBox[{14, 84}], LineBox[{15, 85}], 
       LineBox[{16, 86}], LineBox[{17, 87}], LineBox[{18, 88}], 
       LineBox[{19, 89}], LineBox[{20, 90}], LineBox[{21, 91}], 
       LineBox[{22, 92}], LineBox[{23, 93}], LineBox[{24, 94}], 
       LineBox[{25, 95}], LineBox[{26, 96}], LineBox[{27, 97}], 
       LineBox[{28, 98}], LineBox[{29, 99}], 
       LineBox[{30, 
        100}]}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, \
{}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, 
      {RGBColor[0, 1, 0], Opacity[0.2], LineBox[{61, 69}], LineBox[{64, 70}]},
       {}, {}, 
      {RGBColor[0, 1, 0], Opacity[0.2], LineBox[{61, 67}], 
       LineBox[{62, 68}]}}, {{}, 
      {RGBColor[0, 0, 1], PointSize[0.011000000000000001`], AbsoluteThickness[
       1.6], PointBox[{101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 
        112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 
        126, 127, 128, 129, 130}]}, {}, 
      {RGBColor[0, 0, 1], PointSize[0.011000000000000001`], Thickness[Tiny], 
       PointBox[{131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 
        143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 
        157, 158, 159, 160}]}, 
      {RGBColor[0, 1, 0], PointSize[0.011000000000000001`], AbsoluteThickness[
       1.6], PointBox[{161, 162}]}, 
      {RGBColor[0, 1, 0], PointSize[0.011000000000000001`], Thickness[Tiny], 
       PointBox[{163, 164}]}, 
      {RGBColor[0, 1, 0], PointSize[0.011000000000000001`], Thickness[Tiny], 
       PointBox[{165, 166}]}, {}}}], {}, {}, {{}, {}}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{148.640625, 2.8957963023135704`},
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  ImagePadding->All,
  ImageSize->{789., Automatic},
  Method->{"CoordinatesToolOptions" -> {"DisplayFunction" -> ({
        (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
         Part[#, 1]], 
        (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
         Part[#, 2]]}& ), "CopiedValueFunction" -> ({
        (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
         Part[#, 1]], 
        (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
         Part[#, 2]]}& )}},
  PlotRange->{{150., 237.}, {2.9305375758768735`, 3.6253630471429354`}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.05], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{{3.726827682824684*^9, 3.726827710033073*^9}, {
   3.726827953267959*^9, 3.726827967577446*^9}, 3.7268280122590513`*^9, 
   3.727415795406273*^9, 3.727422520411862*^9, 3.727430304934416*^9, 
   3.7274391902513742`*^9, 3.72744220805865*^9, 3.727442270501931*^9, {
   3.727442315382674*^9, 3.727442334751712*^9}, {3.7274426184835176`*^9, 
   3.72744262608569*^9}, {3.7274426779528723`*^9, 3.727442708740499*^9}, 
   3.727442740956623*^9, {3.727442820190398*^9, 3.727442852008154*^9}, {
   3.727442914610035*^9, 3.727442958236437*^9}, 3.7274431853147078`*^9, 
   3.727443911634392*^9, 3.727444516823574*^9, 3.727447872489777*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"ListPlot", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{"Transpose", "[", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"Tscanc", "[", 
         RowBox[{"[", 
          RowBox[{";;", "cc1Tmelt"}], "]"}], "]"}], ",", 
        RowBox[{"\[CapitalGamma]fitcc", "[", 
         RowBox[{"[", 
          RowBox[{
           RowBox[{";;", "cc1Tmelt"}], ",", "1"}], "]"}], "]"}]}], "}"}], 
      "]"}], ",", 
     RowBox[{"Transpose", "[", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"Tscanc", "[", 
         RowBox[{"[", 
          RowBox[{";;", "cc1Tmelt"}], "]"}], "]"}], ",", 
        RowBox[{"\[CapitalGamma]fitccl", "[", 
         RowBox[{"[", 
          RowBox[{
           RowBox[{";;", "cc1Tmelt"}], ",", "1"}], "]"}], "]"}]}], "}"}], 
      "]"}], ",", 
     RowBox[{"Transpose", "[", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"Tscanc", "[", 
         RowBox[{"[", 
          RowBox[{";;", "cc1Tmelt"}], "]"}], "]"}], ",", 
        RowBox[{"\[CapitalGamma]fitccu", "[", 
         RowBox[{"[", 
          RowBox[{
           RowBox[{";;", "cc1Tmelt"}], ",", "1"}], "]"}], "]"}]}], "}"}], 
      "]"}], ",", 
     RowBox[{"Transpose", "[", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"Tscanc", "[", 
         RowBox[{"[", 
          RowBox[{";;", "cc2Tmelt"}], "]"}], "]"}], ",", 
        RowBox[{"\[CapitalGamma]fitcc", "[", 
         RowBox[{"[", 
          RowBox[{
           RowBox[{";;", "cc2Tmelt"}], ",", "2"}], "]"}], "]"}]}], "}"}], 
      "]"}], ",", 
     RowBox[{"Transpose", "[", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"Tscanc", "[", 
         RowBox[{"[", 
          RowBox[{";;", "cc2Tmelt"}], "]"}], "]"}], ",", 
        RowBox[{"\[CapitalGamma]fitccl", "[", 
         RowBox[{"[", 
          RowBox[{
           RowBox[{";;", "cc2Tmelt"}], ",", "2"}], "]"}], "]"}]}], "}"}], 
      "]"}], ",", 
     RowBox[{"Transpose", "[", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"Tscanc", "[", 
         RowBox[{"[", 
          RowBox[{";;", "cc2Tmelt"}], "]"}], "]"}], ",", 
        RowBox[{"\[CapitalGamma]fitccu", "[", 
         RowBox[{"[", 
          RowBox[{
           RowBox[{";;", "cc2Tmelt"}], ",", "2"}], "]"}], "]"}]}], "}"}], 
      "]"}]}], "}"}], ",", 
   RowBox[{"PlotRange", "\[Rule]", "All"}], ",", 
   RowBox[{"Filling", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"1", "\[Rule]", 
       RowBox[{"{", "2", "}"}]}], ",", 
      RowBox[{"1", "\[Rule]", 
       RowBox[{"{", "3", "}"}]}], ",", 
      RowBox[{"4", "\[Rule]", 
       RowBox[{"{", "5", "}"}]}], ",", 
      RowBox[{"4", "\[Rule]", 
       RowBox[{"{", "6", "}"}]}]}], "}"}]}], ",", 
   RowBox[{"FillingStyle", "\[Rule]", 
    RowBox[{"Opacity", "[", "0.2", "]"}]}], ",", 
   RowBox[{"PlotStyle", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"Blue", ",", 
      RowBox[{"{", 
       RowBox[{"Blue", ",", "Thin"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"Blue", ",", "Thin"}], "}"}], ",", "Green", ",", 
      RowBox[{"{", 
       RowBox[{"Green", ",", "Thin"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"Green", ",", "Thin"}], "}"}]}], "}"}]}]}], "]"}]], "Input",
 CellChangeTimes->{{3.726828265552346*^9, 3.7268282749523783`*^9}, {
  3.7274423444262047`*^9, 3.727442359750886*^9}, {3.72744299503876*^9, 
  3.727443018750173*^9}, {3.727443051678732*^9, 3.72744306516366*^9}, {
  3.727443174606637*^9, 3.727443174909079*^9}}],

Cell[BoxData[
 GraphicsBox[{{}, GraphicsComplexBox[CompressedData["
1:eJzt1m1MU1cYB/DC3ATb2sKmw1EZEnAocWHoFF+AIxAlvI4RYhxYGC0vtTje
AzLWISM4nEOKQctL3aUdFJAybgu1AkIViKAL6EiByCyIFEGY68A5Ac2W2ePz
QbcP25dlSe+Xm3/Ok/P/8Ls352yISfow1pxCoawwo1D+fD97NDHInB3wrVvo
V17Psj0H7ctfzbPILjbmXA6SbxUtf+F12pjHOaiLllFxvOKMMSMu+pnpH+rd
V4bnuSg3y7ml2UKM57korixTdW8zgedjUZbLTdHseJUxa2LR1+yfIqvzpbg/
DjGvLZCM8Gq8XxyaK/ahvmcnw/vFIRZF4J40VYv3i0f+7bNVmep6YybikeGO
R53gWIMxUxLQ3LkUM05yozFHJ6D0t+cdnDY14f4ExD15MDJkPYn7eWjfnv5X
nKwUuJ+HpoWIFWapxP08pAjP7Zc/wRkdRgPEquGbhmbcfxjp46nbfGZacD8f
nejcvWr9XRXu56PtqUqrLt0F3M9H1FMdJQO31Hg+Eb3q2Mt8MHYRzyeixV9E
m8x1rXg+Ef3IKORvmGnD/UfQXuFSiX6iHfcfQW3ushS3/g6v577a/SfrJpUp
4HsqW7BduZQJvjvHvpxgLgjAN3S/w/zaX/PAd66C6VLTWQC+Cc5KYuL+dfCN
OOo9eGCwCHz7rkZZoxEh+K5k2VPp4tPgK1pku39/rhR8A7NdzqzdLQLfEtJ2
uKiyHHxJSauTmiEGX/WyLbvhKQG+qrDpoBZ6Ffiyv8khIyIl4Jtz53bH8ndS
8I3ati4iY3U1+O7YmhZsw6kB30sc7QpHuQx8Nyq1k+SaOvD92GNyzplfD76j
sjH5kO48+OaN/XYtOVAOvguK0uiPNI3g266zJBxZTeBLt3ltz+PRJvBd6mda
1BIk+FY8tvYvjFaAL8NAdE86K8E30LBF7llfBr5BVLL4fb0YfDmuu9Js7arA
d9rbL2wgSAq+AXfvR1sVVINv6e/WPJceGfh6D5KVn1HrwXevVbhfcmgD+OZn
HFg5RDSCb23lmyc02U3g2yva4bZRSoJviq+2jHFDAb4ZybInjk+V4EvTDjYn
ubaALzmcKixkq8D3+tnbB+2FF8C34JP59OoeNfjqnVLPzjy8CL7tfveOffCo
DXxzFQW3PN0vge/olbk2QUEH+HqI03qJHzrBt8+hlDZfogFf16TPD9l4XQZf
D5qe4zd7GXwDQnz9hqqugG9EzSGVJLwLfD+NeZcSSO8GX8a6RZ/gvm7wrRvI
ozw83gO+NMODEd3OZvB9xzzKs+gtNaxLbCzeyF8uh3WzzVNTna9LYN3QKk2q
03bDevmu9DWPbvT+7fo/3f/F7890fpjOj786P/yjtwTzfbnIdSQ+77x5+Uv5
Rf9xu6uskBEuOlqZlUO3JF7Kz78P0/nz354/pvuj6f833R//v/+v6f5ouj/+
m/vjH9i1Gmc=
    
    "], {{{}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, \
{}, {}, {}, {}, {}, 
      {RGBColor[0, 0, 1], Opacity[0.2], LineBox[{36, 138}]}, 
      {RGBColor[0, 0, 1], Opacity[0.2], LineBox[{1, 131}], LineBox[{2, 132}], 
       LineBox[{3, 133}], LineBox[{4, 134}], LineBox[{5, 135}], 
       LineBox[{7, 141}], LineBox[{8, 142}], LineBox[{9, 143}], 
       LineBox[{10, 144}], LineBox[{11, 145}], LineBox[{12, 146}], 
       LineBox[{13, 147}], LineBox[{14, 148}], LineBox[{15, 149}], 
       LineBox[{16, 150}], LineBox[{17, 151}], LineBox[{18, 152}], 
       LineBox[{19, 153}], LineBox[{20, 154}], LineBox[{21, 155}], 
       LineBox[{22, 156}], LineBox[{23, 157}], LineBox[{24, 158}], 
       LineBox[{25, 159}], LineBox[{26, 160}], LineBox[{27, 161}], 
       LineBox[{28, 162}], LineBox[{29, 163}], LineBox[{30, 164}]}, 
      {RGBColor[0, 0, 1], Opacity[0.2], LineBox[{1, 101}], LineBox[{62, 102}],
        LineBox[{63, 103}], LineBox[{64, 104}], LineBox[{65, 105}], 
       LineBox[{66, 106}], LineBox[{67, 107}], LineBox[{68, 108}], 
       LineBox[{69, 109}], LineBox[{70, 110}], LineBox[{71, 111}], 
       LineBox[{72, 112}], LineBox[{73, 113}], LineBox[{74, 114}], 
       LineBox[{75, 115}], LineBox[{76, 116}], LineBox[{77, 117}], 
       LineBox[{78, 118}], LineBox[{79, 119}], LineBox[{80, 120}], 
       LineBox[{81, 121}], LineBox[{82, 122}], LineBox[{83, 123}], 
       LineBox[{84, 124}], LineBox[{85, 125}], LineBox[{86, 126}], 
       LineBox[{87, 127}], LineBox[{88, 128}], LineBox[{89, 129}], 
       LineBox[{90, 
        130}]}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, \
{}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, 
      {RGBColor[0, 1, 0], Opacity[0.2], LineBox[{91, 99}], 
       LineBox[{92, 100}]}, 
      {RGBColor[0, 1, 0], Opacity[0.2], LineBox[{91, 97}], 
       LineBox[{96, 98}]}}, {{}, 
      {RGBColor[0, 0, 1], PointSize[0.011000000000000001`], AbsoluteThickness[
       1.6], PointBox[{165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 
        176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 
        190, 191, 192, 193, 194}]}, 
      {RGBColor[0, 0, 1], PointSize[0.011000000000000001`], Thickness[Tiny], 
       PointBox[{195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 
        207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 
        221, 222, 223, 224}]}, 
      {RGBColor[0, 0, 1], PointSize[0.011000000000000001`], Thickness[Tiny], 
       PointBox[{225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 
        237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 
        251, 252, 253, 254}]}, 
      {RGBColor[0, 1, 0], PointSize[0.011000000000000001`], AbsoluteThickness[
       1.6], PointBox[{255, 256}]}, 
      {RGBColor[0, 1, 0], PointSize[0.011000000000000001`], Thickness[Tiny], 
       PointBox[{257, 258}]}, 
      {RGBColor[0, 1, 0], PointSize[0.011000000000000001`], Thickness[Tiny], 
       PointBox[{259, 260}]}, {}}}], {}, {}, {{}, {}}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{148.640625, 0},
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  ImagePadding->All,
  ImageSize->{734., Automatic},
  Method->{"CoordinatesToolOptions" -> {"DisplayFunction" -> ({
        (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
         Part[#, 1]], 
        (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
         Part[#, 2]]}& ), "CopiedValueFunction" -> ({
        (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
         Part[#, 1]], 
        (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
         Part[#, 2]]}& )}},
  PlotRange->{{150., 237.}, {0, 0.21810562941238065`}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.02], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{3.726828275639574*^9, 3.727415812953144*^9, 
  3.727422524257615*^9, 3.727442362086732*^9, 3.727443066038776*^9, 
  3.727443175842166*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"ListPlot", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{"Transpose", "[", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"Tscanc", "[", 
         RowBox[{"[", 
          RowBox[{";;", "cc1Tmelt"}], "]"}], "]"}], ",", 
        RowBox[{"areafitcc", "[", 
         RowBox[{"[", 
          RowBox[{
           RowBox[{";;", "cc1Tmelt"}], ",", "1"}], "]"}], "]"}]}], "}"}], 
      "]"}], ",", 
     RowBox[{"Transpose", "[", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"Tscanc", "[", 
         RowBox[{"[", 
          RowBox[{";;", "cc1Tmelt"}], "]"}], "]"}], ",", 
        RowBox[{"areafitccl", "[", 
         RowBox[{"[", 
          RowBox[{
           RowBox[{";;", "cc1Tmelt"}], ",", "1"}], "]"}], "]"}]}], "}"}], 
      "]"}], ",", 
     RowBox[{"Transpose", "[", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"Tscanc", "[", 
         RowBox[{"[", 
          RowBox[{";;", "cc1Tmelt"}], "]"}], "]"}], ",", 
        RowBox[{"areafitccu", "[", 
         RowBox[{"[", 
          RowBox[{
           RowBox[{";;", "cc1Tmelt"}], ",", "1"}], "]"}], "]"}]}], "}"}], 
      "]"}], ",", 
     RowBox[{"Transpose", "[", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"Tscanc", "[", 
         RowBox[{"[", 
          RowBox[{";;", "cc2Tmelt"}], "]"}], "]"}], ",", 
        RowBox[{"areafitcc", "[", 
         RowBox[{"[", 
          RowBox[{
           RowBox[{";;", "cc2Tmelt"}], ",", "2"}], "]"}], "]"}]}], "}"}], 
      "]"}], ",", 
     RowBox[{"Transpose", "[", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"Tscanc", "[", 
         RowBox[{"[", 
          RowBox[{";;", "cc2Tmelt"}], "]"}], "]"}], ",", 
        RowBox[{"areafitccl", "[", 
         RowBox[{"[", 
          RowBox[{
           RowBox[{";;", "cc2Tmelt"}], ",", "2"}], "]"}], "]"}]}], "}"}], 
      "]"}], ",", 
     RowBox[{"Transpose", "[", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"Tscanc", "[", 
         RowBox[{"[", 
          RowBox[{";;", "cc2Tmelt"}], "]"}], "]"}], ",", 
        RowBox[{"areafitccu", "[", 
         RowBox[{"[", 
          RowBox[{
           RowBox[{";;", "cc2Tmelt"}], ",", "2"}], "]"}], "]"}]}], "}"}], 
      "]"}]}], "}"}], ",", 
   RowBox[{"PlotRange", "\[Rule]", "All"}], ",", 
   RowBox[{"Filling", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"1", "\[Rule]", 
       RowBox[{"{", "2", "}"}]}], ",", 
      RowBox[{"1", "\[Rule]", 
       RowBox[{"{", "3", "}"}]}], ",", 
      RowBox[{"4", "\[Rule]", 
       RowBox[{"{", "5", "}"}]}], ",", 
      RowBox[{"4", "\[Rule]", 
       RowBox[{"{", "6", "}"}]}]}], "}"}]}], ",", 
   RowBox[{"FillingStyle", "\[Rule]", 
    RowBox[{"Opacity", "[", "0.2", "]"}]}], ",", 
   RowBox[{"PlotStyle", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"Blue", ",", 
      RowBox[{"{", 
       RowBox[{"Blue", ",", "Thin"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"Blue", ",", "Thin"}], "}"}], ",", "Green", ",", 
      RowBox[{"{", 
       RowBox[{"Green", ",", "Thin"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"Green", ",", "Thin"}], "}"}]}], "}"}]}]}], "]"}]], "Input",
 CellChangeTimes->{{3.726828330441535*^9, 3.7268283346169252`*^9}, {
  3.7274423742663507`*^9, 3.727442381215008*^9}, {3.72744308719235*^9, 
  3.727443113542007*^9}, {3.7274431644143677`*^9, 3.7274431645732822`*^9}}],

Cell[BoxData[
 GraphicsBox[{{}, GraphicsComplexBox[CompressedData["
1:eJzt1l1MU2cYB3AgUMvaMaVCKyjQXUBxZVPq+FLhpXWKGOQIblFwSdcvSil2
TvELNToHsuk2QLdMIFhZGEV007qRJrissAwQjUTC6Pc5pwOnUspwDJEsblP3
8izhaje7GOm5OfnneXKei9978j58mS5PGeD35PH383v2fvqYZYhdPUIxbXTG
sxwjRw7rm+GeL3E+Kkf+nrZjwgqcaTlqylzT0laIM1IgT5TZtitxtl+BRg/d
CBYEz/Yr0Fi5xuAwU7hfifoZpl6NDmezEiV3qc8nRuEco0J3b/V5TTdJ/D0V
+riuuZBRjjOtQqMZpaYD8TijIvQoNE+SY3H9nfVFSCVenvD4PZz91GjdDDm5
NBFnqRqJ2Rf2Z5FOPF+NFhqP3+GfxDmmGE1md3R3JuF8tBgdHMkKMQ478Pxi
1BnL2tFTizPSoHVlrM2tYpz1GpS2Z1/+nw/seH4J8s/l9O/X4ywtQemL7EHx
m3A2l6DQh2UZkb/bcL8W9ebv3KhtwVmqRSrR+pBTBM5mLdo+s/J04EMrnl+K
xsQffrH4MM76UsRoXUIM0LP9MnQveitTttcNvm/9RhBLdrjBVxxVTukz3eBL
KLLTFsS5wddwbmmulu0G3wneo3FTCx/N+t6+dEBGWGjwnZiWrLpyjQbfxZ90
cDY30eAbSX2Vk1BFg693+HpHaykNvlPhU88X5dPgK5J0VXBTafAd2na2uZ83
Ar6nqLvVVYE0+A7KxfdiBynwrb0iXa04R4Fvg/ni/dUaCnxX8Fn5kiQKfGt6
6pcFBVLgy67OrtxymwTfyyuVitpGEnx31QdlPVdCgm9wX/OmlGQSfJ0rtDV3
AkjwLfQuejX1lgt832g6Imj6zAW+dZMfeRbIXeA7tWx64P0EF/i2v9izIXHa
Cb4GdoF6Q9g//29R6B6B8CoFvux9Da+J1lDg+3KcKP5aNwm+FytM3ACCBN8K
ToFw2OaC/1cZwehKUrjANzZ1Z8RGrxN8BeRLP9bsdYJvct/16LI/HOBrtH96
eNUJB/jyBgty3n7BAb5r6/La+s7Ywff1MM4745F28D0TfkK38HMb+B7Ri6o6
BTbwbdy9LZpotYIvc7z3V26EFXxZOdwHYWk28P0lY6xdd98KvqKyV9jCBiv4
Nh8cc0m2WMF3ubGR38Gygq8wXcG82msB32+281K8H1jAN6Tw+GNDrgV8J9JT
BhJ4FvAl2+NUbcND4Nv9M/fkoa+HwFevI9jWyiHwjdTZWgKl34PvT6xuztlK
M9R/mBmtX+u5CfXMd5nJ54/dgHodw7D72+/aob6Vla21Xzb+6/rc78+d7zt/
8/v8zb0/fPvB/NoPfPvf/Pb17X++/c93//5/79//av/7C2++AXQ=
    
    "], {{{}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, \
{}, {}, {}, {}, {}, 
      {RGBColor[0, 0, 1], Opacity[0.2], LineBox[{1, 131}], LineBox[{32, 132}],
        LineBox[{33, 133}], LineBox[{34, 134}], LineBox[{35, 135}], 
       LineBox[{36, 136}], LineBox[{37, 137}], LineBox[{38, 138}], 
       LineBox[{39, 139}], LineBox[{40, 140}], LineBox[{41, 141}], 
       LineBox[{42, 142}], LineBox[{43, 143}], LineBox[{44, 144}], 
       LineBox[{45, 145}], LineBox[{46, 146}], LineBox[{47, 147}], 
       LineBox[{48, 148}], LineBox[{49, 149}], LineBox[{50, 150}], 
       LineBox[{51, 151}], LineBox[{52, 152}], LineBox[{53, 153}], 
       LineBox[{54, 154}], LineBox[{55, 155}], LineBox[{56, 156}], 
       LineBox[{57, 157}], LineBox[{58, 158}], LineBox[{59, 159}], 
       LineBox[{60, 160}]}, {}, {}, 
      {RGBColor[0, 0, 1], Opacity[0.2], LineBox[{1, 101}], LineBox[{2, 102}], 
       LineBox[{3, 103}], LineBox[{4, 104}], LineBox[{5, 105}], 
       LineBox[{6, 106}], LineBox[{7, 107}], LineBox[{8, 108}], 
       LineBox[{9, 109}], LineBox[{10, 110}], LineBox[{11, 111}], 
       LineBox[{12, 112}], LineBox[{13, 113}], LineBox[{14, 114}], 
       LineBox[{15, 115}], LineBox[{16, 116}], LineBox[{17, 117}], 
       LineBox[{18, 118}], LineBox[{19, 119}], LineBox[{20, 120}], 
       LineBox[{21, 121}], LineBox[{22, 122}], LineBox[{23, 123}], 
       LineBox[{24, 124}], LineBox[{25, 125}], LineBox[{26, 126}], 
       LineBox[{27, 127}], LineBox[{28, 128}], LineBox[{29, 129}], 
       LineBox[{30, 
        130}]}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, \
{}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, 
      {RGBColor[0, 1, 0], Opacity[0.2], LineBox[{91, 99}], 
       LineBox[{94, 100}]}, {}, {}, 
      {RGBColor[0, 1, 0], Opacity[0.2], LineBox[{91, 97}], 
       LineBox[{92, 98}]}}, {{}, 
      {RGBColor[0, 0, 1], PointSize[0.011000000000000001`], AbsoluteThickness[
       1.6], PointBox[{161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 
        172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 
        186, 187, 188, 189, 190}]}, 
      {RGBColor[0, 0, 1], PointSize[0.011000000000000001`], Thickness[Tiny], 
       PointBox[{191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 
        203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 
        217, 218, 219, 220}]}, 
      {RGBColor[0, 0, 1], PointSize[0.011000000000000001`], Thickness[Tiny], 
       PointBox[{221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 
        233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 
        247, 248, 249, 250}]}, 
      {RGBColor[0, 1, 0], PointSize[0.011000000000000001`], AbsoluteThickness[
       1.6], PointBox[{251, 252}]}, 
      {RGBColor[0, 1, 0], PointSize[0.011000000000000001`], Thickness[Tiny], 
       PointBox[{253, 254}]}, 
      {RGBColor[0, 1, 0], PointSize[0.011000000000000001`], Thickness[Tiny], 
       PointBox[{255, 256}]}, {}}}], {}, {}, {{}, {}}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{148.640625, 0},
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  ImagePadding->All,
  ImageSize->{735., Automatic},
  Method->{"CoordinatesToolOptions" -> {"DisplayFunction" -> ({
        (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
         Part[#, 1]], 
        (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
         Part[#, 2]]}& ), "CopiedValueFunction" -> ({
        (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
         Part[#, 1]], 
        (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
         Part[#, 2]]}& )}},
  PlotRange->{{150., 237.}, {0, 8.827582805428818}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.02], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{3.726828335118822*^9, 3.727415825901786*^9, 
  3.727422528091501*^9, 3.727431253011342*^9, 3.727442382504026*^9, 
  3.72744312191199*^9, 3.727443165381617*^9}]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Emission Rates", "Subsection",
 CellChangeTimes->{{3.72535868730585*^9, 3.7253587004670477`*^9}}],

Cell[BoxData[{
 RowBox[{
  RowBox[{"Emfactor", "=", "2.356447552594432`"}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"nB", "[", 
    RowBox[{"w_", ",", "T_"}], "]"}], ":=", 
   FractionBox["1", 
    RowBox[{
     RowBox[{"Exp", "[", 
      FractionBox["w", "T"], "]"}], "-", "1"}]]}], ";"}]}], "Input",
 CellChangeTimes->{{3.725358704474215*^9, 3.725358721357132*^9}, {
   3.725361472835392*^9, 3.72536148156748*^9}, {3.725362776143972*^9, 
   3.725362777094586*^9}, {3.726826848079886*^9, 3.726826849759956*^9}, 
   3.727442417530189*^9}],

Cell[BoxData[{
 RowBox[{
  RowBox[{"R0", "=", 
   RowBox[{"ConstantArray", "[", 
    RowBox[{"0", ",", "ccTcut"}], "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Do", "[", 
   RowBox[{
    RowBox[{
     RowBox[{"R0", "[", 
      RowBox[{"[", "ii", "]"}], "]"}], "=", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"Tscanc", "[", 
        RowBox[{"[", "ii", "]"}], "]"}], ",", 
       RowBox[{"Emfactor", " ", 
        RowBox[{
         RowBox[{"(", 
          RowBox[{
           RowBox[{"areafitcc", "[", 
            RowBox[{"[", 
             RowBox[{"ii", ",", "2"}], "]"}], "]"}], 
           RowBox[{"nB", "[", 
            RowBox[{
             RowBox[{"wrfitcc", "[", 
              RowBox[{"[", 
               RowBox[{"ii", ",", "2"}], "]"}], "]"}], ",", 
             RowBox[{
              RowBox[{"Tscanc", "[", 
               RowBox[{"[", "ii", "]"}], "]"}], "/", "1000"}]}], "]"}]}], 
          ")"}], "/", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{"areafitcc", "[", 
            RowBox[{"[", 
             RowBox[{"ii", ",", "1"}], "]"}], "]"}], 
           RowBox[{"nB", "[", 
            RowBox[{
             RowBox[{"wrfitcc", "[", 
              RowBox[{"[", 
               RowBox[{"ii", ",", "1"}], "]"}], "]"}], ",", 
             RowBox[{
              RowBox[{"Tscanc", "[", 
               RowBox[{"[", "ii", "]"}], "]"}], "/", "1000"}]}], "]"}]}], 
          ")"}]}]}]}], "}"}]}], ",", 
    RowBox[{"{", 
     RowBox[{"ii", ",", "ccTcut"}], "}"}]}], "]"}], ";"}]}], "Input",
 CellChangeTimes->{{3.725361225914867*^9, 3.7253613103526297`*^9}, {
  3.725361342615449*^9, 3.725361363368341*^9}, {3.725361486279459*^9, 
  3.7253615682605352`*^9}, {3.725362762652525*^9, 3.72536276293797*^9}, {
  3.725362868989019*^9, 3.725362900512672*^9}, {3.726826853448038*^9, 
  3.726826891448366*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"ListPlot", "[", "R0", "]"}]], "Input",
 CellChangeTimes->{{3.7253628902186813`*^9, 3.7253628905569153`*^9}, {
  3.726826898081106*^9, 3.726826965465569*^9}}],

Cell[BoxData[
 GraphicsBox[{{}, {{}, 
    {RGBColor[0.368417, 0.506779, 0.709798], PointSize[0.012833333333333334`],
      AbsoluteThickness[1.6], 
     PointBox[{{150., 0.030359435567422394`}, {153., 0.0312273922940316}, {
      156., 0.03295479210030339}, {159., 0.03580167451335197}, {162., 
      0.03817375768490001}, {164., 0.039097721456439916`}, {167., 
      0.03881168243663397}, {170., 0.036217782228500334`}, {174., 
      4.537790563593252*^-7}, {177., 0.022724750995103456`}, {180., 
      0.011472855952593352`}, {183., 0.00002344956330151003}, {186., 
      3.927606617795596*^-6}, {189., 1.3973188250738678`*^-6}, {192., 
      4.399916016970468*^-6}, {195., 5.8616401820478*^-6}, {198., 
      7.850848460394808*^-6}}]}, {}}, {}, {}, {{}, {}}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{149.25, 0},
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  ImagePadding->All,
  Method->{"CoordinatesToolOptions" -> {"DisplayFunction" -> ({
        (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
         Part[#, 1]], 
        (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
         Part[#, 2]]}& ), "CopiedValueFunction" -> ({
        (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
         Part[#, 1]], 
        (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
         Part[#, 2]]}& )}},
  PlotRange->{{150., 198.}, {0, 0.039097721456439916`}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.02], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{{3.7253628910240297`*^9, 3.725362902951058*^9}, {
   3.726826895263213*^9, 3.726826923421838*^9}, {3.726826953816105*^9, 
   3.7268269661631727`*^9}, 3.7274312626861897`*^9, 3.72744243883394*^9}]
}, Open  ]]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Bottomonium", "Section",
 CellChangeTimes->{{3.725358472668298*^9, 3.72535848844833*^9}}],

Cell[BoxData[{
 RowBox[{
  RowBox[{"Do", "[", 
   RowBox[{
    RowBox[{
     RowBox[{
      RowBox[{"bbdata", "[", "n", "]"}], "=", 
      RowBox[{"Import", "[", 
       RowBox[{
       "\"\</Users/davidlafferty/Projects/master/spectraldata/swbbT\>\"", "<>", 
        RowBox[{"ToString", "[", "n", "]"}], "<>", "\"\<spectra.dat\>\""}], 
       "]"}]}], ";"}], ",", 
    RowBox[{"{", 
     RowBox[{"n", ",", "7"}], "}"}]}], "]"}], ";"}], "\n", 
 RowBox[{"Manipulate", "[", 
  RowBox[{
   RowBox[{"ListPlot", "[", 
    RowBox[{
     RowBox[{"bbdata", "[", "n", "]"}], ",", 
     RowBox[{"Joined", "\[Rule]", "True"}]}], "]"}], ",", 
   RowBox[{"{", 
    RowBox[{"n", ",", "2", ",", "7", ",", "1"}], "}"}]}], "]"}]}], "Input",
 CellChangeTimes->{{3.7253585482434473`*^9, 3.725358561835896*^9}}],

Cell[CellGroupData[{

Cell["Fitting", "Subsection",
 CellChangeTimes->{{3.725358578419651*^9, 3.725358590341634*^9}}],

Cell[BoxData[{
 RowBox[{
  RowBox[{"bbmodel", "=", 
   RowBox[{"Range", "[", 
    RowBox[{"2", ",", "7"}], "]"}]}], ";"}], "\n", 
 RowBox[{"Do", "[", 
  RowBox[{
   RowBox[{"Module", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{"n", "=", 
        RowBox[{"bbmodel", "[", 
         RowBox[{"[", "ii", "]"}], "]"}]}], ",", "maxx", ",", "minx", ",", 
       "maxy", ",", "maxyx", ",", "maxyi", ",", "maxxy", ",", "inter", ",", 
       "maxxs", ",", "maxxis", ",", "maxys", ",", "mins", ",", "hwhmi", ",", 
       "gammas", ",", "bbdatac"}], "}"}], ",", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"maxx", "=", 
       RowBox[{"Max", "[", 
        RowBox[{
         RowBox[{"bbdata", "[", "n", "]"}], "[", 
         RowBox[{"[", 
          RowBox[{"All", ",", "1"}], "]"}], "]"}], "]"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"minx", "=", 
       RowBox[{"Min", "[", 
        RowBox[{
         RowBox[{"bbdata", "[", "n", "]"}], "[", 
         RowBox[{"[", 
          RowBox[{"All", ",", "1"}], "]"}], "]"}], "]"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"maxy", "=", 
       RowBox[{"Max", "[", 
        RowBox[{
         RowBox[{"bbdata", "[", "n", "]"}], "[", 
         RowBox[{"[", 
          RowBox[{"All", ",", "2"}], "]"}], "]"}], "]"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"maxyx", "=", 
       RowBox[{
        RowBox[{"bbdata", "[", "n", "]"}], "[", 
        RowBox[{"[", 
         RowBox[{
          RowBox[{
           RowBox[{"Position", "[", 
            RowBox[{
             RowBox[{"bbdata", "[", "n", "]"}], ",", 
             RowBox[{"Max", "[", 
              RowBox[{
               RowBox[{"bbdata", "[", "n", "]"}], "[", 
               RowBox[{"[", 
                RowBox[{"All", ",", "2"}], "]"}], "]"}], "]"}]}], "]"}], "[", 
           
           RowBox[{"[", 
            RowBox[{"1", ",", "1"}], "]"}], "]"}], ",", "1"}], "]"}], "]"}]}],
       ";", "\[IndentingNewLine]", 
      RowBox[{"maxyi", "=", 
       RowBox[{
        RowBox[{"Position", "[", 
         RowBox[{
          RowBox[{
           RowBox[{"bbdata", "[", "n", "]"}], "[", 
           RowBox[{"[", 
            RowBox[{"All", ",", "1"}], "]"}], "]"}], ",", "maxyx"}], "]"}], 
        "[", 
        RowBox[{"[", 
         RowBox[{"1", ",", "1"}], "]"}], "]"}]}], ";", "\[IndentingNewLine]", 
      
      RowBox[{"maxxy", "=", 
       RowBox[{
        RowBox[{"bbdata", "[", "n", "]"}], "[", 
        RowBox[{"[", 
         RowBox[{
          RowBox[{
           RowBox[{"Position", "[", 
            RowBox[{
             RowBox[{"bbdata", "[", "n", "]"}], ",", 
             RowBox[{"Max", "[", 
              RowBox[{
               RowBox[{"bbdata", "[", "n", "]"}], "[", 
               RowBox[{"[", 
                RowBox[{"All", ",", "1"}], "]"}], "]"}], "]"}]}], "]"}], "[", 
           
           RowBox[{"[", 
            RowBox[{"1", ",", "1"}], "]"}], "]"}], ",", "2"}], "]"}], "]"}]}],
       ";", "\[IndentingNewLine]", 
      RowBox[{"inter", "=", 
       RowBox[{"Interpolation", "[", 
        RowBox[{
         RowBox[{"bbdata", "[", "n", "]"}], ",", 
         RowBox[{"InterpolationOrder", "\[Rule]", "1"}]}], "]"}]}], ";", "\n", 
      RowBox[{"maxxs", "=", 
       RowBox[{"Sort", "[", 
        RowBox[{"Quiet", "[", 
         RowBox[{
          RowBox[{"DeleteDuplicatesBy", "[", 
           RowBox[{
            RowBox[{"Table", "[", 
             RowBox[{
              RowBox[{"{", 
               RowBox[{
                RowBox[{"Round", "[", 
                 RowBox[{
                  RowBox[{"FindMaxValue", "[", 
                   RowBox[{
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"inter", "[", "x", "]"}], ",", 
                    RowBox[{
                    "maxyx", "\[LessEqual]", "x", "\[LessEqual]", "maxx"}]}], 
                    "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"x", ",", "a"}], "}"}]}], "]"}], ",", "maxxy"}], 
                 "]"}], ",", 
                RowBox[{
                 RowBox[{"FindArgMax", "[", 
                  RowBox[{
                   RowBox[{"{", 
                    RowBox[{
                    RowBox[{"inter", "[", "x", "]"}], ",", 
                    RowBox[{
                    "maxyx", "\[LessEqual]", "x", "\[LessEqual]", "maxx"}]}], 
                    "}"}], ",", 
                   RowBox[{"{", 
                    RowBox[{"x", ",", "a"}], "}"}]}], "]"}], "[", 
                 RowBox[{"[", "1", "]"}], "]"}]}], "}"}], ",", 
              RowBox[{"{", 
               RowBox[{"a", ",", "maxyx", ",", "maxx", ",", 
                FractionBox[
                 RowBox[{"maxx", "-", "maxyx"}], "20"]}], "}"}]}], "]"}], ",",
             "First"}], "]"}], "[", 
          RowBox[{"[", 
           RowBox[{"All", ",", "2"}], "]"}], "]"}], "]"}], "]"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"maxxis", "=", 
       RowBox[{"Sort", "[", 
        RowBox[{"Table", "[", 
         RowBox[{
          RowBox[{
           RowBox[{"Position", "[", 
            RowBox[{
             RowBox[{
              RowBox[{"bbdata", "[", "n", "]"}], "[", 
              RowBox[{"[", 
               RowBox[{"All", ",", "1"}], "]"}], "]"}], ",", 
             RowBox[{
              RowBox[{"Nearest", "[", 
               RowBox[{
                RowBox[{
                 RowBox[{"bbdata", "[", "n", "]"}], "[", 
                 RowBox[{"[", 
                  RowBox[{"All", ",", "1"}], "]"}], "]"}], ",", 
                RowBox[{"maxxs", "[", 
                 RowBox[{"[", "i", "]"}], "]"}]}], "]"}], "[", 
              RowBox[{"[", "1", "]"}], "]"}]}], "]"}], "[", 
           RowBox[{"[", 
            RowBox[{"1", ",", "1"}], "]"}], "]"}], ",", 
          RowBox[{"{", 
           RowBox[{"i", ",", 
            RowBox[{"Length", "[", "maxxs", "]"}]}], "}"}]}], "]"}], "]"}]}], 
      ";", "\[IndentingNewLine]", 
      RowBox[{"maxys", "=", 
       RowBox[{"Table", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"bbdata", "[", "n", "]"}], "[", 
          RowBox[{"[", 
           RowBox[{
            RowBox[{"maxxis", "[", 
             RowBox[{"[", "i", "]"}], "]"}], ",", "2"}], "]"}], "]"}], ",", 
         RowBox[{"{", 
          RowBox[{"i", ",", 
           RowBox[{"Length", "[", "maxxs", "]"}]}], "}"}]}], "]"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"If", "[", 
       RowBox[{
        RowBox[{
         RowBox[{"Length", "[", "maxxs", "]"}], ">", "1"}], ",", 
        "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{"mins", "=", 
          RowBox[{"Range", "[", 
           RowBox[{
            RowBox[{"Length", "[", "maxxs", "]"}], "-", "1"}], "]"}]}], ";", 
         "\[IndentingNewLine]", 
         RowBox[{"Do", "[", 
          RowBox[{
           RowBox[{
            RowBox[{"mins", "[", 
             RowBox[{"[", "i", "]"}], "]"}], "=", 
            RowBox[{
             RowBox[{"Position", "[", 
              RowBox[{
               RowBox[{
                RowBox[{"bbdata", "[", "n", "]"}], "[", 
                RowBox[{"[", 
                 RowBox[{"All", ",", "2"}], "]"}], "]"}], ",", 
               RowBox[{"Min", "[", 
                RowBox[{
                 RowBox[{"bbdata", "[", "n", "]"}], "[", 
                 RowBox[{"[", 
                  RowBox[{
                   RowBox[{
                    RowBox[{"maxxis", "[", 
                    RowBox[{"[", "i", "]"}], "]"}], ";;", 
                    RowBox[{"maxxis", "[", 
                    RowBox[{"[", 
                    RowBox[{"i", "+", "1"}], "]"}], "]"}]}], ",", "2"}], 
                  "]"}], "]"}], "]"}]}], "]"}], "[", 
             RowBox[{"[", 
              RowBox[{"1", ",", "1"}], "]"}], "]"}]}], ",", 
           RowBox[{"{", 
            RowBox[{"i", ",", 
             RowBox[{
              RowBox[{"Length", "[", "maxxs", "]"}], "-", "1"}]}], "}"}]}], 
          "]"}], ";", "\[IndentingNewLine]", 
         RowBox[{"mins", "=", 
          RowBox[{"Append", "[", 
           RowBox[{
            RowBox[{"Prepend", "[", 
             RowBox[{"mins", ",", 
              RowBox[{
               RowBox[{"maxxis", "[", 
                RowBox[{"[", "1", "]"}], "]"}], "-", 
               RowBox[{"2", " ", 
                RowBox[{"(", 
                 RowBox[{
                  RowBox[{"mins", "[", 
                   RowBox[{"[", "1", "]"}], "]"}], "-", 
                  RowBox[{"maxxis", "[", 
                   RowBox[{"[", "1", "]"}], "]"}]}], ")"}]}]}]}], "]"}], ",", 
            
            RowBox[{
             RowBox[{"maxxis", "[", 
              RowBox[{"[", 
               RowBox[{"-", "1"}], "]"}], "]"}], "+", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{"maxxis", "[", 
                RowBox[{"[", 
                 RowBox[{"-", "1"}], "]"}], "]"}], "-", 
               RowBox[{"mins", "[", 
                RowBox[{"[", 
                 RowBox[{"-", "1"}], "]"}], "]"}]}], ")"}]}]}], "]"}]}], 
         ";"}], ",", "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{"hwhmi", "=", 
          RowBox[{
           RowBox[{"Position", "[", 
            RowBox[{
             RowBox[{"bbdata", "[", "n", "]"}], ",", 
             RowBox[{
              RowBox[{"Nearest", "[", 
               RowBox[{
                RowBox[{
                 RowBox[{"bbdata", "[", "n", "]"}], "[", 
                 RowBox[{"[", 
                  RowBox[{
                   RowBox[{";;", "maxyi"}], ",", "2"}], "]"}], "]"}], ",", 
                RowBox[{"maxy", "/", "2"}]}], "]"}], "[", 
              RowBox[{"[", "1", "]"}], "]"}]}], "]"}], "[", 
           RowBox[{"[", 
            RowBox[{"1", ",", "1"}], "]"}], "]"}]}], ";", 
         "\[IndentingNewLine]", 
         RowBox[{"mins", "=", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"maxyi", "-", 
             RowBox[{"3", 
              RowBox[{"(", 
               RowBox[{"maxyi", "-", "hwhmi"}], ")"}]}]}], ",", 
            RowBox[{"maxyi", "+", 
             RowBox[{"3", 
              RowBox[{"(", 
               RowBox[{"maxyi", "-", "hwhmi"}], ")"}]}]}]}], "}"}]}], ";"}]}],
        "]"}], ";", "\n", 
      RowBox[{"hwhmi", "=", 
       RowBox[{"Range", "[", 
        RowBox[{"Length", "[", "maxxs", "]"}], "]"}]}], ";", "\n", 
      RowBox[{"Do", "[", 
       RowBox[{
        RowBox[{
         RowBox[{"hwhmi", "[", 
          RowBox[{"[", "i", "]"}], "]"}], "=", 
         RowBox[{
          RowBox[{"Position", "[", 
           RowBox[{
            RowBox[{"bbdata", "[", "n", "]"}], ",", 
            RowBox[{
             RowBox[{"Nearest", "[", 
              RowBox[{
               RowBox[{
                RowBox[{"bbdata", "[", "n", "]"}], "[", 
                RowBox[{"[", 
                 RowBox[{
                  RowBox[{
                   RowBox[{"mins", "[", 
                    RowBox[{"[", "i", "]"}], "]"}], ";;", 
                   RowBox[{"maxxis", "[", 
                    RowBox[{"[", "i", "]"}], "]"}]}], ",", "2"}], "]"}], 
                "]"}], ",", 
               RowBox[{
                RowBox[{"inter", "[", 
                 RowBox[{"maxxs", "[", 
                  RowBox[{"[", "i", "]"}], "]"}], "]"}], "/", "2"}]}], "]"}], 
             "[", 
             RowBox[{"[", "1", "]"}], "]"}]}], "]"}], "[", 
          RowBox[{"[", 
           RowBox[{"1", ",", "1"}], "]"}], "]"}]}], ",", 
        RowBox[{"{", 
         RowBox[{"i", ",", 
          RowBox[{"Length", "[", "maxxs", "]"}]}], "}"}]}], "]"}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"Do", "[", 
       RowBox[{
        RowBox[{"If", "[", 
         RowBox[{
          RowBox[{"Or", "[", 
           RowBox[{
            RowBox[{
             RowBox[{"2", " ", 
              RowBox[{
               RowBox[{"bbdata", "[", "n", "]"}], "[", 
               RowBox[{"[", 
                RowBox[{
                 RowBox[{"hwhmi", "[", 
                  RowBox[{"[", 
                   RowBox[{"-", "i"}], "]"}], "]"}], ",", "2"}], "]"}], 
               "]"}]}], "\[LessEqual]", 
             RowBox[{"0.5", " ", 
              RowBox[{"maxys", "[", 
               RowBox[{"[", 
                RowBox[{"-", "i"}], "]"}], "]"}]}]}], ",", 
            RowBox[{
             RowBox[{"2", " ", 
              RowBox[{
               RowBox[{"bbdata", "[", "n", "]"}], "[", 
               RowBox[{"[", 
                RowBox[{
                 RowBox[{"hwhmi", "[", 
                  RowBox[{"[", 
                   RowBox[{"-", "i"}], "]"}], "]"}], ",", "2"}], "]"}], 
               "]"}]}], "\[GreaterEqual]", 
             RowBox[{"1.5", " ", 
              RowBox[{"maxys", "[", 
               RowBox[{"[", 
                RowBox[{"-", "i"}], "]"}], "]"}]}]}]}], "]"}], ",", 
          RowBox[{
           RowBox[{"hwhmi", "[", 
            RowBox[{"[", 
             RowBox[{"-", "i"}], "]"}], "]"}], "=", 
           RowBox[{"maxxis", "[", 
            RowBox[{"[", 
             RowBox[{"-", "i"}], "]"}], "]"}]}]}], "]"}], ",", 
        RowBox[{"{", 
         RowBox[{"i", ",", 
          RowBox[{
           RowBox[{"Length", "[", "hwhmi", "]"}], "-", "1"}]}], "}"}]}], 
       "]"}], ";", "\[IndentingNewLine]", 
      RowBox[{"hwhmi", "=", 
       RowBox[{"DeleteCases", "[", 
        RowBox[{
         RowBox[{"maxxis", "-", "hwhmi"}], ",", "0"}], "]"}]}], ";", "\n", 
      RowBox[{"gammas", "=", 
       RowBox[{"Range", "[", 
        RowBox[{"Length", "[", "hwhmi", "]"}], "]"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"Do", "[", 
       RowBox[{
        RowBox[{
         RowBox[{"gammas", "[", 
          RowBox[{"[", "i", "]"}], "]"}], "=", 
         RowBox[{"2", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"maxxs", "[", 
             RowBox[{"[", "i", "]"}], "]"}], "-", 
            RowBox[{
             RowBox[{"bbdata", "[", "n", "]"}], "[", 
             RowBox[{"[", 
              RowBox[{
               RowBox[{
                RowBox[{"maxxis", "[", 
                 RowBox[{"[", "i", "]"}], "]"}], "-", 
                RowBox[{"hwhmi", "[", 
                 RowBox[{"[", "i", "]"}], "]"}]}], ",", "1"}], "]"}], "]"}]}],
            ")"}]}]}], ",", 
        RowBox[{"{", 
         RowBox[{"i", ",", 
          RowBox[{"Length", "[", "hwhmi", "]"}]}], "}"}]}], "]"}], ";", "\n", 
      
      RowBox[{"bbdatac", "=", 
       RowBox[{"Range", "[", 
        RowBox[{"Length", "[", "maxxs", "]"}], "]"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"Do", "[", 
       RowBox[{
        RowBox[{
         RowBox[{"bbdatac", "[", 
          RowBox[{"[", "i", "]"}], "]"}], "=", 
         RowBox[{
          RowBox[{"bbdata", "[", "n", "]"}], "[", 
          RowBox[{"[", 
           RowBox[{
            RowBox[{"mins", "[", 
             RowBox[{"[", "i", "]"}], "]"}], ";;", 
            RowBox[{"mins", "[", 
             RowBox[{"[", 
              RowBox[{"i", "+", "1"}], "]"}], "]"}]}], "]"}], "]"}]}], ",", 
        RowBox[{"{", 
         RowBox[{"i", ",", 
          RowBox[{"Length", "[", "maxxs", "]"}]}], "}"}]}], "]"}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"bbmodel", "[", 
        RowBox[{"[", "ii", "]"}], "]"}], "=", 
       RowBox[{"Range", "[", 
        RowBox[{"Length", "[", "hwhmi", "]"}], "]"}]}], ";", 
      RowBox[{"Do", "[", 
       RowBox[{
        RowBox[{
         RowBox[{"bbmodel", "[", 
          RowBox[{"[", 
           RowBox[{"ii", ",", "i"}], "]"}], "]"}], "=", 
         RowBox[{"NonlinearModelFit", "[", 
          RowBox[{
           RowBox[{"bbdatac", "[", 
            RowBox[{"[", "i", "]"}], "]"}], ",", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{"BW", "[", 
              RowBox[{
              "w", ",", "wr", ",", "\[CapitalGamma]", ",", "\[Delta]bg", ",", 
               "const", ",", "shift", ",", "shift2"}], "]"}], ",", 
             RowBox[{"const", ">", "0"}], ",", 
             RowBox[{"\[CapitalGamma]", ">", "0"}]}], "}"}], ",", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{"{", 
              RowBox[{"wr", ",", 
               RowBox[{"maxxs", "[", 
                RowBox[{"[", "i", "]"}], "]"}]}], "}"}], ",", 
             RowBox[{"{", 
              RowBox[{"\[CapitalGamma]", ",", 
               RowBox[{"gammas", "[", 
                RowBox[{"[", "i", "]"}], "]"}]}], "}"}], ",", 
             RowBox[{"{", 
              RowBox[{"const", ",", 
               RowBox[{"maxys", "[", 
                RowBox[{"[", "i", "]"}], "]"}]}], "}"}], ",", 
             RowBox[{"{", 
              RowBox[{"\[Delta]bg", ",", "0.0"}], "}"}], ",", 
             RowBox[{"{", 
              RowBox[{"shift", ",", "0.0"}], "}"}], ",", 
             RowBox[{"{", 
              RowBox[{"shift2", ",", "0.0"}], "}"}]}], "}"}], ",", "w"}], 
          "]"}]}], ",", 
        RowBox[{"{", 
         RowBox[{"i", ",", 
          RowBox[{"Length", "[", "hwhmi", "]"}]}], "}"}]}], "]"}], ";"}]}], 
    "]"}], ",", 
   RowBox[{"{", 
    RowBox[{"ii", ",", 
     RowBox[{"Length", "[", "bbmodel", "]"}]}], "}"}]}], "]"}]}], "Input",
 CellChangeTimes->{{3.725020788434743*^9, 3.7250207889305277`*^9}, 
   3.7251870199591017`*^9, {3.725188367199911*^9, 3.725188394220587*^9}, 
   3.725189751985444*^9, {3.725190053886017*^9, 3.7251900704637938`*^9}, {
   3.725275651522296*^9, 3.725275656764453*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell["Results", "Subsection",
 CellChangeTimes->{{3.725358615447584*^9, 3.7253586227029257`*^9}}],

Cell[BoxData[{
 RowBox[{
  RowBox[{"wrfitbb", "=", 
   RowBox[{"Range", "[", 
    RowBox[{"Length", "[", "bbmodel", "]"}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Do", "[", 
   RowBox[{
    RowBox[{
     RowBox[{"wrfitbb", "[", 
      RowBox[{"[", "i", "]"}], "]"}], "=", 
     RowBox[{"Range", "[", 
      RowBox[{"Length", "[", 
       RowBox[{"bbmodel", "[", 
        RowBox[{"[", "i", "]"}], "]"}], "]"}], "]"}]}], ",", 
    RowBox[{"{", 
     RowBox[{"i", ",", 
      RowBox[{"Length", "[", "bbmodel", "]"}]}], "}"}]}], "]"}], ";"}], "\n", 

 RowBox[{
  RowBox[{"Do", "[", 
   RowBox[{
    RowBox[{"Do", "[", 
     RowBox[{
      RowBox[{
       RowBox[{"wrfitbb", "[", 
        RowBox[{"[", 
         RowBox[{"i", ",", "ii"}], "]"}], "]"}], "=", 
       RowBox[{"wr", "/.", 
        RowBox[{
         RowBox[{"bbmodel", "[", 
          RowBox[{"[", 
           RowBox[{"i", ",", "ii"}], "]"}], "]"}], "[", 
         "\"\<BestFitParameters\>\"", "]"}]}]}], ",", 
      RowBox[{"{", 
       RowBox[{"ii", ",", 
        RowBox[{"Length", "[", 
         RowBox[{"wrfitbb", "[", 
          RowBox[{"[", "i", "]"}], "]"}], "]"}]}], "}"}]}], "]"}], ",", 
    RowBox[{"{", 
     RowBox[{"i", ",", 
      RowBox[{"Length", "[", "wrfitbb", "]"}]}], "}"}]}], "]"}], 
  "\n"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"\[CapitalGamma]fitbb", "=", 
   RowBox[{"Range", "[", 
    RowBox[{"Length", "[", "bbmodel", "]"}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Do", "[", 
   RowBox[{
    RowBox[{
     RowBox[{"\[CapitalGamma]fitbb", "[", 
      RowBox[{"[", "i", "]"}], "]"}], "=", 
     RowBox[{"Range", "[", 
      RowBox[{"Length", "[", 
       RowBox[{"bbmodel", "[", 
        RowBox[{"[", "i", "]"}], "]"}], "]"}], "]"}]}], ",", 
    RowBox[{"{", 
     RowBox[{"i", ",", 
      RowBox[{"Length", "[", "bbmodel", "]"}]}], "}"}]}], "]"}], ";"}], "\n", 

 RowBox[{
  RowBox[{"Do", "[", 
   RowBox[{
    RowBox[{"Do", "[", 
     RowBox[{
      RowBox[{
       RowBox[{"\[CapitalGamma]fitbb", "[", 
        RowBox[{"[", 
         RowBox[{"i", ",", "ii"}], "]"}], "]"}], "=", 
       RowBox[{"\[CapitalGamma]", "/.", 
        RowBox[{
         RowBox[{"bbmodel", "[", 
          RowBox[{"[", 
           RowBox[{"i", ",", "ii"}], "]"}], "]"}], "[", 
         "\"\<BestFitParameters\>\"", "]"}]}]}], ",", 
      RowBox[{"{", 
       RowBox[{"ii", ",", 
        RowBox[{"Length", "[", 
         RowBox[{"\[CapitalGamma]fitbb", "[", 
          RowBox[{"[", "i", "]"}], "]"}], "]"}]}], "}"}]}], "]"}], ",", 
    RowBox[{"{", 
     RowBox[{"i", ",", 
      RowBox[{"Length", "[", "\[CapitalGamma]fitbb", "]"}]}], "}"}]}], "]"}], 
  "\n"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"constfitbb", "=", 
   RowBox[{"Range", "[", 
    RowBox[{"Length", "[", "bbmodel", "]"}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Do", "[", 
   RowBox[{
    RowBox[{
     RowBox[{"constfitbb", "[", 
      RowBox[{"[", "i", "]"}], "]"}], "=", 
     RowBox[{"Range", "[", 
      RowBox[{"Length", "[", 
       RowBox[{"bbmodel", "[", 
        RowBox[{"[", "i", "]"}], "]"}], "]"}], "]"}]}], ",", 
    RowBox[{"{", 
     RowBox[{"i", ",", 
      RowBox[{"Length", "[", "bbmodel", "]"}]}], "}"}]}], "]"}], ";"}], "\n", 

 RowBox[{
  RowBox[{"Do", "[", 
   RowBox[{
    RowBox[{"Do", "[", 
     RowBox[{
      RowBox[{
       RowBox[{"constfitbb", "[", 
        RowBox[{"[", 
         RowBox[{"i", ",", "ii"}], "]"}], "]"}], "=", 
       RowBox[{"const", "/.", 
        RowBox[{
         RowBox[{"bbmodel", "[", 
          RowBox[{"[", 
           RowBox[{"i", ",", "ii"}], "]"}], "]"}], "[", 
         "\"\<BestFitParameters\>\"", "]"}]}]}], ",", 
      RowBox[{"{", 
       RowBox[{"ii", ",", 
        RowBox[{"Length", "[", 
         RowBox[{"constfitbb", "[", 
          RowBox[{"[", "i", "]"}], "]"}], "]"}]}], "}"}]}], "]"}], ",", 
    RowBox[{"{", 
     RowBox[{"i", ",", 
      RowBox[{"Length", "[", "constfitbb", "]"}]}], "}"}]}], "]"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"areafitbb", "=", 
   RowBox[{"Range", "[", 
    RowBox[{"Length", "[", "bbmodel", "]"}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Do", "[", 
   RowBox[{
    RowBox[{
     RowBox[{"areafitbb", "[", 
      RowBox[{"[", "i", "]"}], "]"}], "=", 
     RowBox[{"Range", "[", 
      RowBox[{"Length", "[", 
       RowBox[{"bbmodel", "[", 
        RowBox[{"[", "i", "]"}], "]"}], "]"}], "]"}]}], ",", 
    RowBox[{"{", 
     RowBox[{"i", ",", 
      RowBox[{"Length", "[", "bbmodel", "]"}]}], "}"}]}], "]"}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{"Do", "[", 
  RowBox[{
   RowBox[{"Do", "[", 
    RowBox[{
     RowBox[{
      RowBox[{"areafitbb", "[", 
       RowBox[{"[", 
        RowBox[{"i", ",", "ii"}], "]"}], "]"}], "=", 
      RowBox[{
       FractionBox["\[Pi]", "2"], " ", 
       RowBox[{"constfitbb", "[", 
        RowBox[{"[", 
         RowBox[{"i", ",", "ii"}], "]"}], "]"}], " ", 
       RowBox[{"\[CapitalGamma]fitbb", "[", 
        RowBox[{"[", 
         RowBox[{"i", ",", "ii"}], "]"}], "]"}]}]}], ",", 
     RowBox[{"{", 
      RowBox[{"ii", ",", 
       RowBox[{"Length", "[", 
        RowBox[{"areafitbb", "[", 
         RowBox[{"[", "i", "]"}], "]"}], "]"}]}], "}"}]}], "]"}], ",", 
   RowBox[{"{", 
    RowBox[{"i", ",", 
     RowBox[{"Length", "[", "areafitbb", "]"}]}], "}"}]}], "]"}]}], "Input",
 CellChangeTimes->{{3.7251730891229553`*^9, 3.725173094983835*^9}, {
   3.725173272655423*^9, 3.7251732805514793`*^9}, {3.725173350795*^9, 
   3.725173413425877*^9}, {3.725173467793077*^9, 3.725173470814598*^9}, 
   3.7251735935001373`*^9, {3.725173783270134*^9, 3.72517379187675*^9}, {
   3.725173880379524*^9, 3.725173882198493*^9}, {3.7251790832679157`*^9, 
   3.725179085029264*^9}, 3.725358627911529*^9, {3.725358884543461*^9, 
   3.725358927033409*^9}}],

Cell[BoxData[
 RowBox[{"Manipulate", "[", 
  RowBox[{
   RowBox[{"Show", "[", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"ListPlot", "[", 
       RowBox[{
        RowBox[{"bbdata", "[", 
         RowBox[{"i", "+", "1"}], "]"}], ",", 
        RowBox[{"Joined", "\[Rule]", "True"}]}], "]"}], ",", 
      RowBox[{"Plot", "[", 
       RowBox[{
        RowBox[{
         RowBox[{"bbmodel", "[", 
          RowBox[{"[", 
           RowBox[{"i", ",", "ii"}], "]"}], "]"}], "[", "x", "]"}], ",", 
        RowBox[{"{", 
         RowBox[{"x", ",", 
          RowBox[{
           RowBox[{"0.7", " ", "wr"}], "/.", 
           RowBox[{
            RowBox[{"bbmodel", "[", 
             RowBox[{"[", 
              RowBox[{"i", ",", "ii"}], "]"}], "]"}], "[", 
            "\"\<BestFitParameters\>\"", "]"}]}], ",", 
          RowBox[{
           RowBox[{"1.3", " ", "wr"}], "/.", 
           RowBox[{
            RowBox[{"bbmodel", "[", 
             RowBox[{"[", 
              RowBox[{"i", ",", "ii"}], "]"}], "]"}], "[", 
            "\"\<BestFitParameters\>\"", "]"}]}]}], "}"}], ",", 
        RowBox[{"PlotStyle", "\[Rule]", 
         RowBox[{"{", 
          RowBox[{"Red", ",", "Dashed"}], "}"}]}], ",", 
        RowBox[{"PlotRange", "\[Rule]", "All"}]}], "]"}], ",", 
      RowBox[{"Plot", "[", 
       RowBox[{
        RowBox[{"BWi", "[", 
         RowBox[{"x", ",", 
          RowBox[{"wr", "/.", 
           RowBox[{
            RowBox[{"bbmodel", "[", 
             RowBox[{"[", 
              RowBox[{"i", ",", "ii"}], "]"}], "]"}], "[", 
            "\"\<BestFitParameters\>\"", "]"}]}], ",", 
          RowBox[{"\[CapitalGamma]", "/.", 
           RowBox[{
            RowBox[{"bbmodel", "[", 
             RowBox[{"[", 
              RowBox[{"i", ",", "ii"}], "]"}], "]"}], "[", 
            "\"\<BestFitParameters\>\"", "]"}]}], ",", 
          RowBox[{"const", "/.", 
           RowBox[{
            RowBox[{"bbmodel", "[", 
             RowBox[{"[", 
              RowBox[{"i", ",", "ii"}], "]"}], "]"}], "[", 
            "\"\<BestFitParameters\>\"", "]"}]}]}], "]"}], ",", 
        RowBox[{"{", 
         RowBox[{"x", ",", 
          RowBox[{
           RowBox[{"0.7", " ", "wr"}], "/.", 
           RowBox[{
            RowBox[{"bbmodel", "[", 
             RowBox[{"[", 
              RowBox[{"i", ",", "ii"}], "]"}], "]"}], "[", 
            "\"\<BestFitParameters\>\"", "]"}]}], ",", 
          RowBox[{
           RowBox[{"1.3", " ", "wr"}], "/.", 
           RowBox[{
            RowBox[{"bbmodel", "[", 
             RowBox[{"[", 
              RowBox[{"i", ",", "ii"}], "]"}], "]"}], "[", 
            "\"\<BestFitParameters\>\"", "]"}]}]}], "}"}], ",", 
        RowBox[{"PlotStyle", "\[Rule]", 
         RowBox[{"{", 
          RowBox[{"Green", ",", "Dashed"}], "}"}]}], ",", 
        RowBox[{"PlotRange", "\[Rule]", "All"}]}], "]"}]}], "}"}], "]"}], ",", 
   RowBox[{"{", 
    RowBox[{"i", ",", "1", ",", 
     RowBox[{"Length", "[", "bbmodel", "]"}], ",", "1"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"ii", ",", "1", ",", 
     RowBox[{"Length", "[", 
      RowBox[{"bbmodel", "[", 
       RowBox[{"[", "1", "]"}], "]"}], "]"}], ",", "1"}], "}"}]}], 
  "]"}]], "Input",
 CellChangeTimes->{{3.7251827518992577`*^9, 3.725182753516506*^9}, {
  3.725188542604348*^9, 3.7251886388289223`*^9}}]
}, Open  ]]
}, Open  ]]
},
WindowSize->{1920, 1019},
WindowMargins->{{0, Automatic}, {0, Automatic}},
FrontEndVersion->"11.0 for Linux x86 (64-bit) (September 21, 2016)",
StyleDefinitions->"Default.nb"
]
(* End of Notebook Content *)

(* Internal cache information *)
(*CellTagsOutline
CellTagsIndex->{}
*)
(*CellTagsIndex
CellTagsIndex->{}
*)
(*NotebookFileOutline
Notebook[{
Cell[558, 20, 422, 14, 34, "Input"],
Cell[983, 36, 167, 4, 34, "Input"],
Cell[CellGroupData[{
Cell[1175, 44, 144, 2, 65, "Section"],
Cell[1322, 48, 2412, 77, 143, "Input"]
}, Open  ]],
Cell[CellGroupData[{
Cell[3771, 130, 95, 1, 65, "Section"],
Cell[CellGroupData[{
Cell[3891, 135, 99, 1, 45, "Subsection"],
Cell[CellGroupData[{
Cell[4015, 140, 336, 9, 34, "Input"],
Cell[4354, 151, 550, 9, 34, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[4941, 165, 1302, 32, 57, "Input"],
Cell[6246, 199, 1680, 35, 324, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[7963, 239, 940, 27, 57, "Input"],
Cell[8906, 268, 1632, 33, 324, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[10575, 306, 942, 27, 57, "Input"],
Cell[11520, 335, 1629, 33, 346, "Output"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[13198, 374, 97, 1, 45, "Subsection"],
Cell[13298, 377, 28717, 704, 1059, "Input"],
Cell[42018, 1083, 416, 9, 57, "Input"],
Cell[42437, 1094, 133, 2, 32, "Input"],
Cell[42573, 1098, 304, 6, 34, "Input"],
Cell[CellGroupData[{
Cell[42902, 1108, 150, 3, 32, "Input"],
Cell[43055, 1113, 86018, 1452, 69, "Output"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[129122, 2571, 154, 2, 44, "Subsection"],
Cell[129279, 2575, 3173, 82, 149, "Input"],
Cell[CellGroupData[{
Cell[132477, 2661, 98, 1, 32, "Input"],
Cell[132578, 2664, 117, 2, 32, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[132732, 2671, 97, 1, 32, "Input"],
Cell[132832, 2674, 121, 2, 32, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[132990, 2681, 99, 1, 32, "Input"],
Cell[133092, 2684, 140, 2, 32, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[133269, 2691, 161, 2, 32, "Input"],
Cell[133433, 2695, 3183, 84, 113, "Output"]
}, Open  ]],
Cell[136631, 2782, 17334, 526, 1128, "Input"],
Cell[153968, 3310, 3882, 96, 125, "Input"],
Cell[157853, 3408, 1258, 24, 103, InheritFromParent],
Cell[CellGroupData[{
Cell[159136, 3436, 207, 4, 32, "Input"],
Cell[159346, 3442, 2945, 69, 80, "Output"]
}, Open  ]],
Cell[162306, 3514, 1222, 36, 57, "Input"],
Cell[CellGroupData[{
Cell[163553, 3554, 3605, 102, 80, "Input"],
Cell[167161, 3658, 280, 6, 23, "Message"],
Cell[167444, 3666, 3559, 55, 77, "Message"],
Cell[171006, 3723, 3218, 50, 94, "Message"],
Cell[174227, 3775, 3495, 54, 77, "Message"],
Cell[177725, 3831, 344, 7, 23, "Message"],
Cell[178072, 3840, 4890, 90, 505, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[182999, 3935, 3438, 99, 80, "Input"],
Cell[186440, 4036, 5926, 108, 461, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[192403, 4149, 3328, 98, 80, "Input"],
Cell[195734, 4249, 5835, 106, 471, "Output"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[201618, 4361, 103, 1, 44, "Subsection"],
Cell[201724, 4364, 564, 15, 86, "Input"],
Cell[202291, 4381, 1851, 51, 57, "Input"],
Cell[CellGroupData[{
Cell[204167, 4436, 181, 3, 32, "Input"],
Cell[204351, 4441, 2116, 44, 234, "Output"]
}, Open  ]]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[206528, 4492, 95, 1, 65, "Section"],
Cell[206626, 4495, 791, 22, 57, "Input"],
Cell[CellGroupData[{
Cell[207442, 4521, 95, 1, 45, "Subsection"],
Cell[207540, 4524, 17450, 468, 715, "Input"]
}, Open  ]],
Cell[CellGroupData[{
Cell[225027, 4997, 97, 1, 44, "Subsection"],
Cell[225127, 5000, 5864, 179, 368, "Input"],
Cell[230994, 5181, 3315, 89, 125, "Input"]
}, Open  ]]
}, Open  ]]
}
]
*)

