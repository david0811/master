(* Content-type: application/vnd.wolfram.mathematica *)

(*** Wolfram Notebook File ***)
(* http://www.wolfram.com/nb *)

(* CreatedBy='Mathematica 11.0' *)

(*CacheID: 234*)
(* Internal cache information:
NotebookFileLineBreakTest
NotebookFileLineBreakTest
NotebookDataPosition[       158,          7]
NotebookDataLength[    190320,       4517]
NotebookOptionsPosition[    186240,       4379]
NotebookOutlinePosition[    186579,       4394]
CellTagsIndexPosition[    186536,       4391]
WindowFrame->Normal*)

(* Beginning of Notebook Content *)
Notebook[{
Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"\[Alpha]cont", "=", 
    RowBox[{"{", 
     RowBox[{"0.5137193759431391`", ",", "0.0024666827878353577`"}], "}"}]}], 
   ";"}], " "}], "\n", 
 RowBox[{
  RowBox[{"\[Sigma]cont", "=", 
   RowBox[{"{", 
    RowBox[{"0.16955497884544793`", ",", "0.0008581023195660334`"}], "}"}]}], 
  ";"}], "\n", 
 RowBox[{
  RowBox[{"ccont", "=", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"-", "0.15956635071361625`"}], ",", "0.0024752900407607015`"}], 
    "}"}]}], ";"}]}], "Input"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"\[CapitalPi]par", "[", 
    RowBox[{"\[Theta]_", ",", "v_", ",", "mD_"}], "]"}], ":=", 
   RowBox[{
    FractionBox[
     SuperscriptBox["mD", "2"], "2"], 
    RowBox[{"(", 
     RowBox[{
      FractionBox[
       RowBox[{"2", "-", 
        RowBox[{"2", 
         SuperscriptBox["v", "2"]}], "-", 
        RowBox[{
         SuperscriptBox["v", "4"], 
         SuperscriptBox[
          RowBox[{"Cos", "[", "\[Theta]", "]"}], "2"], 
         SuperscriptBox[
          RowBox[{"Sin", "[", "\[Theta]", "]"}], "2"]}]}], 
       SuperscriptBox[
        RowBox[{"(", 
         RowBox[{"1", "-", 
          RowBox[{
           SuperscriptBox["v", "2"], 
           SuperscriptBox[
            RowBox[{"Sin", "[", "\[Theta]", "]"}], "2"]}]}], ")"}], "2"]], 
      "-", 
      RowBox[{
       FractionBox[
        RowBox[{
         RowBox[{"(", 
          RowBox[{"2", "+", 
           RowBox[{
            SuperscriptBox["v", "2"], 
            SuperscriptBox[
             RowBox[{"Sin", "[", "\[Theta]", "]"}], "2"]}]}], ")"}], 
         RowBox[{"(", 
          RowBox[{"1", "-", 
           SuperscriptBox["v", "2"]}], ")"}], "v", " ", 
         RowBox[{"Cos", "[", "\[Theta]", "]"}]}], 
        RowBox[{"2", 
         SuperscriptBox[
          RowBox[{"(", 
           RowBox[{"1", "-", 
            RowBox[{
             SuperscriptBox["v", "2"], 
             SuperscriptBox[
              RowBox[{"Sin", "[", "\[Theta]", "]"}], "2"]}]}], ")"}], 
          RowBox[{"5", "/", "2"}]]}]], 
       RowBox[{"Log", "[", 
        FractionBox[
         RowBox[{
          RowBox[{"v", " ", 
           RowBox[{"Cos", "[", "\[Theta]", "]"}]}], "+", 
          SqrtBox[
           RowBox[{"1", "-", 
            RowBox[{
             SuperscriptBox["v", "2"], 
             SuperscriptBox[
              RowBox[{"Sin", "[", "\[Theta]", "]"}], "2"]}]}]]}], 
         RowBox[{
          RowBox[{"v", " ", 
           RowBox[{"Cos", "[", "\[Theta]", "]"}]}], "-", 
          SqrtBox[
           RowBox[{"1", "-", 
            RowBox[{
             SuperscriptBox["v", "2"], 
             SuperscriptBox[
              RowBox[{"Sin", "[", "\[Theta]", "]"}], "2"]}]}]]}]], "]"}]}]}], 
     ")"}]}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"\[CapitalPi]per", "[", 
    RowBox[{"\[Theta]_", ",", "\[Beta]_", ",", "v_", ",", "mD_"}], "]"}], ":=", 
   RowBox[{
    FractionBox[
     SuperscriptBox["mD", "2"], "2"], 
    RowBox[{"(", 
     RowBox[{
      FractionBox[
       RowBox[{"2", "-", 
        RowBox[{"2", 
         SuperscriptBox["v", "2"]}], "-", 
        RowBox[{
         SuperscriptBox["v", "4"], 
         SuperscriptBox[
          RowBox[{"Cos", "[", "\[Beta]", "]"}], "2"], 
         SuperscriptBox[
          RowBox[{"Sin", "[", "\[Theta]", "]"}], "2"], 
         RowBox[{"(", 
          RowBox[{"1", "-", 
           RowBox[{
            SuperscriptBox[
             RowBox[{"Cos", "[", "\[Beta]", "]"}], "2"], 
            SuperscriptBox[
             RowBox[{"Sin", "[", "\[Theta]", "]"}], "2"]}]}], ")"}]}]}], 
       SuperscriptBox[
        RowBox[{"(", 
         RowBox[{"1", "-", 
          SuperscriptBox["v", "2"], "+", 
          RowBox[{
           SuperscriptBox["v", "2"], 
           SuperscriptBox[
            RowBox[{"Cos", "[", "\[Beta]", "]"}], "2"], 
           SuperscriptBox[
            RowBox[{"Sin", "[", "\[Theta]", "]"}], "2"]}]}], ")"}], "2"]], 
      "-", 
      RowBox[{
       FractionBox[
        RowBox[{
         RowBox[{"(", 
          RowBox[{"2", "+", 
           SuperscriptBox["v", "2"], "-", 
           RowBox[{
            SuperscriptBox["v", "2"], 
            SuperscriptBox[
             RowBox[{"Cos", "[", "\[Beta]", "]"}], "2"], 
            SuperscriptBox[
             RowBox[{"Sin", "[", "\[Theta]", "]"}], "2"]}]}], ")"}], 
         RowBox[{"(", 
          RowBox[{"1", "-", 
           SuperscriptBox["v", "2"]}], ")"}], "v", " ", 
         RowBox[{"Cos", "[", "\[Beta]", "]"}], 
         RowBox[{"Sin", "[", "\[Theta]", "]"}]}], 
        RowBox[{"2", 
         SuperscriptBox[
          RowBox[{"(", 
           RowBox[{"1", "-", 
            SuperscriptBox["v", "2"], "+", 
            RowBox[{
             SuperscriptBox["v", "2"], 
             SuperscriptBox[
              RowBox[{"Cos", "[", "\[Beta]", "]"}], "2"], 
             SuperscriptBox[
              RowBox[{"Sin", "[", "\[Theta]", "]"}], "2"]}]}], ")"}], "2"]}]], 
       RowBox[{"Log", "[", 
        FractionBox[
         RowBox[{
          RowBox[{"v", " ", 
           RowBox[{"Cos", "[", "\[Beta]", "]"}], 
           RowBox[{"Sin", "[", "\[Theta]", "]"}]}], "+", 
          SqrtBox[
           RowBox[{"1", "-", 
            SuperscriptBox["v", "2"], "+", 
            RowBox[{
             SuperscriptBox["v", "2"], 
             SuperscriptBox[
              RowBox[{"Cos", "[", "\[Beta]", "]"}], "2"], 
             SuperscriptBox[
              RowBox[{"Sin", "[", "\[Theta]", "]"}], "2"]}]}]]}], 
         RowBox[{
          RowBox[{"v", " ", 
           RowBox[{"Cos", "[", "\[Beta]", "]"}], 
           RowBox[{"Sin", "[", "\[Theta]", "]"}]}], "-", 
          SqrtBox[
           RowBox[{"1", "-", 
            SuperscriptBox["v", "2"], "+", 
            RowBox[{
             SuperscriptBox["v", "2"], 
             SuperscriptBox[
              RowBox[{"Cos", "[", "\[Beta]", "]"}], "2"], 
             SuperscriptBox[
              RowBox[{"Sin", "[", "\[Theta]", "]"}], "2"]}]}]]}]], "]"}]}]}], 
     ")"}]}]}], ";"}]}], "Input"],

Cell[CellGroupData[{

Cell["Real Coulombic part", "Subsection",
 CellChangeTimes->{{3.738900306964458*^9, 3.738900317144824*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"ReVcpar", "[", 
    RowBox[{"r_", ",", "mD_", ",", "v_", ",", "\[Alpha]_"}], "]"}], ":=", 
   RowBox[{
    FractionBox[
     RowBox[{"-", "\[Alpha]"}], "r"], "+", 
    RowBox[{"\[Alpha]", " ", 
     RowBox[{"NIntegrate", "[", 
      RowBox[{
       RowBox[{
        RowBox[{"Sin", "[", "\[Theta]", "]"}], 
        SqrtBox[
         RowBox[{"Re", "[", 
          RowBox[{"\[CapitalPi]par", "[", 
           RowBox[{"\[Theta]", ",", "v", ",", "mD"}], "]"}], "]"}]], 
        RowBox[{"Exp", "[", 
         RowBox[{
          RowBox[{"-", 
           SqrtBox[
            RowBox[{"Re", "[", 
             RowBox[{"\[CapitalPi]par", "[", 
              RowBox[{"\[Theta]", ",", "v", ",", "mD"}], "]"}], "]"}]]}], "r",
           " ", 
          RowBox[{"Cos", "[", "\[Theta]", "]"}]}], "]"}]}], ",", 
       RowBox[{"{", 
        RowBox[{"\[Theta]", ",", "0", ",", 
         RowBox[{"\[Pi]", "/", "2"}]}], "}"}]}], "]"}]}]}]}], ";"}]], "Input"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Plot", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{"ReVcpar", "[", 
      RowBox[{
       FractionBox["r", "0.197"], ",", "0.25", ",", "0.", ",", 
       RowBox[{"\[Alpha]cont", "[", 
        RowBox[{"[", "1", "]"}], "]"}]}], "]"}], ",", 
     RowBox[{"ReVcpar", "[", 
      RowBox[{
       FractionBox["r", "0.197"], ",", "0.25", ",", "0.2", ",", 
       RowBox[{"\[Alpha]cont", "[", 
        RowBox[{"[", "1", "]"}], "]"}]}], "]"}], ",", 
     RowBox[{"ReVcpar", "[", 
      RowBox[{
       FractionBox["r", "0.197"], ",", "0.25", ",", "0.4", ",", 
       RowBox[{"\[Alpha]cont", "[", 
        RowBox[{"[", "1", "]"}], "]"}]}], "]"}], ",", 
     RowBox[{"ReVcpar", "[", 
      RowBox[{
       FractionBox["r", "0.197"], ",", "0.25", ",", "0.6", ",", 
       RowBox[{"\[Alpha]cont", "[", 
        RowBox[{"[", "1", "]"}], "]"}]}], "]"}], ",", 
     RowBox[{"ReVcpar", "[", 
      RowBox[{
       FractionBox["r", "0.197"], ",", "0.25", ",", "0.8", ",", 
       RowBox[{"\[Alpha]cont", "[", 
        RowBox[{"[", "1", "]"}], "]"}]}], "]"}], ",", 
     RowBox[{"ReVcpar", "[", 
      RowBox[{
       FractionBox["r", "0.197"], ",", "0.25", ",", "0.99", ",", 
       RowBox[{"\[Alpha]cont", "[", 
        RowBox[{"[", "1", "]"}], "]"}]}], "]"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"r", ",", "0", ",", "5"}], "}"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.73890010331395*^9, 3.738900115090604*^9}, {
   3.738900152163417*^9, 3.738900203724998*^9}, {3.738991414175301*^9, 
   3.7389914391354847`*^9}, {3.738991480906117*^9, 3.738991505363133*^9}, {
   3.738991537139732*^9, 3.738991543821519*^9}, 3.738991596526332*^9}],

Cell[BoxData[
 TemplateBox[{
  "NIntegrate","slwcon",
   "\"Numerical integration converging too slowly; suspect one of the \
following: singularity, value of the integration is 0, highly oscillatory \
integrand, or WorkingPrecision too small.\"",2,12,10,26449285768748730487,
   "Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{{3.738991418633869*^9, 3.738991440098621*^9}, {
   3.738991499140766*^9, 3.73899150610601*^9}, 3.738991545025338*^9, 
   3.738991597728754*^9}],

Cell[BoxData[
 TemplateBox[{
  "NIntegrate","ncvb",
   "\"NIntegrate failed to converge to prescribed accuracy after \
\\!\\(\\*RowBox[{\\\"9\\\"}]\\) recursive bisections in \\!\\(\\*RowBox[{\\\"\
\[Theta]\\\"}]\\) near \\!\\(\\*RowBox[{\\\"{\\\", \\\"\[Theta]\\\", \
\\\"}\\\"}]\\) = \\!\\(\\*RowBox[{\\\"{\\\", \\\"1.4572573357394984`\\\", \
\\\"}\\\"}]\\). NIntegrate obtained \
\\!\\(\\*RowBox[{RowBox[{\\\"0.13623664171595173`\\\", \\\"\[VeryThinSpace]\\\
\"}], \\\"+\\\", RowBox[{\\\"0.2865258933874427`\\\", \\\" \\\", \\\"\
\[ImaginaryI]\\\"}]}]\\) and \
\\!\\(\\*RowBox[{\\\"0.000016962817584694137`\\\"}]\\) for the integral and \
error estimates.\"",2,12,11,26449285768748730487,"Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{{3.738991418633869*^9, 3.738991440098621*^9}, {
   3.738991499140766*^9, 3.73899150610601*^9}, 3.738991545025338*^9, 
   3.738991597839634*^9}],

Cell[BoxData[
 GraphicsBox[{{{}, {}, 
    TagBox[
     {RGBColor[0.368417, 0.506779, 0.709798], AbsoluteThickness[1.6], Opacity[
      1.], LineBox[CompressedData["
1:eJwV03k41N/fBvAxM0RJpLKEJGWthJL07XxIsiXbiJKQfcvag4iSSNSQULIn
iYmyFMp7iOxrJYqMZdCkDLKH5/P741znel33fZ//zm77K6aORAKBwMbP/24S
+4DaNoMhJFM8+uW4wltoTZGRo7cOoRsXFLN018ohplT10KW+IRTHUXfg/nA5
6HZqqq8xh1BpEi2O2FAOdRus9Y6vDyFR3T/HvKjl8O4q1fXtoWGkWF70x2hv
OdDMl/KLk4aRhEsVi2lRBvf4W+SzbEeQWF3dK7GvJVChJl5m5DWCnCJQu0d1
CYzaXEH/ro0gl9QfNszcEtCgCZqfSx5BVn+kQo0CSmBCzzp0c/sIOjbpfHph
ewmcjPjdEaQxihqsmYPnbV7D4tyWANMdTGRSNUQ353kFe8Tt19f3MNHHSz41
InPFYKRdeod2iIkmNKB3lVEMuQmW6dxnmEhW9YyJVEUxmB7MaqiOYKIpI4uy
L27FQHNRFlWYZiLLQQ51x7wisP9uDqTWMXS1QfT1HT8abEwd8vTpG0N0rkt8
j0xp8Pq8l9jg2BgqfXjr3NdDNCB9iwqq5BhH5XlqFoPsQnjaW6niozaOjvT8
rBD0KYSxL5LPf2SPozVgYR+DCsCtc5JaETSBbvvcHjv6Ih+2UoOQTNQEst5X
JxR7Lx8qz3L9SUycQN3jPjVkv3zY1LHLwLtoAnE3KQc7Hs+HwjZTThkm3i9Y
vjXQ+Rz+NL8NSjT+iRgC+gwfwnPwqb9lf0WGhcxNlfY8DHwGEqM6XPMqLKQo
01FVZv8MWog8L0IwFjpqa/aGbfgM9mJx03es8Hwk83DZ7mfQV/kw/OldFppk
WMz7teaCZvGz9L4pFso+Zvjm2b5cEEht/Hby7S/UTmk/NTSZA9UVMdeb634h
4viAN+e3HHDvNZQy6fqFrnLFX0MNOVC/vcvVhvULGWVdKf6blQNB1L7FQLFJ
5D3wRNbWMgeGIlk7XoZPot40OapkUza88uY1E9b7jci/fcRDKrKg9bFgEM3i
N2I0jZypzcuCsTrRDC2H30h/xX1VPCkLREXkfnmE/UaJbA7L7X5ZcKvmVERN
2W+0I8MuhHAgCyy2hpW4Sf1BspBpSMvLhOWSacH3K39QK6nn5V6zDNj2Y1Hd
lGcK8UqLZz5RzYAD3ATb8R1TqP/RUz21HRlw2ZqvUEB5ClmX+y709KVDK1lB
28llCj1t4VWqtE+HdIqD/5YvUyiT/K9pNDgNsq65s5TOsXEr5t74kApKdJ7F
qItsVHi7YKX7RSrQyc85By+z0aLiD6cTCanAiBuVjPNmI34u2l97u1SQyLx4
7ucdNurvaNcfJKTC47qzdVnv2EixkssvWvsxJGxWTd8qNY1aFQSvfhhIASnT
7gJX2WkkO6g6LtKYAq+SvCvoB6bR8abcpNuvU6BzF+2zl8Y0mrj9VjM7KgX4
lPdtajGfRtLJhc2DyikQYyEcGBE1jbSFeJF1XDLczPhn8ndyGh1tjwzJM0kC
Y6W3Pgqz04hgtTIzcyIJJGr84u2XptHzZjUwVkyCymFWZyfnDJKejiGe3JAE
M3v7ztIkZlDdJNeP9fcPwb6w7IyT8QzSjpBKbjzwEDQrvPR6S2ZQYDT5Oo94
IvDpy7tuqZxB/75cWP4/3kTo/8aM1qHPIGEBJeP5lQcQ+M+6sbR1Brk8GURS
3x9AMTI4Hc+cQWL1deqHHz8AyY8yp/SFZhEv8bTG0Z0PgPCJgb0LnkXvliYc
jssmwK2f1VnBN2YR21JF/JRwAvAQ0ojq0bMotkt/gw13Amzdb1VX9nAWjR6b
laJPxMPeqK7TRcWzSDWxy/rki3jQ16g1yh6bRR7Wl88fVoqHBzk51tGmf9Gk
99Co7mkq7PN3CjSXn0OMldLyrf/Fwf5jg2YZSnNo9Eza2c9740CVYHmQdWQO
tb75PvOCLw60YvXGwk7Oob9uautJjFiweapoXmA9h/yZifXOkbGQ9HnmIPH+
HAq8GrOtr/sucB4OGy+anUMpcXwxLiExMDqXbLHp/TxiVF90X+aMhmxNFb+B
D/NI+zplX+d0FFyKa79f1DyPdM3/zrwdiIJv0pxNZr3zyHi62vNDWRR0mflq
PJmdR7aKd/MqnKKg+pWh5H75BSTt6uYr0nobkj05WEbJC4jdttAi/jQS9Jlu
oQk+i8hhdfSQVmQE6ITuKdQOXETktDmDhIAI0Nre/23++iJiKO8JYDtGwLFT
Z45eiF1EsqWHq3p0IkA+9+DsnrxFJGmddluPJwI2Of51KetfRJkNXF+qqDeh
dTTUvPf0EmqsyQn1z78BRqNUBQmJZUQfFuYdWQuDVoXRz9bSy6iYMSLrOR4G
Bn5q11Pl8XxVTn9jZxjoEn90CqstI2zRyjw0Kwy0JBWuChovI5fakmztU2Fw
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
/w+8inV2
       "]]},
     Annotation[#, "Charting`Private`Tag$502207#1"]& ], 
    TagBox[
     {RGBColor[0.880722, 0.611041, 0.142051], AbsoluteThickness[1.6], Opacity[
      1.], LineBox[CompressedData["
1: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
Usp4
       "]]},
     Annotation[#, "Charting`Private`Tag$502207#2"]& ], 
    TagBox[
     {RGBColor[0.560181, 0.691569, 0.194885], AbsoluteThickness[1.6], Opacity[
      1.], LineBox[CompressedData["
1:eJwV13c81e0bB/CDqDh2GYWIUDRklPK4vtY5pwgphYhOy46MhGRmZidlZmQL
IRQ3MpIdlXr02DOVnZH87t9fXu/X57qu+/7O8yVGv2VwnZFEIlUykEj//1vE
++qDyI4hkCoa/agiU4Ha4qX217YNwa24xydue5SjkFIFOfMvQzBcXwg+5uWI
1qWm/HdsCCLEhvSqNcpRw1bTUyqbQ3B12JP8mlyO3rhGWlXIDYPGC5Hw+tQy
VHB+Nacobhi6637XF3eVonCu1gPPLEbgBzPpTv2Zl6jymHCZrv0IFGr//PVN
4SUavXwL/niMgCKRs3uv0Et0soD3/MXHI7D1iYOM+PcSNHnK9B57xwjcij5U
9zekBGn4/ei8e3IUDlnN2PZ0F6OVJU4XA74xmFVZUO2/W4TEhembm+Jj4C5c
L+J8vQjpapYGF8iNQadPla7M2SKUGW2UvO3MGAwbqGYsSxchg8PPmmv8xqD3
cVbf4ssXqMDy6C6ZuTGQts9VZ/YrRPR/zyOmtnFo+uL7V/p0PmJNGLJz/DIO
oo218EM6H5WY2AsNjI+DkJRCz+DWfMT0NfBuFcME9CVde3S+KQ9l9FXJOx6b
AJa34/LXtfLQ+EfR7P/SJoCj7FP9sHYusu6aiay8Owlt/Z1D8m7ZiCfyLkgF
ToLnao4QzTQbVemx/IyNnQQvjjpZXyIbsXXu0XZ4MQnbVkubb2zPRvntBsxS
Y5PgSyfGphOz0M/3FXdj9adgMfX7jez3z5Fjoz/9ltQ0OLSWqFhAJhIZpbAs
y0/DrkOlLvr7M1Er4/ZcT2IaTCrdL13izUT7iIdzwcbTkBspGVo7kYG+VD3y
zgidBpZXyUINURlIreh58pdf03A73IscPp2OuBPefdWo+A69dO//ZArTUE1l
iNf7hu9gkaoUJJ2Qhmz6dPae7f4OR7bdMTwZlIYad3ZbXZ7+Ds8/2XxNo6eh
u5FfVtyEZkDauEjQVSANDQVM8xV6z8B5RV0/nqBnqNiBfE7g1A+Y5zyad8E1
FbU95b1bcOEHfDho8839Wioab9iVon7tB1zoZOgrNUhFuwT3f7e9/wMWb79I
tzqcivzrtPzqyn5Af7qN6POeFHSB5/5L670/QcL33xLexmS09nKOt3r9J5TS
t5NvNSaiHf+tKBts/wW2r9L8Xj5PRIe2kSwm+H5BkED/caGgRHTVlCOf++gv
SJSKDzPWTkRtW2Q0b1j+ggxGOcKrJwElG15z5vz4C4T0aIqa00/RMw+b6SMX
Z8HCdDnf9cgTdKR2+0qg2SxUjPLWZPE/QbVbspkHrs5CfpP/mYW/8Wjw4ajo
Q4dZ0Hlx3/xLezwSSTW7OBU8C1w21hnfbOPR0wa9hmdvZkFz327G3BePUTS7
QjLP3jlwI8paXKlxaK/Bhzwr6TkQfbgQXykXh4rjHCprD81BX+F3Fl6hONS1
p6DX/uQc6AvL6W2fe4Q4jkqytZ6fgxm7q6GkxEco5IKAm1/gHKTaWpIZl2OR
b8qfs4szc5Chc2ZXYmUM0j9S4SizMAemA51JA89jkEidUxR9dQ7yA4NbFWNj
UNXwdFcX8zwknj/cIXgrBs3v+6JXIDIPkeRfPDX7YhA9v+zMDf15sHxiy3s9
LhqpVdqf6ns5D96OxeXJ/lGI4/QBK86qeRg9bGfE6RyF+r+OBVFq56FBLU40
8moUcvtj+q60bR5k8798rVOPQkWgTY0am4cduVrrIwxRSLRJSus0/wLk2zqa
8fpFIlLPIPHGfQEE3vMJ64pFIP+pmmfuPgtQW+R20I0hAm0nJTEqBy1A/LAE
5e1QOOI5aNxQ9mgB+jYvzb9OC0f7ArupL4oWwGg0a/aoZDg6fbJeN218ASbd
c9n55B+imPR00yCDRfA+47Py4mooEqjyqaYYL4KFOSW0hBqKErvMRZgtFmEw
eS6hWyYUPd/YPehjtwhcP/NKri2GoIqLsVc9ghbBQTZE7N8HIaifLcDavmYR
LN9VL88UBSNJ5xtu5w8sQZ/ZxaE2gSB08MTAuZQjS1DrbiX0jiEIKZCMDk8r
LcFgdNzHvulApB52avy+xhJ0XU67eaI6EF3OkD2fZ7oEqYvn4tbpgSiud/4w
Y8QS0DLrP9NLHiBmxfsTLxaWYNJ1ReGIRQAir/+uX1vF80Pe6RdrByCeOodk
LdIyCJzoo2kdC0CiZ+iG/5KXQf/cDu9MjgCkcl3rLYvkMhjplc5q1vgj50ds
KWZGy+Ad8ePcL1F/NLr0+AJb9TLEJv30ur3gi9LU5J2+vV2GNvkz3OkDvsj8
YUfEi/fLMGliIT7R6ou+SjC3nOtbhnhqomNOhi/qPnf7ZOLCMthGiljtuOiL
aop1RA8e+A3He4SKHZEPemzHMK37+DdoZj3TqUnyRqfHrO9FO66AQ1z7dUnB
e4hyTzxf020FKqjxW3LWPJH6zv6vy14rMGv+4Cat3xOd0Dpz/FIYzicWmL6l
eKIDmYcXxLNWoC+j/rqJtCdiu75oWda/Am6+3SVhqh6obfTe+T7qKkxOZN5k
v38X6Y5GyoiIrMGK3KBz72lX1CYz2msqsQbe3X395xRckbbTMa+EA2tQO3ay
YlzYFdEY/+sSOLYGQR9yfShzLkhdVMaVV38NjlhI2c/EuyBF08babb5rQOiR
6fXfnZFQ76rhwhieRwiziKY4oem3dO93Beugf6tBTULZEe2J6rMOL12HvusR
hOs+R3T+sq7h+dfrQHt94e5XbkdUs6J8YPDdOgTV6Rl8mXZA0Qe5e3+PrIOF
l0FFYZIDOvkYSUnt+gOW9h1aOSwOKMxaqDPgwR+wmKZd635vhw5xfxLWMN8A
b4ljcdRMKzT+cNz30fUN4EpiOC0cZIWSWH9PTNhsgEPOeRLZxgqRtwiUhLlt
gP63ZiEFOSs0vWxM+RS1AYTiSkl+jSXK7P9mb9WwAbOl9BDZ/24ioewxFLH/
LxDFtPe9h24gVli60r/wF2ZRRbQrz1Xkpia9rXztL9TGB/xdWqGjcY1LhREM
m1Bru7rt4QAd1dPq1tQ5NyGynTuNoYCO3A0exuQc2AT9xVA/xlN09P36vkbX
K5sw2yVF6AdcQW1hhtLcnZtgccB+MpjDAlF/mPzea0giSN2PQg1rTFDyDr+e
+0YkwuLeZkZqnAlaPJn3ov8SzisMpjhvmaDUkPWbcXQS4e0a5mgiaoLWpBL7
tjuQiNq2zb8J/sYon/6tcjaERKTqBVmWnTNCXH3mnjW1JELU7aejNdsF1Fd/
jcFEloEYDDbP9v16Fs2qfd117zADQZzfrs1afRZtrdNTSD2KXaIsmZdyFimh
EzfHjzMQojLx8sevn0Wxr7nab2thu0va3pvTR3qlb+JDLzMQqTPzSWkc+qgp
c8eR6kgGotaLaEoo00FlQQ2XRZcYCNJBpa277Sgo+3SrQOAKA+HttcU5XpmC
npI/fPixjr0n+QSFhYK8IwcorxkZCe+4f2WOpmohnfi1Qxe4GAlSQC4z9ZMm
Gs46shkqw0jUVnTpEtoaiKM5MeX3FeyfsmUXLhLoBrPLYEcH7ncVlLEaUES7
9rR8Xu/G/c3Vpx/EKKKO48Kd0h9xriKjMEFVREq2jdW+/2LHygY7FSsglp6d
CUqTuN7BkVoUKI8yU8sNkxmYCG9Z8W2hhBwaPbny3k6BiSAtG73Kb9iPrt72
KCM/xV4J3WJix4uUjv5Xtj8JO9pKcKs3D2KdJ8opqdgHeA4Hx3CjIkeWV97P
sY2u3+N150R/HKIqFkuwBZqde+W3obhbWa/7W7FpMR/p0ws1LbY9dfkb2J71
4Y7GDJAoq1TfQtpCkLgUq3UYmMBhJr5+nAm7dPhjZtYW4LO9/FaUFfsPj8+n
X1uBbjPVEMuHbfkky8CeA/5YbTZ7HsaOj5I3i94Jh2/KdOhcwU7dVO0YEIX/
rPbcKriGzeZjqk4RgzBbXi4OS2yfwQd6+WIw5bh+ttMeO7fWXOnOXkj3bP14
1hM7UzkVtkkAf7TNtwuPsakHjEP5pWDzTd6MRTu2gES6/g9ZKEQpD+u6sBOd
ToRQD4Jpfcyhvb3Yxz/AzWcHobLZw2HkK3b0gw7y+UPg9EF78fok9vYMH46y
wzAx8X3dmomZILlOt/DLy0EnjyybizJ26N8h97fyoGpnN5Wgwoyvr9KS06Q8
FDYXNtcDzo+2N9HYFSDcU86fi4L9vZz/wQUF0BlX2sgzwEa9Dw0mFOB9pdqv
YRvsG1a22oxK0GhxsUc/Gft86917IsdB4XV88Z1neL5vl7IEHIeMnV8jkjOw
zx0UzzU/Dv7vTXVmcrGlqr+cSz0O6gr0xsBXuF/QOltMVBlqt9q9qunCeazp
7mrBE/C60DdBlomF8OZhbXi2dBJYdAx3PWZhwefXvrpxhwqcnZJ6wsCKc1Or
liZ5FZgQb4/7xIV96d9IC0cV4H3CH+0tgq0JIsvTKmDjlx/Uq4z7LShj9Z//
gd1Gn1w8HXBu++lFXjzAjaXsxXEn7NybkrkvAYqjPZzO3sH1l5NVgzsAqO2i
jpJeLEStz+eBRQYCnNRtbLtCWQhiZ5ZbghIBrbKkqxJZ2NJn4slJBHgwHNBv
+4bnLXK39F1Wg3FNtj7JIdxf17dXy1oN9INmzH1GcV4bMZXuogYSnC9uKX3H
uUjB9+NhatAmpBCRuoLzk4UM9RVqIHJctcOZdytReyJI14RTHertDXSET20l
SIT4pdkSdZAtke+9o7OV8G5e6kdv1CFuaYfpBz2c22nv92tSBxvPzzaBF7YS
xPDo6bEv6rAjxDR07iqu96vsFiBpwI3MG+8bvbALWrq1TmsAa787zb4U10sx
sG981AClOznsEa+w5WZzWr5pwBWevg8vqvB+hOsqw8Y0oIKmaDZXi/tPmOsv
L+J5Zb8cnduxOXNkjXg1oS78WoL7OK6/VCBlpqsJbmq6Px8IbCMI/nMKKdWa
kNHv+TJr9zaiVpTsQmvQhM47eW7vRLYRpH/Kuabea4Jk4TYm1n243tvFmatP
E3p2veV/KIfzsPSClTlNOLR4TC3mNLbx7EcFCS0Yey4Wm+K5jfBmdbEP8dWC
Gf+hVSZv3M+9zz4zSAvm6c/MLf2wg3lVXoVrAWmPmIxcCF5/I5+OnmrBrsei
9fWPcS5rV0kv0QL9wD2zYyV4fnO37Z8BLXhzU1hHdgrnyZ8TixUo8FbrW3Hk
DM69ztuWKVPgvXgS/9IvPI+J9W+RKgU+DwiNVC9j72AOiKBRYP6ikLvelu1E
rcY/09OXKCBN2519e892ghRXSRHzoUCstOCWSsPtBOFwqfFNIwVML0tmjRjh
XLpn0qeFAhKx8qc5TLFfuiQR7RQo3TwTeZWO62fcOnN7KdD7yVeI4xaen02Z
PjpCAd6AGYWrQdhs1mF8mxT4WrX6+WEork8NOnaHkQppsyweFeHYJn+aupmp
cNRUrI79EZ5/dF+WM5kKBvIXzlQ8w/7PadVRkArRQ+g6+2s8r+ycmt5RKpjw
t287XoNzvvRgfUUq7D3zNY9ehz0Rz6xznAolFYtzr5qxGd/nyalS4UPEfi96
73bCe2/ZsYpTVOBWjYl79QOvH+PgUm5OhcinN5qviLISohYJ5PhAKtxx9XXy
FGclBpW41b8FU+GyQfKex5I4T9nqJBxGBVnWT3faZHH+lbkvPJIKLXe1pI8p
sxLEeIiY0hMqMBpLBJMNsJ0H1J/mUGFKgVCUMsT9DT92ReVRoYvLdEjNCHvN
9LBfARVS3sUo37nMSnhzHBI2LqaCynGm6SFr3K+f5d5WQQUX/uHTr/ywwwbS
e5uoYLqwsdz9AK+PTPl83lFBs1MwfSYY96vIMu1/TwWewLPrYpF4Ps+/Jjbt
VChcrs0LS8T5pVCbqh4qTH5MIdPLcP+9hrMBA1ToLH5d4VmBTU6U/j5IhfKH
n689fs1KWFRMl+oMU8Ffi7O6rY4Vf99c/MM4RgWxMi+7Yx14PxsNuSrT+HrE
mnWQJ3BuMZ0ysUAFoZesu22msUVtt4svUWGg+9XNlh+4XlA323iZCtc4eRge
LGIPNT2uWKGCfUiT/CYDGyFq1vvqnw0qHMlx8jZjZiMISiXl3F8qLDSLtr/e
ht3aevDaJhXcmD1uuHGyERa3kne6MdDA1/vwkzkh3D968q0lMw00U/rH9ETZ
iNqEiRBjFhpsrQk+WijORnh3FLdpbaVB2PpIq/UBXN9p3Mm1nQZxrvF/R45h
36FoOZJpYPRIS1v9JF6vV9tAlZ0Gu0vnH6eqshGp/sFrLBw0SJ3TkTPTwvP3
/JEN5aRBji3DtU8G2IUyoeY8NLANLSxSuIDn8buNbOelwaHcSxvRxjhf0/z9
ArtkoixOzwLPO0C98msHDZxZro4UXMXr/b2JgnbS4Ng+riPkmzi3GJwU5qPB
G7p1yzs7bMGwgpP8NPDy4eeTcsT1lVH6DdhqqQ30AGc2YtArpoMmQIOmbyJ/
1Dzw8Vaw22gJ0qDLqOfQ6yA2gsSPoth30yD6jreHYBiu30hyc8E2jDv47k4E
nnfqoPEX7K89gVcU4vB+t97jeyREg8R5hcLoJ7h+qnFtBtuce3htNhHP4+6a
IIRpMKqrEluQjvtX+L/3Yz+3mxpky8L94k3b9onQwCos7qB1Lj4ft/lUrbBl
8zTc3xXg/eVWhudg/2yZbZIsxvXPzP6OYRdNJvEGlOLjVS6IFNlDA6et2hYj
r7Cv6Z86h72imbmaUoPXS9qrUozt+TrFr6EOz+vx7fuMTTr6lH2qAe93RF1q
Hds/O/Yx+ztsaz2Z3aL4ftgTIXa0Fe+nJ3riGHbIo+C8Cx14fZOly2exOcj+
ih7deP4Os9ib2NG+XiilF88fLwhxx+ZbdTvV8Bk7skUzBPvpLaeeya+4Pjei
MQ5beNzOjP0/PD/zG2cqdqqp5YTcEL5fO8Iln2NL9NAdL4zi9Qw8yTnY2afM
1t0n8PlUudeQjS1bezEgZRofr8uNs5nYRUoGnA0/cH07a3kytnyBzpPJWTxv
6cRSLHa5OFWcfRGv79/IHYR94qlagdxvnP925XDDruFSOXZhDbtc8Oc1bPVA
pTr3DWxu15e62E0bR7RTSGSCpGVwRRH7lLPMx7dMZKLW/faaAHbb9D7zSRbs
9/E+q/h86l8RnSKzkglCNWD1E3bv511OcuxkwqJz6dr/r4eR7s4NQy4yMWjz
vCkIu7+BM9CdF+fL+mJm2OYnWblT+PA8asGdQ9jDxVsS3gqSCW85x7Y/+Prf
kN6UmBTC/Z76e99h2+9cPC4nTiZEdST7DbHnQ3/WG0riefruWgLYLoxTOu77
8bzXGVWf8f3n+eubxdvDOH8n1nMGm3Sjb3riKD6+uTqPLdj+/R+cyUp4/zE9
Jyrw/Rza0hxkqILXj+pi4cfmIOp53AE7b1Wg/v/PS/mbxGR1vP4bTh1r7Kfp
xUUTNLy/N5Z7Snbh63cvoe+uIbaTzNs9+HmTXXxETzYiE6mHpfaV4uexyDpy
pv4SXj8m540W9quLASQyHe+33DrOAj+/TXK3pJPtcT17xEkX/PyPjKm71Qfi
3P61hxA3vl4pHWkHQrE12yPduPD9ZGTSHh2O11tTftiN3z+XWx33Xn2E8zEP
mjt+P30tSm1jSsfzfnmKZLHR4IPHX1GtGmylI78c8PtRTjFEu6AO1+vumkjc
QoPInztddzbi/TmkLjcy0UD3ysHWsVZ8/HtVLDkZafCeYury4As+fj/tifv4
fVzPXdXSvIjdOfLlC36fi7VqLR5ewfNtU5/34fe9t3+3SPw6nk/6VNG7SAXV
35NOlozsRKrTh4qGeSpU9fOLbOdiJ0hVyc7+P/HvdZbL7dMy7ISFajIRgH9f
0v6R291+hZ0gut8MJHfj9XRZ/davsePvUxdxehcVhs1Hpvdb4lyDT1+8kwri
vo+qHthjf9CyTWmjQkbTqjHhgddTt5vyaqZCpl59/MtYdmKQ36Kq/w0Vsq+c
43vajHMVYz+x51QoCHDhvnmQg6j9zXVK2YkKMypmvgFHOPD/Y21B4Y74935R
cyFdHucaGsrDt6iQS9/xcVAZ5+tv5/1t8Tx4GW9C4SC8E30WX13H66/O7tE1
5yBEJe5Ff7xIhad2tocUozgIi5z636snqBBoeFWbaQn77eUi5Q0KKPY/ywls
5yRq9XQyHt2kQPz+hIJ2bS7CO9hGf6BNC+7XPozXrsSmvSNlC2rBmd2Gme8l
uIlaq5LT61c0Qc2++RJ3MDchOllVl1SiASlCdIm2JW4i1UQoKG5eHSTeZsXp
XuIhiIYkg5ugDpEH6w98qOEhUpla1I9FqcGNhS3dLQd4Ce/yKqldnwmgF8+L
BkfwErXVZ7WYDxJg63vuz+koXvz9ydvMd4AAl3Oln8kxvATJKihBWoqAoCWX
8Mg43C+t988ZMQIKlVfXHyfh+tA0q6c7CVit2/z0PA/n9aoiwX8AIj+QHzY0
Y3sOJpWkAH6e7CwftOB5Z42Zvj8BSHfu0KC1Yo/GCUrEApTzRa61duB5VgXG
8UEA/Sa8lj0f8f4UtOWCHQGkRgQ1hkew2Zb9wzQAjpS6i2SM4fmnvgl1/QNw
IuDf1esT2Gah1juOA+hIJRVNTWM/sZNOkQW4bSMqMjeH+xcfKlXvBPBU8Vkt
WcC57bw/CxdAAPtwr/MS3g+ba6g+K0D8i/TQlRW8H67NuvG/qpDmveVm1Rru
f/po/uiqKuSdva7u+Qf3x9n1319QhdK9TcKqf7GjO+63/1CFmgXJ1c1NPK9s
s3/3pCr8D7nTglI=
       "]]},
     Annotation[#, "Charting`Private`Tag$502207#3"]& ], 
    TagBox[
     {RGBColor[0.922526, 0.385626, 0.209179], AbsoluteThickness[1.6], Opacity[
      1.], LineBox[CompressedData["
1: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
toEuZAVlkwpzS0tkv77EJLnzWcH/ADkVPiE=
       "]]},
     Annotation[#, "Charting`Private`Tag$502207#4"]& ], 
    TagBox[
     {RGBColor[0.528488, 0.470624, 0.701351], AbsoluteThickness[1.6], Opacity[
      1.], LineBox[CompressedData["
1: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
       "]]},
     Annotation[#, "Charting`Private`Tag$502207#5"]& ]}, {}, {}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{0, 0},
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  ImagePadding->All,
  ImageSize->{1022., Automatic},
  Method->{
   "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
    AbsolutePointSize[6], "ScalingFunctions" -> None, 
    "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
        (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
         Part[#, 1]], 
        (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
         Part[#, 2]]}& ), "CopiedValueFunction" -> ({
        (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
         Part[#, 1]], 
        (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
         Part[#, 2]]}& )}},
  PlotRange->{{0, 5}, {-0.09440975400929173, 0.00929497349540618}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.05], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{{3.738900163251267*^9, 3.738900176742496*^9}, 
   3.738900234301382*^9, {3.738991431952895*^9, 3.738991453536519*^9}, {
   3.7389914995647984`*^9, 3.738991525485547*^9}, 3.738991573103643*^9, 
   3.738991625842823*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Plot", "[", 
  RowBox[{
   RowBox[{"Re", "[", 
    RowBox[{
     RowBox[{"-", 
      FractionBox["1", "r"]}], 
     RowBox[{"Log", "[", 
      RowBox[{"r", " ", 
       RowBox[{"ReVcpar", "[", 
        RowBox[{"r", ",", "0.25", ",", "0.99", ",", 
         RowBox[{"\[Alpha]cont", "[", 
          RowBox[{"[", "1", "]"}], "]"}]}], "]"}]}], "]"}]}], "]"}], ",", 
   RowBox[{"{", 
    RowBox[{"r", ",", "0", ",", "30"}], "}"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.738991649098297*^9, 3.738991697692667*^9}, {
  3.738992023034931*^9, 3.738992085772036*^9}, {3.738992236663644*^9, 
  3.7389922460032797`*^9}}],

Cell[BoxData[
 TemplateBox[{
  "NIntegrate","slwcon",
   "\"Numerical integration converging too slowly; suspect one of the \
following: singularity, value of the integration is 0, highly oscillatory \
integrand, or WorkingPrecision too small.\"",2,18,21,26449285768748730487,
   "Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{{3.738992060547043*^9, 3.738992086776136*^9}, 
   3.738992246876973*^9}],

Cell[BoxData[
 TemplateBox[{
  "NIntegrate","ncvb",
   "\"NIntegrate failed to converge to prescribed accuracy after \
\\!\\(\\*RowBox[{\\\"9\\\"}]\\) recursive bisections in \\!\\(\\*RowBox[{\\\"\
\[Theta]\\\"}]\\) near \\!\\(\\*RowBox[{\\\"{\\\", \\\"\[Theta]\\\", \
\\\"}\\\"}]\\) = \\!\\(\\*RowBox[{\\\"{\\\", \\\"1.4572573357394984`\\\", \
\\\"}\\\"}]\\). NIntegrate obtained \
\\!\\(\\*RowBox[{RowBox[{\\\"0.13623989225638555`\\\", \\\"\[VeryThinSpace]\\\
\"}], \\\"+\\\", RowBox[{\\\"0.2865258930557631`\\\", \\\" \\\", \\\"\
\[ImaginaryI]\\\"}]}]\\) and \
\\!\\(\\*RowBox[{\\\"0.000016962818441117055`\\\"}]\\) for the integral and \
error estimates.\"",2,18,22,26449285768748730487,"Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{{3.738992060547043*^9, 3.738992086776136*^9}, 
   3.738992246998726*^9}],

Cell[BoxData[
 GraphicsBox[{{{}, {}, 
    TagBox[
     {RGBColor[0.368417, 0.506779, 0.709798], AbsoluteThickness[1.6], Opacity[
      1.], LineBox[CompressedData["
1:eJwV1nc4lW8YB3AhacjMyjxWHOM9iCS9twYZJVEZ2WlQRomkrGQlIyp7HJz3
lDIaZnpkhCTaRhmhyIhkZf3e31/n+lzXOfd1Pfd9nu9zSzt7HnFlZWFhiV3D
wvL/589N2tMn4tZB+ym7S0ZF7/HbNIOqQ0c5gUW46lZo7ztcrdvaUO8MJ6Se
kYure/MOfxN2/gM1gBOEE3Sq+Svf4RwdSaOcOZxg8N7scH/SOzwgcGBr3Rgn
jM04gZrJO/xkS/BV7bD1UJPZzBpR2Y5ruVbpST3ZAKN9Q+cCDNvwzmSsZoqH
C8qCTDcW6bbgqR8KuH3luEAp8qm5k2gLbrNZweGfDheENBZnYQuv8a/XxVdY
XbhAqCuJV77sNd7nsWGXwDMu+MIsiHPTfI0P7xss07LeDN9ywi+Yajbj85P3
igJyuOF52KD4JqNGvILKv7r6jBu2L8eO6FMb8SunYg+FveaGkdEd/be5GvGl
7rDxmGlu4OtX3Rr+/hUePFC+pY3CA4JRNIViu1d42Nt8iz4fHojvzphb69+A
38wLamMV4YWjtc+OmdfV4caaZ/m2yPCCrrdbq8n9Opyz/shRBRVecCyveGAf
V4eHDch1m+jzwpr8cbtW2zr8KuXNj6SzvGD+C1/bOlOLe2QLr8hX8kKOHw/l
gGotbp5eomxiywdf/GZtXxbX4DzKaZ52rnzAMDTkLEipwd9WhT329OSDrL0j
igWhNbhx9/EdSdf5YCVLIGbCsgbfI7qy91sBHzzcF7iWZQbhmsnGtp5LfECw
TBKBiS9woaSBqMQMfviJBX6/NFmFC1Ofhc0z+KH3X/xhl9dVuGhteJBdMT9I
6vJt98mrwiUmFS8p1PHDzmta06tWVbicqZdj1TA/+K83g+d1lbgG+7LWgIYA
sKcU/yvKqsDNfAQH1V8LQNuJG0O1XmX44Y3DPfc+CMDk297ykUNl+BF6RefS
VwF46EEkYCpl+LH2E22vfgvA2F+tH+K/SnE75dxKmy1boL+hTdLHtRR3H1RL
CHXcAosVATxzTs/wCEuj3e9nt8Cd5qWoVO8nuOjTt6KsawRhIYSHi8P8CV7I
bzlH2ygIrVZxexOxJ/jn9/bFCZKCwGr3aD/f5GNc1tyHYn6A/P6S20qm12O8
9mAWR3uKIMjMvA387FeCLxvMvG3dJQQJSS1OZbpFeDzjSsGygRDsejgocY21
CJflYIlUMReCQfRCN7C5EDdt2KB/y1UI0jbwZtGsCvHUvVJPTGOFYGd8i/2x
y4/wHWByr6VXCCTK3aac6wrwizo5Ds2hwiDmqVM4GsrEjbM3/zWJEQaeE+8V
Vy2YOGXd1ci3d4SBUDDlADkm3v7xWMkHpjDUXX2kYtRE4Kpem9h63gqDTOg6
cx8eAh9m+DH+iIoAklTZve5+Pn5C4ND41ici8F3lhfyfBTq+7/e/Kx4DorC2
2Xu0QyYd9z+QpPRyTBTC5c/uuNWdhhfmqHTxz4rCx386R24kpuHClo46FZxb
wVXfrRdnT8PHyhvm2FS3wh6BAP4vwyl4Ymi8T8rlrbBNwsPS8sU9/PsWeY96
LjFgPty49Do5ERfyROJCQmKg0xvtFGCViJs2WbWelRKDgJo8xmnhRLz0yk1l
bg0xiAxw/P4n+TYe3Tv5y9pKDLqStYpb0xNw9ftVp3/TxUDKac+XOvs4PGQX
GQs7xCG+XVZ7dikCP2Cf+Ud7jzjwNKikVQZH4JuDR68fNRWHa1UHgxbZI/D0
uhuMeEdx8BjMeDK5ORwvN64c5YgSh1s2iw6p28LwSSsZ3+lOcdgZd8rE/0Iw
bn9pJvpNgAT0yowkT1RcwHcWpjwNRJLQF33k7UvXE2jfl7fLE02SoNJqrfJu
hwM6xMJu6PBeEm4dmM/PZXdCLkc8OvEhSUARyTM73rkggwDpoOC1UvB46W4k
m+1Z5CU5m6tPlYKpluImQZELqP501nidrxQo+qlHpgdcRUZLOnxXA6Rga62n
ZL3YNfQ2/qOWZrAUbDoZdN6q+hrqrFgfnBclBbSe5ZPNS4FoYqMP3410KQjd
bMjjURmMhIsPaBvUSoGYksWohNx1dG5+KriJSxr+WNrZvH0VgXZ6nxL8wScN
gs45uWUCkYjzV1cBm7A0hOy2wyydI1F+d93n3RRp8GOjmzGXIlHPizvKz7Sk
QTlVh9agEo3Mbuh05DhIw9c2vgqB0BikzheiFlAiDZmi152irsQjlpsz9cml
0qB/vsJuMT0evWVzsymtkoZ4K+m7Jigeuc8cuTHVIA0bEpb3RrAloLwO2e7T
XdLg4Z1r4BmdgASzmsIt2SgQle29KnH7Nlqg8vSoHKWAplDf8Z6oJDSbIRqi
YUMBnarOpiYiCf3llpPVcaAArcA4/G5DEpqY1nHbd5YCUwdCjn1luYO+V7nM
2lyjgHfnqqWA7x302qRsc2Q+Bb7zThYctL2LUt3t8e8zFDijb1qRyZuMdhU8
zL57VwaWH7XtktdIQ91SBVn702RgVSrhmbBRGrpy937m3ywZMq9+3pyzT0Nl
IYz0I/dl4LHH0btXotOQulV28ubnMiA1FbwmuS8NKa5Nig/vlwGf9XbTu6PS
kaBDQLCvsiyENQ1PFL3JQM8++gfJ0WThGgo3OtSXgSyNLwd+3C4LWzYKbeie
zkC3t1+6qo7LQo7bnwUkmom4NnlenjCXhQrrMN2K05mIvcLZ65SfLFyw+mnq
u5KJpviMHY/VysI3lai/iDsbdZyjtLs1ygLXRXlVfZFsVPPqHx70Rhb2WViL
VVCyUfyVAknmZ1l4cPj9jlvbsxH2fVPvwi9Z2Fx83LHRJht5lLTZZfDLAeUP
40V0bjb6ZXbUdvCkHDjoJ6eEq+ag9/dVWubPysEPvmWHCa0cVMnGocvlKQcq
YuzfDuI5KKqsVFTLXw7MGnhF/prloG2Swl0Rt+RAs1nOrccrB52e6LKilsrB
Nq+PPVhJDhqMcTx2YZ08bOBvX12h0pHHL2UKtkke9vuN6oyr09Gc4cL4OI88
/JYYYPmkQ0cb2G7fOCsqDw9Yx40TDOkI86976qgiDy+LZk5WO9PRNVd5fjML
eXBfJUyH79GR4O6xNmqWPNRPODY+XKaj7LTytJFceQj5NlnwmS0XKS6EnSaY
8nDjgUrNv/W5aNdT8VXKY3ngONQaTRPMRS5KZqqiDfLwlTdCxUY1FxULPo7h
HJWH7PmIl2l2ucjot5/RkJYCdDa1rGMpz0ViNIlwzl0K8EJ9nBivzkUTF+pr
qfoKQBxhkfxUl4uSZnl2XTBRgNHpHCKhLRf1LN9XXXVQgI25tIqXP3LRhU1f
+UWiFMDpvkgQq0AeSlWEHtNuBXjKZ56k5JaHzrn/EPXqU4DeolhlO888hD+K
OZ44pAA7A0TxaJ88NIh1tnf+VoCshN0/PgTmIdUdF+pOsW+DgqScl3KJeajO
II8ZrLIN6m6ua2iszENjLpwXnwZtg+5E40+yHPloInNfNQrbBhRq4o3UDfno
d2fwupaobfD+yVmPjdz56I/ZQlp/4jYI4W1Z6BHKR3O6v+o3M7eB5a1Ppw4q
5iNWgTeCZ9u3QdlE3HoTk3wkUh9XKS6tCFN3ZtUGb+Yj0dUWdkV5RfCT7vNu
istHYjs5zTSpinDesd6VmZiPJIqDB4y3KwKloNbbNi0fyaZ7b7pspAi3D7y6
FvsgH2E+FvbvvRXh5f56H2pTPjKQFWKNqFWE4XdhRVYsDDTibMjUbVSE79wH
JoPYGCgmx+/QZIsiLAr0t+VyMNAHiY5U60+KkJz761L/JgZyFEnRUB5WBPaF
XfmaIgzkv3mr6zsuJVDk/Ny0i8ZAD+clmrZaKwHGlLw0ZM9AZtpmHu12SuD+
U84t34mB/lwKErjhrARLZ4pMnU8ykM50r+OEuxIUOKYOvD/LQK/GsxdqApUg
2DgiJc6HgXq/U6in8pTgynFNOf8oBuJrlY8t/q0Ev+vrj4qVMNDKbyz/9V8l
sBVbuFvyhIF+8ek+H1xQglxPWtzeUgaqtTL7JcxOhfwG+yK7Kga6OOhnECJM
hbLVpXm3Bgb6uNi0Yq5PhXV18kujHQx0T8ndc/o2Fdy8H+ekLDNQ2MFL4VzJ
VBjICmp4vcpAXl5BGQoZVBj+Ejg1v4ZAB0oTW2wJKsQOMNxNOQg0r/9cob6K
Ch4BNGr7ZgLZWHP1JQ1SoVFjy5CpJIHEIosOa2kpQ34avzF1N4EeFD6qW9ip
DNXr/rR+xwm041OBVjWuDLdGWv7d0yeQJYUpts9IGb6meh9b3EegmOfZw+Yn
lMEmWMOAYUKgxcmE4POhygB5oZGxVgTqsvYpznurDHnsFOunXgQ6E3xB5swH
ZQijBBrIXiDQLMPrLrVDGWJ5gO/2RQLx/T139XG/MnRUmZic9iWQcazrgZq/
ysDtkuI5H0Cgitpjfd2iKlDegr6VhhMomarDw39aBTJP1s0WphLoqElr/At3
FTCvaH7xJY2s5+7E6+alAhIO48yVdALdfBDF99JfBcbM54YNsggUqNgl4Bmj
Ai8vNOq9zCXQSYUAkZYSFbjrnXjS/iGBaDLVlOtLKiBU+Kh+73MCTewxz1Vd
owp9frJ2GtVkv5yHZLrWqoKkjpK+9AsCydK55GjcqtDe1D45hwgkLG2v0Cut
CozPnTwJdQRakVil6hqqQnaTg8vF1wR6Laq/fTpBFRRmq7NYvhCoXaJInv2e
Klxe4GhvIf2ZIi68JV0VuO00qHc6CNSvtPBPi6EKx2/9OU3pIue7s6TmSqUq
rGudpCh8I5C8rbQp64AqdHud7+r6TiBlhzg9/mFVcPrJcI4aIJC6y7Kq7Lgq
HMtVV9YaJJCeeyevwZwqhIqWRkYPkfMNSPgStVEN7ii43pIYJlBo2hoXXk01
4PvGnPo7RqDILE9Lio4amH68hUWOEyg299t+jd1qYP5D4pXIBIFSCiq2HT2g
Bl89/f5p/yZQcZX3RPIJNRgeVHjoOEWgnu5+f6kbajCU7WZ+coZAg71m7rRo
NYic70r6RvrXQPWJPXFqcKbMZO/RWQLNjKbgJ1PU4LWs9A98jkCblszXMh+p
QbT6+lOsCwTaKVYbr/ZZDXRsJRz0lgj0XUa2Z6RLDQ7xOQbeIx1FDafm9apB
lGvVwUnSHTuNXwmPqEECRxJL5jKB/KzfL65ZUgOrxivvRlYIFIelytqzYLCn
TTdGZ5VALpomJlWsGNyYKVyJIL1x16PkS+sw6Fx02yzNwkQ2Jt4av3gwqOM+
PL13DROpmlFsDPkxuDb0/EYUaVaLD8F5WzCQ3Gv0pZX0fZvtb+1FMSiqdqs6
wspE82cXznyQwWDG0CLnIBsTvTn/IA6Tx6A6bq9BFOlsb9vSW9sweNx6t6SO
tKF/NdsBFQzk7i/2aLIz0d3IkMznWhjMVpU84lzLRG4x6g0iOhjQuUsyd5Le
HT8w6quLQUG/ip076aF7+3VogIGBrbRBM2lNYv3HfCMMVvyP9flyMBFnQeU/
VlMMpGceHs0i/bXQXdrxEAbMjItZr0hfL231ELXA4Ic6esK7joneNySsjzuB
wVC7ylwKaUbzHmzMHoO0E8MKFaSvtE4fM3LCgJjs0fhCWvrT0Ty2UxgEt3X1
cXMy0d8OjhbHMxjcnLx5XYl009eyqWo3DKwb29n3kfYaFMEve2Lw6cMpxkXS
+4Zfu37yxsBX06EpirTwWECMug/ZnxydN5mkx34rP4nzxeAo3vT4MWk0/a1z
7DIGEplfrzaQvj0Xy2IcgMH+54bUL6RPLeIKxDUMPq/tevGT9GY2uo9TKAYy
fx8nr13PRBwLyGIqDIMmpy+T/KRXJr6ph0Rg0OaawSJNenZwkZc3GgNd5oZm
ZdK/u0SmsmMw8Nwoa6JNerhdux2Lw6Dv4XgEkO57dbSoJgGDiiG34AOkO55f
jD2chEGsSeZ2M9LtjxPO993FYENJFNOSdBOzyNQrBYMMedUuK9I1ma1UlnTy
PIs3W2xJlyeNbojPxCDoOf2aHemS6PW/JHPI/uzwnvrfD4IVmotyMZC9NqPw
v+m++5k4A4MXncqU/3+fes4loo2JwY5e/v7jpG87h5xyKMBgwJHhakE62ipr
/+9HGMhf6i0+SDr0ULVsUDEG3L4VdQakr+zrZuN+gsF6VtWs3aQv7lz4nvkM
A7+l7fu2kz6HCdWqlmPgGtv8RIn0SfntOS8qMRBQ6JuQIH1CzCL4UDUGJVe9
ZnlJW/J5O/QgDOZjvFrYSJtyxu32qCXvV8Ynj7//z3/lofhKPQa1ekn9A6S3
/xruFn9NnufT2A5EWrWPo+rRGwzunzgnWUBa/rNsql4beZ4Ens47pAVrHa3s
PpL3zyW6+fT/8y4P1B7/jIHTBM5qRpqjMF3wWicGX9m7eLeTnkvp+Jjeg0H/
Bp+KZfL/Oxk3+0S5HwNj20MWfaSHbwgkPh/AwOXfy8aXpDu8D5t/HcbA2Yay
L4R0+2kP7NwoOS/WwYMOpJvsYriXxjGwbRzevot0hVFT69ZpDDQ57PP+kPcr
VZosvYxBoeEegSOkbwvZK46uYqAac05RgXQ011XOAFYa3DTgkl0k72/AQtmr
1HU0CNPEW7NIn3intreLlwZnN4lxfiXzQSJEcpe1PA2q+ywGpMj8KLzISfm2
jQZLioUfh8j82X1qap0TlQacqWJ190nbmdR9OIPRwCPePVWVdPqW0+6Xd9LA
l1/RSJnML5EHhan3DtEg6+7K8XkyL5np94K3mtOglKvU/xHpHXHBp7IsaNBi
I5jvRNrK54g6YUUDbvGBrY1k3t7dPdtc6kyDBf0NWeFkHgt80Fv45EuD48yS
vA4yz/Ma5Hut/WlwW3mkKpC0Rjl3w7cAGhTT3w3LkD6S0R8/FEyD9YN54e7z
BEo4fWPbTDQNBHXqf/wm34vNS2+OC2TRYJj5pKt1mkDr5U6UHmmkQRvV+cYA
+X65ieDGBc002OQ/zrxE+jUXpYftDQ0G12IC60jHzP5c+6ydBiLR6+sVRsl6
TRePCnXRYERcP9lx5P994ubf7jEavBfSuFlMvpdiJZXqrnzqkOB317SVfH+v
5me8qhZQhzODWzyNSH9LCbYRFFIH0S6RX/VfCZQZahDauFUdHj58PFrRTSAp
y/fvFOXUwW5VmZreSSC5uRGvCW11uDnjuGHPJwKp6okU+dmpA+P5jseCbwj0
RObsIqujOjTIr6x4t5D93lBhGOusTu5HAilvyH1izxervrzT6lAzllAW1Eyg
Y97JvO+91WGl+XDht1cECsoX8lEOV4dDOZFr/V+S+waXoE5/oTrwNd20pZUS
6EIPX50xiwY85W0515hBoN/TMUeNkjVAtijK2dqNQIZqr1KNVDShNZB1XQ2N
QC+mdRfn3mrCnLRAWscEA3koq3e9c90OliwGeecfMpDexMmP1uu1IOPki10Y
uW/vlxU+yEXXAhZz3OeVMANtC46+XKutDfeZI03+7flIyVUHyXVpw40xFm/D
kHzk+uJM2FPvHVC+nJNH085HKPvjyaktOlCSEsHY8zMP/WWuzqmV6YBN7Opo
ckoecpErWJ96cCeonx030zmSh6aUErUeT+6E+/KKgeYceag8b7F/JlIXDsqf
+rflZS6y2ScDuhK7gOdZZtNYYC7aej6iQrVmFxzrP+OgrZOLtmw4V3LwuB5U
Bk0F6fyjo7y9165MWusBv0HtV9kFOlK/Frs38YQeZN955MwzT0eHJos/dTjp
QUPpz5GfM3QU/nlmweWcHrR8ufAjeYqO5ulBe66E6MHPMI501hE66tJN/MAo
0INDm8aFZr7Q0ZlLeelGhXowINGXPfSZjmYLn7mOFeuB4Ws/i8+f6IiP0jFH
K9WDMYvc7eUf6MiEU1ysukYPhCoOTlxro6PnHxknP3zSA23tfg3eRjoy3lyu
4tuhB2+3lluxv6KjDsPmWeFuPVjreYaYq6ejv5WjkfZ9elCl4FTbU0tHKjnY
o5FfeoBtZPtd+IKs16XvGzOuB7c+zzjnVpP1BCxwtUk9yInvYEl+TkenIi69
85nRg+sHL1eGVJL1asJTheb1gO/Szs++FXQU+u+eS+U/Pej+OLv1XDkd8Wje
V7ZbJvsxVHTTqYyOMs9Xzqyu6kGG4Bm546V09B8vsPmw
       "]]},
     Annotation[#, "Charting`Private`Tag$699263#1"]& ]}, {}, {}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{0, 0},
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  ImagePadding->All,
  Method->{
   "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
    AbsolutePointSize[6], "ScalingFunctions" -> None, 
    "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
        (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
         Part[#, 1]], 
        (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
         Part[#, 2]]}& ), "CopiedValueFunction" -> ({
        (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
         Part[#, 1]], 
        (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
         Part[#, 2]]}& )}},
  PlotRange->{{0, 30}, {-0.04694646427434261, 0.2919486662045587}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.05], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{{3.7389920613450747`*^9, 3.738992087605032*^9}, 
   3.738992254184485*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Plot", "[", 
  RowBox[{
   RowBox[{"Im", "[", 
    RowBox[{
     RowBox[{"-", 
      FractionBox["1", "r"]}], 
     RowBox[{"Log", "[", 
      RowBox[{"r", " ", 
       RowBox[{"ReVcpar", "[", 
        RowBox[{"r", ",", "0.25", ",", "0.99", ",", 
         RowBox[{"\[Alpha]cont", "[", 
          RowBox[{"[", "1", "]"}], "]"}]}], "]"}]}], "]"}]}], "]"}], ",", 
   RowBox[{"{", 
    RowBox[{"r", ",", "0", ",", "30"}], "}"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.738992263719832*^9, 3.738992263927617*^9}}],

Cell[BoxData[
 TemplateBox[{
  "NIntegrate","slwcon",
   "\"Numerical integration converging too slowly; suspect one of the \
following: singularity, value of the integration is 0, highly oscillatory \
integrand, or WorkingPrecision too small.\"",2,19,23,26449285768748730487,
   "Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.73899226479772*^9}],

Cell[BoxData[
 TemplateBox[{
  "NIntegrate","ncvb",
   "\"NIntegrate failed to converge to prescribed accuracy after \
\\!\\(\\*RowBox[{\\\"9\\\"}]\\) recursive bisections in \\!\\(\\*RowBox[{\\\"\
\[Theta]\\\"}]\\) near \\!\\(\\*RowBox[{\\\"{\\\", \\\"\[Theta]\\\", \
\\\"}\\\"}]\\) = \\!\\(\\*RowBox[{\\\"{\\\", \\\"1.4572573357394984`\\\", \
\\\"}\\\"}]\\). NIntegrate obtained \
\\!\\(\\*RowBox[{RowBox[{\\\"0.13623989225638555`\\\", \\\"\[VeryThinSpace]\\\
\"}], \\\"+\\\", RowBox[{\\\"0.2865258930557631`\\\", \\\" \\\", \\\"\
\[ImaginaryI]\\\"}]}]\\) and \
\\!\\(\\*RowBox[{\\\"0.000016962818441117055`\\\"}]\\) for the integral and \
error estimates.\"",2,19,24,26449285768748730487,"Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.7389922649339943`*^9}],

Cell[BoxData[
 GraphicsBox[{{{}, {}, 
    TagBox[
     {RGBColor[0.368417, 0.506779, 0.709798], AbsoluteThickness[1.6], Opacity[
      1.], LineBox[CompressedData["
1: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
165sb1Pgla2U+Mw2gf4HXWuXBA==
       "]]},
     Annotation[#, "Charting`Private`Tag$736862#1"]& ]}, {}, {}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{0, 0},
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  ImagePadding->All,
  Method->{
   "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
    AbsolutePointSize[6], "ScalingFunctions" -> None, 
    "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
        (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
         Part[#, 1]], 
        (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
         Part[#, 2]]}& ), "CopiedValueFunction" -> ({
        (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
         Part[#, 1]], 
        (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
         Part[#, 2]]}& )}},
  PlotRange->{{0, 30}, {-0.6445305294921881, 0.0976549450127236}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.05], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{3.73899226881732*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Integrate", "[", 
  RowBox[{
   RowBox[{
    RowBox[{"f", "[", 
     RowBox[{"x", ",", "y"}], "]"}], 
    RowBox[{"DiracDelta", "[", "x", "]"}], 
    RowBox[{"DiracDelta", "[", 
     RowBox[{"x", "+", "a", "-", "y"}], "]"}]}], ",", 
   RowBox[{"{", 
    RowBox[{"x", ",", 
     RowBox[{"-", "\[Infinity]"}], ",", "\[Infinity]"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"y", ",", 
     RowBox[{"-", "\[Infinity]"}], ",", "\[Infinity]"}], "}"}]}], 
  "]"}]], "Input",
 CellChangeTimes->{{3.73899394027057*^9, 3.73899399560122*^9}}],

Cell[BoxData[
 RowBox[{"f", "[", 
  RowBox[{"0", ",", "a"}], "]"}]], "Output",
 CellChangeTimes->{{3.738993957074009*^9, 3.7389939620526533`*^9}, 
   3.738993996761033*^9}]
}, Open  ]],

Cell[BoxData[
 RowBox[{"(*", 
  RowBox[{"check", " ", "above", " ", "formula", " ", "holds"}], 
  "*)"}]], "Input",
 CellChangeTimes->{{3.738642314121171*^9, 3.738642330890483*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"ReVcparcheck", "[", 
    RowBox[{"r_", ",", "mD_", ",", "v_", ",", "\[Alpha]_"}], "]"}], ":=", 
   RowBox[{
    FractionBox["\[Alpha]", "\[Pi]"], " ", 
    RowBox[{"NIntegrate", "[", 
     RowBox[{
      RowBox[{
       SuperscriptBox["p", "2"], 
       RowBox[{"Sin", "[", "\[Theta]", "]"}], 
       FractionBox[
        RowBox[{"Exp", "[", 
         RowBox[{"\[ImaginaryI]", " ", "r", " ", "p", " ", 
          RowBox[{"Cos", "[", "\[Theta]", "]"}]}], "]"}], 
        RowBox[{
         SuperscriptBox["p", "2"], "+", 
         RowBox[{"Re", "[", 
          RowBox[{"\[CapitalPi]par", "[", 
           RowBox[{"\[Theta]", ",", "v", ",", "mD"}], "]"}], "]"}]}]]}], ",", 
      
      RowBox[{"{", 
       RowBox[{"p", ",", "0", ",", "\[Infinity]"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"\[Theta]", ",", "0", ",", "\[Pi]"}], "}"}]}], "]"}]}]}], 
  ";"}]], "Input",
 CellChangeTimes->{{3.738642337106595*^9, 3.7386424114844513`*^9}, {
  3.7386428211807413`*^9, 3.7386428335730677`*^9}, {3.738643181884482*^9, 
  3.738643189838035*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell["Imaginary Coulombic part", "Subsection",
 CellChangeTimes->{{3.738660131723031*^9, 3.7386601415262136`*^9}, {
  3.738662893565494*^9, 3.7386629017382812`*^9}}],

Cell[CellGroupData[{

Cell["misc", "Subsubsection",
 CellChangeTimes->{{3.738662911942491*^9, 3.738662915610621*^9}}],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"Clear", "[", 
   RowBox[{"r", ",", "\[Theta]"}], "]"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Assuming", "[", 
   RowBox[{
    RowBox[{"\[Theta]", "\[Element]", "Reals"}], ",", 
    RowBox[{"Integrate", "[", 
     RowBox[{
      FractionBox[
       RowBox[{" ", 
        RowBox[{"p", " ", 
         RowBox[{"Exp", "[", 
          RowBox[{"\[ImaginaryI]", " ", "p", " ", "r", " ", 
           RowBox[{"Cos", "[", "\[Theta]", "]"}]}], "]"}]}]}], 
       RowBox[{
        RowBox[{"(", 
         RowBox[{
          SuperscriptBox["p", "2"], "+", "z"}], ")"}], 
        RowBox[{"(", 
         RowBox[{
          SuperscriptBox["p", "2"], "+", 
          RowBox[{"Conjugate", "[", "z", "]"}]}], ")"}]}]], ",", 
      RowBox[{"{", 
       RowBox[{"p", ",", "0", ",", "\[Infinity]"}], "}"}]}], "]"}]}], "]"}], "//",
   "FullSimplify"}]}], "Input",
 CellChangeTimes->{{3.7386672739677896`*^9, 3.7386672828487253`*^9}, {
  3.738667540991694*^9, 3.738667571757865*^9}, {3.7386680373082247`*^9, 
  3.7386680441568823`*^9}}],

Cell[BoxData[
 RowBox[{"ConditionalExpression", "[", 
  RowBox[{
   RowBox[{"-", 
    RowBox[{
     FractionBox["1", 
      RowBox[{"4", " ", 
       RowBox[{"Im", "[", "z", "]"}]}]], 
     RowBox[{"\[ImaginaryI]", " ", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{"2", " ", 
         RowBox[{"Cosh", "[", 
          RowBox[{"r", " ", 
           SqrtBox["z"], " ", 
           RowBox[{"Cos", "[", "\[Theta]", "]"}]}], "]"}], " ", 
         RowBox[{"CosIntegral", "[", 
          RowBox[{
           RowBox[{"-", "\[ImaginaryI]"}], " ", "r", " ", 
           SqrtBox["z"], " ", 
           RowBox[{"Cos", "[", "\[Theta]", "]"}]}], "]"}]}], "-", 
        RowBox[{"2", " ", 
         RowBox[{"Cosh", "[", 
          RowBox[{"r", " ", 
           SqrtBox[
            RowBox[{"Conjugate", "[", "z", "]"}]], " ", 
           RowBox[{"Cos", "[", "\[Theta]", "]"}]}], "]"}], " ", 
         RowBox[{"CosIntegral", "[", 
          RowBox[{
           RowBox[{"-", "\[ImaginaryI]"}], " ", "r", " ", 
           SqrtBox[
            RowBox[{"Conjugate", "[", "z", "]"}]], " ", 
           RowBox[{"Cos", "[", "\[Theta]", "]"}]}], "]"}]}], "+", 
        RowBox[{"\[ImaginaryI]", " ", "\[Pi]", " ", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{"Sinh", "[", 
            RowBox[{"r", " ", 
             SqrtBox["z"], " ", 
             RowBox[{"Cos", "[", "\[Theta]", "]"}]}], "]"}], "-", 
           RowBox[{"Sinh", "[", 
            RowBox[{"r", " ", 
             SqrtBox[
              RowBox[{"Conjugate", "[", "z", "]"}]], " ", 
             RowBox[{"Cos", "[", "\[Theta]", "]"}]}], "]"}]}], ")"}]}], "-", 
        RowBox[{"2", " ", 
         RowBox[{"Sinh", "[", 
          RowBox[{"r", " ", 
           SqrtBox["z"], " ", 
           RowBox[{"Cos", "[", "\[Theta]", "]"}]}], "]"}], " ", 
         RowBox[{"SinhIntegral", "[", 
          RowBox[{"r", " ", 
           SqrtBox["z"], " ", 
           RowBox[{"Cos", "[", "\[Theta]", "]"}]}], "]"}]}], "+", 
        RowBox[{"2", " ", 
         RowBox[{"Sinh", "[", 
          RowBox[{"r", " ", 
           SqrtBox[
            RowBox[{"Conjugate", "[", "z", "]"}]], " ", 
           RowBox[{"Cos", "[", "\[Theta]", "]"}]}], "]"}], " ", 
         RowBox[{"SinhIntegral", "[", 
          RowBox[{"r", " ", 
           SqrtBox[
            RowBox[{"Conjugate", "[", "z", "]"}]], " ", 
           RowBox[{"Cos", "[", "\[Theta]", "]"}]}], "]"}]}]}], ")"}]}]}]}], 
   ",", 
   RowBox[{
    RowBox[{"(", 
     RowBox[{
      RowBox[{"(", 
       RowBox[{
        RowBox[{
         RowBox[{"Cos", "[", "\[Theta]", "]"}], "<", "0"}], "&&", 
        RowBox[{
         RowBox[{"Im", "[", "r", "]"}], "<", "0"}]}], ")"}], "||", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{
         RowBox[{"Cos", "[", "\[Theta]", "]"}], ">", "0"}], "&&", 
        RowBox[{
         RowBox[{"Im", "[", "r", "]"}], ">", "0"}]}], ")"}]}], ")"}], "&&", 
    RowBox[{"(", 
     RowBox[{
      RowBox[{"(", 
       RowBox[{
        RowBox[{"z", "\[NotEqual]", 
         RowBox[{"Re", "[", "z", "]"}]}], "&&", 
        RowBox[{
         RowBox[{"Re", "[", 
          SqrtBox["z"], "]"}], "\[NotEqual]", "0"}], "&&", 
        RowBox[{
         RowBox[{"Re", "[", 
          SqrtBox[
           RowBox[{"Conjugate", "[", "z", "]"}]], "]"}], "\[NotEqual]", 
         "0"}]}], ")"}], "||", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{
         RowBox[{"Re", "[", 
          SqrtBox["z"], "]"}], ">", "0"}], "&&", 
        RowBox[{
         RowBox[{"Re", "[", 
          SqrtBox[
           RowBox[{"Conjugate", "[", "z", "]"}]], "]"}], ">", "0"}], "&&", 
        RowBox[{
         RowBox[{"Re", "[", "z", "]"}], "\[GreaterEqual]", "0"}]}], ")"}]}], 
     ")"}]}]}], "]"}]], "Output",
 CellChangeTimes->{3.738667368237628*^9, 3.738667569276925*^9, 
  3.738668033611247*^9, 3.7386681315981617`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"Clear", "[", 
   RowBox[{"r", ",", "\[Theta]"}], "]"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Assuming", "[", 
   RowBox[{
    RowBox[{"\[Theta]", "\[Element]", "Reals"}], ",", 
    RowBox[{"Integrate", "[", 
     RowBox[{
      FractionBox[
       RowBox[{" ", 
        RowBox[{"p", " ", 
         RowBox[{"Exp", "[", 
          RowBox[{"\[ImaginaryI]", " ", "p", " ", "r", " ", 
           RowBox[{"Cos", "[", "\[Theta]", "]"}]}], "]"}]}]}], 
       RowBox[{
        RowBox[{"(", 
         RowBox[{
          SuperscriptBox["p", "2"], "+", "z"}], ")"}], 
        RowBox[{"(", 
         RowBox[{
          SuperscriptBox["p", "2"], "+", 
          RowBox[{"Conjugate", "[", "z", "]"}]}], ")"}]}]], ",", 
      RowBox[{"{", 
       RowBox[{"p", ",", 
        RowBox[{"-", "\[Infinity]"}], ",", "0"}], "}"}]}], "]"}]}], "]"}], "//",
   "FullSimplify"}]}], "Input",
 CellChangeTimes->{{3.7386672916813917`*^9, 3.7386672967453337`*^9}, {
  3.738667580640306*^9, 3.7386675844784117`*^9}, {3.7386681570418053`*^9, 
  3.738668164225713*^9}}],

Cell[BoxData[
 RowBox[{"ConditionalExpression", "[", 
  RowBox[{
   RowBox[{"-", 
    RowBox[{
     FractionBox["1", 
      RowBox[{"4", " ", 
       RowBox[{"Im", "[", "z", "]"}]}]], 
     RowBox[{"\[ImaginaryI]", " ", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{
         RowBox[{"-", "2"}], " ", 
         RowBox[{"Cosh", "[", 
          RowBox[{"r", " ", 
           SqrtBox["z"], " ", 
           RowBox[{"Cos", "[", "\[Theta]", "]"}]}], "]"}], " ", 
         RowBox[{"CosIntegral", "[", 
          RowBox[{"\[ImaginaryI]", " ", "r", " ", 
           SqrtBox["z"], " ", 
           RowBox[{"Cos", "[", "\[Theta]", "]"}]}], "]"}]}], "+", 
        RowBox[{"2", " ", 
         RowBox[{"Cosh", "[", 
          RowBox[{"r", " ", 
           SqrtBox[
            RowBox[{"Conjugate", "[", "z", "]"}]], " ", 
           RowBox[{"Cos", "[", "\[Theta]", "]"}]}], "]"}], " ", 
         RowBox[{"CosIntegral", "[", 
          RowBox[{"\[ImaginaryI]", " ", "r", " ", 
           SqrtBox[
            RowBox[{"Conjugate", "[", "z", "]"}]], " ", 
           RowBox[{"Cos", "[", "\[Theta]", "]"}]}], "]"}]}], "+", 
        RowBox[{"\[ImaginaryI]", " ", "\[Pi]", " ", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{"Sinh", "[", 
            RowBox[{"r", " ", 
             SqrtBox["z"], " ", 
             RowBox[{"Cos", "[", "\[Theta]", "]"}]}], "]"}], "-", 
           RowBox[{"Sinh", "[", 
            RowBox[{"r", " ", 
             SqrtBox[
              RowBox[{"Conjugate", "[", "z", "]"}]], " ", 
             RowBox[{"Cos", "[", "\[Theta]", "]"}]}], "]"}]}], ")"}]}], "+", 
        RowBox[{"2", " ", 
         RowBox[{"Sinh", "[", 
          RowBox[{"r", " ", 
           SqrtBox["z"], " ", 
           RowBox[{"Cos", "[", "\[Theta]", "]"}]}], "]"}], " ", 
         RowBox[{"SinhIntegral", "[", 
          RowBox[{"r", " ", 
           SqrtBox["z"], " ", 
           RowBox[{"Cos", "[", "\[Theta]", "]"}]}], "]"}]}], "-", 
        RowBox[{"2", " ", 
         RowBox[{"Sinh", "[", 
          RowBox[{"r", " ", 
           SqrtBox[
            RowBox[{"Conjugate", "[", "z", "]"}]], " ", 
           RowBox[{"Cos", "[", "\[Theta]", "]"}]}], "]"}], " ", 
         RowBox[{"SinhIntegral", "[", 
          RowBox[{"r", " ", 
           SqrtBox[
            RowBox[{"Conjugate", "[", "z", "]"}]], " ", 
           RowBox[{"Cos", "[", "\[Theta]", "]"}]}], "]"}]}]}], ")"}]}]}]}], 
   ",", 
   RowBox[{
    RowBox[{"(", 
     RowBox[{
      RowBox[{"(", 
       RowBox[{
        RowBox[{
         RowBox[{"Im", "[", "r", "]"}], ">", "0"}], "&&", 
        RowBox[{
         RowBox[{"Cos", "[", "\[Theta]", "]"}], "<", "0"}]}], ")"}], "||", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{
         RowBox[{"Cos", "[", "\[Theta]", "]"}], ">", "0"}], "&&", 
        RowBox[{
         RowBox[{"Im", "[", "r", "]"}], "<", "0"}]}], ")"}]}], ")"}], "&&", 
    RowBox[{"(", 
     RowBox[{
      RowBox[{"(", 
       RowBox[{
        RowBox[{"z", "\[NotEqual]", 
         RowBox[{"Re", "[", "z", "]"}]}], "&&", 
        RowBox[{
         RowBox[{"Re", "[", 
          SqrtBox["z"], "]"}], "\[NotEqual]", "0"}], "&&", 
        RowBox[{
         RowBox[{"Re", "[", 
          SqrtBox[
           RowBox[{"Conjugate", "[", "z", "]"}]], "]"}], "\[NotEqual]", 
         "0"}]}], ")"}], "||", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{
         RowBox[{"Re", "[", 
          SqrtBox["z"], "]"}], ">", "0"}], "&&", 
        RowBox[{
         RowBox[{"Re", "[", 
          SqrtBox[
           RowBox[{"Conjugate", "[", "z", "]"}]], "]"}], ">", "0"}], "&&", 
        RowBox[{
         RowBox[{"Re", "[", "z", "]"}], "\[GreaterEqual]", "0"}]}], ")"}]}], 
     ")"}]}]}], "]"}]], "Output",
 CellChangeTimes->{3.738667458894919*^9, 3.738668254535911*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"-", 
    RowBox[{
     FractionBox["1", 
      RowBox[{"4", " ", 
       RowBox[{"Im", "[", "z", "]"}]}]], "\[ImaginaryI]", " ", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{"2", " ", 
        RowBox[{"Cosh", "[", 
         RowBox[{"r", " ", 
          SqrtBox["z"], " ", 
          RowBox[{"Cos", "[", "\[Theta]", "]"}]}], "]"}], " ", 
        RowBox[{"CosIntegral", "[", 
         RowBox[{
          RowBox[{"-", "\[ImaginaryI]"}], " ", "r", " ", 
          SqrtBox["z"], " ", 
          RowBox[{"Cos", "[", "\[Theta]", "]"}]}], "]"}]}], "-", 
       RowBox[{"2", " ", 
        RowBox[{"Cosh", "[", 
         RowBox[{"r", " ", 
          SqrtBox[
           RowBox[{"Conjugate", "[", "z", "]"}]], " ", 
          RowBox[{"Cos", "[", "\[Theta]", "]"}]}], "]"}], " ", 
        RowBox[{"CosIntegral", "[", 
         RowBox[{
          RowBox[{"-", "\[ImaginaryI]"}], " ", "r", " ", 
          SqrtBox[
           RowBox[{"Conjugate", "[", "z", "]"}]], " ", 
          RowBox[{"Cos", "[", "\[Theta]", "]"}]}], "]"}]}], "+", 
       RowBox[{"\[ImaginaryI]", " ", "\[Pi]", " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"Sinh", "[", 
           RowBox[{"r", " ", 
            SqrtBox["z"], " ", 
            RowBox[{"Cos", "[", "\[Theta]", "]"}]}], "]"}], "-", 
          RowBox[{"Sinh", "[", 
           RowBox[{"r", " ", 
            SqrtBox[
             RowBox[{"Conjugate", "[", "z", "]"}]], " ", 
            RowBox[{"Cos", "[", "\[Theta]", "]"}]}], "]"}]}], ")"}]}], "-", 
       RowBox[{"2", " ", 
        RowBox[{"Sinh", "[", 
         RowBox[{"r", " ", 
          SqrtBox["z"], " ", 
          RowBox[{"Cos", "[", "\[Theta]", "]"}]}], "]"}], " ", 
        RowBox[{"SinhIntegral", "[", 
         RowBox[{"r", " ", 
          SqrtBox["z"], " ", 
          RowBox[{"Cos", "[", "\[Theta]", "]"}]}], "]"}]}], "+", 
       RowBox[{"2", " ", 
        RowBox[{"Sinh", "[", 
         RowBox[{"r", " ", 
          SqrtBox[
           RowBox[{"Conjugate", "[", "z", "]"}]], " ", 
          RowBox[{"Cos", "[", "\[Theta]", "]"}]}], "]"}], " ", 
        RowBox[{"SinhIntegral", "[", 
         RowBox[{"r", " ", 
          SqrtBox[
           RowBox[{"Conjugate", "[", "z", "]"}]], " ", 
          RowBox[{"Cos", "[", "\[Theta]", "]"}]}], "]"}]}]}], ")"}]}]}], "+", 
   
   RowBox[{
    FractionBox["1", 
     RowBox[{"4", " ", 
      RowBox[{"Im", "[", "z", "]"}]}]], "\[ImaginaryI]", " ", 
    RowBox[{"(", 
     RowBox[{
      RowBox[{
       RowBox[{"-", "2"}], " ", 
       RowBox[{"Cosh", "[", 
        RowBox[{"r", " ", 
         SqrtBox["z"], " ", 
         RowBox[{"Cos", "[", "\[Theta]", "]"}]}], "]"}], " ", 
       RowBox[{"CosIntegral", "[", 
        RowBox[{"\[ImaginaryI]", " ", "r", " ", 
         SqrtBox["z"], " ", 
         RowBox[{"Cos", "[", "\[Theta]", "]"}]}], "]"}]}], "+", 
      RowBox[{"2", " ", 
       RowBox[{"Cosh", "[", 
        RowBox[{"r", " ", 
         SqrtBox[
          RowBox[{"Conjugate", "[", "z", "]"}]], " ", 
         RowBox[{"Cos", "[", "\[Theta]", "]"}]}], "]"}], " ", 
       RowBox[{"CosIntegral", "[", 
        RowBox[{"\[ImaginaryI]", " ", "r", " ", 
         SqrtBox[
          RowBox[{"Conjugate", "[", "z", "]"}]], " ", 
         RowBox[{"Cos", "[", "\[Theta]", "]"}]}], "]"}]}], "+", 
      RowBox[{"\[ImaginaryI]", " ", "\[Pi]", " ", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"Sinh", "[", 
          RowBox[{"r", " ", 
           SqrtBox["z"], " ", 
           RowBox[{"Cos", "[", "\[Theta]", "]"}]}], "]"}], "-", 
         RowBox[{"Sinh", "[", 
          RowBox[{"r", " ", 
           SqrtBox[
            RowBox[{"Conjugate", "[", "z", "]"}]], " ", 
           RowBox[{"Cos", "[", "\[Theta]", "]"}]}], "]"}]}], ")"}]}], "+", 
      RowBox[{"2", " ", 
       RowBox[{"Sinh", "[", 
        RowBox[{"r", " ", 
         SqrtBox["z"], " ", 
         RowBox[{"Cos", "[", "\[Theta]", "]"}]}], "]"}], " ", 
       RowBox[{"SinhIntegral", "[", 
        RowBox[{"r", " ", 
         SqrtBox["z"], " ", 
         RowBox[{"Cos", "[", "\[Theta]", "]"}]}], "]"}]}], "-", 
      RowBox[{"2", " ", 
       RowBox[{"Sinh", "[", 
        RowBox[{"r", " ", 
         SqrtBox[
          RowBox[{"Conjugate", "[", "z", "]"}]], " ", 
         RowBox[{"Cos", "[", "\[Theta]", "]"}]}], "]"}], " ", 
       RowBox[{"SinhIntegral", "[", 
        RowBox[{"r", " ", 
         SqrtBox[
          RowBox[{"Conjugate", "[", "z", "]"}]], " ", 
         RowBox[{"Cos", "[", "\[Theta]", "]"}]}], "]"}]}]}], ")"}]}]}], "//", 
  "FullSimplify"}]], "Input",
 CellChangeTimes->{{3.738668220072628*^9, 3.738668228445654*^9}, {
  3.738668266155243*^9, 3.738668298059812*^9}}],

Cell[BoxData[
 RowBox[{"-", 
  RowBox[{
   FractionBox["1", 
    RowBox[{"2", " ", 
     RowBox[{"Im", "[", "z", "]"}]}]], 
   RowBox[{"\[ImaginaryI]", " ", 
    RowBox[{"(", 
     RowBox[{
      RowBox[{
       RowBox[{"Cosh", "[", 
        RowBox[{"r", " ", 
         SqrtBox["z"], " ", 
         RowBox[{"Cos", "[", "\[Theta]", "]"}]}], "]"}], " ", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"CosIntegral", "[", 
          RowBox[{
           RowBox[{"-", "\[ImaginaryI]"}], " ", "r", " ", 
           SqrtBox["z"], " ", 
           RowBox[{"Cos", "[", "\[Theta]", "]"}]}], "]"}], "+", 
         RowBox[{"CosIntegral", "[", 
          RowBox[{"\[ImaginaryI]", " ", "r", " ", 
           SqrtBox["z"], " ", 
           RowBox[{"Cos", "[", "\[Theta]", "]"}]}], "]"}]}], ")"}]}], "-", 
      RowBox[{
       RowBox[{"Cosh", "[", 
        RowBox[{"r", " ", 
         SqrtBox[
          RowBox[{"Conjugate", "[", "z", "]"}]], " ", 
         RowBox[{"Cos", "[", "\[Theta]", "]"}]}], "]"}], " ", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"CosIntegral", "[", 
          RowBox[{
           RowBox[{"-", "\[ImaginaryI]"}], " ", "r", " ", 
           SqrtBox[
            RowBox[{"Conjugate", "[", "z", "]"}]], " ", 
           RowBox[{"Cos", "[", "\[Theta]", "]"}]}], "]"}], "+", 
         RowBox[{"CosIntegral", "[", 
          RowBox[{"\[ImaginaryI]", " ", "r", " ", 
           SqrtBox[
            RowBox[{"Conjugate", "[", "z", "]"}]], " ", 
           RowBox[{"Cos", "[", "\[Theta]", "]"}]}], "]"}]}], ")"}]}], "-", 
      RowBox[{"2", " ", 
       RowBox[{"Sinh", "[", 
        RowBox[{"r", " ", 
         SqrtBox["z"], " ", 
         RowBox[{"Cos", "[", "\[Theta]", "]"}]}], "]"}], " ", 
       RowBox[{"SinhIntegral", "[", 
        RowBox[{"r", " ", 
         SqrtBox["z"], " ", 
         RowBox[{"Cos", "[", "\[Theta]", "]"}]}], "]"}]}], "+", 
      RowBox[{"2", " ", 
       RowBox[{"Sinh", "[", 
        RowBox[{"r", " ", 
         SqrtBox[
          RowBox[{"Conjugate", "[", "z", "]"}]], " ", 
         RowBox[{"Cos", "[", "\[Theta]", "]"}]}], "]"}], " ", 
       RowBox[{"SinhIntegral", "[", 
        RowBox[{"r", " ", 
         SqrtBox[
          RowBox[{"Conjugate", "[", "z", "]"}]], " ", 
         RowBox[{"Cos", "[", "\[Theta]", "]"}]}], "]"}]}]}], 
     ")"}]}]}]}]], "Output",
 CellChangeTimes->{3.738668293964458*^9, 3.7386683340371733`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"r", "=", "2"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"z", "=", "3"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"\[Theta]", "=", "0"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{"N", "[", 
  RowBox[{
   RowBox[{"CosIntegral", "[", 
    RowBox[{
     RowBox[{"-", "\[ImaginaryI]"}], " ", "r", " ", 
     SqrtBox["z"], " ", 
     RowBox[{"Cos", "[", "\[Theta]", "]"}]}], "]"}], "+", 
   RowBox[{"CosIntegral", "[", 
    RowBox[{"\[ImaginaryI]", " ", "r", " ", 
     SqrtBox["z"], " ", 
     RowBox[{"Cos", "[", "\[Theta]", "]"}]}], "]"}]}], "]"}]}], "Input",
 CellChangeTimes->{{3.738668365828226*^9, 3.738668396932605*^9}}],

Cell[BoxData[
 RowBox[{"13.58272403272149`", "\[VeryThinSpace]", "+", 
  RowBox[{"0.`", " ", "\[ImaginaryI]"}]}]], "Output",
 CellChangeTimes->{{3.738668384394133*^9, 3.7386683977702713`*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"2", " ", 
  RowBox[{"N", "[", 
   RowBox[{"CoshIntegral", "[", 
    RowBox[{"r", 
     SqrtBox["z"], 
     RowBox[{"Cos", "[", "\[Theta]", "]"}]}], "]"}], "]"}]}]], "Input",
 CellChangeTimes->{{3.738668399825761*^9, 3.738668427549138*^9}}],

Cell[BoxData["13.58272403272149`"], "Output",
 CellChangeTimes->{{3.738668417084566*^9, 3.738668427909939*^9}}]
}, Open  ]]
}, Closed]],

Cell[CellGroupData[{

Cell["sol", "Subsubsection",
 CellChangeTimes->{{3.7386629205473623`*^9, 3.738662926218204*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"ImVcparcheck", "[", 
   RowBox[{"r_", ",", "mD_", ",", "v_", ",", "\[Alpha]_", ",", "T_"}], "]"}], 
  ":=", 
  RowBox[{
   RowBox[{"-", "\[Alpha]"}], " ", "T", " ", 
   SuperscriptBox["mD", "2"], 
   SuperscriptBox[
    RowBox[{"(", 
     RowBox[{"1", "-", 
      SuperscriptBox["v", "2"]}], ")"}], 
    RowBox[{"3", "/", "2"}]], 
   RowBox[{"NIntegrate", "[", 
    RowBox[{
     RowBox[{
      RowBox[{"Sin", "[", "\[Theta]", "]"}], 
      FractionBox[
       RowBox[{"2", "+", 
        RowBox[{
         SuperscriptBox["v", "2"], 
         SuperscriptBox[
          RowBox[{"Sin", "[", "\[Theta]", "]"}], "2"]}]}], 
       SuperscriptBox[
        RowBox[{"(", 
         RowBox[{"1", "+", 
          RowBox[{
           SuperscriptBox["v", "2"], 
           SuperscriptBox[
            RowBox[{"Sin", "[", "\[Theta]", "]"}], "2"]}]}], ")"}], 
        RowBox[{"5", "/", "2"}]]], 
      FractionBox[
       RowBox[{"p", " ", 
        RowBox[{"Exp", "[", 
         RowBox[{"\[ImaginaryI]", " ", "p", " ", "r", " ", 
          RowBox[{"Cos", "[", "\[Theta]", "]"}]}], "]"}]}], 
       RowBox[{
        RowBox[{"(", 
         RowBox[{
          SuperscriptBox["p", "2"], "+", 
          RowBox[{"\[CapitalPi]par", "[", 
           RowBox[{"\[Theta]", ",", "v", ",", "mD"}], "]"}]}], ")"}], 
        RowBox[{"(", 
         RowBox[{
          SuperscriptBox["p", "2"], "+", 
          RowBox[{"Conjugate", "[", 
           RowBox[{"\[CapitalPi]par", "[", 
            RowBox[{"\[Theta]", ",", "v", ",", "mD"}], "]"}], "]"}]}], 
         ")"}]}]]}], ",", 
     RowBox[{"{", 
      RowBox[{"p", ",", "0", ",", "\[Infinity]"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"\[Theta]", ",", "0", ",", "\[Pi]"}], "}"}]}], 
    "]"}]}]}]], "Input",
 CellChangeTimes->{{3.7386638629128237`*^9, 3.738664073970587*^9}, {
  3.7386641169558363`*^9, 3.738664190887348*^9}, {3.738666959482628*^9, 
  3.738666959914946*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"ImVcparcheck", "[", 
  RowBox[{"10", ",", "0.15", ",", "0.5", ",", 
   RowBox[{"\[Alpha]cont", "[", 
    RowBox[{"[", "1", "]"}], "]"}], ",", "0.155"}], "]"}]], "Input",
 CellChangeTimes->{{3.738664196983529*^9, 3.738664218148699*^9}, {
  3.738664465266707*^9, 3.738664465353011*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"-", "0.03386857902159594`"}], "+", 
  RowBox[{"5.594364633491433`*^-13", " ", "\[ImaginaryI]"}]}]], "Output",
 CellChangeTimes->{3.738664242566061*^9, 3.738664499853271*^9, 
  3.738898807188005*^9}]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{"ImVcparLT", "[", 
   RowBox[{"r_", ",", "mD_", ",", "v_", ",", "\[Alpha]_", ",", "T_"}], "]"}], 
  ":=", 
  RowBox[{"\[Alpha]", " ", "T", " ", 
   SuperscriptBox["mD", "2"], 
   SuperscriptBox[
    RowBox[{"(", 
     RowBox[{"1", "-", 
      SuperscriptBox["v", "2"]}], ")"}], 
    RowBox[{"3", "/", "2"}]], 
   RowBox[{"NIntegrate", "[", 
    RowBox[{
     RowBox[{
      RowBox[{"Sin", "[", "\[Theta]", "]"}], 
      FractionBox[
       RowBox[{"2", "+", 
        RowBox[{
         SuperscriptBox["v", "2"], 
         SuperscriptBox[
          RowBox[{"Sin", "[", "\[Theta]", "]"}], "2"]}]}], 
       SuperscriptBox[
        RowBox[{"(", 
         RowBox[{"1", "+", 
          RowBox[{
           SuperscriptBox["v", "2"], 
           SuperscriptBox[
            RowBox[{"Sin", "[", "\[Theta]", "]"}], "2"]}]}], ")"}], 
        RowBox[{"5", "/", "2"}]]], 
      FractionBox["1", 
       RowBox[{"\[ImaginaryI]", " ", 
        RowBox[{"Im", "[", 
         RowBox[{"\[CapitalPi]par", "[", 
          RowBox[{"\[Theta]", ",", "v", ",", "mD"}], "]"}], "]"}]}]], 
      RowBox[{"(", 
       RowBox[{
        RowBox[{
         RowBox[{"Sinh", "[", 
          RowBox[{"r", " ", 
           RowBox[{"Cos", "[", "\[Theta]", "]"}], 
           SqrtBox[
            RowBox[{"\[CapitalPi]par", "[", 
             RowBox[{"\[Theta]", ",", "v", ",", "mD"}], "]"}]]}], "]"}], 
         RowBox[{"SinhIntegral", "[", 
          RowBox[{"r", " ", 
           RowBox[{"Cos", "[", "\[Theta]", "]"}], 
           SqrtBox[
            RowBox[{"\[CapitalPi]par", "[", 
             RowBox[{"\[Theta]", ",", "v", ",", "mD"}], "]"}]]}], "]"}]}], 
        "-", 
        RowBox[{
         RowBox[{"Cosh", "[", 
          RowBox[{"r", " ", 
           RowBox[{"Cos", "[", "\[Theta]", "]"}], 
           SqrtBox[
            RowBox[{"\[CapitalPi]par", "[", 
             RowBox[{"\[Theta]", ",", "v", ",", "mD"}], "]"}]]}], "]"}], 
         RowBox[{"CoshIntegral", "[", 
          RowBox[{"r", " ", 
           RowBox[{"Cos", "[", "\[Theta]", "]"}], 
           SqrtBox[
            RowBox[{"\[CapitalPi]par", "[", 
             RowBox[{"\[Theta]", ",", "v", ",", "mD"}], "]"}]]}], "]"}]}], 
        "-", 
        RowBox[{
         RowBox[{"Sinh", "[", 
          RowBox[{"r", " ", 
           RowBox[{"Cos", "[", "\[Theta]", "]"}], 
           SqrtBox[
            RowBox[{"Conjugate", "[", 
             RowBox[{"\[CapitalPi]par", "[", 
              RowBox[{"\[Theta]", ",", "v", ",", "mD"}], "]"}], "]"}]]}], 
          "]"}], 
         RowBox[{"SinhIntegral", "[", 
          RowBox[{"r", " ", 
           RowBox[{"Cos", "[", "\[Theta]", "]"}], 
           SqrtBox[
            RowBox[{"Conjugate", "[", 
             RowBox[{"\[CapitalPi]par", "[", 
              RowBox[{"\[Theta]", ",", "v", ",", "mD"}], "]"}], "]"}]]}], 
          "]"}]}], "+", 
        RowBox[{
         RowBox[{"Cosh", "[", 
          RowBox[{"r", " ", 
           RowBox[{"Cos", "[", "\[Theta]", "]"}], 
           SqrtBox[
            RowBox[{"Conjugate", "[", 
             RowBox[{"\[CapitalPi]par", "[", 
              RowBox[{"\[Theta]", ",", "v", ",", "mD"}], "]"}], "]"}]]}], 
          "]"}], 
         RowBox[{"CoshIntegral", "[", 
          RowBox[{"r", " ", 
           RowBox[{"Cos", "[", "\[Theta]", "]"}], 
           SqrtBox[
            RowBox[{"Conjugate", "[", 
             RowBox[{"\[CapitalPi]par", "[", 
              RowBox[{"\[Theta]", ",", "v", ",", "mD"}], "]"}], "]"}]]}], 
          "]"}]}]}], ")"}]}], ",", 
     RowBox[{"{", 
      RowBox[{"\[Theta]", ",", "0", ",", 
       RowBox[{"\[Pi]", "/", "2"}]}], "}"}]}], "]"}]}]}]], "Input",
 CellChangeTimes->{{3.738664226771593*^9, 3.738664228908372*^9}, {
  3.738664259812797*^9, 3.7386642862138968`*^9}, {3.738664720790042*^9, 
  3.738664890318368*^9}, {3.738666961312306*^9, 3.7386669617411337`*^9}, {
  3.738898832454741*^9, 3.738898838710866*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"ImVcparLT", "[", 
  RowBox[{"10", ",", "0.15", ",", "0.5", ",", 
   RowBox[{"\[Alpha]cont", "[", 
    RowBox[{"[", "1", "]"}], "]"}], ",", "0.155"}], "]"}]], "Input",
 CellChangeTimes->{{3.7386648961484632`*^9, 3.738664922178122*^9}, {
  3.738664980076631*^9, 3.7386649801581373`*^9}, {3.738667107278121*^9, 
  3.738667109739457*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"-", "0.03386857909814139`"}], "-", 
  RowBox[{"1.811806565077113`*^-18", " ", "\[ImaginaryI]"}]}]], "Output",
 CellChangeTimes->{
  3.738664922700922*^9, 3.738664980815501*^9, {3.7386671078710938`*^9, 
   3.738667110193246*^9}, 3.738898765743555*^9, 3.738898842228732*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Plot", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{"Re", "[", 
      RowBox[{"ImVcparLT", "[", 
       RowBox[{"r", ",", "0.15", ",", "0.0001", ",", 
        RowBox[{"\[Alpha]cont", "[", 
         RowBox[{"[", "1", "]"}], "]"}], ",", "0.155"}], "]"}], "]"}], ",", 
     RowBox[{"Re", "[", 
      RowBox[{"ImVcparLT", "[", 
       RowBox[{"r", ",", "0.15", ",", "0.2", ",", 
        RowBox[{"\[Alpha]cont", "[", 
         RowBox[{"[", "1", "]"}], "]"}], ",", "0.155"}], "]"}], "]"}], ",", 
     RowBox[{"Re", "[", 
      RowBox[{"ImVcparLT", "[", 
       RowBox[{"r", ",", "0.15", ",", "0.4", ",", 
        RowBox[{"\[Alpha]cont", "[", 
         RowBox[{"[", "1", "]"}], "]"}], ",", "0.155"}], "]"}], "]"}], ",", 
     RowBox[{"Re", "[", 
      RowBox[{"ImVcparLT", "[", 
       RowBox[{"r", ",", "0.15", ",", "0.6", ",", 
        RowBox[{"\[Alpha]cont", "[", 
         RowBox[{"[", "1", "]"}], "]"}], ",", "0.155"}], "]"}], "]"}], ",", 
     RowBox[{"Re", "[", 
      RowBox[{"ImVcparLT", "[", 
       RowBox[{"r", ",", "0.15", ",", "0.8", ",", 
        RowBox[{"\[Alpha]cont", "[", 
         RowBox[{"[", "1", "]"}], "]"}], ",", "0.155"}], "]"}], "]"}]}], 
    "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"r", ",", "0", ",", "10"}], "}"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.7389003258715277`*^9, 3.7389003618831367`*^9}, {
  3.7389004345779057`*^9, 3.738900474650386*^9}, {3.738900511229087*^9, 
  3.738900513931164*^9}, {3.738900559185728*^9, 3.738900564267439*^9}, {
  3.738902500828834*^9, 3.738902524473331*^9}}],

Cell[BoxData[
 GraphicsBox[{{{}, {}, 
    TagBox[
     {RGBColor[0.368417, 0.506779, 0.709798], AbsoluteThickness[1.6], Opacity[
      1.], LineBox[CompressedData["
1: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
ZZaP/g/Sajpp
       "]]},
     Annotation[#, "Charting`Private`Tag$1648899#1"]& ], 
    TagBox[
     {RGBColor[0.880722, 0.611041, 0.142051], AbsoluteThickness[1.6], Opacity[
      1.], LineBox[CompressedData["
1:eJwV0Hk41PsXB3AMypIbWiw1ZoxSUkS/itLnI3XdcEuibkouF2OviKSSSFHI
lhDXrpTEzCBLznzHUnYZIku5JuWS7FnL/f7+OM/7ef1zzvM+dPvzFo4iQkJC
weT8P1MC7MV3Otw70FewJlxBjAfVfJrZKZoL8jxzrG096eXaymAa7Qrq2CM+
sJa0TExxgWRXEBI4VfbJkU7hRqiI0cLQx63dnTKkNcccIpeZ99F7Ie0+CdJ9
Mn//XOqMQXg5e5ZCWi1HYvfC4gMUn2qm9UOUB+4GPh6zKonIMXDy7gxpdnt/
1rRRMhJPurp6lPSCm1nvBDMV3aIp1ghIpwn3hs0eTkcxN88/f0/6UFP0pu+d
GcjTpbCpmfRQgjEx7ZKFAp6yt1aRDnf4cXZqMRslWy1VF5PmLzrHjavkIsPD
urWPSPu+pmqPFT5FIY3COhGklWLbG0aN8tD67k9D10nba2DKCPMFunGz3dCG
tMiif8v0tQJkGxA8ZEq6vd9q4/ThQnTGPUagR9ovT6p0spOFvDO/fJAnbRLz
WXwyjY18zgkLlik82OBHWE64cFDfk01GI6S5RpfHxxaLkFuXPZVLekXPgPqo
SikKHVH2sCfdxX3l83WoFOkLXwk4QvppTkLVSGEZcry0Zk6L9FGvo7bDRhWI
07Rv66IID+IlyuK/MAEFNlVk3yXNuWzi5a3ARd5b3ih7kE4e3qM4dY2LTF4m
UY6R9myVY04eJlB0eL2mLGm55DciE508FHvWS/i+MA8WZYpzL+yvQkKyYqoe
pD/dzDQfT6tC0SI6FSaki5kBf4+5VKMQ/j9/ipK21t2l/22xBqla/xF8UYgH
6fWpF0dU6lBH1lif7jIB0wlFGh/D69D7FmVPcdK/MhsEbfN1KPHulGfXTwK+
Umatyvj1aLu8RK0/6b0GR/XD7jSimGpe/8sfBLS+WBJRH2tBhiv6fJSXCLhR
r2my05aPWDVtywFzBDwpLNn87AEf2fkPyxmSbks4SNnUyEdLuhl5IqTVmH9U
KOi1o1obdd9bswTUU27tEJLvQJ3EswtB3wlYZ9Aj11L7DvmuX+vnPE1A/ouw
Hvcd3ej2MFOnf4yAYbnhcBO7bvTAaiU9kbS6r8mBLXHdCNttZB8nnbZfKl0w
340eURd4xDcCYurCnaxrepBp1rOklFECfAX3J4zP9qGTD09dPDRCQKpUQ7Ds
4X70rTr8vflnApjobeJXLwFKcdYa8+4hQCjje1nPPQEKEzVvUySdILqhtz5L
gCJKtT2gm4A3dU7U3HcCpJOzskGC9BbLpQxH/U8oNPOD5qMuAoac1fM+CA8i
G62s4oIOAlxjrle2Rn1GzbedDZ+0EOA5uFXAyf8XFXgNufN5BEjSb6l/3DuO
XPfof2/NJCBydYNG+p9T6O7jAr9LwQTY91gCpfE76uoZb9e1IeBizS378+oL
KE6pnf3PLgIKL0ifUDjyA/mV++5QW0VA+lW3Ye1TQtj2EEVaqp8LQalLx6e/
CuN9bonTxzhcEOL34wp/Cg637UhWCeXC5ktOfpYaYrjRbVfg0EkufJp5eFLq
lTiOWn/3+Kw6F0wGXa/HXFyJDQ8knD4yBHD0U9Q2KlUS26UoVUwGAgxX2Qe+
eS6Fq/ZpI2cVgB2y7zYa2a7Cd67mWsRzKkESzdj1TsngitPjajTzSjAetZ5V
tVqNVR+bxecMvIIunoOwtaYsjhr286jwfQVFodXnaDOymL7398h22VfgJObT
39wshyXTXBdPZFXAX15Xi6ST5PHqD/lLKgcqQIu5rdnMbg0umbxpLtddDi1y
mlI+emvx2zHX8kaPcijPD3qkSVmHd+qHOW2QKIerwhrmjX3rsMzX9mO+yWUg
2ev/mydnPXZKTRa31SmDwRx6XOo1BYz7fPhCraUQt0VRtNRKEef+8q5AwqkU
opKcXtvRlHACH7q7KKVgHWfTLP1FCV/R4B63yHoJc4ey51MrlbHLiENgmMFL
EAwe9OPd2YDbxh+43/hQAhkGO5Wb7DbiNa5Pw7z9SuB5iI8sczsVmw2miKso
lcAdq79MKTNU7Gt0KDa6shj+15uee6dJBfNljcsszxZDwtZHz5tMabi7f82V
POFiuMGNSDAtpeGInTn82LQi+F3ZKrtejY5npu6Feh4sAkPP12dkw+jYwnf8
SP4IB1I32Ks1ztBxp43ut8ZIDqhVPY4/ekYVG2/LpO7W40DUdp5GW6Uqbp3Q
Fj33mQ1OU6Jv6zQY+L3r2FJ+BBvsCydpYfcZ+Pzt3JBf9rPBPejEkkk0A3eN
RtzL1meDzwlOp3QsA9NVTR7v02ND6IxPZFQ8A/9QMaU572ZDvt784sMUBraM
vqzA02bDPLH8LucZA889LKX7b2JDVJt0RPVrBu7V4CYuyLAhKdPD+XYduU9z
85nYVWzIvNRs9FsDA5fbuetoSrOheF3UQkMzA1dYJKmek2BDr7W8M7+DgSMj
giSqKGxQFygaDQgYWK+WMxE1xwJtjj81a5CBTxvvld02ywL9kJ55xy8M7OmQ
+mvNDAvM1FMK/h1mYNo+xan5SRZ4udGoExMMnMfiWjiMsuDa/pvzrCmyv5cT
fXmEBSGrBtovzTCwnfmEWNIwCxJeZN6bmyP/QS1Z3fqFBRmBosyyBQbucJnc
7faZBc+OOx68tsTAWqHy3uKDLOCo1m488JOB07KVatIFLKic2jy/vEzeG12x
3WCABf8BF/Y86A==
       "]]},
     Annotation[#, "Charting`Private`Tag$1648899#2"]& ], 
    TagBox[
     {RGBColor[0.560181, 0.691569, 0.194885], AbsoluteThickness[1.6], Opacity[
      1.], LineBox[CompressedData["
1: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
sBnzuBdXi4CqMf3phQUa3hY4cr5Ag4D/AFFgVLA=
       "]]},
     Annotation[#, "Charting`Private`Tag$1648899#3"]& ], 
    TagBox[
     {RGBColor[0.922526, 0.385626, 0.209179], AbsoluteThickness[1.6], Opacity[
      1.], LineBox[CompressedData["
1:eJwV03s0lHsXB3A1uki8UYnI4JF7iqQ46vcrpCRH5VLqVCYMKR1JSjpKORIi
DTNuySViHkqJZSrbXUOJXBeK0qiQ67iOeJ/zx157ff7Za6+9vluVceGw22Ix
MbFQqv7ryf8wlhq4hu+67Tzd/cCZhMomFRsnFU/Ev/WTFUN5obrklorKVVQt
7FGOoiwdU/hsRXswemNylRdGObk0kr5EJQyx8qdDgynrDbveW2BGIe9tP5Ov
Uv4k/XB+ri0GvcnhSl2grJ4pYTwrikVHIjwEDMrndvqdn6LHoyKr1QYOlF80
92QIzZPQtWM0kSXlWS+brlFmCnLzcLTZRvnRoq6wKctUZD5tuImgbPH+/sbJ
tjTU3D6V8T/KPzhWZULPDHRB/hRv9hgJEa6/T4yLHqPYWxzfb5SbRB6sEXo2
WjYk/uMF5cs1yluG83PQvGJYbjzl9Q+a636ZkygoN173H8oMHUwbYD5Fnq11
DHPKi0UBH4SBz5AgcZW6OuXmHocNQst8dJ2/NY9G+QopWTzW9hyxRqx14SgJ
1jF9S8cevUDc1kn1RMpKV8rsRz0LUPbdKaEf5VJz/5Fh0Ut0mjtJaFFe1vlV
8xe9mJo/LBnkREJ76Ru/wR/FqH1SZ9lhyjmZnIqBfB6S+kN7iKBse9H2VL/5
axToxbpT6UhCnAQv7jsT0O6cdN0ZBxIK/K0v+sqXIqveqbIKykn92xXGA0uR
S1C9fSRl7wZZ5phlGVosx/TfQFk26e3i0bZytCMp54uBPQki6cLsv80qkDRZ
Fyk8QsK3m+l2I48qkIWjvkUh5ULmPw+HPSuRXfxAizFl561GpkOiKjT/RaxI
7zAJqbUpPgN0PmJ3b8sa/JMEIeelTncEH92Ia9maQHkvs6734wwf0Z2OFu+l
PEibcuA11aKr86KCJFsSduy0NQ0LfYeMZxTZZgdJaHg6t1hz+AMKqeBtP2hN
7YskTkrpNyCmLnumfz8Jf2iwTENdG1CGTyE/lPI9YfZ4QGMDCtTwjS/ZR4LR
/RY3BrcRfWctWadqRUJQrZ61wakm5EaOB/HMSXiSX6TBjW1CRnZ87n7KHzl7
aBvfNSFTbbWptj1UfplHX8ubNKP9d3aPjO4moZZ2W19sdQsavNH9ryImQW5n
p+yH6lZkygfZvWYk5D0N6zyn34GWFCgkzm8loV+2P8LapQP16wrIQMqal613
abE6EEvvpOysIZVvM8nU3pkOtHY6v2PMgIQYfoS7c1UnOkWX9enaTOW1N2rU
6sQntPwHzzBal4QUybpbMpY9SPhSt/q6GglM1Bg/eLEXebrl20ZIkyCWNsnr
DO9FsWlEVp8UCRxxpa7ajF70F+uqP6b8lu+unN3ai+zUbG6OSZKgZT+X5mb6
DRl+bjS3k6D+yUOT/LxIgFJClreM0Ug4G3O9pCG6DznqOsW1TnPBW6DdW5D3
E3EmTF/pfOHCCtXbmt07RlBrECO3PIsL91bV6aSeHkfCqvuK8V5cYHTaA+3d
JOrudOduVeeCT9VtxgXNWaRvbHr6SXsO5P+98oj8/t/o2PeostHIHEi95tW/
xUkMxwesE/bsyIHglLlDwsFF+O1tYZ9qXzaINfXg1wE0PHS89YZVTDZoXHK/
Yq+zBJ9otElMMcqGbxNsR8k3S7EjOilY2fkErAVnr8f4LMeBc36fv/s/Adtv
0brKyiuwjfDs2vdrnkB/BePG21xJjCXafSWKskBfpnWD+SkpbKSzx4xulwUr
0IRL17g0XuDOdtCHM8Hql/OUmsMqvPu81ahRSCa0l7suctaTwYp6Fg/jlDLh
5Z3KkyoTlHdtUI7jPQb3JX499fWyOK3YSU7K7jGcuXjt5cqE1Tig09r40mAG
bGbq1tu4rMFW4boN9Xcz4IOsnqSfyVpcNvGK9VslA17lBSfq0eTw8eOnhnxL
0uHaIh27d5/kcIb9L+P5I+mwoitgn3fBOpznHwv9A2kgyFRlpQTKY8N6TZdD
4WnA0lIQL3ZQwI9XlK7TJtIgOsG9xkVlPd5jN2kRXZ4Kzqy/6ld+X49r8rQD
Q1xTYdri8UxKiSI+7CfKsVh4BL2CPVfKQ5Wwlo9kPzv1EaTtNFB877IBtxZV
3ZwyewS5IX4yzE3K2KMkXKMFUiDU4cwB2oQyvvM6b0BHMgW2daVmh76n47sn
ZZfs2/8QONqJue8PqGDVZFrN0bhkCCqN5BwoVsE6fEF0YWsSHFR0eFyrrop9
N5ENQ0pJsNu75rhMmCpueRs+xfdJhBQlhvq7CVV8Ml2Q8JCXAOoVWXG2x9Uw
c0g85odMAkRvKtf5WKKGJUWWmc+948F9XLyRr0Pg7V6V9xRKOcDIH1MJiyLw
BbFfm0PpHDgXfGTO+j6B/XgDZ0CJA35HCtpWPiBwcElc1ZQCB+5M+N2LjiMw
spmW8VzDgTyTGRE7mcDL+Os+HJTgwEzZQmsml8BGR4276ONsiP64MrKyhrK/
8sG+ajYkpJ/3+JdPYHnJGhP1SjakX6o331dH4D9zbe0ZZWwolIuerasn8Cf6
otXdr9jQ5bzao6mFwAN3lYo6nrFBs1fB/GsvgYer/BM7EtiwpSBAOUNAYOO5
cndFDhtMQzpn3L4TOI8nfvpELBtsNJOf/ewn8MZbPl2fo9hw0UtFeXSUwNC9
7rfgNhsCzW7OPB8nsNf8rh1awWwIkfrafGmCwGn9zNSzQWzgPE0Pn54mcHVh
5e/hq2xIuyHO5M0SWOuYaMTQnw3cQ257AucIvMPWRPbyJTYUqFVv2DVP4Onx
IJdiHzaUjGvMLCxQ98xq+DznzYb/A4MtXQY=
       "]]},
     Annotation[#, "Charting`Private`Tag$1648899#4"]& ], 
    TagBox[
     {RGBColor[0.528488, 0.470624, 0.701351], AbsoluteThickness[1.6], Opacity[
      1.], LineBox[CompressedData["
1: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
       "]]},
     Annotation[#, "Charting`Private`Tag$1648899#5"]& ]}, {}, {}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{0, 0},
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  ImagePadding->All,
  Method->{
   "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
    AbsolutePointSize[6], "ScalingFunctions" -> None, 
    "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
        (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
         Part[#, 1]], 
        (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
         Part[#, 2]]}& ), "CopiedValueFunction" -> ({
        (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
         Part[#, 1]], 
        (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
         Part[#, 2]]}& )}},
  PlotRange->{{0, 10}, {-0.15925300159241887`, 0.}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.05], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{3.738900354955092*^9, 3.738900388713346*^9, 
  3.738900491703706*^9, 3.738900547997344*^9, 3.7389008994161177`*^9, 
  3.7389025954592667`*^9}]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"\[Phi]", "[", "x_", "]"}], ":=", 
   RowBox[{"Quiet", "[", 
    RowBox[{"2", 
     RowBox[{"NIntegrate", "[", 
      RowBox[{
       RowBox[{
        FractionBox["z", 
         SuperscriptBox[
          RowBox[{"(", 
           RowBox[{
            SuperscriptBox["z", "2"], "+", "1"}], ")"}], "2"]], 
        RowBox[{"Sinc", "[", 
         RowBox[{"x", " ", "z"}], "]"}]}], ",", 
       RowBox[{"{", 
        RowBox[{"z", ",", "0", ",", "\[Infinity]"}], "}"}]}], "]"}]}], 
    "]"}]}], ";"}]], "Input"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Plot", "[", 
  RowBox[{
   RowBox[{"-", 
    RowBox[{"\[Phi]", "[", "x", "]"}]}], ",", 
   RowBox[{"{", 
    RowBox[{"x", ",", "0", ",", "10"}], "}"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.738902284019904*^9, 3.738902315268647*^9}, {
  3.7389030495398083`*^9, 3.7389030579715*^9}}],

Cell[BoxData[
 GraphicsBox[{{{}, {}, 
    TagBox[
     {RGBColor[0.368417, 0.506779, 0.709798], AbsoluteThickness[1.6], Opacity[
      1.], LineBox[CompressedData["
1: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
v7yxQWDmhSKvfTEM+BskCIwN
       "]]},
     Annotation[#, "Charting`Private`Tag$1896095#1"]& ]}, {}, {}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{0, 0},
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  ImagePadding->All,
  Method->{
   "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
    AbsolutePointSize[6], "ScalingFunctions" -> None, 
    "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
        (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
         Part[#, 1]], 
        (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
         Part[#, 2]]}& ), "CopiedValueFunction" -> ({
        (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
         Part[#, 1]], 
        (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
         Part[#, 2]]}& )}},
  PlotRange->{{0, 10}, {-0.9999999999997751, 0.}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.05], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{{3.738902292554263*^9, 3.738902317626421*^9}, {
  3.738903052223317*^9, 3.738903060445014*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Plot", "[", 
  RowBox[{
   RowBox[{
    FractionBox["1", "2"], 
    RowBox[{"Re", "[", 
     RowBox[{"ImVcparLT", "[", 
      RowBox[{"r", ",", "1", ",", "0.0001", ",", "1", ",", "1"}], "]"}], 
     "]"}]}], ",", 
   RowBox[{"{", 
    RowBox[{"r", ",", "0", ",", "10"}], "}"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.738902421799934*^9, 3.73890244360152*^9}, {
  3.7389030969565163`*^9, 3.7389030976923037`*^9}}],

Cell[BoxData[
 GraphicsBox[{{{}, {}, 
    TagBox[
     {RGBColor[0.368417, 0.506779, 0.709798], AbsoluteThickness[1.6], Opacity[
      1.], LineBox[CompressedData["
1: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
2hqBtXfy972NYMF/93uPog==
       "]]},
     Annotation[#, "Charting`Private`Tag$1900522#1"]& ]}, {}, {}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{0, 0},
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  ImagePadding->All,
  Method->{
   "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
    AbsolutePointSize[6], "ScalingFunctions" -> None, 
    "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
        (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
         Part[#, 1]], 
        (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
         Part[#, 2]]}& ), "CopiedValueFunction" -> ({
        (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
         Part[#, 1]], 
        (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
         Part[#, 2]]}& )}},
  PlotRange->{{0, 10}, {-0.9999999689248885, 0.}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.05], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{3.738902472292102*^9, 3.738903123709649*^9}]
}, Open  ]]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Check quadrants", "Subsection",
 CellChangeTimes->{{3.738660306003627*^9, 3.738660311145814*^9}, {
  3.738662877373454*^9, 3.7386628817135773`*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"\[Theta]", "=", 
   RowBox[{"\[Pi]", "/", "3"}]}], ";", 
  RowBox[{"v", "=", "0.5"}], ";", 
  RowBox[{"mD", "=", "0.15"}], ";", 
  RowBox[{"ListPlot", "[", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{"Re", "[", 
        RowBox[{"\[ImaginaryI]", 
         SqrtBox[
          RowBox[{"\[CapitalPi]par", "[", 
           RowBox[{"\[Theta]", ",", "v", ",", "mD"}], "]"}]]}], "]"}], ",", 
       RowBox[{"Im", "[", 
        RowBox[{"\[ImaginaryI]", 
         SqrtBox[
          RowBox[{"\[CapitalPi]par", "[", 
           RowBox[{"\[Theta]", ",", "v", ",", "mD"}], "]"}]]}], "]"}]}], 
      "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"Re", "[", 
        RowBox[{
         RowBox[{"-", "\[ImaginaryI]"}], 
         SqrtBox[
          RowBox[{"\[CapitalPi]par", "[", 
           RowBox[{"\[Theta]", ",", "v", ",", "mD"}], "]"}]]}], "]"}], ",", 
       RowBox[{"Im", "[", 
        RowBox[{
         RowBox[{"-", "\[ImaginaryI]"}], 
         SqrtBox[
          RowBox[{"\[CapitalPi]par", "[", 
           RowBox[{"\[Theta]", ",", "v", ",", "mD"}], "]"}]]}], "]"}]}], 
      "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"Re", "[", 
        RowBox[{"\[ImaginaryI]", 
         SqrtBox[
          RowBox[{"Conjugate", "[", 
           RowBox[{"\[CapitalPi]par", "[", 
            RowBox[{"\[Theta]", ",", "v", ",", "mD"}], "]"}], "]"}]]}], "]"}],
        ",", 
       RowBox[{"Im", "[", 
        RowBox[{"\[ImaginaryI]", 
         SqrtBox[
          RowBox[{"Conjugate", "[", 
           RowBox[{"\[CapitalPi]par", "[", 
            RowBox[{"\[Theta]", ",", "v", ",", "mD"}], "]"}], "]"}]]}], 
        "]"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"Re", "[", 
        RowBox[{
         RowBox[{"-", "\[ImaginaryI]"}], 
         SqrtBox[
          RowBox[{"Conjugate", "[", 
           RowBox[{"\[CapitalPi]par", "[", 
            RowBox[{"\[Theta]", ",", "v", ",", "mD"}], "]"}], "]"}]]}], "]"}],
        ",", 
       RowBox[{"Im", "[", 
        RowBox[{
         RowBox[{"-", "\[ImaginaryI]"}], 
         SqrtBox[
          RowBox[{"Conjugate", "[", 
           RowBox[{"\[CapitalPi]par", "[", 
            RowBox[{"\[Theta]", ",", "v", ",", "mD"}], "]"}], "]"}]]}], 
        "]"}]}], "}"}]}], "}"}], "]"}]}]], "Input",
 CellChangeTimes->{{3.738648426031382*^9, 3.738648578954163*^9}, {
  3.738648611308497*^9, 3.738648624059141*^9}, {3.738648675141829*^9, 
  3.738648722318952*^9}, {3.738648783257476*^9, 3.7386488069456177`*^9}, {
  3.738649467541044*^9, 3.738649473680764*^9}, {3.738649593454336*^9, 
  3.738649601981667*^9}, {3.73865108661237*^9, 3.738651093444592*^9}}],

Cell[BoxData[
 GraphicsBox[{{}, {{}, 
    {RGBColor[0.368417, 0.506779, 0.709798], PointSize[0.012833333333333334`],
      AbsoluteThickness[1.6], 
     PointBox[{{0.038784057634969574`, 
      0.15702907408991912`}, {-0.038784057634969574`, -0.15702907408991912`}, \
{-0.038784057634969574`, 0.15702907408991912`}, {
      0.038784057634969574`, -0.15702907408991912`}}]}, {}}, {}, {}, {{}, {}}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{0, 0},
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  ImagePadding->All,
  ImageSize->{416., Automatic},
  Method->{"CoordinatesToolOptions" -> {"DisplayFunction" -> ({
        (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
         Part[#, 1]], 
        (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
         Part[#, 2]]}& ), "CopiedValueFunction" -> ({
        (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
         Part[#, 1]], 
        (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
         Part[#, 2]]}& )}},
  PlotRange->{{-0.038784057634969574`, 
   0.038784057634969574`}, {-0.15702907408991912`, 0.15702907408991912`}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.05], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{
  3.738648579392231*^9, {3.73864861310561*^9, 3.738648624809229*^9}, {
   3.738648694973318*^9, 3.738648724555122*^9}, {3.7386487949230003`*^9, 
   3.738648807722926*^9}, {3.7386494681945333`*^9, 3.738649474443869*^9}, {
   3.7386495948290854`*^9, 3.738649602984831*^9}, {3.738651088014916*^9, 
   3.738651094444611*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{"Re", "[", 
      RowBox[{"\[ImaginaryI]", 
       SqrtBox[
        RowBox[{"\[CapitalPi]par", "[", 
         RowBox[{"\[Theta]", ",", "v", ",", "mD"}], "]"}]]}], "]"}], ",", 
     RowBox[{"Im", "[", 
      RowBox[{"\[ImaginaryI]", 
       SqrtBox[
        RowBox[{"\[CapitalPi]par", "[", 
         RowBox[{"\[Theta]", ",", "v", ",", "mD"}], "]"}]]}], "]"}]}], "}"}], 
   ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"Re", "[", 
      RowBox[{
       RowBox[{"-", "\[ImaginaryI]"}], 
       SqrtBox[
        RowBox[{"\[CapitalPi]par", "[", 
         RowBox[{"\[Theta]", ",", "v", ",", "mD"}], "]"}]]}], "]"}], ",", 
     RowBox[{"Im", "[", 
      RowBox[{
       RowBox[{"-", "\[ImaginaryI]"}], 
       SqrtBox[
        RowBox[{"\[CapitalPi]par", "[", 
         RowBox[{"\[Theta]", ",", "v", ",", "mD"}], "]"}]]}], "]"}]}], "}"}], 
   ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"Re", "[", 
      RowBox[{"\[ImaginaryI]", 
       SqrtBox[
        RowBox[{"Conjugate", "[", 
         RowBox[{"\[CapitalPi]par", "[", 
          RowBox[{"\[Theta]", ",", "v", ",", "mD"}], "]"}], "]"}]]}], "]"}], 
     ",", 
     RowBox[{"Im", "[", 
      RowBox[{"\[ImaginaryI]", 
       SqrtBox[
        RowBox[{"Conjugate", "[", 
         RowBox[{"\[CapitalPi]par", "[", 
          RowBox[{"\[Theta]", ",", "v", ",", "mD"}], "]"}], "]"}]]}], "]"}]}],
     "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"Re", "[", 
      RowBox[{
       RowBox[{"-", "\[ImaginaryI]"}], 
       SqrtBox[
        RowBox[{"Conjugate", "[", 
         RowBox[{"\[CapitalPi]par", "[", 
          RowBox[{"\[Theta]", ",", "v", ",", "mD"}], "]"}], "]"}]]}], "]"}], 
     ",", 
     RowBox[{"Im", "[", 
      RowBox[{
       RowBox[{"-", "\[ImaginaryI]"}], 
       SqrtBox[
        RowBox[{"Conjugate", "[", 
         RowBox[{"\[CapitalPi]par", "[", 
          RowBox[{"\[Theta]", ",", "v", ",", "mD"}], "]"}], "]"}]]}], "]"}]}],
     "}"}]}], "}"}]], "Input"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"0.04839627810369804`", ",", "0.1436433456398439`"}], "}"}], ",", 
   
   RowBox[{"{", 
    RowBox[{
     RowBox[{"-", "0.04839627810369804`"}], ",", 
     RowBox[{"-", "0.1436433456398439`"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"-", "0.04839627810369804`"}], ",", "0.1436433456398439`"}], 
    "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0.04839627810369804`", ",", 
     RowBox[{"-", "0.1436433456398439`"}]}], "}"}]}], "}"}]], "Output",
 CellChangeTimes->{
  3.738648897806631*^9, {3.73864947060998*^9, 3.738649476246915*^9}, 
   3.73865109090974*^9}]
}, Open  ]]
}, Closed]],

Cell[CellGroupData[{

Cell["misc", "Subsection",
 CellChangeTimes->{{3.738905630128439*^9, 3.7389056353186817`*^9}}],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"v", "=", "0.5"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"mD", "=", "0.15"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{"ListPlot", "[", 
  RowBox[{"Table", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"p", ",", 
      RowBox[{"NIntegrate", "[", 
       RowBox[{
        FractionBox[
         SuperscriptBox["p", "4"], 
         RowBox[{
          SuperscriptBox["p", "2"], "+", 
          RowBox[{"\[CapitalPi]par", "[", 
           RowBox[{"\[Theta]", ",", "v", ",", "mD"}], "]"}]}]], ",", 
        RowBox[{"{", 
         RowBox[{"\[Theta]", ",", "0", ",", "\[Pi]"}], "}"}]}], "]"}]}], 
     "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"p", ",", "0", ",", "10", ",", "1"}], "}"}]}], "]"}], 
  "]"}]}], "Input",
 CellChangeTimes->{{3.738905645270075*^9, 3.738905652884245*^9}, {
   3.738905728846285*^9, 3.738905758750403*^9}, {3.738905845649411*^9, 
   3.738905874599536*^9}, {3.738905993709365*^9, 3.738906003939661*^9}, {
   3.7389060359477367`*^9, 3.738906085620655*^9}, {3.738906269744953*^9, 
   3.738906373204591*^9}, 3.738906417212583*^9, {3.7389067959417267`*^9, 
   3.73890680680285*^9}}],

Cell[BoxData[
 TemplateBox[{
  "NIntegrate","izero",
   "\"Integral and error estimates are 0 on all integration subregions. Try \
increasing the value of the MinRecursion option. If value of integral may be \
0, specify a finite value for the AccuracyGoal option.\"",2,76,38,
   21225302204005324210,"Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{{3.738906327752181*^9, 3.7389063735649843`*^9}, 
   3.738906417613388*^9}],

Cell[BoxData[
 GraphicsBox[{{}, {{}, 
    {RGBColor[0.368417, 0.506779, 0.709798], PointSize[0.012833333333333334`],
      AbsoluteThickness[1.6], 
     PointBox[{{0., 0.}, {1., 3.0806241351632533`}, {2., 
      12.504742448382057`}, {3., 28.21258254373583}, {4., 
      50.20368793341056}, {5., 78.47800181384724}, {6., 
      113.03551013462592`}, {7., 153.87620807661543`}, {8., 
      201.00009362574565`}, {9., 254.4071658195346}, {10., 
      314.0974240380504}}]}, {}}, {}, {}, {{}, {}}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{0, 0},
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  ImagePadding->All,
  Method->{"CoordinatesToolOptions" -> {"DisplayFunction" -> ({
        (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
         Part[#, 1]], 
        (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
         Part[#, 2]]}& ), "CopiedValueFunction" -> ({
        (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
         Part[#, 1]], 
        (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
         Part[#, 2]]}& )}},
  PlotRange->{{0, 10.}, {0, 314.0974240380504}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.02], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{
  3.738905759388337*^9, {3.738905860903038*^9, 3.738905875978819*^9}, 
   3.738906047074751*^9, {3.7389062665361853`*^9, 3.738906373706314*^9}, 
   3.73890641775858*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"Clear", "[", 
   RowBox[{"mD", ",", "r", ",", "\[Theta]"}], "]"}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{"Assuming", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{
      RowBox[{"r", " ", 
       RowBox[{"Cos", "[", "\[Theta]", "]"}]}], "\[Element]", "Reals"}], ",", 
     
     RowBox[{"a", "\[Element]", "Reals"}], ",", 
     RowBox[{"a", ">", "0"}]}], "}"}], ",", 
   RowBox[{"Integrate", "[", 
    RowBox[{
     RowBox[{
      SuperscriptBox["p", "2"], 
      FractionBox[
       RowBox[{
        SuperscriptBox["p", "2"], "+", 
        SuperscriptBox["mD", "2"]}], 
       RowBox[{
        SuperscriptBox["p", "2"], "+", "z"}]], 
      RowBox[{"Exp", "[", 
       RowBox[{"\[ImaginaryI]", " ", "p", " ", "r", " ", 
        RowBox[{"Cos", "[", "\[Theta]", "]"}]}], "]"}], 
      RowBox[{"Exp", "[", 
       RowBox[{
        RowBox[{"-", "a"}], " ", "p"}], "]"}]}], ",", 
     RowBox[{"{", 
      RowBox[{"p", ",", "0", ",", "\[Infinity]"}], "}"}]}], "]"}]}], 
  "]"}]}], "Input",
 CellChangeTimes->{{3.7389069581420794`*^9, 3.738907003352054*^9}, {
   3.7389072124020023`*^9, 3.738907242340304*^9}, {3.738907286365471*^9, 
   3.7389072865882874`*^9}, {3.73890740394275*^9, 3.738907415350322*^9}, {
   3.7389077998548403`*^9, 3.738907815730605*^9}, {3.738907955065392*^9, 
   3.738907971600745*^9}, {3.7389080119400597`*^9, 3.738908029770171*^9}, 
   3.7389082645108356`*^9, {3.738908388241858*^9, 3.7389084668523197`*^9}, {
   3.738909597496251*^9, 3.738909605815651*^9}}],

Cell[BoxData[
 RowBox[{"ConditionalExpression", "[", 
  RowBox[{
   RowBox[{
    FractionBox["1", 
     RowBox[{"2", " ", 
      SqrtBox["\[Pi]"], " ", 
      RowBox[{"(", 
       RowBox[{"a", "-", 
        RowBox[{"\[ImaginaryI]", " ", "r", " ", 
         RowBox[{"Cos", "[", "\[Theta]", "]"}]}]}], ")"}]}]], 
    RowBox[{"(", 
     RowBox[{
      RowBox[{
       SuperscriptBox["z", 
        RowBox[{"3", "/", "2"}]], " ", 
       RowBox[{"(", 
        RowBox[{"a", "-", 
         RowBox[{"\[ImaginaryI]", " ", "r", " ", 
          RowBox[{"Cos", "[", "\[Theta]", "]"}]}]}], ")"}], " ", 
       RowBox[{"MeijerG", "[", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{"-", 
             FractionBox["3", "2"]}], "}"}], ",", 
           RowBox[{"{", "}"}]}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{
             RowBox[{"-", 
              FractionBox["3", "2"]}], ",", "0", ",", 
             FractionBox["1", "2"]}], "}"}], ",", 
           RowBox[{"{", "}"}]}], "}"}], ",", 
         RowBox[{
          FractionBox["1", "4"], " ", "z", " ", 
          SuperscriptBox[
           RowBox[{"(", 
            RowBox[{"a", "-", 
             RowBox[{"\[ImaginaryI]", " ", "r", " ", 
              RowBox[{"Cos", "[", "\[Theta]", "]"}]}]}], ")"}], "2"]}]}], 
        "]"}]}], "+", 
      RowBox[{
       SuperscriptBox["mD", "2"], " ", 
       SqrtBox["\[Pi]"], " ", 
       RowBox[{"(", 
        RowBox[{"2", "-", 
         RowBox[{"a", " ", "\[Pi]", " ", 
          SqrtBox["z"], " ", 
          RowBox[{"Cos", "[", 
           RowBox[{
            SqrtBox["z"], " ", 
            RowBox[{"(", 
             RowBox[{"a", "-", 
              RowBox[{"\[ImaginaryI]", " ", "r", " ", 
               RowBox[{"Cos", "[", "\[Theta]", "]"}]}]}], ")"}]}], "]"}]}], 
         "+", 
         RowBox[{"\[ImaginaryI]", " ", "\[Pi]", " ", "r", " ", 
          SqrtBox["z"], " ", 
          RowBox[{"Cos", "[", "\[Theta]", "]"}], " ", 
          RowBox[{"Cos", "[", 
           RowBox[{
            SqrtBox["z"], " ", 
            RowBox[{"(", 
             RowBox[{"a", "-", 
              RowBox[{"\[ImaginaryI]", " ", "r", " ", 
               RowBox[{"Cos", "[", "\[Theta]", "]"}]}]}], ")"}]}], "]"}]}], 
         "-", 
         RowBox[{"2", " ", 
          SqrtBox["z"], " ", 
          RowBox[{"(", 
           RowBox[{"a", "-", 
            RowBox[{"\[ImaginaryI]", " ", "r", " ", 
             RowBox[{"Cos", "[", "\[Theta]", "]"}]}]}], ")"}], " ", 
          RowBox[{"CosIntegral", "[", 
           RowBox[{
            SqrtBox["z"], " ", 
            RowBox[{"(", 
             RowBox[{"a", "-", 
              RowBox[{"\[ImaginaryI]", " ", "r", " ", 
               RowBox[{"Cos", "[", "\[Theta]", "]"}]}]}], ")"}]}], "]"}], " ", 
          RowBox[{"Sin", "[", 
           RowBox[{
            SqrtBox["z"], " ", 
            RowBox[{"(", 
             RowBox[{"a", "-", 
              RowBox[{"\[ImaginaryI]", " ", "r", " ", 
               RowBox[{"Cos", "[", "\[Theta]", "]"}]}]}], ")"}]}], "]"}]}], 
         "+", 
         RowBox[{"2", " ", 
          SqrtBox["z"], " ", 
          RowBox[{"(", 
           RowBox[{"a", "-", 
            RowBox[{"\[ImaginaryI]", " ", "r", " ", 
             RowBox[{"Cos", "[", "\[Theta]", "]"}]}]}], ")"}], " ", 
          RowBox[{"Cos", "[", 
           RowBox[{
            SqrtBox["z"], " ", 
            RowBox[{"(", 
             RowBox[{"a", "-", 
              RowBox[{"\[ImaginaryI]", " ", "r", " ", 
               RowBox[{"Cos", "[", "\[Theta]", "]"}]}]}], ")"}]}], "]"}], " ", 
          RowBox[{"SinIntegral", "[", 
           RowBox[{
            SqrtBox["z"], " ", 
            RowBox[{"(", 
             RowBox[{"a", "-", 
              RowBox[{"\[ImaginaryI]", " ", "r", " ", 
               RowBox[{"Cos", "[", "\[Theta]", "]"}]}]}], ")"}]}], "]"}]}]}], 
        ")"}]}]}], ")"}]}], ",", 
   RowBox[{
    RowBox[{"(", 
     RowBox[{
      RowBox[{
       RowBox[{"Im", "[", "z", "]"}], "\[NotEqual]", "0"}], "&&", 
      RowBox[{
       RowBox[{"Re", "[", 
        SqrtBox["z"], "]"}], "\[NotEqual]", "0"}]}], ")"}], "||", 
    RowBox[{"(", 
     RowBox[{
      RowBox[{
       RowBox[{"Re", "[", 
        SqrtBox["z"], "]"}], ">", "0"}], "&&", 
      RowBox[{
       RowBox[{"Re", "[", "z", "]"}], "\[GreaterEqual]", "0"}]}], ")"}]}]}], 
  "]"}]], "Output",
 CellChangeTimes->{
  3.738907252607562*^9, 3.7389074345050163`*^9, 3.7389078385896387`*^9, {
   3.7389079643591833`*^9, 3.7389079807051363`*^9}, 3.738908022709305*^9, 
   3.7389082625039062`*^9, 3.738908307093072*^9, {3.73890844839647*^9, 
   3.738908454137553*^9}, 3.738908897559579*^9, 3.7389096420061607`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{
   FractionBox["1", 
    RowBox[{"2", " ", 
     SqrtBox["\[Pi]"], " ", 
     RowBox[{"(", 
      RowBox[{"a", "-", 
       RowBox[{"\[ImaginaryI]", " ", "r", " ", 
        RowBox[{"Cos", "[", "\[Theta]", "]"}]}]}], ")"}]}]], 
   RowBox[{"(", 
    RowBox[{
     RowBox[{
      SuperscriptBox["z", 
       RowBox[{"3", "/", "2"}]], " ", 
      RowBox[{"(", 
       RowBox[{"a", "-", 
        RowBox[{"\[ImaginaryI]", " ", "r", " ", 
         RowBox[{"Cos", "[", "\[Theta]", "]"}]}]}], ")"}], " ", 
      RowBox[{"MeijerG", "[", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{"-", 
            FractionBox["3", "2"]}], "}"}], ",", 
          RowBox[{"{", "}"}]}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{
            RowBox[{"-", 
             FractionBox["3", "2"]}], ",", "0", ",", 
            FractionBox["1", "2"]}], "}"}], ",", 
          RowBox[{"{", "}"}]}], "}"}], ",", 
        RowBox[{
         FractionBox["1", "4"], " ", "z", " ", 
         SuperscriptBox[
          RowBox[{"(", 
           RowBox[{"a", "-", 
            RowBox[{"\[ImaginaryI]", " ", "r", " ", 
             RowBox[{"Cos", "[", "\[Theta]", "]"}]}]}], ")"}], "2"]}]}], 
       "]"}]}], "+", 
     RowBox[{
      SuperscriptBox["mD", "2"], " ", 
      SqrtBox["\[Pi]"], " ", 
      RowBox[{"(", 
       RowBox[{"2", "-", 
        RowBox[{"a", " ", "\[Pi]", " ", 
         SqrtBox["z"], " ", 
         RowBox[{"Cos", "[", 
          RowBox[{
           SqrtBox["z"], " ", 
           RowBox[{"(", 
            RowBox[{"a", "-", 
             RowBox[{"\[ImaginaryI]", " ", "r", " ", 
              RowBox[{"Cos", "[", "\[Theta]", "]"}]}]}], ")"}]}], "]"}]}], 
        "+", 
        RowBox[{"\[ImaginaryI]", " ", "\[Pi]", " ", "r", " ", 
         SqrtBox["z"], " ", 
         RowBox[{"Cos", "[", "\[Theta]", "]"}], " ", 
         RowBox[{"Cos", "[", 
          RowBox[{
           SqrtBox["z"], " ", 
           RowBox[{"(", 
            RowBox[{"a", "-", 
             RowBox[{"\[ImaginaryI]", " ", "r", " ", 
              RowBox[{"Cos", "[", "\[Theta]", "]"}]}]}], ")"}]}], "]"}]}], 
        "-", 
        RowBox[{"2", " ", 
         SqrtBox["z"], " ", 
         RowBox[{"(", 
          RowBox[{"a", "-", 
           RowBox[{"\[ImaginaryI]", " ", "r", " ", 
            RowBox[{"Cos", "[", "\[Theta]", "]"}]}]}], ")"}], " ", 
         RowBox[{"CosIntegral", "[", 
          RowBox[{
           SqrtBox["z"], " ", 
           RowBox[{"(", 
            RowBox[{"a", "-", 
             RowBox[{"\[ImaginaryI]", " ", "r", " ", 
              RowBox[{"Cos", "[", "\[Theta]", "]"}]}]}], ")"}]}], "]"}], " ", 
         
         RowBox[{"Sin", "[", 
          RowBox[{
           SqrtBox["z"], " ", 
           RowBox[{"(", 
            RowBox[{"a", "-", 
             RowBox[{"\[ImaginaryI]", " ", "r", " ", 
              RowBox[{"Cos", "[", "\[Theta]", "]"}]}]}], ")"}]}], "]"}]}], 
        "+", 
        RowBox[{"2", " ", 
         SqrtBox["z"], " ", 
         RowBox[{"(", 
          RowBox[{"a", "-", 
           RowBox[{"\[ImaginaryI]", " ", "r", " ", 
            RowBox[{"Cos", "[", "\[Theta]", "]"}]}]}], ")"}], " ", 
         RowBox[{"Cos", "[", 
          RowBox[{
           SqrtBox["z"], " ", 
           RowBox[{"(", 
            RowBox[{"a", "-", 
             RowBox[{"\[ImaginaryI]", " ", "r", " ", 
              RowBox[{"Cos", "[", "\[Theta]", "]"}]}]}], ")"}]}], "]"}], " ", 
         
         RowBox[{"SinIntegral", "[", 
          RowBox[{
           SqrtBox["z"], " ", 
           RowBox[{"(", 
            RowBox[{"a", "-", 
             RowBox[{"\[ImaginaryI]", " ", "r", " ", 
              RowBox[{"Cos", "[", "\[Theta]", "]"}]}]}], ")"}]}], "]"}]}]}], 
       ")"}]}]}], ")"}]}], "/.", 
  RowBox[{"a", "\[Rule]", "0"}]}]], "Input",
 CellChangeTimes->{{3.7389096916973753`*^9, 3.738909695526019*^9}, 
   3.7389097724318333`*^9}],

Cell[BoxData[
 RowBox[{
  FractionBox["1", 
   RowBox[{"2", " ", 
    SqrtBox["\[Pi]"], " ", "r"}]], 
  RowBox[{"\[ImaginaryI]", " ", 
   RowBox[{"Sec", "[", "\[Theta]", "]"}], " ", 
   RowBox[{"(", 
    RowBox[{
     RowBox[{
      RowBox[{"-", "\[ImaginaryI]"}], " ", "r", " ", 
      SuperscriptBox["z", 
       RowBox[{"3", "/", "2"}]], " ", 
      RowBox[{"Cos", "[", "\[Theta]", "]"}], " ", 
      RowBox[{"MeijerG", "[", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{"-", 
            FractionBox["3", "2"]}], "}"}], ",", 
          RowBox[{"{", "}"}]}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{
            RowBox[{"-", 
             FractionBox["3", "2"]}], ",", "0", ",", 
            FractionBox["1", "2"]}], "}"}], ",", 
          RowBox[{"{", "}"}]}], "}"}], ",", 
        RowBox[{
         RowBox[{"-", 
          FractionBox["1", "4"]}], " ", 
         SuperscriptBox["r", "2"], " ", "z", " ", 
         SuperscriptBox[
          RowBox[{"Cos", "[", "\[Theta]", "]"}], "2"]}]}], "]"}]}], "+", 
     RowBox[{
      SuperscriptBox["mD", "2"], " ", 
      SqrtBox["\[Pi]"], " ", 
      RowBox[{"(", 
       RowBox[{"2", "+", 
        RowBox[{"\[ImaginaryI]", " ", "\[Pi]", " ", "r", " ", 
         SqrtBox["z"], " ", 
         RowBox[{"Cos", "[", "\[Theta]", "]"}], " ", 
         RowBox[{"Cosh", "[", 
          RowBox[{"r", " ", 
           SqrtBox["z"], " ", 
           RowBox[{"Cos", "[", "\[Theta]", "]"}]}], "]"}]}], "+", 
        RowBox[{"2", " ", "r", " ", 
         SqrtBox["z"], " ", 
         RowBox[{"Cos", "[", "\[Theta]", "]"}], " ", 
         RowBox[{"CosIntegral", "[", 
          RowBox[{
           RowBox[{"-", "\[ImaginaryI]"}], " ", "r", " ", 
           SqrtBox["z"], " ", 
           RowBox[{"Cos", "[", "\[Theta]", "]"}]}], "]"}], " ", 
         RowBox[{"Sinh", "[", 
          RowBox[{"r", " ", 
           SqrtBox["z"], " ", 
           RowBox[{"Cos", "[", "\[Theta]", "]"}]}], "]"}]}], "-", 
        RowBox[{"2", " ", "r", " ", 
         SqrtBox["z"], " ", 
         RowBox[{"Cos", "[", "\[Theta]", "]"}], " ", 
         RowBox[{"Cosh", "[", 
          RowBox[{"r", " ", 
           SqrtBox["z"], " ", 
           RowBox[{"Cos", "[", "\[Theta]", "]"}]}], "]"}], " ", 
         RowBox[{"SinhIntegral", "[", 
          RowBox[{"r", " ", 
           SqrtBox["z"], " ", 
           RowBox[{"Cos", "[", "\[Theta]", "]"}]}], "]"}]}]}], ")"}]}]}], 
    ")"}]}]}]], "Output",
 CellChangeTimes->{{3.738909770432482*^9, 3.738909773195168*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"Clear", "[", 
   RowBox[{"mD", ",", "r", ",", "\[Theta]"}], "]"}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{"Assuming", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{
      RowBox[{"r", " ", 
       RowBox[{"Cos", "[", "\[Theta]", "]"}]}], "\[Element]", "Reals"}], ",", 
     
     RowBox[{"a", "\[Element]", "Reals"}], ",", 
     RowBox[{"a", "<", "0"}]}], "}"}], ",", 
   RowBox[{"Integrate", "[", 
    RowBox[{
     RowBox[{
      SuperscriptBox["p", "2"], 
      FractionBox[
       RowBox[{
        SuperscriptBox["p", "2"], "+", 
        SuperscriptBox["mD", "2"]}], 
       RowBox[{
        SuperscriptBox["p", "2"], "+", "z"}]], 
      RowBox[{"Exp", "[", 
       RowBox[{"\[ImaginaryI]", " ", "p", " ", "r", " ", 
        RowBox[{"Cos", "[", "\[Theta]", "]"}]}], "]"}], 
      RowBox[{"Exp", "[", 
       RowBox[{
        RowBox[{"-", "a"}], " ", "p"}], "]"}]}], ",", 
     RowBox[{"{", 
      RowBox[{"p", ",", 
       RowBox[{"-", "\[Infinity]"}], ",", "0"}], "}"}]}], "]"}]}], 
  "]"}]}], "Input",
 CellChangeTimes->{{3.738908473635949*^9, 3.7389084795795317`*^9}, {
  3.738909611205187*^9, 3.738909612352137*^9}}],

Cell[BoxData[
 RowBox[{"ConditionalExpression", "[", 
  RowBox[{
   RowBox[{
    FractionBox["1", 
     RowBox[{"2", " ", 
      SqrtBox["\[Pi]"], " ", 
      RowBox[{"(", 
       RowBox[{"a", "-", 
        RowBox[{"\[ImaginaryI]", " ", "r", " ", 
         RowBox[{"Cos", "[", "\[Theta]", "]"}]}]}], ")"}]}]], 
    RowBox[{"(", 
     RowBox[{
      RowBox[{
       SuperscriptBox["z", 
        RowBox[{"3", "/", "2"}]], " ", 
       RowBox[{"(", 
        RowBox[{"a", "-", 
         RowBox[{"\[ImaginaryI]", " ", "r", " ", 
          RowBox[{"Cos", "[", "\[Theta]", "]"}]}]}], ")"}], " ", 
       RowBox[{"MeijerG", "[", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{"-", 
             FractionBox["3", "2"]}], "}"}], ",", 
           RowBox[{"{", "}"}]}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{
             RowBox[{"-", 
              FractionBox["3", "2"]}], ",", "0", ",", 
             FractionBox["1", "2"]}], "}"}], ",", 
           RowBox[{"{", "}"}]}], "}"}], ",", 
         RowBox[{
          FractionBox["1", "4"], " ", "z", " ", 
          SuperscriptBox[
           RowBox[{"(", 
            RowBox[{"a", "-", 
             RowBox[{"\[ImaginaryI]", " ", "r", " ", 
              RowBox[{"Cos", "[", "\[Theta]", "]"}]}]}], ")"}], "2"]}]}], 
        "]"}]}], "-", 
      RowBox[{
       SuperscriptBox["mD", "2"], " ", 
       SqrtBox["\[Pi]"], " ", 
       RowBox[{"(", 
        RowBox[{"2", "+", 
         RowBox[{"a", " ", "\[Pi]", " ", 
          SqrtBox["z"], " ", 
          RowBox[{"Cos", "[", 
           RowBox[{
            SqrtBox["z"], " ", 
            RowBox[{"(", 
             RowBox[{"a", "-", 
              RowBox[{"\[ImaginaryI]", " ", "r", " ", 
               RowBox[{"Cos", "[", "\[Theta]", "]"}]}]}], ")"}]}], "]"}]}], 
         "-", 
         RowBox[{"\[ImaginaryI]", " ", "\[Pi]", " ", "r", " ", 
          SqrtBox["z"], " ", 
          RowBox[{"Cos", "[", "\[Theta]", "]"}], " ", 
          RowBox[{"Cos", "[", 
           RowBox[{
            SqrtBox["z"], " ", 
            RowBox[{"(", 
             RowBox[{"a", "-", 
              RowBox[{"\[ImaginaryI]", " ", "r", " ", 
               RowBox[{"Cos", "[", "\[Theta]", "]"}]}]}], ")"}]}], "]"}]}], 
         "-", 
         RowBox[{"2", " ", 
          SqrtBox["z"], " ", 
          RowBox[{"(", 
           RowBox[{"a", "-", 
            RowBox[{"\[ImaginaryI]", " ", "r", " ", 
             RowBox[{"Cos", "[", "\[Theta]", "]"}]}]}], ")"}], " ", 
          RowBox[{"CosIntegral", "[", 
           RowBox[{
            RowBox[{"-", 
             SqrtBox["z"]}], " ", 
            RowBox[{"(", 
             RowBox[{"a", "-", 
              RowBox[{"\[ImaginaryI]", " ", "r", " ", 
               RowBox[{"Cos", "[", "\[Theta]", "]"}]}]}], ")"}]}], "]"}], " ", 
          RowBox[{"Sin", "[", 
           RowBox[{
            SqrtBox["z"], " ", 
            RowBox[{"(", 
             RowBox[{"a", "-", 
              RowBox[{"\[ImaginaryI]", " ", "r", " ", 
               RowBox[{"Cos", "[", "\[Theta]", "]"}]}]}], ")"}]}], "]"}]}], 
         "-", 
         RowBox[{"2", " ", 
          SqrtBox["z"], " ", 
          RowBox[{"(", 
           RowBox[{"a", "-", 
            RowBox[{"\[ImaginaryI]", " ", "r", " ", 
             RowBox[{"Cos", "[", "\[Theta]", "]"}]}]}], ")"}], " ", 
          RowBox[{"Cos", "[", 
           RowBox[{
            SqrtBox["z"], " ", 
            RowBox[{"(", 
             RowBox[{"a", "-", 
              RowBox[{"\[ImaginaryI]", " ", "r", " ", 
               RowBox[{"Cos", "[", "\[Theta]", "]"}]}]}], ")"}]}], "]"}], " ", 
          RowBox[{"SinIntegral", "[", 
           RowBox[{
            SqrtBox["z"], " ", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{"-", "a"}], "+", 
              RowBox[{"\[ImaginaryI]", " ", "r", " ", 
               RowBox[{"Cos", "[", "\[Theta]", "]"}]}]}], ")"}]}], "]"}]}]}], 
        ")"}]}]}], ")"}]}], ",", 
   RowBox[{
    RowBox[{"(", 
     RowBox[{
      RowBox[{
       RowBox[{"Im", "[", "z", "]"}], "\[NotEqual]", "0"}], "&&", 
      RowBox[{
       RowBox[{"Re", "[", 
        SqrtBox["z"], "]"}], "\[NotEqual]", "0"}]}], ")"}], "||", 
    RowBox[{"(", 
     RowBox[{
      RowBox[{
       RowBox[{"Re", "[", 
        SqrtBox["z"], "]"}], ">", "0"}], "&&", 
      RowBox[{
       RowBox[{"Re", "[", "z", "]"}], "\[GreaterEqual]", "0"}]}], ")"}]}]}], 
  "]"}]], "Output",
 CellChangeTimes->{3.738909681171076*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{
   FractionBox["1", 
    RowBox[{"2", " ", 
     SqrtBox["\[Pi]"], " ", 
     RowBox[{"(", 
      RowBox[{"a", "-", 
       RowBox[{"\[ImaginaryI]", " ", "r", " ", 
        RowBox[{"Cos", "[", "\[Theta]", "]"}]}]}], ")"}]}]], 
   RowBox[{"(", 
    RowBox[{
     RowBox[{
      SuperscriptBox["z", 
       RowBox[{"3", "/", "2"}]], " ", 
      RowBox[{"(", 
       RowBox[{"a", "-", 
        RowBox[{"\[ImaginaryI]", " ", "r", " ", 
         RowBox[{"Cos", "[", "\[Theta]", "]"}]}]}], ")"}], " ", 
      RowBox[{"MeijerG", "[", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{"-", 
            FractionBox["3", "2"]}], "}"}], ",", 
          RowBox[{"{", "}"}]}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{
            RowBox[{"-", 
             FractionBox["3", "2"]}], ",", "0", ",", 
            FractionBox["1", "2"]}], "}"}], ",", 
          RowBox[{"{", "}"}]}], "}"}], ",", 
        RowBox[{
         FractionBox["1", "4"], " ", "z", " ", 
         SuperscriptBox[
          RowBox[{"(", 
           RowBox[{"a", "-", 
            RowBox[{"\[ImaginaryI]", " ", "r", " ", 
             RowBox[{"Cos", "[", "\[Theta]", "]"}]}]}], ")"}], "2"]}]}], 
       "]"}]}], "-", 
     RowBox[{
      SuperscriptBox["mD", "2"], " ", 
      SqrtBox["\[Pi]"], " ", 
      RowBox[{"(", 
       RowBox[{"2", "+", 
        RowBox[{"a", " ", "\[Pi]", " ", 
         SqrtBox["z"], " ", 
         RowBox[{"Cos", "[", 
          RowBox[{
           SqrtBox["z"], " ", 
           RowBox[{"(", 
            RowBox[{"a", "-", 
             RowBox[{"\[ImaginaryI]", " ", "r", " ", 
              RowBox[{"Cos", "[", "\[Theta]", "]"}]}]}], ")"}]}], "]"}]}], 
        "-", 
        RowBox[{"\[ImaginaryI]", " ", "\[Pi]", " ", "r", " ", 
         SqrtBox["z"], " ", 
         RowBox[{"Cos", "[", "\[Theta]", "]"}], " ", 
         RowBox[{"Cos", "[", 
          RowBox[{
           SqrtBox["z"], " ", 
           RowBox[{"(", 
            RowBox[{"a", "-", 
             RowBox[{"\[ImaginaryI]", " ", "r", " ", 
              RowBox[{"Cos", "[", "\[Theta]", "]"}]}]}], ")"}]}], "]"}]}], 
        "-", 
        RowBox[{"2", " ", 
         SqrtBox["z"], " ", 
         RowBox[{"(", 
          RowBox[{"a", "-", 
           RowBox[{"\[ImaginaryI]", " ", "r", " ", 
            RowBox[{"Cos", "[", "\[Theta]", "]"}]}]}], ")"}], " ", 
         RowBox[{"CosIntegral", "[", 
          RowBox[{
           RowBox[{"-", 
            SqrtBox["z"]}], " ", 
           RowBox[{"(", 
            RowBox[{"a", "-", 
             RowBox[{"\[ImaginaryI]", " ", "r", " ", 
              RowBox[{"Cos", "[", "\[Theta]", "]"}]}]}], ")"}]}], "]"}], " ", 
         
         RowBox[{"Sin", "[", 
          RowBox[{
           SqrtBox["z"], " ", 
           RowBox[{"(", 
            RowBox[{"a", "-", 
             RowBox[{"\[ImaginaryI]", " ", "r", " ", 
              RowBox[{"Cos", "[", "\[Theta]", "]"}]}]}], ")"}]}], "]"}]}], 
        "-", 
        RowBox[{"2", " ", 
         SqrtBox["z"], " ", 
         RowBox[{"(", 
          RowBox[{"a", "-", 
           RowBox[{"\[ImaginaryI]", " ", "r", " ", 
            RowBox[{"Cos", "[", "\[Theta]", "]"}]}]}], ")"}], " ", 
         RowBox[{"Cos", "[", 
          RowBox[{
           SqrtBox["z"], " ", 
           RowBox[{"(", 
            RowBox[{"a", "-", 
             RowBox[{"\[ImaginaryI]", " ", "r", " ", 
              RowBox[{"Cos", "[", "\[Theta]", "]"}]}]}], ")"}]}], "]"}], " ", 
         
         RowBox[{"SinIntegral", "[", 
          RowBox[{
           SqrtBox["z"], " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"-", "a"}], "+", 
             RowBox[{"\[ImaginaryI]", " ", "r", " ", 
              RowBox[{"Cos", "[", "\[Theta]", "]"}]}]}], ")"}]}], "]"}]}]}], 
       ")"}]}]}], ")"}]}], "/.", 
  RowBox[{"a", "\[Rule]", "0"}]}]], "Input",
 CellChangeTimes->{3.738909713019926*^9, 3.738909775643777*^9}],

Cell[BoxData[
 RowBox[{
  FractionBox["1", 
   RowBox[{"2", " ", 
    SqrtBox["\[Pi]"], " ", "r"}]], 
  RowBox[{"\[ImaginaryI]", " ", 
   RowBox[{"Sec", "[", "\[Theta]", "]"}], " ", 
   RowBox[{"(", 
    RowBox[{
     RowBox[{
      RowBox[{"-", "\[ImaginaryI]"}], " ", "r", " ", 
      SuperscriptBox["z", 
       RowBox[{"3", "/", "2"}]], " ", 
      RowBox[{"Cos", "[", "\[Theta]", "]"}], " ", 
      RowBox[{"MeijerG", "[", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{"-", 
            FractionBox["3", "2"]}], "}"}], ",", 
          RowBox[{"{", "}"}]}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{
            RowBox[{"-", 
             FractionBox["3", "2"]}], ",", "0", ",", 
            FractionBox["1", "2"]}], "}"}], ",", 
          RowBox[{"{", "}"}]}], "}"}], ",", 
        RowBox[{
         RowBox[{"-", 
          FractionBox["1", "4"]}], " ", 
         SuperscriptBox["r", "2"], " ", "z", " ", 
         SuperscriptBox[
          RowBox[{"Cos", "[", "\[Theta]", "]"}], "2"]}]}], "]"}]}], "-", 
     RowBox[{
      SuperscriptBox["mD", "2"], " ", 
      SqrtBox["\[Pi]"], " ", 
      RowBox[{"(", 
       RowBox[{"2", "-", 
        RowBox[{"\[ImaginaryI]", " ", "\[Pi]", " ", "r", " ", 
         SqrtBox["z"], " ", 
         RowBox[{"Cos", "[", "\[Theta]", "]"}], " ", 
         RowBox[{"Cosh", "[", 
          RowBox[{"r", " ", 
           SqrtBox["z"], " ", 
           RowBox[{"Cos", "[", "\[Theta]", "]"}]}], "]"}]}], "+", 
        RowBox[{"2", " ", "r", " ", 
         SqrtBox["z"], " ", 
         RowBox[{"Cos", "[", "\[Theta]", "]"}], " ", 
         RowBox[{"CosIntegral", "[", 
          RowBox[{"\[ImaginaryI]", " ", "r", " ", 
           SqrtBox["z"], " ", 
           RowBox[{"Cos", "[", "\[Theta]", "]"}]}], "]"}], " ", 
         RowBox[{"Sinh", "[", 
          RowBox[{"r", " ", 
           SqrtBox["z"], " ", 
           RowBox[{"Cos", "[", "\[Theta]", "]"}]}], "]"}]}], "-", 
        RowBox[{"2", " ", "r", " ", 
         SqrtBox["z"], " ", 
         RowBox[{"Cos", "[", "\[Theta]", "]"}], " ", 
         RowBox[{"Cosh", "[", 
          RowBox[{"r", " ", 
           SqrtBox["z"], " ", 
           RowBox[{"Cos", "[", "\[Theta]", "]"}]}], "]"}], " ", 
         RowBox[{"SinhIntegral", "[", 
          RowBox[{"r", " ", 
           SqrtBox["z"], " ", 
           RowBox[{"Cos", "[", "\[Theta]", "]"}]}], "]"}]}]}], ")"}]}]}], 
    ")"}]}]}]], "Output",
 CellChangeTimes->{3.7389097762994003`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{
    FractionBox["1", 
     RowBox[{"2", " ", 
      SqrtBox["\[Pi]"], " ", "r"}]], "\[ImaginaryI]", " ", 
    RowBox[{"Sec", "[", "\[Theta]", "]"}], " ", 
    RowBox[{"(", 
     RowBox[{
      RowBox[{
       RowBox[{"-", "\[ImaginaryI]"}], " ", "r", " ", 
       SuperscriptBox["z", 
        RowBox[{"3", "/", "2"}]], " ", 
       RowBox[{"Cos", "[", "\[Theta]", "]"}], " ", 
       RowBox[{"MeijerG", "[", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{"-", 
             FractionBox["3", "2"]}], "}"}], ",", 
           RowBox[{"{", "}"}]}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{
             RowBox[{"-", 
              FractionBox["3", "2"]}], ",", "0", ",", 
             FractionBox["1", "2"]}], "}"}], ",", 
           RowBox[{"{", "}"}]}], "}"}], ",", 
         RowBox[{
          RowBox[{"-", 
           FractionBox["1", "4"]}], " ", 
          SuperscriptBox["r", "2"], " ", "z", " ", 
          SuperscriptBox[
           RowBox[{"Cos", "[", "\[Theta]", "]"}], "2"]}]}], "]"}]}], "+", 
      RowBox[{
       SuperscriptBox["mD", "2"], " ", 
       SqrtBox["\[Pi]"], " ", 
       RowBox[{"(", 
        RowBox[{"2", "+", 
         RowBox[{"\[ImaginaryI]", " ", "\[Pi]", " ", "r", " ", 
          SqrtBox["z"], " ", 
          RowBox[{"Cos", "[", "\[Theta]", "]"}], " ", 
          RowBox[{"Cosh", "[", 
           RowBox[{"r", " ", 
            SqrtBox["z"], " ", 
            RowBox[{"Cos", "[", "\[Theta]", "]"}]}], "]"}]}], "+", 
         RowBox[{"2", " ", "r", " ", 
          SqrtBox["z"], " ", 
          RowBox[{"Cos", "[", "\[Theta]", "]"}], " ", 
          RowBox[{"CosIntegral", "[", 
           RowBox[{
            RowBox[{"-", "\[ImaginaryI]"}], " ", "r", " ", 
            SqrtBox["z"], " ", 
            RowBox[{"Cos", "[", "\[Theta]", "]"}]}], "]"}], " ", 
          RowBox[{"Sinh", "[", 
           RowBox[{"r", " ", 
            SqrtBox["z"], " ", 
            RowBox[{"Cos", "[", "\[Theta]", "]"}]}], "]"}]}], "-", 
         RowBox[{"2", " ", "r", " ", 
          SqrtBox["z"], " ", 
          RowBox[{"Cos", "[", "\[Theta]", "]"}], " ", 
          RowBox[{"Cosh", "[", 
           RowBox[{"r", " ", 
            SqrtBox["z"], " ", 
            RowBox[{"Cos", "[", "\[Theta]", "]"}]}], "]"}], " ", 
          RowBox[{"SinhIntegral", "[", 
           RowBox[{"r", " ", 
            SqrtBox["z"], " ", 
            RowBox[{"Cos", "[", "\[Theta]", "]"}]}], "]"}]}]}], ")"}]}]}], 
     ")"}]}], "+", 
   RowBox[{
    FractionBox["1", 
     RowBox[{"2", " ", 
      SqrtBox["\[Pi]"], " ", "r"}]], "\[ImaginaryI]", " ", 
    RowBox[{"Sec", "[", "\[Theta]", "]"}], " ", 
    RowBox[{"(", 
     RowBox[{
      RowBox[{
       RowBox[{"-", "\[ImaginaryI]"}], " ", "r", " ", 
       SuperscriptBox["z", 
        RowBox[{"3", "/", "2"}]], " ", 
       RowBox[{"Cos", "[", "\[Theta]", "]"}], " ", 
       RowBox[{"MeijerG", "[", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{"-", 
             FractionBox["3", "2"]}], "}"}], ",", 
           RowBox[{"{", "}"}]}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{
             RowBox[{"-", 
              FractionBox["3", "2"]}], ",", "0", ",", 
             FractionBox["1", "2"]}], "}"}], ",", 
           RowBox[{"{", "}"}]}], "}"}], ",", 
         RowBox[{
          RowBox[{"-", 
           FractionBox["1", "4"]}], " ", 
          SuperscriptBox["r", "2"], " ", "z", " ", 
          SuperscriptBox[
           RowBox[{"Cos", "[", "\[Theta]", "]"}], "2"]}]}], "]"}]}], "-", 
      RowBox[{
       SuperscriptBox["mD", "2"], " ", 
       SqrtBox["\[Pi]"], " ", 
       RowBox[{"(", 
        RowBox[{"2", "-", 
         RowBox[{"\[ImaginaryI]", " ", "\[Pi]", " ", "r", " ", 
          SqrtBox["z"], " ", 
          RowBox[{"Cos", "[", "\[Theta]", "]"}], " ", 
          RowBox[{"Cosh", "[", 
           RowBox[{"r", " ", 
            SqrtBox["z"], " ", 
            RowBox[{"Cos", "[", "\[Theta]", "]"}]}], "]"}]}], "+", 
         RowBox[{"2", " ", "r", " ", 
          SqrtBox["z"], " ", 
          RowBox[{"Cos", "[", "\[Theta]", "]"}], " ", 
          RowBox[{"CosIntegral", "[", 
           RowBox[{"\[ImaginaryI]", " ", "r", " ", 
            SqrtBox["z"], " ", 
            RowBox[{"Cos", "[", "\[Theta]", "]"}]}], "]"}], " ", 
          RowBox[{"Sinh", "[", 
           RowBox[{"r", " ", 
            SqrtBox["z"], " ", 
            RowBox[{"Cos", "[", "\[Theta]", "]"}]}], "]"}]}], "-", 
         RowBox[{"2", " ", "r", " ", 
          SqrtBox["z"], " ", 
          RowBox[{"Cos", "[", "\[Theta]", "]"}], " ", 
          RowBox[{"Cosh", "[", 
           RowBox[{"r", " ", 
            SqrtBox["z"], " ", 
            RowBox[{"Cos", "[", "\[Theta]", "]"}]}], "]"}], " ", 
          RowBox[{"SinhIntegral", "[", 
           RowBox[{"r", " ", 
            SqrtBox["z"], " ", 
            RowBox[{"Cos", "[", "\[Theta]", "]"}]}], "]"}]}]}], ")"}]}]}], 
     ")"}]}]}], "//", "Simplify"}]], "Input",
 CellChangeTimes->{{3.73890978257096*^9, 3.73890981394659*^9}, {
  3.73890986313549*^9, 3.738909863662409*^9}}],

Cell[BoxData[
 FractionBox[
  RowBox[{
   SqrtBox["z"], " ", 
   RowBox[{"(", 
    RowBox[{
     RowBox[{"z", " ", 
      RowBox[{"MeijerG", "[", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{"-", 
            FractionBox["3", "2"]}], "}"}], ",", 
          RowBox[{"{", "}"}]}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{
            RowBox[{"-", 
             FractionBox["3", "2"]}], ",", "0", ",", 
            FractionBox["1", "2"]}], "}"}], ",", 
          RowBox[{"{", "}"}]}], "}"}], ",", 
        RowBox[{
         RowBox[{"-", 
          FractionBox["1", "4"]}], " ", 
         SuperscriptBox["r", "2"], " ", "z", " ", 
         SuperscriptBox[
          RowBox[{"Cos", "[", "\[Theta]", "]"}], "2"]}]}], "]"}]}], "-", 
     RowBox[{
      SuperscriptBox["mD", "2"], " ", 
      SqrtBox["\[Pi]"], " ", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{"\[Pi]", " ", 
         RowBox[{"Cosh", "[", 
          RowBox[{"r", " ", 
           SqrtBox["z"], " ", 
           RowBox[{"Cos", "[", "\[Theta]", "]"}]}], "]"}]}], "-", 
        RowBox[{"\[ImaginaryI]", " ", 
         RowBox[{"CosIntegral", "[", 
          RowBox[{
           RowBox[{"-", "\[ImaginaryI]"}], " ", "r", " ", 
           SqrtBox["z"], " ", 
           RowBox[{"Cos", "[", "\[Theta]", "]"}]}], "]"}], " ", 
         RowBox[{"Sinh", "[", 
          RowBox[{"r", " ", 
           SqrtBox["z"], " ", 
           RowBox[{"Cos", "[", "\[Theta]", "]"}]}], "]"}]}], "+", 
        RowBox[{"\[ImaginaryI]", " ", 
         RowBox[{"CosIntegral", "[", 
          RowBox[{"\[ImaginaryI]", " ", "r", " ", 
           SqrtBox["z"], " ", 
           RowBox[{"Cos", "[", "\[Theta]", "]"}]}], "]"}], " ", 
         RowBox[{"Sinh", "[", 
          RowBox[{"r", " ", 
           SqrtBox["z"], " ", 
           RowBox[{"Cos", "[", "\[Theta]", "]"}]}], "]"}]}]}], ")"}]}]}], 
    ")"}]}], 
  SqrtBox["\[Pi]"]]], "Output",
 CellChangeTimes->{{3.738909790688764*^9, 3.7389098078852787`*^9}, {
  3.7389098610988817`*^9, 3.738909864600297*^9}}]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{"rhs", "[", 
   RowBox[{"r_", ",", "v_", ",", "mD_", ",", "\[Alpha]_"}], "]"}], ":=", 
  RowBox[{"\[Alpha]", " ", 
   RowBox[{"NIntegrate", "[", 
    RowBox[{
     RowBox[{
      RowBox[{"Sin", "[", "\[Theta]", "]"}], 
      FractionBox["1", 
       SqrtBox["\[Pi]"]], 
      RowBox[{"Re", "[", 
       SqrtBox[
        RowBox[{"\[CapitalPi]par", "[", 
         RowBox[{"\[Theta]", ",", "v", ",", "mD"}], "]"}]], " ", "]"}], 
      RowBox[{"(", 
       RowBox[{
        RowBox[{
         RowBox[{"\[CapitalPi]par", "[", 
          RowBox[{"\[Theta]", ",", "v", ",", "mD"}], "]"}], " ", 
         RowBox[{"MeijerG", "[", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{
             RowBox[{"{", 
              RowBox[{"-", 
               FractionBox["3", "2"]}], "}"}], ",", 
             RowBox[{"{", "}"}]}], "}"}], ",", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{"{", 
              RowBox[{
               RowBox[{"-", 
                FractionBox["3", "2"]}], ",", "0", ",", 
               FractionBox["1", "2"]}], "}"}], ",", 
             RowBox[{"{", "}"}]}], "}"}], ",", 
           RowBox[{
            RowBox[{"-", 
             FractionBox["1", "4"]}], " ", 
            SuperscriptBox["r", "2"], " ", 
            RowBox[{"\[CapitalPi]par", "[", 
             RowBox[{"\[Theta]", ",", "v", ",", "mD"}], "]"}], " ", 
            SuperscriptBox[
             RowBox[{"Cos", "[", "\[Theta]", "]"}], "2"]}]}], "]"}]}], "-", 
        RowBox[{
         SuperscriptBox["mD", "2"], " ", 
         SqrtBox["\[Pi]"], " ", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{"\[Pi]", " ", 
            RowBox[{"Cosh", "[", 
             RowBox[{"r", " ", 
              RowBox[{"Re", "[", 
               SqrtBox[
                RowBox[{"\[CapitalPi]par", "[", 
                 RowBox[{"\[Theta]", ",", "v", ",", "mD"}], "]"}]], "]"}], 
              RowBox[{"Cos", "[", "\[Theta]", "]"}]}], "]"}]}], "-", 
           RowBox[{"\[ImaginaryI]", " ", 
            RowBox[{"CosIntegral", "[", 
             RowBox[{
              RowBox[{"-", "\[ImaginaryI]"}], " ", "r", " ", 
              RowBox[{"Re", "[", 
               SqrtBox[
                RowBox[{"\[CapitalPi]par", "[", 
                 RowBox[{"\[Theta]", ",", "v", ",", "mD"}], "]"}]], "]"}], 
              RowBox[{"Cos", "[", "\[Theta]", "]"}]}], "]"}], " ", 
            RowBox[{"Sinh", "[", 
             RowBox[{"r", " ", 
              RowBox[{"Re", "[", 
               SqrtBox[
                RowBox[{"\[CapitalPi]par", "[", 
                 RowBox[{"\[Theta]", ",", "v", ",", "mD"}], "]"}]], "]"}], 
              RowBox[{"Cos", "[", "\[Theta]", "]"}]}], "]"}]}], "+", 
           RowBox[{"\[ImaginaryI]", " ", 
            RowBox[{"CosIntegral", "[", 
             RowBox[{"\[ImaginaryI]", " ", "r", " ", 
              RowBox[{"Re", "[", 
               SqrtBox[
                RowBox[{"\[CapitalPi]par", "[", 
                 RowBox[{"\[Theta]", ",", "v", ",", "mD"}], "]"}]], "]"}], 
              RowBox[{"Cos", "[", "\[Theta]", "]"}]}], "]"}], " ", 
            RowBox[{"Sinh", "[", 
             RowBox[{"r", " ", 
              RowBox[{"Re", "[", 
               SqrtBox[
                RowBox[{"\[CapitalPi]par", "[", 
                 RowBox[{"\[Theta]", ",", "v", ",", "mD"}], "]"}]], "]"}], 
              RowBox[{"Cos", "[", "\[Theta]", "]"}]}], "]"}]}]}], ")"}]}]}], 
       ")"}]}], ",", 
     RowBox[{"{", 
      RowBox[{"\[Theta]", ",", "0", ",", 
       RowBox[{"\[Pi]", "/", "2"}]}], "}"}]}], "]"}]}]}]], "Input",
 CellChangeTimes->{{3.738909935792437*^9, 3.738910023859466*^9}, {
  3.738910191275908*^9, 3.738910207325733*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"v", "=", "0.5"}], ";", 
  RowBox[{"mD", "=", "0.15"}], ";", 
  RowBox[{"r", "=", "3"}], ";", 
  RowBox[{"Plot", "[", 
   RowBox[{
    RowBox[{"Re", "[", 
     RowBox[{
      RowBox[{"Sin", "[", "\[Theta]", "]"}], 
      FractionBox["1", 
       SqrtBox["\[Pi]"]], 
      RowBox[{"Re", "[", 
       SqrtBox[
        RowBox[{"\[CapitalPi]par", "[", 
         RowBox[{"\[Theta]", ",", "v", ",", "mD"}], "]"}]], " ", "]"}], 
      RowBox[{"(", 
       RowBox[{
        RowBox[{
         RowBox[{"\[CapitalPi]par", "[", 
          RowBox[{"\[Theta]", ",", "v", ",", "mD"}], "]"}], " ", 
         RowBox[{"MeijerG", "[", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{
             RowBox[{"{", 
              RowBox[{"-", 
               FractionBox["3", "2"]}], "}"}], ",", 
             RowBox[{"{", "}"}]}], "}"}], ",", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{"{", 
              RowBox[{
               RowBox[{"-", 
                FractionBox["3", "2"]}], ",", "0", ",", 
               FractionBox["1", "2"]}], "}"}], ",", 
             RowBox[{"{", "}"}]}], "}"}], ",", 
           RowBox[{
            RowBox[{"-", 
             FractionBox["1", "4"]}], " ", 
            SuperscriptBox["r", "2"], " ", 
            RowBox[{"\[CapitalPi]par", "[", 
             RowBox[{"\[Theta]", ",", "v", ",", "mD"}], "]"}], " ", 
            SuperscriptBox[
             RowBox[{"Cos", "[", "\[Theta]", "]"}], "2"]}]}], "]"}]}], "-", 
        RowBox[{
         SuperscriptBox["mD", "2"], " ", 
         SqrtBox["\[Pi]"], " ", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{"\[Pi]", " ", 
            RowBox[{"Cosh", "[", 
             RowBox[{"r", " ", 
              RowBox[{"Re", "[", 
               SqrtBox[
                RowBox[{"\[CapitalPi]par", "[", 
                 RowBox[{"\[Theta]", ",", "v", ",", "mD"}], "]"}]], "]"}], 
              RowBox[{"Cos", "[", "\[Theta]", "]"}]}], "]"}]}], "-", 
           RowBox[{"\[ImaginaryI]", " ", 
            RowBox[{"CosIntegral", "[", 
             RowBox[{
              RowBox[{"-", "\[ImaginaryI]"}], " ", "r", " ", 
              RowBox[{"Re", "[", 
               SqrtBox[
                RowBox[{"\[CapitalPi]par", "[", 
                 RowBox[{"\[Theta]", ",", "v", ",", "mD"}], "]"}]], "]"}], 
              RowBox[{"Cos", "[", "\[Theta]", "]"}]}], "]"}], " ", 
            RowBox[{"Sinh", "[", 
             RowBox[{"r", " ", 
              RowBox[{"Re", "[", 
               SqrtBox[
                RowBox[{"\[CapitalPi]par", "[", 
                 RowBox[{"\[Theta]", ",", "v", ",", "mD"}], "]"}]], "]"}], 
              RowBox[{"Cos", "[", "\[Theta]", "]"}]}], "]"}]}], "+", 
           RowBox[{"\[ImaginaryI]", " ", 
            RowBox[{"CosIntegral", "[", 
             RowBox[{"\[ImaginaryI]", " ", "r", " ", 
              RowBox[{"Re", "[", 
               SqrtBox[
                RowBox[{"\[CapitalPi]par", "[", 
                 RowBox[{"\[Theta]", ",", "v", ",", "mD"}], "]"}]], "]"}], 
              RowBox[{"Cos", "[", "\[Theta]", "]"}]}], "]"}], " ", 
            RowBox[{"Sinh", "[", 
             RowBox[{"r", " ", 
              RowBox[{"Re", "[", 
               SqrtBox[
                RowBox[{"\[CapitalPi]par", "[", 
                 RowBox[{"\[Theta]", ",", "v", ",", "mD"}], "]"}]], "]"}], 
              RowBox[{"Cos", "[", "\[Theta]", "]"}]}], "]"}]}]}], ")"}]}]}], 
       ")"}]}], "]"}], ",", 
    RowBox[{"{", 
     RowBox[{"\[Theta]", ",", "0", ",", 
      RowBox[{"\[Pi]", "/", "2"}]}], "}"}], ",", 
    RowBox[{"PlotRange", "\[Rule]", "All"}]}], "]"}]}]], "Input",
 CellChangeTimes->{{3.738917058734611*^9, 3.7389171429161873`*^9}}],

Cell[BoxData[
 GraphicsBox[{{{}, {}, 
    TagBox[
     {RGBColor[0.368417, 0.506779, 0.709798], AbsoluteThickness[1.6], Opacity[
      1.], LineBox[CompressedData["
1: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
       "]]},
     Annotation[#, "Charting`Private`Tag$2665505#1"]& ]}, {}, {}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{0, 0},
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  ImagePadding->All,
  Method->{
   "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
    AbsolutePointSize[6], "ScalingFunctions" -> None, 
    "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
        (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
         Part[#, 1]], 
        (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
         Part[#, 2]]}& ), "CopiedValueFunction" -> ({
        (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
         Part[#, 1]], 
        (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
         Part[#, 2]]}& )}},
  PlotRange->{All, All},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.05], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{{3.738917083613542*^9, 3.7389171575404997`*^9}}]
}, Open  ]]
}, Open  ]]
},
WindowSize->{1920, 1019},
WindowMargins->{{0, Automatic}, {0, Automatic}},
FrontEndVersion->"11.0 for Linux x86 (64-bit) (September 21, 2016)",
StyleDefinitions->"Default.nb"
]
(* End of Notebook Content *)

(* Internal cache information *)
(*CellTagsOutline
CellTagsIndex->{}
*)
(*CellTagsIndex
CellTagsIndex->{}
*)
(*NotebookFileOutline
Notebook[{
Cell[558, 20, 517, 17, 80, "Input"],
Cell[1078, 39, 5520, 164, 166, "Input"],
Cell[CellGroupData[{
Cell[6623, 207, 107, 1, 45, "Subsection"],
Cell[6733, 210, 986, 28, 51, "Input"],
Cell[CellGroupData[{
Cell[7744, 242, 1665, 40, 89, "Input"],
Cell[9412, 284, 493, 10, 23, "Message"],
Cell[9908, 296, 904, 16, 23, "Message"],
Cell[10815, 314, 41855, 710, 644, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[52707, 1029, 633, 17, 52, "Input"],
Cell[53343, 1048, 422, 9, 23, "Message"],
Cell[53768, 1059, 833, 15, 23, "Message"],
Cell[54604, 1076, 9826, 175, 222, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[64467, 1256, 533, 15, 52, "Input"],
Cell[65003, 1273, 371, 8, 23, "Message"],
Cell[65377, 1283, 785, 14, 23, "Message"],
Cell[66165, 1299, 4815, 93, 226, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[71017, 1397, 556, 16, 34, "Input"],
Cell[71576, 1415, 172, 4, 34, "Output"]
}, Open  ]],
Cell[71763, 1422, 181, 4, 32, "Input"],
Cell[71947, 1428, 1092, 29, 59, "Input"]
}, Open  ]],
Cell[CellGroupData[{
Cell[73076, 1462, 165, 2, 45, "Subsection"],
Cell[CellGroupData[{
Cell[73266, 1468, 95, 1, 35, "Subsubsection"],
Cell[CellGroupData[{
Cell[73386, 1473, 1061, 29, 85, "Input"],
Cell[74450, 1504, 3841, 108, 111, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[78328, 1617, 1085, 30, 85, "Input"],
Cell[79416, 1649, 3763, 106, 111, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[83216, 1760, 4666, 126, 191, "Input"],
Cell[87885, 1888, 2385, 65, 80, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[90307, 1958, 679, 18, 112, "Input"],
Cell[90989, 1978, 192, 3, 32, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[91218, 1986, 263, 7, 44, "Input"],
Cell[91484, 1995, 111, 1, 32, "Output"]
}, Open  ]]
}, Closed]],
Cell[CellGroupData[{
Cell[91644, 2002, 96, 1, 29, "Subsubsection"],
Cell[91743, 2005, 1940, 56, 66, "Input"],
Cell[CellGroupData[{
Cell[93708, 2065, 308, 6, 34, "Input"],
Cell[94019, 2073, 233, 5, 32, "Output"]
}, Open  ]],
Cell[94267, 2081, 3916, 105, 205, "Input"],
Cell[CellGroupData[{
Cell[98208, 2190, 358, 7, 34, "Input"],
Cell[98569, 2199, 307, 6, 32, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[98913, 2210, 1562, 36, 57, "Input"],
Cell[100478, 2248, 16522, 294, 222, "Output"]
}, Open  ]],
Cell[117015, 2545, 550, 18, 59, "Input"],
Cell[CellGroupData[{
Cell[117590, 2567, 309, 8, 34, "Input"],
Cell[117902, 2577, 3955, 79, 225, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[121894, 2661, 438, 12, 53, "Input"],
Cell[122335, 2675, 3904, 78, 225, "Output"]
}, Open  ]]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[126300, 2760, 154, 2, 45, "Subsection"],
Cell[CellGroupData[{
Cell[126479, 2766, 2694, 75, 153, "Input"],
Cell[129176, 2843, 1963, 44, 259, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[131176, 2892, 2018, 64, 84, "Input"],
Cell[133197, 2958, 645, 19, 34, "Output"]
}, Open  ]]
}, Closed]],
Cell[CellGroupData[{
Cell[133891, 2983, 94, 1, 36, "Subsection"],
Cell[CellGroupData[{
Cell[134010, 2988, 1149, 29, 110, "Input"],
Cell[135162, 3019, 445, 9, 23, "Message"],
Cell[135610, 3030, 1811, 42, 238, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[137458, 3077, 1531, 40, 86, "Input"],
Cell[138992, 3119, 4744, 132, 131, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[143773, 3256, 3972, 115, 175, "Input"],
Cell[147748, 3373, 2583, 72, 92, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[150368, 3450, 1178, 36, 86, "Input"],
Cell[151549, 3488, 4531, 130, 131, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[156117, 3623, 3997, 116, 175, "Input"],
Cell[160117, 3741, 2534, 71, 92, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[162688, 3817, 5264, 143, 273, "Input"],
Cell[167955, 3962, 2108, 61, 65, "Output"]
}, Open  ]],
Cell[170078, 4026, 3716, 93, 260, "Input"],
Cell[CellGroupData[{
Cell[173819, 4123, 3718, 94, 314, "Input"],
Cell[177540, 4219, 8672, 156, 207, "Output"]
}, Open  ]]
}, Open  ]]
}
]
*)

