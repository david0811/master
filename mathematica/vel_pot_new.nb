(* Content-type: application/vnd.wolfram.mathematica *)

(*** Wolfram Notebook File ***)
(* http://www.wolfram.com/nb *)

(* CreatedBy='Mathematica 11.0' *)

(*CacheID: 234*)
(* Internal cache information:
NotebookFileLineBreakTest
NotebookFileLineBreakTest
NotebookDataPosition[       158,          7]
NotebookDataLength[    167365,       4106]
NotebookOptionsPosition[    160729,       3881]
NotebookOutlinePosition[    161091,       3897]
CellTagsIndexPosition[    161048,       3894]
WindowFrame->Normal*)

(* Beginning of Notebook Content *)
Notebook[{

Cell[CellGroupData[{
Cell["Check quadrants", "Subsection",
 CellChangeTimes->{{3.738660306003627*^9, 3.738660311145814*^9}, {
  3.738662877373454*^9, 3.7386628817135773`*^9}}],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"v", "=", "0.5"}], ";", 
  RowBox[{"mD", "=", "0.15"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{"Plot", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{"Re", "[", 
      SqrtBox[
       RowBox[{"\[CapitalPi]par", "[", 
        RowBox[{"\[Theta]", ",", "v", ",", "mD"}], "]"}]], "]"}], ",", " ", 
     RowBox[{"Re", "[", 
      SqrtBox[
       RowBox[{"Conjugate", "[", 
        RowBox[{"\[CapitalPi]par", "[", 
         RowBox[{"\[Theta]", ",", "v", ",", "mD"}], "]"}], "]"}]], "]"}], ",", 
     RowBox[{"Re", "[", 
      RowBox[{"\[CapitalPi]par", "[", 
       RowBox[{"\[Theta]", ",", "v", ",", "mD"}], "]"}], "]"}]}], "}"}], ",", 
   
   RowBox[{"{", 
    RowBox[{"\[Theta]", ",", "0", ",", 
     RowBox[{"\[Pi]", "/", "2"}]}], "}"}]}], "]"}]}], "Input",
 CellChangeTimes->{{3.738648426031382*^9, 3.738648578954163*^9}, {
  3.738648611308497*^9, 3.738648624059141*^9}, {3.738648675141829*^9, 
  3.738648722318952*^9}, {3.738648783257476*^9, 3.7386488069456177`*^9}, {
  3.738649467541044*^9, 3.738649473680764*^9}, {3.738649593454336*^9, 
  3.738649601981667*^9}, {3.73865108661237*^9, 3.738651093444592*^9}, {
  3.73909180967115*^9, 3.739091825132493*^9}, {3.739091857973381*^9, 
  3.739091912854478*^9}, {3.7390922419812613`*^9, 3.739092269980297*^9}, {
  3.73909232812669*^9, 3.739092360020913*^9}, {3.739170164003778*^9, 
  3.739170174381769*^9}}],

Cell[BoxData[
 GraphicsBox[{{{}, {}, 
    TagBox[
     {RGBColor[0.368417, 0.506779, 0.709798], AbsoluteThickness[1.6], Opacity[
      1.], LineBox[CompressedData["
1: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
vQdmP+U5kOUvvPbX/wM+aCIn
       "]]},
     Annotation[#, "Charting`Private`Tag$26571#1"]& ], 
    TagBox[
     {RGBColor[0.880722, 0.611041, 0.142051], AbsoluteThickness[1.6], Opacity[
      1.], LineBox[CompressedData["
1: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
vQdmP+U5kOUvvPbX/wM+aCIn
       "]]},
     Annotation[#, "Charting`Private`Tag$26571#2"]& ], 
    TagBox[
     {RGBColor[0.560181, 0.691569, 0.194885], AbsoluteThickness[1.6], Opacity[
      1.], LineBox[CompressedData["
1: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
/H9H7i+H
       "]]},
     Annotation[#, "Charting`Private`Tag$26571#3"]& ]}, {}, {}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{0, 0},
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  ImagePadding->All,
  ImageSize->{1079., Automatic},
  Method->{
   "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
    AbsolutePointSize[6], "ScalingFunctions" -> None, 
    "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
        (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
         Part[#, 1]], 
        (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
         Part[#, 2]]}& ), "CopiedValueFunction" -> ({
        (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
         Part[#, 1]], 
        (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
         Part[#, 2]]}& )}},
  PlotRange->
   NCache[{{0, Rational[1, 2] Pi}, {0., 0.17320508075688765`}}, {{
     0, 1.5707963267948966`}, {0., 0.17320508075688765`}}],
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.05], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{
  3.738648579392231*^9, {3.73864861310561*^9, 3.738648624809229*^9}, {
   3.738648694973318*^9, 3.738648724555122*^9}, {3.7386487949230003`*^9, 
   3.738648807722926*^9}, {3.7386494681945333`*^9, 3.738649474443869*^9}, {
   3.7386495948290854`*^9, 3.738649602984831*^9}, {3.738651088014916*^9, 
   3.738651094444611*^9}, 3.739091826159561*^9, {3.739091858530929*^9, 
   3.7390919134714108`*^9}, {3.739092321422655*^9, 3.739092361077251*^9}, {
   3.739170165871787*^9, 3.739170184038068*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{"Re", "[", 
      RowBox[{"\[ImaginaryI]", 
       SqrtBox[
        RowBox[{"\[CapitalPi]par", "[", 
         RowBox[{"\[Theta]", ",", "v", ",", "mD"}], "]"}]]}], "]"}], ",", 
     RowBox[{"Im", "[", 
      RowBox[{"\[ImaginaryI]", 
       SqrtBox[
        RowBox[{"\[CapitalPi]par", "[", 
         RowBox[{"\[Theta]", ",", "v", ",", "mD"}], "]"}]]}], "]"}]}], "}"}], 
   ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"Re", "[", 
      RowBox[{
       RowBox[{"-", "\[ImaginaryI]"}], 
       SqrtBox[
        RowBox[{"\[CapitalPi]par", "[", 
         RowBox[{"\[Theta]", ",", "v", ",", "mD"}], "]"}]]}], "]"}], ",", 
     RowBox[{"Im", "[", 
      RowBox[{
       RowBox[{"-", "\[ImaginaryI]"}], 
       SqrtBox[
        RowBox[{"\[CapitalPi]par", "[", 
         RowBox[{"\[Theta]", ",", "v", ",", "mD"}], "]"}]]}], "]"}]}], "}"}], 
   ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"Re", "[", 
      RowBox[{"\[ImaginaryI]", 
       SqrtBox[
        RowBox[{"Conjugate", "[", 
         RowBox[{"\[CapitalPi]par", "[", 
          RowBox[{"\[Theta]", ",", "v", ",", "mD"}], "]"}], "]"}]]}], "]"}], 
     ",", 
     RowBox[{"Im", "[", 
      RowBox[{"\[ImaginaryI]", 
       SqrtBox[
        RowBox[{"Conjugate", "[", 
         RowBox[{"\[CapitalPi]par", "[", 
          RowBox[{"\[Theta]", ",", "v", ",", "mD"}], "]"}], "]"}]]}], "]"}]}],
     "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"Re", "[", 
      RowBox[{
       RowBox[{"-", "\[ImaginaryI]"}], 
       SqrtBox[
        RowBox[{"Conjugate", "[", 
         RowBox[{"\[CapitalPi]par", "[", 
          RowBox[{"\[Theta]", ",", "v", ",", "mD"}], "]"}], "]"}]]}], "]"}], 
     ",", 
     RowBox[{"Im", "[", 
      RowBox[{
       RowBox[{"-", "\[ImaginaryI]"}], 
       SqrtBox[
        RowBox[{"Conjugate", "[", 
         RowBox[{"\[CapitalPi]par", "[", 
          RowBox[{"\[Theta]", ",", "v", ",", "mD"}], "]"}], "]"}]]}], "]"}]}],
     "}"}]}], "}"}]], "Input"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"0.04839627810369804`", ",", "0.1436433456398439`"}], "}"}], ",", 
   
   RowBox[{"{", 
    RowBox[{
     RowBox[{"-", "0.04839627810369804`"}], ",", 
     RowBox[{"-", "0.1436433456398439`"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"-", "0.04839627810369804`"}], ",", "0.1436433456398439`"}], 
    "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0.04839627810369804`", ",", 
     RowBox[{"-", "0.1436433456398439`"}]}], "}"}]}], "}"}]], "Output",
 CellChangeTimes->{
  3.738648897806631*^9, {3.73864947060998*^9, 3.738649476246915*^9}, 
   3.73865109090974*^9}]
}, Open  ]]
}, Closed]],

Cell[CellGroupData[{

Cell["Definitions", "Subsection",
 CellChangeTimes->{{3.7390941138488827`*^9, 3.7390941243354483`*^9}}],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"\[Alpha]cont", "=", 
    RowBox[{"{", 
     RowBox[{"0.5137193759431391`", ",", "0.0024666827878353577`"}], "}"}]}], 
   ";"}], " "}], "\n", 
 RowBox[{
  RowBox[{"\[Sigma]cont", "=", 
   RowBox[{"{", 
    RowBox[{"0.16955497884544793`", ",", "0.0008581023195660334`"}], "}"}]}], 
  ";"}], "\n", 
 RowBox[{
  RowBox[{"ccont", "=", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"-", "0.15956635071361625`"}], ",", "0.0024752900407607015`"}], 
    "}"}]}], ";"}]}], "Input"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"\[CapitalPi]par", "[", 
    RowBox[{"\[Theta]_", ",", "v_", ",", "mD_"}], "]"}], ":=", 
   RowBox[{
    FractionBox[
     SuperscriptBox["mD", "2"], "2"], 
    RowBox[{"(", 
     RowBox[{
      FractionBox[
       RowBox[{"2", "-", 
        RowBox[{"2", 
         SuperscriptBox["v", "2"]}], "-", 
        RowBox[{
         SuperscriptBox["v", "4"], 
         SuperscriptBox[
          RowBox[{"Cos", "[", "\[Theta]", "]"}], "2"], 
         SuperscriptBox[
          RowBox[{"Sin", "[", "\[Theta]", "]"}], "2"]}]}], 
       SuperscriptBox[
        RowBox[{"(", 
         RowBox[{"1", "-", 
          RowBox[{
           SuperscriptBox["v", "2"], 
           SuperscriptBox[
            RowBox[{"Sin", "[", "\[Theta]", "]"}], "2"]}]}], ")"}], "2"]], 
      "-", 
      RowBox[{
       FractionBox[
        RowBox[{
         RowBox[{"(", 
          RowBox[{"2", "+", 
           RowBox[{
            SuperscriptBox["v", "2"], 
            SuperscriptBox[
             RowBox[{"Sin", "[", "\[Theta]", "]"}], "2"]}]}], ")"}], 
         RowBox[{"(", 
          RowBox[{"1", "-", 
           SuperscriptBox["v", "2"]}], ")"}], "v", " ", 
         RowBox[{"Cos", "[", "\[Theta]", "]"}]}], 
        RowBox[{"2", 
         SuperscriptBox[
          RowBox[{"(", 
           RowBox[{"1", "-", 
            RowBox[{
             SuperscriptBox["v", "2"], 
             SuperscriptBox[
              RowBox[{"Sin", "[", "\[Theta]", "]"}], "2"]}]}], ")"}], 
          RowBox[{"5", "/", "2"}]]}]], 
       RowBox[{"Log", "[", 
        FractionBox[
         RowBox[{
          RowBox[{"v", " ", 
           RowBox[{"Cos", "[", "\[Theta]", "]"}]}], "+", 
          SqrtBox[
           RowBox[{"1", "-", 
            RowBox[{
             SuperscriptBox["v", "2"], 
             SuperscriptBox[
              RowBox[{"Sin", "[", "\[Theta]", "]"}], "2"]}]}]]}], 
         RowBox[{
          RowBox[{"v", " ", 
           RowBox[{"Cos", "[", "\[Theta]", "]"}]}], "-", 
          SqrtBox[
           RowBox[{"1", "-", 
            RowBox[{
             SuperscriptBox["v", "2"], 
             SuperscriptBox[
              RowBox[{"Sin", "[", "\[Theta]", "]"}], "2"]}]}]]}]], "]"}]}]}], 
     ")"}]}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"\[CapitalPi]per", "[", 
    RowBox[{"\[Theta]_", ",", "\[Beta]_", ",", "v_", ",", "mD_"}], "]"}], ":=", 
   RowBox[{
    FractionBox[
     SuperscriptBox["mD", "2"], "2"], 
    RowBox[{"(", 
     RowBox[{
      FractionBox[
       RowBox[{"2", "-", 
        RowBox[{"2", 
         SuperscriptBox["v", "2"]}], "-", 
        RowBox[{
         SuperscriptBox["v", "4"], 
         SuperscriptBox[
          RowBox[{"Cos", "[", "\[Beta]", "]"}], "2"], 
         SuperscriptBox[
          RowBox[{"Sin", "[", "\[Theta]", "]"}], "2"], 
         RowBox[{"(", 
          RowBox[{"1", "-", 
           RowBox[{
            SuperscriptBox[
             RowBox[{"Cos", "[", "\[Beta]", "]"}], "2"], 
            SuperscriptBox[
             RowBox[{"Sin", "[", "\[Theta]", "]"}], "2"]}]}], ")"}]}]}], 
       SuperscriptBox[
        RowBox[{"(", 
         RowBox[{"1", "-", 
          SuperscriptBox["v", "2"], "+", 
          RowBox[{
           SuperscriptBox["v", "2"], 
           SuperscriptBox[
            RowBox[{"Cos", "[", "\[Beta]", "]"}], "2"], 
           SuperscriptBox[
            RowBox[{"Sin", "[", "\[Theta]", "]"}], "2"]}]}], ")"}], "2"]], 
      "-", 
      RowBox[{
       FractionBox[
        RowBox[{
         RowBox[{"(", 
          RowBox[{"2", "+", 
           SuperscriptBox["v", "2"], "-", 
           RowBox[{
            SuperscriptBox["v", "2"], 
            SuperscriptBox[
             RowBox[{"Cos", "[", "\[Beta]", "]"}], "2"], 
            SuperscriptBox[
             RowBox[{"Sin", "[", "\[Theta]", "]"}], "2"]}]}], ")"}], 
         RowBox[{"(", 
          RowBox[{"1", "-", 
           SuperscriptBox["v", "2"]}], ")"}], "v", " ", 
         RowBox[{"Cos", "[", "\[Beta]", "]"}], 
         RowBox[{"Sin", "[", "\[Theta]", "]"}]}], 
        RowBox[{"2", 
         SuperscriptBox[
          RowBox[{"(", 
           RowBox[{"1", "-", 
            SuperscriptBox["v", "2"], "+", 
            RowBox[{
             SuperscriptBox["v", "2"], 
             SuperscriptBox[
              RowBox[{"Cos", "[", "\[Beta]", "]"}], "2"], 
             SuperscriptBox[
              RowBox[{"Sin", "[", "\[Theta]", "]"}], "2"]}]}], ")"}], "2"]}]], 
       RowBox[{"Log", "[", 
        FractionBox[
         RowBox[{
          RowBox[{"v", " ", 
           RowBox[{"Cos", "[", "\[Beta]", "]"}], 
           RowBox[{"Sin", "[", "\[Theta]", "]"}]}], "+", 
          SqrtBox[
           RowBox[{"1", "-", 
            SuperscriptBox["v", "2"], "+", 
            RowBox[{
             SuperscriptBox["v", "2"], 
             SuperscriptBox[
              RowBox[{"Cos", "[", "\[Beta]", "]"}], "2"], 
             SuperscriptBox[
              RowBox[{"Sin", "[", "\[Theta]", "]"}], "2"]}]}]]}], 
         RowBox[{
          RowBox[{"v", " ", 
           RowBox[{"Cos", "[", "\[Beta]", "]"}], 
           RowBox[{"Sin", "[", "\[Theta]", "]"}]}], "-", 
          SqrtBox[
           RowBox[{"1", "-", 
            SuperscriptBox["v", "2"], "+", 
            RowBox[{
             SuperscriptBox["v", "2"], 
             SuperscriptBox[
              RowBox[{"Cos", "[", "\[Beta]", "]"}], "2"], 
             SuperscriptBox[
              RowBox[{"Sin", "[", "\[Theta]", "]"}], "2"]}]}]]}]], "]"}]}]}], 
     ")"}]}]}], ";"}]}], "Input"]
}, Open  ]],

Cell[CellGroupData[{

Cell["Coulombic part", "Section",
 CellChangeTimes->{{3.7390941277482853`*^9, 3.739094138156002*^9}}],

Cell[CellGroupData[{

Cell["Real", "Subsection",
 CellChangeTimes->{{3.738900306964458*^9, 3.738900317144824*^9}, {
  3.7390941442080193`*^9, 3.7390941444641314`*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"ReVcparcheck", "[", 
    RowBox[{"r_", ",", "mD_", ",", "v_", ",", "\[Alpha]_"}], "]"}], ":=", 
   RowBox[{
    RowBox[{
     RowBox[{"-", 
      FractionBox["\[Alpha]", "\[Pi]"]}], " ", 
     RowBox[{"NIntegrate", "[", 
      RowBox[{
       RowBox[{
        SuperscriptBox["p", "2"], 
        RowBox[{"Sin", "[", "\[Theta]", "]"}], 
        FractionBox[
         RowBox[{"Exp", "[", 
          RowBox[{"\[ImaginaryI]", " ", "r", " ", "p", " ", 
           RowBox[{"Cos", "[", "\[Theta]", "]"}]}], "]"}], 
         RowBox[{
          SuperscriptBox["p", "2"], "+", 
          RowBox[{"Re", "[", 
           RowBox[{"\[CapitalPi]par", "[", 
            RowBox[{"\[Theta]", ",", "v", ",", "mD"}], "]"}], "]"}]}]]}], ",", 
       RowBox[{"{", 
        RowBox[{"p", ",", "0", ",", "\[Infinity]"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"\[Theta]", ",", "0", ",", "\[Pi]"}], "}"}]}], "]"}]}], "-", 
    RowBox[{"\[Alpha]", " ", "mD"}]}]}], ";"}]], "Input",
 CellChangeTimes->{{3.739094315085435*^9, 3.739094367156939*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"ReVcpar", "[", 
    RowBox[{"r_", ",", "mD_", ",", "v_", ",", "\[Alpha]_"}], "]"}], ":=", 
   RowBox[{
    FractionBox[
     RowBox[{"-", "\[Alpha]"}], "r"], "+", 
    RowBox[{"\[Alpha]", " ", 
     RowBox[{"NIntegrate", "[", 
      RowBox[{
       RowBox[{
        RowBox[{"Sin", "[", "\[Theta]", "]"}], 
        SqrtBox[
         RowBox[{"Re", "[", 
          RowBox[{"\[CapitalPi]par", "[", 
           RowBox[{"\[Theta]", ",", "v", ",", "mD"}], "]"}], "]"}]], 
        RowBox[{"Exp", "[", 
         RowBox[{
          RowBox[{"-", 
           SqrtBox[
            RowBox[{"Re", "[", 
             RowBox[{"\[CapitalPi]par", "[", 
              RowBox[{"\[Theta]", ",", "v", ",", "mD"}], "]"}], "]"}]]}], "r",
           " ", 
          RowBox[{"Cos", "[", "\[Theta]", "]"}]}], "]"}]}], ",", 
       RowBox[{"{", 
        RowBox[{"\[Theta]", ",", "0", ",", 
         RowBox[{"\[Pi]", "/", "2"}]}], "}"}], ",", 
       RowBox[{"MaxRecursion", "\[Rule]", "20"}]}], "]"}]}]}]}], 
  ";"}]], "Input",
 CellChangeTimes->{{3.739094329324869*^9, 3.7390943319333553`*^9}, 
   3.73909437423713*^9, 3.7395107862242117`*^9, {3.739521196264776*^9, 
   3.7395211996438437`*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"ReVcparcheck", "[", 
  RowBox[{"5", ",", "0.15", ",", "0.5", ",", 
   RowBox[{"\[Alpha]cont", "[", 
    RowBox[{"[", "1", "]"}], "]"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.739094178551199*^9, 3.739094187745016*^9}}],

Cell[BoxData[
 TemplateBox[{
  "NIntegrate","ncvb",
   "\"NIntegrate failed to converge to prescribed accuracy after \
\\!\\(\\*RowBox[{\\\"18\\\"}]\\) recursive bisections in \
\\!\\(\\*RowBox[{\\\"p\\\"}]\\) near \\!\\(\\*RowBox[{\\\"{\\\", \
RowBox[{\\\"p\\\", \\\",\\\", \\\"\[Theta]\\\"}], \\\"}\\\"}]\\) = \
\\!\\(\\*RowBox[{\\\"{\\\", RowBox[{\\\"52427.8`\\\", \\\",\\\", \
\\\"0.7853981633974483`\\\"}], \\\"}\\\"}]\\). NIntegrate obtained \
\\!\\(\\*RowBox[{RowBox[{\\\"0.2853943954291211`\\\", \
\\\"\[VeryThinSpace]\\\"}], \\\"-\\\", \
RowBox[{\\\"2.312076429394418`*^-9\\\", \\\" \\\", \
\\\"\[ImaginaryI]\\\"}]}]\\) and \\!\\(\\*RowBox[{\\\"0.00009829673421197649`\
\\\"}]\\) for the integral and error estimates.\"",2,42,6,
   20977378033638850718,"Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.739094510208399*^9}],

Cell[BoxData[
 RowBox[{
  RowBox[{"-", "0.12372615618827001`"}], "+", 
  RowBox[{"3.780752603569179`*^-10", " ", "\[ImaginaryI]"}]}]], "Output",
 CellChangeTimes->{3.739094271171851*^9, 3.739094343682851*^9, 
  3.73909437724552*^9, 3.739094510308259*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"ReVcpar", "[", 
  RowBox[{"5", ",", "0.15", ",", "0.5", ",", 
   RowBox[{"\[Alpha]cont", "[", 
    RowBox[{"[", "1", "]"}], "]"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.739094214498005*^9, 3.739094222400062*^9}}],

Cell[BoxData[
 RowBox[{"-", "0.12372600842601432`"}]], "Output",
 CellChangeTimes->{3.739094271369327*^9, 3.739094381822136*^9, 
  3.739510635572308*^9}]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Imaginary", "Subsection",
 CellChangeTimes->{{3.738660131723031*^9, 3.7386601415262136`*^9}, {
  3.738662893565494*^9, 3.7386629017382812`*^9}, {3.739094239841045*^9, 
  3.739094240825042*^9}}],

Cell[CellGroupData[{

Cell["misc", "Subsubsection",
 CellChangeTimes->{{3.738662911942491*^9, 3.738662915610621*^9}}],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"Clear", "[", 
   RowBox[{"r", ",", "\[Theta]"}], "]"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Assuming", "[", 
   RowBox[{
    RowBox[{"\[Theta]", "\[Element]", "Reals"}], ",", 
    RowBox[{"Integrate", "[", 
     RowBox[{
      FractionBox[
       RowBox[{" ", 
        RowBox[{"p", " ", 
         RowBox[{"Exp", "[", 
          RowBox[{"\[ImaginaryI]", " ", "p", " ", "r", " ", 
           RowBox[{"Cos", "[", "\[Theta]", "]"}]}], "]"}]}]}], 
       RowBox[{
        RowBox[{"(", 
         RowBox[{
          SuperscriptBox["p", "2"], "+", "z"}], ")"}], 
        RowBox[{"(", 
         RowBox[{
          SuperscriptBox["p", "2"], "+", 
          RowBox[{"Conjugate", "[", "z", "]"}]}], ")"}]}]], ",", 
      RowBox[{"{", 
       RowBox[{"p", ",", "0", ",", "\[Infinity]"}], "}"}]}], "]"}]}], "]"}], "//",
   "FullSimplify"}]}], "Input",
 CellChangeTimes->{{3.7386672739677896`*^9, 3.7386672828487253`*^9}, {
  3.738667540991694*^9, 3.738667571757865*^9}, {3.7386680373082247`*^9, 
  3.7386680441568823`*^9}}],

Cell[BoxData[
 RowBox[{"ConditionalExpression", "[", 
  RowBox[{
   RowBox[{"-", 
    RowBox[{
     FractionBox["1", 
      RowBox[{"4", " ", 
       RowBox[{"Im", "[", "z", "]"}]}]], 
     RowBox[{"\[ImaginaryI]", " ", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{"2", " ", 
         RowBox[{"Cosh", "[", 
          RowBox[{"r", " ", 
           SqrtBox["z"], " ", 
           RowBox[{"Cos", "[", "\[Theta]", "]"}]}], "]"}], " ", 
         RowBox[{"CosIntegral", "[", 
          RowBox[{
           RowBox[{"-", "\[ImaginaryI]"}], " ", "r", " ", 
           SqrtBox["z"], " ", 
           RowBox[{"Cos", "[", "\[Theta]", "]"}]}], "]"}]}], "-", 
        RowBox[{"2", " ", 
         RowBox[{"Cosh", "[", 
          RowBox[{"r", " ", 
           SqrtBox[
            RowBox[{"Conjugate", "[", "z", "]"}]], " ", 
           RowBox[{"Cos", "[", "\[Theta]", "]"}]}], "]"}], " ", 
         RowBox[{"CosIntegral", "[", 
          RowBox[{
           RowBox[{"-", "\[ImaginaryI]"}], " ", "r", " ", 
           SqrtBox[
            RowBox[{"Conjugate", "[", "z", "]"}]], " ", 
           RowBox[{"Cos", "[", "\[Theta]", "]"}]}], "]"}]}], "+", 
        RowBox[{"\[ImaginaryI]", " ", "\[Pi]", " ", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{"Sinh", "[", 
            RowBox[{"r", " ", 
             SqrtBox["z"], " ", 
             RowBox[{"Cos", "[", "\[Theta]", "]"}]}], "]"}], "-", 
           RowBox[{"Sinh", "[", 
            RowBox[{"r", " ", 
             SqrtBox[
              RowBox[{"Conjugate", "[", "z", "]"}]], " ", 
             RowBox[{"Cos", "[", "\[Theta]", "]"}]}], "]"}]}], ")"}]}], "-", 
        RowBox[{"2", " ", 
         RowBox[{"Sinh", "[", 
          RowBox[{"r", " ", 
           SqrtBox["z"], " ", 
           RowBox[{"Cos", "[", "\[Theta]", "]"}]}], "]"}], " ", 
         RowBox[{"SinhIntegral", "[", 
          RowBox[{"r", " ", 
           SqrtBox["z"], " ", 
           RowBox[{"Cos", "[", "\[Theta]", "]"}]}], "]"}]}], "+", 
        RowBox[{"2", " ", 
         RowBox[{"Sinh", "[", 
          RowBox[{"r", " ", 
           SqrtBox[
            RowBox[{"Conjugate", "[", "z", "]"}]], " ", 
           RowBox[{"Cos", "[", "\[Theta]", "]"}]}], "]"}], " ", 
         RowBox[{"SinhIntegral", "[", 
          RowBox[{"r", " ", 
           SqrtBox[
            RowBox[{"Conjugate", "[", "z", "]"}]], " ", 
           RowBox[{"Cos", "[", "\[Theta]", "]"}]}], "]"}]}]}], ")"}]}]}]}], 
   ",", 
   RowBox[{
    RowBox[{"(", 
     RowBox[{
      RowBox[{"(", 
       RowBox[{
        RowBox[{
         RowBox[{"Cos", "[", "\[Theta]", "]"}], "<", "0"}], "&&", 
        RowBox[{
         RowBox[{"Im", "[", "r", "]"}], "<", "0"}]}], ")"}], "||", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{
         RowBox[{"Cos", "[", "\[Theta]", "]"}], ">", "0"}], "&&", 
        RowBox[{
         RowBox[{"Im", "[", "r", "]"}], ">", "0"}]}], ")"}]}], ")"}], "&&", 
    RowBox[{"(", 
     RowBox[{
      RowBox[{"(", 
       RowBox[{
        RowBox[{"z", "\[NotEqual]", 
         RowBox[{"Re", "[", "z", "]"}]}], "&&", 
        RowBox[{
         RowBox[{"Re", "[", 
          SqrtBox["z"], "]"}], "\[NotEqual]", "0"}], "&&", 
        RowBox[{
         RowBox[{"Re", "[", 
          SqrtBox[
           RowBox[{"Conjugate", "[", "z", "]"}]], "]"}], "\[NotEqual]", 
         "0"}]}], ")"}], "||", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{
         RowBox[{"Re", "[", 
          SqrtBox["z"], "]"}], ">", "0"}], "&&", 
        RowBox[{
         RowBox[{"Re", "[", 
          SqrtBox[
           RowBox[{"Conjugate", "[", "z", "]"}]], "]"}], ">", "0"}], "&&", 
        RowBox[{
         RowBox[{"Re", "[", "z", "]"}], "\[GreaterEqual]", "0"}]}], ")"}]}], 
     ")"}]}]}], "]"}]], "Output",
 CellChangeTimes->{3.738667368237628*^9, 3.738667569276925*^9, 
  3.738668033611247*^9, 3.7386681315981617`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"Clear", "[", 
   RowBox[{"r", ",", "\[Theta]"}], "]"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Assuming", "[", 
   RowBox[{
    RowBox[{"\[Theta]", "\[Element]", "Reals"}], ",", 
    RowBox[{"Integrate", "[", 
     RowBox[{
      FractionBox[
       RowBox[{" ", 
        RowBox[{"p", " ", 
         RowBox[{"Exp", "[", 
          RowBox[{"\[ImaginaryI]", " ", "p", " ", "r", " ", 
           RowBox[{"Cos", "[", "\[Theta]", "]"}]}], "]"}]}]}], 
       RowBox[{
        RowBox[{"(", 
         RowBox[{
          SuperscriptBox["p", "2"], "+", "z"}], ")"}], 
        RowBox[{"(", 
         RowBox[{
          SuperscriptBox["p", "2"], "+", 
          RowBox[{"Conjugate", "[", "z", "]"}]}], ")"}]}]], ",", 
      RowBox[{"{", 
       RowBox[{"p", ",", 
        RowBox[{"-", "\[Infinity]"}], ",", "0"}], "}"}]}], "]"}]}], "]"}], "//",
   "FullSimplify"}]}], "Input",
 CellChangeTimes->{{3.7386672916813917`*^9, 3.7386672967453337`*^9}, {
  3.738667580640306*^9, 3.7386675844784117`*^9}, {3.7386681570418053`*^9, 
  3.738668164225713*^9}}],

Cell[BoxData[
 RowBox[{"ConditionalExpression", "[", 
  RowBox[{
   RowBox[{"-", 
    RowBox[{
     FractionBox["1", 
      RowBox[{"4", " ", 
       RowBox[{"Im", "[", "z", "]"}]}]], 
     RowBox[{"\[ImaginaryI]", " ", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{
         RowBox[{"-", "2"}], " ", 
         RowBox[{"Cosh", "[", 
          RowBox[{"r", " ", 
           SqrtBox["z"], " ", 
           RowBox[{"Cos", "[", "\[Theta]", "]"}]}], "]"}], " ", 
         RowBox[{"CosIntegral", "[", 
          RowBox[{"\[ImaginaryI]", " ", "r", " ", 
           SqrtBox["z"], " ", 
           RowBox[{"Cos", "[", "\[Theta]", "]"}]}], "]"}]}], "+", 
        RowBox[{"2", " ", 
         RowBox[{"Cosh", "[", 
          RowBox[{"r", " ", 
           SqrtBox[
            RowBox[{"Conjugate", "[", "z", "]"}]], " ", 
           RowBox[{"Cos", "[", "\[Theta]", "]"}]}], "]"}], " ", 
         RowBox[{"CosIntegral", "[", 
          RowBox[{"\[ImaginaryI]", " ", "r", " ", 
           SqrtBox[
            RowBox[{"Conjugate", "[", "z", "]"}]], " ", 
           RowBox[{"Cos", "[", "\[Theta]", "]"}]}], "]"}]}], "+", 
        RowBox[{"\[ImaginaryI]", " ", "\[Pi]", " ", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{"Sinh", "[", 
            RowBox[{"r", " ", 
             SqrtBox["z"], " ", 
             RowBox[{"Cos", "[", "\[Theta]", "]"}]}], "]"}], "-", 
           RowBox[{"Sinh", "[", 
            RowBox[{"r", " ", 
             SqrtBox[
              RowBox[{"Conjugate", "[", "z", "]"}]], " ", 
             RowBox[{"Cos", "[", "\[Theta]", "]"}]}], "]"}]}], ")"}]}], "+", 
        RowBox[{"2", " ", 
         RowBox[{"Sinh", "[", 
          RowBox[{"r", " ", 
           SqrtBox["z"], " ", 
           RowBox[{"Cos", "[", "\[Theta]", "]"}]}], "]"}], " ", 
         RowBox[{"SinhIntegral", "[", 
          RowBox[{"r", " ", 
           SqrtBox["z"], " ", 
           RowBox[{"Cos", "[", "\[Theta]", "]"}]}], "]"}]}], "-", 
        RowBox[{"2", " ", 
         RowBox[{"Sinh", "[", 
          RowBox[{"r", " ", 
           SqrtBox[
            RowBox[{"Conjugate", "[", "z", "]"}]], " ", 
           RowBox[{"Cos", "[", "\[Theta]", "]"}]}], "]"}], " ", 
         RowBox[{"SinhIntegral", "[", 
          RowBox[{"r", " ", 
           SqrtBox[
            RowBox[{"Conjugate", "[", "z", "]"}]], " ", 
           RowBox[{"Cos", "[", "\[Theta]", "]"}]}], "]"}]}]}], ")"}]}]}]}], 
   ",", 
   RowBox[{
    RowBox[{"(", 
     RowBox[{
      RowBox[{"(", 
       RowBox[{
        RowBox[{
         RowBox[{"Im", "[", "r", "]"}], ">", "0"}], "&&", 
        RowBox[{
         RowBox[{"Cos", "[", "\[Theta]", "]"}], "<", "0"}]}], ")"}], "||", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{
         RowBox[{"Cos", "[", "\[Theta]", "]"}], ">", "0"}], "&&", 
        RowBox[{
         RowBox[{"Im", "[", "r", "]"}], "<", "0"}]}], ")"}]}], ")"}], "&&", 
    RowBox[{"(", 
     RowBox[{
      RowBox[{"(", 
       RowBox[{
        RowBox[{"z", "\[NotEqual]", 
         RowBox[{"Re", "[", "z", "]"}]}], "&&", 
        RowBox[{
         RowBox[{"Re", "[", 
          SqrtBox["z"], "]"}], "\[NotEqual]", "0"}], "&&", 
        RowBox[{
         RowBox[{"Re", "[", 
          SqrtBox[
           RowBox[{"Conjugate", "[", "z", "]"}]], "]"}], "\[NotEqual]", 
         "0"}]}], ")"}], "||", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{
         RowBox[{"Re", "[", 
          SqrtBox["z"], "]"}], ">", "0"}], "&&", 
        RowBox[{
         RowBox[{"Re", "[", 
          SqrtBox[
           RowBox[{"Conjugate", "[", "z", "]"}]], "]"}], ">", "0"}], "&&", 
        RowBox[{
         RowBox[{"Re", "[", "z", "]"}], "\[GreaterEqual]", "0"}]}], ")"}]}], 
     ")"}]}]}], "]"}]], "Output",
 CellChangeTimes->{3.738667458894919*^9, 3.738668254535911*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"-", 
    RowBox[{
     FractionBox["1", 
      RowBox[{"4", " ", 
       RowBox[{"Im", "[", "z", "]"}]}]], "\[ImaginaryI]", " ", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{"2", " ", 
        RowBox[{"Cosh", "[", 
         RowBox[{"r", " ", 
          SqrtBox["z"], " ", 
          RowBox[{"Cos", "[", "\[Theta]", "]"}]}], "]"}], " ", 
        RowBox[{"CosIntegral", "[", 
         RowBox[{
          RowBox[{"-", "\[ImaginaryI]"}], " ", "r", " ", 
          SqrtBox["z"], " ", 
          RowBox[{"Cos", "[", "\[Theta]", "]"}]}], "]"}]}], "-", 
       RowBox[{"2", " ", 
        RowBox[{"Cosh", "[", 
         RowBox[{"r", " ", 
          SqrtBox[
           RowBox[{"Conjugate", "[", "z", "]"}]], " ", 
          RowBox[{"Cos", "[", "\[Theta]", "]"}]}], "]"}], " ", 
        RowBox[{"CosIntegral", "[", 
         RowBox[{
          RowBox[{"-", "\[ImaginaryI]"}], " ", "r", " ", 
          SqrtBox[
           RowBox[{"Conjugate", "[", "z", "]"}]], " ", 
          RowBox[{"Cos", "[", "\[Theta]", "]"}]}], "]"}]}], "+", 
       RowBox[{"\[ImaginaryI]", " ", "\[Pi]", " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"Sinh", "[", 
           RowBox[{"r", " ", 
            SqrtBox["z"], " ", 
            RowBox[{"Cos", "[", "\[Theta]", "]"}]}], "]"}], "-", 
          RowBox[{"Sinh", "[", 
           RowBox[{"r", " ", 
            SqrtBox[
             RowBox[{"Conjugate", "[", "z", "]"}]], " ", 
            RowBox[{"Cos", "[", "\[Theta]", "]"}]}], "]"}]}], ")"}]}], "-", 
       RowBox[{"2", " ", 
        RowBox[{"Sinh", "[", 
         RowBox[{"r", " ", 
          SqrtBox["z"], " ", 
          RowBox[{"Cos", "[", "\[Theta]", "]"}]}], "]"}], " ", 
        RowBox[{"SinhIntegral", "[", 
         RowBox[{"r", " ", 
          SqrtBox["z"], " ", 
          RowBox[{"Cos", "[", "\[Theta]", "]"}]}], "]"}]}], "+", 
       RowBox[{"2", " ", 
        RowBox[{"Sinh", "[", 
         RowBox[{"r", " ", 
          SqrtBox[
           RowBox[{"Conjugate", "[", "z", "]"}]], " ", 
          RowBox[{"Cos", "[", "\[Theta]", "]"}]}], "]"}], " ", 
        RowBox[{"SinhIntegral", "[", 
         RowBox[{"r", " ", 
          SqrtBox[
           RowBox[{"Conjugate", "[", "z", "]"}]], " ", 
          RowBox[{"Cos", "[", "\[Theta]", "]"}]}], "]"}]}]}], ")"}]}]}], "+", 
   
   RowBox[{
    FractionBox["1", 
     RowBox[{"4", " ", 
      RowBox[{"Im", "[", "z", "]"}]}]], "\[ImaginaryI]", " ", 
    RowBox[{"(", 
     RowBox[{
      RowBox[{
       RowBox[{"-", "2"}], " ", 
       RowBox[{"Cosh", "[", 
        RowBox[{"r", " ", 
         SqrtBox["z"], " ", 
         RowBox[{"Cos", "[", "\[Theta]", "]"}]}], "]"}], " ", 
       RowBox[{"CosIntegral", "[", 
        RowBox[{"\[ImaginaryI]", " ", "r", " ", 
         SqrtBox["z"], " ", 
         RowBox[{"Cos", "[", "\[Theta]", "]"}]}], "]"}]}], "+", 
      RowBox[{"2", " ", 
       RowBox[{"Cosh", "[", 
        RowBox[{"r", " ", 
         SqrtBox[
          RowBox[{"Conjugate", "[", "z", "]"}]], " ", 
         RowBox[{"Cos", "[", "\[Theta]", "]"}]}], "]"}], " ", 
       RowBox[{"CosIntegral", "[", 
        RowBox[{"\[ImaginaryI]", " ", "r", " ", 
         SqrtBox[
          RowBox[{"Conjugate", "[", "z", "]"}]], " ", 
         RowBox[{"Cos", "[", "\[Theta]", "]"}]}], "]"}]}], "+", 
      RowBox[{"\[ImaginaryI]", " ", "\[Pi]", " ", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"Sinh", "[", 
          RowBox[{"r", " ", 
           SqrtBox["z"], " ", 
           RowBox[{"Cos", "[", "\[Theta]", "]"}]}], "]"}], "-", 
         RowBox[{"Sinh", "[", 
          RowBox[{"r", " ", 
           SqrtBox[
            RowBox[{"Conjugate", "[", "z", "]"}]], " ", 
           RowBox[{"Cos", "[", "\[Theta]", "]"}]}], "]"}]}], ")"}]}], "+", 
      RowBox[{"2", " ", 
       RowBox[{"Sinh", "[", 
        RowBox[{"r", " ", 
         SqrtBox["z"], " ", 
         RowBox[{"Cos", "[", "\[Theta]", "]"}]}], "]"}], " ", 
       RowBox[{"SinhIntegral", "[", 
        RowBox[{"r", " ", 
         SqrtBox["z"], " ", 
         RowBox[{"Cos", "[", "\[Theta]", "]"}]}], "]"}]}], "-", 
      RowBox[{"2", " ", 
       RowBox[{"Sinh", "[", 
        RowBox[{"r", " ", 
         SqrtBox[
          RowBox[{"Conjugate", "[", "z", "]"}]], " ", 
         RowBox[{"Cos", "[", "\[Theta]", "]"}]}], "]"}], " ", 
       RowBox[{"SinhIntegral", "[", 
        RowBox[{"r", " ", 
         SqrtBox[
          RowBox[{"Conjugate", "[", "z", "]"}]], " ", 
         RowBox[{"Cos", "[", "\[Theta]", "]"}]}], "]"}]}]}], ")"}]}]}], "//", 
  "FullSimplify"}]], "Input",
 CellChangeTimes->{{3.738668220072628*^9, 3.738668228445654*^9}, {
  3.738668266155243*^9, 3.738668298059812*^9}}],

Cell[BoxData[
 RowBox[{"-", 
  RowBox[{
   FractionBox["1", 
    RowBox[{"2", " ", 
     RowBox[{"Im", "[", "z", "]"}]}]], 
   RowBox[{"\[ImaginaryI]", " ", 
    RowBox[{"(", 
     RowBox[{
      RowBox[{
       RowBox[{"Cosh", "[", 
        RowBox[{"r", " ", 
         SqrtBox["z"], " ", 
         RowBox[{"Cos", "[", "\[Theta]", "]"}]}], "]"}], " ", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"CosIntegral", "[", 
          RowBox[{
           RowBox[{"-", "\[ImaginaryI]"}], " ", "r", " ", 
           SqrtBox["z"], " ", 
           RowBox[{"Cos", "[", "\[Theta]", "]"}]}], "]"}], "+", 
         RowBox[{"CosIntegral", "[", 
          RowBox[{"\[ImaginaryI]", " ", "r", " ", 
           SqrtBox["z"], " ", 
           RowBox[{"Cos", "[", "\[Theta]", "]"}]}], "]"}]}], ")"}]}], "-", 
      RowBox[{
       RowBox[{"Cosh", "[", 
        RowBox[{"r", " ", 
         SqrtBox[
          RowBox[{"Conjugate", "[", "z", "]"}]], " ", 
         RowBox[{"Cos", "[", "\[Theta]", "]"}]}], "]"}], " ", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"CosIntegral", "[", 
          RowBox[{
           RowBox[{"-", "\[ImaginaryI]"}], " ", "r", " ", 
           SqrtBox[
            RowBox[{"Conjugate", "[", "z", "]"}]], " ", 
           RowBox[{"Cos", "[", "\[Theta]", "]"}]}], "]"}], "+", 
         RowBox[{"CosIntegral", "[", 
          RowBox[{"\[ImaginaryI]", " ", "r", " ", 
           SqrtBox[
            RowBox[{"Conjugate", "[", "z", "]"}]], " ", 
           RowBox[{"Cos", "[", "\[Theta]", "]"}]}], "]"}]}], ")"}]}], "-", 
      RowBox[{"2", " ", 
       RowBox[{"Sinh", "[", 
        RowBox[{"r", " ", 
         SqrtBox["z"], " ", 
         RowBox[{"Cos", "[", "\[Theta]", "]"}]}], "]"}], " ", 
       RowBox[{"SinhIntegral", "[", 
        RowBox[{"r", " ", 
         SqrtBox["z"], " ", 
         RowBox[{"Cos", "[", "\[Theta]", "]"}]}], "]"}]}], "+", 
      RowBox[{"2", " ", 
       RowBox[{"Sinh", "[", 
        RowBox[{"r", " ", 
         SqrtBox[
          RowBox[{"Conjugate", "[", "z", "]"}]], " ", 
         RowBox[{"Cos", "[", "\[Theta]", "]"}]}], "]"}], " ", 
       RowBox[{"SinhIntegral", "[", 
        RowBox[{"r", " ", 
         SqrtBox[
          RowBox[{"Conjugate", "[", "z", "]"}]], " ", 
         RowBox[{"Cos", "[", "\[Theta]", "]"}]}], "]"}]}]}], 
     ")"}]}]}]}]], "Output",
 CellChangeTimes->{3.738668293964458*^9, 3.7386683340371733`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"r", "=", "2"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"z", "=", "3"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"\[Theta]", "=", "0"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{"N", "[", 
  RowBox[{
   RowBox[{"CosIntegral", "[", 
    RowBox[{
     RowBox[{"-", "\[ImaginaryI]"}], " ", "r", " ", 
     SqrtBox["z"], " ", 
     RowBox[{"Cos", "[", "\[Theta]", "]"}]}], "]"}], "+", 
   RowBox[{"CosIntegral", "[", 
    RowBox[{"\[ImaginaryI]", " ", "r", " ", 
     SqrtBox["z"], " ", 
     RowBox[{"Cos", "[", "\[Theta]", "]"}]}], "]"}]}], "]"}]}], "Input",
 CellChangeTimes->{{3.738668365828226*^9, 3.738668396932605*^9}}],

Cell[BoxData[
 RowBox[{"13.58272403272149`", "\[VeryThinSpace]", "+", 
  RowBox[{"0.`", " ", "\[ImaginaryI]"}]}]], "Output",
 CellChangeTimes->{{3.738668384394133*^9, 3.7386683977702713`*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"2", " ", 
  RowBox[{"N", "[", 
   RowBox[{"CoshIntegral", "[", 
    RowBox[{"r", 
     SqrtBox["z"], 
     RowBox[{"Cos", "[", "\[Theta]", "]"}]}], "]"}], "]"}]}]], "Input",
 CellChangeTimes->{{3.738668399825761*^9, 3.738668427549138*^9}}],

Cell[BoxData["13.58272403272149`"], "Output",
 CellChangeTimes->{{3.738668417084566*^9, 3.738668427909939*^9}}]
}, Open  ]]
}, Closed]],

Cell[CellGroupData[{

Cell["sol", "Subsubsection",
 CellChangeTimes->{{3.7386629205473623`*^9, 3.738662926218204*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"ImVcparcheck", "[", 
   RowBox[{"r_", ",", "mD_", ",", "v_", ",", "\[Alpha]_", ",", "T_"}], "]"}], 
  ":=", 
  RowBox[{
   RowBox[{"-", "\[Alpha]"}], " ", "T", " ", 
   SuperscriptBox["mD", "2"], 
   SuperscriptBox[
    RowBox[{"(", 
     RowBox[{"1", "-", 
      SuperscriptBox["v", "2"]}], ")"}], 
    RowBox[{"3", "/", "2"}]], 
   RowBox[{"NIntegrate", "[", 
    RowBox[{
     RowBox[{
      RowBox[{"Sin", "[", "\[Theta]", "]"}], 
      FractionBox[
       RowBox[{"2", "+", 
        RowBox[{
         SuperscriptBox["v", "2"], 
         SuperscriptBox[
          RowBox[{"Sin", "[", "\[Theta]", "]"}], "2"]}]}], 
       RowBox[{"2", " ", 
        SuperscriptBox[
         RowBox[{"(", 
          RowBox[{"1", "+", 
           RowBox[{
            SuperscriptBox["v", "2"], 
            SuperscriptBox[
             RowBox[{"Sin", "[", "\[Theta]", "]"}], "2"]}]}], ")"}], 
         RowBox[{"5", "/", "2"}]]}]], 
      FractionBox[
       RowBox[{"p", " ", 
        RowBox[{"Exp", "[", 
         RowBox[{"\[ImaginaryI]", " ", "p", " ", "r", " ", 
          RowBox[{"Cos", "[", "\[Theta]", "]"}]}], "]"}]}], 
       RowBox[{
        RowBox[{"(", 
         RowBox[{
          SuperscriptBox["p", "2"], "+", 
          RowBox[{"\[CapitalPi]par", "[", 
           RowBox[{"\[Theta]", ",", "v", ",", "mD"}], "]"}]}], ")"}], 
        RowBox[{"(", 
         RowBox[{
          SuperscriptBox["p", "2"], "+", 
          RowBox[{"Conjugate", "[", 
           RowBox[{"\[CapitalPi]par", "[", 
            RowBox[{"\[Theta]", ",", "v", ",", "mD"}], "]"}], "]"}]}], 
         ")"}]}]]}], ",", 
     RowBox[{"{", 
      RowBox[{"p", ",", "0", ",", "\[Infinity]"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"\[Theta]", ",", "0", ",", "\[Pi]"}], "}"}]}], 
    "]"}]}]}]], "Input",
 CellChangeTimes->{{3.7386638629128237`*^9, 3.738664073970587*^9}, {
  3.7386641169558363`*^9, 3.738664190887348*^9}, {3.738666959482628*^9, 
  3.738666959914946*^9}, {3.739094693428453*^9, 3.739094693732066*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"ImVcpar", "[", 
   RowBox[{"r_", ",", "mD_", ",", "v_", ",", "\[Alpha]_", ",", "T_"}], "]"}], 
  ":=", 
  RowBox[{"\[Alpha]", " ", "T", " ", 
   SuperscriptBox["mD", "2"], 
   SuperscriptBox[
    RowBox[{"(", 
     RowBox[{"1", "-", 
      SuperscriptBox["v", "2"]}], ")"}], 
    RowBox[{"3", "/", "2"}]], 
   RowBox[{"NIntegrate", "[", 
    RowBox[{
     RowBox[{"Re", "[", 
      RowBox[{
       RowBox[{"Sin", "[", "\[Theta]", "]"}], 
       FractionBox[
        RowBox[{"2", "+", 
         RowBox[{
          SuperscriptBox["v", "2"], 
          SuperscriptBox[
           RowBox[{"Sin", "[", "\[Theta]", "]"}], "2"]}]}], 
        RowBox[{"2", 
         SuperscriptBox[
          RowBox[{"(", 
           RowBox[{"1", "+", 
            RowBox[{
             SuperscriptBox["v", "2"], 
             SuperscriptBox[
              RowBox[{"Sin", "[", "\[Theta]", "]"}], "2"]}]}], ")"}], 
          RowBox[{"5", "/", "2"}]]}]], 
       FractionBox["1", 
        RowBox[{"\[ImaginaryI]", " ", 
         RowBox[{"Im", "[", 
          RowBox[{"\[CapitalPi]par", "[", 
           RowBox[{"\[Theta]", ",", "v", ",", "mD"}], "]"}], "]"}]}]], 
       RowBox[{"(", 
        RowBox[{
         RowBox[{
          RowBox[{"Sinh", "[", 
           RowBox[{"r", " ", 
            RowBox[{"Cos", "[", "\[Theta]", "]"}], 
            SqrtBox[
             RowBox[{"\[CapitalPi]par", "[", 
              RowBox[{"\[Theta]", ",", "v", ",", "mD"}], "]"}]]}], "]"}], 
          RowBox[{"SinhIntegral", "[", 
           RowBox[{"r", " ", 
            RowBox[{"Cos", "[", "\[Theta]", "]"}], 
            SqrtBox[
             RowBox[{"\[CapitalPi]par", "[", 
              RowBox[{"\[Theta]", ",", "v", ",", "mD"}], "]"}]]}], "]"}]}], 
         "-", 
         RowBox[{
          RowBox[{"Cosh", "[", 
           RowBox[{"r", " ", 
            RowBox[{"Cos", "[", "\[Theta]", "]"}], 
            SqrtBox[
             RowBox[{"\[CapitalPi]par", "[", 
              RowBox[{"\[Theta]", ",", "v", ",", "mD"}], "]"}]]}], "]"}], 
          RowBox[{"CoshIntegral", "[", 
           RowBox[{"r", " ", 
            RowBox[{"Cos", "[", "\[Theta]", "]"}], 
            SqrtBox[
             RowBox[{"\[CapitalPi]par", "[", 
              RowBox[{"\[Theta]", ",", "v", ",", "mD"}], "]"}]]}], "]"}]}], 
         "-", 
         RowBox[{
          RowBox[{"Sinh", "[", 
           RowBox[{"r", " ", 
            RowBox[{"Cos", "[", "\[Theta]", "]"}], 
            SqrtBox[
             RowBox[{"Conjugate", "[", 
              RowBox[{"\[CapitalPi]par", "[", 
               RowBox[{"\[Theta]", ",", "v", ",", "mD"}], "]"}], "]"}]]}], 
           "]"}], 
          RowBox[{"SinhIntegral", "[", 
           RowBox[{"r", " ", 
            RowBox[{"Cos", "[", "\[Theta]", "]"}], 
            SqrtBox[
             RowBox[{"Conjugate", "[", 
              RowBox[{"\[CapitalPi]par", "[", 
               RowBox[{"\[Theta]", ",", "v", ",", "mD"}], "]"}], "]"}]]}], 
           "]"}]}], "+", 
         RowBox[{
          RowBox[{"Cosh", "[", 
           RowBox[{"r", " ", 
            RowBox[{"Cos", "[", "\[Theta]", "]"}], 
            SqrtBox[
             RowBox[{"Conjugate", "[", 
              RowBox[{"\[CapitalPi]par", "[", 
               RowBox[{"\[Theta]", ",", "v", ",", "mD"}], "]"}], "]"}]]}], 
           "]"}], 
          RowBox[{"CoshIntegral", "[", 
           RowBox[{"r", " ", 
            RowBox[{"Cos", "[", "\[Theta]", "]"}], 
            SqrtBox[
             RowBox[{"Conjugate", "[", 
              RowBox[{"\[CapitalPi]par", "[", 
               RowBox[{"\[Theta]", ",", "v", ",", "mD"}], "]"}], "]"}]]}], 
           "]"}]}]}], ")"}]}], "]"}], ",", 
     RowBox[{"{", 
      RowBox[{"\[Theta]", ",", "0", ",", 
       RowBox[{"\[Pi]", "/", "2"}]}], "}"}], ",", 
     RowBox[{"MaxRecursion", "\[Rule]", "20"}]}], "]"}]}]}]], "Input",
 CellChangeTimes->{{3.7392743613912477`*^9, 3.739274361599062*^9}, {
  3.739520947900159*^9, 3.739520953015149*^9}, {3.739521021501712*^9, 
  3.739521025472033*^9}, {3.7395210621989517`*^9, 3.739521062306492*^9}, {
  3.739521098551477*^9, 3.739521098644664*^9}, {3.739521145896346*^9, 
  3.739521189984836*^9}, {3.739522056031592*^9, 3.739522059470598*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"ImVcparcheck", "[", 
  RowBox[{"5", ",", "0.15", ",", "0.5", ",", 
   RowBox[{"\[Alpha]cont", "[", 
    RowBox[{"[", "1", "]"}], "]"}], ",", "0.155"}], "]"}]], "Input",
 CellChangeTimes->{{3.738664196983529*^9, 3.738664218148699*^9}, {
   3.738664465266707*^9, 3.738664465353011*^9}, 3.739094655699388*^9}],

Cell[BoxData[
 RowBox[{
  RowBox[{"-", "0.02814280985909846`"}], "-", 
  RowBox[{"1.7449005100415309`*^-10", " ", "\[ImaginaryI]"}]}]], "Output",
 CellChangeTimes->{3.738664242566061*^9, 3.738664499853271*^9, 
  3.738898807188005*^9, 3.739094670176762*^9, 3.739094708312886*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"ImVcpar", "[", 
  RowBox[{"5", ",", "0.15", ",", "0.5", ",", 
   RowBox[{"\[Alpha]cont", "[", 
    RowBox[{"[", "1", "]"}], "]"}], ",", "0.155"}], "]"}]], "Input",
 CellChangeTimes->{{3.7386648961484632`*^9, 3.738664922178122*^9}, {
   3.738664980076631*^9, 3.7386649801581373`*^9}, {3.738667107278121*^9, 
   3.738667109739457*^9}, 3.739094663059376*^9, {3.7392743648294973`*^9, 
   3.739274365021709*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"-", "0.028142809885446644`"}], "+", 
  RowBox[{"2.2214054190306137`*^-18", " ", "\[ImaginaryI]"}]}]], "Output",
 CellChangeTimes->{
  3.738664922700922*^9, 3.738664980815501*^9, {3.7386671078710938`*^9, 
   3.738667110193246*^9}, 3.738898765743555*^9, 3.738898842228732*^9, 
   3.73909467039008*^9, 3.739094708615285*^9, 3.739274365925248*^9}]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"ImVc0", "[", 
    RowBox[{"r_", ",", "mD_", ",", "\[Alpha]_", ",", "T_"}], "]"}], ":=", 
   RowBox[{
    RowBox[{"-", "\[Alpha]"}], " ", "T", " ", 
    RowBox[{"Quiet", "[", 
     RowBox[{"2", 
      RowBox[{"NIntegrate", "[", 
       RowBox[{
        RowBox[{
         FractionBox["z", 
          SuperscriptBox[
           RowBox[{"(", 
            RowBox[{
             SuperscriptBox["z", "2"], "+", "1"}], ")"}], "2"]], 
         RowBox[{"Sinc", "[", 
          RowBox[{"mD", " ", "r", " ", "z"}], "]"}]}], ",", 
        RowBox[{"{", 
         RowBox[{"z", ",", "0", ",", "\[Infinity]"}], "}"}]}], "]"}]}], 
     "]"}]}]}], ";"}]], "Input",
 CellChangeTimes->{{3.739094520400584*^9, 3.739094550777295*^9}, {
  3.739094632850964*^9, 3.73909463363083*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"ImVc0", "[", 
  RowBox[{"5", ",", "0.15", ",", 
   RowBox[{"\[Alpha]cont", "[", 
    RowBox[{"[", "1", "]"}], "]"}], ",", "0.155"}], "]"}]], "Input",
 CellChangeTimes->{{3.739094700430848*^9, 3.7390947161719017`*^9}}],

Cell[BoxData[
 RowBox[{"-", "0.06254166805188839`"}]], "Output",
 CellChangeTimes->{3.739094718236405*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"ImVcpar", "[", 
  RowBox[{"5", ",", "0.15", ",", "0.01", ",", 
   RowBox[{"\[Alpha]cont", "[", 
    RowBox[{"[", "1", "]"}], "]"}], ",", "0.155"}], "]"}]], "Input",
 CellChangeTimes->{{3.739094726268078*^9, 3.739094730996653*^9}, {
  3.73927440201473*^9, 3.7392744021666*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"-", "0.06252076239961198`"}], "-", 
  RowBox[{"3.5184072007732053`*^-16", " ", "\[ImaginaryI]"}]}]], "Output",
 CellChangeTimes->{{3.739094727533884*^9, 3.73909473200003*^9}, 
   3.73927440729237*^9}]
}, Open  ]]
}, Open  ]]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["String Part", "Section",
 CellChangeTimes->{{3.7390947588715982`*^9, 3.739094765747685*^9}}],

Cell[CellGroupData[{

Cell["New g function (old try)", "Subsubsection",
 CellChangeTimes->{{3.739078897088146*^9, 3.739078916448743*^9}, {
  3.7390948107090483`*^9, 3.739094820669229*^9}, {3.7395108126262617`*^9, 
  3.7395108147380123`*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"gcheck1", "[", 
    RowBox[{"r_", ",", "mD_", ",", "v_"}], "]"}], ":=", 
   RowBox[{
    FractionBox[
     RowBox[{"2", "\[Pi]"}], 
     SuperscriptBox[
      RowBox[{"(", 
       RowBox[{"2", "\[Pi]"}], ")"}], "3"]], " ", 
    SuperscriptBox["mD", "2"], 
    SuperscriptBox[
     RowBox[{"(", 
      RowBox[{"1", "-", 
       SuperscriptBox["v", "2"]}], ")"}], 
     RowBox[{"3", "/", "2"}]], 
    RowBox[{"NIntegrate", "[", 
     RowBox[{
      RowBox[{
       RowBox[{"Sin", "[", "\[Theta]", "]"}], 
       FractionBox[
        RowBox[{"2", "+", 
         RowBox[{
          SuperscriptBox["v", "2"], 
          SuperscriptBox[
           RowBox[{"Sin", "[", "\[Theta]", "]"}], "2"]}]}], 
        RowBox[{"2", 
         SuperscriptBox[
          RowBox[{"(", 
           RowBox[{"1", "+", 
            RowBox[{
             SuperscriptBox["v", "2"], 
             SuperscriptBox[
              RowBox[{"Sin", "[", "\[Theta]", "]"}], "2"]}]}], ")"}], 
          RowBox[{"5", "/", "2"}]]}]], 
       FractionBox[
        RowBox[{"p", " ", 
         RowBox[{"Exp", "[", 
          RowBox[{"\[ImaginaryI]", " ", "p", " ", "r", " ", 
           RowBox[{"Cos", "[", "\[Theta]", "]"}]}], "]"}]}], 
        RowBox[{
         RowBox[{"(", 
          RowBox[{
           SuperscriptBox["p", "2"], "+", 
           RowBox[{"\[CapitalPi]par", "[", 
            RowBox[{"\[Theta]", ",", "v", ",", "mD"}], "]"}]}], ")"}], 
         RowBox[{"(", 
          RowBox[{
           SuperscriptBox["p", "2"], "+", 
           RowBox[{"Conjugate", "[", 
            RowBox[{"\[CapitalPi]par", "[", 
             RowBox[{"\[Theta]", ",", "v", ",", "mD"}], "]"}], "]"}]}], 
          ")"}]}]]}], ",", 
      RowBox[{"{", 
       RowBox[{"p", ",", "0", ",", "\[Infinity]"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"\[Theta]", ",", "0", ",", "\[Pi]"}], "}"}]}], "]"}]}]}], 
  ";"}]], "Input",
 CellChangeTimes->{{3.73907896815559*^9, 3.739079010604744*^9}, {
   3.739079077573646*^9, 3.7390790821811857`*^9}, 3.7390904587381783`*^9, 
   3.739094825911585*^9}],

Cell[BoxData[
 RowBox[{
  RowBox[{"gres1", "[", 
   RowBox[{"r_", ",", "mD_", ",", "v_"}], "]"}], ":=", 
  RowBox[{
   FractionBox[
    RowBox[{"2", "\[Pi]"}], 
    SuperscriptBox[
     RowBox[{"(", 
      RowBox[{"2", "\[Pi]"}], ")"}], "3"]], " ", 
   SuperscriptBox["mD", "2"], 
   SuperscriptBox[
    RowBox[{"(", 
     RowBox[{"1", "-", 
      SuperscriptBox["v", "2"]}], ")"}], 
    RowBox[{"3", "/", "2"}]], 
   RowBox[{"NIntegrate", "[", 
    RowBox[{
     RowBox[{
      RowBox[{"Sin", "[", "\[Theta]", "]"}], 
      FractionBox[
       RowBox[{"2", "+", 
        RowBox[{
         SuperscriptBox["v", "2"], 
         SuperscriptBox[
          RowBox[{"Sin", "[", "\[Theta]", "]"}], "2"]}]}], 
       RowBox[{"2", 
        SuperscriptBox[
         RowBox[{"(", 
          RowBox[{"1", "+", 
           RowBox[{
            SuperscriptBox["v", "2"], 
            SuperscriptBox[
             RowBox[{"Sin", "[", "\[Theta]", "]"}], "2"]}]}], ")"}], 
         RowBox[{"5", "/", "2"}]]}]], 
      FractionBox["\[ImaginaryI]", 
       RowBox[{" ", 
        RowBox[{"Im", "[", 
         RowBox[{"\[CapitalPi]par", "[", 
          RowBox[{"\[Theta]", ",", "v", ",", "mD"}], "]"}], "]"}]}]], 
      RowBox[{"(", 
       RowBox[{
        RowBox[{
         RowBox[{"Sinh", "[", 
          RowBox[{"r", " ", 
           RowBox[{"Cos", "[", "\[Theta]", "]"}], 
           SqrtBox[
            RowBox[{"\[CapitalPi]par", "[", 
             RowBox[{"\[Theta]", ",", "v", ",", "mD"}], "]"}]]}], "]"}], 
         RowBox[{"SinhIntegral", "[", 
          RowBox[{"r", " ", 
           RowBox[{"Cos", "[", "\[Theta]", "]"}], 
           SqrtBox[
            RowBox[{"\[CapitalPi]par", "[", 
             RowBox[{"\[Theta]", ",", "v", ",", "mD"}], "]"}]]}], "]"}]}], 
        "-", 
        RowBox[{
         RowBox[{"Cosh", "[", 
          RowBox[{"r", " ", 
           RowBox[{"Cos", "[", "\[Theta]", "]"}], 
           SqrtBox[
            RowBox[{"\[CapitalPi]par", "[", 
             RowBox[{"\[Theta]", ",", "v", ",", "mD"}], "]"}]]}], "]"}], 
         RowBox[{"CoshIntegral", "[", 
          RowBox[{"r", " ", 
           RowBox[{"Cos", "[", "\[Theta]", "]"}], 
           SqrtBox[
            RowBox[{"\[CapitalPi]par", "[", 
             RowBox[{"\[Theta]", ",", "v", ",", "mD"}], "]"}]]}], "]"}]}], 
        "-", 
        RowBox[{
         RowBox[{"Sinh", "[", 
          RowBox[{"r", " ", 
           RowBox[{"Cos", "[", "\[Theta]", "]"}], 
           SqrtBox[
            RowBox[{"Conjugate", "[", 
             RowBox[{"\[CapitalPi]par", "[", 
              RowBox[{"\[Theta]", ",", "v", ",", "mD"}], "]"}], "]"}]]}], 
          "]"}], 
         RowBox[{"SinhIntegral", "[", 
          RowBox[{"r", " ", 
           RowBox[{"Cos", "[", "\[Theta]", "]"}], 
           SqrtBox[
            RowBox[{"Conjugate", "[", 
             RowBox[{"\[CapitalPi]par", "[", 
              RowBox[{"\[Theta]", ",", "v", ",", "mD"}], "]"}], "]"}]]}], 
          "]"}]}], "+", 
        RowBox[{
         RowBox[{"Cosh", "[", 
          RowBox[{"r", " ", 
           RowBox[{"Cos", "[", "\[Theta]", "]"}], 
           SqrtBox[
            RowBox[{"Conjugate", "[", 
             RowBox[{"\[CapitalPi]par", "[", 
              RowBox[{"\[Theta]", ",", "v", ",", "mD"}], "]"}], "]"}]]}], 
          "]"}], 
         RowBox[{"CoshIntegral", "[", 
          RowBox[{"r", " ", 
           RowBox[{"Cos", "[", "\[Theta]", "]"}], 
           SqrtBox[
            RowBox[{"Conjugate", "[", 
             RowBox[{"\[CapitalPi]par", "[", 
              RowBox[{"\[Theta]", ",", "v", ",", "mD"}], "]"}], "]"}]]}], 
          "]"}]}]}], ")"}]}], ",", 
     RowBox[{"{", 
      RowBox[{"\[Theta]", ",", "0", ",", 
       RowBox[{"\[Pi]", "/", "2"}]}], "}"}]}], "]"}]}]}]], "Input",
 CellChangeTimes->{{3.738664226771593*^9, 3.738664228908372*^9}, {
   3.738664259812797*^9, 3.7386642862138968`*^9}, {3.738664720790042*^9, 
   3.738664890318368*^9}, {3.738666961312306*^9, 3.7386669617411337`*^9}, {
   3.738898832454741*^9, 3.738898838710866*^9}, {3.739079025292976*^9, 
   3.739079049797544*^9}, {3.739079084615226*^9, 3.739079088447274*^9}, 
   3.739090461396196*^9, 3.7390948289007397`*^9}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"gcheck1", "[", 
  RowBox[{"5", ",", "0.15", ",", "0.9"}], "]"}]], "Input",
 CellChangeTimes->{{3.739079094436201*^9, 3.739079099220454*^9}, 
   3.739080087537204*^9, 3.739094830926477*^9}],

Cell[BoxData[
 RowBox[{"0.0019106500737073775`", "\[VeryThinSpace]", "-", 
  RowBox[{"1.2254985455270549`*^-15", " ", "\[ImaginaryI]"}]}]], "Output",
 CellChangeTimes->{3.739079112522729*^9, 3.739080105778393*^9, 
  3.739094853108611*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"gres1", "[", 
  RowBox[{"5", ",", "0.15", ",", "0.9"}], "]"}]], "Input",
 CellChangeTimes->{{3.739079106100781*^9, 3.73907911198112*^9}, 
   3.739080110033855*^9, 3.739094833085945*^9}],

Cell[BoxData[
 RowBox[{"0.0019106500737540721`", "\[VeryThinSpace]", "+", 
  RowBox[{"2.6183271294069068`*^-20", " ", "\[ImaginaryI]"}]}]], "Output",
 CellChangeTimes->{3.739079113138925*^9, 3.739080110453163*^9, 
  3.7390948532989397`*^9}]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"gcheck2", "[", 
    RowBox[{"r_", ",", "mD_", ",", "v_"}], "]"}], ":=", 
   RowBox[{
    FractionBox[
     RowBox[{"2", "\[Pi]"}], 
     SuperscriptBox[
      RowBox[{"(", 
       RowBox[{"2", "\[Pi]"}], ")"}], "3"]], " ", 
    SuperscriptBox[
     RowBox[{"(", 
      RowBox[{"1", "-", 
       SuperscriptBox["v", "2"]}], ")"}], 
     RowBox[{"3", "/", "2"}]], 
    RowBox[{"NIntegrate", "[", 
     RowBox[{
      RowBox[{
       RowBox[{"Sin", "[", "\[Theta]", "]"}], 
       FractionBox[
        RowBox[{"2", "+", 
         RowBox[{
          SuperscriptBox["v", "2"], 
          SuperscriptBox[
           RowBox[{"Sin", "[", "\[Theta]", "]"}], "2"]}]}], 
        RowBox[{"2", 
         SuperscriptBox[
          RowBox[{"(", 
           RowBox[{"1", "+", 
            RowBox[{
             SuperscriptBox["v", "2"], 
             SuperscriptBox[
              RowBox[{"Sin", "[", "\[Theta]", "]"}], "2"]}]}], ")"}], 
          RowBox[{"5", "/", "2"}]]}]], 
       FractionBox[
        RowBox[{
         SuperscriptBox["p", "3"], " ", 
         RowBox[{"Exp", "[", 
          RowBox[{"\[ImaginaryI]", " ", "p", " ", "r", " ", 
           RowBox[{"Cos", "[", "\[Theta]", "]"}]}], "]"}]}], 
        RowBox[{
         RowBox[{"(", 
          RowBox[{
           SuperscriptBox["p", "2"], "+", 
           RowBox[{"\[CapitalPi]par", "[", 
            RowBox[{"\[Theta]", ",", "v", ",", "mD"}], "]"}]}], ")"}], 
         RowBox[{"(", 
          RowBox[{
           SuperscriptBox["p", "2"], "+", 
           RowBox[{"Conjugate", "[", 
            RowBox[{"\[CapitalPi]par", "[", 
             RowBox[{"\[Theta]", ",", "v", ",", "mD"}], "]"}], "]"}]}], 
          ")"}]}]]}], ",", 
      RowBox[{"{", 
       RowBox[{"p", ",", "0", ",", "\[Infinity]"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"\[Theta]", ",", "0", ",", "\[Pi]"}], "}"}]}], "]"}]}]}], 
  ";"}]], "Input",
 CellChangeTimes->{{3.739079143814712*^9, 3.739079151606205*^9}, {
   3.739079244993492*^9, 3.7390792483201323`*^9}, {3.739088281398513*^9, 
   3.739088283839806*^9}, {3.739088524226924*^9, 3.739088526882551*^9}, 
   3.739090467025597*^9, 3.739094861992264*^9}],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"gres2", "[", 
    RowBox[{"r_", ",", "mD_", ",", "v_"}], "]"}], ":=", 
   RowBox[{
    FractionBox[
     RowBox[{"2", "\[Pi]"}], 
     SuperscriptBox[
      RowBox[{"(", 
       RowBox[{"2", "\[Pi]"}], ")"}], "3"]], 
    SuperscriptBox[
     RowBox[{"(", 
      RowBox[{"1", "-", 
       SuperscriptBox["v", "2"]}], ")"}], 
     RowBox[{"3", "/", "2"}]], 
    RowBox[{"NIntegrate", "[", 
     RowBox[{
      RowBox[{
       RowBox[{"Sin", "[", "\[Theta]", "]"}], 
       FractionBox[
        RowBox[{"2", "+", 
         RowBox[{
          SuperscriptBox["v", "2"], 
          SuperscriptBox[
           RowBox[{"Sin", "[", "\[Theta]", "]"}], "2"]}]}], 
        RowBox[{"2", 
         SuperscriptBox[
          RowBox[{"(", 
           RowBox[{"1", "+", 
            RowBox[{
             SuperscriptBox["v", "2"], 
             SuperscriptBox[
              RowBox[{"Sin", "[", "\[Theta]", "]"}], "2"]}]}], ")"}], 
          RowBox[{"5", "/", "2"}]]}]], 
       FractionBox[
        RowBox[{
         SqrtBox["\[Pi]"], " ", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{
            RowBox[{"Conjugate", "[", 
             RowBox[{"\[CapitalPi]par", "[", 
              RowBox[{"\[Theta]", ",", "v", ",", "mD"}], "]"}], "]"}], " ", 
            RowBox[{"MeijerG", "[", 
             RowBox[{
              RowBox[{"{", 
               RowBox[{
                RowBox[{"{", 
                 RowBox[{"-", "1"}], "}"}], ",", 
                RowBox[{"{", "}"}]}], "}"}], ",", 
              RowBox[{"{", 
               RowBox[{
                RowBox[{"{", 
                 RowBox[{
                  RowBox[{"-", "1"}], ",", "0"}], "}"}], ",", 
                RowBox[{"{", 
                 FractionBox["1", "2"], "}"}]}], "}"}], ",", 
              RowBox[{
               FractionBox["1", "4"], " ", 
               SuperscriptBox["r", "2"], " ", 
               RowBox[{"Conjugate", "[", 
                RowBox[{"\[CapitalPi]par", "[", 
                 RowBox[{"\[Theta]", ",", "v", ",", "mD"}], "]"}], "]"}], " ", 
               SuperscriptBox[
                RowBox[{"Cos", "[", "\[Theta]", "]"}], "2"]}]}], "]"}]}], "-", 
           RowBox[{
            RowBox[{"\[CapitalPi]par", "[", 
             RowBox[{"\[Theta]", ",", "v", ",", "mD"}], "]"}], " ", 
            RowBox[{"MeijerG", "[", 
             RowBox[{
              RowBox[{"{", 
               RowBox[{
                RowBox[{"{", 
                 RowBox[{"-", "1"}], "}"}], ",", 
                RowBox[{"{", "}"}]}], "}"}], ",", 
              RowBox[{"{", 
               RowBox[{
                RowBox[{"{", 
                 RowBox[{
                  RowBox[{"-", "1"}], ",", "0"}], "}"}], ",", 
                RowBox[{"{", 
                 FractionBox["1", "2"], "}"}]}], "}"}], ",", 
              RowBox[{
               FractionBox["1", "4"], " ", 
               SuperscriptBox["r", "2"], " ", 
               RowBox[{"\[CapitalPi]par", "[", 
                RowBox[{"\[Theta]", ",", "v", ",", "mD"}], "]"}], " ", 
               SuperscriptBox[
                RowBox[{"Cos", "[", "\[Theta]", "]"}], "2"]}]}], "]"}]}]}], 
          ")"}]}], 
        RowBox[{"2", "\[ImaginaryI]", " ", 
         RowBox[{"Im", "[", 
          RowBox[{"\[CapitalPi]par", "[", 
           RowBox[{"\[Theta]", ",", "v", ",", "mD"}], "]"}], "]"}]}]]}], ",", 
      
      RowBox[{"{", 
       RowBox[{"\[Theta]", ",", "0", ",", 
        RowBox[{
         FractionBox["\[Pi]", "2"], "-", 
         FractionBox["1", "1000000"]}]}], "}"}], ",", 
      RowBox[{"Method", "\[Rule]", "\"\<GlobalAdaptive\>\""}], ",", 
      RowBox[{"WorkingPrecision", "\[Rule]", "10"}]}], "]"}]}]}], 
  ";"}]], "Input",
 CellChangeTimes->{{3.739079229123073*^9, 3.739079266394539*^9}, {
   3.739079302050853*^9, 3.739079370132223*^9}, {3.739079719987997*^9, 
   3.739079770242674*^9}, {3.739080036227463*^9, 3.739080053953874*^9}, {
   3.73908060329176*^9, 3.739080619280477*^9}, {3.739080652549371*^9, 
   3.739080685381729*^9}, {3.7390807941840343`*^9, 3.739080794327162*^9}, 
   3.739082000567609*^9, {3.739087375221854*^9, 3.739087377644568*^9}, {
   3.739088608356867*^9, 3.739088630461583*^9}, {3.739088858553829*^9, 
   3.739088859769309*^9}, 3.739090469073762*^9, 3.73909487161007*^9}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"gcheck2", "[", 
  RowBox[{"5", ",", "0.15", ",", "0.5"}], "]"}]], "Input",
 CellChangeTimes->{{3.739079204175179*^9, 3.7390792125844707`*^9}, 
   3.7390948931784143`*^9}],

Cell[BoxData[
 TemplateBox[{
  "NIntegrate","ncvb",
   "\"NIntegrate failed to converge to prescribed accuracy after \
\\!\\(\\*RowBox[{\\\"18\\\"}]\\) recursive bisections in \
\\!\\(\\*RowBox[{\\\"p\\\"}]\\) near \\!\\(\\*RowBox[{\\\"{\\\", \
RowBox[{\\\"p\\\", \\\",\\\", \\\"\[Theta]\\\"}], \\\"}\\\"}]\\) = \
\\!\\(\\*RowBox[{\\\"{\\\", RowBox[{\\\"9.356707864388855`*^10\\\", \
\\\",\\\", \\\"1.5707963267948966`\\\"}], \\\"}\\\"}]\\). NIntegrate obtained \
\\!\\(\\*RowBox[{RowBox[{\\\"0.5500971689997911`\\\", \
\\\"\[VeryThinSpace]\\\"}], \\\"+\\\", RowBox[{\\\"1.4279033337671887`*^-10\\\
\", \\\" \\\", \\\"\[ImaginaryI]\\\"}]}]\\) and \
\\!\\(\\*RowBox[{\\\"0.00008663019583926538`\\\"}]\\) for the integral and \
error estimates.\"",2,10,13,20977378033638850718,"Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.739095206165615*^9}],

Cell[BoxData[
 RowBox[{"0.009050479068298667`", "\[VeryThinSpace]", "+", 
  RowBox[{"2.349259360361975`*^-12", " ", "\[ImaginaryI]"}]}]], "Output",
 CellChangeTimes->{3.739079210809618*^9, 3.739079243384533*^9, 
  3.739079562173044*^9, 3.739094888778966*^9, 3.739095206184009*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"gres2", "[", 
  RowBox[{"5", ",", "0.15", ",", "0.5"}], "]"}]], "Input",
 CellChangeTimes->{{3.739079412778617*^9, 3.739079413066753*^9}, 
   3.73909489460784*^9}],

Cell[BoxData[
 RowBox[{"0.009050210439374535`", "\[VeryThinSpace]", "+", 
  RowBox[{"1.5964882522711158`*^-6", " ", "\[ImaginaryI]"}]}]], "Output",
 CellChangeTimes->{
  3.7390795691156797`*^9, {3.739079729969639*^9, 3.739079784454646*^9}, 
   3.739080073684626*^9, 3.739080630295945*^9, 3.7390806753647833`*^9, {
   3.7390807910048532`*^9, 3.739080804420747*^9}, 3.739082011553609*^9, {
   3.7390886143923683`*^9, 3.739088636065691*^9}, 3.739094899175058*^9}]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"g", "[", 
    RowBox[{"r_", ",", "mD_", ",", "v_"}], "]"}], ":=", 
   RowBox[{"Re", "[", 
    RowBox[{
     SuperscriptBox[
      RowBox[{"(", 
       RowBox[{"1", "-", 
        SuperscriptBox["v", "2"]}], ")"}], 
      RowBox[{"3", "/", "2"}]], 
     RowBox[{"(", 
      RowBox[{
       RowBox[{"NIntegrate", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"Sin", "[", "\[Theta]", "]"}], 
          FractionBox[
           RowBox[{"2", "+", 
            RowBox[{
             SuperscriptBox["v", "2"], 
             SuperscriptBox[
              RowBox[{"Sin", "[", "\[Theta]", "]"}], "2"]}]}], 
           RowBox[{"2", 
            SuperscriptBox[
             RowBox[{"(", 
              RowBox[{"1", "+", 
               RowBox[{
                SuperscriptBox["v", "2"], 
                SuperscriptBox[
                 RowBox[{"Sin", "[", "\[Theta]", "]"}], "2"]}]}], ")"}], 
             RowBox[{"5", "/", "2"}]]}]], 
          FractionBox[
           RowBox[{"\[ImaginaryI]", " ", 
            SuperscriptBox["mD", "2"]}], 
           RowBox[{" ", 
            RowBox[{"Im", "[", 
             RowBox[{"\[CapitalPi]par", "[", 
              RowBox[{"\[Theta]", ",", "v", ",", "mD"}], "]"}], "]"}]}]], 
          RowBox[{"(", 
           RowBox[{
            RowBox[{
             RowBox[{"Sinh", "[", 
              RowBox[{"r", " ", 
               RowBox[{"Cos", "[", "\[Theta]", "]"}], 
               SqrtBox[
                RowBox[{"\[CapitalPi]par", "[", 
                 RowBox[{"\[Theta]", ",", "v", ",", "mD"}], "]"}]]}], "]"}], 
             RowBox[{"SinhIntegral", "[", 
              RowBox[{"r", " ", 
               RowBox[{"Cos", "[", "\[Theta]", "]"}], 
               SqrtBox[
                RowBox[{"\[CapitalPi]par", "[", 
                 RowBox[{"\[Theta]", ",", "v", ",", "mD"}], "]"}]]}], "]"}]}],
             "-", 
            RowBox[{
             RowBox[{"Cosh", "[", 
              RowBox[{"r", " ", 
               RowBox[{"Cos", "[", "\[Theta]", "]"}], 
               SqrtBox[
                RowBox[{"\[CapitalPi]par", "[", 
                 RowBox[{"\[Theta]", ",", "v", ",", "mD"}], "]"}]]}], "]"}], 
             RowBox[{"CoshIntegral", "[", 
              RowBox[{"r", " ", 
               RowBox[{"Cos", "[", "\[Theta]", "]"}], 
               SqrtBox[
                RowBox[{"\[CapitalPi]par", "[", 
                 RowBox[{"\[Theta]", ",", "v", ",", "mD"}], "]"}]]}], "]"}]}],
             "-", 
            RowBox[{
             RowBox[{"Sinh", "[", 
              RowBox[{"r", " ", 
               RowBox[{"Cos", "[", "\[Theta]", "]"}], 
               SqrtBox[
                RowBox[{"Conjugate", "[", 
                 RowBox[{"\[CapitalPi]par", "[", 
                  RowBox[{"\[Theta]", ",", "v", ",", "mD"}], "]"}], "]"}]]}], 
              "]"}], 
             RowBox[{"SinhIntegral", "[", 
              RowBox[{"r", " ", 
               RowBox[{"Cos", "[", "\[Theta]", "]"}], 
               SqrtBox[
                RowBox[{"Conjugate", "[", 
                 RowBox[{"\[CapitalPi]par", "[", 
                  RowBox[{"\[Theta]", ",", "v", ",", "mD"}], "]"}], "]"}]]}], 
              "]"}]}], "+", 
            RowBox[{
             RowBox[{"Cosh", "[", 
              RowBox[{"r", " ", 
               RowBox[{"Cos", "[", "\[Theta]", "]"}], 
               SqrtBox[
                RowBox[{"Conjugate", "[", 
                 RowBox[{"\[CapitalPi]par", "[", 
                  RowBox[{"\[Theta]", ",", "v", ",", "mD"}], "]"}], "]"}]]}], 
              "]"}], 
             RowBox[{"CoshIntegral", "[", 
              RowBox[{"r", " ", 
               RowBox[{"Cos", "[", "\[Theta]", "]"}], 
               SqrtBox[
                RowBox[{"Conjugate", "[", 
                 RowBox[{"\[CapitalPi]par", "[", 
                  RowBox[{"\[Theta]", ",", "v", ",", "mD"}], "]"}], "]"}]]}], 
              "]"}]}]}], ")"}]}], ",", 
         RowBox[{"{", 
          RowBox[{"\[Theta]", ",", "0", ",", 
           FractionBox["\[Pi]", "2"]}], "}"}]}], "]"}], "+", 
       RowBox[{"NIntegrate", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"Sin", "[", "\[Theta]", "]"}], 
          FractionBox[
           RowBox[{"2", "+", 
            RowBox[{
             SuperscriptBox["v", "2"], 
             SuperscriptBox[
              RowBox[{"Sin", "[", "\[Theta]", "]"}], "2"]}]}], 
           RowBox[{"2", 
            SuperscriptBox[
             RowBox[{"(", 
              RowBox[{"1", "+", 
               RowBox[{
                SuperscriptBox["v", "2"], 
                SuperscriptBox[
                 RowBox[{"Sin", "[", "\[Theta]", "]"}], "2"]}]}], ")"}], 
             RowBox[{"5", "/", "2"}]]}]], 
          FractionBox[
           RowBox[{
            SqrtBox["\[Pi]"], " ", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{
               RowBox[{"Conjugate", "[", 
                RowBox[{"\[CapitalPi]par", "[", 
                 RowBox[{"\[Theta]", ",", "v", ",", "mD"}], "]"}], "]"}], " ", 
               RowBox[{"MeijerG", "[", 
                RowBox[{
                 RowBox[{"{", 
                  RowBox[{
                   RowBox[{"{", 
                    RowBox[{"-", "1"}], "}"}], ",", 
                   RowBox[{"{", "}"}]}], "}"}], ",", 
                 RowBox[{"{", 
                  RowBox[{
                   RowBox[{"{", 
                    RowBox[{
                    RowBox[{"-", "1"}], ",", "0"}], "}"}], ",", 
                   RowBox[{"{", 
                    FractionBox["1", "2"], "}"}]}], "}"}], ",", 
                 RowBox[{
                  FractionBox["1", "4"], " ", 
                  SuperscriptBox["r", "2"], " ", 
                  RowBox[{"Conjugate", "[", 
                   RowBox[{"\[CapitalPi]par", "[", 
                    RowBox[{"\[Theta]", ",", "v", ",", "mD"}], "]"}], "]"}], 
                  " ", 
                  SuperscriptBox[
                   RowBox[{"Cos", "[", "\[Theta]", "]"}], "2"]}]}], "]"}]}], 
              "-", 
              RowBox[{
               RowBox[{"\[CapitalPi]par", "[", 
                RowBox[{"\[Theta]", ",", "v", ",", "mD"}], "]"}], " ", 
               RowBox[{"MeijerG", "[", 
                RowBox[{
                 RowBox[{"{", 
                  RowBox[{
                   RowBox[{"{", 
                    RowBox[{"-", "1"}], "}"}], ",", 
                   RowBox[{"{", "}"}]}], "}"}], ",", 
                 RowBox[{"{", 
                  RowBox[{
                   RowBox[{"{", 
                    RowBox[{
                    RowBox[{"-", "1"}], ",", "0"}], "}"}], ",", 
                   RowBox[{"{", 
                    FractionBox["1", "2"], "}"}]}], "}"}], ",", 
                 RowBox[{
                  FractionBox["1", "4"], " ", 
                  SuperscriptBox["r", "2"], " ", 
                  RowBox[{"\[CapitalPi]par", "[", 
                   RowBox[{"\[Theta]", ",", "v", ",", "mD"}], "]"}], " ", 
                  SuperscriptBox[
                   RowBox[{"Cos", "[", "\[Theta]", "]"}], "2"]}]}], "]"}]}]}],
              ")"}]}], 
           RowBox[{"2", "\[ImaginaryI]", " ", 
            RowBox[{"Im", "[", 
             RowBox[{"\[CapitalPi]par", "[", 
              RowBox[{"\[Theta]", ",", "v", ",", "mD"}], "]"}], "]"}]}]]}], 
         ",", 
         RowBox[{"{", 
          RowBox[{"\[Theta]", ",", "0", ",", 
           RowBox[{
            FractionBox["\[Pi]", "2"], "-", 
            FractionBox["1", "1000000"]}]}], "}"}]}], "]"}]}], ")"}]}], 
    "]"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.739013852681644*^9, 3.739013862417872*^9}, 
   3.739013956406211*^9, {3.739014004005025*^9, 3.739014018325712*^9}, {
   3.739014173150393*^9, 3.7390142270275908`*^9}, {3.7390142672447367`*^9, 
   3.739014269076811*^9}, {3.739014356348774*^9, 3.73901436068576*^9}, {
   3.73908023433362*^9, 3.739080348553377*^9}, {3.739080520531767*^9, 
   3.7390805270733833`*^9}, {3.739089299541566*^9, 3.7390893089149942`*^9}, {
   3.7390897620994864`*^9, 3.739089770603691*^9}, {3.739090477011053*^9, 
   3.739090479490452*^9}, {3.7392742695751038`*^9, 3.7392742895434713`*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"gInt", "=", 
  RowBox[{"Interpolation", "[", 
   RowBox[{"ParallelTable", "[", 
    RowBox[{
     RowBox[{"Quiet", "[", 
      RowBox[{"{", 
       RowBox[{"r", ",", 
        RowBox[{
         RowBox[{"-", 
          RowBox[{"\[Alpha]cont", "[", 
           RowBox[{"[", "1", "]"}], "]"}]}], "0.155", " ", 
         SuperscriptBox["mD", "2"], 
         RowBox[{"g", "[", 
          RowBox[{"r", ",", "0.5", ",", "0.15"}], "]"}]}]}], "}"}], "]"}], 
     ",", 
     RowBox[{"{", 
      RowBox[{"r", ",", "0.1", ",", "100", ",", "0.1"}], "}"}]}], "]"}], 
   "]"}]}]], "Input",
 CellChangeTimes->{{3.739274314159855*^9, 3.739274341765451*^9}, {
  3.739275274736828*^9, 3.73927531018637*^9}}],

Cell["\<\
NIntegrate::errprec: 
   Catastrophic loss of precision in the global error estimate due to
    insufficient WorkingPrecision or divergent integral.\
\>", "Message", "MSG",
 ShowCellLabel->True,
 CellChangeTimes->{3.739277104062653*^9}]
}, Open  ]],

Cell[BoxData[
 RowBox[{"Plot", "[", 
  RowBox[{
   RowBox[{"gInt", "[", "x", "]"}], ",", 
   RowBox[{"{", 
    RowBox[{"x", ",", "0.1", ",", "100"}], "}"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.739277540522181*^9, 3.739277570494082*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"gold", "[", "x_", "]"}], ":=", 
   RowBox[{"Quiet", "[", 
    RowBox[{"2", 
     RowBox[{"NIntegrate", "[", 
      RowBox[{
       RowBox[{
        FractionBox["p", 
         RowBox[{
          SuperscriptBox["p", "2"], "+", "1"}]], 
        RowBox[{"Sinc", "[", 
         RowBox[{"p", " ", "x"}], "]"}]}], ",", 
       RowBox[{"{", 
        RowBox[{"p", ",", "0", ",", "\[Infinity]"}], "}"}]}], "]"}]}], 
    "]"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.7390903960795794`*^9, 3.7390903963357077`*^9}, {
  3.739094925440338*^9, 3.739094933432571*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"gold", "[", 
  RowBox[{"5", " ", "0.15"}], "]"}]], "Input",
 CellChangeTimes->{{3.739089925766859*^9, 3.739089932286298*^9}}],

Cell[BoxData["1.7210734150933455`"], "Output",
 CellChangeTimes->{3.739089987759357*^9, 3.7390952064677267`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"g", "[", 
  RowBox[{"5", ",", "0.15", ",", "0.01"}], "]"}]], "Input",
 CellChangeTimes->{{3.73909494733676*^9, 3.739094953649889*^9}}],

Cell[BoxData[
 TemplateBox[{
  "NIntegrate","slwcon",
   "\"Numerical integration converging too slowly; suspect one of the \
following: singularity, value of the integration is 0, highly oscillatory \
integrand, or WorkingPrecision too small.\"",2,14,14,20977378033638850718,
   "Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.7390952170663033`*^9}],

Cell[BoxData[
 TemplateBox[{
  "NIntegrate","ncvb",
   "\"NIntegrate failed to converge to prescribed accuracy after \
\\!\\(\\*RowBox[{\\\"9\\\"}]\\) recursive bisections in \\!\\(\\*RowBox[{\\\"\
\[Theta]\\\"}]\\) near \\!\\(\\*RowBox[{\\\"{\\\", \\\"\[Theta]\\\", \
\\\"}\\\"}]\\) = \\!\\(\\*RowBox[{\\\"{\\\", \
\\\"1.57078919386801126091579051957669577177512110210955142974853515625`65.\
954589770191\\\", \\\"}\\\"}]\\). NIntegrate obtained \
\\!\\(\\*RowBox[{RowBox[{\\\"0.9353855703916988`\\\", \
\\\"\[VeryThinSpace]\\\"}], \\\"-\\\", \
RowBox[{\\\"0.00007835401695614817`\\\", \\\" \\\", \\\"\[ImaginaryI]\\\"}]}]\
\\) and \\!\\(\\*RowBox[{\\\"0.0009835999091285846`\\\"}]\\) for the integral \
and error estimates.\"",2,14,15,20977378033638850718,"Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.739095217772294*^9}],

Cell[BoxData[
 RowBox[{"1.7204205510652084`", "\[VeryThinSpace]", "-", 
  RowBox[{"0.00007834226414301856`", " ", "\[ImaginaryI]"}]}]], "Output",
 CellChangeTimes->{3.739095217775415*^9}]
}, Open  ]]
}, Closed]],

Cell[CellGroupData[{

Cell["New g function", "Subsection",
 CellChangeTimes->{{3.739510826005206*^9, 3.739510836368946*^9}}],

Cell[CellGroupData[{

Cell["Real part", "Subsubsection",
 CellChangeTimes->{{3.7395134520617847`*^9, 3.739513461738887*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"ReVcpar", "[", 
   RowBox[{"5", ",", "0.15", ",", "0.9", ",", 
    RowBox[{"\[Alpha]cont", "[", 
     RowBox[{"[", "1", "]"}], "]"}]}], "]"}], "//", 
  "AbsoluteTiming"}]], "Input",
 CellChangeTimes->{{3.739511029111236*^9, 3.739511075528923*^9}, {
  3.739511274924909*^9, 3.739511276044115*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"0.022979`", ",", 
   RowBox[{
    RowBox[{"-", "0.05570608219966283`"}], "+", 
    RowBox[{"0.019492120050667493`", " ", "\[ImaginaryI]"}]}]}], 
  "}"}]], "Output",
 CellChangeTimes->{{3.739511059310083*^9, 3.7395110761362267`*^9}, 
   3.739511276581415*^9, 3.73952102890644*^9, 3.739521218312046*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"ReVctab", "=", 
    RowBox[{"ParallelTable", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"r", ",", 
        RowBox[{"ReVcpar", "[", 
         RowBox[{"r", ",", "0.15", ",", "0.8", ",", 
          RowBox[{"\[Alpha]cont", "[", 
           RowBox[{"[", "1", "]"}], "]"}]}], "]"}]}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"r", ",", "0.01", ",", "1000", ",", "0.01"}], "}"}]}], "]"}]}],
    ";"}], "//", "AbsoluteTiming"}], "\n", 
 RowBox[{
  RowBox[{"ReVcinter", "=", 
   RowBox[{"Interpolation", "[", "ReVctab", "]"}]}], ";"}]}], "Input",
 CellChangeTimes->{{3.739510984791724*^9, 3.7395110000571423`*^9}, {
   3.73951129864643*^9, 3.73951137533489*^9}, {3.7395124492265882`*^9, 
   3.739512449570676*^9}, {3.739512527103134*^9, 3.739512528944211*^9}, {
   3.739514352101616*^9, 3.73951435220621*^9}, 3.7395144108794947`*^9, 
   3.739514679996134*^9}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"305.747719`", ",", "Null"}], "}"}]], "Output",
 CellChangeTimes->{3.73951437363977*^9, 3.739514435237701*^9, 
  3.739514986495796*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"ListPlot", "[", 
  RowBox[{
   RowBox[{"ReVctab", "[", 
    RowBox[{"[", 
     RowBox[{";;", "10"}], "]"}], "]"}], ",", 
   RowBox[{"PlotRange", "\[Rule]", "All"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.7395245827442217`*^9, 3.739524595405266*^9}}],

Cell[BoxData[
 GraphicsBox[{{}, {{}, 
    {RGBColor[0.368417, 0.506779, 0.709798], PointSize[0.012833333333333334`],
      AbsoluteThickness[1.6], 
     PointBox[{{0.01, -51.30639743152317}, {0.02, -25.620455557312443`}, {
      0.03, -17.058492868070086`}, {0.04, -12.777524965224476`}, {
      0.05, -10.208954969066783`}, {
      0.060000000000000005`, -8.496583919698637}, {
      0.06999999999999999, -7.273469405738929}, {0.08, -6.356140221500532}, {
      0.09, -5.642667919382526}, {
      0.09999999999999999, -5.071895430827094}}]}, {}}, {}, {}, {{}, {}}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{0.00859375, 0},
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  ImagePadding->All,
  ImageSize->{580., Automatic},
  Method->{"CoordinatesToolOptions" -> {"DisplayFunction" -> ({
        (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
         Part[#, 1]], 
        (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
         Part[#, 2]]}& ), "CopiedValueFunction" -> ({
        (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
         Part[#, 1]], 
        (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
         Part[#, 2]]}& )}},
  PlotRange->{{0.01, 0.09999999999999999}, {-51.30639743152317, 0}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.05], 
     Scaled[0.02]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{{3.739524589875605*^9, 3.739524596182681*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Plot", "[", 
  RowBox[{
   RowBox[{"ReVcinter", "[", "x", "]"}], ",", 
   RowBox[{"{", 
    RowBox[{"x", ",", "0.01", ",", "60"}], "}"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.739511417315258*^9, 3.739511439632359*^9}, {
  3.7395114972406054`*^9, 3.739511518440421*^9}, {3.7395123558643093`*^9, 
  3.739512357396123*^9}, {3.739512542763834*^9, 3.7395125550276012`*^9}, {
  3.739514186004963*^9, 3.7395141870080757`*^9}}],

Cell[BoxData[
 GraphicsBox[{{{}, {}, 
    TagBox[
     {RGBColor[0.368417, 0.506779, 0.709798], AbsoluteThickness[1.6], Opacity[
      1.], LineBox[CompressedData["
1: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
       "]]},
     Annotation[#, "Charting`Private`Tag$11723#1"]& ]}, {}, {}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{0, 0},
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  ImagePadding->All,
  ImageSize->{802., Automatic},
  Method->{
   "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
    AbsolutePointSize[6], "ScalingFunctions" -> None, 
    "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
        (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
         Part[#, 1]], 
        (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
         Part[#, 2]]}& ), "CopiedValueFunction" -> ({
        (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
         Part[#, 1]], 
        (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
         Part[#, 2]]}& )}},
  PlotRange->{{0.01, 60}, {-0.02202207280718527, 0.0055769845623275015`}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.05], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{{3.739511427365048*^9, 3.7395114405705357`*^9}, {
   3.739511498052889*^9, 3.7395115212882833`*^9}, 3.739512358252656*^9, {
   3.739512543513543*^9, 3.739512555661736*^9}, 3.739514189229887*^9, 
   3.7395143799889097`*^9, 3.7395144404690638`*^9, 3.73951498665982*^9}]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"gRe", "[", "x_", "]"}], ":=", 
   RowBox[{
    RowBox[{"-", 
     RowBox[{
      RowBox[{"ReVcinter", "''"}], "[", "x", "]"}]}], "-", 
    RowBox[{
     FractionBox["2", "x"], 
     RowBox[{
      RowBox[{"ReVcinter", "'"}], "[", "x", "]"}]}], "+", 
    RowBox[{
     SuperscriptBox["0.15", "2"], 
     RowBox[{"ReVcinter", "[", "x", "]"}]}]}]}], ";"}]], "Input",
 CellChangeTimes->{{3.739512738259416*^9, 3.7395127938885508`*^9}, {
  3.7395146724439697`*^9, 3.739514674300112*^9}, {3.739524326122518*^9, 
  3.739524327786149*^9}, {3.739524442333345*^9, 3.739524457549972*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Plot", "[", 
  RowBox[{
   RowBox[{"gRe", "[", "x", "]"}], ",", 
   RowBox[{"{", 
    RowBox[{"x", ",", "0.02", ",", "0.1"}], "}"}], ",", 
   RowBox[{"PlotRange", "\[Rule]", "All"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.739512770304809*^9, 3.7395128130728893`*^9}, {
   3.73951420045969*^9, 3.739514200645955*^9}, {3.7395146932522717`*^9, 
   3.739514693931733*^9}, {3.7395235897538147`*^9, 3.7395235902014236`*^9}, {
   3.7395236877562237`*^9, 3.73952373040458*^9}, 3.739524338594926*^9, {
   3.739524395612105*^9, 3.7395243978237*^9}, {3.739524494974927*^9, 
   3.739524509639203*^9}, {3.739524557672274*^9, 3.739524567497818*^9}}],

Cell[BoxData[
 GraphicsBox[{{{}, {}, 
    TagBox[
     {RGBColor[0.368417, 0.506779, 0.709798], AbsoluteThickness[1.6], Opacity[
      1.], LineBox[CompressedData["
1:eJwUV3c81f8XFkVKiKbim4aIspISzkmKbMmmrIiMhqxkJySSdY1wjcvl4k4k
FRVRRoSGkZmSSoqI6vf5/XVfz+uc9znPec6490o6+Zw8y83FxSW2govr/5/u
t2udh4NSgFv/76jsRDfqRqbMGoenQIJzm5+YfA9K+3nfeHgjBcTnGJqBfj34
0XZ7WVZKCqQc/xcTy9OL53bHzZhXpEBNfTeZZ+NrdH1oHf58OAVIXsszX+54
i8cZyqKHPqaAsdcPay7ntyhVuKao+GsKXGt6crGE/BbHYxuaoxZT4O40f7az
+Dt0MZcRhvWpMPr94+lkwT50mprPYemmQrD9406tN/2o9b5LYbtxKojv0jVT
FBrA7V20x7fNUyGe/xgn99gADlc7fPBySgWSheinP/QBdIhs3isdnArKdU/S
WsMH8YwYqS67MhUUmRYNq3iHUHPNJaPVVakQeXN1Upb4EEpwGQwF1qWCj+Xe
jm/7h3Bw/B+PZUsqzJjre406DeFphpv+2tFU8Mvdt+zP/SG001V9d31DGjAa
bDV3Ow/jmtT9UyHiacCUH1qiBwzjw2HFv/470yC1O9Dh161hlLwqt91DKQ2U
RrvX3a8exg/lkh5GRmnwYLOUyK6VI3hRVOD3hug0oOlWnLmXPYLbHfgFhG+l
gaFJR8KeihHspvFK8KekQed0uKrdoxE8cHyZ1iKZsCf4Dy0bHsGlgLnY9w/S
4GHO2JSd5ChGDw5tLplNg9uOS58i00bxoOygLHkpDV67LCvaWDiKn/z7NDJ5
0sF+ZttZH8YoGqztdYxfmw77bkH7+RejuFb7BfXC3nRQiyZJ5yyN4uPbzffd
96dD5MDwjOXKMfQdaGxzOpwOvSovvF+LjmGvX/33UyfSoaODy1B6zxhmUzmH
Dp1NhwLRUeONp8bQcI6pr+SZDtszu82Xnx7Dv1p0e9nL6bBW87/SGrcxdOwv
DRcPT4etmil8AUFjKCWU17LsbjpUyDxeY3l3DN/Y3u37XUC8F5r8F1k0hrEl
mV9+lKZDbJhwe2D5GE4dSV37oSYdQuXf1NfXjSHDN876eXc6iE9bH2t4M4ZW
oWe2Gfalw/E/5qrtg2PIFbd/omM4Hfzb8x1pY2NolDvo2/OV8B8e/9X/bQzn
qKzDVrPp0P2jo1J+dgzvsmO4+xbToWpgRvXUbyJfi9LtoZUkcBbhMxZdPo4p
3XyWzkIkMKoplK5YOY6H3/eLf1hPgnDrbrcta8Yx7md02eftJFj160ap1/px
VPpne8lbhgTPOP6/Tm4ex7f8ioe+y5Og5Eyn+mrxcZT+r69pTp0EPJMfj8zu
GMeXMvRbgUdJcK3ozYndu8fRf//1U0snSBDpkfZObs84SoDNllATgg/j3Ube
vePYdEJ+ZJklCUbuqe5iyY+j96nl1Ch7Eng93Cy1X2kc159568PnQoIHUs80
YvePY517xYE4DxJY1zokMg+Mo4tv5B+BiyQo7xrWoB8cR4FQq6eJ/iRoj9/m
GaE2jqzYvTdFQkiwYrFNXUZ9HG1SuE+mRpHgt7lfV6HGOHLnvt606SYJ4veG
G89qjmMplfY+M4kEvhmKvWI4jqbscIo4iQQh7pSY9UfGcf6hhVdeDglumL+L
GSdwXovs/h1FJNi7t3A+Tmscdbu5FovKSCDNV72w4ug4fhvsaZBmksDjQn65
BYHTPpXGlNWQYCKzS+UagTV/hhrve0QC8fjbrEACf/h7agOjkQSa+ty6BgS+
xb9nQLmVBMpCsutmifj71/0rqOoiAXh+PuhL4H6Jbo9Db0lgHL7sdQvBJ0qG
qlj3nuCzi19ojuAvuz9kXvMDCY6IBi9bgHHs0jR71DBF5NvEbO8i6g06IR2t
/YMELzWG0yIJPbaf+mPwbIEE736JB60m9Go53SWqx5UBk0a2JA9Czwvuxe9a
eTPAUeD8WjKh9ybfYLLxmgzwG/+zvJLoR32I6bku0QxQoRTcSSH65RYrJW8u
lgHb7F68NSX6WZXzss5mdwbY7Khde4ro/2lqUeTA3gwoEn2AGcR8rGAH6Tns
zwDaqtqiKmJ+TrXsfHP2SAa0Bt6LD5Icx6VXCzkfdQi727y+pMQ4Fgy2nz1v
lAEXMkrv54mN48yPgB8XbDPAwTNm1x7Rcbwt0SYYfCUDxsno6cFN1Lclecfg
1QwQ/u/Q0e9/xpC10fogRmRAVFT/AbMF4j4IjzsuT8yA7WsYIyXEfm3l+cOO
L8mAj5vPGeS8G8OKf49bvlZkgJr8Sf5lPWMISzGDJpwMKN6t9gA6xtBpdt3K
9Y8zIMBB7orpkzEsnpAjLkIG1E1PrWmhjuHBsRmff8MZQJrtPi9YMIbPh2qi
HD9mwFcphxSFbGJf32pX7JrNAFXzY+WrE8ZQqdVuWYVgJkzf+tvx34UxfEiP
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
bvnJVsGMI5eTU1N5YKy0MWemQxn/BzU7AIk=
       "]]},
     Annotation[#, "Charting`Private`Tag$1308022#1"]& ]}, {}, {}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{0.020000001632653062`, 0},
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  ImagePadding->All,
  ImageSize->{590., Automatic},
  Method->{
   "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
    AbsolutePointSize[6], "ScalingFunctions" -> None, 
    "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
        (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
         Part[#, 1]], 
        (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
         Part[#, 2]]}& ), "CopiedValueFunction" -> ({
        (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
         Part[#, 1]], 
        (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
         Part[#, 2]]}& )}},
  PlotRange->{All, All},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.05], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{{3.739512778806535*^9, 3.7395128139961233`*^9}, 
   3.73951420366271*^9, 3.739514383804438*^9, 3.739514443754137*^9, 
   3.73951498708817*^9, {3.739523683407769*^9, 3.739523731174988*^9}, {
   3.73952433107768*^9, 3.739524340740406*^9}, 3.739524400235755*^9, {
   3.73952445481842*^9, 3.739524462497149*^9}, {3.739524497978038*^9, 
   3.739524510776898*^9}, {3.739524563068886*^9, 3.7395245687972813`*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"gRe", "[", "0.1", "]"}]], "Input",
 CellChangeTimes->{{3.739524348716735*^9, 3.739524348988402*^9}, {
  3.739524383219286*^9, 3.739524384234976*^9}}],

Cell[BoxData["8.587848893096123`"], "Output",
 CellChangeTimes->{3.739524384944653*^9}]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Imaginary part", "Subsubsection",
 CellChangeTimes->{{3.7395134520617847`*^9, 3.739513472588029*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"Re", "[", 
   RowBox[{"ImVcpar", "[", 
    RowBox[{"100", ",", "0.15", ",", "0.8", ",", 
     RowBox[{"\[Alpha]cont", "[", 
      RowBox[{"[", "1", "]"}], "]"}], ",", "0.155"}], "]"}], "]"}], "//", 
  "AbsoluteTiming"}]], "Input",
 CellChangeTimes->{{3.7395134869421*^9, 3.739513539951384*^9}, 
   3.739513571984128*^9, {3.739520906610359*^9, 3.739520935354967*^9}, {
   3.7395217728624697`*^9, 3.739521773118268*^9}, {3.739521855441434*^9, 
   3.739521860344419*^9}, {3.739521906386939*^9, 3.739521914569448*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"0.145753`", ",", "0.0001440350788104884`"}], "}"}]], "Output",
 CellChangeTimes->{{3.739513485397949*^9, 3.739513540504919*^9}, 
   3.739513572495901*^9, {3.739520909429736*^9, 3.739520936372427*^9}, 
   3.739520988167428*^9, 3.739521036968775*^9, {3.739521067225163*^9, 
   3.7395210934202747`*^9}, 3.739521127222476*^9, 3.7395212517239647`*^9, 
   3.73952180308594*^9, {3.739521856431528*^9, 3.739521907418696*^9}, 
   3.739522071090769*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"Re", "[", 
   RowBox[{"ImVcpar", "[", 
    RowBox[{"150", ",", "0.15", ",", "0.8", ",", 
     RowBox[{"\[Alpha]cont", "[", 
      RowBox[{"[", "1", "]"}], "]"}], ",", "0.155"}], "]"}], "]"}], "//", 
  "AbsoluteTiming"}]], "Input",
 CellChangeTimes->{{3.7395222383785553`*^9, 3.73952223862654*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"0.191704`", ",", "0.00006769687649819257`"}], "}"}]], "Output",
 CellChangeTimes->{3.739522239354424*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"Re", "[", 
   RowBox[{"ImVcpar", "[", 
    RowBox[{"175", ",", "0.15", ",", "0.8", ",", 
     RowBox[{"\[Alpha]cont", "[", 
      RowBox[{"[", "1", "]"}], "]"}], ",", "0.155"}], "]"}], "]"}], "//", 
  "AbsoluteTiming"}]], "Input",
 CellChangeTimes->{{3.7395222455383453`*^9, 3.73952224590663*^9}}],

Cell[BoxData[
 TemplateBox[{
  "NIntegrate","slwcon",
   "\"Numerical integration converging too slowly; suspect one of the \
following: singularity, value of the integration is 0, highly oscillatory \
integrand, or WorkingPrecision too small.\"",2,177,57,32720884764015784859,
   "Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.7395222469351463`*^9}],

Cell[BoxData[
 TemplateBox[{
  "NIntegrate","eincr",
   "\"The global error of the strategy GlobalAdaptive has increased more than \
\\!\\(\\*RowBox[{\\\"400\\\"}]\\) times. The global error is expected to \
decrease monotonically after a number of integrand evaluations. Suspect one \
of the following: the working precision is insufficient for the specified \
precision goal; the integrand is highly oscillatory or it is not a \
(piecewise) smooth function; or the true value of the integral is 0. \
Increasing the value of the GlobalAdaptive option MaxErrorIncreases might \
lead to a convergent numerical integration. NIntegrate obtained \
\\!\\(\\*RowBox[{\\\"0.12832168086337492`\\\"}]\\) and \
\\!\\(\\*RowBox[{\\\"5.981333528074863`*^-6\\\"}]\\) for the integral and \
error estimates.\"",2,177,58,32720884764015784859,"Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.739522271637422*^9}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"25.14673`", ",", "0.000049658540761413944`"}], "}"}]], "Output",
 CellChangeTimes->{3.739522271640733*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"Re", "[", 
   RowBox[{"ImVcpar", "[", 
    RowBox[{"200", ",", "0.15", ",", "0.8", ",", 
     RowBox[{"\[Alpha]cont", "[", 
      RowBox[{"[", "1", "]"}], "]"}], ",", "0.155"}], "]"}], "]"}], "//", 
  "AbsoluteTiming"}]], "Input",
 CellChangeTimes->{{3.73952191878601*^9, 3.739521919042238*^9}}],

Cell[BoxData[
 TemplateBox[{
  "NIntegrate","slwcon",
   "\"Numerical integration converging too slowly; suspect one of the \
following: singularity, value of the integration is 0, highly oscillatory \
integrand, or WorkingPrecision too small.\"",2,173,51,32720884764015784859,
   "Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.739521920132512*^9, 3.739522074353671*^9}],

Cell[BoxData[
 TemplateBox[{
  "NIntegrate","eincr",
   "\"The global error of the strategy GlobalAdaptive has increased more than \
\\!\\(\\*RowBox[{\\\"400\\\"}]\\) times. The global error is expected to \
decrease monotonically after a number of integrand evaluations. Suspect one \
of the following: the working precision is insufficient for the specified \
precision goal; the integrand is highly oscillatory or it is not a \
(piecewise) smooth function; or the true value of the integral is 0. \
Increasing the value of the GlobalAdaptive option MaxErrorIncreases might \
lead to a convergent numerical integration. NIntegrate obtained \
\\!\\(\\*RowBox[{\\\"0.09823729594368016`\\\"}]\\) and \
\\!\\(\\*RowBox[{\\\"0.00018598337517363044`\\\"}]\\) for the integral and \
error estimates.\"",2,173,52,32720884764015784859,"Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.739521920132512*^9, 3.7395221001986217`*^9}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"26.36781`", ",", "0.00003801634090270616`"}], "}"}]], "Output",
 CellChangeTimes->{3.7395219445376368`*^9, 3.739522100201974*^9}]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"ImVctab", "=", 
    RowBox[{"Join", "[", 
     RowBox[{
      RowBox[{"ParallelTable", "[", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"r", ",", 
          RowBox[{"ImVcpar", "[", 
           RowBox[{"r", ",", "0.15", ",", "0.8", ",", 
            RowBox[{"\[Alpha]cont", "[", 
             RowBox[{"[", "1", "]"}], "]"}], ",", "0.155"}], "]"}]}], "}"}], 
        ",", 
        RowBox[{"{", 
         RowBox[{"r", ",", "0.01", ",", "150", ",", "0.01"}], "}"}]}], "]"}], 
      ",", 
      RowBox[{"ParallelTable", "[", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"r", ",", 
          RowBox[{"ImVcpar", "[", 
           RowBox[{"r", ",", "0.15", ",", "0.8", ",", 
            RowBox[{"\[Alpha]cont", "[", 
             RowBox[{"[", "1", "]"}], "]"}], ",", "0.155"}], "]"}]}], "}"}], 
        ",", 
        RowBox[{"{", 
         RowBox[{"r", ",", "150", ",", "200", ",", "1"}], "}"}]}], "]"}]}], 
     "]"}]}], ";"}], "//", "AbsoluteTiming"}]], "Input",
 CellChangeTimes->{{3.739513552711104*^9, 3.73951359599194*^9}, 
   3.739514698684134*^9, {3.7395218712415857`*^9, 3.739521871512149*^9}, {
   3.7395222936040297`*^9, 3.7395223325728407`*^9}, 3.739522892052774*^9}],

Cell[BoxData[
 RowBox[{
  RowBox[{"ImVcinter", "=", 
   RowBox[{"Interpolation", "[", "ImVctab", "]"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.739513552711104*^9, 3.73951359599194*^9}, 
   3.739514698684134*^9, {3.7395218712415857`*^9, 3.739521871512149*^9}, {
   3.7395222936040297`*^9, 3.7395223325728407`*^9}, 3.739522892052774*^9}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Plot", "[", 
  RowBox[{
   RowBox[{"Re", "[", 
    RowBox[{"ImVcinter", "[", "x", "]"}], "]"}], ",", 
   RowBox[{"{", 
    RowBox[{"x", ",", "199", ",", "200"}], "}"}], ",", 
   RowBox[{"PlotRange", "\[Rule]", "All"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.739513610879138*^9, 3.739513611440386*^9}, {
  3.739514705949513*^9, 3.739514706045617*^9}, {3.739520591499667*^9, 
  3.73952062085149*^9}, {3.7395206960867023`*^9, 3.7395206963499737`*^9}, {
  3.739520773975903*^9, 3.739520775851845*^9}, {3.739522944491419*^9, 
  3.7395229735552*^9}}],

Cell[BoxData[
 GraphicsBox[{{{}, {}, 
    TagBox[
     {RGBColor[0.368417, 0.506779, 0.709798], AbsoluteThickness[1.6], Opacity[
      1.], LineBox[CompressedData["
1:eJwVz3s01GkYB3D8Xo015a4Yl2HJRoltumxNet6UbktyO7tLJIt9D7pNubVk
KTsqVhdHbJ2hOK1t2xTqnF2UFV20LoWlWqpRqIbJdTRu++wfz/M9nz+ec76P
bdg+3wgtDQ0NL5z/8+WoLi5G+8YLL8Y5EuAGxUe10JXfmGyXoB36YuZoowtM
j6j3oGOeNs3VRVvmLveLQKuqz5iboBNLnIk/Wk8qEC1Cr5d6h3+OXmvuFLkD
ve+xl5ViEYE8t61/F6LXVBpKdqNN1bpC71eMpn0dR5d/RkD4IPb1EDr+JwgS
OBB4aJWccFrOqFtW+E7thQRW9/HOruthdI/Z2OJOOwIra8U2L9HVIZ6Rtz8l
MGEwIsp+zahrQe/mTFsCgX2b5ovfMCqQNalCbAhsbd4Q/Rz9/bF8kYeQwLRT
3abjvYxO5NXIjawJrMsbyFnch/8y0dJRS+yTVX6jAa3/oJo9syBwb2zKP76f
0SQbkP8iIKDep4wye8voidRtFsfNCYwER/Duo7dO2jEfMwKZrfESyTtG3QVn
T1gvIFAWKNph9J7RH8MLz8yaEpAFSCruoC++L4i9b0JgQVjgyd0KRh8au/oU
GRMIkNf3Gwwwen/V708jjAiI3jWaVKPzxP5iZ0O851LKgwcZ7a7pua1jQKDp
VHknX8lozpiirEGPwEmX0/uvoTvaE7oK5xHoD+B3eH1g9JxBkG7SXAL8Dzp1
anSQ08coNz6ByvOldheGGL1ZssvZWJeAa+XTT74cZlR5JXmoSYeAR1jh7XF0
kqz+fDaPQJ/AoDd3hNH0FPt/wucQ8N7M5WwcZVSq0dYi1CawMb2gohd9N7Na
ouQIdG7rLEofY/TFAX3HOi0Cy47lmC8bZ3RLpl3IEU0C5s0fNVvRUyekUV4a
BOqz5PtTVYymCMrvaM5yMBN8yNd+gtFIPxV5NM1Bx81LWnVofuNBlj/FQVyq
/+oDHxndceFys+ckB5dCSuVGakafW64JNFVzcLY0y6gWbXGwpLR2ggP7DB3D
vZOM1t1JJLEqDtwlS9L0phhN9nApXzvOgUNLa2IVOnRJq7x/lINzYP86ZJrR
VTuvSq+McFCy0tBqBt3VkBZ2YJiDIxdT/70yw+j0+u8OWQ5x8MrqvJ7nLKOD
7edEXUoOctNDu7ejew/nFnSgtw0svOaDFvul8J+gK6que32Fjv9Zv+ceOiPo
XmYYuiPK6fR1tGv+kG4i+pH3lrdH0T+YbOFdRs/VFx53Qq9ImtdRgq7cGzZs
j37X8+Tyb+hnb7KDhGj/8uBNN9CK+b86m6AX+R5Mr0KPRLe1TA9y0JIt41rR
FtZ6xo/R6apvW9vRwszhw4/Qa3Y5FnWiZdxf8np08dIK9250Nt+y7E90QuPD
1LfolsgG72K084psHwXaTWf2lgwtv+Bvq0Q7XbWyzkd7xryoGUXzJswUWWjN
tuJTKvQXsjHfDPQtcVSoGh2zoeqPNHR0kYvrNPpub4xNMtqGPzY7iw6R8qTx
6P8ArvYxuQ==
       "]]},
     Annotation[#, "Charting`Private`Tag$1241103#1"]& ]}, {}, {}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{199.00000002040815`, 0.000038016340912396264`},
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  ImagePadding->All,
  ImageSize->{816., Automatic},
  Method->{
   "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
    AbsolutePointSize[6], "ScalingFunctions" -> None, 
    "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
        (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
         Part[#, 1]], 
        (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
         Part[#, 2]]}& ), "CopiedValueFunction" -> ({
        (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
         Part[#, 1]], 
        (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
         Part[#, 2]]}& )}},
  PlotRange->{All, All},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.05], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{
  3.739513784965605*^9, {3.7395205842031116`*^9, 3.739520621430133*^9}, 
   3.739520696813452*^9, 3.739520776799519*^9, 3.7395228965338783`*^9, {
   3.739522947086912*^9, 3.739522974270336*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"ImVcinter", "'"}], "[", "200", "]"}]], "Input",
 CellChangeTimes->{{3.739522993234991*^9, 3.739523002603921*^9}}],

Cell[BoxData[
 RowBox[{"-", "4.748155070010401`*^-7"}]], "Output",
 CellChangeTimes->{3.739523003401306*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"ImVcinter", "[", "200", "]"}]], "Input",
 CellChangeTimes->{{3.739520628322646*^9, 3.739520634988394*^9}, {
  3.7395229044423313`*^9, 3.7395229047300673`*^9}}],

Cell[BoxData["0.00003801634090270616`"], "Output",
 CellChangeTimes->{3.739520635788742*^9, 3.739522905261683*^9}]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"gIm", "[", "x_", "]"}], ":=", 
   RowBox[{"Re", "[", 
    RowBox[{
     RowBox[{"-", 
      RowBox[{
       RowBox[{"ImVcinter", "''"}], "[", "x", "]"}]}], "-", 
     RowBox[{
      FractionBox["2", "x"], 
      RowBox[{
       RowBox[{"ImVcinter", "'"}], "[", "x", "]"}]}], "+", 
     RowBox[{
      SuperscriptBox["0.15", "2"], 
      RowBox[{"ImVcinter", "[", "x", "]"}]}]}], "]"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.739513618751924*^9, 3.739513630040228*^9}, {
  3.739514135137823*^9, 3.739514137761918*^9}, {3.7395147100685177`*^9, 
  3.739514710611846*^9}, {3.739524354507402*^9, 3.739524355402536*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Plot", "[", 
  RowBox[{
   RowBox[{"gIm", "[", "x", "]"}], ",", 
   RowBox[{"{", 
    RowBox[{"x", ",", "0.01", ",", "60"}], "}"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.739513637720275*^9, 3.739513638343956*^9}, {
  3.739514101120783*^9, 3.739514108632909*^9}, {3.739514150917035*^9, 
  3.7395141660464373`*^9}, {3.73951471450946*^9, 3.739514715028584*^9}, {
  3.739524362547268*^9, 3.73952437309297*^9}}],

Cell[BoxData[
 GraphicsBox[{{{}, {}, 
    TagBox[
     {RGBColor[0.368417, 0.506779, 0.709798], AbsoluteThickness[1.6], Opacity[
      1.], LineBox[CompressedData["
1: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
pjucc7lfeoj/A8Msm6Y=
       "]]},
     Annotation[#, "Charting`Private`Tag$1307634#1"]& ]}, {}, {}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{0, 0},
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  ImagePadding->All,
  ImageSize->{971., Automatic},
  Method->{
   "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
    AbsolutePointSize[6], "ScalingFunctions" -> None, 
    "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
        (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
         Part[#, 1]], 
        (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
         Part[#, 2]]}& ), "CopiedValueFunction" -> ({
        (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
         Part[#, 1]], 
        (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
         Part[#, 2]]}& )}},
  PlotRange->{{0.01, 60}, {-0.0005631246342719872, 0.00006756905146544102}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.05], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{
  3.7395137853503933`*^9, {3.7395141021592607`*^9, 3.7395141095421047`*^9}, {
   3.739514140066032*^9, 3.739514167524501*^9}, 3.739523456116602*^9, {
   3.739524358895997*^9, 3.739524373601254*^9}}]
}, Open  ]]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Real", "Subsection",
 CellChangeTimes->{{3.7390950738192873`*^9, 3.7390950808821583`*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"ReVspar", "[", 
    RowBox[{"r_", ",", "mD_", ",", "v_", ",", "\[Alpha]_"}], "]"}], ":=", 
   RowBox[{
    RowBox[{
     RowBox[{"ParabolicCylinderD", "[", 
      RowBox[{
       RowBox[{
        RowBox[{"-", "1"}], "/", "2"}], ",", 
       RowBox[{
        SqrtBox["2"], 
        SqrtBox["mD"], "r"}]}], "]"}], 
     RowBox[{"NIntegrate", "[", 
      RowBox[{
       RowBox[{
        RowBox[{"Re", "[", 
         RowBox[{"ParabolicCylinderD", "[", 
          RowBox[{
           RowBox[{
            RowBox[{"-", "1"}], "/", "2"}], ",", 
           RowBox[{"\[ImaginaryI]", 
            SqrtBox["2"], 
            SqrtBox["mD"], "s"}]}], "]"}], "]"}], 
        SuperscriptBox["s", "2"], 
        RowBox[{"gRe", "[", "s", "]"}]}], ",", 
       RowBox[{"{", 
        RowBox[{"s", ",", "0", ",", "r"}], "}"}]}], "]"}]}], "+", 
    RowBox[{
     RowBox[{"Re", "[", 
      RowBox[{"ParabolicCylinderD", "[", 
       RowBox[{
        RowBox[{
         RowBox[{"-", "1"}], "/", "2"}], ",", 
        RowBox[{"\[ImaginaryI]", 
         SqrtBox["2"], 
         SqrtBox["mD"], "r"}]}], "]"}], "]"}], 
     RowBox[{"NIntegrate", "[", 
      RowBox[{
       RowBox[{
        RowBox[{"ParabolicCylinderD", "[", 
         RowBox[{
          RowBox[{
           RowBox[{"-", "1"}], "/", "2"}], ",", 
          RowBox[{
           SqrtBox["2"], 
           SqrtBox["mD"], "s"}]}], "]"}], 
        SuperscriptBox["s", "2"], 
        RowBox[{"gRe", "[", "s", "]"}]}], ",", 
       RowBox[{"{", 
        RowBox[{"s", ",", "r", ",", "1000"}], "}"}]}], "]"}]}], "-", 
    RowBox[{
     RowBox[{"ParabolicCylinderD", "[", 
      RowBox[{
       RowBox[{
        RowBox[{"-", "1"}], "/", "2"}], ",", "0"}], "]"}], 
     RowBox[{"NIntegrate", "[", 
      RowBox[{
       RowBox[{
        RowBox[{"ParabolicCylinderD", "[", 
         RowBox[{
          RowBox[{
           RowBox[{"-", "1"}], "/", "2"}], ",", 
          RowBox[{
           SqrtBox["2"], 
           SqrtBox["mD"], "s"}]}], "]"}], 
        SuperscriptBox["s", "2"], 
        RowBox[{"gRe", "[", "s", "]"}]}], ",", 
       RowBox[{"{", 
        RowBox[{"s", ",", "0", ",", "1000"}], "}"}]}], "]"}]}]}]}], 
  ";"}]], "Input",
 CellChangeTimes->{{3.739167454509324*^9, 3.739167583344754*^9}, 
   3.739514599274455*^9, {3.739514730197053*^9, 3.7395147736533823`*^9}, {
   3.739514912952364*^9, 3.7395150645165977`*^9}, {3.739523496622512*^9, 
   3.739523535472694*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"ReVspar", "[", 
  RowBox[{"5", ",", "0.15", ",", "0.5", ",", 
   RowBox[{"\[Alpha]cont", "[", 
    RowBox[{"[", "1", "]"}], "]"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.739523463549837*^9, 3.739523481334695*^9}, {
   3.7395235395443687`*^9, 3.739523544423872*^9}, {3.7395236042257967`*^9, 
   3.739523607304632*^9}, 3.739523808438774*^9}],

Cell[BoxData[
 TemplateBox[{
  "NIntegrate","slwcon",
   "\"Numerical integration converging too slowly; suspect one of the \
following: singularity, value of the integration is 0, highly oscillatory \
integrand, or WorkingPrecision too small.\"",2,216,67,32720884764015784859,
   "Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.7395235468257504`*^9, 3.739523624332204*^9, 
  3.739523816953532*^9}],

Cell[BoxData[
 TemplateBox[{
  "NIntegrate","ncvb",
   "\"NIntegrate failed to converge to prescribed accuracy after \
\\!\\(\\*RowBox[{\\\"9\\\"}]\\) recursive bisections in \
\\!\\(\\*RowBox[{\\\"s\\\"}]\\) near \\!\\(\\*RowBox[{\\\"{\\\", \\\"s\\\", \
\\\"}\\\"}]\\) = \\!\\(\\*RowBox[{\\\"{\\\", \\\"0.03328341646145858`\\\", \\\
\"}\\\"}]\\). NIntegrate obtained \\!\\(\\*RowBox[{\\\"-\\\", \
\\\"495988.0905162294`\\\"}]\\) and \\!\\(\\*RowBox[{\\\"842.3572602227332`\\\
\"}]\\) for the integral and error estimates.\"",2,216,68,
   32720884764015784859,"Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.7395235468257504`*^9, 3.739523624332204*^9, 
  3.73952381707725*^9}],

Cell[BoxData["558983.6438364944`"], "Output",
 CellChangeTimes->{{3.739523601710458*^9, 3.7395236244625797`*^9}, 
   3.739523817080463*^9}]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Imaginary", "Subsection",
 CellChangeTimes->{{3.739515069419999*^9, 3.7395150770974817`*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"ImVspar", "[", 
    RowBox[{"r_", ",", "mD_", ",", "v_", ",", "\[Alpha]_", ",", "\[Sigma]_"}],
     "]"}], ":=", 
   RowBox[{
    RowBox[{
     RowBox[{"ParabolicCylinderD", "[", 
      RowBox[{
       RowBox[{
        RowBox[{"-", "1"}], "/", "2"}], ",", 
       RowBox[{
        SqrtBox["2"], 
        SuperscriptBox[
         RowBox[{"(", 
          RowBox[{
           SuperscriptBox["mD", "2"], 
           FractionBox["\[Sigma]", "\[Alpha]"]}], ")"}], 
         RowBox[{"1", "/", "4"}]], "r"}]}], "]"}], 
     RowBox[{"NIntegrate", "[", 
      RowBox[{
       RowBox[{
        RowBox[{"Re", "[", 
         RowBox[{"ParabolicCylinderD", "[", 
          RowBox[{
           RowBox[{
            RowBox[{"-", "1"}], "/", "2"}], ",", 
           RowBox[{"\[ImaginaryI]", 
            SqrtBox["2"], 
            SuperscriptBox[
             RowBox[{"(", 
              RowBox[{
               SuperscriptBox["mD", "2"], 
               FractionBox["\[Sigma]", "\[Alpha]"]}], ")"}], 
             RowBox[{"1", "/", "4"}]], "s"}]}], "]"}], "]"}], 
        SuperscriptBox["s", "2"], 
        RowBox[{"gIm", "[", "s", "]"}]}], ",", 
       RowBox[{"{", 
        RowBox[{"s", ",", "0", ",", "r"}], "}"}]}], "]"}]}], "+", 
    RowBox[{
     RowBox[{"Re", "[", 
      RowBox[{"ParabolicCylinderD", "[", 
       RowBox[{
        RowBox[{
         RowBox[{"-", "1"}], "/", "2"}], ",", 
        RowBox[{"\[ImaginaryI]", 
         SqrtBox["2"], 
         SuperscriptBox[
          RowBox[{"(", 
           RowBox[{
            SuperscriptBox["mD", "2"], 
            FractionBox["\[Sigma]", "\[Alpha]"]}], ")"}], 
          RowBox[{"1", "/", "4"}]], "r"}]}], "]"}], "]"}], 
     RowBox[{"NIntegrate", "[", 
      RowBox[{
       RowBox[{
        RowBox[{"ParabolicCylinderD", "[", 
         RowBox[{
          RowBox[{
           RowBox[{"-", "1"}], "/", "2"}], ",", 
          RowBox[{
           SqrtBox["2"], 
           SuperscriptBox[
            RowBox[{"(", 
             RowBox[{
              SuperscriptBox["mD", "2"], 
              FractionBox["\[Sigma]", "\[Alpha]"]}], ")"}], 
            RowBox[{"1", "/", "4"}]], "s"}]}], "]"}], 
        SuperscriptBox["s", "2"], 
        RowBox[{"gIm", "[", "s", "]"}]}], ",", 
       RowBox[{"{", 
        RowBox[{"s", ",", "r", ",", "1000"}], "}"}]}], "]"}]}], "-", 
    RowBox[{
     RowBox[{"ParabolicCylinderD", "[", 
      RowBox[{
       RowBox[{
        RowBox[{"-", "1"}], "/", "2"}], ",", "0"}], "]"}], 
     RowBox[{"NIntegrate", "[", 
      RowBox[{
       RowBox[{
        RowBox[{"ParabolicCylinderD", "[", 
         RowBox[{
          RowBox[{
           RowBox[{"-", "1"}], "/", "2"}], ",", 
          RowBox[{
           SqrtBox["2"], 
           SuperscriptBox[
            RowBox[{"(", 
             RowBox[{
              SuperscriptBox["mD", "2"], 
              FractionBox["\[Sigma]", "\[Alpha]"]}], ")"}], 
            RowBox[{"1", "/", "4"}]], "s"}]}], "]"}], 
        SuperscriptBox["s", "2"], 
        RowBox[{"gIm", "[", "s", "]"}]}], ",", 
       RowBox[{"{", 
        RowBox[{"s", ",", "0", ",", "1000"}], "}"}]}], "]"}]}]}]}], 
  ";"}]], "Input",
 CellChangeTimes->{{3.7395150835398607`*^9, 3.739515102628196*^9}}]
}, Open  ]]
}, Open  ]]
},
WindowSize->{1920, 1019},
WindowMargins->{{0, Automatic}, {0, Automatic}},
CellContext->Notebook,
FrontEndVersion->"11.0 for Linux x86 (64-bit) (September 21, 2016)",
StyleDefinitions->"Default.nb"
]
(* End of Notebook Content *)

(* Internal cache information *)
(*CellTagsOutline
CellTagsIndex->{}
*)
(*CellTagsIndex
CellTagsIndex->{}
*)
(*NotebookFileOutline
Notebook[{
Cell[CellGroupData[{
Cell[580, 22, 154, 2, 45, "Subsection"],
Cell[CellGroupData[{
Cell[759, 28, 1401, 32, 71, "Input"],
Cell[2163, 62, 16493, 290, 681, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[18693, 357, 2018, 64, 88, "Input"],
Cell[20714, 423, 645, 19, 34, "Output"]
}, Open  ]]
}, Closed]],
Cell[CellGroupData[{
Cell[21408, 448, 103, 1, 36, "Subsection"],
Cell[21514, 451, 517, 17, 80, "Input"],
Cell[22034, 470, 5520, 164, 166, "Input"]
}, Open  ]],
Cell[CellGroupData[{
Cell[27591, 639, 101, 1, 65, "Section"],
Cell[CellGroupData[{
Cell[27717, 644, 145, 2, 44, "Subsection"],
Cell[27865, 648, 1077, 28, 59, "Input"],
Cell[28945, 678, 1214, 33, 51, "Input"],
Cell[CellGroupData[{
Cell[30184, 715, 244, 5, 34, "Input"],
Cell[30431, 722, 854, 16, 27, "Message"],
Cell[31288, 740, 254, 5, 32, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[31579, 750, 239, 5, 34, "Input"],
Cell[31821, 757, 153, 3, 32, "Output"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[32023, 766, 199, 3, 45, "Subsection"],
Cell[CellGroupData[{
Cell[32247, 773, 95, 1, 35, "Subsubsection"],
Cell[CellGroupData[{
Cell[32367, 778, 1061, 29, 87, "Input"],
Cell[33431, 809, 3841, 108, 115, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[37309, 922, 1085, 30, 87, "Input"],
Cell[38397, 954, 3763, 106, 115, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[42197, 1065, 4666, 126, 170, "Input"],
Cell[46866, 1193, 2385, 65, 81, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[49288, 1263, 679, 18, 113, "Input"],
Cell[49970, 1283, 192, 3, 32, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[50199, 1291, 263, 7, 44, "Input"],
Cell[50465, 1300, 111, 1, 32, "Output"]
}, Open  ]]
}, Closed]],
Cell[CellGroupData[{
Cell[50625, 1307, 96, 1, 29, "Subsubsection"],
Cell[50724, 1310, 2022, 57, 66, "Input"],
Cell[52749, 1369, 4212, 109, 274, "Input"],
Cell[CellGroupData[{
Cell[56986, 1482, 330, 6, 34, "Input"],
Cell[57319, 1490, 278, 5, 32, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[57634, 1500, 431, 8, 34, "Input"],
Cell[58068, 1510, 378, 7, 32, "Output"]
}, Open  ]],
Cell[58461, 1520, 806, 23, 59, "Input"],
Cell[CellGroupData[{
Cell[59292, 1547, 241, 5, 34, "Input"],
Cell[59536, 1554, 106, 2, 32, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[59679, 1561, 300, 6, 34, "Input"],
Cell[59982, 1569, 235, 5, 32, "Output"]
}, Open  ]]
}, Open  ]]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[60290, 1582, 98, 1, 65, "Section"],
Cell[CellGroupData[{
Cell[60413, 1587, 219, 3, 35, "Subsubsection"],
Cell[60635, 1592, 2092, 61, 66, "Input"],
Cell[62730, 1655, 4162, 112, 224, "Input"],
Cell[CellGroupData[{
Cell[66917, 1771, 212, 4, 34, "Input"],
Cell[67132, 1777, 238, 4, 32, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[67407, 1786, 209, 4, 34, "Input"],
Cell[67619, 1792, 240, 4, 32, "Output"]
}, Open  ]],
Cell[67874, 1799, 2186, 62, 66, "Input"],
Cell[70063, 1863, 4305, 111, 277, "Input"],
Cell[CellGroupData[{
Cell[74393, 1978, 194, 4, 34, "Input"],
Cell[74590, 1984, 867, 15, 29, "Message"],
Cell[75460, 2001, 280, 4, 32, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[75777, 2010, 187, 4, 34, "Input"],
Cell[75967, 2016, 460, 7, 32, "Output"]
}, Open  ]],
Cell[76442, 2026, 8178, 202, 433, "Input"],
Cell[CellGroupData[{
Cell[84645, 2232, 711, 20, 37, "Input"],
Cell[85359, 2254, 246, 6, 50, "Message"]
}, Open  ]],
Cell[85620, 2263, 241, 6, 34, "Input"],
Cell[85864, 2271, 601, 18, 54, "Input"],
Cell[CellGroupData[{
Cell[86490, 2293, 149, 3, 32, "Input"],
Cell[86642, 2298, 112, 1, 32, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[86791, 2304, 158, 3, 34, "Input"],
Cell[86952, 2309, 374, 8, 23, "Message"],
Cell[87329, 2319, 850, 15, 41, "Message"],
Cell[88182, 2336, 187, 3, 32, "Output"]
}, Open  ]]
}, Closed]],
Cell[CellGroupData[{
Cell[88418, 2345, 102, 1, 37, "Subsection"],
Cell[CellGroupData[{
Cell[88545, 2350, 102, 1, 35, "Subsubsection"],
Cell[CellGroupData[{
Cell[88672, 2355, 331, 8, 34, "Input"],
Cell[89006, 2365, 341, 8, 34, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[89384, 2378, 917, 22, 57, "Input"],
Cell[90304, 2402, 174, 4, 34, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[90515, 2411, 275, 7, 34, "Input"],
Cell[90793, 2420, 1819, 41, 361, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[92649, 2466, 447, 9, 34, "Input"],
Cell[93099, 2477, 8593, 154, 497, "Output"]
}, Open  ]],
Cell[101707, 2634, 624, 17, 52, "Input"],
Cell[CellGroupData[{
Cell[102356, 2655, 661, 12, 34, "Input"],
Cell[103020, 2669, 28826, 486, 366, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[131883, 3160, 173, 3, 32, "Input"],
Cell[132059, 3165, 87, 1, 32, "Output"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[132195, 3172, 107, 1, 35, "Subsubsection"],
Cell[CellGroupData[{
Cell[132327, 3177, 549, 11, 34, "Input"],
Cell[132879, 3190, 483, 8, 34, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[133399, 3203, 332, 8, 34, "Input"],
Cell[133734, 3213, 145, 3, 34, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[133916, 3221, 332, 8, 34, "Input"],
Cell[134251, 3231, 375, 8, 23, "Message"],
Cell[134629, 3241, 919, 15, 59, "Message"],
Cell[135551, 3258, 146, 3, 34, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[135734, 3266, 330, 8, 34, "Input"],
Cell[136067, 3276, 395, 8, 23, "Message"],
Cell[136465, 3286, 944, 15, 59, "Message"],
Cell[137412, 3303, 169, 3, 34, "Output"]
}, Open  ]],
Cell[137596, 3309, 1240, 32, 34, "Input"],
Cell[138839, 3343, 337, 6, 34, "Input"],
Cell[CellGroupData[{
Cell[139201, 3353, 570, 12, 34, "Input"],
Cell[139774, 3367, 3297, 69, 496, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[143108, 3441, 148, 3, 32, "Input"],
Cell[143259, 3446, 108, 2, 32, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[143404, 3453, 183, 3, 32, "Input"],
Cell[143590, 3458, 114, 1, 32, "Output"]
}, Open  ]],
Cell[143719, 3462, 663, 18, 52, "Input"],
Cell[CellGroupData[{
Cell[144407, 3484, 433, 9, 34, "Input"],
Cell[144843, 3495, 8200, 149, 603, "Output"]
}, Open  ]]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[153104, 3651, 96, 1, 44, "Subsection"],
Cell[153203, 3654, 2454, 75, 112, "Input"],
Cell[CellGroupData[{
Cell[155682, 3733, 365, 7, 34, "Input"],
Cell[156050, 3742, 422, 9, 23, "Message"],
Cell[156475, 3753, 700, 13, 23, "Message"],
Cell[157178, 3768, 139, 2, 32, "Output"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[157366, 3776, 99, 1, 45, "Subsection"],
Cell[157468, 3779, 3233, 98, 129, "Input"]
}, Open  ]]
}, Open  ]]
}
]
*)

