(* Content-type: application/vnd.wolfram.mathematica *)

(*** Wolfram Notebook File ***)
(* http://www.wolfram.com/nb *)

(* CreatedBy='Mathematica 11.0' *)

(*CacheID: 234*)
(* Internal cache information:
NotebookFileLineBreakTest
NotebookFileLineBreakTest
NotebookDataPosition[       158,          7]
NotebookDataLength[    450782,       9234]
NotebookOptionsPosition[    442201,       8943]
NotebookOutlinePosition[    442563,       8959]
CellTagsIndexPosition[    442520,       8956]
WindowFrame->Normal*)

(* Beginning of Notebook Content *)
Notebook[{
Cell[BoxData[
 RowBox[{
  RowBox[{"SetDirectory", "[", 
   RowBox[{"ParentDirectory", "[", 
    RowBox[{"NotebookDirectory", "[", "]"}], "]"}], "]"}], ";"}]], "Input"],

Cell[CellGroupData[{

Cell["Definitions", "Subsection",
 CellChangeTimes->{{3.7390941138488827`*^9, 3.7390941243354483`*^9}}],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"\[Alpha]cont", "=", 
    RowBox[{"SetPrecision", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"0.5137193759431391`", ",", "0.0024666827878353577`"}], "}"}], 
      ",", "500"}], "]"}]}], ";"}], " "}], "\n", 
 RowBox[{
  RowBox[{"\[Sigma]cont", "=", 
   RowBox[{"SetPrecision", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"0.16955497884544793`", ",", "0.0008581023195660334`"}], "}"}], 
     ",", "500"}], "]"}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{"ccont", "=", 
   RowBox[{"SetPrecision", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{"-", "0.15956635071361625`"}], ",", "0.0024752900407607015`"}],
       "}"}], ",", "500"}], "]"}]}], ";"}]}], "Input",
 CellChangeTimes->{{3.74021440746605*^9, 3.740214418536251*^9}, {
  3.74149988237731*^9, 3.7414999069223223`*^9}, {3.7415172718788652`*^9, 
  3.741517272182269*^9}, {3.741670958860105*^9, 3.741670959124123*^9}, {
  3.7416718733975782`*^9, 3.741671875646399*^9}, {3.741689178749639*^9, 
  3.741689183211285*^9}}],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"\[CapitalPi]par", "[", 
    RowBox[{"\[Theta]_", ",", "v_", ",", "mD_"}], "]"}], ":=", 
   RowBox[{"SetPrecision", "[", 
    RowBox[{
     RowBox[{
      FractionBox[
       SuperscriptBox["mD", "2"], "2"], 
      RowBox[{"(", 
       RowBox[{
        FractionBox[
         RowBox[{"2", "-", 
          RowBox[{"2", 
           SuperscriptBox["v", "2"]}], "-", 
          RowBox[{
           SuperscriptBox["v", "4"], 
           SuperscriptBox[
            RowBox[{"Cos", "[", "\[Theta]", "]"}], "2"], 
           SuperscriptBox[
            RowBox[{"Sin", "[", "\[Theta]", "]"}], "2"]}]}], 
         SuperscriptBox[
          RowBox[{"(", 
           RowBox[{"1", "-", 
            RowBox[{
             SuperscriptBox["v", "2"], 
             SuperscriptBox[
              RowBox[{"Sin", "[", "\[Theta]", "]"}], "2"]}]}], ")"}], "2"]], 
        "-", 
        RowBox[{
         FractionBox[
          RowBox[{
           RowBox[{"(", 
            RowBox[{"2", "+", 
             RowBox[{
              SuperscriptBox["v", "2"], 
              SuperscriptBox[
               RowBox[{"Sin", "[", "\[Theta]", "]"}], "2"]}]}], ")"}], 
           RowBox[{"(", 
            RowBox[{"1", "-", 
             SuperscriptBox["v", "2"]}], ")"}], "v", " ", 
           RowBox[{"Cos", "[", "\[Theta]", "]"}]}], 
          RowBox[{"2", 
           SuperscriptBox[
            RowBox[{"(", 
             RowBox[{"1", "-", 
              RowBox[{
               SuperscriptBox["v", "2"], 
               SuperscriptBox[
                RowBox[{"Sin", "[", "\[Theta]", "]"}], "2"]}]}], ")"}], 
            RowBox[{"5", "/", "2"}]]}]], 
         RowBox[{"Log", "[", 
          FractionBox[
           RowBox[{
            RowBox[{"v", " ", 
             RowBox[{"Cos", "[", "\[Theta]", "]"}]}], "+", 
            SqrtBox[
             RowBox[{"1", "-", 
              RowBox[{
               SuperscriptBox["v", "2"], 
               SuperscriptBox[
                RowBox[{"Sin", "[", "\[Theta]", "]"}], "2"]}]}]]}], 
           RowBox[{
            RowBox[{"v", " ", 
             RowBox[{"Cos", "[", "\[Theta]", "]"}]}], "-", 
            SqrtBox[
             RowBox[{"1", "-", 
              RowBox[{
               SuperscriptBox["v", "2"], 
               SuperscriptBox[
                RowBox[{"Sin", "[", "\[Theta]", "]"}], "2"]}]}]]}]], 
          "]"}]}]}], ")"}]}], ",", "200"}], "]"}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"\[CapitalPi]per", "[", 
    RowBox[{"\[Theta]_", ",", "\[Beta]_", ",", "v_", ",", "mD_"}], "]"}], ":=", 
   RowBox[{"SetPrecision", "[", 
    RowBox[{
     RowBox[{
      FractionBox[
       SuperscriptBox["mD", "2"], "2"], 
      RowBox[{"(", 
       RowBox[{
        FractionBox[
         RowBox[{"2", "-", 
          RowBox[{"2", 
           SuperscriptBox["v", "2"]}], "-", 
          RowBox[{
           SuperscriptBox["v", "4"], 
           SuperscriptBox[
            RowBox[{"Cos", "[", "\[Beta]", "]"}], "2"], 
           SuperscriptBox[
            RowBox[{"Sin", "[", "\[Theta]", "]"}], "2"], 
           RowBox[{"(", 
            RowBox[{"1", "-", 
             RowBox[{
              SuperscriptBox[
               RowBox[{"Cos", "[", "\[Beta]", "]"}], "2"], 
              SuperscriptBox[
               RowBox[{"Sin", "[", "\[Theta]", "]"}], "2"]}]}], ")"}]}]}], 
         SuperscriptBox[
          RowBox[{"(", 
           RowBox[{"1", "-", 
            SuperscriptBox["v", "2"], "+", 
            RowBox[{
             SuperscriptBox["v", "2"], 
             SuperscriptBox[
              RowBox[{"Cos", "[", "\[Beta]", "]"}], "2"], 
             SuperscriptBox[
              RowBox[{"Sin", "[", "\[Theta]", "]"}], "2"]}]}], ")"}], "2"]], 
        "-", 
        RowBox[{
         FractionBox[
          RowBox[{
           RowBox[{"(", 
            RowBox[{"2", "+", 
             SuperscriptBox["v", "2"], "-", 
             RowBox[{
              SuperscriptBox["v", "2"], 
              SuperscriptBox[
               RowBox[{"Cos", "[", "\[Beta]", "]"}], "2"], 
              SuperscriptBox[
               RowBox[{"Sin", "[", "\[Theta]", "]"}], "2"]}]}], ")"}], 
           RowBox[{"(", 
            RowBox[{"1", "-", 
             SuperscriptBox["v", "2"]}], ")"}], "v", " ", 
           RowBox[{"Cos", "[", "\[Beta]", "]"}], 
           RowBox[{"Sin", "[", "\[Theta]", "]"}]}], 
          RowBox[{"2", 
           SuperscriptBox[
            RowBox[{"(", 
             RowBox[{"1", "-", 
              SuperscriptBox["v", "2"], "+", 
              RowBox[{
               SuperscriptBox["v", "2"], 
               SuperscriptBox[
                RowBox[{"Cos", "[", "\[Beta]", "]"}], "2"], 
               SuperscriptBox[
                RowBox[{"Sin", "[", "\[Theta]", "]"}], "2"]}]}], ")"}], 
            "2"]}]], 
         RowBox[{"Log", "[", 
          FractionBox[
           RowBox[{
            RowBox[{"v", " ", 
             RowBox[{"Cos", "[", "\[Beta]", "]"}], 
             RowBox[{"Sin", "[", "\[Theta]", "]"}]}], "+", 
            SqrtBox[
             RowBox[{"1", "-", 
              SuperscriptBox["v", "2"], "+", 
              RowBox[{
               SuperscriptBox["v", "2"], 
               SuperscriptBox[
                RowBox[{"Cos", "[", "\[Beta]", "]"}], "2"], 
               SuperscriptBox[
                RowBox[{"Sin", "[", "\[Theta]", "]"}], "2"]}]}]]}], 
           RowBox[{
            RowBox[{"v", " ", 
             RowBox[{"Cos", "[", "\[Beta]", "]"}], 
             RowBox[{"Sin", "[", "\[Theta]", "]"}]}], "-", 
            SqrtBox[
             RowBox[{"1", "-", 
              SuperscriptBox["v", "2"], "+", 
              RowBox[{
               SuperscriptBox["v", "2"], 
               SuperscriptBox[
                RowBox[{"Cos", "[", "\[Beta]", "]"}], "2"], 
               SuperscriptBox[
                RowBox[{"Sin", "[", "\[Theta]", "]"}], "2"]}]}]]}]], 
          "]"}]}]}], ")"}]}], ",", "100"}], "]"}]}], ";"}]}], "Input",
 CellChangeTimes->{
  3.7414288192094717`*^9, {3.741499923646555*^9, 3.741499932251596*^9}, {
   3.741517268913258*^9, 3.74151726922427*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell["Real part", "Chapter",
 CellChangeTimes->{{3.7390941277482853`*^9, 3.739094138156002*^9}, {
  3.741689211162672*^9, 3.741689211730427*^9}}],

Cell[CellGroupData[{

Cell["Coulomb", "Subchapter",
 CellChangeTimes->{{3.738900306964458*^9, 3.738900317144824*^9}, {
  3.7390941442080193`*^9, 3.7390941444641314`*^9}, {3.7416892146028023`*^9, 
  3.741689225018568*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"ReVcpar", "[", 
    RowBox[{"r_", ",", "mD_", ",", "v_", ",", "\[Alpha]_"}], "]"}], ":=", 
   RowBox[{
    FractionBox[
     RowBox[{"-", "\[Alpha]"}], "r"], "+", 
    RowBox[{"\[Alpha]", " ", 
     RowBox[{"NIntegrate", "[", 
      RowBox[{
       RowBox[{
        RowBox[{"Sin", "[", "\[Theta]", "]"}], 
        SqrtBox[
         RowBox[{"Re", "[", 
          RowBox[{"\[CapitalPi]par", "[", 
           RowBox[{"\[Theta]", ",", "v", ",", "mD"}], "]"}], "]"}]], 
        RowBox[{"Exp", "[", 
         RowBox[{
          RowBox[{"-", 
           SqrtBox[
            RowBox[{"Re", "[", 
             RowBox[{"\[CapitalPi]par", "[", 
              RowBox[{"\[Theta]", ",", "v", ",", "mD"}], "]"}], "]"}]]}], "r",
           " ", 
          RowBox[{"Cos", "[", "\[Theta]", "]"}]}], "]"}]}], ",", 
       RowBox[{"{", 
        RowBox[{"\[Theta]", ",", "0", ",", 
         RowBox[{"\[Pi]", "/", "2"}]}], "}"}], ",", 
       RowBox[{"MaxRecursion", "\[Rule]", "20"}]}], "]"}]}]}]}], 
  ";"}]], "Input",
 CellChangeTimes->{{3.739094329324869*^9, 3.7390943319333553`*^9}, 
   3.73909437423713*^9, 3.7395107862242117`*^9, {3.739521196264776*^9, 
   3.7395211996438437`*^9}, {3.741343535568157*^9, 3.741343540615954*^9}, {
   3.7415000996944*^9, 3.74150012787891*^9}, 3.741689541394513*^9, {
   3.741689762822711*^9, 3.741689770151307*^9}}],

Cell[CellGroupData[{

Cell["Check that ReVcpar[m -> 0] -> -\[Alpha]/r", "Subsubsection",
 CellChangeTimes->{{3.741689248831089*^9, 3.741689294832055*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Limit", "[", 
  RowBox[{
   RowBox[{"\[CapitalPi]par", "[", 
    RowBox[{"\[Theta]", ",", "v", ",", "mD"}], "]"}], ",", 
   RowBox[{"mD", "\[Rule]", "0"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.741689355344458*^9, 3.7416893862872343`*^9}, 
   3.741689422156065*^9}],

Cell[BoxData["0"], "Output",
 CellChangeTimes->{{3.741689410132537*^9, 3.741689424404077*^9}, 
   3.741696807111472*^9, 3.741696849253552*^9, 3.741928805800016*^9}]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["\<\
Check that this results replicates original 3d integral (i.e. that contour \
integral was performed correctly)\
\>", "Subsubsection",
 CellChangeTimes->{{3.741689248831089*^9, 3.741689294832055*^9}, {
  3.741689441599021*^9, 3.741689470167807*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"ReVcparcheck", "[", 
    RowBox[{"r_", ",", "mD_", ",", "v_", ",", "\[Alpha]_"}], "]"}], ":=", 
   RowBox[{
    RowBox[{"-", 
     FractionBox["\[Alpha]", "\[Pi]"]}], 
    RowBox[{"Quiet", "[", " ", 
     RowBox[{"NIntegrate", "[", 
      RowBox[{
       RowBox[{
        SuperscriptBox["p", "2"], 
        RowBox[{"Sin", "[", "\[Theta]", "]"}], 
        FractionBox[
         RowBox[{"Exp", "[", 
          RowBox[{"\[ImaginaryI]", " ", "r", " ", "p", " ", 
           RowBox[{"Cos", "[", "\[Theta]", "]"}]}], "]"}], 
         RowBox[{
          SuperscriptBox["p", "2"], "+", 
          RowBox[{"Re", "[", 
           RowBox[{"\[CapitalPi]par", "[", 
            RowBox[{"\[Theta]", ",", "v", ",", "mD"}], "]"}], "]"}]}]]}], ",", 
       RowBox[{"{", 
        RowBox[{"p", ",", "0", ",", "\[Infinity]"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"\[Theta]", ",", "0", ",", "\[Pi]"}], "}"}]}], "]"}], 
     "]"}]}]}], ";"}]], "Input",
 CellChangeTimes->{{3.7416968313386393`*^9, 3.7416968415790167`*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Quiet", "[", 
  RowBox[{"ParallelTable", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"a", ",", 
      RowBox[{"ReVcparcheck", "[", 
       RowBox[{
        SuperscriptBox["10", "a"], ",", 
        RowBox[{"15", "/", "100"}], ",", 
        RowBox[{"1", "/", "2"}], ",", 
        RowBox[{"\[Alpha]cont", "[", 
         RowBox[{"[", "1", "]"}], "]"}]}], "]"}]}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"a", ",", 
      RowBox[{"-", "10"}], ",", "10"}], "}"}]}], "]"}], "]"}]], "Input",
 CellChangeTimes->{{3.739094178551199*^9, 3.739094187745016*^9}, {
  3.741499869081141*^9, 3.741499878819765*^9}, {3.7414999444589148`*^9, 
  3.741499995411406*^9}, {3.74150015227931*^9, 3.741500159047203*^9}, {
  3.741500302522359*^9, 3.7415003069810133`*^9}, {3.74193218628011*^9, 
  3.741932198167811*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{
    RowBox[{"-", "8.966831351053253`*^7"}], "+", 
    RowBox[{"6.549760967004054`*^-6", " ", "\[ImaginaryI]"}]}], ",", 
   RowBox[{
    RowBox[{"-", "1.1181555492218573`*^9"}], "+", 
    RowBox[{"1.1890935093148784`*^-6", " ", "\[ImaginaryI]"}]}], ",", 
   RowBox[{
    RowBox[{"-", "3.0029405033385336`*^7"}], "+", 
    RowBox[{"93.46469199970045`", " ", "\[ImaginaryI]"}]}], ",", 
   RowBox[{
    RowBox[{"-", "5.396153657105921`*^6"}], "+", 
    RowBox[{"0.1708169389592332`", " ", "\[ImaginaryI]"}]}], ",", 
   RowBox[{
    RowBox[{"-", "509106.243702963`"}], "+", 
    RowBox[{"0.10950009576677798`", " ", "\[ImaginaryI]"}]}], ",", 
   RowBox[{
    RowBox[{"-", "51373.660586051345`"}], "+", 
    RowBox[{"0.0010220044236277958`", " ", "\[ImaginaryI]"}]}], ",", 
   RowBox[{
    RowBox[{"-", "5137.824396319074`"}], "+", 
    RowBox[{"3.11469771495697`*^-9", " ", "\[ImaginaryI]"}]}], ",", 
   RowBox[{
    RowBox[{"-", "513.6441670054048`"}], "-", 
    RowBox[{"1.6168117421855223`*^-11", " ", "\[ImaginaryI]"}]}], ",", 
   RowBox[{
    RowBox[{"-", "51.29671310790777`"}], "+", 
    RowBox[{"2.0674730809913484`*^-11", " ", "\[ImaginaryI]"}]}], ",", 
   RowBox[{
    RowBox[{"-", "5.063954216581867`"}], "-", 
    RowBox[{"2.579403304372706`*^-13", " ", "\[ImaginaryI]"}]}], ",", 
   RowBox[{
    RowBox[{"-", "0.4420717362657263`"}], "+", 
    RowBox[{"6.420195960145514`*^-11", " ", "\[ImaginaryI]"}]}], ",", 
   RowBox[{
    RowBox[{"-", "0.009022053791742703`"}], "+", 
    RowBox[{"1.285210676980371`*^-10", " ", "\[ImaginaryI]"}]}], ",", 
   RowBox[{"0.00004046348733794246`", "\[VeryThinSpace]", "+", 
    RowBox[{"3.7788745360960855`*^-11", " ", "\[ImaginaryI]"}]}], ",", 
   RowBox[{
    RowBox[{"-", "2.596169620855225`"}], "-", 
    RowBox[{"0.4921579916517013`", " ", "\[ImaginaryI]"}]}], ",", 
   RowBox[{
    RowBox[{"-", "0.15062577525073337`"}], "+", 
    RowBox[{"1.0009784102339332`", " ", "\[ImaginaryI]"}]}], ",", 
   RowBox[{"3.238790091200373`*^-6", "-", 
    RowBox[{"6.3706279319340695`*^-15", " ", "\[ImaginaryI]"}]}], ",", 
   RowBox[{"2.548161927526168`*^-7", "+", 
    RowBox[{"3.5287307941330367`*^-16", " ", "\[ImaginaryI]"}]}], ",", 
   RowBox[{"7.623108506862618`*^-9", "+", 
    RowBox[{"7.744978922477102`*^-18", " ", "\[ImaginaryI]"}]}], ",", 
   RowBox[{"9.5012683312313`*^-11", "+", 
    RowBox[{"8.91853966889039`*^-19", " ", "\[ImaginaryI]"}]}], ",", 
   RowBox[{"9.740755226885513`*^-13", "+", 
    RowBox[{"8.143270890359162`*^-20", " ", "\[ImaginaryI]"}]}], ",", 
   RowBox[{"9.767718519197465`*^-15", "+", 
    RowBox[{"7.107157428825142`*^-21", " ", "\[ImaginaryI]"}]}]}], 
  "}"}]], "Output",
 CellChangeTimes->{3.7416968267516727`*^9, 3.7416971392379227`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Table", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"a", ",", 
     RowBox[{"ReVcpar", "[", 
      RowBox[{
       SuperscriptBox["10", "a"], ",", 
       RowBox[{"15", "/", "100"}], ",", 
       RowBox[{"1", "/", "2"}], ",", 
       RowBox[{"\[Alpha]cont", "[", 
        RowBox[{"[", "1", "]"}], "]"}]}], "]"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"a", ",", 
     RowBox[{"-", "10"}], ",", "10"}], "}"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.739094214498005*^9, 3.739094222400062*^9}, {
  3.741499082282016*^9, 3.741499084236545*^9}, {3.7415000237427387`*^9, 
  3.741500027356721*^9}, {3.741500064622181*^9, 3.741500069293124*^9}, {
  3.741500295443597*^9, 3.7415002997771473`*^9}, {3.741500529815435*^9, 
  3.741500537822399*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{"-", "10"}], ",", 
     RowBox[{"-", "5.137193759355003`*^9"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"-", "9"}], ",", 
     RowBox[{"-", "5.137193758667513`*^8"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"-", "8"}], ",", 
     RowBox[{"-", "5.137193751792618`*^7"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"-", "7"}], ",", 
     RowBox[{"-", "5.137193683043658`*^6"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"-", "6"}], ",", 
     RowBox[{"-", "513719.29955541005`"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"-", "5"}], ",", 
     RowBox[{"-", "51371.86120662928`"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"-", "4"}], ",", 
     RowBox[{"-", "5137.1173721909545`"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"-", "3"}], ",", 
     RowBox[{"-", "513.6429931444725`"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"-", "2"}], ",", 
     RowBox[{"-", "51.295599195410645`"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"-", "1"}], ",", 
     RowBox[{"-", "5.0612975696169675`"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0", ",", 
     RowBox[{"-", "0.44207162133520383`"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"1", ",", 
     RowBox[{"-", "0.009021934455951765`"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"2", ",", "0.00004046357256025802`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"3", ",", "3.712893114314608`*^-8"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"4", ",", "3.7102216664372436`*^-11"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"5", ",", "3.709646522256915`*^-14"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"6", ",", "1.861144308024814`*^-15"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"7", ",", 
     RowBox[{"-", "5.396969685104281`*^-18"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"8", ",", 
     RowBox[{"-", "5.555622926591952`*^-18"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"9", ",", 
     RowBox[{"-", "5.451944108614555`*^-18"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"10", ",", 
     RowBox[{"-", "5.4483791992813475`*^-18"}]}], "}"}]}], "}"}]], "Output",
 CellChangeTimes->{
  3.739094271369327*^9, 3.739094381822136*^9, 3.739510635572308*^9, 
   3.7413339986938753`*^9, 3.7413433424947557`*^9, 3.741343543985508*^9, {
   3.741499079272602*^9, 3.741499084770643*^9}, 3.74150002875266*^9, {
   3.741500070617496*^9, 3.7415001308487597`*^9}, 3.741500310104554*^9, 
   3.741500538960144*^9, 3.741697139981268*^9}]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Check that ReVcpar[v -> 0] -> screened Coulomb", "Subsubsection",
 CellChangeTimes->{{3.741689248831089*^9, 3.741689294832055*^9}, {
  3.7416895052080507`*^9, 3.7416895302091312`*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Block", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{"r", "=", "105"}], ",", 
     RowBox[{"mD", "=", "0.15"}]}], "}"}], ",", 
   RowBox[{
    RowBox[{"ReVcpar", "[", 
     RowBox[{"r", ",", "mD", ",", "0", ",", 
      RowBox[{"\[Alpha]cont", "[", 
       RowBox[{"[", "1", "]"}], "]"}]}], "]"}], "-", 
    RowBox[{"(", 
     RowBox[{
      RowBox[{"-", 
       RowBox[{"\[Alpha]cont", "[", 
        RowBox[{"[", "1", "]"}], "]"}]}], 
      FractionBox[
       RowBox[{"Exp", "[", 
        RowBox[{
         RowBox[{"-", " ", "mD"}], " ", "r"}], "]"}], "r"]}], ")"}]}]}], 
  "]"}]], "Input",
 CellChangeTimes->{{3.741689552850376*^9, 3.741689673732902*^9}, {
  3.7416897230058613`*^9, 3.741689742590528*^9}, {3.741689783120082*^9, 
  3.741689807127758*^9}}],

Cell[BoxData["1.269461657696428`*^-17"], "Output",
 CellChangeTimes->{
  3.74168956886979*^9, {3.741689617138464*^9, 3.741689674501853*^9}, {
   3.741689725263624*^9, 3.7416898080895853`*^9}, 3.741689917870392*^9, 
   3.741697140118022*^9}]
}, Open  ]]
}, Closed]],

Cell[CellGroupData[{

Cell["Check asymptotic values", "Subsubsection",
 CellChangeTimes->{{3.741689248831089*^9, 3.741689294832055*^9}, {
  3.7416895052080507`*^9, 3.7416895302091312`*^9}, {3.741689926679542*^9, 
  3.7416899353524017`*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"ReVcpar", "[", 
  RowBox[{
   SuperscriptBox["10", 
    RowBox[{"-", "10"}]], ",", "0.15", ",", "0.1", ",", 
   RowBox[{"\[Alpha]cont", "[", 
    RowBox[{"[", "1", "]"}], "]"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.741689943730174*^9, 3.7416899818514137`*^9}}],

Cell[BoxData[
 RowBox[{"-", "5.137193759354334`*^9"}]], "Output",
 CellChangeTimes->{{3.741689952919251*^9, 3.741689982201736*^9}, 
   3.741697140264484*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"ReVcpar", "[", 
  RowBox[{
   SuperscriptBox["10", "10"], ",", "0.15", ",", "0.1", ",", 
   RowBox[{"\[Alpha]cont", "[", 
    RowBox[{"[", "1", "]"}], "]"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.741689967626116*^9, 3.741689984172181*^9}}],

Cell[BoxData[
 RowBox[{"-", "4.742205403897327`*^-18"}]], "Output",
 CellChangeTimes->{{3.741689968674618*^9, 3.741689984600775*^9}, 
   3.7416971405492477`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"ReVcpar", "[", 
  RowBox[{
   SuperscriptBox["10", 
    RowBox[{"-", "10"}]], ",", "0.15", ",", "0.9", ",", 
   RowBox[{"\[Alpha]cont", "[", 
    RowBox[{"[", "1", "]"}], "]"}]}], "]"}]], "Input",
 CellChangeTimes->{3.741689989354897*^9}],

Cell[BoxData[
 RowBox[{
  RowBox[{"-", "5.137193759381704`*^9"}], "+", 
  RowBox[{"0.020182878321516894`", " ", "\[ImaginaryI]"}]}]], "Output",
 CellChangeTimes->{3.741689990310122*^9, 3.741697140736431*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"ReVcpar", "[", 
  RowBox[{
   SuperscriptBox["10", "10"], ",", "0.15", ",", "0.9", ",", 
   RowBox[{"\[Alpha]cont", "[", 
    RowBox[{"[", "1", "]"}], "]"}]}], "]"}]], "Input",
 CellChangeTimes->{3.7416900067628508`*^9}],

Cell[BoxData[
 TemplateBox[{
  "NIntegrate","slwcon",
   "\"Numerical integration converging too slowly; suspect one of the \
following: singularity, value of the integration is 0, highly oscillatory \
integrand, or WorkingPrecision too small.\"",2,26,1,29282599522179255742,
   "Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.741690007368616*^9, 3.741697140940036*^9}],

Cell[BoxData[
 TemplateBox[{
  "NIntegrate","eincr",
   "\"The global error of the strategy GlobalAdaptive has increased more than \
\\!\\(\\*RowBox[{\\\"400\\\"}]\\) times. The global error is expected to \
decrease monotonically after a number of integrand evaluations. Suspect one \
of the following: the working precision is insufficient for the specified \
precision goal; the integrand is highly oscillatory or it is not a \
(piecewise) smooth function; or the true value of the integral is 0. \
Increasing the value of the GlobalAdaptive option MaxErrorIncreases might \
lead to a convergent numerical integration. NIntegrate obtained \
\\!\\(\\*RowBox[{RowBox[{\\\"-\\\", \\\"0.0008852489832976891`\\\"}], \\\"+\\\
\", RowBox[{\\\"0.00043726904647849337`\\\", \\\" \\\", \
\\\"\[ImaginaryI]\\\"}]}]\\) and \\!\\(\\*RowBox[{\\\"0.007904735016827834`\\\
\"}]\\) for the integral and error estimates.\"",2,26,2,29282599522179255742,
   "Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.741690007368616*^9, 3.741697141492612*^9}],

Cell[BoxData[
 RowBox[{
  RowBox[{"-", "0.0004547696066259248`"}], "+", 
  RowBox[{"0.0002246335816761831`", " ", "\[ImaginaryI]"}]}]], "Output",
 CellChangeTimes->{3.741690007736753*^9, 3.741697141624503*^9}]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Plots", "Subsubsection",
 CellChangeTimes->{{3.7416898336127977`*^9, 3.741689842674139*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Plot", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{"ReVcpar", "[", 
      RowBox[{"r", ",", "0.15", ",", "0.2", ",", 
       RowBox[{"\[Alpha]cont", "[", 
        RowBox[{"[", "1", "]"}], "]"}]}], "]"}], ",", 
     RowBox[{"ReVcpar", "[", 
      RowBox[{"r", ",", "0.15", ",", "0.4", ",", 
       RowBox[{"\[Alpha]cont", "[", 
        RowBox[{"[", "1", "]"}], "]"}]}], "]"}], ",", 
     RowBox[{"ReVcpar", "[", 
      RowBox[{"r", ",", "0.15", ",", "0.6", ",", 
       RowBox[{"\[Alpha]cont", "[", 
        RowBox[{"[", "1", "]"}], "]"}]}], "]"}], ",", 
     RowBox[{"ReVcpar", "[", 
      RowBox[{"r", ",", "0.15", ",", "0.8", ",", 
       RowBox[{"\[Alpha]cont", "[", 
        RowBox[{"[", "1", "]"}], "]"}]}], "]"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"r", ",", "0", ",", "100"}], "}"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.741689845713015*^9, 3.741689892625499*^9}, {
  3.7416900584699306`*^9, 3.741690086788825*^9}, {3.741690125085582*^9, 
  3.7416901252296457`*^9}}],

Cell[BoxData[
 GraphicsBox[{{{}, {}, 
    TagBox[
     {RGBColor[0.368417, 0.506779, 0.709798], AbsoluteThickness[1.6], Opacity[
      1.], LineBox[CompressedData["
1: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

       "]]},
     Annotation[#, "Charting`Private`Tag$4252#1"]& ], 
    TagBox[
     {RGBColor[0.880722, 0.611041, 0.142051], AbsoluteThickness[1.6], Opacity[
      1.], LineBox[CompressedData["
1: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
       "]]},
     Annotation[#, "Charting`Private`Tag$4252#2"]& ], 
    TagBox[
     {RGBColor[0.560181, 0.691569, 0.194885], AbsoluteThickness[1.6], Opacity[
      1.], LineBox[CompressedData["
1:eJwVlnk4lOsbx0eStZOho5SdMBJjnSG672xRESomzLxTyhJlEskSI44lKqUj
IUcloZO0S2UmJ1uWnMppoY6lQnUKLUT4Pb8/3uu9Ptf3ey/P/TzP9b7a2yK8
d8yh0Wgj5Pn/2/9NmI7tDkNsErEnspJDRYfyFzNWHDBEnI9bGodDRIEB13py
7hui4NZYR6RTsGjhmyFHzloGdib3JY0YbBfJ/f6IucefgYLWzme/NQeKaC43
1Q+FMxCvSZ+YDQ0UfbyQMn7nCAN77VQST17eJmoI07io+YSB1QeZ3urOW0X7
vmxUGvQ3QnGJrnm4KVcUXmo7OxtuhFofckyYWQGibZu1Py5ONMIS/tyghCF/
kcetTw1rS4xQ+MW2t/iCn8ggPjO26g2Jp3VeuMDiiJ7PEfVG71qO/ByWWkPh
RtFKJaPLc5OMER/XJrXecRF1SPi1tB81RtoJD8ZEm7OIP5o5kFdC9MrrQ769
TqLUzuFFjHpjFMoUPCma7yjqOFIhdJdagcLb4YkhkiDiyzO887IIs2S1aflm
orFJTjhVtAJp4Uf+zZkwFaW+z0gzvES4MVy/sdlYVNEyVFvbQTjqwfDLJH3R
WHq57r90E6T1N/bcOrxQlDrX8JtBPuFV5/7Ku6gKKl99F4yWE66ROLTUShPK
B9IZtbcJf313tJyjA+31g9z13YQtzgq17xuASvKFRoGGKdIWFC/i6JhBxbR+
/u1Swh9O9ejTV0Lw1PHT5zlMxOYwF/52Fzjh8fGvWD7hZ9JD8q9dQHzG+b17
CBNp/31+W+SzBha7Tlh/jyF62RNRjJMrNJ/gdrqcZGLveskgd+W1wDAxlBzq
YqLw0v0g9yR38ElOZtx9xUQtjaHB9UPucPDpyw05b4n/+qbX3p4e8DLucBH7
GxPFccrdseob4FDTmFXmQjMU5j5JtvTxhA/8eyFGGwknVfItHnnB4usqR2f8
zJD5ap+8z08vcJIW3Hi8jegXFwvkGN5QdElnTnykGfIzf21cnuwN6yfTC1uP
maGW1snXwcYb4VKud0d4J9HVBuTiIjZBROOgxWV3c8QMbYPNl3xAjH+GGfuY
40gzRf/a6QOKdwTnKnjmyK98lLbiqw9UX/6hVBphjoq6tOC9Nr4wli8/ln/M
HMXbsvq3inxhX5hp9cEuwjJDDvG3OdD49svg7CtzFIQo0HWfcWARv0bzwDtz
LKmgje75yoGaTauPxoybI21JRoe0yRb4Yb9xd7iqBVbvN5E0PL0FEhRjjH24
Fsj0/TO1K8wP2g6t3P5khwXinqp0h1Q/UJeiFXnuJlzXk7O1yA/qfmTIr0uy
QMFZ79U1rX5AGyh4D2cskL/S78wLfX9IuVFXznhL/B06nKhH/vDUNKW37D8L
VISXIesG/EGvcs1ive9E37xK9fV3f3hQ3JmuIW2JwndnT7DVA2BeRn+QMsMS
c6bO+vwdFACH/OYtmw63RDyWFSj7KQBWMRW+D0cRVpZ//ehnAIxKKTX9k2CJ
tPjFStvkucC5oh5anW2JijJD8MGAC8tkrC4F/mmJAq7RrUIeF56/sk30vG6J
I3J+Mq1hXMi+hhvs75L4urNmLfu5MMZbP6rSRuqPtx62OM4F8Y1Aq4cfSL27
ze0P67kQlRU679YXkn+Znkt8BxcMtkY8Ozdlifyy/rTpF1w4ohAfe0DeCgXa
eW37R7jgH3j8HnO5FXouGmBuWsqD74r3nU/utEImvot/H8KDyneNKqmRRJ8s
uNi7hwfcu22Dgjgr1Kr9MLcqjgcPgp9nrj1E8vlIxDzK4sGxus/t0xVWmOOZ
Jmf9Jw+cTnwrfn/FClH3ud2nazyYCJ2KeHbbCoXS738R3uEB71dppSstVlhS
klNv9pAHxuEaPtuHST2bdwVdb3nQu1rPwGvUCmk7DeYEfuRB7iKjCfsfViiW
SvRvG+PBZL1VwSJZa/RcFyFpOcuDZlX31w8NrVG8Ie0NT4WChM/el28xrbGa
t67oyVIKTBs4wlK2NfaWvtinr01BnmC7TqKrNQpHtc8FL6cgsCk+yCzEGvkb
X+pRqyjYbqfv8T3CGpnqv6y56UBB0JVOqzsx1jjSqfDikwsFIYXLpJzTib/J
2V5qAwU7FTs/yh61xs7JV2kD3hSE/Rb3tCPPGnNOzZiU+lCwO+LROU6ZNWrN
TqW2cykQvInNUq8i8a39ZdZbKdizRW9v/w3S7x/BC1K2UxDlGOsQ3mCNNLvh
k407KYhbpNuX9IboCs8rZqLJ+rLbm50+Ep2fq5+xn4IDEvurZb+S9UsMlX2P
o0D4oS0pV5KFnSMHM1OSKDjIjwnmyLNwBMN8ziZTkNKlvUFdmYVCL/OfZSkU
pIn2aVzQYSHNJvvctnQKMiy154UbsVA806awJJOCzIrW/5jmLGTWu2nUHKLg
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
v5Os
       "]]},
     Annotation[#, "Charting`Private`Tag$4252#3"]& ], 
    TagBox[
     {RGBColor[0.922526, 0.385626, 0.209179], AbsoluteThickness[1.6], Opacity[
      1.], LineBox[CompressedData["
1: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
       "]]},
     Annotation[#, "Charting`Private`Tag$4252#4"]& ]}, {}, {}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{0, 0},
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  ImagePadding->All,
  ImageSize->{725., Automatic},
  Method->{
   "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
    AbsolutePointSize[6], "ScalingFunctions" -> None, 
    "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
        (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
         Part[#, 1]], 
        (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
         Part[#, 2]]}& ), "CopiedValueFunction" -> ({
        (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
         Part[#, 1]], 
        (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
         Part[#, 2]]}& )}},
  PlotRange->{{0, 100}, {-0.003113530519634342, 0.005576984632642088}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.05], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{3.741689910170272*^9, 3.741690082241192*^9, 
  3.741690149766802*^9, 3.741697163597815*^9}]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Needs addressing", "Subsubsection",
 CellChangeTimes->{{3.7416898336127977`*^9, 3.741689842674139*^9}, {
  3.741690182613235*^9, 3.741690185405147*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"ReVcpar", "[", 
   RowBox[{"10", ",", "0.15", ",", "0.9", ",", 
    RowBox[{"\[Alpha]cont", "[", 
     RowBox[{"[", "1", "]"}], "]"}]}], "]"}], 
  RowBox[{"(*", 
   RowBox[{
    RowBox[{"IMAGINARY", " ", "PART", " ", "NON"}], "-", 
    RowBox[{"ZERO", 
     RowBox[{"??", 
      RowBox[{"?", " ", 
       RowBox[{
        RowBox[{
        "take", " ", "a", " ", "look", " ", "at", " ", "roots", " ", "of", 
         " ", "self"}], "-", 
        RowBox[{"energy", " ", "again"}]}]}]}]}]}], "*)"}]}]], "Input",
 CellChangeTimes->{{3.7416901957041883`*^9, 3.741690228143132*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"-", "0.00590860805472445`"}], "+", 
  RowBox[{"0.017471929794478983`", " ", "\[ImaginaryI]"}]}]], "Output",
 CellChangeTimes->{{3.741690193018258*^9, 3.74169019683011*^9}, 
   3.741697163777281*^9}]
}, Open  ]]
}, Closed]]
}, Open  ]],

Cell[CellGroupData[{

Cell["String", "Subchapter",
 CellChangeTimes->{{3.738900306964458*^9, 3.738900317144824*^9}, {
  3.7390941442080193`*^9, 3.7390941444641314`*^9}, {3.7416892146028023`*^9, 
  3.741689225018568*^9}, {3.741690244886342*^9, 3.741690245678523*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"We", " ", "employ", " ", "the", " ", 
    RowBox[{"BCs", ":", " ", 
     RowBox[{
      RowBox[{
       RowBox[{"ReVs", "'"}], 
       RowBox[{"(", "r", ")"}]}], "|", "r"}]}]}], "\[Rule]", "\[Infinity]"}], 
  "=", 
  RowBox[{
   RowBox[{
    RowBox[{
     RowBox[{"0", " ", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{
         RowBox[{
         "this", " ", "was", " ", "also", " ", "true", " ", "of", " ", "the", 
          " ", "Coulomb", " ", "solution", " ", "at", " ", "v"}], "=", 
         RowBox[{"0", " ", "but", " ", "we", " ", 
          RowBox[{"didn", "'"}], "t", " ", "impose", " ", "it"}]}], ",", " ", 
        
        RowBox[{
         RowBox[{
          RowBox[{
           RowBox[{"in", " ", "fact", " ", "we", " ", "had", " ", "ReVs", 
            RowBox[{"(", "r", ")"}]}], "|", "r"}], "\[Rule]", "\[Infinity]"}],
          "=", 
         RowBox[{
         "0", " ", "but", " ", "then", " ", "added", " ", "arbitrary", " ", 
          "constants", " ", "so", " ", "the", " ", "condition", " ", "here", 
          " ", "is", " ", "equivalent"}]}]}], ")"}], " ", "AND", " ", "ReVs", 
      
      RowBox[{"(", "r", ")"}]}], "|", "r"}], "\[Rule]", "0"}], "=", 
   RowBox[{
    RowBox[{
     RowBox[{
      RowBox[{"0", " ", "OR", " ", 
       RowBox[{"ReVs", "'"}], 
       RowBox[{"(", "r", ")"}]}], "|", "r"}], "\[Rule]", "0"}], "=", 
    RowBox[{"0", " ", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{
       "in", " ", "order", " ", "to", " ", "employ", " ", "the", " ", 
        "Wronskian", " ", "method", " ", "we", " ", "need", " ", "to", " ", 
        "choose", " ", "one", " ", "of", " ", "the", " ", 
        RowBox[{"real", "/", "imag"}], " ", "parts", " ", "of", " ", 
        RowBox[{"ParabolicCylinderD", "[", 
         RowBox[{
          RowBox[{
           RowBox[{"-", "1"}], "/", "2"}], ",", 
          RowBox[{"\[ImaginaryI]", " ", 
           SqrtBox["2"], 
           SuperscriptBox[
            RowBox[{"(", 
             RowBox[{
              SuperscriptBox["mD", "2"], 
              FractionBox["\[Sigma]", "\[Alpha]"]}], ")"}], 
            RowBox[{"1", "/", "4"}]], "r"}]}], "]"}], " ", "to", " ", "be", 
        " ", "our", " ", "other", " ", "unique", " ", "solution"}], ",", " ", 
       
       RowBox[{
        RowBox[{"both", " ", "blow", " ", "up", " ", "as", " ", "r"}], 
        "\[Rule]", "\[Infinity]"}], ",", " ", 
       RowBox[{
        RowBox[{
         RowBox[{
         "the", " ", "real", " ", "part", " ", "is", " ", "flat", " ", "and", 
          " ", "non"}], "-", 
         RowBox[{"zero", " ", "around", " ", "r"}]}], "=", 
        RowBox[{
        "0", " ", "while", " ", "the", " ", "imaginary", " ", "part", " ", 
         "the", " ", "other", " ", "way", " ", "round"}]}]}], 
      ")"}]}]}]}]}]], "Text",
 CellChangeTimes->{{3.7416916016780024`*^9, 3.741691706435688*^9}, {
  3.7416918253186893`*^9, 3.741691917007255*^9}, {3.7416919533685226`*^9, 
  3.7416920228177223`*^9}, {3.741692074978056*^9, 3.7416922245020523`*^9}, {
  3.741692448474126*^9, 3.741692467786929*^9}, {3.7416925466327763`*^9, 
  3.741692551001541*^9}}],

Cell[CellGroupData[{

Cell["Define g function (RHS of ODE)", "Subsection",
 CellChangeTimes->{{3.741689248831089*^9, 3.741689294832055*^9}, {
  3.7416902752632637`*^9, 3.7416902869192677`*^9}}],

Cell[BoxData[
 RowBox[{"(*", "definition", "*)"}]], "Input",
 CellChangeTimes->{{3.741690620394333*^9, 3.741690627398528*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"gReAn", "[", 
    RowBox[{"r_", ",", "mD_", ",", "v_", ",", "\[Alpha]_"}], "]"}], ":=", 
   RowBox[{
    RowBox[{"2", 
     FractionBox["\[Alpha]", "r"], 
     RowBox[{"NIntegrate", "[", 
      RowBox[{
       RowBox[{
        RowBox[{"Cos", "[", "\[Theta]", "]"}], 
        RowBox[{"Sin", "[", "\[Theta]", "]"}], 
        RowBox[{"Re", "[", 
         RowBox[{"\[CapitalPi]par", "[", 
          RowBox[{"\[Theta]", ",", "v", ",", "mD"}], "]"}], "]"}], 
        RowBox[{"Exp", "[", 
         RowBox[{
          RowBox[{"-", "r"}], " ", 
          RowBox[{"Cos", "[", "\[Theta]", "]"}], 
          SqrtBox[
           RowBox[{"Re", "[", 
            RowBox[{"\[CapitalPi]par", "[", 
             RowBox[{"\[Theta]", ",", "v", ",", "mD"}], "]"}], "]"}]]}], 
         "]"}]}], ",", 
       RowBox[{"{", 
        RowBox[{"\[Theta]", ",", "0", ",", 
         RowBox[{"\[Pi]", "/", "2"}]}], "}"}]}], "]"}]}], "-", 
    RowBox[{"\[Alpha]", " ", 
     RowBox[{"NIntegrate", "[", 
      RowBox[{
       RowBox[{
        SuperscriptBox[
         RowBox[{"Cos", "[", "\[Theta]", "]"}], "2"], 
        RowBox[{"Sin", "[", "\[Theta]", "]"}], 
        SuperscriptBox[
         RowBox[{"Re", "[", 
          RowBox[{"\[CapitalPi]par", "[", 
           RowBox[{"\[Theta]", ",", "v", ",", "mD"}], "]"}], "]"}], 
         RowBox[{"3", "/", "2"}]], 
        RowBox[{"Exp", "[", 
         RowBox[{
          RowBox[{"-", "r"}], " ", 
          RowBox[{"Cos", "[", "\[Theta]", "]"}], 
          SqrtBox[
           RowBox[{"Re", "[", 
            RowBox[{"\[CapitalPi]par", "[", 
             RowBox[{"\[Theta]", ",", "v", ",", "mD"}], "]"}], "]"}]]}], 
         "]"}]}], ",", 
       RowBox[{"{", 
        RowBox[{"\[Theta]", ",", "0", ",", 
         RowBox[{"\[Pi]", "/", "2"}]}], "}"}]}], "]"}]}], "+", 
    RowBox[{
     SuperscriptBox["mD", "2"], 
     RowBox[{"ReVcpar", "[", 
      RowBox[{"r", ",", "mD", ",", "v", ",", "\[Alpha]"}], "]"}]}]}]}], 
  ";"}]], "Input",
 CellChangeTimes->{3.7416903193702173`*^9, 3.741691516737843*^9}],

Cell[CellGroupData[{

Cell["Check that gReAn[v -> 0] ->DiracDelta[r]", "Subsubsection",
 CellChangeTimes->{{3.741689248831089*^9, 3.741689294832055*^9}, {
   3.7416903258479652`*^9, 3.741690351144182*^9}, 3.74169154179909*^9}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Quiet", "[", 
  RowBox[{"ParallelTable", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"a", ",", 
      RowBox[{"gReAn", "[", 
       RowBox[{
        SuperscriptBox["10", "a"], ",", 
        RowBox[{"15", "/", "100"}], ",", "0", ",", 
        RowBox[{"\[Alpha]cont", "[", 
         RowBox[{"[", "1", "]"}], "]"}]}], "]"}]}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"a", ",", 
      RowBox[{"-", "30"}], ",", "5"}], "}"}]}], "]"}], "]"}]], "Input",
 CellChangeTimes->{{3.741521922884941*^9, 3.741521924513668*^9}, {
   3.741521985084716*^9, 3.741521985368079*^9}, 3.741522016965781*^9, 
   3.741522081469*^9, 3.741522118806423*^9, 3.7415221808082123`*^9, {
   3.741690409098855*^9, 3.7416904319793453`*^9}, {3.741690464141876*^9, 
   3.741690478231091*^9}, 3.741691545692472*^9}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{"-", "30"}], ",", "6.597069766656`*^12"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"-", "29"}], ",", "6.8719476736`*^11"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"-", "28"}], ",", "6.8719476736`*^10"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"-", "27"}], ",", "6.442450944`*^9"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"-", "26"}], ",", "8.05306368`*^8"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"-", "25"}], ",", "6.7108864`*^7"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"-", "24"}], ",", "6.291456`*^6"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"-", "23"}], ",", "655360.`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"-", "22"}], ",", "65536.`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"-", "21"}], ",", "6144.`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"-", "20"}], ",", "512.`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"-", "19"}], ",", "64.`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"-", "18"}], ",", "8.`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"-", "17"}], ",", "0.75`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"-", "16"}], ",", "0.0625`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"-", "15"}], ",", "0.00390625`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"-", "14"}], ",", "0.000732421875`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"-", "13"}], ",", "0.00006103515625`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"-", "12"}], ",", "7.62939453125`*^-6"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"-", "11"}], ",", "7.152557373046875`*^-7"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"-", "10"}], ",", "5.960464477539063`*^-8"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"-", "9"}], ",", "5.587935447692871`*^-9"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"-", "8"}], ",", "4.656612873077393`*^-10"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"-", "7"}], ",", "5.820766091346741`*^-11"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"-", "6"}], ",", "5.4569682106375694`*^-12"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"-", "5"}], ",", "4.547473508864641`*^-13"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"-", "4"}], ",", "2.842170943040401`*^-14"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"-", "3"}], ",", "7.105427357601002`*^-15"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"-", "2"}], ",", "6.661338147750939`*^-16"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"-", "1"}], ",", "8.326672684688674`*^-17"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0", ",", "5.204170427930421`*^-18"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"1", ",", "9.378348791999613`*^-18"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"2", ",", "3.122163430654654`*^-19"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"3", ",", 
     RowBox[{"-", "1.292733246857265`*^-19"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"4", ",", 
     RowBox[{"-", "1.4758703587571865`*^-19"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"5", ",", 
     RowBox[{"-", "9.996047335577806`*^-20"}]}], "}"}]}], "}"}]], "Output",
 CellChangeTimes->{
  3.741521927695704*^9, 3.741521988314163*^9, 3.7415220206405582`*^9, 
   3.7415220830595293`*^9, {3.7415221132424088`*^9, 3.741522181554182*^9}, 
   3.7415223060197077`*^9, 3.741522340002081*^9, 3.741522393776031*^9, {
   3.7416904097366657`*^9, 3.741690434364643*^9}, {3.741690468345352*^9, 
   3.74169047948801*^9}, 3.7416915472814693`*^9, 3.7416971642591667`*^9}]
}, Open  ]]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Construct ReVs", "Section",
 CellChangeTimes->{{3.741689248831089*^9, 3.741689294832055*^9}, {
   3.7416902752632637`*^9, 3.7416902869192677`*^9}, {3.741691506151024*^9, 
   3.74169151358296*^9}, 3.741691554880196*^9, {3.741693352122316*^9, 
   3.741693358756297*^9}, {3.741693410235545*^9, 3.741693411571484*^9}, {
   3.741693757683474*^9, 3.741693836899815*^9}, {3.741693900358706*^9, 
   3.741693914733643*^9}, {3.741694707421792*^9, 3.741694709046475*^9}}],

Cell[CellGroupData[{

Cell["Wronskian", "Subsubsection",
 CellChangeTimes->{{3.741694713737468*^9, 3.741694723160746*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"N", "[", 
  RowBox[{
   RowBox[{"Wronskian", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{"ParabolicCylinderD", "[", 
        RowBox[{
         RowBox[{"-", 
          FractionBox["1", "2"]}], ",", 
         RowBox[{
          SqrtBox["2"], " ", "x", " ", "\[Mu]"}]}], "]"}], ",", 
       RowBox[{"ParabolicCylinderD", "[", 
        RowBox[{
         RowBox[{"-", 
          FractionBox["1", "2"]}], ",", 
         RowBox[{"\[ImaginaryI]", 
          SqrtBox["2"], " ", "x", " ", "\[Mu]"}]}], "]"}]}], "}"}], ",", 
     "x"}], "]"}], "/.", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"x", "\[Rule]", 
      SuperscriptBox["10", "7"]}], ",", 
     RowBox[{"\[Mu]", "\[Rule]", "5"}]}], "}"}]}], "]"}]], "Input",
 CellChangeTimes->{
  3.741694683039023*^9, {3.741694810442236*^9, 3.741694831690065*^9}, {
   3.741931129898898*^9, 3.741931140859923*^9}}],

Cell[BoxData[
 RowBox[{"5.`", "\[VeryThinSpace]", "-", 
  RowBox[{"5.000000000000001`", " ", "\[ImaginaryI]"}]}]], "Output",
 CellChangeTimes->{
  3.741694683616229*^9, {3.741694814405387*^9, 3.741694832468522*^9}, 
   3.741697168307313*^9, {3.741931136214921*^9, 3.741931144824654*^9}}]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Solution", "Subsection",
 CellChangeTimes->{{3.741694734076148*^9, 3.741694745360155*^9}, 
   3.741694775898576*^9, {3.741696368471624*^9, 3.741696370471651*^9}, 
   3.74193114633153*^9}],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"ReVs", "[", 
    RowBox[{"r_", ",", "mD_", ",", "\[Alpha]_", ",", "\[Sigma]_"}], "]"}], ":=", 
   RowBox[{
    RowBox[{
     RowBox[{"-", 
      RowBox[{"Re", "[", 
       RowBox[{"ParabolicCylinderD", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"-", "1"}], "/", "2"}], ",", 
         RowBox[{"\[ImaginaryI]", 
          SqrtBox["2"], 
          SuperscriptBox[
           RowBox[{"(", 
            RowBox[{
             SuperscriptBox["mD", "2"], 
             FractionBox["\[Sigma]", "\[Alpha]"]}], ")"}], 
           RowBox[{"1", "/", "4"}]], " ", "r"}]}], "]"}], "]"}]}], 
     RowBox[{"Quiet", "[", 
      RowBox[{"NIntegrate", "[", 
       RowBox[{
        FractionBox[
         RowBox[{
          RowBox[{"ParabolicCylinderD", "[", 
           RowBox[{
            RowBox[{
             RowBox[{"-", "1"}], "/", "2"}], ",", 
            RowBox[{
             SqrtBox["2"], 
             SuperscriptBox[
              RowBox[{"(", 
               RowBox[{
                SuperscriptBox["mD", "2"], 
                FractionBox["\[Sigma]", "\[Alpha]"]}], ")"}], 
              RowBox[{"1", "/", "4"}]], " ", "s"}]}], "]"}], 
          SuperscriptBox["s", "2"], 
          RowBox[{"gReAnInter", "[", "s", "]"}]}], 
         SuperscriptBox[
          RowBox[{"(", 
           RowBox[{
            SuperscriptBox["mD", "2"], 
            FractionBox["\[Sigma]", "\[Alpha]"]}], ")"}], 
          RowBox[{"1", "/", "4"}]]], ",", 
        RowBox[{"{", 
         RowBox[{"s", ",", "r", ",", 
          SuperscriptBox["10", "5"]}], "}"}], ",", 
        RowBox[{"MaxRecursion", "\[Rule]", "20"}], ",", 
        RowBox[{"WorkingPrecision", "\[Rule]", "10"}]}], "]"}], "]"}]}], "-", 
    
    RowBox[{
     RowBox[{"ParabolicCylinderD", "[", 
      RowBox[{
       RowBox[{
        RowBox[{"-", "1"}], "/", "2"}], ",", 
       RowBox[{
        SqrtBox["2"], 
        SuperscriptBox[
         RowBox[{"(", 
          RowBox[{
           SuperscriptBox["mD", "2"], 
           FractionBox["\[Sigma]", "\[Alpha]"]}], ")"}], 
         RowBox[{"1", "/", "4"}]], "r"}]}], "]"}], 
     RowBox[{"Quiet", "[", 
      RowBox[{"NIntegrate", "[", 
       RowBox[{
        FractionBox[
         RowBox[{
          RowBox[{"Re", "[", 
           RowBox[{"ParabolicCylinderD", "[", 
            RowBox[{
             RowBox[{
              RowBox[{"-", "1"}], "/", "2"}], ",", 
             RowBox[{"\[ImaginaryI]", 
              SqrtBox["2"], 
              SuperscriptBox[
               RowBox[{"(", 
                RowBox[{
                 SuperscriptBox["mD", "2"], 
                 FractionBox["\[Sigma]", "\[Alpha]"]}], ")"}], 
               RowBox[{"1", "/", "4"}]], " ", "s"}]}], "]"}], "]"}], 
          SuperscriptBox["s", "2"], 
          RowBox[{"gReAnInter", "[", "s", "]"}]}], 
         SuperscriptBox[
          RowBox[{"(", 
           RowBox[{
            SuperscriptBox["mD", "2"], 
            FractionBox["\[Sigma]", "\[Alpha]"]}], ")"}], 
          RowBox[{"1", "/", "4"}]]], ",", 
        RowBox[{"{", 
         RowBox[{"s", ",", "0", ",", "r"}], "}"}], ",", 
        RowBox[{"MaxRecursion", "\[Rule]", "20"}], ",", 
        RowBox[{"WorkingPrecision", "\[Rule]", "10"}]}], "]"}], "]"}]}]}]}], 
  ";"}]], "Input",
 CellChangeTimes->{{3.741931148301221*^9, 3.7419311593891478`*^9}, {
  3.741934017078937*^9, 3.741934026510144*^9}}],

Cell[CellGroupData[{

Cell["Plots for v=0.5,mD=0.15", "Subsubsection",
 CellChangeTimes->{{3.7416898336127977`*^9, 3.741689842674139*^9}, {
  3.741692950402269*^9, 3.7416929528268023`*^9}, {3.741693483388698*^9, 
  3.741693487916362*^9}}],

Cell[BoxData[
 RowBox[{"(*", 
  RowBox[{"evaluation", " ", "for", " ", "these", " ", "parameters"}], 
  "*)"}]], "Input",
 CellChangeTimes->{{3.741690632271154*^9, 3.741690635511072*^9}, {
  3.741693260770018*^9, 3.741693267034027*^9}, {3.7419314345366507`*^9, 
  3.741931434873499*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"Block", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{"v", "=", 
        RowBox[{"1", "/", "2"}]}], ",", 
       RowBox[{"mD", "=", 
        RowBox[{"15", "/", "100"}]}], ",", 
       RowBox[{"\[Alpha]", "=", 
        RowBox[{"\[Alpha]cont", "[", 
         RowBox[{"[", "1", "]"}], "]"}]}]}], "}"}], ",", 
     RowBox[{"gReAnTab", "=", 
      RowBox[{"Join", "[", 
       RowBox[{
        RowBox[{"ParallelTable", "[", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{"r", ",", 
            RowBox[{"gReAn", "[", 
             RowBox[{"r", ",", "mD", ",", "v", ",", "\[Alpha]"}], "]"}]}], 
           "}"}], ",", 
          RowBox[{"{", 
           RowBox[{"r", ",", 
            SuperscriptBox["10", 
             RowBox[{"-", "10"}]], ",", 
            SuperscriptBox["10", 
             RowBox[{"-", "5"}]], ",", 
            SuperscriptBox["10", 
             RowBox[{"-", "10"}]]}], "}"}]}], "]"}], ",", 
        RowBox[{"ParallelTable", "[", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{"r", ",", 
            RowBox[{"gReAn", "[", 
             RowBox[{"r", ",", "mD", ",", "v", ",", "\[Alpha]"}], "]"}]}], 
           "}"}], ",", 
          RowBox[{"{", 
           RowBox[{"r", ",", 
            RowBox[{"2", " ", 
             SuperscriptBox["10", 
              RowBox[{"-", "5"}]]}], ",", 
            SuperscriptBox["10", 
             RowBox[{"-", "1"}]], ",", 
            SuperscriptBox["10", 
             RowBox[{"-", "5"}]]}], "}"}]}], "]"}], ",", 
        RowBox[{"ParallelTable", "[", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{"r", ",", 
            RowBox[{"gReAn", "[", 
             RowBox[{"r", ",", "mD", ",", "v", ",", "\[Alpha]"}], "]"}]}], 
           "}"}], ",", 
          RowBox[{"{", 
           RowBox[{"r", ",", 
            RowBox[{"2", " ", 
             SuperscriptBox["10", 
              RowBox[{"-", "1"}]]}], ",", "100", ",", 
            SuperscriptBox["10", 
             RowBox[{"-", "1"}]]}], "}"}]}], "]"}], ",", 
        RowBox[{"ParallelTable", "[", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{"r", ",", 
            RowBox[{"gReAn", "[", 
             RowBox[{"r", ",", "mD", ",", "v", ",", "\[Alpha]"}], "]"}]}], 
           "}"}], ",", 
          RowBox[{"{", 
           RowBox[{"r", ",", "101", ",", 
            SuperscriptBox["10", "5"], ",", "1"}], "}"}]}], "]"}]}], 
       "]"}]}]}], "]"}], "//", "AbsoluteTiming"}], ";"}]], "Input",
 CellChangeTimes->{{3.741690555319076*^9, 3.7416905578373213`*^9}, {
  3.741690593998704*^9, 3.741690643992597*^9}, {3.741691068967709*^9, 
  3.741691091624234*^9}, {3.74169114743605*^9, 3.741691156217499*^9}, {
  3.741691525873349*^9, 3.741691535113821*^9}, {3.741693506463025*^9, 
  3.7416935452323027`*^9}, {3.7416949742539186`*^9, 3.741694975435589*^9}, {
  3.741696686704484*^9, 3.741696692220379*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"gReAnInter", "=", 
   RowBox[{"Interpolation", "[", "gReAnTab", "]"}]}], ";"}]], "Input",
 CellChangeTimes->{3.741693566151392*^9, 3.741931454336796*^9}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Plot", "[", 
  RowBox[{
   RowBox[{"gReAnInter", "[", "r", "]"}], ",", 
   RowBox[{"{", 
    RowBox[{"r", ",", 
     SuperscriptBox["10", 
      RowBox[{"-", "10"}]], ",", "10"}], "}"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.7419428609435053`*^9, 3.741942881535516*^9}}],

Cell[BoxData[
 GraphicsBox[{{{}, {}, 
    TagBox[
     {RGBColor[0.368417, 0.506779, 0.709798], AbsoluteThickness[1.6], Opacity[
      1.], LineBox[CompressedData["
1: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
       "]]},
     Annotation[#, "Charting`Private`Tag$189189#1"]& ]}, {}, {}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{0, 0},
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  ImagePadding->All,
  Method->{
   "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
    AbsolutePointSize[6], "ScalingFunctions" -> None, 
    "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
        (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
         Part[#, 1]], 
        (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
         Part[#, 2]]}& ), "CopiedValueFunction" -> ({
        (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
         Part[#, 1]], 
        (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
         Part[#, 2]]}& )}},
  PlotRange->NCache[{{
      Rational[1, 10000000000], 10}, {-0.0014651060492498437`, 
     0.00007992792247643403}}, {{1.*^-10, 10}, {-0.0014651060492498437`, 
     0.00007992792247643403}}],
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.05], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{3.741945355213357*^9}]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{"ReVsTab", "=", 
   RowBox[{"ParallelTable", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"r", ",", 
       RowBox[{"ReVs", "[", 
        RowBox[{"r", ",", 
         RowBox[{"15", "/", "100"}], ",", 
         RowBox[{"\[Alpha]cont", "[", 
          RowBox[{"[", "1", "]"}], "]"}], ",", 
         RowBox[{"\[Sigma]cont", "[", 
          RowBox[{"[", "1", "]"}], "]"}]}], "]"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"r", ",", 
       SuperscriptBox["10", 
        RowBox[{"-", "10"}]], ",", "100", ",", 
       RowBox[{"1", "/", "10"}]}], "}"}]}], "]"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.7416964672586317`*^9, 3.741696467466772*^9}, {
  3.7419314602330027`*^9, 3.7419314624812927`*^9}, {3.741942885678555*^9, 
  3.741942889890831*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"ReVsInter", "=", 
   RowBox[{"Interpolation", "[", "ReVsTab", "]"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.7416936710416307`*^9, 3.741693680592991*^9}, {
  3.741931464061099*^9, 3.741931465691093*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Plot", "[", 
  RowBox[{
   RowBox[{"ReVsInter", "[", "r", "]"}], ",", 
   RowBox[{"{", 
    RowBox[{"r", ",", 
     SuperscriptBox["10", 
      RowBox[{"-", "10"}]], ",", "100"}], "}"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.741934257260697*^9, 3.7419342779563217`*^9}}],

Cell[BoxData[
 GraphicsBox[{{{}, {}, 
    TagBox[
     {RGBColor[0.368417, 0.506779, 0.709798], AbsoluteThickness[1.6], Opacity[
      1.], LineBox[CompressedData["
1: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
yjEpTo2MPP4fUJYLdA==
       "]]},
     Annotation[#, "Charting`Private`Tag$189279#1"]& ]}, {}, {}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{0, 0},
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  ImagePadding->All,
  ImageSize->{856., Automatic},
  Method->{
   "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
    AbsolutePointSize[6], "ScalingFunctions" -> None, 
    "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
        (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
         Part[#, 1]], 
        (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
         Part[#, 2]]}& ), "CopiedValueFunction" -> ({
        (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
         Part[#, 1]], 
        (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
         Part[#, 2]]}& )}},
  PlotRange->NCache[{{
      Rational[1, 10000000000], 100}, {-0.010368776041688363`, 
     0.011159996934274883`}}, {{1.*^-10, 100}, {-0.010368776041688363`, 
     0.011159996934274883`}}],
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.05], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{{3.741934271826179*^9, 3.741934278513173*^9}, 
   3.741945469372963*^9}]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Check that ReVs[m -> 0] ->\[Sigma]r", "Subsubsection",
 CellChangeTimes->{{3.741695975793347*^9, 3.741696017303967*^9}, 
   3.741696153835601*^9, 3.741945677396819*^9, {3.74194849076095*^9, 
   3.7419484930566177`*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"Block", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{"v", "=", 
        RowBox[{"1", "/", "2"}]}], ",", 
       RowBox[{"mD", "=", 
        RowBox[{"1", "/", "1000"}]}], ",", 
       RowBox[{"\[Alpha]", "=", 
        RowBox[{"\[Alpha]cont", "[", 
         RowBox[{"[", "1", "]"}], "]"}]}]}], "}"}], ",", 
     RowBox[{"gReAnTab", "=", 
      RowBox[{"Join", "[", 
       RowBox[{
        RowBox[{"ParallelTable", "[", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{"r", ",", 
            RowBox[{"gReAn", "[", 
             RowBox[{"r", ",", "mD", ",", "v", ",", "\[Alpha]"}], "]"}]}], 
           "}"}], ",", 
          RowBox[{"{", 
           RowBox[{"r", ",", 
            SuperscriptBox["10", 
             RowBox[{"-", "10"}]], ",", 
            SuperscriptBox["10", 
             RowBox[{"-", "5"}]], ",", 
            SuperscriptBox["10", 
             RowBox[{"-", "10"}]]}], "}"}]}], "]"}], ",", 
        RowBox[{"ParallelTable", "[", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{"r", ",", 
            RowBox[{"gReAn", "[", 
             RowBox[{"r", ",", "mD", ",", "v", ",", "\[Alpha]"}], "]"}]}], 
           "}"}], ",", 
          RowBox[{"{", 
           RowBox[{"r", ",", 
            RowBox[{"2", " ", 
             SuperscriptBox["10", 
              RowBox[{"-", "5"}]]}], ",", 
            SuperscriptBox["10", 
             RowBox[{"-", "1"}]], ",", 
            SuperscriptBox["10", 
             RowBox[{"-", "5"}]]}], "}"}]}], "]"}], ",", 
        RowBox[{"ParallelTable", "[", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{"r", ",", 
            RowBox[{"gReAn", "[", 
             RowBox[{"r", ",", "mD", ",", "v", ",", "\[Alpha]"}], "]"}]}], 
           "}"}], ",", 
          RowBox[{"{", 
           RowBox[{"r", ",", 
            RowBox[{"2", " ", 
             SuperscriptBox["10", 
              RowBox[{"-", "1"}]]}], ",", "100", ",", 
            SuperscriptBox["10", 
             RowBox[{"-", "1"}]]}], "}"}]}], "]"}], ",", 
        RowBox[{"ParallelTable", "[", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{"r", ",", 
            RowBox[{"gReAn", "[", 
             RowBox[{"r", ",", "mD", ",", "v", ",", "\[Alpha]"}], "]"}]}], 
           "}"}], ",", 
          RowBox[{"{", 
           RowBox[{"r", ",", "101", ",", 
            SuperscriptBox["10", "5"], ",", "1"}], "}"}]}], "]"}]}], 
       "]"}]}]}], "]"}], "//", "AbsoluteTiming"}], ";"}]], "Input",
 CellChangeTimes->{{3.741951877725782*^9, 3.741951880247765*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"gReAnInter", "=", 
   RowBox[{"Interpolation", "[", "gReAnTab", "]"}]}], ";"}]], "Input",
 CellChangeTimes->{3.741693566151392*^9, 3.741931454336796*^9}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Plot", "[", 
  RowBox[{
   RowBox[{"gReAnInter", "[", "r", "]"}], ",", 
   RowBox[{"{", 
    RowBox[{"r", ",", 
     SuperscriptBox["10", 
      RowBox[{"-", "10"}]], ",", "10"}], "}"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.7419428609435053`*^9, 3.741942881535516*^9}, {
  3.7419536507445383`*^9, 3.741953670976557*^9}, {3.741954173081788*^9, 
  3.7419541847772818`*^9}}],

Cell[BoxData[
 GraphicsBox[{{{}, {}, 
    TagBox[
     {RGBColor[0.368417, 0.506779, 0.709798], AbsoluteThickness[1.6], Opacity[
      1.], LineBox[CompressedData["
1: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
       "]]},
     Annotation[#, "Charting`Private`Tag$295583#1"]& ]}, {}, {}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{0, -9.573939044417784*^-8},
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  ImagePadding->All,
  Method->{
   "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
    AbsolutePointSize[6], "ScalingFunctions" -> None, 
    "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
        (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
         Part[#, 1]], 
        (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
         Part[#, 2]]}& ), "CopiedValueFunction" -> ({
        (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
         Part[#, 1]], 
        (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
         Part[#, 2]]}& )}},
  PlotRange->NCache[{{
      Rational[1, 10000000000], 
      10}, {-9.573939044417784*^-8, -7.3501936202556044`*^-9}}, {{
     1.*^-10, 10}, {-9.573939044417784*^-8, -7.3501936202556044`*^-9}}],
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.05], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{
  3.741945355213357*^9, {3.7419536450914392`*^9, 3.741953657730052*^9}, {
   3.741954170212708*^9, 3.741954186143176*^9}}]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{"ReVsTab", "=", 
   RowBox[{"ParallelTable", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"r", ",", 
       RowBox[{"ReVs", "[", 
        RowBox[{"r", ",", 
         RowBox[{"15", "/", "100"}], ",", 
         RowBox[{"\[Alpha]cont", "[", 
          RowBox[{"[", "1", "]"}], "]"}], ",", 
         RowBox[{"\[Sigma]cont", "[", 
          RowBox[{"[", "1", "]"}], "]"}]}], "]"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"r", ",", 
       SuperscriptBox["10", 
        RowBox[{"-", "10"}]], ",", "100", ",", 
       RowBox[{"1", "/", "10"}]}], "}"}]}], "]"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.7416964672586317`*^9, 3.741696467466772*^9}, {
  3.7419314602330027`*^9, 3.7419314624812927`*^9}, {3.741942885678555*^9, 
  3.741942889890831*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"ReVsInter", "=", 
   RowBox[{"Interpolation", "[", "ReVsTab", "]"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.7416936710416307`*^9, 3.741693680592991*^9}, {
  3.741931464061099*^9, 3.741931465691093*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Plot", "[", 
  RowBox[{
   RowBox[{"ReVsInter", "[", "r", "]"}], ",", 
   RowBox[{"{", 
    RowBox[{"r", ",", 
     SuperscriptBox["10", 
      RowBox[{"-", "10"}]], ",", "50"}], "}"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.741934257260697*^9, 3.7419342779563217`*^9}, {
  3.74195440691252*^9, 3.741954434102458*^9}}],

Cell[BoxData[
 GraphicsBox[{{{}, {}, 
    TagBox[
     {RGBColor[0.368417, 0.506779, 0.709798], AbsoluteThickness[1.6], Opacity[
      1.], LineBox[CompressedData["
1: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
bX50+A+jxPz0
       "]]},
     Annotation[#, "Charting`Private`Tag$295839#1"]& ]}, {}, {}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{0, 0},
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  ImagePadding->All,
  ImageSize->{856., Automatic},
  Method->{
   "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
    AbsolutePointSize[6], "ScalingFunctions" -> None, 
    "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
        (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
         Part[#, 1]], 
        (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
         Part[#, 2]]}& ), "CopiedValueFunction" -> ({
        (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
         Part[#, 1]], 
        (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
         Part[#, 2]]}& )}},
  PlotRange->NCache[{{
      Rational[1, 10000000000], 50}, {0., 2.6072662216833034`*^-6}}, {{
     1.*^-10, 50}, {0., 2.6072662216833034`*^-6}}],
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.05], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{{3.741934271826179*^9, 3.741934278513173*^9}, 
   3.741945469372963*^9, {3.741954398959207*^9, 3.741954434867041*^9}}]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Check that ReVs[v -> 0] ->ReVsold", "Subsubsection",
 CellChangeTimes->{{3.741689248831089*^9, 3.741689294832055*^9}, {
   3.7416895052080507`*^9, 3.7416895302091312`*^9}, {3.741696054345454*^9, 
   3.741696056136693*^9}, 3.741696157811616*^9, {3.741945681556302*^9, 
   3.741945683876194*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"ReVsold", "[", 
    RowBox[{"r_", ",", "mD_", ",", "\[Alpha]_", ",", "\[Sigma]_"}], "]"}], ":=", 
   RowBox[{
    RowBox[{
     FractionBox[
      RowBox[{"Gamma", "[", 
       RowBox[{"1", "/", "4"}], "]"}], 
      RowBox[{
       SuperscriptBox["2", 
        RowBox[{"3", "/", "4"}]], 
       SqrtBox["\[Pi]"]}]], 
     FractionBox["\[Sigma]", 
      SuperscriptBox[
       RowBox[{"(", 
        RowBox[{
         SuperscriptBox["mD", "2"], 
         FractionBox["\[Sigma]", "\[Alpha]"]}], ")"}], 
       RowBox[{"1", "/", "4"}]]], 
     RowBox[{"ParabolicCylinderD", "[", 
      RowBox[{
       RowBox[{
        RowBox[{"-", "1"}], "/", "2"}], ",", 
       RowBox[{
        SqrtBox["2"], 
        SuperscriptBox[
         RowBox[{"(", 
          RowBox[{
           SuperscriptBox["mD", "2"], 
           FractionBox["\[Sigma]", "\[Alpha]"]}], ")"}], 
         RowBox[{"1", "/", "4"}]], "r"}]}], "]"}]}], "+", 
    RowBox[{
     FractionBox[
      RowBox[{"Gamma", "[", 
       RowBox[{"1", "/", "4"}], "]"}], 
      RowBox[{"2", " ", 
       RowBox[{"Gamma", "[", 
        RowBox[{"3", "/", "4"}], "]"}]}]], 
     FractionBox["\[Sigma]", 
      SuperscriptBox[
       RowBox[{"(", 
        RowBox[{
         SuperscriptBox["mD", "2"], 
         FractionBox["\[Sigma]", "\[Alpha]"]}], ")"}], 
       RowBox[{"1", "/", "4"}]]]}]}]}], ";"}]], "Input",
 CellChangeTimes->{{3.741947517080717*^9, 3.741947532083749*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Plot", "[", 
  RowBox[{
   RowBox[{"ReVsold", "[", 
    RowBox[{"r", ",", 
     RowBox[{"15", "/", "100"}], ",", 
     RowBox[{"\[Alpha]cont", "[", 
      RowBox[{"[", "1", "]"}], "]"}], ",", 
     RowBox[{"\[Sigma]cont", "[", 
      RowBox[{"[", "1", "]"}], "]"}]}], "]"}], ",", 
   RowBox[{"{", 
    RowBox[{"r", ",", "0", ",", "20"}], "}"}], ",", 
   RowBox[{"PlotRange", "\[Rule]", "All"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.741945713462986*^9, 3.741945749566683*^9}, {
  3.741945808210569*^9, 3.74194581204499*^9}}],

Cell[BoxData[
 GraphicsBox[{{{}, {}, 
    TagBox[
     {RGBColor[0.368417, 0.506779, 0.709798], AbsoluteThickness[1.6], Opacity[
      1.], LineBox[CompressedData["
1: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
       "]]},
     Annotation[#, "Charting`Private`Tag$191260#1"]& ]}, {}, {}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{0, 0.8544488217438603},
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  ImagePadding->All,
  ImageSize->{636., Automatic},
  Method->{
   "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
    AbsolutePointSize[6], "ScalingFunctions" -> None, 
    "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
        (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
         Part[#, 1]], 
        (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
         Part[#, 2]]}& ), "CopiedValueFunction" -> ({
        (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
         Part[#, 1]], 
        (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
         Part[#, 2]]}& )}},
  PlotRange->{All, All},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.05], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{{3.741945743581353*^9, 3.741945750605032*^9}, {
  3.741945808929693*^9, 3.741945812903284*^9}, {3.741947521177753*^9, 
  3.741947535745904*^9}}]
}, Open  ]]
}, Open  ]]
}, Open  ]]
}, Open  ]]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Imaginary part", "Chapter",
 CellChangeTimes->{{3.7390941277482853`*^9, 3.739094138156002*^9}, {
  3.741689211162672*^9, 3.741689211730427*^9}, {3.741931791830668*^9, 
  3.741931792782378*^9}}],

Cell[CellGroupData[{

Cell["Coulomb", "Subchapter",
 CellChangeTimes->{{3.738900306964458*^9, 3.738900317144824*^9}, {
  3.7390941442080193`*^9, 3.7390941444641314`*^9}, {3.7416892146028023`*^9, 
  3.741689225018568*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"ImVcpar", "[", 
    RowBox[{"r_", ",", "mD_", ",", "v_", ",", "\[Alpha]_", ",", "T_"}], "]"}],
    ":=", 
   RowBox[{"\[Alpha]", " ", "T", " ", 
    SuperscriptBox["mD", "2"], 
    SuperscriptBox[
     RowBox[{"(", 
      RowBox[{"1", "-", 
       SuperscriptBox["v", "2"]}], ")"}], 
     RowBox[{"3", "/", "2"}]], 
    RowBox[{"NIntegrate", "[", 
     RowBox[{
      RowBox[{"Re", "[", 
       RowBox[{
        RowBox[{"Sin", "[", "\[Theta]", "]"}], 
        FractionBox[
         RowBox[{"2", "+", 
          RowBox[{
           SuperscriptBox["v", "2"], 
           SuperscriptBox[
            RowBox[{"Sin", "[", "\[Theta]", "]"}], "2"]}]}], 
         RowBox[{"2", 
          SuperscriptBox[
           RowBox[{"(", 
            RowBox[{"1", "+", 
             RowBox[{
              SuperscriptBox["v", "2"], 
              SuperscriptBox[
               RowBox[{"Sin", "[", "\[Theta]", "]"}], "2"]}]}], ")"}], 
           RowBox[{"5", "/", "2"}]]}]], 
        FractionBox["1", 
         RowBox[{"\[ImaginaryI]", " ", 
          RowBox[{"Im", "[", 
           RowBox[{"\[CapitalPi]par", "[", 
            RowBox[{"\[Theta]", ",", "v", ",", "mD"}], "]"}], "]"}]}]], 
        RowBox[{"(", 
         RowBox[{
          RowBox[{
           RowBox[{"Sinh", "[", 
            RowBox[{"r", " ", 
             RowBox[{"Cos", "[", "\[Theta]", "]"}], 
             SqrtBox[
              RowBox[{"\[CapitalPi]par", "[", 
               RowBox[{"\[Theta]", ",", "v", ",", "mD"}], "]"}]]}], "]"}], 
           RowBox[{"SinhIntegral", "[", 
            RowBox[{"r", " ", 
             RowBox[{"Cos", "[", "\[Theta]", "]"}], 
             SqrtBox[
              RowBox[{"\[CapitalPi]par", "[", 
               RowBox[{"\[Theta]", ",", "v", ",", "mD"}], "]"}]]}], "]"}]}], 
          "-", 
          RowBox[{
           RowBox[{"Cosh", "[", 
            RowBox[{"r", " ", 
             RowBox[{"Cos", "[", "\[Theta]", "]"}], 
             SqrtBox[
              RowBox[{"\[CapitalPi]par", "[", 
               RowBox[{"\[Theta]", ",", "v", ",", "mD"}], "]"}]]}], "]"}], 
           RowBox[{"CoshIntegral", "[", 
            RowBox[{"r", " ", 
             RowBox[{"Cos", "[", "\[Theta]", "]"}], 
             SqrtBox[
              RowBox[{"\[CapitalPi]par", "[", 
               RowBox[{"\[Theta]", ",", "v", ",", "mD"}], "]"}]]}], "]"}]}], 
          "-", 
          RowBox[{
           RowBox[{"Sinh", "[", 
            RowBox[{"r", " ", 
             RowBox[{"Cos", "[", "\[Theta]", "]"}], 
             SqrtBox[
              RowBox[{"Conjugate", "[", 
               RowBox[{"\[CapitalPi]par", "[", 
                RowBox[{"\[Theta]", ",", "v", ",", "mD"}], "]"}], "]"}]]}], 
            "]"}], 
           RowBox[{"SinhIntegral", "[", 
            RowBox[{"r", " ", 
             RowBox[{"Cos", "[", "\[Theta]", "]"}], 
             SqrtBox[
              RowBox[{"Conjugate", "[", 
               RowBox[{"\[CapitalPi]par", "[", 
                RowBox[{"\[Theta]", ",", "v", ",", "mD"}], "]"}], "]"}]]}], 
            "]"}]}], "+", 
          RowBox[{
           RowBox[{"Cosh", "[", 
            RowBox[{"r", " ", 
             RowBox[{"Cos", "[", "\[Theta]", "]"}], 
             SqrtBox[
              RowBox[{"Conjugate", "[", 
               RowBox[{"\[CapitalPi]par", "[", 
                RowBox[{"\[Theta]", ",", "v", ",", "mD"}], "]"}], "]"}]]}], 
            "]"}], 
           RowBox[{"CoshIntegral", "[", 
            RowBox[{"r", " ", 
             RowBox[{"Cos", "[", "\[Theta]", "]"}], 
             SqrtBox[
              RowBox[{"Conjugate", "[", 
               RowBox[{"\[CapitalPi]par", "[", 
                RowBox[{"\[Theta]", ",", "v", ",", "mD"}], "]"}], "]"}]]}], 
            "]"}]}]}], ")"}]}], "]"}], ",", 
      RowBox[{"{", 
       RowBox[{"\[Theta]", ",", "0", ",", 
        RowBox[{"\[Pi]", "/", "2"}]}], "}"}], ",", 
      RowBox[{"Method", "\[Rule]", "\"\<GlobalAdaptive\>\""}], ",", 
      RowBox[{"WorkingPrecision", "\[Rule]", "11"}], ",", 
      RowBox[{"AccuracyGoal", "\[Rule]", "11"}]}], "]"}]}]}], ";"}]], "Input",\

 CellChangeTimes->{{3.7392743613912477`*^9, 3.739274361599062*^9}, {
   3.739520947900159*^9, 3.739520953015149*^9}, {3.739521021501712*^9, 
   3.739521025472033*^9}, {3.7395210621989517`*^9, 3.739521062306492*^9}, {
   3.739521098551477*^9, 3.739521098644664*^9}, {3.739521145896346*^9, 
   3.739521189984836*^9}, {3.739522056031592*^9, 3.739522059470598*^9}, {
   3.741425230086638*^9, 3.7414252335512257`*^9}, {3.741513185007874*^9, 
   3.741513189696352*^9}, {3.741513265649584*^9, 3.741513291584094*^9}, {
   3.7415134760935993`*^9, 3.7415134825741367`*^9}, {3.7415135132226133`*^9, 
   3.7415135202379103`*^9}, {3.7415135891226263`*^9, 3.741513591858774*^9}, {
   3.741513623128463*^9, 3.741513623256035*^9}, {3.741513793323646*^9, 
   3.741513797255828*^9}, {3.74151388838188*^9, 3.74151391896717*^9}, {
   3.741513976815576*^9, 3.741513977229907*^9}, {3.741514035032638*^9, 
   3.7415140388838177`*^9}, {3.741514073725716*^9, 3.741514221083499*^9}, {
   3.7415142514930983`*^9, 3.741514266444545*^9}, {3.741514651691476*^9, 
   3.741514671229192*^9}, {3.741514719565794*^9, 3.7415147555754633`*^9}, {
   3.741514831832663*^9, 3.741514834752091*^9}, {3.741514945675227*^9, 
   3.741514963586894*^9}, {3.741515287361065*^9, 3.741515295768096*^9}, {
   3.7415153592672*^9, 3.741515373017563*^9}, {3.741515590008003*^9, 
   3.7415155937545547`*^9}, {3.741515648544442*^9, 3.741515650532847*^9}, {
   3.741515751131372*^9, 3.741515758114974*^9}, {3.7415157911791973`*^9, 
   3.741515793048356*^9}, {3.741515841716172*^9, 3.741515865355235*^9}, {
   3.7415158959655657`*^9, 3.741515944129253*^9}, {3.7415159811503677`*^9, 
   3.741516070728376*^9}, {3.741516171514695*^9, 3.74151617793851*^9}, {
   3.741516249492477*^9, 3.741516251995536*^9}, {3.741516691718543*^9, 
   3.7415167191612043`*^9}, {3.7415167698063307`*^9, 
   3.7415167946389427`*^9}, {3.741516840457774*^9, 3.741516898479948*^9}, {
   3.7415171582545023`*^9, 3.741517189897626*^9}, 3.741517221103571*^9, {
   3.7415172548244*^9, 3.741517255267189*^9}, {3.741517438476873*^9, 
   3.741517496291827*^9}, {3.7415175725821238`*^9, 3.741517572743095*^9}, {
   3.741517696176443*^9, 3.741517745404726*^9}, {3.74151781185948*^9, 
   3.741517829156147*^9}, {3.7415179538216476`*^9, 3.741518122910696*^9}, {
   3.74151829087684*^9, 3.74151829233206*^9}, {3.741518999570298*^9, 
   3.741519006787756*^9}, {3.741519071139656*^9, 3.741519074416996*^9}, {
   3.741519106635922*^9, 3.741519112379672*^9}, {3.741519464575946*^9, 
   3.7415195128111467`*^9}, {3.741519663687356*^9, 3.7415196700772457`*^9}, {
   3.74151972742498*^9, 3.7415197296116257`*^9}, {3.741519775320635*^9, 
   3.7415198262084007`*^9}, {3.741520743619998*^9, 3.741520766933078*^9}, {
   3.741520839689123*^9, 3.741520843572852*^9}, {3.741521771768165*^9, 
   3.741521778727831*^9}, {3.741521822769156*^9, 3.741521825248891*^9}}],

Cell[CellGroupData[{

Cell["Check that ImVcpar[m -> 0] ->0 ", "Subsubsection",
 CellChangeTimes->{{3.741689248831089*^9, 3.741689294832055*^9}, {
  3.741932075972295*^9, 3.7419321019646482`*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Block", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{"r", "=", 
      SuperscriptBox["10", "1"]}], ",", 
     RowBox[{"mD", "=", 
      SuperscriptBox["10", 
       RowBox[{"-", "20"}]]}], ",", 
     RowBox[{"v", "=", 
      RowBox[{"1", "/", "2"}]}]}], "}"}], ",", 
   RowBox[{"ImVcpar", "[", 
    RowBox[{"r", ",", "mD", ",", "v", ",", "1", ",", "1"}], "]"}]}], 
  "]"}]], "Input",
 CellChangeTimes->{{3.741689355344458*^9, 3.7416893862872343`*^9}, 
   3.741689422156065*^9, {3.741932106161405*^9, 3.741932148839275*^9}, 
   3.741932232697094*^9, {3.741939052288928*^9, 3.741939104327033*^9}}],

Cell[BoxData[
 RowBox[{"-", "0.475215470128628263049464760874035971`11."}]], "Output",
 CellChangeTimes->{{3.74193903225425*^9, 3.741939104836281*^9}, 
   3.7419545864467163`*^9}]
}, Open  ]],

Cell[BoxData[
 RowBox[{"(*", 
  RowBox[{
   RowBox[{"also", " ", "the", " ", "case", " ", "for", " ", "v"}], "=", 
   RowBox[{
    RowBox[{
    "0", " ", "where", " ", "we", " ", "add", " ", "in", " ", "the", " ", 
     "1"}], "-", " ", 
    RowBox[{
    "to", " ", "the", " ", "\[Phi]", " ", "in", " ", "order", " ", "to", " ", 
     "compensate"}]}]}], "*)"}]], "Input",
 CellChangeTimes->{{3.741954728337203*^9, 3.7419547729081373`*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell["\<\
Check that this results replicates original 3d integral (i.e. that contour \
integral was performed correctly)\
\>", "Subsubsection",
 CellChangeTimes->{{3.741689248831089*^9, 3.741689294832055*^9}, {
  3.741689441599021*^9, 3.741689470167807*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"ImVcparcheck", "[", 
   RowBox[{"r_", ",", "mD_", ",", "v_", ",", "\[Alpha]_", ",", "T_"}], "]"}], 
  ":=", 
  RowBox[{
   RowBox[{"-", "\[Alpha]"}], " ", "T", " ", 
   SuperscriptBox["mD", "2"], 
   SuperscriptBox[
    RowBox[{"(", 
     RowBox[{"1", "-", 
      SuperscriptBox["v", "2"]}], ")"}], 
    RowBox[{"3", "/", "2"}]], 
   RowBox[{"NIntegrate", "[", 
    RowBox[{
     RowBox[{
      RowBox[{"Sin", "[", "\[Theta]", "]"}], 
      FractionBox[
       RowBox[{"2", "+", 
        RowBox[{
         SuperscriptBox["v", "2"], 
         SuperscriptBox[
          RowBox[{"Sin", "[", "\[Theta]", "]"}], "2"]}]}], 
       RowBox[{"2", " ", 
        SuperscriptBox[
         RowBox[{"(", 
          RowBox[{"1", "+", 
           RowBox[{
            SuperscriptBox["v", "2"], 
            SuperscriptBox[
             RowBox[{"Sin", "[", "\[Theta]", "]"}], "2"]}]}], ")"}], 
         RowBox[{"5", "/", "2"}]]}]], 
      FractionBox[
       RowBox[{"p", " ", 
        RowBox[{"Exp", "[", 
         RowBox[{"\[ImaginaryI]", " ", "p", " ", "r", " ", 
          RowBox[{"Cos", "[", "\[Theta]", "]"}]}], "]"}]}], 
       RowBox[{
        RowBox[{"(", 
         RowBox[{
          SuperscriptBox["p", "2"], "+", 
          RowBox[{"\[CapitalPi]par", "[", 
           RowBox[{"\[Theta]", ",", "v", ",", "mD"}], "]"}]}], ")"}], 
        RowBox[{"(", 
         RowBox[{
          SuperscriptBox["p", "2"], "+", 
          RowBox[{"Conjugate", "[", 
           RowBox[{"\[CapitalPi]par", "[", 
            RowBox[{"\[Theta]", ",", "v", ",", "mD"}], "]"}], "]"}]}], 
         ")"}]}]]}], ",", 
     RowBox[{"{", 
      RowBox[{"p", ",", "0", ",", "\[Infinity]"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"\[Theta]", ",", "0", ",", "\[Pi]"}], "}"}]}], 
    "]"}]}]}]], "Input",
 CellChangeTimes->{{3.7416968313386393`*^9, 3.7416968415790167`*^9}, 
   3.741932245035997*^9}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Quiet", "[", 
  RowBox[{"ParallelTable", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"a", ",", 
      RowBox[{"ImVcparcheck", "[", 
       RowBox[{
        SuperscriptBox["10", "a"], ",", 
        RowBox[{"15", "/", "100"}], ",", 
        RowBox[{"1", "/", "2"}], ",", 
        RowBox[{"\[Alpha]cont", "[", 
         RowBox[{"[", "1", "]"}], "]"}], ",", 
        RowBox[{"155", "/", "1000"}]}], "]"}]}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"a", ",", 
      RowBox[{"-", "10"}], ",", "10"}], "}"}]}], "]"}], "]"}]], "Input",
 CellChangeTimes->{{3.739094178551199*^9, 3.739094187745016*^9}, {
   3.741499869081141*^9, 3.741499878819765*^9}, {3.7414999444589148`*^9, 
   3.741499995411406*^9}, {3.74150015227931*^9, 3.741500159047203*^9}, {
   3.741500302522359*^9, 3.7415003069810133`*^9}, {3.74193218628011*^9, 
   3.741932198167811*^9}, {3.7419322474893436`*^9, 3.741932248041279*^9}, {
   3.7419394163570843`*^9, 3.741939418468307*^9}, 3.741955053653925*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"NIntegrate", "::", "mtdfb"}], "MessageName"], " ", ":", 
  "  ", "\<\"Numerical integration with \
\\!\\(\\*RowBox[{\\\"\\\\\\\"LevinRule\\\\\\\"\\\"}]\\) failed. The \
integration continues with Method -> \
\\!\\(\\*RowBox[{\\\"\\\\\\\"MultiDimensionalRule\\\\\\\"\\\"}]\\).\"\>"}]], \
"Message", "MSG",
 ShowCellLabel->True,
 CellChangeTimes->{3.741939765650631*^9}],

Cell[BoxData["$Aborted"], "Output",
 CellChangeTimes->{3.741939777669869*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"ImVcparcheck", "[", 
  RowBox[{
   SuperscriptBox["10", "1"], ",", 
   RowBox[{"15", "/", "100"}], ",", 
   RowBox[{"1", "/", "2"}], ",", 
   RowBox[{"\[Alpha]cont", "[", 
    RowBox[{"[", "1", "]"}], "]"}], ",", 
   RowBox[{"155", "/", "1000"}]}], "]"}]], "Input",
 CellChangeTimes->{3.741954938615959*^9, 3.741955056614171*^9}],

Cell[BoxData[
 RowBox[{
  RowBox[{"-", "0.01693428950947715`"}], "-", 
  RowBox[{"6.685068201037217`*^-13", " ", "\[ImaginaryI]"}]}]], "Output",
 CellChangeTimes->{3.741954954340057*^9, 3.741955071981546*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Table", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"a", ",", 
     RowBox[{"ImVcpar", "[", 
      RowBox[{
       SuperscriptBox["10", "a"], ",", 
       RowBox[{"15", "/", "100"}], ",", 
       RowBox[{"1", "/", "2"}], ",", 
       RowBox[{"\[Alpha]cont", "[", 
        RowBox[{"[", "1", "]"}], "]"}], ",", 
       RowBox[{"155", "/", "1000"}]}], "]"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"a", ",", 
     RowBox[{"-", "10"}], ",", "10"}], "}"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.739094214498005*^9, 3.739094222400062*^9}, {
   3.741499082282016*^9, 3.741499084236545*^9}, {3.7415000237427387`*^9, 
   3.741500027356721*^9}, {3.741500064622181*^9, 3.741500069293124*^9}, {
   3.741500295443597*^9, 3.7415002997771473`*^9}, {3.741500529815435*^9, 
   3.741500537822399*^9}, {3.7419322516735163`*^9, 3.74193225217693*^9}, {
   3.741954795213464*^9, 3.741954801620809*^9}, 3.74195501128994*^9, 
   3.741955069932246*^9}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{"-", "10"}], ",", 
     RowBox[{"-", "0.03783974618671567764916060353450729941`11."}]}], "}"}], 
   ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"-", "9"}], ",", 
     RowBox[{"-", "0.0378397461867156776402659006050381844`11."}]}], "}"}], 
   ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"-", "8"}], ",", 
     RowBox[{"-", "0.03783974618671567699322357473578490336`11."}]}], "}"}], 
   ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"-", "7"}], ",", 
     RowBox[{"-", "0.03783974618671561704361974310844734626`11."}]}], "}"}], 
   ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"-", "6"}], ",", 
     RowBox[{"-", "0.03783974618671031423167341595735115936`11."}]}], "}"}], 
   ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"-", "5"}], ",", 
     RowBox[{"-", "0.03783974618625402373999995575601374829`11."}]}], "}"}], 
   ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"-", "4"}], ",", 
     RowBox[{"-", "0.03783974614800676108097301990123289384`11."}]}], "}"}], 
   ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"-", "3"}], ",", 
     RowBox[{"-", "0.03783974306270526444485014482290700884`11."}]}], "}"}], 
   ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"-", "2"}], ",", 
     RowBox[{"-", "0.03783950847227422239820922003997934146`11."}]}], "}"}], 
   ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"-", "1"}], ",", 
     RowBox[{"-", "0.037823443250118854298618173311799556`11."}]}], "}"}], 
   ",", 
   RowBox[{"{", 
    RowBox[{"0", ",", 
     RowBox[{"-", "0.03695447438004489657447422704775452883`11."}]}], "}"}], 
   ",", 
   RowBox[{"{", 
    RowBox[{"1", ",", 
     RowBox[{"-", "0.01693429066698825994469908882167603215`11."}]}], "}"}], 
   ",", 
   RowBox[{"{", 
    RowBox[{"2", ",", 
     RowBox[{"-", "0.00012591221650758841957165158700371536`11."}]}], "}"}], 
   ",", 
   RowBox[{"{", 
    RowBox[{"3", ",", 
     RowBox[{"-", "0.00001700650938595298961742673578728967`11."}]}], "}"}], 
   ",", 
   RowBox[{"{", 
    RowBox[{"4", ",", "0"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"5", ",", "0"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"6", ",", "0"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"7", ",", "0"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"8", ",", "0"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"9", ",", "0"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"10", ",", "0"}], "}"}]}], "}"}]], "Output",
 CellChangeTimes->{
  3.739094271369327*^9, 3.739094381822136*^9, 3.739510635572308*^9, 
   3.7413339986938753`*^9, 3.7413433424947557`*^9, 3.741343543985508*^9, {
   3.741499079272602*^9, 3.741499084770643*^9}, 3.74150002875266*^9, {
   3.741500070617496*^9, 3.7415001308487597`*^9}, 3.741500310104554*^9, 
   3.741500538960144*^9, 3.741697139981268*^9, {3.7419547793270197`*^9, 
   3.74195480462814*^9}, 3.741955013633997*^9, 3.7419550743330603`*^9}]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Check that ImVcpar[v -> 0] ->\[Phi]", "Subsubsection",
 CellChangeTimes->{{3.741689248831089*^9, 3.741689294832055*^9}, {
  3.7416895052080507`*^9, 3.7416895302091312`*^9}, {3.741932277304344*^9, 
  3.741932286984536*^9}, {3.741955167098399*^9, 3.741955171922035*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"ImVc0", "[", 
    RowBox[{"r_", ",", "mD_", ",", "\[Alpha]_", ",", "T_"}], "]"}], ":=", 
   RowBox[{
    RowBox[{"-", "\[Alpha]"}], " ", "T", " ", 
    RowBox[{"Quiet", "[", 
     RowBox[{"2", 
      RowBox[{"NIntegrate", "[", 
       RowBox[{
        RowBox[{
         FractionBox["z", 
          SuperscriptBox[
           RowBox[{"(", 
            RowBox[{
             SuperscriptBox["z", "2"], "+", "1"}], ")"}], "2"]], 
         RowBox[{"Sinc", "[", 
          RowBox[{"mD", " ", "r", " ", "z"}], "]"}]}], ",", 
        RowBox[{"{", 
         RowBox[{"z", ",", "0", ",", "\[Infinity]"}], "}"}]}], "]"}]}], 
     "]"}]}]}], ";"}]], "Input",
 CellChangeTimes->{{3.739094520400584*^9, 3.739094550777295*^9}, {
  3.739094632850964*^9, 3.73909463363083*^9}, {3.741514285620035*^9, 
  3.741514292835338*^9}, {3.741515100084902*^9, 3.7415151002602177`*^9}, {
  3.741954844630402*^9, 3.741954869718401*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Block", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{"r", "=", "10"}], ",", 
     RowBox[{"mD", "=", 
      RowBox[{"15", "/", "100"}]}], ",", 
     RowBox[{"\[Alpha]", "=", 
      RowBox[{"\[Alpha]cont", "[", 
       RowBox[{"[", "1", "]"}], "]"}]}], ",", 
     RowBox[{"T", "=", 
      RowBox[{"155", "/", "1000"}]}]}], "}"}], ",", 
   RowBox[{
    RowBox[{"ImVcpar", "[", 
     RowBox[{"r", ",", "mD", ",", 
      SuperscriptBox["10", 
       RowBox[{"-", "5"}]], ",", "\[Alpha]", ",", "T"}], "]"}], "-", 
    RowBox[{"ImVc0", "[", 
     RowBox[{"r", ",", "mD", ",", "\[Alpha]", ",", "T"}], "]"}]}]}], 
  "]"}]], "Input",
 CellChangeTimes->{{3.741689552850376*^9, 3.741689673732902*^9}, {
   3.7416897230058613`*^9, 3.741689742590528*^9}, {3.741689783120082*^9, 
   3.741689807127758*^9}, {3.741932293370385*^9, 3.7419323590598183`*^9}, {
   3.741939349916415*^9, 3.7419393500689917`*^9}, {3.741954834150341*^9, 
   3.7419548634541197`*^9}, {3.741954898072507*^9, 3.741954906648704*^9}, 
   3.741955088035047*^9, {3.74195518828583*^9, 3.741955245669314*^9}}],

Cell[BoxData[
 RowBox[{"-", "4.4581012756395033`*^-7"}]], "Output",
 CellChangeTimes->{
  3.74168956886979*^9, {3.741689617138464*^9, 3.741689674501853*^9}, {
   3.741689725263624*^9, 3.7416898080895853`*^9}, 3.741689917870392*^9, 
   3.741697140118022*^9, {3.74193934188107*^9, 3.741939351234809*^9}, {
   3.741954831577385*^9, 3.74195485970289*^9}, {3.741954890940398*^9, 
   3.741954907734503*^9}, 3.741955090003932*^9, {3.741955189066066*^9, 
   3.741955246369203*^9}}]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Check asymptotic values", "Subsubsection",
 CellChangeTimes->{{3.741689248831089*^9, 3.741689294832055*^9}, {
  3.7416895052080507`*^9, 3.7416895302091312`*^9}, {3.741689926679542*^9, 
  3.7416899353524017`*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"ImVcpar", "[", 
  RowBox[{
   SuperscriptBox["10", 
    RowBox[{"-", "10"}]], ",", 
   RowBox[{"15", "/", "100"}], ",", 
   RowBox[{"1", "/", "10"}], ",", 
   RowBox[{"\[Alpha]cont", "[", 
    RowBox[{"[", "1", "]"}], "]"}], ",", 
   RowBox[{"155", "/", "100"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.741689943730174*^9, 3.7416899818514137`*^9}, 
   3.741932425987781*^9, {3.741932473511301*^9, 3.741932517766591*^9}}],

Cell[BoxData[
 RowBox[{"-", "0.77195164567979946976173315510758710486`11."}]], "Output",
 CellChangeTimes->{{3.741689952919251*^9, 3.741689982201736*^9}, 
   3.741697140264484*^9, 3.741939377534615*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"ImVcpar", "[", 
  RowBox[{
   SuperscriptBox["10", "10"], ",", 
   RowBox[{"15", "/", "100"}], ",", 
   RowBox[{"1", "/", "10"}], ",", 
   RowBox[{"\[Alpha]cont", "[", 
    RowBox[{"[", "1", "]"}], "]"}], ",", 
   RowBox[{"155", "/", "100"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.741689967626116*^9, 3.741689984172181*^9}, 
   3.7419324263176403`*^9, {3.741932486490555*^9, 3.7419325220416527`*^9}}],

Cell[BoxData["0"], "Output",
 CellChangeTimes->{{3.741689968674618*^9, 3.741689984600775*^9}, 
   3.7416971405492477`*^9, 3.7419393803519497`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"ImVcpar", "[", 
  RowBox[{
   SuperscriptBox["10", 
    RowBox[{"-", "10"}]], ",", 
   RowBox[{"15", "/", "100"}], ",", 
   RowBox[{"9", "/", "10"}], ",", 
   RowBox[{"\[Alpha]cont", "[", 
    RowBox[{"[", "1", "]"}], "]"}], ",", 
   RowBox[{"155", "/", "100"}]}], "]"}]], "Input",
 CellChangeTimes->{
  3.741689989354897*^9, 3.741932426668236*^9, {3.741932486651082*^9, 
   3.741932524161496*^9}}],

Cell[BoxData[
 RowBox[{"-", "0.07545927682188038872528323263380538604`11."}]], "Output",
 CellChangeTimes->{3.741689990310122*^9, 3.741697140736431*^9, 
  3.741939383228804*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"ImVcpar", "[", 
  RowBox[{
   SuperscriptBox["10", "10"], ",", 
   RowBox[{"15", "/", "100"}], ",", 
   RowBox[{"9", "/", "10"}], ",", 
   RowBox[{"\[Alpha]cont", "[", 
    RowBox[{"[", "1", "]"}], "]"}], ",", 
   RowBox[{"155", "/", "100"}]}], "]"}]], "Input",
 CellChangeTimes->{
  3.7416900067628508`*^9, 3.7419324270118723`*^9, {3.741932488742002*^9, 
   3.74193252619348*^9}}],

Cell[BoxData["0"], "Output",
 CellChangeTimes->{3.741690007736753*^9, 3.741697141624503*^9, 
  3.741939385699836*^9}]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Plots", "Subsubsection",
 CellChangeTimes->{{3.7416898336127977`*^9, 3.741689842674139*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Quiet", "[", 
  RowBox[{"Plot", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
      RowBox[{"ImVcpar", "[", 
       RowBox[{"r", ",", 
        RowBox[{"15", "/", "100"}], ",", 
        RowBox[{"2", "/", "10"}], ",", 
        RowBox[{"\[Alpha]cont", "[", 
         RowBox[{"[", "1", "]"}], "]"}], ",", 
        RowBox[{"155", "/", "1000"}]}], "]"}], ",", 
      RowBox[{"ImVcpar", "[", 
       RowBox[{"r", ",", 
        RowBox[{"15", "/", "100"}], ",", 
        RowBox[{"4", "/", "10"}], ",", 
        RowBox[{"\[Alpha]cont", "[", 
         RowBox[{"[", "1", "]"}], "]"}], ",", 
        RowBox[{"155", "/", "1000"}]}], "]"}], ",", 
      RowBox[{"ImVcpar", "[", 
       RowBox[{"r", ",", 
        RowBox[{"15", "/", "100"}], ",", 
        RowBox[{"6", "/", "10"}], ",", 
        RowBox[{"\[Alpha]cont", "[", 
         RowBox[{"[", "1", "]"}], "]"}], ",", 
        RowBox[{"155", "/", "1000"}]}], "]"}], ",", 
      RowBox[{"ImVcpar", "[", 
       RowBox[{"r", ",", 
        RowBox[{"15", "/", "100"}], ",", 
        RowBox[{"8", "/", "10"}], ",", 
        RowBox[{"\[Alpha]cont", "[", 
         RowBox[{"[", "1", "]"}], "]"}], ",", 
        RowBox[{"155", "/", "1000"}]}], "]"}]}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"r", ",", "0", ",", "100"}], "}"}], ",", 
    RowBox[{"PlotRange", "\[Rule]", "All"}]}], "]"}], "]"}]], "Input",
 CellChangeTimes->{{3.741689845713015*^9, 3.741689892625499*^9}, {
  3.7416900584699306`*^9, 3.741690086788825*^9}, {3.741690125085582*^9, 
  3.7416901252296457`*^9}, {3.7419552674907846`*^9, 3.741955319352065*^9}, {
  3.7419553693851433`*^9, 3.741955439033031*^9}}],

Cell[BoxData[
 GraphicsBox[{{{}, {}, 
    TagBox[
     {RGBColor[0.368417, 0.506779, 0.709798], AbsoluteThickness[1.6], Opacity[
      1.], LineBox[CompressedData["
1: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
       "]]},
     Annotation[#, "Charting`Private`Tag$676305#1"]& ], 
    TagBox[
     {RGBColor[0.880722, 0.611041, 0.142051], AbsoluteThickness[1.6], Opacity[
      1.], LineBox[CompressedData["
1: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
       "]]},
     Annotation[#, "Charting`Private`Tag$676305#2"]& ], 
    TagBox[
     {RGBColor[0.560181, 0.691569, 0.194885], AbsoluteThickness[1.6], Opacity[
      1.], LineBox[CompressedData["
1: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
       "]]},
     Annotation[#, "Charting`Private`Tag$676305#3"]& ], 
    TagBox[
     {RGBColor[0.922526, 0.385626, 0.209179], AbsoluteThickness[1.6], Opacity[
      1.], LineBox[CompressedData["
1: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
       "]]},
     Annotation[#, "Charting`Private`Tag$676305#4"]& ]}, {}, {}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{0, 0},
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  ImagePadding->All,
  ImageSize->{973., Automatic},
  Method->{
   "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
    AbsolutePointSize[6], "ScalingFunctions" -> None, 
    "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
        (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
         Part[#, 1]], 
        (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
         Part[#, 2]]}& ), "CopiedValueFunction" -> ({
        (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
         Part[#, 1]], 
        (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
         Part[#, 2]]}& )}},
  PlotRange->{All, All},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.05], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{3.741955589525261*^9}]
}, Open  ]]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["String", "Subchapter",
 CellChangeTimes->{{3.738900306964458*^9, 3.738900317144824*^9}, {
  3.7390941442080193`*^9, 3.7390941444641314`*^9}, {3.7416892146028023`*^9, 
  3.741689225018568*^9}, {3.741690244886342*^9, 3.741690245678523*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"We", " ", "employ", " ", "the", " ", 
    RowBox[{"BCs", ":", " ", 
     RowBox[{
      RowBox[{
       RowBox[{"ReVs", "'"}], 
       RowBox[{"(", "r", ")"}]}], "|", "r"}]}]}], "\[Rule]", "\[Infinity]"}], 
  "=", 
  RowBox[{
   RowBox[{
    RowBox[{
     RowBox[{"0", " ", "and", " ", 
      RowBox[{"ReVs", "'"}], 
      RowBox[{"(", "r", ")"}]}], "|", "r"}], "\[Rule]", "0"}], "=", 
   "0"}]}]], "Text",
 CellChangeTimes->{{3.7416916016780024`*^9, 3.741691706435688*^9}, {
  3.7416918253186893`*^9, 3.741691917007255*^9}, {3.7416919533685226`*^9, 
  3.7416920228177223`*^9}, {3.741692074978056*^9, 3.7416922245020523`*^9}, {
  3.741692448474126*^9, 3.741692467786929*^9}, {3.7416925466327763`*^9, 
  3.741692551001541*^9}, {3.741955617804624*^9, 3.741955622460753*^9}}],

Cell[CellGroupData[{

Cell["Define g function (RHS of ODE)", "Subsection",
 CellChangeTimes->{{3.741689248831089*^9, 3.741689294832055*^9}, {
  3.7416902752632637`*^9, 3.7416902869192677`*^9}}],

Cell[BoxData[
 RowBox[{"(*", "definition", "*)"}]], "Input",
 CellChangeTimes->{{3.741690620394333*^9, 3.741690627398528*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"gImAn", "[", 
    RowBox[{"r_", ",", "mD_", ",", "v_", ",", "\[Alpha]_", ",", "T_"}], "]"}],
    ":=", 
   RowBox[{
    RowBox[{"\[Alpha]", " ", "T", " ", 
     SuperscriptBox["mD", "2"], 
     SuperscriptBox[
      RowBox[{"(", 
       RowBox[{"1", "-", 
        SuperscriptBox["v", "2"]}], ")"}], 
      RowBox[{"3", "/", "2"}]], 
     FractionBox["1", "r"], 
     RowBox[{"NIntegrate", "[", 
      RowBox[{
       RowBox[{"Re", "[", 
        RowBox[{
         RowBox[{"Cos", "[", "\[Theta]", "]"}], " ", 
         RowBox[{"Sin", "[", "\[Theta]", "]"}], 
         FractionBox[
          RowBox[{"2", "+", 
           RowBox[{
            SuperscriptBox["v", "2"], 
            SuperscriptBox[
             RowBox[{"Sin", "[", "\[Theta]", "]"}], "2"]}]}], 
          RowBox[{"2", 
           SuperscriptBox[
            RowBox[{"(", 
             RowBox[{"1", "+", 
              RowBox[{
               SuperscriptBox["v", "2"], 
               SuperscriptBox[
                RowBox[{"Sin", "[", "\[Theta]", "]"}], "2"]}]}], ")"}], 
            RowBox[{"5", "/", "2"}]]}]], 
         FractionBox["1", 
          RowBox[{"\[ImaginaryI]", " ", 
           RowBox[{"Im", "[", 
            RowBox[{"\[CapitalPi]par", "[", 
             RowBox[{"\[Theta]", ",", "v", ",", "mD"}], "]"}], "]"}]}]], 
         RowBox[{"(", 
          RowBox[{
           RowBox[{"2", " ", 
            SqrtBox[
             RowBox[{"Conjugate", "[", 
              RowBox[{"\[CapitalPi]par", "[", 
               RowBox[{"\[Theta]", ",", "v", ",", "mD"}], "]"}], "]"}]], " ", 
            
            RowBox[{"(", 
             RowBox[{
              RowBox[{
               RowBox[{"-", 
                RowBox[{"CoshIntegral", "[", 
                 RowBox[{"r", " ", 
                  SqrtBox[
                   RowBox[{"Conjugate", "[", 
                    RowBox[{"\[CapitalPi]par", "[", 
                    RowBox[{"\[Theta]", ",", "v", ",", "mD"}], "]"}], "]"}]], 
                  " ", 
                  RowBox[{"Cos", "[", "\[Theta]", "]"}]}], "]"}]}], " ", 
               RowBox[{"Sinh", "[", 
                RowBox[{"r", " ", 
                 SqrtBox[
                  RowBox[{"Conjugate", "[", 
                   RowBox[{"\[CapitalPi]par", "[", 
                    RowBox[{"\[Theta]", ",", "v", ",", "mD"}], "]"}], "]"}]], 
                 " ", 
                 RowBox[{"Cos", "[", "\[Theta]", "]"}]}], "]"}]}], "+", 
              RowBox[{
               RowBox[{"Cosh", "[", 
                RowBox[{"r", " ", 
                 SqrtBox[
                  RowBox[{"Conjugate", "[", 
                   RowBox[{"\[CapitalPi]par", "[", 
                    RowBox[{"\[Theta]", ",", "v", ",", "mD"}], "]"}], "]"}]], 
                 " ", 
                 RowBox[{"Cos", "[", "\[Theta]", "]"}]}], "]"}], " ", 
               RowBox[{"SinhIntegral", "[", 
                RowBox[{"r", " ", 
                 SqrtBox[
                  RowBox[{"Conjugate", "[", 
                   RowBox[{"\[CapitalPi]par", "[", 
                    RowBox[{"\[Theta]", ",", "v", ",", "mD"}], "]"}], "]"}]], 
                 " ", 
                 RowBox[{"Cos", "[", "\[Theta]", "]"}]}], "]"}]}]}], ")"}]}], 
           "+", 
           RowBox[{"r", " ", 
            RowBox[{"Conjugate", "[", 
             RowBox[{"\[CapitalPi]par", "[", 
              RowBox[{"\[Theta]", ",", "v", ",", "mD"}], "]"}], "]"}], " ", 
            RowBox[{"Cos", "[", "\[Theta]", "]"}], " ", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{
               RowBox[{"-", 
                RowBox[{"Cosh", "[", 
                 RowBox[{"r", " ", 
                  SqrtBox[
                   RowBox[{"Conjugate", "[", 
                    RowBox[{"\[CapitalPi]par", "[", 
                    RowBox[{"\[Theta]", ",", "v", ",", "mD"}], "]"}], "]"}]], 
                  " ", 
                  RowBox[{"Cos", "[", "\[Theta]", "]"}]}], "]"}]}], " ", 
               RowBox[{"CoshIntegral", "[", 
                RowBox[{"r", " ", 
                 SqrtBox[
                  RowBox[{"Conjugate", "[", 
                   RowBox[{"\[CapitalPi]par", "[", 
                    RowBox[{"\[Theta]", ",", "v", ",", "mD"}], "]"}], "]"}]], 
                 " ", 
                 RowBox[{"Cos", "[", "\[Theta]", "]"}]}], "]"}]}], "+", 
              RowBox[{
               RowBox[{"Sinh", "[", 
                RowBox[{"r", " ", 
                 SqrtBox[
                  RowBox[{"Conjugate", "[", 
                   RowBox[{"\[CapitalPi]par", "[", 
                    RowBox[{"\[Theta]", ",", "v", ",", "mD"}], "]"}], "]"}]], 
                 " ", 
                 RowBox[{"Cos", "[", "\[Theta]", "]"}]}], "]"}], " ", 
               RowBox[{"SinhIntegral", "[", 
                RowBox[{"r", " ", 
                 SqrtBox[
                  RowBox[{"Conjugate", "[", 
                   RowBox[{"\[CapitalPi]par", "[", 
                    RowBox[{"\[Theta]", ",", "v", ",", "mD"}], "]"}], "]"}]], 
                 " ", 
                 RowBox[{"Cos", "[", "\[Theta]", "]"}]}], "]"}]}]}], ")"}]}], 
           "+", 
           RowBox[{
            SqrtBox[
             RowBox[{"\[CapitalPi]par", "[", 
              RowBox[{"\[Theta]", ",", "v", ",", "mD"}], "]"}]], " ", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{
               RowBox[{"CoshIntegral", "[", 
                RowBox[{"r", " ", 
                 RowBox[{"Cos", "[", "\[Theta]", "]"}], " ", 
                 SqrtBox[
                  RowBox[{"\[CapitalPi]par", "[", 
                   RowBox[{"\[Theta]", ",", "v", ",", "mD"}], "]"}]]}], "]"}],
                " ", 
               RowBox[{"(", 
                RowBox[{
                 RowBox[{"r", " ", 
                  RowBox[{"Cos", "[", "\[Theta]", "]"}], " ", 
                  RowBox[{"Cosh", "[", 
                   RowBox[{"r", " ", 
                    RowBox[{"Cos", "[", "\[Theta]", "]"}], " ", 
                    SqrtBox[
                    RowBox[{"\[CapitalPi]par", "[", 
                    RowBox[{"\[Theta]", ",", "v", ",", "mD"}], "]"}]]}], 
                   "]"}], " ", 
                  SqrtBox[
                   RowBox[{"\[CapitalPi]par", "[", 
                    RowBox[{"\[Theta]", ",", "v", ",", "mD"}], "]"}]]}], "+", 
                 
                 RowBox[{"2", " ", 
                  RowBox[{"Sinh", "[", 
                   RowBox[{"r", " ", 
                    RowBox[{"Cos", "[", "\[Theta]", "]"}], " ", 
                    SqrtBox[
                    RowBox[{"\[CapitalPi]par", "[", 
                    RowBox[{"\[Theta]", ",", "v", ",", "mD"}], "]"}]]}], 
                   "]"}]}]}], ")"}]}], "-", 
              RowBox[{
               RowBox[{"(", 
                RowBox[{
                 RowBox[{"2", " ", 
                  RowBox[{"Cosh", "[", 
                   RowBox[{"r", " ", 
                    RowBox[{"Cos", "[", "\[Theta]", "]"}], " ", 
                    SqrtBox[
                    RowBox[{"\[CapitalPi]par", "[", 
                    RowBox[{"\[Theta]", ",", "v", ",", "mD"}], "]"}]]}], 
                   "]"}]}], "+", 
                 RowBox[{"r", " ", 
                  RowBox[{"Cos", "[", "\[Theta]", "]"}], " ", 
                  SqrtBox[
                   RowBox[{"\[CapitalPi]par", "[", 
                    RowBox[{"\[Theta]", ",", "v", ",", "mD"}], "]"}]], " ", 
                  RowBox[{"Sinh", "[", 
                   RowBox[{"r", " ", 
                    RowBox[{"Cos", "[", "\[Theta]", "]"}], " ", 
                    SqrtBox[
                    RowBox[{"\[CapitalPi]par", "[", 
                    RowBox[{"\[Theta]", ",", "v", ",", "mD"}], "]"}]]}], 
                   "]"}]}]}], ")"}], " ", 
               RowBox[{"SinhIntegral", "[", 
                RowBox[{"r", " ", 
                 RowBox[{"Cos", "[", "\[Theta]", "]"}], " ", 
                 SqrtBox[
                  RowBox[{"\[CapitalPi]par", "[", 
                   RowBox[{"\[Theta]", ",", "v", ",", "mD"}], "]"}]]}], 
                "]"}]}]}], ")"}]}]}], ")"}]}], "]"}], ",", 
       RowBox[{"{", 
        RowBox[{"\[Theta]", ",", "0", ",", 
         RowBox[{"\[Pi]", "/", "2"}]}], "}"}], ",", 
       RowBox[{"Method", "\[Rule]", "\"\<GlobalAdaptive\>\""}], ",", 
       RowBox[{"WorkingPrecision", "\[Rule]", "20"}], ",", 
       RowBox[{"MaxRecursion", "\[Rule]", "20"}], ",", 
       RowBox[{"PrecisionGoal", "\[Rule]", "10"}]}], "]"}]}], "+", 
    RowBox[{
     SuperscriptBox["mD", "2"], 
     RowBox[{"ImVcpar", "[", 
      RowBox[{"r", ",", "mD", ",", "v", ",", "\[Alpha]", ",", "T"}], 
      "]"}]}]}]}], ";"}]], "Input",
 CellChangeTimes->{{3.741432674760459*^9, 3.741432718984558*^9}, 
   3.741432755688808*^9, {3.7414950750923767`*^9, 3.74149507769189*^9}, {
   3.7414951445989923`*^9, 3.741495227212554*^9}, {3.741495267672595*^9, 
   3.7414952748913097`*^9}, 3.7415227370873003`*^9, {3.741522914337237*^9, 
   3.7415229144621143`*^9}, {3.741522951769019*^9, 3.741523006937491*^9}, {
   3.742012052803248*^9, 3.742012078442481*^9}, {3.742012367298229*^9, 
   3.742012371218547*^9}, {3.742012465851329*^9, 3.74201247869932*^9}, {
   3.74201251080476*^9, 3.742012512436348*^9}, {3.742012572061038*^9, 
   3.742012577956936*^9}, {3.742012614654866*^9, 3.742012616078299*^9}, {
   3.742012787801553*^9, 3.7420128011292477`*^9}, {3.742012863667261*^9, 
   3.742012882130293*^9}, {3.7420168271846523`*^9, 3.742016830946863*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"gImAnInterOne", "[", 
    RowBox[{"r1_", ",", "mD1_", ",", "v1_", ",", "\[Alpha]1_", ",", "T1_"}], 
    "]"}], ":=", 
   RowBox[{"Block", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{"r", "=", "r1"}], ",", 
       RowBox[{"mD", "=", "mD1"}], ",", 
       RowBox[{"v", "=", "v1"}], ",", 
       RowBox[{"\[Alpha]", "=", "\[Alpha]1"}], ",", 
       RowBox[{"T", "=", "T1"}], ",", "inter", ",", "tab"}], "}"}], ",", 
     RowBox[{
      RowBox[{"tab", "=", 
       RowBox[{"SetPrecision", "[", 
        RowBox[{
         RowBox[{"ParallelTable", "[", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{"\[Theta]", ",", 
             RowBox[{"Re", "[", 
              RowBox[{
               RowBox[{"Cos", "[", "\[Theta]", "]"}], " ", 
               RowBox[{"Sin", "[", "\[Theta]", "]"}], 
               FractionBox[
                RowBox[{"2", "+", 
                 RowBox[{
                  SuperscriptBox["v", "2"], 
                  SuperscriptBox[
                   RowBox[{"Sin", "[", "\[Theta]", "]"}], "2"]}]}], 
                RowBox[{"2", 
                 SuperscriptBox[
                  RowBox[{"(", 
                   RowBox[{"1", "+", 
                    RowBox[{
                    SuperscriptBox["v", "2"], 
                    SuperscriptBox[
                    RowBox[{"Sin", "[", "\[Theta]", "]"}], "2"]}]}], ")"}], 
                  RowBox[{"5", "/", "2"}]]}]], 
               FractionBox["1", 
                RowBox[{"\[ImaginaryI]", " ", 
                 RowBox[{"Im", "[", 
                  RowBox[{"\[CapitalPi]par", "[", 
                   RowBox[{"\[Theta]", ",", "v", ",", "mD"}], "]"}], "]"}]}]], 
               RowBox[{"(", 
                RowBox[{
                 RowBox[{"2", " ", 
                  SqrtBox[
                   RowBox[{"Conjugate", "[", 
                    RowBox[{"\[CapitalPi]par", "[", 
                    RowBox[{"\[Theta]", ",", "v", ",", "mD"}], "]"}], "]"}]], 
                  " ", 
                  RowBox[{"(", 
                   RowBox[{
                    RowBox[{
                    RowBox[{"-", 
                    RowBox[{"CoshIntegral", "[", 
                    RowBox[{"r", " ", 
                    SqrtBox[
                    RowBox[{"Conjugate", "[", 
                    RowBox[{"\[CapitalPi]par", "[", 
                    RowBox[{"\[Theta]", ",", "v", ",", "mD"}], "]"}], "]"}]], 
                    " ", 
                    RowBox[{"Cos", "[", "\[Theta]", "]"}]}], "]"}]}], " ", 
                    RowBox[{"Sinh", "[", 
                    RowBox[{"r", " ", 
                    SqrtBox[
                    RowBox[{"Conjugate", "[", 
                    RowBox[{"\[CapitalPi]par", "[", 
                    RowBox[{"\[Theta]", ",", "v", ",", "mD"}], "]"}], "]"}]], 
                    " ", 
                    RowBox[{"Cos", "[", "\[Theta]", "]"}]}], "]"}]}], "+", 
                    RowBox[{
                    RowBox[{"Cosh", "[", 
                    RowBox[{"r", " ", 
                    SqrtBox[
                    RowBox[{"Conjugate", "[", 
                    RowBox[{"\[CapitalPi]par", "[", 
                    RowBox[{"\[Theta]", ",", "v", ",", "mD"}], "]"}], "]"}]], 
                    " ", 
                    RowBox[{"Cos", "[", "\[Theta]", "]"}]}], "]"}], " ", 
                    RowBox[{"SinhIntegral", "[", 
                    RowBox[{"r", " ", 
                    SqrtBox[
                    RowBox[{"Conjugate", "[", 
                    RowBox[{"\[CapitalPi]par", "[", 
                    RowBox[{"\[Theta]", ",", "v", ",", "mD"}], "]"}], "]"}]], 
                    " ", 
                    RowBox[{"Cos", "[", "\[Theta]", "]"}]}], "]"}]}]}], 
                   ")"}]}], "+", 
                 RowBox[{"r", " ", 
                  RowBox[{"Conjugate", "[", 
                   RowBox[{"\[CapitalPi]par", "[", 
                    RowBox[{"\[Theta]", ",", "v", ",", "mD"}], "]"}], "]"}], 
                  " ", 
                  RowBox[{"Cos", "[", "\[Theta]", "]"}], " ", 
                  RowBox[{"(", 
                   RowBox[{
                    RowBox[{
                    RowBox[{"-", 
                    RowBox[{"Cosh", "[", 
                    RowBox[{"r", " ", 
                    SqrtBox[
                    RowBox[{"Conjugate", "[", 
                    RowBox[{"\[CapitalPi]par", "[", 
                    RowBox[{"\[Theta]", ",", "v", ",", "mD"}], "]"}], "]"}]], 
                    " ", 
                    RowBox[{"Cos", "[", "\[Theta]", "]"}]}], "]"}]}], " ", 
                    RowBox[{"CoshIntegral", "[", 
                    RowBox[{"r", " ", 
                    SqrtBox[
                    RowBox[{"Conjugate", "[", 
                    RowBox[{"\[CapitalPi]par", "[", 
                    RowBox[{"\[Theta]", ",", "v", ",", "mD"}], "]"}], "]"}]], 
                    " ", 
                    RowBox[{"Cos", "[", "\[Theta]", "]"}]}], "]"}]}], "+", 
                    RowBox[{
                    RowBox[{"Sinh", "[", 
                    RowBox[{"r", " ", 
                    SqrtBox[
                    RowBox[{"Conjugate", "[", 
                    RowBox[{"\[CapitalPi]par", "[", 
                    RowBox[{"\[Theta]", ",", "v", ",", "mD"}], "]"}], "]"}]], 
                    " ", 
                    RowBox[{"Cos", "[", "\[Theta]", "]"}]}], "]"}], " ", 
                    RowBox[{"SinhIntegral", "[", 
                    RowBox[{"r", " ", 
                    SqrtBox[
                    RowBox[{"Conjugate", "[", 
                    RowBox[{"\[CapitalPi]par", "[", 
                    RowBox[{"\[Theta]", ",", "v", ",", "mD"}], "]"}], "]"}]], 
                    " ", 
                    RowBox[{"Cos", "[", "\[Theta]", "]"}]}], "]"}]}]}], 
                   ")"}]}], "+", 
                 RowBox[{
                  SqrtBox[
                   RowBox[{"\[CapitalPi]par", "[", 
                    RowBox[{"\[Theta]", ",", "v", ",", "mD"}], "]"}]], " ", 
                  RowBox[{"(", 
                   RowBox[{
                    RowBox[{
                    RowBox[{"CoshIntegral", "[", 
                    RowBox[{"r", " ", 
                    RowBox[{"Cos", "[", "\[Theta]", "]"}], " ", 
                    SqrtBox[
                    RowBox[{"\[CapitalPi]par", "[", 
                    RowBox[{"\[Theta]", ",", "v", ",", "mD"}], "]"}]]}], 
                    "]"}], " ", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"r", " ", 
                    RowBox[{"Cos", "[", "\[Theta]", "]"}], " ", 
                    RowBox[{"Cosh", "[", 
                    RowBox[{"r", " ", 
                    RowBox[{"Cos", "[", "\[Theta]", "]"}], " ", 
                    SqrtBox[
                    RowBox[{"\[CapitalPi]par", "[", 
                    RowBox[{"\[Theta]", ",", "v", ",", "mD"}], "]"}]]}], 
                    "]"}], " ", 
                    SqrtBox[
                    RowBox[{"\[CapitalPi]par", "[", 
                    RowBox[{"\[Theta]", ",", "v", ",", "mD"}], "]"}]]}], "+", 
                    
                    RowBox[{"2", " ", 
                    RowBox[{"Sinh", "[", 
                    RowBox[{"r", " ", 
                    RowBox[{"Cos", "[", "\[Theta]", "]"}], " ", 
                    SqrtBox[
                    RowBox[{"\[CapitalPi]par", "[", 
                    RowBox[{"\[Theta]", ",", "v", ",", "mD"}], "]"}]]}], 
                    "]"}]}]}], ")"}]}], "-", 
                    RowBox[{
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"2", " ", 
                    RowBox[{"Cosh", "[", 
                    RowBox[{"r", " ", 
                    RowBox[{"Cos", "[", "\[Theta]", "]"}], " ", 
                    SqrtBox[
                    RowBox[{"\[CapitalPi]par", "[", 
                    RowBox[{"\[Theta]", ",", "v", ",", "mD"}], "]"}]]}], 
                    "]"}]}], "+", 
                    RowBox[{"r", " ", 
                    RowBox[{"Cos", "[", "\[Theta]", "]"}], " ", 
                    SqrtBox[
                    RowBox[{"\[CapitalPi]par", "[", 
                    RowBox[{"\[Theta]", ",", "v", ",", "mD"}], "]"}]], " ", 
                    RowBox[{"Sinh", "[", 
                    RowBox[{"r", " ", 
                    RowBox[{"Cos", "[", "\[Theta]", "]"}], " ", 
                    SqrtBox[
                    RowBox[{"\[CapitalPi]par", "[", 
                    RowBox[{"\[Theta]", ",", "v", ",", "mD"}], "]"}]]}], 
                    "]"}]}]}], ")"}], " ", 
                    RowBox[{"SinhIntegral", "[", 
                    RowBox[{"r", " ", 
                    RowBox[{"Cos", "[", "\[Theta]", "]"}], " ", 
                    SqrtBox[
                    RowBox[{"\[CapitalPi]par", "[", 
                    RowBox[{"\[Theta]", ",", "v", ",", "mD"}], "]"}]]}], 
                    "]"}]}]}], ")"}]}]}], ")"}]}], "]"}]}], "}"}], ",", 
           RowBox[{"{", 
            RowBox[{"\[Theta]", ",", "0", ",", 
             RowBox[{"\[Pi]", "/", "2"}], ",", 
             RowBox[{"1", "/", "10000"}]}], "}"}]}], "]"}], ",", "100"}], 
        "]"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"inter", "=", 
       RowBox[{"Interpolation", "[", "tab", "]"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"Return", "[", 
       RowBox[{
        RowBox[{"\[Alpha]", " ", "T", " ", 
         SuperscriptBox["mD", "2"], 
         SuperscriptBox[
          RowBox[{"(", 
           RowBox[{"1", "-", 
            SuperscriptBox["v", "2"]}], ")"}], 
          RowBox[{"3", "/", "2"}]], 
         FractionBox["1", "r"], 
         RowBox[{"NIntegrate", "[", 
          RowBox[{
           RowBox[{"inter", "[", "x", "]"}], ",", 
           RowBox[{"{", 
            RowBox[{"x", ",", "0", ",", 
             RowBox[{"\[Pi]", "/", "2"}]}], "}"}]}], "]"}]}], "+", 
        RowBox[{
         SuperscriptBox["mD", "2"], 
         RowBox[{"ImVcpar", "[", 
          RowBox[{"r", ",", "mD", ",", "v", ",", "\[Alpha]", ",", "T"}], 
          "]"}]}]}], "]"}]}]}], "]"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.741955782588142*^9, 3.7419557831551247`*^9}, {
  3.7419561136737633`*^9, 3.74195611395186*^9}}],

Cell[CellGroupData[{

Cell["Check that gReAn[v -> 0] ->g_old", "Subsubsection",
 CellChangeTimes->{{3.741689248831089*^9, 3.741689294832055*^9}, {
   3.7416903258479652`*^9, 3.741690351144182*^9}, 3.74169154179909*^9, {
   3.741955744044825*^9, 3.7419557451964893`*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"gold", "[", 
    RowBox[{"r_", ",", "mD_", ",", "\[Alpha]_", ",", "T_"}], "]"}], ":=", 
   RowBox[{
    RowBox[{"-", "\[Alpha]"}], " ", "T", " ", 
    SuperscriptBox["mD", "2"], " ", 
    RowBox[{"Quiet", "[", 
     RowBox[{"2", 
      RowBox[{"NIntegrate", "[", 
       RowBox[{
        RowBox[{
         FractionBox["p", 
          RowBox[{
           SuperscriptBox["p", "2"], "+", "1"}]], 
         RowBox[{"Sinc", "[", 
          RowBox[{"p", " ", "mD", " ", "r"}], "]"}]}], ",", 
        RowBox[{"{", 
         RowBox[{"p", ",", "0", ",", "\[Infinity]"}], "}"}]}], "]"}]}], 
     "]"}]}]}], ";"}]], "Input",
 CellChangeTimes->{{3.741496040221901*^9, 3.741496041292829*^9}, {
  3.741497348247388*^9, 3.74149736459133*^9}, {3.741522803483211*^9, 
  3.7415228492106133`*^9}, {3.741522879907617*^9, 3.741522883572345*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Quiet", "[", 
  RowBox[{"ParallelTable", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"a", ",", 
      RowBox[{"gold", "[", 
       RowBox[{
        SuperscriptBox["10", "a"], ",", 
        RowBox[{"15", "/", "100"}], ",", 
        RowBox[{"\[Alpha]cont", "[", 
         RowBox[{"[", "1", "]"}], "]"}], ",", 
        RowBox[{"155", "/", "1000"}]}], "]"}]}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"a", ",", 
      RowBox[{"-", "10"}], ",", "10"}], "}"}]}], "]"}], "]"}]], "Input",
 CellChangeTimes->{{3.741500391932363*^9, 3.741500395731682*^9}, {
  3.7415005675186768`*^9, 3.741500570167494*^9}, {3.741522774595345*^9, 
  3.7415227874584103`*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{"-", "10"}], ",", 
     RowBox[{"-", "0.09034365438700892`"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"-", "9"}], ",", 
     RowBox[{"-", "0.08256811787457105`"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"-", "8"}], ",", 
     RowBox[{"-", "0.07431836553401933`"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"-", "7"}], ",", 
     RowBox[{"-", "0.06606690593021654`"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"-", "6"}], ",", 
     RowBox[{"-", "0.05805145666969239`"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"-", "5"}], ",", 
     RowBox[{"-", "0.04956570109946679`"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"-", "4"}], ",", 
     RowBox[{"-", "0.04131508780420199`"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"-", "3"}], ",", 
     RowBox[{"-", "0.03306448401163438`"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"-", "2"}], ",", 
     RowBox[{"-", "0.024839338382183163`"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"-", "1"}], ",", 
     RowBox[{"-", "0.016564003210948496`"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0", ",", 
     RowBox[{"-", "0.008355088717526226`"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"1", ",", 
     RowBox[{"-", "0.0014152094923920947`"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"2", ",", 
     RowBox[{"-", "0.000015883398144790666`"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"3", ",", 
     RowBox[{"-", "1.5926717210832888`*^-7"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"4", ",", 
     RowBox[{"-", "1.5925315015699927`*^-9"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"5", ",", 
     RowBox[{"-", "1.5925301001214267`*^-11"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"6", ",", 
     RowBox[{"-", "1.5925300861069948`*^-13"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"7", ",", 
     RowBox[{"-", "1.5925300859668339`*^-15"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"8", ",", 
     RowBox[{"-", "1.592530085965517`*^-17"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"9", ",", 
     RowBox[{"-", "1.5925300859654818`*^-19"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"10", ",", 
     RowBox[{"-", "1.5925300859653809`*^-21"}]}], "}"}]}], "}"}]], "Output",
 CellChangeTimes->{
  3.741500434016979*^9, 3.741500571205892*^9, {3.7415133641703463`*^9, 
   3.741513370074295*^9}, 3.741514080248241*^9, 3.741514378629651*^9, 
   3.741520756172283*^9, 3.741522788207344*^9, {3.741522852844509*^9, 
   3.7415228579102697`*^9}, 3.741955915740069*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"ParallelTable", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"a", ",", 
     RowBox[{"gImAn", "[", 
      RowBox[{
       SuperscriptBox["10", "a"], ",", 
       RowBox[{"15", "/", "100"}], ",", 
       RowBox[{"1", "/", "1000000"}], ",", 
       RowBox[{"\[Alpha]cont", "[", 
        RowBox[{"[", "1", "]"}], "]"}], ",", 
       RowBox[{"155", "/", "1000"}]}], "]"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"a", ",", 
     RowBox[{"-", "10"}], ",", "10"}], "}"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.741500417811676*^9, 3.741500421756109*^9}, {
   3.741500574880278*^9, 3.7415005774479113`*^9}, 3.7415228674789658`*^9}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{"-", "10"}], ",", 
     RowBox[{
     "-", "0.09081872249105664522109697114129310322`12.70493522597941"}]}], 
    "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"-", "9"}], ",", 
     RowBox[{
     "-", "0.08256811787220038325104653509934759463`12.66357222244167"}]}], 
    "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"-", "8"}], ",", 
     RowBox[{
     "-", "0.07431751189744294085894521984889823444`12.617850998738906"}]}], 
    "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"-", "7"}], ",", 
     RowBox[{
     "-", "0.06606690592268551001198784578375444123`12.56674380560541"}]}], 
    "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"-", "6"}], ",", 
     RowBox[{
     "-", "0.05781629994792837619226325904267161274`12.508810132223035"}]}], 
    "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"-", "5"}], ",", 
     RowBox[{
     "-", "0.04956569397510988725408143244740858527`12.441941028579215"}]}], 
    "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"-", "4"}], ",", 
     RowBox[{
     "-", "0.04131508800245966699505389757582419035`12.36286851989361"}]}], 
    "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"-", "3"}], ",", 
     RowBox[{
     "-", "0.03306448217588170162082715847089389987`12.266121590540859"}]}], 
    "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"-", "2"}], ",", 
     RowBox[{
     "-", "0.0248138869526259174029673898302146564`12.141456885434582"}]}], 
    "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"-", "1"}], ",", 
     RowBox[{
     "-", "0.01656400843703734398904358681304876804`11.966085461921416"}]}], 
    "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0", ",", 
     RowBox[{
     "-", "0.00835509498594002680923286525857239288`11.67746403186774"}]}], 
    "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"1", ",", 
     RowBox[{
     "-", "0.00141520943134992902353092316977826456`11.165880999630527"}]}], 
    "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"2", ",", 
     RowBox[{
     "-", "0.00009601449501179670898229385060802678`10.999269895833361"}]}], 
    "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
    "3", ",", "7.47116299985174759063559791449127712429920399086`25.*^-11"}], 
    "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"4", ",", "0"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"5", ",", "0"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"6", ",", "0"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"7", ",", "0"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"8", ",", "0"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"9", ",", "0"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"10", ",", "0"}], "}"}]}], "}"}]], "Output",
 CellChangeTimes->{
  3.741514974426675*^9, 3.74151530533245*^9, {3.741515363411882*^9, 
   3.741515380908249*^9}, 3.741515598792431*^9, 3.7415156707864*^9, 
   3.7415157629558973`*^9, {3.7415158718489103`*^9, 3.741515900047779*^9}, {
   3.741515938485816*^9, 3.741515949217074*^9}, {3.7415159897645884`*^9, 
   3.74151607311584*^9}, 3.741516188492806*^9, 3.741516274427465*^9, {
   3.741516705521309*^9, 3.741516723964428*^9}, 3.741516800952276*^9, {
   3.741516864407461*^9, 3.741516901802322*^9}, {3.7415171611551733`*^9, 
   3.741517204802225*^9}, {3.741517240120103*^9, 3.741517265530855*^9}, 
   3.7415173165652313`*^9, 3.7415174459581537`*^9, 3.7415174789769363`*^9, {
   3.741517558750709*^9, 3.741517577809236*^9}, {3.741517733022623*^9, 
   3.741517749980749*^9}, {3.741517816125379*^9, 3.7415178330530157`*^9}, {
   3.741517956967987*^9, 3.7415181124795437`*^9}, {3.7415182880749817`*^9, 
   3.7415182947879057`*^9}, {3.741519002689539*^9, 3.741519010948805*^9}, 
   3.741519078849373*^9, 3.74151949651418*^9, 3.7415196749041967`*^9, 
   3.74151973181738*^9, {3.7415197784541187`*^9, 3.741519829429001*^9}, {
   3.741520759077585*^9, 3.7415207787994957`*^9}, 3.7415208549169893`*^9, 
   3.741521788793056*^9, 3.741521834731575*^9, 3.7415228707953243`*^9, 
   3.741522920127346*^9, 3.741522958302087*^9, {3.741522993143351*^9, 
   3.741523010229683*^9}, 3.741955932393862*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"ListPlot", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{"Quiet", "[", 
      RowBox[{"ParallelTable", "[", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"a", ",", 
          RowBox[{"gold", "[", 
           RowBox[{"a", ",", 
            RowBox[{"15", "/", "100"}], ",", 
            RowBox[{"\[Alpha]cont", "[", 
             RowBox[{"[", "1", "]"}], "]"}], ",", 
            RowBox[{"155", "/", "1000"}]}], "]"}]}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"a", ",", "10", ",", "100", ",", "1"}], "}"}]}], "]"}], 
      "]"}], ",", 
     RowBox[{"Quiet", "[", 
      RowBox[{"ParallelTable", "[", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"a", ",", 
          RowBox[{"gImAn", "[", 
           RowBox[{"a", ",", 
            RowBox[{"15", "/", "100"}], ",", 
            RowBox[{"1", "/", "1000000"}], ",", 
            RowBox[{"\[Alpha]cont", "[", 
             RowBox[{"[", "1", "]"}], "]"}], ",", 
            RowBox[{"155", "/", "1000"}]}], "]"}]}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"a", ",", "10", ",", "100", ",", "1"}], "}"}]}], "]"}], 
      "]"}]}], "}"}], ",", 
   RowBox[{"PlotRange", "\[Rule]", "All"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.7415149876186237`*^9, 3.741515033235456*^9}, {
  3.741515109997314*^9, 3.741515151621024*^9}, {3.741515387802773*^9, 
  3.741515412386116*^9}, {3.741516922193055*^9, 3.741516954752116*^9}, {
  3.741518311340103*^9, 3.7415183207072372`*^9}, {3.741519118579994*^9, 
  3.741519130098362*^9}, {3.741519689942437*^9, 3.741519694462133*^9}, {
  3.741519748536489*^9, 3.74151975616733*^9}, {3.741521800679748*^9, 
  3.741521804382903*^9}, {3.7415230488731813`*^9, 3.741523053505352*^9}}],

Cell[BoxData[
 GraphicsBox[{{}, {{}, 
    {RGBColor[0.368417, 0.506779, 0.709798], PointSize[0.009166666666666668], 
     AbsoluteThickness[1.6], PointBox[CompressedData["
1:eJwtyw1Q03Ucx/F/CMjA7eQhxAUpoIRQPLXGAIkPD4PBeBjb2KazIu7gSmle
dEmcaTsSdnjZiocIPCIiUxbqIZycDmECHnGXJpyT7iI5AnZwCYEwcDqxun1/
d9/73eve9wksOiotdmIYRv3f/f873h7ML7/SOhapHHA4BE0PJo67ZsrJoRBs
LevgTuSTw2BNmhgY0uWRX0X55aJYjV1MjoD1947gzBUROQrZ47v85yXp5Gh0
Xasd2+aeRo6B82BrUA8nhfw6xJ2tm0UykHkYLBv5KKElkfwGajmx8e4r8WQ+
hF7Gw+4NAnIsbhdZRJEn+WQBpn+2pYS088hxMH/N17DsMeR48LrEfoGV0eQE
GE5vKroio8j7UXEucLXt+WvkRLzbmzqunwwnv4kA38ENy9I+chK6D/Hj3okK
JQMHPz8Wrzsb4rAW4Nr+iPgxfC/1ZByN/qb+28lg6snoS3p45ldDEPUUhB4s
ZfvXBVJPQZPXoe5btbuppyLgUvF1Y+4u6qn4ZfZhUHVLAPU0xPiFxYdy/Kmn
gf/SqjivhUtdCOsH5+ZYop3UhXg8a9QYPfyop0M4wxz3tPhST0fP/O76J/de
pJ6BubOs1O/u+1DPQE/wgTDFgjd1EdzUZe4XPMhaEYL1M2ew34t6Jvrfnr25
VOFJPRN/uSwHfT+0nXoWamZ99r3lR9ZmoTB3b9UXSxzqYugrxtVBA2zqYsQ1
Juaw27ZRz0Z11E/dTJ0H9WzM1Ghj7tS5U8/B4btRNUU/sKjnYHSucXjwhhv1
XFw79eEQa24r9VwYJMFbSnaQmTwY+pjOHXJX6nlYjI0za5pdqEuw6HPRNrrg
7DAkWLDcaqxPJmslWIvmbQjbtjhskqCmZOf2Qjcyk4+b93r1mmNOtM+HkYcN
l79foH0+uu7eGBssJpvycf+EblNkYWgvxSmRhZ1aSoYUpdYH6qGl5/2OvRRT
ns3iqxyySYos32GjOXbTYUaGaeuflrb3nzkMGWYq/+lsb7fTXgb2nYvTR+ae
0l6GctaSoTaCzMjx6aXmxasnn9BeDq532cgJs432cgicer1rY8gmOcaT7bb2
hse0L0DV+mX9e5sbtC+A3d6gayolawsQOVV5fW1qnfYFSP9kjzVBRWYUMFZn
dfDMVtor8Jngq87zCrJWAVel1F44uUZ7BSS3P66OLCEzSlyZ+HJ9dnWV9ko8
LXTWFVSRtUqMeJjNSi7ZpMSRnM6+4SuPaK+CevVZeHkuGSpwMuadshdXaK/C
o40Uc6CebFJBMFr+cpWQzBzAheSI3wznl/v/BdVZyqU=
      "]]}, 
    {RGBColor[0.880722, 0.611041, 0.142051], PointSize[0.009166666666666668], 
     AbsoluteThickness[1.6], PointBox[CompressedData["
1:eJw1039Q03Ucx/FFp7Dx41JAwKi1Vfxwyhjy+9deGxM2fuw3G2tn4K9+sfAP
iJSClgbKjyAFxESKH3VwlF047gwh+XIoVxGZHQEmmP6BQRhBqYfMtDre393t
do973ufu+3m/9xXs3q/f58LhcKz/ff//Xfs8B5e38mqviM2Daw5CcHlFzTqV
kRwC563ZC/xJHXkLBH3OseEjGvJW5BnLkgoeZJDDMC8fFaqWleRwnBwv9p7T
ppIlqPF+7ZoHT0GOgPLNP2J7veTk7XBscvtgtwHkSBz4JXM8viWJHAVLctw6
3nI8ORpvH6rdxWuMJccg/0VzqrgsmhwL7zSJLKgjkhyHic/CbdwHEeR4KCR/
+woOScgJaLrJGHvE4eRENP54brnt0TZyEh5Gqq/WTYvIyXg942Xub4uhZCkk
CZZtueEhZEA0sHe6ojlozXZAfP/xyx2i56nLoP1qe9LJ6Wepy2DPWjzwfbeQ
uhz/NC1xA+sF1OX4sE949tLxZ6inoFsoPdev5lNPwUoiw69oeYq6Ag6/8bgQ
r0DqCuQXXVVpWjZT34Ffa6pnucoA6jvAazlR0O/uTz0V64+Nl2y4tYl6Ko5+
vVS/Ou5LPQ0f2xrkH034UE9D6StBW0zz3tSVMPZKeV3uZLsSmuae95G4kboK
I4WOocWDG6ir8NDjprB1+Anq6VgRu4bu9Cfb01GTu7G8ZtGLegaajwxYhYOe
1DNwClFZnm0e1DPBnG1wcOrdqWci5p3Qw9U6el5OFq53XdxV0MA+Xxb8PNXm
qRvs86kxfC9fGxPMzl+NS+31HaYz7Pw1cP4u1VhiyHYNfj78UoO8ivbB0SJX
cBzCM0+vGVr4MqG3/SZpP3Ytpnyq/BdcyYwWYcWG8r1S2hdHhzBrU5S69Ek6
r8NPox5FhUO0P7sOHTPSiVZ3MqND61xf8idW2idHD2tc8PXMHton9FBWVHaN
HmTvo8fUI/4PM5FkRo/OC99W3lti72fA/Pk7R32+IMOA9LERWbSNva8B8Z3V
KxYRmTFgqqyo0jnB3t+ICLVYJLWQYURC26qtZIbmYTdCVXXs0649ZMYIv4y7
f11cYP+/2dgq85V99wYZ2Sg9saBxPMbOLxvG9QF9JXU0LyYbeUXcu5v57PxM
OF/anVv7JTs/EwIbBxIvp5DtJhg6R/onp9j5mXC/1+Fs28++H2a4KQReIW5k
mLHqum91Tzv7vpjxaruG0SSTGTPem+t5YfYa+/7koPvz2zcUd6gjB4Uujp7T
Q+z5HPi6OX1Qx57PwZ/vRn8j3snuz4Ir+rFimyhg8F/ydaXU
      
      "]]}, {}}, {}, {}, {{}, {}}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{8.59375, 0},
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  ImagePadding->All,
  ImageSize->{602., Automatic},
  Method->{"CoordinatesToolOptions" -> {"DisplayFunction" -> ({
        (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
         Part[#, 1]], 
        (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
         Part[#, 2]]}& ), "CopiedValueFunction" -> ({
        (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
         Part[#, 1]], 
        (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
         Part[#, 2]]}& )}},
  PlotRange->{{10., 100.}, {-0.0014152094923920947`, 0}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.05], 
     Scaled[0.02]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{3.7419559554632263`*^9}]
}, Open  ]]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Construct ImVs", "Section",
 CellChangeTimes->{{3.741689248831089*^9, 3.741689294832055*^9}, {
   3.7416902752632637`*^9, 3.7416902869192677`*^9}, {3.741691506151024*^9, 
   3.74169151358296*^9}, 3.741691554880196*^9, {3.741693352122316*^9, 
   3.741693358756297*^9}, {3.741693410235545*^9, 3.741693411571484*^9}, {
   3.741693757683474*^9, 3.741693836899815*^9}, {3.741693900358706*^9, 
   3.741693914733643*^9}, {3.741694707421792*^9, 3.741694709046475*^9}, {
   3.7419557550289497`*^9, 3.741955756077024*^9}}],

Cell[CellGroupData[{

Cell["Wronskian", "Subsubsection",
 CellChangeTimes->{{3.741694713737468*^9, 3.741694723160746*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"N", "[", 
  RowBox[{
   RowBox[{"Wronskian", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{"ParabolicCylinderD", "[", 
        RowBox[{
         RowBox[{"-", 
          FractionBox["1", "2"]}], ",", 
         RowBox[{
          SqrtBox["2"], " ", "x", " ", "\[Mu]"}]}], "]"}], ",", 
       RowBox[{"ParabolicCylinderD", "[", 
        RowBox[{
         RowBox[{"-", 
          FractionBox["1", "2"]}], ",", 
         RowBox[{"\[ImaginaryI]", 
          SqrtBox["2"], " ", "x", " ", "\[Mu]"}]}], "]"}]}], "}"}], ",", 
     "x"}], "]"}], "/.", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"x", "\[Rule]", 
      SuperscriptBox["10", "7"]}], ",", 
     RowBox[{"\[Mu]", "\[Rule]", "5"}]}], "}"}]}], "]"}]], "Input",
 CellChangeTimes->{
  3.741694683039023*^9, {3.741694810442236*^9, 3.741694831690065*^9}, {
   3.741931129898898*^9, 3.741931140859923*^9}}],

Cell[BoxData[
 RowBox[{"5.`", "\[VeryThinSpace]", "-", 
  RowBox[{"5.000000000000001`", " ", "\[ImaginaryI]"}]}]], "Output",
 CellChangeTimes->{
  3.741694683616229*^9, {3.741694814405387*^9, 3.741694832468522*^9}, 
   3.741697168307313*^9, {3.741931136214921*^9, 3.741931144824654*^9}, 
   3.7419559931769037`*^9}]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Solution", "Subsection",
 CellChangeTimes->{{3.741694734076148*^9, 3.741694745360155*^9}, 
   3.741694775898576*^9, {3.741696368471624*^9, 3.741696370471651*^9}, 
   3.74193114633153*^9}],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"ImVs", "[", 
    RowBox[{"r_", ",", "mD_", ",", "\[Alpha]_", ",", "\[Sigma]_"}], "]"}], ":=", 
   RowBox[{
    RowBox[{
     RowBox[{"-", 
      RowBox[{"Re", "[", 
       RowBox[{"ParabolicCylinderD", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"-", "1"}], "/", "2"}], ",", 
         RowBox[{"\[ImaginaryI]", 
          SqrtBox["2"], 
          SuperscriptBox[
           RowBox[{"(", 
            RowBox[{
             SuperscriptBox["mD", "2"], 
             FractionBox["\[Sigma]", "\[Alpha]"]}], ")"}], 
           RowBox[{"1", "/", "4"}]], " ", "r"}]}], "]"}], "]"}]}], 
     RowBox[{"Quiet", "[", 
      RowBox[{"NIntegrate", "[", 
       RowBox[{
        FractionBox[
         RowBox[{
          RowBox[{"ParabolicCylinderD", "[", 
           RowBox[{
            RowBox[{
             RowBox[{"-", "1"}], "/", "2"}], ",", 
            RowBox[{
             SqrtBox["2"], 
             SuperscriptBox[
              RowBox[{"(", 
               RowBox[{
                SuperscriptBox["mD", "2"], 
                FractionBox["\[Sigma]", "\[Alpha]"]}], ")"}], 
              RowBox[{"1", "/", "4"}]], " ", "s"}]}], "]"}], 
          SuperscriptBox["s", "2"], 
          RowBox[{"gImAnInter", "[", "s", "]"}]}], 
         SuperscriptBox[
          RowBox[{"(", 
           RowBox[{
            SuperscriptBox["mD", "2"], 
            FractionBox["\[Sigma]", "\[Alpha]"]}], ")"}], 
          RowBox[{"1", "/", "4"}]]], ",", 
        RowBox[{"{", 
         RowBox[{"s", ",", "r", ",", 
          SuperscriptBox["10", "5"]}], "}"}], ",", 
        RowBox[{"MaxRecursion", "\[Rule]", "20"}], ",", 
        RowBox[{"WorkingPrecision", "\[Rule]", "10"}]}], "]"}], "]"}]}], "-", 
    
    RowBox[{
     RowBox[{"ParabolicCylinderD", "[", 
      RowBox[{
       RowBox[{
        RowBox[{"-", "1"}], "/", "2"}], ",", 
       RowBox[{
        SqrtBox["2"], 
        SuperscriptBox[
         RowBox[{"(", 
          RowBox[{
           SuperscriptBox["mD", "2"], 
           FractionBox["\[Sigma]", "\[Alpha]"]}], ")"}], 
         RowBox[{"1", "/", "4"}]], "r"}]}], "]"}], 
     RowBox[{"Quiet", "[", 
      RowBox[{"NIntegrate", "[", 
       RowBox[{
        FractionBox[
         RowBox[{
          RowBox[{"Re", "[", 
           RowBox[{"ParabolicCylinderD", "[", 
            RowBox[{
             RowBox[{
              RowBox[{"-", "1"}], "/", "2"}], ",", 
             RowBox[{"\[ImaginaryI]", 
              SqrtBox["2"], 
              SuperscriptBox[
               RowBox[{"(", 
                RowBox[{
                 SuperscriptBox["mD", "2"], 
                 FractionBox["\[Sigma]", "\[Alpha]"]}], ")"}], 
               RowBox[{"1", "/", "4"}]], " ", "s"}]}], "]"}], "]"}], 
          SuperscriptBox["s", "2"], 
          RowBox[{"gImAnInter", "[", "s", "]"}]}], 
         SuperscriptBox[
          RowBox[{"(", 
           RowBox[{
            SuperscriptBox["mD", "2"], 
            FractionBox["\[Sigma]", "\[Alpha]"]}], ")"}], 
          RowBox[{"1", "/", "4"}]]], ",", 
        RowBox[{"{", 
         RowBox[{"s", ",", "0", ",", "r"}], "}"}], ",", 
        RowBox[{"MaxRecursion", "\[Rule]", "20"}], ",", 
        RowBox[{"WorkingPrecision", "\[Rule]", "10"}]}], "]"}], "]"}]}]}]}], 
  ";"}]], "Input",
 CellChangeTimes->{{3.741931148301221*^9, 3.7419311593891478`*^9}, {
  3.741934017078937*^9, 3.741934026510144*^9}, {3.741955965860281*^9, 
  3.741956003829041*^9}}],

Cell[CellGroupData[{

Cell["Plots for v=0.5,mD=0.15", "Subsubsection",
 CellChangeTimes->{{3.7416898336127977`*^9, 3.741689842674139*^9}, {
  3.741692950402269*^9, 3.7416929528268023`*^9}, {3.741693483388698*^9, 
  3.741693487916362*^9}}],

Cell[BoxData[
 RowBox[{"(*", 
  RowBox[{"evaluation", " ", "for", " ", "these", " ", "parameters"}], 
  "*)"}]], "Input",
 CellChangeTimes->{{3.741690632271154*^9, 3.741690635511072*^9}, {
  3.741693260770018*^9, 3.741693267034027*^9}, {3.7419314345366507`*^9, 
  3.741931434873499*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"Block", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{"v", "=", 
        RowBox[{"1", "/", "2"}]}], ",", 
       RowBox[{"mD", "=", 
        RowBox[{"15", "/", "100"}]}], ",", 
       RowBox[{"\[Alpha]", "=", 
        RowBox[{"\[Alpha]cont", "[", 
         RowBox[{"[", "1", "]"}], "]"}]}], ",", 
       RowBox[{"T", "=", 
        RowBox[{"155", "/", "1000"}]}]}], "}"}], ",", 
     RowBox[{"gImAnTab", "=", 
      RowBox[{"Join", "[", 
       RowBox[{
        RowBox[{"ParallelTable", "[", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{"r", ",", 
            RowBox[{"gImAn", "[", 
             RowBox[{"r", ",", "mD", ",", "v", ",", "\[Alpha]", ",", "T"}], 
             "]"}]}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{"r", ",", 
            SuperscriptBox["10", 
             RowBox[{"-", "10"}]], ",", 
            SuperscriptBox["10", 
             RowBox[{"-", "5"}]], ",", 
            SuperscriptBox["10", 
             RowBox[{"-", "10"}]]}], "}"}]}], "]"}], ",", 
        RowBox[{"ParallelTable", "[", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{"r", ",", 
            RowBox[{"gImAn", "[", 
             RowBox[{"r", ",", "mD", ",", "v", ",", "\[Alpha]", ",", "T"}], 
             "]"}]}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{"r", ",", 
            RowBox[{"2", " ", 
             SuperscriptBox["10", 
              RowBox[{"-", "5"}]]}], ",", 
            SuperscriptBox["10", 
             RowBox[{"-", "1"}]], ",", 
            SuperscriptBox["10", 
             RowBox[{"-", "5"}]]}], "}"}]}], "]"}], ",", 
        RowBox[{"ParallelTable", "[", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{"r", ",", 
            RowBox[{"gImAn", "[", 
             RowBox[{"r", ",", "mD", ",", "v", ",", "\[Alpha]", ",", "T"}], 
             "]"}]}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{"r", ",", 
            RowBox[{"2", " ", 
             SuperscriptBox["10", 
              RowBox[{"-", "1"}]]}], ",", "100", ",", 
            SuperscriptBox["10", 
             RowBox[{"-", "1"}]]}], "}"}]}], "]"}], ",", 
        RowBox[{"ParallelTable", "[", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{"r", ",", 
            RowBox[{"gImAn", "[", 
             RowBox[{"r", ",", "mD", ",", "v", ",", "\[Alpha]", ",", "T"}], 
             "]"}]}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{"r", ",", "101", ",", 
            SuperscriptBox["10", "3"], ",", "1"}], "}"}]}], "]"}]}], 
       "]"}]}]}], "]"}], "//", "AbsoluteTiming"}], ";"}]], "Input",
 CellChangeTimes->{{3.741690555319076*^9, 3.7416905578373213`*^9}, {
   3.741690593998704*^9, 3.741690643992597*^9}, {3.741691068967709*^9, 
   3.741691091624234*^9}, {3.74169114743605*^9, 3.741691156217499*^9}, {
   3.741691525873349*^9, 3.741691535113821*^9}, {3.741693506463025*^9, 
   3.7416935452323027`*^9}, {3.7416949742539186`*^9, 3.741694975435589*^9}, {
   3.741696686704484*^9, 3.741696692220379*^9}, {3.7419561278389177`*^9, 
   3.741956179248743*^9}, 3.7419562499364777`*^9, 3.7420184415324793`*^9}],

Cell[BoxData[
 RowBox[{
  RowBox[{"gImAnInter", "=", 
   RowBox[{"Interpolation", "[", "gImAnTab", "]"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.742018543854457*^9, 3.742018556269969*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"ListPlot", "[", 
  RowBox[{
   RowBox[{"gImAnTab", "[", 
    RowBox[{"[", 
     RowBox[{"100000", ";;", "110000"}], "]"}], "]"}], ",", 
   RowBox[{"PlotRange", "\[Rule]", "All"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.742025574973833*^9, 3.742025626711783*^9}, {
  3.742025683537311*^9, 3.742025685118891*^9}}],

Cell[BoxData[
 GraphicsBox[{{}, {{}, 
    {RGBColor[0.368417, 0.506779, 0.709798], PointSize[0.002777777777777778], 
     AbsoluteThickness[1.6], PointBox[CompressedData["
1:eJwsXHdcjW0YjtBCKWUnIZJCKql0N5QWWhLRXtp7j1PndDrnfd8zG2ZGsoVE
tkeKzESEZCs7shLhe07f8/3z/e5fdc47nuu+r/u6ru+bEhzvGTZYTk5u1Aw5
Odm/eyJf8o7/fGUdxLnfOKdsM/q//mZtX3K6STB/E1o3acVStdR/1jWRR6bU
hG4kPx8Cwc0V197f3oAM7Se+f2GmDB4uSrs0AjeQ31eFZ+9KpqnKb0B3fl++
v3WVOpTr7Pi+7th68vejoaSm4KZzwnqk2vZv4Y31YyAkk8ozNllPPm88PNjz
cU/i33LkesR8S9+9iXDJa1/a7Zvl5PMnQ9mjjBmxO8qR/SXzfA3lKfD6YaPc
+oxy8n260H2W+7PJsxwFGa+YO2vfVLhS1jmobE45+f5pcGhUZMuekeWItS3x
uY2THvgb3L956lMZuZ4ZMPZ4YoH4ThnaOlwoXfl6JiwcH/X5V10Zub5ZcL7t
3v5bW8rQ2cz99nFcAxi0j+X5nl1Grnc2LBRIM+fElKH2rsvfONONIEOlrL5g
RRm5/jlQbxYy6zqUof59PXeWBs+FM+8XF/XOKiP3Mw8uxR6R/65Vhuhn+QYP
a+bBtIVxj2rly8j9GcPS7cm/p/eUovFjRnJCB82Hk9XdN62flpL7nQ/LnrYO
+XqzFO1buqXjk7sJTDLriDM/V0ru3wTa769sHVpdisw5s0yzt5tCFkhbPStK
yfMwAyHnSssYYSlqOn1SMOyzGTzW7rq3NL+UPJ8FwDsRyulOKEU+PY5dEjAH
l+/X5L8Fl5LnZQ7DOvy/+q4oRZ0z7llPEi2ETc9r1451KiXPzwLexN6oNrQs
RSn+Iev3PrEA737prlKjUvI8LSHGIHOFs24pki/r+TTfyApmmGtoOmmVkudr
BYfUBDkC5VIkvZ7vhHIXwdFdj/y1/pWQ520Nu3dJGp9+LUFTBo/c4XLTGtwp
u9ddb0rI8wew+RNkqP+kBPlObO6PGmkDNnPFelWtJeR92IDKNwfeiqslaPsC
zX1z62wgffa9WZaohLwfW3C/WTvM63gJeu25ZsWPtbZQ265ovPlACXlftmA9
NOXJqMoSNCdu56CzQ+3gV6zSyuMbSsj7s4MF3dl/2aISlMZ/V11QbQfbviQs
zeGWkPdpD9ukfS1bckvQ+ap5q5essIeV6ob6r1JKyPu1B5eE5woeMSVo6IWM
YSP+2EOzfP6cFyEl5H0vBlPeh8RyvxK09BE6eqdqMbhZSQ7HeJWQ978Y5OWi
20JcS1Dpj2EBG9wcQLvU7HmWfQk5Dw6wwXNv2xHLEtQxapmK/zcHWPSy9soQ
kxJyPhwhef3z1tTZJWiqYdmJqVscoc/iiLb89BJyXhzBzXHwwwOTSlC0U0fI
W/slcCyrzDJeq4ScnyVgosgpdlMtQUdDpqodfr8EvJObh9orlpDz5AT32B+H
eQ4qQb/yos6mlDhBTXn0i4xfUnK+nEDhHOdH3Vcpst1UE2lh6Qwpk2/uUfko
JefNGcr0HwemdUkRHzcbuZfOwBsuL/3xVErOnwv4zOs7Qj+UopYWqL9EucBb
qx3mpq1Sch5dYOvyhr1fbkjR2A/cWNrYFbLm3S5quCwl59MVunWrffdckKIA
heZxHu2u8Ew15VDFaSk5r25g/MZl7O5jUrRHV/OyVqEbvOk0MrhwSErOrxtw
BFfy3++Vou5Fa5I69JeC7ULbozN2Ssl5Xgp8+QnBKRVSZLZqp3bl7aUQ/EbZ
+PZ6KTnfy2Dvz7tNi6RSlJfy7lpE5jI4mjPrxilGSs77MtjcxX+3uFiKLonm
pRtOWQ61aTq3nxRIyflfDl1p1XOLc6RoxIGMqV+v4J9/DT+7KF1K8OAOTo+e
6g9OkqJZL59GrDF3hw8xn+bejZESfLhDwquNdG2EFDUnyFsD4w4Ny3593xYs
JXhxB/00Q6ONa6Uo6a/eaN1n7rD13qJvW32lBD8eYMZRU67xkiJNxuXdEBMP
WKjsNf/WMinBkwfsVY8y7XOWolPj4i68LvaApg+B940cpARfHqB+5+HzeBsp
WrtHUn7tkQec7PyrfdZSSvDmCckvk1drLJCiQabHY6rneIJDilNQqrGU4M8T
NHTeD3phKEVVFx/Yidme0N46cfgqfSnBoydIvr1yb58mRU7u/WOT73tCSG9R
ZZiOlODTC5ZlJN39NUGKPjye/GmFgRfsvWJ3ZuMYKcGrF4R+2j/bTkOKxNGy
O/aCYM3Ef19HSgl+vcDVN1TlsLIUze8L3zyh1Qt6/nrpJw+TEjx7gbuywnyb
wVJ0n0sl/tXzhjptE3mtvxKCb284fyEz9VufBGWPPrTkeZY3jH3hE/7ou4Tg
3RtWnJ5ae61HgiZX3p7U2OwNI94oW1z8KCH49wa5+4Pb699K0MU537/u1l0B
/RFNSVc7JaQfrICM+62vHjyXoPBzY6/x01bA36drRn1+LCH9YQXUaLq2j2yX
IGVXq+0x11aAT4aprmmbhPSLFRC3cM2N4DsSdOhBQNpybR+QP7bz7PpmCekf
PjCiVHS/9ZoEeYSz3YyTfMDawHrwmCYJ6Sc+4NgTohvUIEGyq9O87AM1hku0
jyIJ6S8+ILh6pkPprARtLLj2s3fcStBeMtkh8qSE9JuVMOWJN9w8JkGLVLub
22NXwuvT9bXmNRLSf1bCP39nen+1BD3bMmrXufqV8HGKy2Hd/RLSj1bCnpaN
Sjt2S9DA7Wr6gjSqkDN9p4T0J1+48+u88pFtEjTzpK8He50v1DMZxTZbJKRf
+UKyhX1X2wYJuuGQMyP8nC8s856gkVwmIf3LFyq3B/8aLZWg+NZtf5xGrYK1
Rx/zzgolpJ+tgm8rag6soyVII6ih1SBsFWzWCHSfyJOQ/rYK/l1qCr3LkaAT
3V37Rp5aBfWLJ9+XFEhIv1sFHVO+lXnnSZBfjjKrZ/hqWJU5UzwxW0L632rg
3/l87G26BP1TMvK5G7ga5qjf+XomRUL64Wr4mLPNqiRRgirXe8w+cWw1BF3N
yI+Pk5D+uBrW2F456B4tQY7TUwdvUvSDfT02x80iJaRf+kHb6w7+lDAJend0
w4OcNX6QkfNowqhgCemffnDsMFozNECChDZnDwUc8YOPxcus//pJSD/1g89c
wdHfvhI0r/kpx27IGqidXn/gzwoJ6a9rYPWa6IlDvCTonp+833TfNTDD1KV3
pLuE9Ns10LPOZ472UgnKfKs3T/HgGjivcvHEPBcJ6b9rwNikl+28RIImpbso
vP+3BtIvlBeHLZaQfrwW3DXT64psJejCkLjHN73Wwq/3lUP2W0tIf14Lh2f4
ht+xlKBQqaT2yJ614Fs7rOWvuYT067WwPGK52RwzCVLUOc4v+b0W2n4MFobM
l5D+7Q/DOnVubJ4rQQerZQDxB/mCts77hhLSz/1B721uyxgDCVpu2W+6aqc/
9I+uKPCbKSH93R8aOl91V06XoK9XJg+36vWHFYvmjuzWlZB+HwAzJ7DvWelI
0Hof+xfargGwHClZiiZJSP8PAMvWMaad4yXI8lX4yUHbAmDUhhmnrcdKyDwI
gNTxDy9s1pSgJ4mU8NWXACiK7oF+dQmZD4Hw98kqo0A1Car/54MhEwiLlk1m
N42QkHkRCGMDE02NVSSo5HIk/sZA8Li3w2q7ooTMj0AQPpwqHjVMgsIEWTzH
9EDY70vP4MpLyDwJBBdf5tcfOQla4M18XbAjEIpW/JLL/Csm8yUQ6N1Nxr2/
xUhpwlZ//euBYPpsCC+jT0zmTSAsgWc/+3+IUfvzw1fHfw+EUM1duZxvYjJ/
goBZeGak6hcxOri33mT45CAYmrO7assnMZlHQbB10jBzw49ilDcA0CCwdCmt
v/BOTOZTEGSUT7dY+UaM3M06lT8lBUE0a++mz51iMq+CYNXXaR3MSzHS/fMj
9dkWXDef6TV4LibzKwhOxe7uuvlEjL41KD6/fTkITBaYVSZ1iMk8C4ILM+9O
Hd8uRpep8W4Nn4Pgzzq5sMb7YjLfgmH6M4+AxHtitEEGz/HBkNSYOnxKq5jM
u2B4aTUnvLVFjKLGWuvuXhwM3r0+4bxmMZl/wfDocvswmxtiZPl0uWB9XDB4
2J+z/XVVTOZhMAyN1hx1okmMRuwO+snbEAwFjiPj0y6JyXzEnyfsWmHeIEZP
Y5JDsi4GQ7vnZ9R/QUzmZTB83CXe03BejGrmFzVHfwiGVEdQEJwVk/kZAteX
ch/6nhYj9q/yhWu1QqDzyaBxM06KyTwNAav7ARd6j4vRivq9VctsQiCwIODa
tVoxma8hYOx8e972GjGawTutahMVAqcSy3vSD4vJvA2Bohvbh3hWi1HfshtZ
80pDoCLpS5jRATGZvyHwOK9CbcQ+Mbqm+aRT93wI3L3a8O/jbjGZxyEwZE+5
0e0qMZJN29FvQoC902dDXaWYzOcQ+ObgZb51uxgNvA71UGi59U6Jt1VM5nUo
/PjHV0zZIkY2URozei1DIa3twJzgTWIyv0Nh66qHWZ4bxEh93nTpm7BQmLlm
X+ficjGZ56GwZfGF6IWlYvSq1+zPQ1EoNN+7pThXKibzPRQyf5afnCkWo7rz
TpHXT4VCd9HztKlCMZn3oXBNgwc6jBjxila3nn0ZivlC/MjJlJjM/1BwHUw9
ncwTo1VuMdaHRoRBcfLdQ7pcMeEDYXC5yjdjBkeMDDTy9m1bEAYOHwzMjQrF
hB+EQfWC+HdmLDHCFzdaEhQG3CfLaNs8MeELYVCUOnjMshwxurV9R34hHQbH
Km/w12SJCX8Ig7gvv57GZIjRjojad8nHw2BOdadmfpqY8IkwmHXo04ySFDFK
Nrq0IuxpGOy34KrvSxITfhEGJu06dy4kiJHD97YLPkrhEDbHNqQ9Tkz4RjhI
bydd/B4jRmPOvjFwmh8OqjNcP6hHiwn/CAdzm3WP560TozeFsgMYDhNrU6We
EWLCR8LhXrquYmqYGJ12Hj7YoDgc6EuzLDeGiAk/CYfRnz1noiAxYtS0YyfW
hIOpY+SNrgAx4SvhkPfZZpqavxj535/zYMSjcLjYcma25Rox4S/4+4IvvIhY
LUZzt9ra/xsSAaKN1vblvmLCZyJgTpOR62UfMRoc5nXos1EEPEyX9PZ6iwm/
iYD4lfEOBl5idNcgbNwL3wjYpvFwXqCHmPCdCJgFr0+VLxej3V/SOK2FEXDY
9HR781Ix4T8R8OFfpkTRTYwyTvE+NR6MAI65zyN7FzHhQxFg0lN0nOUkRs6s
Tavr2iKgeMOSSchRTPhRBHx7+kz132IxmrDk4KU9cpGQVrmVsrEXE74UCcLr
dym2rRh9HHF+7sZZkXDE+smIKyAm/CkSdNHEUSOtxQjdvbWZ8o6EhQ9+SlZY
iQmfioRhl58LtlqIkWTz82E5eZGw1n/p4LfmYsKvIsH114kPJgvEKCT4a2Ls
3kh4HFDlUmgqJnwrErwObh53e74YmeoPfex/JxJ2WRuunGIsJvwrEqIqu+WS
54qRwmct3LIiQT07e/RlIzHhY+sgJz5VNN5QjB7Uzay11VsHjzQ58QkGYsLP
1kHfU++jTfpitD/XQnu++zo4q7B5hc5MMeFr60AtR3Vllp4Y5Sx240/LWgcq
zQnH7k0TE/62DuK02dHGU8VIdpo1q9bBOhW1LPEUMeFz66B6a9fjT5PFSOdO
PKZE6+Cq5aNSd20x4Xfr4IqwacvRiWL0ZYPswKyDcdnUV80JYsL3oqBeWXF9
1jgxagwoMX03JQqa1uoXPRsjJvwvCt5u7DizREuMyvV2bX/kGgXC9tELj4wW
Ez4YBX90rv0apyFGER/rVG6mRsGtxX1/OaPEhB9GwZZXO+17VMVo4bEraee3
RUG3T8tl/5FiwhejIHgzn3tzuBipZMsmcBSMcHvKWqQiJvwxCiaIOmsPKYnR
Y9sPbju+4s9TPD5piqKY8MloEN+IOls6TIwOK/49IZ0UDbM9ZgqVhooJv4wG
lyANSb68GBXcUp3KWRINWqo+DT8GiQnfjIa3u7WnxsuJkVf5FGFqYjTULoa1
t/+ICP+Mhq9mk69c/iVC09fKOn40bGB5ss/3iggfjYYGxoc++U2Efkx1CPW9
FA2e5450HOsREX4aDY88u5Nru0XoyjufW86fomHQiqqlx96LCF+NgcnZ8eEn
3ojQwHEZFwOemt9On+0UEf4aAy3fHy9pfCFCMRlZu2bbx0D56mdKzU9FhM/G
QOz9438edogQJkO4w8TgfqWj8+ahiPDbGNhc8ib2Z5sIqQ3bmq26PgbedD55
qXxXRPhuDAS5tedNvi1CL24c7pKrj4FzV05amjWLCP+NgcGmAWOWXxehYyX1
Hl/exUDFnFMjo66ICB+OgZsKp7SLL4kQVzY+RseCy/6Vi3dfFBF+HAtWwtKc
JiRCK6fITnQsxFemNr47KyJ8ORauWSiMUzstQvpvfkgvR8aC+l+/9AUnRIQ/
x8LTVqYj8JgI/T4ke8Gx8OTOSQemRkT4NP6+OUOPnDokQjdTx6/bdzYW9upX
jH17QET4dSyc/lOTM36fCG2zmn13U1csHLud9XDpbhHh27Gwf5fJbPZOEUqU
0Um1ODC21006vV1E+HccOBsye79WiJD9teUYwnEQKb5ww2iziPDxOGgz1uiI
3iBCmpIgzfjQOJgR9rh1f5mI8PM4kPuaW/NeKkJdK5NZgcI46NdYlWQkFhG+
Hgf31zzQSBaI0EntovceJ+Pg3JGoklOUiPB3/HNjTvcgnghRneWYocfB3wVb
dd2KRITPx8E+8wWGGwpFaM0AQY2HIQ13VLryRYTfx8OC2L4zprkiZJR8erae
WTw8ajK3LM4SEb4fD9vdpxa3p4uQnMWN9WMC42FcmHvFnFQR4f/xcM50TTY3
SYTuyD0ZrETFg/Kp19pP40VkH4iHB1s3FC2MFaGqpk+xv2rjoc1+XHVZlIjs
B/FgtGtsydcIEUoVDnr4/nE8eHm7mHqFici+EA+/osIlx4Lx3+9XquyWTwDj
fP1dYwJFZH9IgOr13nE5a/Hnydrx2ASYqVP97sVqEdknEuDv4/4xrr4ilJY4
YcQzwwR4+GrUt2MrRGS/SAAJfT5Hxwt/n7eMsSbAjKCHhwXuIrJvJEDXlEV0
/1IRWmJumHF7ZQLsP3hleKyriOwfCWD/09/4qZMIHZlQZ3gtJgHklF73eTqK
yD6SAKu7XIOu2IvQuH/WLy8WJMAZcU442IrIfpIAcb3RCietRajwRdOGM+UJ
UNWtZmdsJSL7SgLsmh4++tBCEXp/yX3ZsQMJoDUpKsdggYjsLwkQOGlyxn4T
EfLe91C++kICLDSkhxoYi8g+kwCOiid1q+eI0Dkm+NSuewnQoVl7c66hiOw3
uA4QDKmbJUJ6Ce/jtr5LgKN8v0tWM0Vk30mAsCbTkZemi5DIK2Xa+n8JcP3u
gsfLporI/pMI9z+w5rbriNBPGb0cnQh/L8wfFqEtIvtQIpxOSFvzfYIIBY3n
inj6iTCtIGle0TgR2Y8S4cBdb7bWGBG69mekQ4F1IryoXOq+b7SI7EuJEJEg
Ll+kLkLzn6//lemVCC+HeXu3qorI/oQ/L/ZOcdQIEdrSqHMkKTIRljx1miOv
IiL7VCIoNPU6VSiK0NC9+8KicxNh7DHdVvNhIrJfJcJGb7Ub9+RFKI42nhAq
TYS9scrGKYNEZN9KhD+ta+VH/xOitrgzLWv2JMKu0NXWx/uFZP9KhJY/ns9X
/hIi8FzMXXE2EY6mV7z73Ssk+1gi5FVIfXd8F6K9pjctl91OhAQ9ob7TVyHZ
zxLh06Fuv8+fhWjUOBmjSYTGGs3ujd1Csq8l4n0l4sniD0KU1f9kN/xOhIW2
rgY9b4Vkf0sCeDqrdetrIRo4zmpJ4Dsi+e7STiHZ55Lgt0WJ4d8XQoQ/bNS8
6UlwX/in4/AzIdnvkkDwTO958BMhOr47s0nfIglyj3LNx3QIyb6XBHsN1j+/
8VCItKnBubrLk2DTqHvt7PtCsv8lQdJFpGt1T4iKY2UPMAk+Gz088f2OkOyD
+Pfv7tpwpEWIPuPtRyMzCb6cONgQ0ywk+2ESnPJPXzDrhhCtMqmoGC5MArtr
ki9vrgrJvpgEHYnU171NQnRxjJ7X0J1JYLvoi3nUJSHZH5Ngcv6a+tkNQmQw
MACSYM8nf/rzBSHZJ5PAZI+k7Ph5ISp9suD8jxv4eYwVPck+KyT7ZRJcG/Et
1P60EP2pv5D86XkSPNoaMGP4SSHZN5Pg4NzkaW3HhShslzMeQfj+Yu+s3lEr
JPtnMvDspl6NrRGiZt6dJ89UkqGobUSc5WEh2UeTwZFv5aRcLUQLYvxKH+ok
Q8kHP5/2/UKynybDHTR+/YG9QrR9+SvnO6bJYPdeXylvt5Dsq8mwJNvqgEeV
ECnNj/13zSUZzm9WyNGrFJL9NRlCSuyy+rcJUZLWj2MNAclgi3ZXtVYIyT6b
DHOEn/oObBaiR30ywpsMPjntGUUbhWS/TYarI2foBK4XosWPFfDES4apt8q7
LcuEZN9NBrMlH1+MLRGi6gvie9Vb8ff3f/r9Qywk+28yzI4NN28TCpFW1Th6
d20yxCiNX1/HCMk+nAyX5rVpbaCEKL+40mbblWQ4My+yLosnJPtxMshZbUvx
5wrRmyiDH+sfJ0N0uJu7PUdI9uVkkN9t56RfKEQeuPuJvySD4nUfPzWWkOzP
yTAqN4D3M1eITs9bFMRXSAGjBabNz7OFZJ9OgTGLjxrcyBSiqTK6MzEFQk4f
3XYiXUj26xS4mTFavypViJifshtOgSzdE5clyUKyb6eA14ScdFaiEH1/dL8g
2RH/PcfRIiFeSPbvFLAy/z0iKBbjGQXiV5wCsU2sHs9oIdnHU6AvBb10WIfx
XPn2Q2hCCnQY73i5MEJI9vMUKN866rNRGMYzN6lybVEKNP75ozA9REj29RQ4
abFi1sQgjOd1v1f6bEoBvecKPqMDhGR/T4GW8YrUiLUYz0s5I5YfToFFB50v
KfgJyT6P76enfpj8KoznuSMaljSmwPP2iKX/fIRkv0+Bj2/nb+j3FqJWjfIM
m4cpMNxIp+uXp5Ds+ynAsZ1p9stdiKx6tY0WdqeAn6Nz8a9lQrL/p4Ddy4IH
v92EaFf7npfz5FOhxObOzL8uQqIHpILzUKv0Qc5CNFK2vo1NhZHeFy8OXSIk
+kAq2F9Zp6ziIETpO04tm2qYCprJ5ktH2QuJXpAK2x+YUmNthegZZsMT7VJB
6WPUBR0QEv0gFY6MetGtv0iInPHdjl6ZCgHqe0abWAqJnpAKLN2mubBQiI66
esePiEmFwHZ3O9cFQqIvpEKKibeTr6kQTZjzeNqwglSool7Yhs8XEr0hFSpK
RhqlzhMijnp4+9+yVJgb+EGlaI6Q6A+pUO0raS8zFKKP37tFvftTwc1i9MY9
BkKiR6TC+tECx9P6GM8P0x0+o1R47qj54uYMIdEnUuFcblPUi+kYz2flfr+5
mwpZR9DT3qlColfg+9OeYDNSF+N5O//I87epcHHpT2q6jpDoF6mQPiwdLdLG
eGbLLjAV+J4nO3wmComekQYuWU+eJ4zHeJbBTSMNrAePaKbHCom+kQbX90Zu
36MlRMEu025fn5kGj0PG+DaOFhK9Iw12+Nt8e64uRNcNq7mNi9LAolclRW6U
kOgfaZB3dmfbZFUhMhllZnXOMw3ORBtPsBkhJHpIGmR3v7QJUhGiim/ne45H
pMEq305HtpKQ6CNpcONV6OzdCkI07MGSPYdy0mDQd8nnq0OFRC9Jg9MjKqTd
8kIULxu/kjQwundi1OjBQqKfpMEnNc1YCzkherB1lfr23Wlwd+ebnUF/BURP
wT+nI47z+wXIdoBgpUHWs6btR38JiL6SBg9u2YR1/BSg/ZgdSFrSQFihPFih
V0D0ljRw3u6fZvxdgDScvxlTnWnQCen1/l8FRH9Jg/Svohd0jwDlzM7Ft5wG
QdD54NQnAdFj0iGk9tjONx8F6JWqbMFKh1NvrOzGfhAQfSYd5rPO1Tq9E6Cl
X4WYYaWDn056b+YbAdFr0mFT8oHhB7sEqK5tjFLswnQI0qv48uSVgOg36bC6
U7RX/aUATT69/XzYsnQo97tiuOS5gOg56XBtLlOQ81SAeBX6eGVOB7aC7s6j
jwVE30mHqOzbkrePBKiHdVR/ZUY6FE5+6TalXUD0nnRIzNneuuqBAK0OlU30
dLg+0nt6SZuA6D/4eh2cbW/eFSDcXEqdKtMhJ/+GnmKrgOhB6RCpYnDP/rYA
zTZY6mJ7Ih1Kp9W6sm4JiD6UDqpfavnnbgpQ2UjZB6bDE06u8Pd1AdGL8P22
Ba6yuCZAf3v8jxs/Twd0+fDbzCsCoh+lg+uEc9anLwtQxL3XeIKkw/ecjpW/
GwVET8qAc2nBJosaBKjlZILONJUMmJFS1ZpfLyD6UgYcRz9NGpAALZSlg3Qy
IKCgbqXCeQHRmzJg3DlTS7ezAlSJu4GmaQYs97j1RHJaQPSnDEj43mH74KQA
qYSo2I50yYBE81Mhk08IiB6VAUH5yD7iuAClOMo6VgZ8lnd7frhWQPSpDFBs
PWPZVyNAHfqTDv5LzgD/6zGe9kcERK/KgJFbzk0THhIghwFClAHGDSOOPjwo
IPpVBnCYc33TDwgQPixjeioyQE7N6HfSPgHRszKgaG798Qt7BGjM3RM33h7N
gLxND2eq7hYQfSsD6IvtXv5VAsQ6YYMRkgFzX800O1QpIHpXBrDl9G/93S5A
bzddXfCoIwOedNhou28TEP0rA8oH3detrBAgzzzPj609GXD0pGfHt80Coodl
wM7hE12cNgnQmaBHlTeGZcKwps3RWzYIiD6WCUHxljY95QI0TSaPTMiELuew
JscyAdHLMmGBD0euokSABDNlbyQT5i0b8v6rRED0s0yoqfLguooF6IdKWkOd
QyaEcR7e3ikUED0tEzY3K93sZwQo4NPfjMOrM2HUeI90H1pA9LVMaKrRbjnC
F6Ard4qN9sZnwqOSF20qPAHR2zLBP2EEHcEVoHl1aq+2czJh7l61Dw0cAdHf
MuGpq3+fDluANm2U/ZMJ7PHrjuYVCIgelwm7WVVaj/MFSB6zZ+mhTJi2njPd
Kk9A9LlM0NDNe7I5B+M58MAQuiETDouG2fZnCYhelwnQW+K2NhPj2d7kNPtB
JiiOrZBD6QKi32WCpe/GNVPSMJ5nnIvP+ZgJnQ1ygZwUAdHz8PNUcVN+k4Tx
rCxTxLLgFefbardEAdH3smCxXopHTTzGs6wdjMmC6XyHj1pxAqL3ZYH/65eG
uTEYz7dXisNnZ0H6+Ovqr6IERP/LgkOb0je7rhOg58eeOQTYZsGP3PCm2ggB
0QOz4F+aZvnEcAFyGSAwWbDw7mAFbqiA6INZ0JFXPe5zsADVZn854h6N/76v
9ObqIAHRC7MgKWih7uUAAZoYkB3uzMoC/XUTxhj7C4h+mAU9fmcPbF0jQEUy
elCWBdXjtz5V8RMQPTELwibYH81cJUDd0wW3LfZngXek0dQ3KwVEX8yCYdte
zlvpI0ArlbSK56MsiPvU9fiyt4Dojfj6x5/TW+AlQBc+bLWafTcLriW/V9nr
ISD6YxZsfdTLjHMXIP2WGV+mvc2CaQ2R++hlAqJHZoG8/qXAv24CJK09smfS
3ywYtLH0aKKrgOiT2TDbIGBrp7MA/ZatCxrZ0F9YPXW1k4DoldmQ16xod8sR
4znrorrqzGzIufTr52IHAdEvs2H/3hFOZ+wxnte6XlFYlA13bG4YGdsJiJ6Z
DUOe1B/cZ4PxbHs3V84zGxp8suqngIDom9lgqVAYs2kRxvM0mYCZDYktYdUa
VgKid2ZD5phatsAC41mx601PdjYcaOztVlgoIPpnNjyzu9hduECABuQDcTZU
5u0o/GsqIHoo/rzOafuzTAToYXOv18td2fAjtCO011hA9NFscInyPZoyT4Ds
jrKUOk5ng8FzfemXOQKil2aD4/wX8olGAnSgTAm31GxIXqKh8Hm2gOin2dDH
Wr453kCARmdKU26+yoZ75/UvfNIXED01G+T8TFMTZgpQ7poJsy73ZcMx/WGn
e/QERF/NgbqMucLk6QLUBVVPz4/MgcqRzj3fpwqI3poD82d1vsjQFaDlA4Qj
B0oLNgX36wiI/poD+23/xbMmC9DJYXUuR8xzIHzEfuWh2gKix+aA5p95xtRE
AZryzlpu39IcOFph1KU6QUD02RxY+HmBXvk4AaJuNh3fEZwD/ZFdPRPHCohe
mwM/u+84VWlhPGN0bErPAYNH5bNmawqIfpsDPb3Xy49pYDzj7bKEyYEVrOGC
ReoCoufmQPLkr8Ob1DCe04Pb6B05cOfTeC0PVQHRd3PgXNbkvY9GYDz7vac5
dTmw58SWi+HDBUTvzQGOypywL8oYz9YptrnXc2COU7IoT0lA9N8cuHpgmK2K
IsbzFJlgkgPjn3EzNwwTED0YX3+fxFxvqABFDuUejPueA/syLucekxcQfTgH
XB0anOwHC9DtNyODI5RzweLojI135AREL86FjKySuOB/DBqQHyfnwtj63Ve+
/GGIfpwLVWqD97D7GbTzsM5NX5NcEK52VNL8zRA9ORfW/xj9aXcfg4aX7Cv0
cM4Fm0pV34U/GaIv54IZ64H9jR8MSk0zNnfxz4VLY9SPBnxniN6cC3beAZVf
vzLoyaozH+2Sc4HDCRnN+8IQ/TkXPFZfVJjUw6AlixbvtOTlQuvbyTlHPzFE
j86F4ft0Ep26GXREdnkVubAsfl3Xkw8M0adz4WDKtkep7xk0bojPSMOjuZDu
Eek+4h1D9OpcOPpn3eJdbxhU+PpJw/SmXGBaXE4ses0Q/ToXHufX7G3rZJBM
TdbuyIWKyQ5jE14xRM/OhcAp1UOVXzLIa4Ag5MJ9L0lC1XOG6Nu54Pxioy88
Y9BZSSamqHkw2jv+XPsThujdeTCbOb017TGDBtrVhDzYcmVav3oHQ/TvPBhS
ufLe4XYGCX3p5YPm5oGOyh/9pQ8ZoofnwRJ31PfuPoN6LUcP/bU4D3q0nBfz
2xiij+eB+VoHpZn3GBQ4ueL0l1V5EJIZ4NTUyhC9PA/WjbMfFHGHQVcHyxTK
PMiw2zJf4TZD9PM8yHYf83TPLQYZdx2a/oqdB/u+B8o7NzNET88DRQu97e9u
MGizjL5syIO+rNHHmesM0dfzoCnqoe2cawwaMiBw5IGB2lTHO1cYorfnwYtL
2+pTmxgUK3Z2bL6YB8YWf2vHXWaI/p4HeXEfJ55vZFBbskwRy4M7dRP7gxsY
osfnQfIpSw/FiwyClX416EMeJMT9mnDoAkP0+Twwmay0xhsxaK+FTDDPB63w
saN+n2OIXp8P7w0fWlSeZdAo2TqjlQ9bavofOJ9hiH6fD2eyTd73nGJQ5qAf
t/cZ5MOocOPETScZoufng9XGvVH2Jxj04lVecaVNPgDjfP/DcYbo+/kwfsiV
uvJjDJJNj80r8iFc476ibS1D9P58eDNu1s33NQySqS8lUfmg35giv/4IQ/R/
fL0q0QfsDjNokmjcXiY/H8rn1zd2VzPED8gH3WaD5ZsPMmhA3ijNh8i6ABen
AwzxB/Lhmbp63fd9DPq0Qrbx50Oc90/Jzr0M8Qvyod/0ymOPPQzyHRjo+TDh
7IKNcrsZ4h/kwzaTPw2HqxhUP3FRXnwrvj+zW2sDdjLET8iHBdtDw1UrGTRL
7vL8yDf4fjamPEbbGeIv5EO6tO5iwjYGlbxc9jbwTz4k2rzQ1N3KEL+BBTE7
Dre1bsHn7WX0rdlKLDjQ1zaEu5kh/gMLGlrVtptvwudPJodpsMBKTmvv+w0M
8SNYsLBs28Rt6xn0WgYXbRaM6w7/41nOEH+CBdMOTHdRKMPn0/zU0x0zWaBf
Uzb4bAlD/AoWzNZP1EuUMsh9gNCyYDgr6biehCH+BQtmhnsf7hDh84vZz6ZF
LFC+dVujRMgQP4MFGj27XjgLGHQKb6taTizQcWAmDGIY4m+wYAHX5vxJCp/v
f9dcSjxZYFKTdy2BzxC/gwVxQ+Rt9HkM0k0U7VJdy4J1//jaL7gM8T9YwA5u
CdtchM//Cy85JoIFm41KNFdwGOKHsOBSlchQlc0g2nusn2ISC746sKuvFjDE
H2HB3jsGZRwWxsfljuOcHBZUuSx5BfkM8UtYUPahZNPvXAZ9W7BDbVAxC5pM
W06cyGGIf8KC1uenLVOyMX5k8r6EBV7v1PXmZTHET2GBhLs+rTsD40k2/jez
wNJA0fBgOkP8FRZoUtOco9IwvgTdOmm78fVIDl6bmcoQv4UF/2ICa14nY7z9
PYoZKgvc2XJ/dicxxH9hwYn0pdXhiQzKSkhvizvDgg8zFS/qJTDEj2FBz5Ee
i9dxGI8vLOe9v8SC26HXx+yNZYg/w4Jld31818Uw6KXs8bWwYOvVFf2zohni
1+D35UzJf1yH8XqpsetlOwtGSepiD0cyxL9hwZJxFRZJEQxyW8C3DexkwXup
XJRpOEP8HBYYvNn5+2coxvOAYMmCP5Yun86GMMTfwdfztm5xQTCDjo9X7/X9
ha+nqPq3QxBD/B4WjGjv0VAJxHhn2jzuDSkAr/dLBC3+DPF/CqD5a3JE+VoG
af/ddNBDtQCWhVlUrlnDED+oALhvAhZN9cP9QLbOjCuAxjX7zN+tYog/VACH
7j8qqfFlUPHzqcEu0wpg6K6zyzJXMsQvKgA/x1HrbH1wv/B6c/ayUQE8Str2
QmkFQ/yjAvitZXjmjheDPjceHGO/sACcvVlfNnsyxE8qAO2CAF6YB8azWWIS
si+A8JmSnDnuDPGXCsBfqaO5bxnG84BBg+9vjEJ+41KG+E0FeB49ZERuGM/j
f8046VsAdtT4n6tdGeI/FUDvfckFPReMZ/p8oUlIAWyfqtD1xYkhflQBmAXZ
RaIlGM9/Ch8fiS2ApSdUljCODPGnCuBBnkHhKgeM53gZ4gqg2y5q3IzFDPGr
CoC5IB7+3Y5BT5+pYAaDn0dXhF+DLUP8qwJIvntyqNQG49mz5eN0Ab7fDjeV
IGCIn1UAVfkfo+daM8hJJs+sLwClpNAZcosY4m8VwP3y7EUtlhjPpjJCUQCv
Bv2p3m7BEL+rALR6j2YkLmRQDd5eNh0sgDnvIirszBnifxWAMK9rwugFGM/j
XviOOVEA/dy+r52mDPHDCiBpaMz0kyYMGk/vri2pL4DHs5SOUPMZ4o8VwGef
LSVrjTGecTdVu1EAL8f03Jo7jyF+WQEsntUaOmQug9hxc/ARLIBTGSM9Hxgx
xD8rgNsT4tcfNMR4fvYVf2IBXFtVb1IwmyF+WgGs3X1b38eAQR88ZBO9AHiV
MWkGsxjirxXAyokB4wfpYzw35OARWgB1I9M0789giN9WAKY78iKq9TCeBxao
Qrg/w1GNM50h/lshPNPdpOo3DeN5z9A5v5QLYbu1U5jxVIb4cYUAXtqjlHUx
nmVys2YhUKHv1F/oMMSfK4RLO7KiTk/GeJaNo8mFkBBWMaZEmyF+XSFom04Z
HzMJ47nfE+JnFYJ1/d1Eh4kM8e8K4f0rrvbkCQx6FDtm03uTQji1a5hO3ziG
+HmFwJs/Na11LMbz00ffIqAQ3N8c0Dk0hiH+XiF8WZIwma/FoMUeMgeqEJTk
bJJCNRni9xVC3et3Y21GYzxfDN0f6F0Iqf9sNCZqMMT/K4SPCepBP0cxqNpE
JhgVAhLOGXxPjSF+YCGsvBv5o0YV43n3x4BV6wqhvlO4SDSSIf5gIaSLku7H
jGCQ1tijp+8lF4Lp5VcNLsMZ4hcWwo3ddYP1VTCe8dPzzCuEntRTJQrKDPEP
C2H09vNpXYoMyv9tkdDMK4R5p9YfuKTAED+xECpztIx3DcN4HhhwhfDjxnDl
oqEM8RcL4UKt2/ywIQx6I6PXFYWQFLS32kGeIX5jIcw0/JKhNxjj2Z3Hst9b
CEWl/aUKgxjiPxYC23LToLf/aOR+0e0ROloIzh8qzl/7SxM/shAGr2+/fvAP
jYYOCOSFUO0xVV/UTxN/shD6V7q2Jf6mEW724pNNhTBZRa/V+xdN/MpCqOrh
Tjbvo1Gc7PXeKQTHE7ZnJvykiX9ZCJdnz9r97weNdPn+jjUduF4y+tnL7zTx
Mwtho+7dyCvfaHT/l+4Ow9f48/sX2VR/pYm/WQibFuiFS7/QiI55/XtfDz4v
a4La03to4ncWQqZW45a1n2lk8+SAj15/IbwxmVpt/4km/icbNA54qczqptG3
5Qk1lcPYcFc064TaR5r4oWzInJR7pPc9jfbJ2v0oNmyt0el98o4m/igbht18
R11+S6MBuWACG5I0aqIPvaGJX8oGlqvzxvLXNFLfda5+jB4b8v35GvldNPFP
2eDmu6Q9opNGMnevdC4bZkes+uj+iiZ+Kht2PSpzs3hJo2zMNtQs2bB2Zmvv
1Bc08VfZ8PH56+4Rz2mEwXuHcWDDpfP75/18ShO/lQ3/yr+gF09oNED/3Nlg
F1q+8eZjmvivbCizjT1/soNGGx6XFBetZoND9DKjqkc08WPZcNJ61FtRO43c
lvu+GBTGhmUWgu7shzTxZ9lg9WejdeQDGg0aILBsiFyi+tD7Pk38WjYs6Ws8
Z9tGo+PGsoHEhtMaJR+M7tHEv2XD+xMeYRPv0iiqateXNA4bZsx4OEO5lSZ+
LhsuXBxk8vM2jbS1opZ+FbLhnUoVv6uFJv4uvv6dG2beu0WjVpn8uZENHi4n
1RqbaeL3skHv2SPb2ps0Ku77MvjDTjZkhHacqbxBE/+XDU+/S/Ok12lkFX1i
beQhNqjeecAvvEYTP5gNB1cUP066SqPPHdknX51kw/z+9MyQKzTxh9lwO4Cz
1ruJRruW2WgENbDBeSGX73CZJn4xG24FrPxjdolGqwYWdny/V26fnNlIE/+Y
DT68W2fGN9BopPHVK6sesKHj1qxhIy7SxE/Gz/fTufX/LtDo4k7B1LYXbFD0
Dkn4gmjiL7OBw/8u6jxPo3RNmYLNBtp8+Y8H52jiN7MhdobrzhtnMZ6LtR42
97Lh5sLG8gtnaOI/499PKGs5dhrj+Wf7fNfBHNj0dqP7vlM08aM58P7pQa2t
JzGeo7YJm4ZzwO3APt2SEzTxpzngcCE6hVeH8Syzc8ZwYPCRZpW84zTxqzlg
OPPQm+RjGM9LZy6+MIUDD790KkfV0sS/5oDfD4+kwKMYz0gmUHLAxLRZe2UN
TfxsDvTcNFNbdoRG4fNq+k6acUD1d4Sjw2Ga+Nv489St660OYTzvTMUjjgNe
xWUsk2qa+N0cGNvlwpl9kEa3RlscrnHlgM0DixvTDtDE/+aAra6d76T9GM/c
v0pGPhy4t3PRTK19NPHDOfBkpbKV6l4amQ8MEA7mZ0Ulinto4o9z4MtV2mjw
bozndcVIL5oD/CG/h/dX0cQv50Ba1BGjHztptOORK75EDpzP4Zd8rqSJf86B
120hlu93YDzL/mtuFgeeGU3S69pOEz+dA8+9S7yeb6OR8oAhwwHP+VUNHVtp
4q9z4FizYdqDCoxnmT1dxoF8h5HRd7fQxG/nwKiWqZUtm2mULFtft+Hru+A2
4eYmmvjvHDhRGNF2dSPGM2bjavs58HuzZ+vlDTTx4/H7O/BhVON6jOeiLgvB
MQ5wIkdL68tp4s9zIGfXXi9UhvHcu79MCXHgrBvP51wpTfx6DvwJkm46U4Lx
vC7+c9FV/D4H7Z58WkoT/54DM4MrO09KMJ5lx+8uB361hH84IaaJn8+BqON3
5p8QYTy7/dyV94QD6qJLZ+qENPH3OTDshzanTkCj4AEDmgNo03mmjqGJ388B
OUfOvToa43lugV/6Vw6ce7Dc/wRFE/+fAwpug2ac5NPo+g6Huq9/OPDpSMac
Uzya5AGKIGluefrpYoxnDeVRCYpF4K9i8e8Mlyb5gCKw2rT48rkiGpnIxpF6
EZgvLb+BODTJCxSBykFV9YtsjGeZHDepCJ6ukJQ3FtIkP1AEiwb1r2oqoFFF
pEzxK4Jv2XPXXGPRJE9QBHIHVCtu5mM8t0/ICTIugjQqa+LtPJrkC4og2tCz
/W4ujYa5PWt7bFUET86ltz3IoUneoAh25txQe5yN8XxO1vCLwKl+Hv95Fk3y
B0Uw9BcPujJpFC+jpx5FsO1A7fz3GTTJIxTBysSSsM/pGM94+nquKYLWfqV7
39Nokk/Af6/VV/A7FeNZ/YvtrfAiGLPZLmYQrv/PK+C/Z10pUUjBeObUbXFN
LAKdlpifI5Jpkl8ogvr9ozaNTsJ4/pHV25RdBHGOGzMmJNIkz1AEMz51lugm
YDxHyBh5EVQOa3+vH0+TfEMRLBjiy5oXh/EsW1fFRXAjxc5jYSxN8g5FcP5X
tr9tDI38BwSiImhe+nqPczRN8g9FoGwZYegZhfE8sLAWwdmqJ92r19EkD1EE
HoVzP4RE0qjJyOOc6RH8/J7B9NgImuQjimDis08b08IxnrdrYgZYBHNPTnVh
hdEkL1EEZ2rPm1KhNJqr3p5kdKkIjhlXrSkNoUl+Al/fvhPntwZjPLO33tx/
qwhGV3b47QuiSZ6iCFJO/Zh/LJBGG78Hz5zRXgRqlW8dUQBN8hX4fOpuLL3m
j/EcMYO981URJGq+ndi2liZ5iyIYF3Xu6fM1NBr88D1mHEWwYeqvjo9+NMlf
FMHsVezRv1ZjPLvIBHH8+WaLuMNw/X8eowgi+lSMNVZhPJ9NKRk7hAsGP1rH
6PjSJJ/BhTElmQsMV2I8Y7SVjuTCJpfnYgsfmuQ1uHBh/6epTiswnmV26Tgu
aK/gf17hTZP8Bhca/kp/hHhhPI+STTguTE/oMU3ypEmegwvDi/iHWB4YzwMN
mguc2TaBInea5Du40BT5y2Xrcoznby6ruOb4+pZXxFUvo0negwsaiiOvn12K
8RyuemywPRceNc8LvOFGk/wHFy71fDTscKXR6getI/OXcuHd7RkmH1xokgfh
wsyXjUn9zhjPAwYgvp6D+98Ox/X/+RAuXL50fsMkJxo1nFnTmB7MBc2Ornyj
JTTJi3DBrFpxGzhiPBtOmfwthgu3lZR/uDvQJD/ChY93WzjBi2k0e1tnZkI6
F9rk7V1T7GmSJ8HPd6ujM9cO41lt/90PBVwIOFeft8GWJvkSLqQKNr3fb0Oj
skLZgsmFGW4nROeAJnkTLix0/hvVYo3xLIt/lHNhRdeK3JeLaJI/4cKP8qrL
P6xo9Des91XQDi6sfdbiqIzr//MoXGCtqv8zyRLj+f4ZeHKAC9/2r3k/z4Im
+RQudAr5qo4LMZ4HAg9c+NdiFLXanCZ5FS4ELZv/O24BxvOZxfjEcIH+nnuR
bUaT/AoXPC9/RxtMMZ4xO/W6zoVrtwu+VpvQJM/CBSsLpbUN8zGeZfC4xwX1
+cn9D4xpkm/Bvy+353b3PIxnNelQt2dcePWT7hiC6//zLly4V6A0acJcjOcC
n8Ar7/D9qiuUzJtDk/wLF5JNYqydjDCev47HV8gF63ydyQGGNMnDcGFQhYpp
2mwa+YQ91az/xwVlJ02WwIAm+ZhiANfpcrtmYTzf35mwSLkY1AqnHj+rT5O8
TDGEP+jdencmjZBsXI4uBqkLde7DDJrkZ4phcedFtaG4HpC7JxdD2iX+hkl6
NMnTFEPQ2CZvs+k0mjlblnAphrgJIQ7Lp9EkX1MM0yc6RkVOxXiuOP7IyKQY
pmT4NhTo0iRvUwz/thS6b55CI4lqltkB62LwVKwedVyHJvmbYihbcmHYrckY
zwXWkhnOxTDuZ9Wct9o0yeMUQ99le0Ye179k9NmrGEYmFk3UnkSTfE4xdFz0
fGY+EeM5tMlRx78Y+BtK73tNoElepxiuP54/OH48xnMbvWNLJP59wbhAahxN
8jvFEF1r1LNrLMbzwEJYDJLINcfrx9Akz1MM59vog4+1MJ7xNCrLLYajZrvb
+jRpku8phnUtpfO1cM0yeFgzilcM6r9tGoxH0yTvUwx/JpYWLdfAeJat01L8
/A+kZ8Wo0yT/Uwz2Bvd28EfR6K3Mvqsohuw55b93q9EkD1QMpaurihtVMZ5Z
ehe5e4rh2tq3Di9G0iQfVAz6fcvM5HDt+eXdRPmjxcD7fd5XewRN8kL4fdpN
rbYajvEcejg9/2wxzD4dNt9PhSb5oWIoWpvwPlOZRmfuyQyYYvhkanhvgxJN
8kTF4OfH/XxCEeN5QNAuBrNvYYvuK9AkX1QMK03rzvwYRqNpp/qLvz0qhh9B
QdFauP4/b1QMFdc93MyGYjzPqn+R0FUME+8k+vsMoUn+qBhyXx7YkSZPI8GW
okUfP+P3nf1Oc/1gmuSRiuHN9LFnTgzCeB5ogMVQlzlZ8kCOJvkkHrRPer++
7x+FfuSP/No5lAeNl8Nujcf1/3klHrSZZS2w+kuh/TK5XY0H3tYaLWv/UCS/
xAO/MxM25vdTaCCOMJ4HdzbmSXf8pkieiQdBrXpnG35RSGPAcOZBcPw/za4+
iuSbePCg8Os2RVzLTt/9Ofjnc7tXGfykSN6JB7P3ttsv66VQDt7evCx48H5G
1drEHxTJP/Hg6i/TPaXfKSRzP1oW88A/M1vn5DeK5KF4UKUUePXRVwp1bo6N
c1vOg7fat3b8+0KRfBQPmhYe2zcV1xtHyBY4Hmi9+fVsSQ9F8lI8eNkoXBLz
mULL8mWJAB4EZvg9Fn+iSH6KB09PuFUe76bQ4J7TefVxPKh3WFbe/pEieSoe
xPW4nvr3gUIngvMfLsrkgev6eSrTcf1/vooH+3Xe0y7vKRQ9ELDBz58dapnw
jiJ5Kx4cbOCPK39LIR1HRZGZkAf2nx31zr6hSP6KB4Z6vKAXryk0EK/agJ+H
cOF1RVz/n8fiwfTAJSFzuijE15csnrOTB586KvR9OimSz+JBkre+du4rCi3a
vGLbgWoesHXbbKpeUiSvxYPcw2LJ9RcU+jJcJkDzwDjBQe3rc4rkt3jQ2fns
7Hhc786TOT48MN+6fL3dM4rkuXhgMD9vW9RTCq3+XHlY5yYPlF1X3ZM+oUi+
iwdhG26an3lMIVUZfO/zQKG96erLDorkvXjwrt2ENxzXsrTUuBc8MEoalGL6
iCL5Lx6MZI8X+LdTKAOztbIPPLjbH9Na/JAieTBct3c61jygkEztVO/lwZpp
Sa/b71MkH8aDQx/+HhuC6+czM1OFg/jw1TPzsFEbRfJifDArbG7zvUehsk2L
WpSH88Gz5v0s9l2K5Mf48En3/IHqVgq5yMa5Fh8yps9f9eAORfJkfFDRMJ8v
j+u/uZeL5KfwIc3j9EKj2xTJl/FhlueemFUtFKr9RD3LN+DDPOmH65xbFMmb
8UFvU/rKI80UigiSOcb49/+aqnbcpEj+jA8dazW/KuB64sDCxQe3UHl5kxsU
yaPxobfpo3XgdYznxQ8+f3PhwymXi7uZaxTJp/Gh8VScxamrFCqS0fsVfNj4
8Vlf5xWK5NX48PfqsE51XC+cKVNQ+dCzqPk3NFEkv8aHKvvp1rGXMZ43Th8U
FcWHpGd9BzZdokiejQ+t0ywcrjRiPKu88+tK4cPK2XeVfjRQJN+Gv29SXd9U
XPvkHqoLzueD5azm0Z4XKZJ340ObUNmPVY/x/Clp1FM+vh/pqhuHLlAk/8YH
Df6+yMcI41m27pfygdX8Zs5wXP+fh+PDuutDdS3PYzwPCMZ8uPql2zrqHEXy
cXwIvCjlbjyL8bz4whTvfXzYe/HpzytnKJKX48NtbmPZz9MUenyck9NSy4e6
g3PWzsT1//k5PtzpUF3uewrjeYbzfbfzfLC65hXNO0mRPB0fthi/qzl5gkKO
Aw2GD9pP6nXf1lEkX8eHlG1Xz43D9YD818qHi16fC12OUyRvx4etL6YlZR+j
0OGc8tf1j/kgb+1DH6ylSP6ODy7Byc2Pj2I8d6+2s37DBx2faEtVXP+fx+ND
4SzDOzY1FBo7EHDgw+Ffe6RJRyiSz+PDtA/XcqoOYzzfftlr9ocPUqMicdsh
iuT1KLj3+9JNRVwX2O/1rFWg4OP6HBPLaork9yj46b6hMfYgxrPMDlCnYFq+
Yt72AxTJ81FwkHM2sHU/xrMs7jORguabO2OG4fr/fB8FjS3VOxbuw3jeIFuQ
KDg14tq/mL0UyftR0DTyDXf7HoxnZdkGTMHriF6zu7spkv+joKfutaoirhVy
8sZOsaJAuHPvKKtdFMkDUmDyVN8qoQrj+aNdcoUjBZOm+4mqdlIkH0iBtcVs
lYeVFEoYCHRRYPuROTwC1//nBSnI1YrNsduB8Yy3mXI/Cj6sP5uYvp0i+UEK
Zq6NFh3cRqGHdrKNiwJ/v3X3nm+lSJ6QAlfJbvsxuBYc834iTKBgroJGu1sF
RfKFFNxq3rqhcAuF7PTGLVTJpiBQ3iL/5GaK5A0poK/eFXRvwnheLxN4KQhe
HtA4Ddf/5w8p8L5xVddvI4UOyOICYgqMCobsk2ygSB6RguEn//lcWY/xLPu4
TRT4NB6Y/a+cIvlECk4M7tM3w/Xoj7Oq+qsoGPPw/rLYMorkFSmQ1JlvrirF
ePaXNQQKEjSGq3aUUCS/iN93ot1+DVznttSu+n6KAsvVN2JcpRTJM1IQELzJ
hy3BeLbLOJbYSIGjXkXEGTFF8o0UHHe9tO2rCOO51gofGQriC+T/GeD6/7wj
Bab5TkWhQoxnWXt5SMH5oUXGFQKK5B8pqH6yb1gbg/E8YFDj59WxZ5Aqrv/P
Q1LQ0B4/1YnGeFaiJod0U7D+3JfoAooi+Uh8HpKmPDrNx3jOWpb19Cc+L90f
Er7xKJKXpIA119HQCNcxH9Qxg6Eh1EZbLbKYIvlJGn4aho+r5GI8Dyw0NAxV
V3XuKKJInpKG3yOUt2nh+p6Mboyl4bOr0wQPDkXylTSU/j19jmZjPNsGdrbo
0mAY5MW9XEiRvCUNghODUwfh2rp2ms1SQxpGLTvNtyqgSP6ShvLM6MZ0Fsbz
NNnEpCF1vcL02nyK5DFpyBrBOtCdR6E95dXfHexoeOp8eeUsXP+fz6TBoeG6
fnguxrNikvtFNxoO/yyYUplDkbwm/vvEdusn2RRSk60fK2nwOXe5YDyu/89v
0mCXYv7OJwvj+f2voWeCaGCbTckoyaRInpOGHQeTDFoyKJQ5IMjS4FesPWQE
rv/Pd9KwL19rsEs6xvMt9pnaNBoO+rhNL06jSN6ThqP3amIbUzGebZy05hbQ
oNds/mgQrv/Pf9IgHtcaCykYz0eHJx6kcb0xaXpuMkXyoDS0LFAafCYJ43kA
wDQodPHk+xIpkg+l4UPFS/0FuP5XVoY7Ag1mQSqpqQkUyYvSIFr45VVtPMaz
wuqCKQdoKDOnMr/EUSQ/SkNz+iXjebiOzNTGKxwNu8aWqyXEUiRPSkP44m71
wzEYz7L/G+gFGubPvrCwO5oi+VIaBiv95Rji+vYamaGM3+eETd9ioiiSN6Uh
8yCXd3AdxrNMnrxHw3eVOpv/WDjvuJr6OI6nYZWGKCtbIpSRGV8rm0ghmZGH
hEgoGVn3nNu4e9+bLZRViYgbqWxFkcqWLVEUKs/3nN/v+e/90nPHOedz7jnn
9/28v6wU0vnTGLCVtnPqgzx8tPtE0YsYECQccwr5T0jnUWPghnra2OQVmOdz
1QctP8XAs28Nwi9BQjqfGgPCdmdr+iAf7sbdgMRAd5UPs2a5kM6rxoD+c7Hn
6WWYZ8W2ueb/YiDsqEfrb4FCOr8aC5n+AXbuyFZNuG8cCzZHPfuvXyqk86yx
sM/17saUJZhnbrnCPhYuqutKqxYL6XxrLKTuz1rhgcyP03WMhZ9/mrfevEhI
511jYXXI/XcXF2KeF4iu/3SJheVX6kv/LBDS+ddYkF2NqfZEfnZvttOGgbFg
Pmm1+44AIZ2HjYV2w0Sia/Mxz9BmS8XIWBBs+WRnjkzmY2NhavW6CxP8Mc/n
yh4GT4qFxIMtd7LzhHReNhY6b8tZfXcu5plbvvSJhTDh1kgbZDI/i+9f2DPZ
Zw7mWR7ELFsYC0fXXDFR+gnpPC1+n7VuW576Co3LG3MTU7FQWxva0gmZzNfG
wuiB4Q+WzMY8b+EmSmNh2zS3M0d8hHTeFt8vUnruwyyh8d5HLnD4er8lj/sg
k/nbWCi37tJx/UzMc8DmKl9BLPQ0H8ic9xbSedxYOOR6udWfGULjYG6cQRIL
w54nZ49CJvO5sZCz9a9893TMM/d19bFgu1rL3JwmpPO6sVDQdltCC+T9Z2+Y
3T4WC8fqlI99pgrp/G4s2IlK3dVTMM/8AnAsrJs96tSzyUI6z4uf92HK1G7I
TeXTM65fjoUzhj5WqyYJ6XxvLGyYsr/i9ETMs0XLVpAbC682NfyoniCk876x
sCRvZNsRyPx4U34stHo/c2m0l5DO/8bCc4HrnbzxmGf+hiEWZgZem2ONTOaB
YyHFo7G53zjM8/zF3dPK8fPkfX2oGyuk88H47+Wrs1+PwTzf7bbDvTIWugVu
LOqFTOaFY6Gr49+m60djnkd9eJr8JxY6llctvAhCOj+MnOpT+G+U0FhzJnlQ
L4s4SFtrGTIRmcwTx4GJVcseopGY5y7cAFscHNs7/99jTyGdL46D22XFfzoi
L+Euh9rFgU3baMf/RgjpvHEcxE6a6HdmOObZ4s/4hO5x8GBHp7SaYUI6fxwH
+U/rB45GvoW/5u3c4uDn5seFzFAhnUeOA4tdBmXBEMwz/8AzDlydJ0a0Qybz
yXHwWZ0XtWyw0Dhg/kQ/+/Fx0K21/cFkDyGdV44D0zKndz8HYZ7vWJ4VzcDX
8yibCshkfhnfb83Yh8xAoVHH3R75x8GzkvERDwcI6TxzHLR4/GR0B2RvPiBx
YJ31zWVFfyGdb46Dg/929j/rLjSad+FWWOMgs9HO+X/chHTeOQ52D3t1eDzy
RalT++gtcTChs6aFqJ+Qzj/HQYSHXvW0L+bZ/HV4/S7c/g3Px3RHJvPQcZDU
ZI7Vuj6Y503H8iPi4qDv65+/MlyFdD46Dto7pzayQOYfl6jiIHj9rj4zewvp
vHQctFk5b7OuF+bZn1vRi4M+ab1ev3MR0vnpOEi1+BwyAHnUnaqXFclxcKGl
xHF7TyGdp46DkSrb17echcYqz4sjVl+Ig3F+i+62Ribz1fj3rdY9XtoD83ya
u8CPgy2Hh5ic7i6k89Zx4F2UPPlPN6FxQecx35fdjYNPu7NTJiCT+es4KIkP
HSHrinnmHp8+joP40uNvXnQR0nnsOJjhtzSpD3IOpnfBqzgY/jVeGtFZSOez
42CM1lmT2wnzzA+sxkFnfyejPTKZ146DxX1Wmi/tKDT24wfO4mBKh7qVp52E
dH47DioH3//ytwPmeZ7jhQKTeGgnfiSajEzmuePBe0wjH1V7oVF1u9RuhmU8
5K2aNrC8nZDOd8fDun4nBw5E5pdTWsfD8wyb2dFthXTeOx78PTdIHrQRGk34
B5TxkPM5t8IJmcx/x0OymdnqEEfMc6deXbN7x8PgnPaNLzsI6Tx4PHTd3Dir
GfJKydco8IiHW0EX1fNaC+l8eDy0fOMsTmyFeTbjnpDHw8YJE4/9shfSefF4
qPxiXeqFXLCRO6DjwXpYWD9FSyGdH4+HJ9JVB97aYZ655VXfeCj67737IGQy
Tx4PVq6vX+y2xTzP+/fefXE81Ph6n3pkI6Tz5fGwe1l3TTfkb7eyx55aFQ92
JXMOh1kL6bx5PASPKbuT3QLzPIJ7IhsPWT1PtmyFTObP4yGpc/rm5VZC4zx+
gRW/b87PP2mWQjqPHg+RqYv0FshWnezwFB0PS0XvAuY0F9L59HgobbR7WGIz
ofEaN24hiwfI6OVR21RI59XjwX1V/ozJyPzuSIiH/bdD9mmbCOn8ejxc01WX
fm4sNPbmL8jjwfbAQu+RyGSePR4mHDC8jLfAPJd3vWqfGg/zg0+KXpoL6Xw7
fr6CiAUDkGVz37cRX4kHy9ONJu4xE9J593g49GyI92NTzPOtpDCrm/FgPq5l
uAsymX+Ph865+y5GNsI8c+NXD+OhuW9M23smQjoPHw/1z1urOyGf5U7Pz+LB
Z1GHQRv+sXQ+Ph523Jd/vdHAGpd3/L07+j0eD/3Dbzgik3n5eDgXm3oxuJ41
thVfeV7/PR7sv3rdvlLH0vn5eGgI7PrbFvleo13DIuviYZw5eC3/y9J5ehFc
/iw5feEPa9wVxj1QFMH4YXYelshkvl4EmXapxYt+s0Z+HNNOBI32r9Gk1LJ0
3l4EH22GbG6M/Jm7XGsvgnFqiw3za1g6fy+CgtAH7OlfrHH/TdmR1c74+k+E
V02RyTy+CEZa97Od+5M1+vIHIP77wjPbk6pZOp8vglu2Fs1NkPHmfP7yESLo
GNkjxbeKpfP6Itj0rfHmEz9Y4xUn7o5aBC/u7J/X8J2l8/v4euvezZmNzI9n
zxTB0lEF649XsnSeH1//0JwT9d9YozN3+zZfBM+ar6n3QSbz/fjvH5uvPV7B
GrnVVb8gEey94Py3/itL5/1FcK8y/chsZNHbH50erhNBF8eU4BNfWDr/L4Ks
s9bT/31mjePmcHdwIjg6KXuqHzLpA+Drrc1dkfSJNdbkbS26vUcEd9OtExoh
k36ACFSXpN/nfmSNycO4C2gRpDtOXnr6A0v7AiI4GOry1RyZf5yjEcGOkJ6K
gPcs7Q+IoN0FT/+Ud6yxtdOtcjgigtcmi4c1QyZ9AhGUN+zxWFLOGm/Fx+Ed
gwjyg49Ov/CWpf0CEXwyvRBtjbzdxEc3NEMEdsKzBUFvWNo3EMGFPGbkldes
cQA/0CWCV4LBOa2QSf8At4fu7MqQV6zx/ZuSmf3vi0D2+GvPGy9Z2kfA7W1f
btoBmX+8WyyC3v3jfoe9YGk/QQTOds8s7z5njTPzluEVqggatHeGdUcmfQUR
zL/kvTvqGWs05x8AimDh4iUfCstY2l8QQcL26pV9kTNOfrnctRZf387MYl8p
S/sMItjWanfm8xLWOIQ/IYshWrhaNASZ9BvEEBORuk38FI93fkFPDP5fZgk+
FrO07yAGqx8jk8cif/7XAS9BxOCSsPaL7glL+w9ikDQtnfjzMeaBGwe3E4Ng
euTVGcikDyGGQ3HjZh4vwnxwy8UOYij82re+ETLpR4hhico9J6CQNUZyt5Pt
xVB6Yezx849Y2pcQQ6/ogGM2yL5vjupudBZDZK8NxlUPWdqfEMO4z9uqsgsw
Tx2a4ilbDOMtNo3tiEz6FGLYdmlW8pZ8zJdf8K/RrmJw82na/9EDlvYrxPDU
UZLfF/lNHHcBKoZBAW+EzH2W9i3EMDD01+I39zB/udwAgxjqTl/zHoVM+hdi
+BjmOV9zF/P4T7z973Ax7O20aEf1HZb2MXB7OHQ0eiOvH1qVNGy0GB5cC2ub
dJul/QwxrIqfE98Yedp6buJBDLu+XnEKvMXSvoYYQnwP5l25ifk9eQHvqMSg
9qyNaYtM+htiUHS7FByeh3l+03ZQtbcYLGOeLyvIZWmfQwyZtQs290Xmx1/8
xLD9V5+jbA5L+x1iGN5ywtfyG6zxPPd4bD5+n2f7vccik76HGKTf+t9NyMb8
c/FZLAavV1WBf6+ztP8hBqdZz+znIa/iB7bEMOxV+fO0ayztg4jh8hCLG3bI
4/6ZO7oGiyGvYUD22iyW9kPw87xdUXbHiOeLof+NX7VODPVatU0vZNIXEcO8
YuOCfVdZY23orfWJG8Wgn1OY/eYKS/sjYrj56N74McgPT7juL4/A7Wt35EVC
Jkv7JGIQPZ4hr7uM55fX3A4Ww+PPOYHzkUm/BI/3To2mXryE55v2lb+X7hFD
+tjaaQ7IpG8ihlDXwys3ZrDGpb4+PQ+wYvic8tvw8CJL+ye4f9Krvrgjj+Af
MIrBwZH1E11gaR9FDO8yzj35mo7nJ35AVQwpgqCwaciknyKGnmv0Lknn8XzF
Pe7XiOHG/Bk1zZBJXwXzMD7sxco01nibuxxIwLx2M3uVl8rS/ooYsn/8/OuM
fCR0ZPMnh3H7p4xz35fC0j6LGFYHvd1Wfg7zfGL/kNYnxGCwz387Hpn0W8RQ
nNew/MhZzPPrRkGzT4vhtXhlgxky6buIYUy0xbllZ1jjwPbcFbcYhp65F5V9
mqX9FzFcH5SxtBtyC99c44OLeD5wy1q8+xRL+zBisL5WsulNMuY5lltQEYOP
daPEccikH4P5Hu1aeTgJ85zDDeSLofnuWT7myKQvI4Z2TULuLT+JeW74MlF4
E7eXSdjSnBMs7c+I4cjRRdbOyJuGeIffvCeGUwN6Fu47ztI+jRj+lt9IeZ+I
eebGkx+J4Wsj95OTkEm/RgxRd5dcOnEM88wtXxaLYZTI+01zZNK3EcMyVXX3
kKOYZ+725pkYznlM2nHvCEv7N5j3q2N/9EN+0Y5bIRbDPbZsm/gwS/s4YmhW
1aLrj0OY59ncBQDmx//B89nIpJ+D+enUNu38QcxzLLeALIbUk28OOiKTvo4Y
0oJ6Ho84gHnmd4gYZl4pyy3dz9L+jhhGdq2rH4k8qWHJy4waMZxtun36gQSW
9nnEsPjD/POmyF2HZLeorcPzp2eMR5CBpf0e/PvdTe7n6THP63qMGGwqgR6j
b27vjUz6PhIIr8mZGKfDPB8XrNzYRALnBvx2qdSytP8jgfnb53edjXzu1UdF
ipUElge/HpiuYWkfSAJuQnZhW+QYrm5hJwHBxkn7o9Qs7QdJ4Ei24+8XKswz
f8Mjga6tK4PHIZO+kAQsmt+uPqbEPPMDMxJIm5CgbI5M+kMS+L0haOZaBeY5
Z8PUpC4S+DOsTdeHcpb2iSQwasoZy8HI1fWFWz464/v5dWuhlbG0XySB/+zW
ODdIMc+Dhxzr2UcCjoP3zg1EJn0jCWh3LD+QK8E8r9M8CuovgV6nzBq5IpP+
kQS8owMiRGLM8/G/JkcGS6D82vJm1SKW9pEkYDe0zbl5yAtfLcRDWgLjz64N
vRLP0n6SBIb+WTKxK/KQdlkBncdI4NuH9x6COJb2lSRw1qduxJdYzDP/gEcC
ZnYq/1nIpL8kgVSTc/HpMZjnGG5AUAK3Go0rbY9M+kwSiK3xwt981pjLHc4z
JbDjZsqldyxL+00SCFi0a/o05APceNkcCdgfO1VzjmFp30kC+aK+GY7I/OPn
AAl8sv4r2SZgaf9JApVtbXa92Yd5XtciRLFEAgknA9nJyKQPJYHSKxWJZ/ay
Rjd+A0rg6uzkZ62RST9KAvvWyXtH7cE8vyrItVstAY3jgfjXu1nal5LAHr+b
zSYj8z9voRKo9WisP7OLpf0pCdy86ePlgHzFh3ugLYH3nRMttkWztE+F+9e3
ruzNTsxzDDcQLYFNUVPvTEEm/SoJLDwfl39uB+b5xvyo5jslsL1j5pc2yKRv
JQGfkgeddm7HPNdnnpi0VwJB1tdXvd/G0v4VHv9vYm7PQHYe3OnJPqEE3uxx
HpsexdI+lgSyu8TkOyGbrIs2zxHh5/2cEr53K0v7WRK476jq/zWSNZZy47IK
CVx55m7uh0z6WhLYtSXia2YE5plbTtPi8eQc/LU7Mulv4efpWWcWtwXzzF1u
75dAZJZL/5+bWdrnksD0oR83LkRexS/g4f4oHvwgZxNL+10S6PSt+eh+yOP5
AogEbO4sylOGs7Tvhce/0TXo30bM8437rYafkUBS19VtVyKT/hf+/9Md3uaH
YZ7r3MduSZPAba1zzjBk0geTQFiwIvPQBsyzh2xdeoYEHjotuG2JTPphEohr
u7Fi43rWeGrtT331VQmMyHns8jyUpX0x3D8x2yImIgsS594ecAP56dKXZ9ex
tD8mAXGnbQvbIS/Fs1/oLQn0L7hZuXstS/tkEliyfJT26xrMc9sOPc7cl0Bn
nyf+c5FJv0wCcx3i3K6FYJ75gQXMj5t/e1dk0jeTQIfOHk6K1ZhnbjzgKe6v
1e08/gWztH8mAU+t6bJVyLe5xwfPcXt5vD/2aBVL+2gSqL59zWQU8pG6IyWJ
byTQ91NM6PGVLO2nSeBvD/jVEnm7B7fiIoEP9kWSbf+xtK8mgRnTJo77sII1
+q9d5dG9Aj9vsKj5bGTSX8PznWXi+ytBmOfEO4GBVcgFghIXZNJnk8C7xa5v
ZMsxz3ixe6BWAq0WxDT6t4yl/TYJHFp30CMYmbv7f14vgY0T/ttRFMjSvpsU
+osePx+NfH0WN6AlhXF/P8xOXsrS/psUikapnzsi64XcBZsUCmyfb9+9hKV9
OCk865026NtizHN2upemhRQWTm5lEoBM+nFSWOda+zJ3EeaZqzO1lMJHqf+T
AcikLyeFeeMHvElYyBpduXGnNlJo1CTK3BKZ9Oek8PSI+4jNCzDP3ONQJynE
fposeBPA0j6dFMISr33wRn7BfduuUtCekizOnM/Sfp0ULhSkfnZB5u4W8ntK
we1zlziFP0v7dlKwKywaZ4osa8M9UJSCw6pbNuvmsbR/JwU9+6uydC7mmR9I
lUKS49z3k5BJH08KX2re/jg/B/MsvHlWOEQKp+y09t2QST9PCs9nhE4W+2Ge
s3s/v+kpBWv9Unm9L0v7elII/vBfdTBy3d9YyyZjpXC1x7ZVxbNZ2t+TQugk
XZUX8pNB34Z6TZTCzomZ0lQflvb5pCDoUDKhC/K5NdwHlEJ6doWNaBZL+31S
eDii+mvdTMwzF7dZUvDY9/ZlMDLp+0nhzrGMD8XemGdufHOOFFoeWWMxEZn0
/6TgKPgz+PwM1jiaX0CRQnjA/G3dkEkfUAp+boJiyXTMMz+AL4XV9lsnmSCT
fqAUfrRzv7d2GuaZ9Zx8aYUUUgMOrHg2laV9QSnUfs1pNQ35/vWETbWrpaD4
on1yaQpL+4NSeLGx7ZleyCe4n9/1Ujh3bIROPZmlfUIpLDvyV9cEefegZQUb
N+HxKZ19btMklvYLpeCjGVlaPhHzzF9gSeHKq9S2fsikbyiFQPXZkBsTMM94
dfB9pxSsvvQtHIhM+odSMLF2nnnYC/P8gvV32yeF3/1lL1sikz6iFFzi1+3d
NR7z7MgtGEthQMD5UT/GsbSfiFy4yCoQOZe/HMfPP3hFRcFYlvYV8Xi6nvN2
DDI/jq6QQsylzd/OjWFpfxFff9km667I/HK1Tgq5ZpljpKNZ2meUQut3Y1lT
ZL+/Gz1XHJBCvzkW5RuApf1GKUgP1fu+GYV5HvRk1ZGjUujZwfnpbGTSd5TC
SIeI9TdGYp7XDFO9PimFPe8qnTyQSf9RCrblgudHPTHP3O35WcxryNBUB2TS
h8Tv97ROJxjBGq8+r/++6Dweb8IH6trhLO1HSuH265MnViGrHbkntlJo5sXe
LxnG0r4k5tsxqMk05A38C0qhLHuo75WhLO1PSqFFWkNaP2RumqltDubD71yv
A0NY2qeUgqrN1BQ75J7X9+EviBTka3Nn7B7M0n6lFMzuOv2r9sA8//1QqHiA
3y9xavYKZNK3lELzyCm64kGYZ65eUyiFR1dbCaYgk/6lFNZUHdmXORDzzI3f
lEghTfVT0w+Z9DGlcLdvo2sHBmCeucdzL6TgPPz635bIpJ8phchxA6fs7Y95
5h/oSCHv4YzkGneW9jWl4Btm0zUYeTw/ECiF5JR1SWVuLO1v4vmnc/Akb+SO
/AWRFIZ6/6691o+lfU4pPHjoeGUQMh4sLSdXS+HXmCx5Yl+W9julEOXxdUc7
5EfX/oDgN56PJ2m2x/Vhad9TCu3bGMUmyKf+LMCESMFivH96mCtL+58y+Lwm
8Nu73pjngUatmbkMcoYVjZiPTPqgMsienqy71wvzHNLl5phmMpji89p6DDLp
h8rgx/f1ijQX1uh5dPfPHdYyED71c3NBJn1RGdhdZMp0PTHP/ANsGWSMsjDY
IJP+qAxed84N3e2MeebGCdvIwKlV7tyaHiztk8rAOf/frNXI/HJDRxl8tF67
+EV3lvZLZRARa7lzNvIRxippSzcZODR5lJrXjaV9Uxm4gPHPCOQd19YWp7vI
AGpu+57tytL+qQxsqyuvdUf2/5Nv8bOvDLbUuY7VdGFpH1UG4U83FbVAHsj/
J4Pec+5u3dWZpf1UGZRBT4+aTphnvHpeP1QG34J2NQpBJn1VGXzQFL982RHz
fKQm7sxIGQSf6f7ID5n0V2UwKGpp8W0nzPMzbsFOBl2L2UpAJn1WGbga1O3P
d8A8O3CFDxksTmT8eyOTfituj0Lfk/vbY569uYaoDJo0rm3RGpn0XXH7O63Z
I2zHGmdxpwMfGYQ1nG5hgkz6rzJIFl88Ed4W88yNR8+VwazMPfM+t2FpH1YG
5iHW7ZYi88unC2UQFTuz4rEjS/uxMthuNaFoGvKLAdwFDG6Pso/3rzuwtC+L
+6dycOlQ5Eurm/0+8B9uf0+XP6dbs7Q/i/vnwkXXHsjyI6udX4TIwGP+m3W6
Vizt08pgfefDuXbI/OXBBhlUNq5yY+xZ2q+VwS2r+0kNLTHPfMENj5+BbsPD
kUnfVgbW2+xKP9thnr2lpzVRMrjxbV18IDLp38pgpdTL96kt5llQXfokWgY9
1sb1mYlM+rjI8WMd82wwz1lzmjkIZCD9t7jVKGTSz5WBouBlt/PWmOffFwf7
xsrAp3WWVx9k0teVwadntRGHW2Ce+dsF3B6j92W1Qyb9XRm09l3WVmrFGldw
dQ+lDO70j9nTDJn0eWVwuLq2UbQl5pkbB9HLQJWRKKltztJ+rwx0+6UDQ5Hb
8QNZ+Hny0t6/b8bSvq8Mlvg2O70Yubo1V+iVwc3gmH1PmrK0/yuDmP6D13sj
P5jReOKtJBnMLTBfm9eEpX1g/Dwbf0QB8gnu8cE5GWyY9MdwoTFL+8EyyI10
LHBD3p11+6BXugz6eHo5HLdgaV9YBj+vbl/TGXnh7z4Pdl+WwcIhxsdqc5b2
h2XAlDbysUMeOkBUdy1LBtFvxrxgzVjaJ5bBSDZyuylyy9Xfe5nk4vdrmui2
1ZSl/WIZTN5//UdVI8zz4dlzR92Rwd/Ym3khyKRvLIMB9mmny00wz9zjxHwZ
+IXvTFyETPrHMjhb65Ly5B9j5OtrRZjPt8fvz0QmfWQZxEf/rbvVwBi3cuNt
JTJo1L7DyHHIpJ8sA7beQpRZzxj9BGVWQ17i9tic9sMDmfSVZTCwpOvKM3WM
0S1r1PDwchn03Dztmwsy6S/LIP9QH+bQX8bIpSP1kwwGp14d0AGZ9JllMNSk
oULxhzG+7c9N7OD+elOeaYNM+s14Pr24Xs/+ZoxXg4Ouu/3E88czfZwZMuk7
y6D2TKB4Wy1jVB/mFkxkMFp69UhNDUP7z/j+75Jur0fewA/cy2BmS2fTL78Y
2oeWw5CtLlNXIE/nH5jI4RZ7+ujLnwztR8uh3fFUuwDknjMqNrs0l4Pl2IGi
omqG9qXlMDHHpeNM5EaCmUdX2Mhh/EHR1dtVDO1PI09cFuqFzNdxW8lhVu/9
A7N+MLRPLYeRxlFNRyCnc+O6beVwIGpkxfnvDO1Xy6G0RFnujizmlvM6yaGl
74SKpEqG9q3l0G/5xKY9kbnVs8Xd5VDGKAYe+sbQ/rUcYsf0CXVCHs8vEMth
rU2Tq+oKhvax5RAe3sWpFXJHvmCEn692U5zoK0P72XII62hmY4n8m/t4g+TQ
PPTawX1fGNrXloPp5lNepsiPpgfazhuGbLz+Z9tnhva38f2K6rJ+f2KMXFtP
OUoOyybPVYcjkz63HC4m3dv5/SNj5NrVhePk0BAfELkGmfS75RAlqNvz8QNj
DOQvEOTg7pp8IAiZ9L3lcN9uxb1X7xmjZ3/uibEcsgp7WC5CJv1vOfSwee9f
8o4x8qer2XK4u/Boxhxk0geXw7DFC3o/KmeMfP1gnhwOpTZJ9kYm/XA5fKk7
NOruW8Z4hxtPWCSHU897vZ6ETPricnBpUClz3jDGo602bp28TA4+ph8DxiKT
/rgcbsvaDDC+Zow7pnNPKHF/Luja1hOZ9MnlsKOZqV3GK8bov2/o45w1cpgz
MbXtYGTSL5fD6Zz+A1NfMsZB3OVLGG4Pj4iF7sikby7H+9W96lMvMM/8Aw45
KM/PetsbmfTP5WDrXjL6+HPMs/viRTu3yWFRaLvTPZBJH10OaW7WfQ4/wzyv
4p6IyeGzy7lLnZFJP10OO9v8808owzwf4gYA5SDOrGrWAZn01fF4KxTe1pRi
nvkCuRxudM3SOSKT/jrmY5Vom6IE88zfzsjBfE31Ontk0mfH7V/9aYPkKeaZ
q1Op5HA1d+0+G2TSb5eD1emtJ+OKMc/cuJVeDoPCW7ywRCZ9dzm8/tCpu/AJ
Y3yJvx4DD+H3e3I6oiky6b/LQWCb/mLfY8xzDbdAI4fHQf3nWCCTPrwcAk52
eLa7CPPs/ujXmWQ5ZKaEbTRFJv14OXj4DegQXYh55h5vnJODepVv4b9HDO3L
y2HKrSL9duTJ/MCzHCZ4p4TXP2Rof14ODsXli6KQu/E/6HIoGRMy728BQ/v0
coCQMYGRyPX23Iq/HPYNXRr1O5+h/Xo5bGPzjm1BfjLt6tN3uXKIHhf6quYB
Q/v2ePxMm9tnM3LK3s5NetyVw7eYLYJf9xnav8fv++nBj3DkWO5xZ4Eccmb7
r/15j6F9fDkUp9j+2Yi8gquHPpZD6s/viuq7DO3n4/az/D1mIzI/PlqK57/y
Lg1Vdxja18fPt3Hl7TBkblrJ6ZUcDp+6eazqNkP7+3K4s3eULAz550Gu4CGH
3KocUdUthvb58Xj7Nl8fhvyghHsgIQf7jb8vVt1kaL9fDvqthvIwZH75o1IO
/5mN61qdx9C+vxyKmr1buxGZa9s6/JLDzfhdd6pzGdr/xzzLWg0NR16ER4vv
Xzwe26vTfuYw1AeA+6d3szGbkIdyd1smCqjIWfbs1w2G+gEU4PrrMLsZmVut
yLdQwNHsHK/abIb6AhRwZmiOXQTyF7fLPW0sFdBmacLX39cZ6g9QQK8p059G
Iudxy6G2Cjhier/w7zWG+gQUkKPt8DIK+SBXd2+tgFHdPf7WZzHUL6CAYSn2
zjuQ+XH4dgqY55+2xASZ+AYUcM7NPinaiHm2567YFPBgWh8LM2TiH1BA6q2/
a/dcZYzu07jGhgLys7Z9sEAmPgIFtJhxer3gCuZ5b9Ohe3or4Ho827wZMvET
KODSQctUYSbm+Qr3A6wAt0T31VbIxFeggPtZ1QPiL2Oeuc3ngdvDzre5LTLx
Fyhg4dUp3yWXMM9u3BUC/v2Xwvf2yMRnoICgGxVfFRmYZ34ASwE/18jN2iAT
v4ECMuyvu2gvYp75Aq8C/F+FLeyATHwHCnhnduxgwgXMc4nfpN+TFfDshO/P
zsjEf6CAbmZR8w6nY57tL4YP8VaA2Zg2d3ogEx+CAgYpe0w/fp4xlnGnU1/c
foMPPO+NTPwI+H7z9uw4lYZ55uo9/gq40P++mzsy8SUoYPDfiG8pqZhnbvxn
kQL2Vey+6oFM/AkKyJzwQX8xBfP8a7Sr+3IFzBh9WDgCmfgUFODQ9pzg6jnG
6OV2eN7aVQqYbmstH4NM/AoKEK1IP3PjLOaZHzhVwJOFx0omIhPfggKih5W0
unMG88xdXoUpwGvUjEUzkIl/QQEjUhrSC05jnp/eeukSoYCnZe87+iETH4MC
7zcaK4tPMcbTLftY/7cd91+kX4cFyMTPoICE3Q/PvUjGPE+NH3F0twIOrY2Y
swyZ+BoU8Ied0Px9EuZ5TyUmTgEjewy+F4xM/A0KWCAZv7/iJOaZXwBRwP7O
a3duQCbLqwo47nwm9NcJzDN/u6WAkFqz0Ehk4ndQwPAvK7c3HMc8c3VFtQLS
/Et0u5CJ70EBDzW+Nxsj3+HGGQ0KeNm40CwmkaH+BwVsr/OdYYPMtXnaHcb3
f/IoUXaMoT4I3F+/ptm2Qebal/OOK+DOxUyB/ihD/RAKmLOjk3UX5PktDxxT
nlLAouT1h48eYagvAj/v4TMTeyMP4h6/pODf3yr6c/owQ/0RChi752XmQGTu
aYT9RQUcHnE37uIhhvok8PvNU6wZicyt5s26ooBW44cuuH6QoX4JBcQEn/Of
iJz902WB6Dq+3tD6oLsHGOqbwPNL+zbRs5AN/WLYe3kKiNzVcPLxfob6J/B4
fZ78JgB5M18oUsCpg51cXyUw1EehgHWjZkevQOYfxz5UwPxe4999NjDUT6EA
m+IK//XIfP36iQIirnmX/dIz1FeB56+Fy9ZEITfmxrPLFLDK2bmFKTLxVyjA
SSm/LNBhnqdsCjF/rYDnLklbWiATn4UCvgSsGC/TYp53F2vGvlfA7VPXO7ZF
Jn4LPJ4SMpvs12CeM4fn7fyigKmnZ/7rjkx8FwrwXLLVIkmNeeaWZ74rQDNk
WLv+yMR/oQCXjH0jL6gwz/24iW8FfA9esm4kMvFh4Pm18PqZbCXmmS9QKmDP
tpMNk5GJH0MB0kr7BfkKzPN+bsFCCUsv/s2bg0x8GUpwXbpo7DM5Yywu7nHy
QmMlBG0ZemcZMvFnKCErdl/gJxnmGbfeT0slOPfzaroemfg0lHDla2hmjRTz
zC3X2inhzcLGO7YjE7+GEvq2NJ1pgczrJByUELJ/iVushKG+DSUc03V0skce
w9VN2ivBMWFoW62Yof4NJQyCpG5dkNv/tI2r6Ix/3ybM87iIoT4OJUzPiV3m
hvyzLzfwp4QRr6rV6fEM9XMo4WKz42UjkR+s4CaglQDPDvXLiWOor0MJO/6+
ip+GzI9vuCthnkVg/aNYhvo7lFCm7xQZgLyH270eSpgR5GjxJoahPg8lnp8n
JAQjL7LjVviVYNLhuNcPIUP9Hvj+c4b/jUAeOmWRYdlo/P8Dfl9thEx8H0qo
evhKzLKYZ/4GXQlNV1aG2iET/4cS2uR2WaxhMM+Xu9a+mKKEZ5oNAV2QiQ9E
CaMkL4JOCDDP3DjXTCVMCQja3h+Z+EGUMPq4ydGMfZhn7nTvp4R9vU4/HYNM
fCFKOCUJ7nB7L+aZF2QoYZ18wBofZOIPUULKO9O7JXsY4xxuvG6xEnaOKh66
DJn4RJRgPftM6ufdmOfiFqUOQUpIL9vjuRGZ+EWUUCf3e1S3C/OMVxt+wUoQ
DO64ZS8y8Y0ooce20t7WyPzTunVKuNVD+FkZzVD/iBJiK5wvdUI2cpd/G5Vw
QnlaeXwnQ30kuP+eO0X3R9ZcVoptIpUgFayPuLSDoX4S/L6+x3aMQw6rrr0y
fYcSujbLkN3dzlBfiRJmBh8774c8nS904PE3anX5820M9Zco4dBU824rkXvy
P0h4fAWsXfs9iqE+EyVMHXwsLxLZdH+nCU1FSvBPPN7PHJn4TZRgFbnhcNxW
zDN/O6gEl60mzo7IxHeihPgt3ukHIjHPXB1YowTPMQt8eyMT/4kSph3tZpIW
gXnmxoUTlPAz/FDGSGTiQ8HtubdoZ94WxriaH5DA/ZeY4TcLmfhRlDDg7NSh
pZsxz5eb98KNB6HhjEsQMvGlKOH1vRDnb5swz9Uhc7adVsJ8yc/+EcjEn6KE
6+pOU82Q+cdDqUpod/X9+rhwhvpUlBBVNuWYI3JhEHdDrQSHfK8PBzcy1K+i
hH6biob0QT6dIHs+5KoSOp/6JU8PY6hvBd/P99i/0cjc2WVTthICp73afGcD
Q/0rSsjfdKTeD5m7O0+7qQSf9C/il+sZ6mPB80FFev/VyCMnX1rx454SDpib
vPwZylA/C+bz+Q3dTmRH7nHxIzzeAk2DLJGJr0UJZ7acH6Fch3nm9AbFSihu
XtqpCzLxt+DxaBpql7wW88zVH54pIWPqetshyMTnooRvBaUdrq/BPPfhCrtK
uLYrefB0ZOJ3UYJi2suFxSGYZ35BQAklHTdKlyET34sSWn5aXlixGvOc0AR/
4pSQt/9Mt0hk4n/B43nArJ0WyPzy0Q88HygnfBIHM9QHo4QmxtilHZCtbbmG
sxLaH+78LnEVQ/0wSmg77N/mgcgfJ3E/IEq4v6WHo3ElQ30xSmgVIM6egpwd
Le6zxFQFd596bnv8H0P9MSp4+a3n+EBkbto/oYkKxmhmtKlYwVCfjAo+Pjz1
OwKZa2eVWangqXbsBwtk4pdRQZvKZm8lQYzRhxcUqCD1oclXJ2Tim1HB1XHd
zU4uxzzzAw0qmOW13nkwMvHPqIAteTvn+jLMM/dqHVQgaBIln4FMfDQq2FAw
8EVJIOYZr8aLuiCPajbkP2Tip1FBit9vXdVSxnjZhnuio4LATo2sdyITX40K
zh5xirNCVkziboBVkP9talvNEob6a1RQbcmm9EDmx0v6q8Db4uG8lMUM9dmo
wOFjNytA5g+/wSqIytl6984ihvptVHD+xGPNPORu/EC9Cr4f7b+xfCFDfTcq
WHqHDdiA3ODKPUFQwaA+Zd7/FjDUf6MCeWmPWbHIxcu5gUwVJH9dtrgtMvHh
qGD/ZlnksQDMs+FbYu5UFYhF5w4NRCZ+HBUYpl1+kjUf88yNm81SQVnuqbYz
kIkvRwXLHPetLPVnjP9xP0dzVADzxtxYiUz8OSrYfKSsz695mGf+Ab4KWrTx
O7Qbmfh0VFD3ILG7HXL76C0LjUtUMPhTQWrCXIb6dVRwfG++dx/knxklwvog
FQy8fqA2Yw5DfTt4PGTB6YnI+T+4ApEKfh86GVrkx1D/jgruxTyHZcgnufHT
UBV8TShu/92XoT4e/DyNlOY7kPnL03AVFD2x/2OFTPw8Kng92btOOxvzjL++
vyJVcHO7l2UvZOLrUYHl/irnCz6McdjjnDWDdqrAuXCOtxcy8feoYPekkD2P
ZmGebVx0G/aqYE/P/rlLkYnPRwVbDIdaVc7EPE/kBhBUcPjJlXXbkYnfRwXD
zHc+sULGiz+8IlfBEp93U3XeDPX9qKDfj693eyGT21UVnGgln39xBkP9PyrI
+1xUPQE5ii9MqmDNybO6oukM9QGpYN2eLt7LkefwN6wqEJ3uYVM1jaF+IBVs
X3SpNBrZfXl40vsjKii5XZZmi0x8Qfj+rkLt/qmYZ8MTvAJUQdUFY2w/ZOIP
UkH8yciYK1MYY3nRsMbLz6hgxsiLymnIxCekgtCk8NOlkzHP3OOrNBV06H/2
YTAy8QupYLllkNmfSZjnidwApQrGbZGMZpGJb0gFh9IHCNsgc22djkbMV+MJ
LxMnMtQ/pALz4zfHDkGekXEdrzjweH124VzuBIb6iFTw64Nt3znILnxBXAXu
1gVp5V4M9ROpIFjyc1I4sin/wF0F5Re2fjRHJr4iFdzOW6KUj8c8c4+zC3H/
Nz3k3R2Z+ItUUJHl2TptHGO8wOlDnqrg7/B+78chE58RHj9ZYTmPxmKeudWe
5yq4oW1+dhky8RthXh0qj1WNwTzzJ2gVuO3scnI3MvEdYX676zPskb0mbvht
81EFfXwWFh0ezVD/ER7vcwPrByJ32lnoPKNCBaV7j/e/AQz1IangQZ++G3yR
/3DLW1Uq2Jvw9erbUQz1I6lA2/e9Yzhy4XdOiKGCuL6O2yyQiS9JBZk/IisU
IzHPvbmBARWseGgT4oxM/ElqONH10c90T8zzsoVlE8zUsHv49ZiJyMSnpIaC
9SV9i0cwxmV6Y7O9TdUwo0vbspXIxK+kBvmhrcrfwzHPRV2GZLdQQ/uZ/xYI
kYlvSQ1D9h50a4/ML3fbq6FdwmLr5GEM9S+pobBm8G9PZH6Yqw2+fmX3yntD
GepjUoPPO+eqRch3ubqkkxp2DhtuWjmEoX4mNcybssApGvnYRa7AoYb+kcLx
LZGJr0kN4Hp98+HBmOfvnABIDeIskwuDkIm/SQ3NEsaZ5npgnvmBRzWscWH8
5yITn5MafHPuZH4YxBg9uPGXAfj6pZZ9IpGJ30kN0wu8Ei2Rbbh4DFHDHZvN
/QwDGep7UsPRf/pr/ZA/Fioe/PBUQ1Lz80uyBjDU/6SGfbpMSx9kbrrYfawa
0pzOXX/Tn6E+KDUw9aK94ciGCdwnVEO/43N8myATP5QajsSYumncMc87Muee
mqaGqw6S1q7IxBelBueMf02uuGGe+cKaGvzfTG3sjUz8Ubj/G4fZvuqHeeZP
qGoYptjgHIZMfFJqMDWdNMkCma9/L1DDg6zKcFVfhvql1DBqQvCZXsivAjnj
kxquNEmpvtyHob4pNcRvzfGagXxZlzj87Qo13Ghz6NBLV4b6p9Qwbq6XZRiy
orDZyq4hajCeSd5hgUx8VPh6uqJ/qt6YZ36BXw0yxZWY3sjET6WG5W0Cu13p
xRincJfPm/D7HsjK9UYmvio16E48Dn/tgnne4V5ZtlUNfikH3cORib8Kt/fQ
TjVNkDmbRftoNby7PO2WtidDfVZqeH+5Z2JfZM4+5L9PDTsyTomznBnqt1LD
+MFle2cjp3K/RjFq0KSd3feuB0N9V2o4dcFFFoEcx4/LqyEye0ySFTLxX6kh
d8Hv+/u7Y57522k13r9MbxiATHxYavg8Y/iw3G6YZ05noVPDpPNXd/gjEz+W
GnrfeFLwpSvmmR9QVMNU891uO5GJLwuP139X1PbIv7zGBtw/qgYX2NcisQtD
/Vn4et5P44Yj52/nJjjUsO5yWtv7nRnq01KDl63DuaXIfH3mrBqGlv6Z/bMT
Q/1aaog+ucSUReYfr51XQ4cWXpkdkIlvSw33pUejz3ZkjIt73bHNu6SGbnd3
+IxHJv4tzNuUgn7FTpjnwL6jLLLUcH2/yiEEmfi41NBocX4zE2R7nWj1uBw1
3G4f0VTegaF+LsxPsKilC/LXR9wJUA1LX9q6ZLZnqK9LDZPt/06aiXzTiitY
qOGnZmr423YM9XepocTS5NQW5EPc4/ZCNQxq5FBphUx8Xnj828eMOtgW88zp
eUrUYFa6QO2BTPxearhUxdTfaoN55gUsagiptVq7CJn4vtTQZe+7jz8cMc/8
grwa9g+2Xy9AJv4vNaw/KTbrgGyJd2+/PqrhxfYFB886MNQHpoZqn41TvJDL
lx58POibGrbmFjU8bc1QP5ga6iO2X12LzC+/VWO+rENYM2TiC1NDsbN+sboV
5vkRdwOH3yfIakxfZOIPU0NeyKW+1+0xz1acIQc//+vDPeYiE5+YBqqCc12+
tMQ8e/WO7WuugfbJnYZEIxO/mAaWTTs10wHZZXtsxupmGjCrCglPsmOob0wD
1RMXHB2NbMoLpzTwvmrLyyJbhvrHNDD9QJbzauRn3HK8vQZm1rhvMUEmPjIN
PDmcV6iwwTxzurG2Gtg1a5enKzLxk2ngTPKiM1nWmGeujtxRAxsD5/edg0x8
ZRo43Dks/XMLzLN2s/5QNw3kKo5NiUYm/jINdF3/46MD8gT+AbQGzgf6ypOt
GOoz08Dg9rcnj0XubMWt+Gig9bRZzYstGeo300Bk4vuiNcj8eM5ADYx/KUw2
Qya+Mw1YnRwar2mOeebiO1QDXTIqIt2Qif9MAzHXT27IaYZ5TudOWBpoHBUc
HoBMfGgaaKJ33f29Keb5G1eI0MDFp591AmTiR9PA3y/HjU7Iy1y4FQYNBMUv
qUhtwlBfmgbGbrZ1mYLMTwtM14BsaXrIy8YM9adpwLrpzMxNyPy4no8GnJxL
HVogE5+aBl5s9os6bIF55n7O52nA+VLml2HIxK+mgYiT1ivzzTHPnF5hoQbs
mkyuWIFMfGsaKIlftaPeDPM8nnuirYFNjda2lyMT/5oGBnXyvd4beec2rhCO
x9eJthuvmTLUx6aBl0sy3echB/A3XBr43HR4bUUjhvrZNOC3XHx7L7IHN767
QQMfB19J7IBMfG24f72uilJNMM/c5f1mDfTxleyagkz8bRp402vQzlf/BMaP
S7gnqBp4GHuE2YJMfG64/8e/1Nkg39AsvtdolwZ+O5ZnHGsQUL+bBtLzz74e
iZzwkBsA1EDakDEORfUC6nvTwFcHuW8I8hbL7hgRDVgMSzSYIRP/mwZmrdry
XVsnMJJxfg0UhFnMHIBMlvfx/XtMy7j1V2Akt/saeDplSt+lyMQPh8dzSn1S
7R+BsQn/wFgD51yXe4iRiS9OA3V7tt7qifyqIvnZpoN4fMePWWn8LaD+OA0o
2qbZzUXmVgfPH8P81uTnVNQKqE9OAy1+K/bsQ+am66qSNBD6w2RGR2Til9OA
NN2ma3qNwBjKn2A0sLttlskMZOKb00DDN5tP5b8Exil8gUEDK2zqn21DJv45
DdyZvresNTJeS2aduoz7I/pY+amfAuqj04DN7kW/vZAbxv35+jlLA/N6JTk+
rxZQP50G1k8Xjt6E/DSKa/zh97/5O8wamfjq8HgOrzl3rEpgTD3PLXhrYGHf
6D+jkIm/TgPZd+XTn/wQGPm6X74GJrq5J61DJj47DTD9Z9k3ReaXA4o0cPfs
z70Hvguo304D/4TtzYYhj+X0V6W4/xOyhAWVAuq700C3O687BCN34G+QNNC7
ckeGKTLx32lgWoViie6bwMi13feX4+c/1rXlIGTiw9NAz7/d7t+tEBg5O8mz
TxrodF8lD0Imfjw8/5lGBTV8FRj5+m+lBiRR90erkIkvD9+/c5yzO/Jebnnw
J27/h+cdbn0RUH8e7p8tE+wCkRfzA3uYxz+eDn8/C6hPTwPfPVU95MjcasDj
f7i9XGZDX2Ti19NC8dG1y3I/CYzcNE0rCy00MryXLEYmvj0tnKu5fLv2o8BY
sdh/lU9zLdTt/9hCikz8e1pQ71wb4Ip8k2tz2mihbM+k1BsfBNTHp4Ur6vDW
i5D5cYFWWnh0vCq65r2A+vm0MPdQVq0YmX+5dlroElYS0RuZ+Pq0cKwZWNx4
JzDO5er+nbTwz/eLdiEy8fdp4dX4l8NryjHP/AlBC4dutSkXIxOfnxYGFco0
vZEt+cKBFlzneM+78VZA/X5aSB8zucsi5PKvTRMt3LRwhN1RXfNGQH1/Wlja
pbJAgpzFjQ8N0kJNnTrDFZn4/7RgabclKec15pk7vQzTwhufmMTFyMQHqIWF
F/NP/X6FeeYXqLVQO2TCVRky8QNq4e7Nj8V9kWcUSBY0jNOCKDCjPu+lgPoC
tSCpT+kTiOzSnGsIaMEoLQyqeyGg/kAtHGjf4YQS2YwXEOD2lAp+uSMTnyBu
j++tZtx5jnnmxglna+HpoOtngpCJX1CL969x7U2Q+cuNeVoImbtRon0moL5B
LWx1D7fzQOb1JYu0UPoyTvegTED9g1ooX5HpFowc4sxNpGtBeK3hnjky8RFq
YU6lz6b9pZjnxdwvphbWVKW7DEcmfkItxNxxKS8swTzzA3ZaMI88lrQOmfgK
tZBj0i+qOTI/XhymhVmBV+YcfSqg/kItZB/0GTEauYi7/diihQfXP/cqLRZQ
nyFur1v7um5CPjOWm4DWwvrLXXrYIRO/oRYWGS71T36Ced7KnaG1IA33njQR
mfgO8fif8nzl68eY57T4k86MFqq6Bcm2IRP/oRZcmr3Oa4M86mvlk+VxWkg1
nd04rUhAfYhaiGubPsMbuQ1fN9CC19xmBz8VCqgfUQv1OVPq9yL/4B9H4PYP
3bKsCzL5eFp4vlT8KPMR5pnTMRm0MOCYePo8ZOJPxP0xeXNB1UPMc35E3MJD
WnjpP3axCJn4FLVQ8ubbr97I0c3KLukS8fj7uU2dWyCgfkU8nhM+jQtEDuAF
U1roUzHwd32+gPoWtRBZNfeiBpmvH6VoYb7RN9oDmfgXMc+BLr4FDzDP3OPJ
C1rY9S3ffQ0y8THi8bt5mmMz5E/ctFkm7o8WmiZH7wuonxFfLyet0RjkGz3y
DA+vaWFsisHi2T0B9TVq4d2HWfYRyFzb2TZPCxO3P+jdGpn4G7XwS9Bq2rm7
mGe+4KgF+w6dNk9HJj5HLXjP+pr08Y7AOJurIxZo4dOobZ/2IhO/I+7fursD
uiL35ZYrHmvB4nDJnqu3BdT3qIWCKUdezkfm9XJleHy0cJlQc0tA/Y94PFos
Py9DfhXJDcRpIXHanH7uyMQHqYVLDXVn794UGDNTN5XufacFGDJn5Cpk4ofU
wqaWSx5ZICu/FDe98VkLbqfahB3KE1BfpBZyu2/vAMihXD35uxa6q+IflOYK
qD8St2fXSbFbkPnly19a0Lw77tMamfgktTDa9EzXlBzMMy9o0MJ9xby6GcjE
L6mFz9cOv/h8A/P8YOnVTBMd3EyMv8sgE9+kDrqtcszugfy0KWdY1MF4F8/s
69kC6p/Uwb8mf+8uRuau7odZ6iDF1edl3XUB9VHqYMIFqNcg87oCWx24PbjW
bQgy8VPqIFj9eHbhNYFxJTfO0FoH24dGxa1HJr5KHWwrOptvjTyW+7rtdGCq
3OCUnCWg/kod9D9oDJuMzLUb+3fWQXpH5aN3RgH1WeL3GVztuQf510JuAVgH
PVoWn+mCTPyWOnAogT7GqwJjgTKs1+neOlh1sVfKAmTiu9TBpieyMX+uYJ4f
FM354qYDp8CoEhUy8V/qIGf3qygPZH68yUMHC1dec3mUKaA+TB3M92z3PBSZ
P/0N18GlPp/01sjEj6kDk//cgpIvC4zD+UKiDoa2/TB4CjLxZerg+/qWLT9c
wjynLrIqH4/b/0Dyr73IxJ+pg/uP0t52Q674nDWs2xTc/p69yq5lCKhPUwdq
y6bPFiPf7M5NIOjgzHrv9/UXBdSvqYOkA/V/dMj8uKOvDm7ctm0zHJn4NnVw
oatgVPEFzDN3OeSvg9zSRWs3IRP/pg4yeikTWyHP5fRAi3VQMtr1U0q6gPo4
dVDj12HwLOT+vOBHB8sT/ov5dl5A/Zw6+OVt+SkOmX8atkoHTQ9a+PRBJr5O
HWy+6Zt9O01gfBfBCRV0cLj+18hVyMTfqYO1Wz5da4KcxY0/b9QBrO/rfSxV
QH2eOmjofLV8PDJ/exShg9bXtHvfpAio31MH62Ou9duFzNsAtusg+pL7q87I
xPepAw/2nd54TmD05gfwdVA/4NXSRcjE/6mDB1Ud3evPYp6VAfNbsHh8NE1o
okcmPlAdPEte8GE4stmDK4Kp8TrY28n/4dMzAuoH1YFlgiRnCzKpQ+jg3Qrz
647IZDxCBy0yzuSlnxYYL/KPS3B7PpI89kMm/lAd6GqOV1SfwjxzurMEHaxb
XmUjRyY+UcxXwLrhA5FDUiaMHH8Y8+rUfu3DZAH1i2K+K6pPrkee8Pl48K7j
Ophs/bfSFpn4RnWw7Jrr6LNJmGf+Al8Hr6bsVXsjE/+oDs5VWPypOIl55upR
Kbj9vyctj0cmPlLMjyq8uC9yEff49KIOrjov9bt3QkD9pDqoextSGoLMpXfr
FR0o2qiCrZCJr1QH/zV9bpp8HPPchBM46iD/LxyZikz8pTo4OfzyjM+JAuNy
fuBMB1NbzDCNQSY+Ux0IMn9d7Y08KoIzAujglCR1z+1jAuo31QHzeNfsYGS+
LvlQB0uKAl2bIxPfKW7v4llWJ49inrnllCc6iO0z49dkZOI/1UFx+zkfPx4R
GO9x+sYyHdhV/VfOIhMfqg7eN0R/6oWcuIATIOD+jz1Ue+uwgPpRdSD6mGcT
jBytGBcT8h7PT8sr3ZojE1+qDt5Maed/8hDm+f7Riye/6KD0y7iYKcjEn6oD
vWZ17qeDmGf+gNZB34Oi5jHIxKeKn8f39FxXZFt+YF4HY8xyT905IKB+VTx/
mhRZhSB/2nJ3dFAdHs/6pxutkIlvVQc7XR+WJ+/HPJ/rt/ZwIz10+5e5eDoy
8a/qocVq9euvCZhnPJhfNdaDTXbg2nhk4mPVQ2hAOzM35Ah+gVUP35grBx4Y
BNTPqofsA1MmhiLP5nQKdnrQ1hp/2SITX6sedO/anzmnxzxz4xYOejweF4T6
IBN/qx4av9w5vEqHeeZ2R3s92Gr3tZAjE5+rHnZNDPk4CPl1Y+6CXA9Fo93v
F2kF1O+qh9/P8y9vQs4ErvCnh1lbp6U4IhPfqx4urzt47qIG88xNK7vqYa/D
/Qx/ZOJ/1UPE7fzbf9SYZ06v4q6HgneJb3XIxAerB8ib1WQk8lRu/GqwHj7l
3R3wXCWgflg9rPNy/G8Hcg9+QEwPz/RuRzojE18svr9rq0/XlJjnAM7gpQfT
mdlDlyETf6weuqwcITZHxg+XeccLv8/DyMqjCgH1yerh9bcd/hORU+/FfWw2
VQ9HO06+80EuoH5ZPUQbC72EyPGcbmmmHnoO7HLLFZn4ZvH9S/r43ZNhnnlh
gR4eO/76uBaZ+Gf1sHvaVoEtMn+5Nl8Po0sv9U2RCqiPVg91zqlls5E7nHPY
b7pED+1lgfKfEgH10+phw+48XxVyzUfuANTD5AUvnYYhE1+tHvx3JX0rEWOe
u3ID7nq4N7/n7Shk4q/Vw7ipPqc6IicFcHfUeriZ0VuTJRJQny1uT6szcYHI
/Hj2Rj2EJT0TmiMTv60evtSliY/FC4xLeIEefr5VA/dPQia+W3z9eXPTP8Vh
nvkFUT20GdjpcSwy8d/qISuQbeiH3IoXLunhwUy5W0GsgPpw8fv8N2pVGDLX
7qlm9XDEdl9Sa2Tix9XDjQurfl2IERhvnRUOGSDSQ33e+8nzkYkvVw/2pxqO
1gkxz3xdQw9DHiU3349M/Ll6sEqs3DwGmTzO0cNhxc2vb1gB9enqIcpqYMg+
ZF4nmID7K6JflQsy8evqwWFqxq47DOZZbo93DHowqSxotxaZ+Hb1EPlk02Vb
ZCteGKqH3uuPLU8VCKh/F4+Xvosd5iC/s+AGuvTwfev+/Np9AurjxXzcD5Lp
kPn6VqoenJRnF41CJn5ePSSO3z7g1V7MM/d4N0MP3tPuWe9BJr5ePWR00lc5
I4efbcArVD3U9P/48tYeAfX36mHfr5THIcje/ANAPcx8VVNog0x8vno4tSK9
NGU35pkXDOhh8d8vn/yQid9XD4pWWtPfuzDPeDR3uK+HDz0zu+qRie9XD0uS
Zk0F5OdcnfORHta09o96HS2g/l89fC3LP78X+SK3mlKsB5eICzUuyMQHjOeD
pZZj7+7EPHN61Gd4vrK5I1+HTPzA+Hl/V39ricxN87d+o4dDGsHs9B0C6gvW
Q8CqaKM/8sTNtiNmf9DD2NcvB9ZvF1B/sB6E24+cPYDchbPJfMXj7+Jtj/HI
xCeMx6uVT/b7bZhnrt79Qw+Pqob6xyATv7AeSj9vq+mHzC//1mI+QjslPIwS
UN+wHrwa2k/fhHxmvqZyar0eVrbcYN4OmfiHMZ+9O9+4shXzLPvrJDQ1gMmN
7rFLkYmP2ABJC7cvsEBezl/wGsB+k6vHiUgB9RMbwD+2t8N05FF8oc4A5p0j
/1VGCKiv2AAW59p8lyPzuoeWBjhvNP88FJn4iw1QeNfza9kWgbGKGwdxNIDQ
31izE5n4jA2w4r2weQ/ke9zh0sEAS2oNPW5tFlC/sQGKrGsmrUFO/MANYBmA
PSXfaIdMfMcGODk3/Pj5TZjnLtwZxgC3xKq3/sjEf2yAl2W/XRrCBcYFePW3
tY8BZmRpww8hEx+yAZ4at9yegDyY07/0N8CpJdKenzcKqB/ZAAtd3sWKkPnx
sMEGeKXf8GcgMvElG0A5fnBocRjmmfv58DTA6GNuFVHIxJ9sgKaTF27sgpwz
kjuiDRCVdsU0d4OA+pQNIAr11gQj799UuzplggE0FnZDbZCJXxm3f53Ji9T1
mGd+Bxug8plT/Dxk4ls2wNuBK7zqQzHP/AC5AbowxeaHkIl/2QC/lofdnYDM
j4vOMYCjn4f+8zoB9TEbQP+mw0YxclPucjIAjw+9i68HMvEzG6Br87meJWsx
z1JO2GiACZeO9dmBTHzNBmg5zKFHd2T8cYvqucIAYvsjPW6tEVB/swH6PpnR
by2y0pwTGhngol1rsEcmPmfc/7N+zr0YIjCu5/RwoQa4271iy0Jk4nc2wJt2
DQdNkady4+PhBmic3e1R4moB9T0b4HvyQqvpyPzt5VYD5Kw8Of1HsID6n/H4
FDRVqZA5u+6inQaQqjd98EQmPmgDpPWrGvN6lcBYwp3t9+L3KY06LEAmfmj8
d7eWLfoip/lzE1j4esZz2x+uFFBftAHy28+v3YxMdJEGGPe0WaQTMtFHGOCz
0GiW/R/mmR+Ywu9/I0KxEpmMlxigtt0QN2vkcfzjJgMs6PorP3WFgPqlDfBz
3flIf2QnTte53wADNWF9/gUJqG/aAB8Gur07glwTzk384P55/C5xCjLxTxvg
mYNmfeVyzPNp7gGbAfbHjh+nRCY+agOU3X/fwRM56T1X4Mf/Pzy64dUyAfVT
G+CLo+0HAfI+rl6WZoCR3tKnfZGJr9oATdIaP3oUiHnmHj9fMkDEi9WFEcjE
X22AjquznnVCHs7vEMxPpem3nKUC6rM2gJXlgKYhyK34gW8DTPKd1qslMvFb
G0D330yfi0sExm9m4pIbtwyw6qXn7kXIxHdtgM3zbTPNkW95/mhi9sAA5etv
1Z1cLKD+awMMyF7hNQuZr5sWGmD453eKmkUC6sM2wDDBpAoDMr8c9RSPn0HC
GeORiR8bz1+Sk+mfFgqM83gBEe4/z+POEmTiy8a8FUYnDEEegHdHf98YoH2N
R8fnCwTUn20AG6/so3uQudWFYR8NkL3QxcMVmfi0DRDwatndggDMs4S7oDSA
b+jG1VuQiV/bADFJ81p2Qr7G1c+rDDB4kM21nPkC6tvG4ytJuTkEWcctT9ca
QJX21cMemfi3DcBUtqzL8Mc8e644MKDBAMtMLW4vQSY+7gToE3d9fxNkzk4Y
apYAYwdN2XZ6noD6uRNgoU4b6Ifcix9wSgDpihTvurkC6utOAJ/h4vGHkc15
gWICrLg8YMwUZOLvToBf8Wqv73Mwz5yOwj4BoudnzVIj/8/SecfV9MZx3IxC
kRRCCMmOUjK+drKLsldWNhVRRkWnbGXmx73n3Em2CBkhO2REyCgk2Q1k/z7P
89zff+/XL3XvOefznPU8n7fo81ZRbtqeqQTm01Vqq2jwgqGRb/xiTP3eKvI3
T9atB/PDub6KXrV/lOEKFn3fKvLcerzc0+ExqXP4gnsV/cga2HUlWPR/q8hO
u2tFC7BXefaGUEX5Ku31u8NiTH3gKqoZMtF+CbhRlyceAa1VJKffDWkIFv3g
Kvo4+NuDq77IM6unaa+iI8ab3eaBRV+4in6vGHbIFvyQTV9zV5FH1Gqncz4x
pv5wFTmNmmOcCj7MTm9dVZR36E+bamDRJw526XTu2FDk2YG9kVJR8ZoGfmPB
ol9cRW7T9xeXB/O38V4qah6cm7BvSIypb1xF6jFnvIaBib/QU9GNW53//Bwc
Y+ofx/4NHZ+iAdfhhUEq0lV0XNEfLPrIVTTVKXZA0SDkmU1nHaGiX2vWOewE
i35yFQ140eZXDzC/3B2rok335zwvGBhj6itX0Ri7ftfjwMYQdgGooq2jz5zu
BBb95djfg64fzx2APB9gC8xUlCTPObEaLPrMVWRfcc95F/DYNyGjBs7G9mwZ
evdx/xhTvzm2x5XHBZFgXl+3QEVfYm6btwCLvnPs/0bDXe55I8+8EFlFC/rM
mBgGFv3nKoo1Vt3eGPye3f4uVdG1n10e3OgXY+pDV9G9otK6weDL11nhoYp2
9qJAe7DoR1fRHMXybJoX8lxuYpeVkooKzk+tMxss+tJVZDai1zIb8JLObAW1
iizrGN6e6Rtj6k9XkXJm3Zip4OH8AZaKjn//+qAaWPSpq2hzRM6I5D7IM1/u
oqLsagNyx4NFv7qKIvxdgyqBxeMw7N8a/1kc7h1j6ltHPr4vSxwJZm/fUmQV
2aRm+5QFi/51FfVvlFQmsRfyPIJ9YeT3YbkTvmDRx66irO3XQ371RJ43sQnV
KhrbwMxTBxb97Pi8jifMBoEXsHrbwypKn5T95GuPGFNfu4qexC9IVoH58rfj
2P4LFid4gUV/u4qCT35a+aU78swej6cgj473FyaARZ87jv/ZTeb1BJfhL+BU
lOKTO+89xZj63VV0eX3lxVvAT/azgh/sz2c7YrqCRd+7ih7+2aR60w15zhu7
Zt8NFT3a9/nMRrDof8f+0Se99ABvaJB6oiBDRa2N2VYvu8aY+uBVNHP+tN5r
wTP4BZuK2qT6RriCRT88ji9fddqzLsgzXxCG/LztbxkDFn3xKrrTY/jEdmBe
7/1CRaH1U0497hxj6o/HeNI5vO5K8Pey/ea8fK2iPWO3RbUCiz55/P4eFkUP
PGNS73km7mz4DuNp4oPAFWDRL6+i7qO+v2kO3h/MJhCpSGs1d/a9TjGmvnl8
/o0eP8LB/G6hBPtzp9/6pmDRP6+iZSVpzTM8kGf2+vyHirpMiEpfDBZ99Crq
p9q4sDGYzVap809FTRe+a3bTPcbUT68mvTHuxUJwLf7ASU0ff6xUO4BFX72a
FrQ7P+16R+SZrZY0V1OxVR+3YLDor1fT6nE1qtQHs7aR+5Zq2vrc8e0VtxhT
n72abowMvzkfzOsybNTUMt72ZF2w6LdXk4VPSeIlV+SZf0A1VR5bUz8XLPru
1WQXFmSoDR7JJ0CraWFQ9UMXO8SY+u/VdKTqh3Ozwe15wbKaEqtXeGgLFn34
alrbd0TJ+fbIc17v0xbOarqz6HWdWWDRj6+mnjMT+9YC59dndyBq+lVgDEt1
iTH15atpYmr28RngC6w+p4OanI71Lq0JFv35avKNz+1xrh3yzKbXeajJtcmR
+ECw6NNX02zXo++swfz0201Nb9a/8j7bNsbUr6+m5796HZ4OHlqWrShR0zPv
e/WtwaJvX00ne62PP9MGeeYXWGrafDzYcjpY9O+rKWfWqrga4Ap8AZeaxnU4
Z3+mdYypj19NtR47HJgG5nVavmqa1GJPnxpg0c+vprclfnmnWyHPbLrtSDXt
NGu+bhpY9PXj77eu71kDvJldjo9T0y0P18+nW8aY+vvVdPTbrH3TwHP4hB81
re+YNrcGWPT5q+n2VY9OZ1ogz7xQUE3tw9ItpoNFv7+aLtcPe1UDzNq5OsxR
U3ZUr7QzzjGmvn811Q5rljgd/JvV6wWpaXpmox3WYNH/r6YKk13Xn22OPLPp
96FqCvo+dnUgWPgA1LRq8s51NcH89nypmvyWvN92zinG5AdQ06AqQ/bMAGNw
OdcySk0OH9LO24CFL0BN1z/1y0ltFpM69XWrDzNicHy/eWo2Cyz8AWqyNS53
tQUT/4VqalWh9YwLTWNMPgE1lbn3RjcbLOo2cXznJebbgUX9hprKWy92SWuC
PPPlOGr62XpQ1FywmJ6jph6Wzk/qgG/zx3VqWhxr0emyY4zJP6AmKeiLaj54
T5naGbKiJrXmcZV6YOEjUBN9vrTiamPkuRN7waWmNm2P/AwCCz+BmpZ22r20
AXgsL9BR08q8mIo3GsWYfAVqyreYv3UhmNfvHlHTtsjhrRqBhb9ATdcaud64
2RB5ZrO5kpGftGrzFoOFzwDcPaduE/B79vj+tJoeL0i8leEQY/IbqKmo7ayY
cDBbTVzrgpreD2/UzwksfAc4vlLSre43QJ43XK06/Ao+b+cZz5eDhf8A48uR
0qQW4DDWZpmupoDSxZse1o8x+RDUNOLd2+Ao8HBWx30H+2Oy1/g2YOFHUNPf
rpuHPKmHPPMJOmrqMiLdSwILX4KaCtZ86tsezF/nZasp8vivgc/tY0z+BBy/
SYWj1oBfJR79vCZHTWcDMuZ0BAufgprOqDfHvqyLPL+ywR5R06h+XRM3gIVf
QU2LPNPveYK312MPdNTUeXiXcvl1Yky+BRxfIRs9NoN5Pf8XNZ1bnLaQwMK/
oCaXHlmn3teOSR3Ilu9/VdPx/dcr7AALH4OaHuxM8O8NbsZe7/9U05T3fQ59
sYsx+RmwPZffstwNLsP/k2mZa9uF3mDha5DJ6tOMl19tkW/+AFmmRuuW+mvA
wt8gU97nqXcHg9nVdbeKMmX9bDLsV60Yk89BppMbTmYbwV68wEKmjesdZg0H
C7+DTHsfjyxbFsyeXi+1kOk/v8mqAzYxJt+DTF1fd+05Gtx4w8IF9tVkOhSY
/8EMLPwPMvlfGa9KqonxIrFZbIqVTM9yNP4TwcIHIVOHXUdrVQP/ZnWh1vj7
T9dln7KOMfkhZJojtdszDTyD1YnYyLRu+a7wmmDhi5CpeG+G3/kaGF/Yahk7
mT58vNZxDlj4I2QybxfToC6YT0eqK1N9f/NqV6vHmHwSMvXsO7hcCJg/rqwn
0+M3w/82BAu/hEwrG9Qre9sK4xEv7JGpRabGIhwsfBMy/fiUX7c5eO0CVvgu
02T/dy4PLGNM/gmZ6hXtGRIFLl1/qGtSE5kaJDYOaQsWPgqZjNP81U+rYfxK
nMgMAuRZvdfd1WDhp5Bp18Z8c3fwvSs1ZhU6Y//d6un9umqMyVeBnz82bGMc
mJitoBW2d6s6T7uBhb9CprIN49t+qILx7l8wLvBk8l1ydnUCWPgsZNrTeOe7
vmBef+wik2Lm5FtiEWPyW+B4qj75vALm9UiuMg1uMchtCFj4LmSK7/768G9z
jI9s+aS7TDu7OXVIBAv/hUx+1WudGQGexAUXMn1T9g+oCBY+DOy/Fx9yj1bG
+Mlev3SRqfyJzOUTwcKPIVNjm8mNLcGd2eVZN+z/19tunq4UY/JlyJRWa96y
GeA9Vwa4r+4hU+zWd652YOHPkOmFT+XiS2YYb1/9HtS8t0w1Ol09EQQWPg2Z
9J2arWwIjvp3ADe0Mk3v2cTvdsUYk19Dpqk9z7deCv5sz2YcyfSx+Y+qLcDC
t4HjNe9WUVYFjM98Qa1MDQO7vogGC/+GTEflvvc6gG8MZ4WM2J8r3qbnlo8x
+ThkWvi10c2NYHdW5+4jk21x4b2uYOHnkClhxoic9+WQZ1b3Nkym0f19ShLA
wtchU4n03LIfuAZbDu4vU98af9t+Kxtj8nfINDf74AgdeDmbLj5KpvSsz9G+
YOHzkOlfaWpKGTB/nTxGpgKXBt8Olokx+T1k2r/Q3GMcmN9ujpdp34mIiCpg
4fvA9n4flXHqn5TK7o7/TpTJqaJV00Cw8H/g50sdI23B/GnmZJkWp5x/demv
ZPKBIP/0emAwWB7O7/ApNXz9mUZg4QdBPqeebn/nj5RabcH+tdmBMjkUzj60
HCx8ITL9slHatwaHrR+nCZslU8oV/zPZvyWTP0SmFb/XDVwDzt9rearOXJkO
7O/5ygMsfCIyvb21KCL/l5TK9RTzZbIe0bzJNrDwi8g0iPxv9wbz+spg5H3Z
v+XFPyWTbwTjp4VjRw2Y11sslCnwWWrxULDwj8jU/FPmiX8/pFS+/GUx8uk2
KeogWPhIcPzsmzxsHNhcFKbQAe/sFlXBwk8i043KVyufLpVSF/HCbZl6vGz6
cQZY+EowfmR8y6oNfsU+XoRM9294XL/6XTL5S2R6cuvd+UXgoeu3z7VeKZPl
/SqpTcHCZyJTmQc70zK/Saln9/aLPhItU+TtbbdXgoXfBMdryt8X7cHsZfjQ
WJnUW+5+z/0qmXwnyNNIS9s48PaX7AQr05kyxzy7g4X/RCbdmgtTP5dIqRX4
C1qZqhW5bVeBhQ9FpkUdqmcMAgvdjkzygCHV/hRLJj+KTNHuRT77wS94Ha9M
E0q+7xoDFvV8+P0rJnyyAA/kdT0yWWQ59U0pkkz+FHyf0iG6GeBTfDmfTB4v
H1auAxbT+zFexZ8OvlYopTbj0/1k8qn853UoWLz+x/buuXOsE1i8DsD4Q/FP
Hn6RTL4Vmbb8ezVeAovLBZmKIjcUuIGFfwXH35VNYXmfpdQ5/IYC4++tghpb
wcLHguN1245DvcGsbKeZXiYvx13DSj5JJj+LTBeDi/9owf34gkbkZfXug8PA
wtciU/aUhKnlwcfdWSEezgeV3zRO+iiZ/C0yVVkY9SYA3JgLVWTqfWDOYWuw
8LnIVCfJEHHxg5S6cT5bUSTT99hWI4LAwu8i0xqXvx0ag3+zevGjMp04VNfu
3nvJ5HvB/jKLLBMF5vVjx2TSdGr3xQUs/C843gc6vcl9hzyz5ckncLz3nPoy
Dix8MDKNa1jwuge4l3iAQhbvjnwsLJBMfhicP3Xnfitg/nrzDM4nwyytfcHC
FyPTwd/q1uXADfgCbpkm6YOGHH0rmfwxuN7wjQ4NAK91ZwWgMmVYZOmtwcIn
g/Hk/rQnF/ORZzbb55JMn450qBUMFn4ZmXYc6OLvCJ46nzXgyJR8M2L3/TeS
yTeD8dr237uVYDab/vF1ma5uSu7mChb+GRzvvQ07Xuchz3u/FSy+KdMM91ul
W8DCRyPT1qAWE/qA2WpV3CFQ9J8z6V9fSyY/DX4+Z2U3A5jrEu7ifO24/IQ/
WPhqcH2XkdixEjiG1SlmyvT7Y+UzJ15JJn8Nzqcx270CwSWsbuGhTP11fo9r
g4XPRqZRQ3ouuP4SeeaFxzgfx421CgMLv41MNou0SS3At9l0jac4vivajs/O
lUy+G/y9AUmW68Cd2eOc57h+8g273AUs/DcyzWo6M+pjDvKMm7kFuTLdvB3Z
RwUWPhyZhow+bzkEzI6W6q9lirrf5Pm/F5LJj4Pxs+/BpMPgqMu5Nw+9kan7
uTEbJ4GFL0emcv1aLbAGf85lL8iQh88NRqU9l0z+HIwvF9t7hYDH8QUWMh25
Oa1zU7Dw6WD8tE9xe/gMea7LCnpwvXumZccYsPDrIP9nU7p4gN15wbtMLi2n
eRc8lUy+HZlCbFqP3QnWsXrYYpm6xFguHAAW/h2cn+PMt/zORp5Zfcw3mahX
/VMHwMLHg7zt7fd6PJgvL/shU5sHa2pVBws/j0ztMl8OvPAEeWbTz37h+j95
yJogsPD1yHR37Z1bjmD+ePqvTPZTptg9eCyZ/D0ySUMspkvgK2zzlVFowfgL
Z9zBwuejUIgSW7vgEfLMF5QpNN55QthOsPD7KNSxUu+XA8ByXVZIppDHwI5D
/2RJJt+PQtnmbpcOgqtxoYVC132o20Sw8P8o9MZt+Lka4LBhcRaTqyjU/1pQ
77SHkskHpFA/+513QsD583qyR4Y0tcf1gGZg4QdSaNKgfz+zHiDPbDitrlA7
384Jq8HCF6TQn4ClXTuDed11TYVabr6Q/yFTMvmDFPL9Zr5DBeZ1WLUU6i4P
HzwULHxCCv3WyRblwLvYctnaCl2o/fFm0n3J5BdSqEz1Tlungs35Alp8HvXK
yXZg4RtS6GJ2uvv1e8gzL2DE9nlS3TocLPxDClU97FPUCvyKXV41VCg1aP2j
53clk49IoYoeaZc2gdns6p+NFbpRqyi5J1j4ifB9G9c5VHIHeWarYZoqtD7Y
/YABLHxFCs1tOPDISDBbvdipuUJbyf+0BVj4ixT6kT88/UwG8rznORKn0JV2
XrlzwcJnpNAEl1Z/GoIr8gd2Co0tW97h/m3J5DdSKObkjb7R4CA+4VOh13Oj
QtzBwnek0N4uznsKbiHPrL6/vUI9Pc/l/gcW/iOFhkR0bzQYPJAXzipkcDo0
rQxY+JAU8vE2P3r0JvLcke9h2vh3UPmpYOFHUihz4tLRdmC+PMATx9fqzSeu
p0smXxKOp83xdZeC+fSBrgrN2L54ZRuw8CcpNPtw76KcG8gze7xACt0q/Tpt
M1j4lBTyXLs2tw94zp7aOAQV2h5VIaD0umTyKyn068eEt4ng7EvsBYVCh6vu
DhkHFr4lhdwfpphVB/fjE9wV6hF0UnXxmmTyLyl04veWLgvBx/+wghSFkuKG
5DiBhY9JoehB+aufXEWeRcE2HRo4ptN6sPAzKZS/L/ETgTd2ZDf8CtnFZu4t
uiKZfE0KjfubNVMP5joSX4UsWh1zGQkW/iaFtG0C/1qAeV3pcIVeOBbfOXtZ
MvmcsP+ch++dD+Z1JiMUajR+TYwjWPidFNrxYsush5ek1N5sudNoheJvBvmt
Bgvfk0LXejn26QI+wqZDjVWo6RS95+c0yeR/wvE2sNRNA27AF/Qgr/Xs3f3A
wgel0KCSqt0qg9f+4YVQNKfoZv/TFyWTH0qhvu6jx80Fl9ZhDQsKlbxMWtgI
LHxRCl2u9Xhz5gXkuSObwa1Q5y/XTsSAhT9KIfPNUbme4Hu+7A2RQrYOFWt8
Oi+ZfFIKLT4+pK8CZltv0myFloZOihwOFn4phVRSp4uVwOzuo8w8hTZUyKp8
OlUy+aYw3tTs5DcXXJef4BRamzne2Ags/FMKFc30+pd5Dnlm9cshCmWVFo6N
BQsfFfIkjzvfGVySwxcwUkn0aufPZyWTn0ohm/SQHRrwJF6Ap1DU5gbV/MHC
V6XQwXJSjDmYT+9ciu/fJbHS2TOSyV+F8W3ymvXzwfz1z3KFvu5uWqcJWPis
cPxYhidmnUae2e6NVGjX49U91oKF30qhAU18nncDs9XHP1Yq5FrzTkRRimTy
XWF8Ta/obADztghJofsLCh+OAgv/lUI1W8WvqQb+YmQ36AppHPJ7XTglmXxY
GI+DPpdbCB4nJtzRU+/Eq83Bwo+l0M6btvFPTyLPOWzBNsbHhq4Bm8DCl6XQ
l9llPXqD3Xnhp0Lns5bVLD0hmfxZCjWI3VOyDyzq5BVqqI/IngAWPi3kxb/i
tZpgUTeH73PRLeVqsmTyaykk16hxNBwslqNj/Jm17VBbsPBtYXwqvXT01XHk
mU9XV+hnzn+nt4OFf0shZWDdGwPAo/jrbJw/ptDzf8ckk49LobI+FqVJ4Cv8
8k+hJZ3D7ALBws+F42fghi71wB34BGOcnw72mX4nSTL5uhSat0a9fRVYzmEF
FQodNf/vlgdY+LsUCvZ3N/94FHnmBcfI487g/gpY+Lzw+8sMifMDh/ETEs4n
SdeemYOF30uh509ftD13BHl2Y0YXjD97NscEgYXvS6H63V+9bgbmt4OHFXK8
c8sr+7Bk8n8hLyt9D28Ecz1GkkIfo+c36A0WPjCFypd3ii89hDyz+szj2H/N
FlY5ABZ+MIV61x+9ZhJ4F6vXOInjw/qBpS1Y+MIUquSat+PGQeSZL6jA9jiw
uvkKsPCH4fvtu3C2A3gRL+TBeDZ23ci3BySTT0yh/z68Ld0F5o+HzisUsPqh
ygcs/GLI28Th/c3AQ/kNNba/etKvlP2SyTemkPXCP0fmgc+6HfaLuqzQNkun
uU3Awj+m0O6dz9o+3oc8+zLDiUJGr4bf14OFj0yhib0/pfUE75jLGxRJk9p3
2/dEyeQnw/j0tvnc/eCKa9MSJtxSqPanzQMmgYWvTKGCf1IbW3AQnwCg0LJB
Ze3S90omfxnOZ2blKkaAX7DZPPcUajYmttQVLHxmCnmFby4s2IM88wIy8PbG
X1Rg4TfD53/hWjIMzOuCshQqXHX9T2Ww8J3heDj5ouo5I/LMlhM+wfZIXNQo
GCz8Z+B16zs3B/Pphs8UCtroOOaZQTL50HA9lOceEQ/mryNeKHTk/PVEL7Dw
oynU2vfRk9965HkuM34o1OdmQPWjYOFLw3g3KXDAdHD2GnYCUSi819u19cDC
n4b86XPv3tUhz3zCE/5+yrD6MWDhU8P16bGuc7uAj6exBbMK1bumulSolUx+
NVyPOi1qaAQ35oWLuF4wS4scCxa+NZyfdqx6WwPM7BLBnzGe1kgZflUjmfxr
CkXqA64sBXN9WZFCObHLurYHCx8bzgefzVPyFeSZ1ZuXKPTJslKX3WDhZ1Po
Ud2QNF9wFqs/+65QaL+hQyuDha8N///mzpdnZeSZLY/+oZDbM9+wYLDwt2G8
Pxhq5ww+wqZP/1YoMbRyynO1ZPK5Yf/MqRCwBdyAT/BUqM7lmVb9wcLvpqGH
xz0v/lMhz+zwK6uhdQuDw46Dhe9NQ4meNh6zwKUvWMGshtI71/vVECz8bxo6
eWhN2sPdyDMXlGko4Nb4uHVg4YPTUEH69ik9wfdqH9Ammmto+0vXrqW7JJMf
TkOv+rnZHwST2/gU76oamt9xx9/JYOGL01CVV2Pz64AP+FjdfWupoQNS1IOM
/ySTP05DS0dVvh4NrstORzU0dHXzxwudwcInp6Gqc13OF+5EnpmuwUZDXxre
TzOChV9OQ/3y7t4cBy5hdY62Gqpe0iq7Jlj45jQULL36dD0BeeaFKBq69KCk
UgRY+Oc0tMp+YrOOYL4cpJ6GxsY16f9hh2Ty0WnIcUGPYA24sxjw6UnJcWUk
WPjpNLTfP/KBJZhfnjbS0Oc7GsvL2yWTr05DzVR1BoWDbXH2zXXU0J/S15tc
wMJfp6EB9So8yd+GPPt4745opqEavRY1V4GFz05Dy/Z4Lh0O/jLnZ5KDs4by
YoY+sAALv52GbtQ70eHCVuSZv4DF59PM2R4KFr47Db33Cy7TBsxm441ro6G/
C67Ofb1FMvnvNEQdZrzcCea3q+00VP7hiDE+YOHDw+/fFv+4EpivdumAnz9a
e9y5zZLJj6ch96kFeSFgXk/bUUOHP5QPaQkWvjwN3Y+eXullPPLM6ms8NFQ8
p6a8Ayz8eTheX5p1GwL+wJa3ddaQV6MeuRXBwqenoaLpF1afiUOe2fS3bhpa
XSK5B4OFX09DLhXj3jmDr7DHV93xeR491+Rskky+PQ3Z7J83cTu4A59woqHA
1J6Og8HCv6ehMj4j3lcAs/bqr300lKHef/L0Rsnk49PQ13c91gaBq4nCOzq1
wHayM1j4+fD5g52752xAnrkwRUPm7cIabwcLXx/+/ZtKFoPBzOZ1b5CGOj+6
+60CWPj7sD16Zb09vV5K9WOPs4dqaNxMu5wgsPD5aSh3bdxTZ/BFptMapiHr
gt7Pc9ZJJr8f8n2xXd52cFtWt+2noQ2jhhcOBgvfH/L+6WA5M/AuVsc1EvlN
ozpn10om/5+GfOqYuYWA+XLd0RqKcCnr3xIsfIAYXwa1W/pyDfIsFmhTy8Px
xgSw8ANqKGqn06OhYP56a6KGzIZ8qlYZLHyB2B7V3/RLXY08c0GUhio1tFy9
CCz8gRoyXJh6uzX47K9XZ2dO1dAR9w+182Ilk09QQw6X5cBd4Ja1WUOXhqod
iDo7DCz8gho63z7Orgp4hytbAaihvQnpiy7GSCbfIPLc1CV7CbiiD5thpKGE
Ohd6u4CFfxDHW0pY0lsJeeY3mBoKGTDOSQYLH6GGRtUIlEeAuR4wSEN+Q3c2
sAILP6GGPg0sVq5EI8+8kEJDmQOCWiwHC1+hhp7H2Z50A/N6wVCMh1Ne9P+4
SjL5CzUUWenmSx2Y1w+EaWjjhewVY8HCZ4jxJataYxvwFrY8YZmGFm6cdD19
pWTyGyJvbR4uXAkuy65OV2jI+9dMp85g4TvUkH9nh+dFUcgzi0eUhmq6FSUk
goX/EON3m1ejA8DZQ9mKOA35zitsWBcsfIgYj7rW+3A3EnkWD8jp1/OAM6vB
wo+I/7/rUlwPMJtNW3+NhsJPd5/9I0Iy+RI1FLvq4YAj4Ma8gEdDh7pFt5sB
Fv5EHK8uA+s2ArPVamM3auidroX54xWSyaeIn89x+LMJLHSn2N6tWn7rBxb6
M3z+uwNKyoBnch0K/r9d5PeTyyWTb1FD27xu/JsPzuJ1qRpas7dZNWewqE/T
4P5xq0PuMuSZ16kg/0627glgsbwa491D4zAf8BG+3EpDHtneC83Bws+ooeYR
v/67sBR55i/4NWS0PHN1CVj4GjW04M6aUhewuHzW0Eyr6W3ehUsmf6OG/qs1
dIYGzGwhw3Uacm3dZ+9osPA5YnyR+3yyBk/lwgrkIWWoR3qYZPI7aiju0tSY
leD7zMa3F+OBxarszmDhe9TQmKxE15IlyDPORu33Y/xa+Dh+P1j4HzX0r53V
tyngA3a9Ot09iONv+IDx9cHCB6mhwpbr0x8sRp5duRGQ7pXL7LoBLPyQyHtT
h+N9wVzvdExDMc/nuPwLlUy+SJx/w1OPngDz+udkHC/9anaaDxb+SJxfNgVe
ag7m9VCnNNROc2547iLJ5JPU0I9rNu8SwHz56GmM174zV/mChV8S+V1zzrEK
mE8vPaehb+eqX0tbKJl8kxoa2XXigqXgvezx2gUN5fjud3ADC/8kzs+DSu59
DEGef6V/up6moTdL3NcawMJHqaFyTgv7TQCvtFtWccYVjHea/Ra1wcJPqaHN
ns/u3glGnjuwGQMakrqaqVaDha8S48GPZvN6gsfxAVBDtc916/MrSDL5K3F+
ejyw4THwjdlsQqeGDiYMLTMHLHyWOP8N9s5rCuaP2++w7dcx4/kCyeS31NCE
TNtz28FcV3cf37fXuyNDwcJ3qaGdrw8lmoOtuZAM+ao0fc/F+ZLJf4nz5x/L
feHgFfyFPK7HbIxHXcHCh4nrld1tUj/OQ57ZcvhsXI+9090xgIUfU0NNvM3z
J4BHsenyz3F9UmVMuTpg4cvEeLMyofG9ucgze/2Wg8/zL81rLVj4MzUUfe/x
Alwbp3bgN3A4Pwx6Iv+ZI5l8mhpadP5SZjKYzYZ/nqehwct3VJsPFn5NDbV5
NHyAM7gaL0DR0GOHH+tfzpZMvk0NdTSuevAfOIwXaGN8O/+tkR9Y+Ddxfjg7
ONgS/PYCEzAiP1/WXr86SzL5ODV0dP+BJpFgP/Y6/gu2f++kVZ5g4efE8W6+
q6B4JvLM9JtFGvo5ZPqwA2Dh69TQvJk2F6eB27K2xK8aqrVf49YQLPydGuoU
WOPg4xnIM6vvLMX5uGhCy81g4fPUUMnu9QcGgnm9x08NZZ9LcDUDC7+nhvL3
rDyfGog88wU7Gqp7uL/PErDwfWJ7N//0pj2YT88po6XD0+ZEfpgumfyfWrpx
7mpDA9iHCwO0FBr9+9IEsPCBammOVZW5dcDnLvABi1YeKbK/P00y+UG1dOz8
0dvrwC1xtVZUSUv14/tLfcHCF6qlsuGnepYB72C2egstXbrzt3zKVMnkD9XS
57d1bgSDK9q1nNmumpZa1bHY2hosfKJa6n/i9pT8Kchzh6cRGVZa8qwzvZMC
Fn5RLVXfes96DJifzq21ZBZZvdAGLHyjWgrp0DDz9mTkmS9Q1NLjcmXPxIKF
f1RLD/oc3dMTzOuI7fD3h3XY+TtAMvlItZQWuXJTMthJCFJI21yzdj5Y+Em1
9FO1YW0L8Ba2nLGelmy69Nv0epJk8pVqafKI2wkqcFk23dFBS0v7NdwzEiz8
pfj56V1PW4Pnssv7xvj8VZrevzlRMvlMtTRg3cPPEjjblj1B1VKFXj41eoCF
31RL82K2uP+agDx3sB003UlLhUfUAcfBwneqJSv7oPh54OND2IQ6LS2wr3LV
GSz8p1rKrTKzzOvxyDNfkK2lgX02dFOBhQ9VS+cbhkaOBG+K5YWeNPe743Vr
sPCjaimx8ZZat8Yhz+x230VLBb+uTIsBC1+qli4+PX2mB3gmf2CspU8Ngux+
j5VM/lTs33oFi5LBWaxe3V1L99s0zJ4PFj5VLe09bNu7Jbg3q1/rpKWqv9OP
5I2RTH5VLU2cRU1kMF+e3UVLLUfN/280WPhWtVSz4Xi7WmA+fbubll7Wrbwj
Y7Rk8q9qKVI3p/4aMH/810NLf+02GHuDhY9VS9F3Ajv+G4U8z+IFFBTo/Of6
KbDws2rJdnn/gBDwNF5grKXGLYb+awMWvlYt9VxdTSkYiTzrmAAP+/N7pJcO
LPytWupwZ3/ReHB3/sJbS7Xmr9fUAQufq5acOziOyByBPD9bpJwarKWbC+dU
3wgWflcthW2ZddsbzF8H+Gjp7vt6cRXAwveqpU2PIkam+iPPTAc5TEsJJ7Y1
CQML/6uWPuSN++oK5jYBfy0dPP/gxmc/yeSD1VJD/R9dIniSWDCB8TFz5VSw
8MNq6U6ZMdMbgjNY3cQYLXXusHFI9nDJ5IvV0pG8+V22gbvwwnYt1Vv0r7UP
WPhjtRTT07NJVfBe9npwkpbs9zZ0uDpMMvlktdSk8tEGUWBbPmEPx/O5j427
goVfVksznO+3LPVFnp8dxh2XlnL2TOqUBBa+WS31+m/HgLlgNpvmS6CWIiaE
BjiDhX9WS3uG/1n22gd5tmUNr1p6/9hZpQYLH62Wdg7+fXE0+EZ7/oCXnKxD
PtQCCz+tlhxXbap7dyjyzBeIYX9X8Bm0Dix8tVryKzq2ygusZ78uWEu+B0+f
LwcW/loc/zumlD03BHnmggotBVU/1HcJWPhsteQQunOTK3gFHxAwfrZq9uLz
YMnkt9XS9zif9vvAH1h9TjjG60r11kwDC98txqePq940AvPldcu0tNmw1uvZ
IMnkv9XS4Pi2B3aA+fShCC1Nsp5vNxwsfLjY/7EDJSswH15WYjz3u/TjxkDJ
5MfV0o4nDxdIYLk9e0GtpV1hKz/1AAtfLsaXbdfn/RkgpVryBbFaGhu35+tJ
sPDnaqnRTYeIEHA4L1TU0rS9bazagYVPV0vL12Zq3vdHnmOYkEdLzzKrdzaC
hV8X+Xv7MisA7MdvaLT03Kn/kgZg4dvVUqXvfRyeeCPPXNetpaiTD65vBQv/
LsbnjNLFPmCh89JStupgq2pg4ePF+WbNt9fX+iHPvO5bS0UlGcoqsPDzaimu
p+fk7mBRB6alqw9dnX97SSZfL35/rdTiE2CxXBj7P+DRxWCwWD6kJU2jiG1t
wa/5dGIcnyeOz33fVzL5fLXkFrt4gBHsw28/tNSm9GqryWDh99XS11laawfw
uRgmINNS+34Wf570kUy+X+S58Nf7beCW/IGslobeCn3hCxb+Xy016L4syxLM
2i+XJGqp66EqmTd6SyYfML7visYPJDBrK659QEtquwtPeoKFHxjfN/vN67+9
kOcfVgUnDmmpSvvNxSlg4QvWUouIy2ahYP444qiWyrda1qADWPiDcTz+d8rz
c08pdRCfsK6lb65hY/aBhU9YS9PHn4uYDk5h+oITWuq2PDrRESz8wvj5n7cf
veiBPPPCbOSx884qu8DCN4zxUf+m50jwFlZ/cAbjo5y03AYs/MNaqrOlTOqd
7sgzf6GspYA3N8uvBwsfMY63v3aDvMH88eRFXC/0zt1ZESz8xFo65dD84wVC
np/uUB2+pKUa39/3Wg4WvmKMb+1bqT3B/X544xSMPHR6+/dbN8nkL8b5fKHD
5CTw8VrsBgT7c8Dd9Hlg4TPG32v2x6MV2JEv0NHSqzmaxLddJZPfWEvLVp9v
qAdvGsy+MfL60v+/SWDhO0aecqbUbQD+w15X3MX1xceC3U+6SCb/sZay5uc1
3Q6eyQWzWrqV6X90GFj4kLX0K7Jrr+pgrmPJ0tLG3B2PbnaWTH5kLT0aGxi0
GszrWh9jvB23r3pfsPAla2nEwElJ5cC8zuWpls5uXj061VMy+ZORr92OZkvB
fLnXc5wv7rVJ9gALnzLOp6rEmV87Sanr2OvLXC3tm7HN8ShY+JW1tFpdmDMX
/MOFLUjE+TPxtKYlWPiWtXS5uDjwrQfyzAvttNQ2P6GDHiz8y9j+n/eXCwDf
n8mEKPj3i1o9bAAWPmaMj/l2B7PdkWcROEo5MHfNDrDwMyOvru1m+YH50/FP
Wsp/M2aoNVj4mpG3doWdMjoiz2w6QyHOj0s/O60DC3+zlrw6+tf1BvOvW4zr
zxtNapiBhc8Z15/a0VXT3JBnppf6hvG37fcqEWDhd8b4n/XDqis4gL8AxvFi
EVD7p6tk8j3j83Ro2/QEOIPVU/3S0rbUiR1DwML/jPNn3W8DXMBdeIEn8nnk
09RPHSSTDxrn3y/eq/aB987kM0Job+9KxkCw8EPraL19s9tNwXz4K6+j/Fz9
j5ftJZMvWkfvKkjOMpi113Yyw/8vvDxuHFj4o3U0yHbqtrpg1jb+qLKO9C8C
7me5SCaftI62nT5nsxXM7BCLq+jotd3i0b5g4ZfW0fyADTorcHrp9zp2ljpy
Ny9bfLOdZPJN68g3LKPPGrAHn8Cmo1LHH7u8wMI/raPwkGWlFcB6djlUU0cD
n4wZebGtZPJR6+hb2uYzK8DWorCYGslNmnYFCz+1jjY/qxb/sw3yzIV3Omr1
fnD5k2Dhq9bRe/f8xQvBvG7PXkcF7R8WtQcLf7WOxg2wX/ClNfLMluPX19HO
L8eLD4CFz1pHlvH6sFlgPv25oY56qwsqOoOF31pHeTGRW9+0Qp7Z7ZGjjo6d
nu2sAwvftY42JSZemARWSllAdLTokud4B7DwX+to2ZJ6/562RJ75BHwdPek0
RLcTLHzYOnq68N6gkeBwUbBDX3brf9UCCz+2jtSNrx243wJ5HsQK2nW0LqTT
lDiw8GXj71X40WAImC+HaKejzr3MnlcFC3+2ju4rE5Ubzsgze1zSXkdD4irN
iAULn7aOcqN+uvYFc/2nm44y8z0qVgALv7aONrhcfHyhOfLM9CAeOoq/u/Xo
CrDwbetoRaekjV3BFqw+1FNH1bPrLPjlJJn82zqq0/y6/ylwKL/Ax+ePP989
FCx83DoKXfevjRv4tQ1fEEblYqMbFTeTTH5uHH/ffWofAfvwQjEdOQ6aUnMe
WPi6dbT112nr1uBzg5iQQkdjF460fd9UMvm7ddSydacGe8EtudBYRxlbx7WY
DhY+bx25NL7s2RTM3h4F9NfR8D7zhrxqIpn83joaHTQmUAGz2VdlB+F4rrc6
egJY+L51ZHXiu6E+mK9eGKKjmOOGm9mOksn/raO5a7d+SwDnsNcpvuD9aU1G
goUPXEf91rUbYQseJB5Q0hNV9vrMxpLJD66jBiMvXYsHpzDd0QgdObV6V8kH
LHzhOmq6ceAAK7ATL1DUUcDXd/G3Gkkmf7iOet2/9HwtmNcljcXf2/24TX+w
8InrqNq15isrg/lyygk66nvtSPaVhpLJL66jK9YhHtFg/np1ko4W15uX0Ass
fOM6mjRa87csmNsCpmB86VEt8LyDZPKP62i516EHy8HM7uIxHZ8nN8arK1j4
yHU0fdW2s78aIM/ZbdgTWVpoeOKeAhZ+ch3ZnB2WvBjsyF+w6sisW9lO7mDh
K8f2UL9M/VofebZhC/6xff2/9z8GFv5yHX143O1JEPgPm26xQEe31CfnuICF
z1xHIxtMqfilHvLMhWP4+fTuykGw8Jvj7zkM7jEHzPVti5CvDWvzWoKF7xy8
qXT9O3vkmdW7L9HR3f+2eO4FC/+5jl46TXg/Hczr35bqaPa+EXIzsPCh62jN
7mWj8upKqQ5sefhyHc1beMdWBxZ+dB0FJg55FABex6ZfReroRdLP3Y3Awpeu
Iz/zu9Nz6iDPbHhehe3Z+J6bGiz86Tq6uehPpfHgabzgBMf3ct/n9cDCp47x
8/Cdk9m1ked2rCAbeZJCt+8EC7+6jhaE9g0bBe7OBYs6Ovmry6TaYOFb19G5
taMHZtkhzzPYA0UdfVKrOm8DC/86tsfhym39wHw6Zhy2p/uOZjZg4WPH8bhv
YOP7tsgzu1zbjO0jNW0cDxb6aRxfPRo38wF/5TpKHbX269mmOljoqXRU7Bnt
mVELeeYHoI4+z3rXfwNY1FdjfJy0YMIgcAavs9TR9y11FlcFi3orHf1a8XJL
ug3yzOsuML7sSj++Biz87vh7kzOfeIPF9Gx8v8G/y5uDhe8d2/NxT5drNZFn
fvumoxlLjQExYOF/x3h71HlHXzB7u9rYoKOeX6/drQgWPnicf1NXWV22Rp6j
r7MVUpSydqzPKrDww+N8mzlkey/weE0Y7uB0dKDm+NxyYOGL19GjS1LbizWQ
53Mto/4dwPgacD0yEiz88To6Mb3po+5gD34BraPxQ3a2LwMWPnkdabY4xaVW
R57Z45wkHZ09erN4OVj45XVUtunq0d3AXK97XEePp429/MdKMvnmdZRe3Mf1
LJjrd07qKMSrj3EpWPjn8XmejWrQBczreU8jDy4rE35ZSiYfPfbv+fO1T4NH
iQldZFHRelcYWPjpdfQjfJGjJ5gv3zqP8U35ePBHNcnkq8f1QeGibqfAruzx
7kUdFb6tcW8xWPjrdfSn/LkZHmCF2fQu43ooNaxiaVXJ5LPHv9/upT8BtuQP
AHWUYN7EOxQs/PbYX/FWhR3B4XzBtY5WHzTf/a2KZPLd6ygyu8agZDA7mkNu
6WjUNqeyi8AOvNAe+Rzb/5QbmC/nvIPza+KShV8tkGc2vfOujgb/O+Z2HMxf
99zTkU/Wrx8h4B/s8i8T55PDgy66grku/IGODldO3FBijjyz2aIPMd6Oqz7h
GHg304ll4e+3jugQAuZ6kcc6yvpaWsUVbMHqxp/oqIdb2Nviysgzqx/NxvXB
jPLXk8ChrI7sGfZPjS0HgsG8nuQ59ve+lts6gF+z5covdNQt+XpUcSXkmS94
wfF4aE5wEpi//n2po2e2doHB4Fh2O/hKR7tmXp7YAXyuJiso1tEd58Xjis2Q
Z4UJPHD+v99mfBK4pRDc0Z43bwOCwQFcAI3981I/qwN4x0B2wYvrjb5TFxdX
RJ6ZHeA9jr+4ZquTwBX5gjrkv1fB7mAws7l0+qSjpU/3J3cAB0eHnor9rKPa
2fPvF1dAntnyjy86WpXqWpIEzmHTQYrY/i+tHQLmj4eKcT7slNLDFTyIHS4l
+Dy3w+aWlEeemQ75G/Lj3Ul9DJzC9IjfdZTY4uv9EHAh0yWV6uh34YGqbmCu
T/ipo38Ok72/lkOeeeGkjjq42aw5DuZXf7911P7o+dsLwemsbukPfp9doF1H
MK9f+KejyW/Mp3wrizxz4b2euqr1x5LBfHpYWT21TfM0DwXr2ePi8nrqd//a
JHfwU3b6qKCng0OHnPteBnn+PvLnnYp6Us7canAS7B19BEe0nkJ39Fq5GMxW
J8+vrCfV1MPvPcDJSgAuAfW0U19z5I9/0akf2jKjiJ6qPJl97RTYke9gPWlX
ne4SBh7FXwjoqZ3Tv2OeYNae9cdST9t6ubv8+hudepUtD62up7tjJh85DebT
RWvoqagwym0p2JUX7OqpWezWs13A/HLSBp9f3un95090qsL07rX09Ops3OOz
YK57tdWTe0DYnOVgS34C0ZNL9eEVCcx1MHX0FNS/gfLvd3Qqr4evq6cjmx91
Pw8+yupi6+npzNyo1xFgXh9XX0+Lx9uv6wF2YHUyDfT0Ok/jXg7Ml4s31JN1
bO38i7+iU9ex6eON8H2vhe9cCeavkxvrabnzTZ/e4B/s9tJRT6PamlerCG7H
JzTg58e1v3n5Z3TqNLEAjtZ19NoogXcHskIYPVUjL38vMBvtXZ31NOOnS6PK
YAteKK6nOR/Mvlz7EZ3anQt39FQm4fLF1eBQLqTUk/2qOQn9wextY1AbPd13
+RtcBfz6LLsB1pNPs1Dfm6XRqfZ8wpSeHuRlua4H8+kl7fV0ssTBfjA4lj1u
6oC/nzW4ohWYH35uepptPaU443t06lemr+6opwktJuRtAvP2Bnc9lWgp2wcc
wPRWHnr6Xr7iA2sw11146skr4+C9+9+iU3n9dWc9PV/TJXML2IxPyNTT9dMH
HvuBeT1WNz21yS/7yhYczAuw9OQd7/El62t0Kl9e1h3bo6dP2QRwDptu1lNP
FZYNsB0N5o+fe+lpw9Vmbe3Bg7iAF8e/8eWApyXRqSvbsh2ip/ea5bN3g5nd
Y7QX9g/93DQeXDiATfjW08ByfqccwMzG9MMbnydoQ15OcXTq+MCD9/sN0FOO
jaGWBszteQOx/+f/5z0ZnL5qwrv8QXqiKnMjm4CZ7dR9iJ7mzqp/Nq8oOtWD
LTcdqqdZdnt/G8Dz+ICvp8Nbq3cPBPPXUcP0lD57WIwz+Cm7PB2up0mOC+69
K4xOteaFJnpq1X1Go/1gb174h+Ohf+eQOWCu6xupp0tX39xoA05m+p5RyHv3
WU2/fEGeWZ3/GPz7ztdWHgE7cuG4nqzoT14QeDS/oMTfu28+0BXM63/G62nJ
io/Hv35Gntny84l6unLD6HgCzKejT8L+6+KxdTHYlb2eDtCTwziVhSeY365O
0dPCpMcrf31CnlclJK+YqqfNVwvKnAVnWRf1yJimJ79GtyOXg1mbUoNAPR3o
J5l1B/fhN6wYby7X2FgWHM4nOOnJv+F8+7SPyPMAtsJCTz9z5H2rwKytdOwc
PT3ZqKW+YAdecIrffzw0qxLYjwsA9PTycb3g6x+QZ7Y8ZYGeLKV467VgPl0l
CN+356PjA8H88VWwnp5t/zjWEtyOPxDTUyWre5XuvEee+QRKPWW3i06OA+9m
+tFQPflKZjOGgbmObImelu7wc6gFtgjkbwhp2ZcFjx++Q55ZXXm4nuLsxmzf
AQ5l9aXL8Pu3Vx81GnyQ1ZktR35K4xrUA/N6kxV6unnpef6zAuSZP3DXU3Pp
2zE1mE9fi9JTuSuPoieBY1naVuqptmX0aEcwP72t0pPn25/t894iz9PZDHI9
DXveycoIbsmFJ8h3WI/PgeAALgTEeNq3xv0W4ARrJszW0/Gbe1I+5CPPMhug
9TR1eyXDQbAZf6Gnp6x2rbfOB3fhC0D0FOxYJ7Y9OHgAb3SlUz9uLC95gzyz
5aubcH7r1nNJMjiHTWeN19Oe8OWhi8H89dZmPaV0WbHEE8wvd7foqU/V3it+
50WnrrJmI6qe3BbejD0HFjplPcWWq70tAlzI9YrYH9TM2BMsdEsY/5O/na4A
Hs8LiLC9S2Izr7xGnnkds56io55+iQWn83pGPckfv1QfABZ1Tfh+5y+7VgOL
5ex6OhszemzGK+SZT2/X069bB2PiwOJ1t56GOFxMHgZ+ym9/9bS+0paCWmBr
voBVT/9ZN2n46CXyPIAZiHD83VwweieY2S9H7sH57sLSHWPBydNZw6me/i7t
/aQB+OPXTxu/J+rJYt01h9xc5HmVl73Xfj3tD6s8QwsezezyB/Q04EH55Kng
TTJ7gKWnyc1TzJqDr7J6i8N6iirTcsy7HOSZLXc5oqeh7/yS9oNdeeGanqQg
T6t5YP447Jieips+musCVlg8juspPK7NveIX0amPmB4+WU92Pbt2SgZzXexJ
PWVeKq9bDO4jvjA9MERadwZznUwKzk8Lk1f9eY48s3r5M3raelb5mQrmdbNn
Mb5V6xUSBXZgq6fP6alyYUJhbzCvo0nVk8d3fVAlMF/+dgHj9YFp368/i05N
Y9PhLuppt5y9Yh2YPx5Pw/6YUKHqEHA7PqBivArN+a8GeBp/AYe/t2he28yn
yHMbNuMM57OCw1e2gVnbcP3r+PlJukmjwBa8YFJPxhneZeqBu/MCdj3di1Nr
nmcjz1xQpKcf0w39FPDBr1zgSavDxhVNBr9eyQT3eio/8pK6GdieX7Dp6feG
J0MLniDP/AW/nhocVFfcD45lr8vu68m5d81zc8H88jlTT59euIa5gL/2Z09M
MD5Wr+BZ8hh5ZvrrLD2NmRLxJxnMdZiPMN7N2ntpCTiB6bGeYDxOWr6xC5jr
MrL15Hjr37h/j5BnfkOI6z+vVu0ugnmd5nM97Ttc3iwaHMwXnOJ4TYh+4QXm
y+Nz9PRv05EzFuAcNl3+JcbHZjG7b2VFp9oJ4QSlvqsYtQnMb6df62nB7NYz
h4FXfWXCYpz/Ov/xswWz2YQ985HXtyF9Hj9EnmuwB04YD8tv8dgFduITFPUU
aT+67QTweL6gXU/bL1xxbgxmq9kjPujpavRjp7wHyHN/tuIKx39pnPMecLnH
7585fMbxufdzm1lgXpfxBdujRZF7G/A8tnymENfbVRJ6F2Yiz2w6TTGuD56+
Gn4M/JQ9XivB9UWbe4GhYB63r3oqjZ8c4Qn25oUZ+Pc7t//35z7yLAoSyfPB
nJTzYN7+/wP790He05Xgj0z/8xPHW4t/5bzAXAfwG9fL00+1sgCP5oJ25KW+
zehb95BnVhf4V08zn1qu3QS+yupzyhjI0HFv6jAwX05X1kArz778bgt25YU8
Btpc7nSHJ3eRZ/a4vYKBFm93Cd4N5qffigb6WK1v8kTwo0dNE0+YGejs9++/
HcE4GblVqmyga2/6euXfQZ6/Pjzvb26gsnPab00Eh/MLLAPNr5fyZg74aA32
Qt5A7WKedXYBs6uDPtUMNJd2bSnJQJ554ZWB5mR9/XIC7M8LYQ0UlVswNBzM
l9fWMJDtl9Bj3cBpbLqtNb7fVrV9OTB//VbTQBenTJQu30ae2eV4LQNV+3Kq
JBY8jd/AGYhu7Js2ELyb6crtDNRIcntqBeb60joGik/297t/C3lmOrO62F6f
LO9tA/dgehN7A5WeH+c7GszrzusZqMqFng/rgw+y+tMGBnoTeXZc7k3kmdWh
OWD7bLv1Vge2Z8vtGxqo/Oag0ECwj3hARH/M95u3Asey1/GOBmq7cYn6czry
zG7PmxioSfITjyTw19as4M9A4dYZDxaBW/ECbAO9dfdf5AkO4IIYbN+UeXX/
3kCeHzGBooFatba/eAGcMY01QOPzNBk5Jxpsxn8hPo9bs3re4C78AbSBvhSu
ul0VHMwnLBvo2OfgVXeuI8+sfqOdgVZfLOq6BcyX47gY6NTfMr9GgO3Y9JwO
BtJ6qE7bg/njOlcDna5wY8WLa8gzi68btuf3lV5acMq0olsd3Q20VZ9uPR1c
yHTMHgbapZVzW4C5nrGTgfykcsc+XUWe+YII7J+XX1YfBW9l+oYuBnIbNGvy
IjCvc+5qII8xC7p7gsvxwn8DaZRyjf5eQZ65EMtAm443qHgRPI8LYw3UodXl
D9FgPl2vl4Fu7vya5Q1+yh7f9zbQ0W2HrlQD89N5HwMNOF508u5l5JkvuDKQ
zbpzB7eCI3hBl4ESDlvvGQVmbTybvLG/Tn7S1Qd/PN249EV/HO+dfPW5l5Dn
/jwh5HG9y149ePSj+5YrBhno8J8Dh2eAmYzw9mADXZqtP90afJXVcw010IL9
jW8UpiHPbLmuj4Gu+jZ9ehzMp+/6Guj91/2FS8CzeEGdgaxbnbLoBuaX934G
il7r7VQO/Og0E5wYSE4c53XlIvLMBYAGuuvwdeYacB8uyDbQjkir+MFgrp8b
baDYafvPWIOPMh3NGAP1m5r+7uEF5JnV048z0Eab2fX+A/O62vEGcqqywWcC
2J/V100w0OcX7dY4gvny/UkGeuA8/Er+eeSZTecPMNCzFd8r7gfz1/uTDVR3
SV3v+eB27HZ/qoGS9p/Z6Aqexv8z0Ksjzx6XpiLPJeyBsYFKHJY5nQVnRrEJ
xgbqs2Hn4kiwBS+kMFDfLW63+oB78EJOA4VdH9TUAhzKC+sNFHr5ZcTtc8jz
aSZ0MtBrh5IX8WA2u27zPOzP+ZE9R4DtWZ3HfANVGrJmjz2YL+8JMtD0YZbW
OWeRZzbdJ9hA62pVW6EDp7LHfyEGWtJa+hwI5sPBIgP17LBkcmtwK3Xekvmh
BrJMzXtSeAZ5ZvrsxQaym5HulwxOYDrNMAPtve6cGQbmeq1wjF9LyvgT2Izp
NpYa6JPVkOzyYF6/vcxAW5rVmnLtNPLMX3gbSOfn+2UdOJHV+0Tg+HEzi/AB
8+V+kdi+E9rVtAXb8QJiA7nOvrP3SQryzAUdGI9K8nqpwavY5UG0gYI3zc+d
DE7xZoJnAzV8Mi+qObgwa8r6sFgDdZv5qtnHU8gzv0HC+PL4xu0j4PFiQg3N
udg0bBF4axRbgInx8Exx885gZhc/ud5APwNcs/+dRJ7VDn0rbzTQ7UH5my6B
ed3XJgP9sK3afzV4Hlv+G2cg85Eas8FgPh043kBK4t4r1uCn7PXgFgMF7Wm0
JutEdGpN/gAG2/+9uc8usDefsGeggqoB9pPAEXyBt4EGGZ0LmoKFHthAs4ZP
THmXjDxzXSD+/8GKGw+BhT7IQDWH1JkeAh7NdQIGendnZ89OYFEvbKBat1c3
+nsceeb1fwbKz8krnwb+y+sAkHftwYIYsFgeYKDGR17dGwiexacLYPzVrkqt
ARaPD3D+rhV36OEx5Jn/OuRfqaz9D8zK9D8bDTT41buEieA+py2caS/+fYj7
lqbgcG9msDTg/vNj3Lsk5DmLDQgGsi+qtvkQuGAqe4FkoGk227eHgB34ggPs
76JYdSewPy+owfHu9Crx71HkmdWDHMHxPVh/Kg2cxpYLHTVQcbmM9Fgwnz6U
hPNbzoTcQeB2QlCM8WXET2swH16SDbQ/6rjtoyPIcxa74MD+X76k425wJtOd
n8TxZa0dFQDm+tMUjFdZLhFO4B68AMtAGbOaJn44jDwzPcoZ5GHGsqwj4IOs
Lv0c9s/cTpVDwbw+NdVAHW1GdekCtmd1QecNNK40O7gs2JctH7yI81nyhYNX
DiHPbDphGs6v780/rgWnstcLl3D8tD/WxgfMLzeuGKhp8/PBtuBWvGAP4/uM
1meyDyLPvDAc5+u4X5UUcIKKC3XoZLcWI6aB2ezTYen4+aqn9rYEm3Ehu4Gq
bjf++3IgOrWrNztj4ngJ/zoyGRzMH5hgvB2hOR4OTmT1YXcM9PjKgVo9wHw5
8V0DHZhmt8QMbMemF9/H+T7z+Yv0/cgze92YaaC8feX7x4FXsduPB8jj2ugT
/mDWJuyQZaArVlOa1wMXpiy/MPeRgdo8VO3K3Red2pzpnB8jz+FuNkYw1ztm
49+rnDbOBm9luqen2N7ZIdXag7n+4ZmBJmfUw30q8iwKYOljbQebs2BeJ5iD
871f+K4o8DwuEEO+Grs07wfmyw1eGmhn/e4nqoH59IPXBqqeZ/S+vxd55gHG
eGcb+GIHmH+8NwZyGBqxeDw4gi8QMFBy2y82TcDJxaxQBsfzsBPHCvYgz5H+
E6+9M9CKUQ9GHAI7Vj/03u4Dzp853n9DwKNVlXALh+M72maPJziu1cRyJz7h
+vKtq18ZMK8X/WKgLobEileMyDOrGynE9ev4hafWgvndfhG2z6Et833As8QC
JPrPvXJLOzB/PPnVQClbM94+NSDPbLj6ZqC1ge/2asCWXAhjoOeDR84NBPfh
wkTkP792xzbgpVwojuunuy3LluiRZ6av+2Wg3/s2ZZwCFzCdzR+ML7W8lBVg
Xm//10C1Dw5e1Afszxc4Gqi1jXFwFTCvHyprpD75Q1rc1SHPbDliOSOduNLP
fDuYT08sb6S3PnHvx4L564oKRhrU3PluY/B0dvliZqQ5BVYpb7XIM2v3r2Sk
HNc+hoPgzH78AQcNSLy2NQRswSfEGSmwICHWE9yDL6A20t+4k8vLgEN54aaR
3vRqsviKBnmOZAX/RjJXPw1ZB2byiHArI03slRviC+Z1ZNWN9O2Oy+LaYF+2
PNnaSK/zby1/riDPbLpyTSP5Nz8eqwOnsteXNkaKbp+/dSaY387YGumsYbKh
HbgVL2gw0qimLVK+ychz8YI5e2ob6cpgz7tnwAlMv13HSMvTNr+PAt9hOk57
I1Vv0tHcG8z1XPWMZFujUQsrcFem66hvpK4thw9+oEaeeeCM1LtmxsL/wIms
nrAhPv+MOHkSmNcVNDKSy52dt53AdrwAxkiv3rz791GFPPPCZmyPIZGux8Cr
2OONpkY6snfc7DDwafZ1nYxUun2FsTuYrZ4JaG4ky9Nv8szAzVsVRhx1NlK7
Y/FOt3Yjz/yEbqQDTVbO3gze2o+9ADbSywMnjo0C8/am1kbqVti2TENwOV4w
ZSTa9H7wm13IM6srbWekkFbv5P1gXl/iYqTw6S2/BYENVnwFF5V/dXBwJzCf
3uRqpBvdQxL//Yc8s8edbkZSNQ43vwLmw19HI41vkTZrHTiCTzDB9/kx4K4v
OPkhW5BopJkdannWAX9kemFPI6UtbmB4sRN55gX1Rmo4e3otA5jrh7oa6dCh
zzGzwXFMR9ANnJf8pz2Y1xOTkWYfPrPoRwLyzOqMemD/HC1TnArmyxt7Gkm/
PipIAs/iE9iMVCWvx9eBYP76o4+RKo7pFl4T/IhdDvU1Uuv40ApPdiDPxXnM
kEYurT9uksF9IrvFOXkb6fZtVcPp4KVWrIHZSBl11iW1BrOz+ZUBRrI6csy7
ZDvy3JKtUMH2dK/9KgXswB94Gqna0OQVkWB/PkHWSHd3b3DoB+b1Zj7IX5p8
0RKcxpY7+xpp2tQPgQ+2Raf+ZLMxhxlpV9MF1rvA/HXocCOlG9ukBoCnc6Gz
kQZubDLPGcxWm8aPMNLqFb6Nv2xFnluygBjpp/3JR8lgrksfbaRmlf3il4F7
8An42F75zYf0BoeKwhZyGN/BqgqY61XGG6mfVci9u1uiU/NY3foEIxWo3u3Y
AeZ1hxON9PDwtoAJYF9WfxBgpJK3oW2bgflyiMlG8ni//t+Hzcgzmx4xxUjG
MY/uJYH545KpRhr23H9vGLgVX+CD8cLOfGUPMLffBRrpX+KnCZXBCVPYFQKO
366VumfEI89FTECE7R/s67gNbMYFncjLlwzzceCuXGCPzz9qRbEjOHh339Et
5uHz+k7MeReHPLP60/lGmhEZdOcImNehLDCSevXxtMVgO76AENurunMKgfl0
qRAjnTp1M8kMzB+fLjRS05by4VubkGc2nIYaqa+59vAWMEvviMU43n5kJo0B
N2dXV0uMNE7tltIYzHXQYRjvlEtpBRuRZ6aHXGokC13kncNgrotahs8zcHZO
KLgcX6CM/d19VXE3cCdeaGmkkU2um5uBeT1SpJHsVJ6OtzYgz2y5ZJSRPvo+
oi1gPn1ylZEGv1UmjAHXZK9Too10pvz2qMZgfnklGel6/xN7CtYjz/wBJX7f
5HL3DoNZu9mk1UYaXhT6NxT80YsVIBipu8quDYGb8MJcI+2pmjvRDDx6CluB
jvy/ur/t1jrkmbX5bzBS8LXPGVvAVyM+fP20EX9/kmvVseC/rC4tzkg+fsoA
RzBfPh1vpP7eHTe8W4s88xcgyM+rovtHwPz16lYj2ac/rLcEzG+3thlpnj43
sDvYihdyG8mxTs2TlcB9uEDHSDtvzrTIWIM8c8GkkbymvZ2wDSx0txhf1609
OQ5cwPV3RhrzZphNU7DQ4RipqE6P4A+rkWf+gtVIjW77PkgCi/pEI+n2xnqG
g0WdAo6/YS81PcE/+fIK5GfBBEsLsJhugc+7/9/Su7HIM3/8YqTMvRc/7QCL
3YHxscaeyRPBmZZsxh6O19WHsp3AFvyCHD9/6pH/5xjkmU/gMNIWb8cHyeDF
fMEf9v+LDf7LwWw2nM1B5KOJfXYfcN4DJkTA+fTs1YBqYHshDKPyw7d8zJSQ
Zy7UNdKKDRHhu8B8uVWSkc7ZrKs6BZzKpl8dM9LoDclyy/9JOu+4nLswjKdS
tjJSlEJGSDKioZtQZDdUREbIiKJURpRCSGZJ1kv07CcqI5QI2bPsbGlS2av3
Onfvf99Pr3qe3+93nXN+59z3dYF5OzYrjf4erhtUGws9c4EY9Pxr7v1s8Gxu
KMb1cKhYEg0Wbs2vzqTRFr0EPVfwXRHffRbzs+mETH0wx3mew3zesvfUJzHQ
s4j3Oo/5YFPXhv+BOe4jN42eDbI/EQCWCXvlC3jechfN6gtmu6W8NFp/7Uzb
H+ugZy5AxfrnX6ebueDxbFiA9Y3O0dgNYD6euYzxPc7JaQL4rFiuXYEerX81
aAeuni0CEtNoa+qN/OJo6JkDxNOoeMvJTcfA09euDim7jp/vyHZfDN7dQjyA
mI+nPzK1Ad/YJw4sMH/uafbpbxT0zAXuabSwzCfvMtiWDVHSKPhPTmI8mO3X
7qXR5jD7JZ7gY6Id+34a/ad9x9UEzOXZD9NIMTbC4v1a6Fkc1xamUfoP26ZK
ML++FaXRxeN6n0PAa3mCSyPtTn8fOYBP7RMHoml07NO/i9pgrn55ivXjlbbH
b66BntlwCfqfOOzwLjDHFb7A9xsQlegL3i7ii4qx/jQpjDcHc5zBS8y3WQ4b
KyKhZ2HH+Brjc+qp2Eww2zO8wXi1a+T6VeCFvIDGfGX1IW4E+LAo33iP8cU0
eVszMG/nfEij5c2n7324GnpmQzc8f0cGpO0Dj3QRHTlppLvF+JQ/eFXh9Ri/
sjSyD2p7vTf4xGzxxpBGbr86vvqyCnquXpnyrwLjy8PBP8+B8bLVbXwVxkPJ
rLax4Mn1L+i0wGzfgHHgeGHP+jmNCj+8m9wWzHYtNVgPHHVY9WIl9Czat2rT
6IjukdSjYC7n+oL7cbLd3UDwPA74w/eZtvffQDAP99/xfB/r2fffCui5eg9W
qGk0x77A/wq4ydrqZu1/pVHJ1aX7toI5bv13Gtl8s3g0GRzOBaNp1CC4so0p
mOPY/uF+vj3nWRIBPYt4ljpc/+9JyWowP80aEqr0inwVBnYT9k0NJLQjfUnP
oWBu59SS0Cf5wrBG4FxR3qktoYZfg6/eDY/N/SaOexpK6L1NdPtkMC//dCWk
Mt4XNBM8mwvSJbRlUu41C7CoFn3YWEKn15Z3rQmDnk8Lw2sJrfQ0i80G63Bg
k4R6rZxWEg0ewoGm4P2Hx44BC7eCVi3xeed+ymwNlgn7dj18vnXDzZ4vj819
Lezc9CV04eCBralgbu9uLaFfczQ0AsHjueFFQiOjA0IGgvn4t62EvA8Vlf8N
hZ7F66CBhH4sdJ17BSzSVshQQt+2XXq7Fdyj0FEktFC/s8P8vcAiHau4vYT2
JuaXmII5TtpYQj3ujFn8MSQ296aIlzSR0Ae9R9/TwRw31VFCpbpzYyLAttxQ
JyGvGT9aO4HZ3rGThGZeiT/WBHxM2D10lpDzh64OD5ZBz6L9w1xCHosuPEwB
t+YAZ1x/7WlB/mDeHuomoVm+v1tYgvlx6S4hJ9OU9K9Loec14oVaQrq/7D1z
wJXNRQEWfp784s96sDk37Epol3RN2gTwFDZ4lFDao06ehuDtGF029JGQzd1L
DV8HQ89Y/T2yklDjoXPOSMH/hN2rtYRqHzQMWgoeKOxf+knoyeCjFvZgbgfr
LyFph+EftMCHRXnYQHxfi5dHbwZBz2K72EZCzVtGBOwGt2RDAAnlR+j1mQ4e
yQayElIaHP3WDbyKA4dwf3fYXPy0BHoW3cn2EqpKyd92Glwq4nIdJFRYPH5W
FNhMxOc5Sqhp40IbVzDH6RD+/dXJLVqD44X981AJGV578PHZYuhZ2EE54X6d
GXMlFfwrhQ1H6J9LzrFAMJeLjpDQF7Nem2zA88TxkbOEVtRsD6oLhJ7FctIF
929BjU8BWKSf5YySUCebsc7bwU1nN4WEJVSsdXDgFPAwnkAkNC2qrHsXcDgf
OEpoq28fk4pF0HNz0aAiocDhC9pmgd+nCEMjCTV4t18vEsx28BNxPSsKWriA
3ThgTUInmpS31ANzu7i7hLpUarV5shB6FuXjHhKqGda6w2HwN3Gc7CmhhacM
uy4E8+ulF57f3637DQDPri9ooGvntZ3+LoCem4sGOAmtl5d5XAHfTRGGaRLa
v+zyggQwx3/7Siglf9c6b/AQEQc6TULtx3kf7AQOEfFgfhK6dLZlTtl86FnE
Q8yQ0Kjc7JcZ4NfitHGmhBbp+GivBrN9xCwJ/aWyXs7g8VwwJaHH7RdPbgnm
8pI5Eno38t26xwHQs9humisho6Cxmf+B+fELkFD4qGMlC8A9OFBSQq0iq00G
gP04cF1CWhcsvf7Og54fNg7ovEhCYeen7LwCvjmLdxDoSNfw+wlgTd5gk9Ct
tNg2PmBbLsjE+FIb7dMZzPaxwRKaf2rJf+VzoWdhJ7NUQqlHxlRkgrm9bJmE
Fs8zsIsEc7lZqITGnbizyQXsKrafl0voXv+wYj0wT0dhGG9Smg18Ogd6niVu
CMaD5IStR8CVn8UGvoROPa8rWwQ254JvCW1sO83VBszxxqvx72uPKer8oWcR
dxiJz9/thf41MMcfrZFQM7+6iB1gtpOOktCksc3fTwUPdGaHbzp0QMe9K5jb
TddJqIVO+aWq2dCzKD+NxfjeL3vQaTAfR63H73+4TBUFbskNJRKK2deuxxjw
SDYgwvNodzS1DXgVG9ZDX9OMzYtnxeZm4O0oabOElp1edSwNLHavSrZgvP95
uVcw2My5UYLNVgmV3f+eYQcWp7/rEyRUXqtP2uB4YS+/DX+veZtbt2ZCz8Ju
boeE3O/+nZYE/iXaz3dKSLvydvUMMJej78L3bbNhY0/wPA7EwPP2rWvnLzNi
cw9YcCAiPR8pzzkPFu4qJ/ZI6MZxg+kbwE2dRSKphLLK52lMAgt3QrcUzKep
B462B4fzC6uEAuKzx73zg545vhXPi9fZH0rwe45zk9DojEPHwsD1cRMSOuC2
wGsYuN5+EuPLh3ZNm4Lj2I5CQmZm0ryH06Fnbk+R0Ot0k5UHwN+4XAXPv2vo
oABw/faVhKz3q79Zg2fz4yyhg1Nvnv49DXr+LAooxXx+Y/Vl8N1I0XAvoe2v
5CMTwDr1Bq3k2GSxng94CAdcSWj3HP3izuAQDoDF50/drarwhZ5F/Ew69B7+
K+ok+LWwoz0uoUc7yHstmO1pTmD+O+Zv7QoezxvuEor2n9+8DZjL17Lw+9aM
q3gxFXoW29knJSSX6N1OA9eI6e20hDJ3nDgRDBZvq2FncH0+9dtrD/azECdS
eL6Ct8c0BIvTHoNzGG+v3Qq+MwV6FnHU5yX0UV4yMxnM8ZQ5Eoq7VuwxG2zL
B3q4foUnXC3BS+obQOj72tnDv/tAz6Ib7KKEdq757JgHfiHaVy9JaO46nyGb
wVzOehnrCccDjp5gVw68ltAz/xwnUzAvd69ivZR2ZnSpN/Q8UoyoEuqYneCe
ARZuvlHXJfRm/NAZq8HmXDAgoRzDG0tcwFO4wUxC665bReuDt0cKQzLot93i
pGdesbkFzUSAhYSGH49VHwWzXf09/P6xy68vAQ8U9nX3JbRvL320BXM7+wM8
zxNeN9IGHxbl7Q8ldKXj1N63J0PPD/gFk45nK9z2gFtyQRLWW0WFK2eBR3ID
q4SsuhWl9QavYsND3D9fZdE3T+i5mQjIkZB/76mN8sB4ORr07DnG69EvHTaD
zUTcbjHWFwG2IZ5gjt97KaEiu/kqU3C8iK94JSHX0MXlpR7Qs7CzfCMh8xuj
emWCfwl7i7dYn37+HhgJ5naXdxJKSlqZMQrM5S8f8DyHPvjdCnxAbIeVSOjk
kDrnF+7Qs5DHR/y9I/92pYGbWohEDAndnHrvfTBYVEdgCKRIozBbB3A4f2Ho
bdunBB2wqC5+X4n1QKhd6V036Hmm2FHE9VnlNTIFbMwGHBLy83FOnQNme9tq
rJdydXT6guOE3U0tnm//PQt+TYKeRfvbFwld/P3rXj74myiH+yqhNbZ9HBLA
vD3+HdfrvrXUBzybB1QJjVjR0MgcLNzvj/+UkMEHyeaqidDzTFFxhvHieocG
Z8C6bPAjoZKn0yLWgTnN7i+e15uLv4wDh4g40X9YT3mMX2oI5ngrDSkt6f6n
5s0E6FnYXTeQUu+fYcuVYLa/0pTS+8i8P2Hg8bxgk9LMwMexTmAuj20opfCI
c/rNwXxcpiOlJt6Bhx6Nh57F8rmRlLRzyqwPg3tw4ISU/GYMuLII7McBnFIy
+zJ62iDw7r0ioF5K3n16fW8AvtkjceqU5lLqnP9o581x0POpqg/SFlJKWzCh
fxLYll8IpdT+0fbCmWC2v9eX0tmcAyt6g9kOr5WUHhaFdv4+FnoW7fGtpZTz
0OBWHrh1faANPQ2MWrEF7CqOzw2klOiV1dMLzK/T7aS02OXEi07gUz0yhnUz
wvWoCdtZMQZ6Ptn0Vmh7KSW01Bl7CmzOG05S0nH31Y0GT+UCRSl9W7ri8lgw
xyN3lJJe1xnr24ELRFyiqZTamTZ3feMKPYs4jE74vAZRekrwQA4clpLpxbNP
wsBsl9FFSs+Kzh11Ah8W7TPm+P1NYkKag7mcppuUFrbRd348GnrmDW0pDZHO
bn8E7MwF0FJau2ZldSB4Vb1hBo0f531jMDjjkzBYltK9gp9pWuDS1cKRR0oO
Er8Nt0dBz81Eh4+Ubv8XNz8ZPHnvrujFVlK6vzBsvD84XsTj9JXSgXM9bKzA
bJfbT0o7Xfeb/XKBnoV9Tn/c75sPm18GW3ODhZTOfb/9NwHM5XUDpVS5bvPn
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
eds7PPMmWIsN03C/hv7ouQ9sxwEbcmr0+feRheAgDmTG/LBkvKk9OE3EQe6Q
U/iGT/uagDkeYqec1tYVGz8th56FXeQu6P+g8UEpmO0jEuV0wErSJQIcJdpJ
kuS0PSxKNgp8WpSX7MH8QZL+hmDebtqL8WyCcW5JGfTMAT5yKlr8Yuwp8FQO
fJfTprnlz9eDd0SIDj05Tfs3cslksHBb8jwop6X/KrS6geuEG94hOdX2ebX3
ayn0zBtsuB7epgMugxdxQSbGZyfZnV3gI2wfK6dOWWsD/cH1djK4nxGHmw8A
63F7mZzuerVM1wLXl5vJycDwqseDj9Azbz/L6V70td+HwfXTEZ6nGQZHl4LL
dosbgvE7QjnRCWzGG/i4f4lb/+mDvbjgG7zmjOp1SUzu1qHCIEROr/5YzjwO
5rjo43IyeVzeNgr8W8RHncDz8aTm5kQw20lnysnumtN6M3CAsJfKkpN/0LNh
nz9Az6Ld9CSuX9K5ulxwoSg/PY2f637ITQDzcdQZjAcbvaL9wLw8zZaT4zs9
FytwBBsQYf57o9+i7j30fFsY1mN8HTfl0W3wB18RcIrrVVF6+ABY7F61vyCn
+LgLQYvB7iI+Pk9OxpUvhjqCOU7uIn7/q2GtW4AvCHv5fNyvXhUlL95Bz8Ju
7rKchic/z1GCubr9ipzsq1vtWQ32Z4MzPL9/ti4bB+bj6WtyWh87cZIJ+J54
Xb2O6+XhZV35FnourzP+cAPzr/WR1ufBjhHekoG3sL752P/HFrBwJ4y9LacS
avzSFyzfLV5Y5XREs0tBb/CbLqLACePVz7UZf95Az9wQK6cWVZ3/uwmewAaK
cloibbR9H5jtJwuh16/W6xaBzwk7iiKs7/YeCHMAc3vKIzlpzR6/uBnYQpSr
PMH4ZDhs3vPX0LPYvnqK8Xfd8lkKcKJ4nJ/JKW5xld8q8K0uooASz9thid9Y
sFZ9wz19L02daQy2Y4NWOe1t/nZOxSvomQO95DT30axF58BpIm72DZ43ffPQ
LWCOn3mL+xHTba0vuI2wo32H+e/X/PjeYLan+SCnmY5V+/68hJ5Fu1oJrpdh
huom+LQoX/soJ0uP0xf3gXk7u0xOetl/Hy8Cd2UDaMyXbdZVO4D5bbVCThMt
RzVrDt7hK06k5LTt9liLF8XQc9lkzHAYDy9uG6UE14WrpyR/ltOI+60XrAZz
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
S5i3w4I7x9u3rgaLPCGJSmvFH39ijfrMjsuuQ30fs32YDhb5Qri/fMzfRMF8
O+16iW5V9gqbAou8Icwf27Vu3gfuwxsw4u/dsyLdCBb5QxLV8Az1LOiK+swD
fCRy6mRYfA4WeUQYr3/22rkDZrurl22W6HZcWd95sMgnwvhQNu6VE/zcNuPX
dXjBb9e1rWGRV4T518zn3YqtUJ8vN8KSVKIDPas/zYVFfhHqWZ9LqxPhYR7s
jsP8a6xJzzBY5BlJVD679psxMOsOchpO84re2gUW+UYS1SyXhlSHT7LlVqxE
p3vP+Pu0i7Yi7wj/fqFOOg7z9v07cL/82jFjPSzyjyRys23UehpsyhvOSnRj
Q6dH9rDIQ8J69smdrQ1gfvwfnq3XcFShpbYiH0kijyeF9S/C/HhAPCrj8PG3
d8EiL0miAptJW4LgbLZ9YLdEi+b/9RwKi/wkidq8tWjRDuaPF+AXgUWv/lho
K/KUMP59cUu9Ddt6sMR01MdBg4IPwyJfCfeD241+EfAc/oJCIvlHYZ1xsMhb
kuhP7X1PreGEuWyDO+Y7oQVH9GGRvyTRqFZXw/LNUZ/LWYMUiTY8sh91EhZ5
TBINXTeo42a4Pm+wLVFyg1flfrDIZ5Ioe1TDPEfYiS/4sT7u9ERqAou8Jol+
Btuu+9oZ9ZnHkaDeNjfzvwKL9uS4nn8fHrIXPs7blWL8KjhvFgKLPCfMr+8H
6LvCop0JxssdRwvNYHG8GfOrhhG3/nVCfebHnXD/dvqQlgeL7c8STUl7tecY
LLZDYT65e96aSFjkP2F8yoheMBHeyB+XSjSieLCvLSymaxJttNgwsi58qZw1
hJLIp48fveuorciHwvyq2r2umXDpOhYogO9z5t1222GRF4XxyGV6k0C4uwik
pdORa+sMgUV+FOYHev2qt4L9k8+0yIdXbV/z75eZtiJPSqIJ5lP/3ID34tPr
ekKiFvE3fx2CRb4U7v+cG0XLYR6fnIZ6GOdTNAYWeVP4fgrCfnaBDXmBw/i+
o1txdVjkT2E+sjq49Jkp6jPfgCKRYezQymmwyKPCejZZ1t8Ih/IDjJjfxicZ
zYBFPpVEv0d1bUEwP77JfMSpU2NY5FVJVHXdt55fOqA+s+2dGRJdvNF58H+w
yK+S6NmYojF74JY8gBvjTdUR/otgkWclUd5J22UjYf71ws3HyNFmsMi3kmjF
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
g1OJDrQakNIIFm+vdAokcrF1sClvjPgsdhfgezebHsmGU0U7uVcYP24UNFLg
AlFe/jXmO63C1++FudwcbJ5hXbEMNuKENYwvl+RZE2EbLnCG+cPL9i8dYd6e
fivR9w7r3FvBvFx9h/gcknbnrwHi8/fVumXwrd8VfV/BBx0ts/YXYv45Xf/S
DVhUJ3QqkqjNtcZdj8GieuwHuG9ljTMb4FJ9ccAJ42GdZ+1nwNxeshjj4dN9
RwfA3G4CDvXq19oCduaGOxhvwp5GNYA9uUG7RG88xrT83AjxWaSnwJ2kpAP3
YT6u8gnxO1i35Tn4nHh99Vki66wBUWFwhridYY3Vs00C4MIwcYAS8Stw2RF3
uCYn3GP+njq3XXfYmAu0SjTSZdhpI9ieG3rh53816vJLH/FZtJstlWi6mq7k
wnNF+xn4UehUugJvFeVov0m01/f97SiYy9OUYT1lO3rEavi6SFeDdxbGPveC
X4jja+WYb8wtnu4E8+vs71gvp+iVmcIc3mDdzNZrtGArbhgo0a/tzXSL9BCf
rcSOFK7fx8rINFjs9hyrwHzr+U3LWFjsxg/+KdHBoUuStsEHRPtpeLt9o2H+
MLej+iWR/rbdr4bCXJ66UqIh9jUWdYY/i3JV8HSb0fUawXW5wDzmq35h0WUN
EZ+5IalEGdmSbTbM21uw75QbGTI8QUx3q8T6SJmyF17kKEZUiVzPh/9ZBotq
vrnwq9Hj9kyE4+6IAwMSrSnU7NILvq0vEsxkGjF6391WMLejhzfsMpypAXN7
uhoyDd2zrPZrXcRnbngs08vBqcdSYFtRvg6eFfvT+TjM6ey1ZGp/2ODtRpiP
t2vKNMi0yQZfeKPY7oYbmGq0HwTz8ldLpuM7H6V3hK+EiQRWmYZN3eqvAz99
ygUPyXWrRaMSHcRnE9EgR6a0H+eVh7AuN1SXSS+ytecFuMNZC0yhZfKcvVhr
F+wi2lXWk6ls/MUzi2BuXwE3HPtkzFiYy1nWl6li9GuNHnCEKG/RQKbPA7JO
N4cviHQX2K7tmbF/tBGfxfEXbZmaZ83WzIf5dZiOTAXDDS4kw5ri8YAfbj3k
dRg2sRIdMWSyXdhYbx0sTkc4NpRp/N8516bCY/gDy7Sl1bn5/eH5/IJcpsY3
n5iaw9y+Vh+f//W7nHowt7OBF/rlbv3YAPFZlLdtJNPHERjD4HxR7sZApr+b
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
2sp5MJd7hTu6bK95HebyL4Mxfo2Uhx2Di0U62BCFshqfidoE8/EwuN7aBZ9m
wfy6eKhCo7bVdhwKO3BBAHE/zQzuAo/hArIKXXDbn9cYns8NxxA/Puyz/vkY
8TlnRLbmCIXq/5oR9Bw+aVy9Pw4O89PMuQqniPbOIxXa1H2uxRGY2z3B7kNP
rt4AV4ryz6MU8j4Rn+0LG/IBclzP7hssB8OcHgq/+mK+3hrm46Kj8Xlv7X/R
CJ7xr6Eh+ZzL7fYjE/FZTCfhb4ffhz6DRXfTnWMxPwi9+eEKLLpP9xyn0PPZ
c/ofgrM6igCikIF14ZF1MILbyy3jFZp2p6PGDJjbvU9A/OpKnoPgdlzQCOON
Z+ukTnBfLoCPeEwPWurDXB7OQ6H4DLdV5Y8Qn0W6ODyoYnf+EzhcHB+fpNBl
+UyfyzBvJ3sqtLJ659FomJeXsFaKS50g+N03caBBoYc/U/2mwRqcAKfQ+F0G
jwbALbhgGsazrVZ2lnB3brCh0O77TaIbwiO5ITN+/zF3tcoeIj6LtyVwjOGw
OTkwt4eYopBjjYNPEuFjolzkVIU261zpGwUni/IRcH3rmLg1MKeTTFOo/4RJ
TafCfLwETl73ar0rrM8FGXH/HrT5ZgFbcgMfhVYfHe6lC7tyw3eMZ0EOD0of
ID7nbDsc6YvPb1PWOxsONBYnfvD5TyyJV2FRDe8TXJGV1joS5vawsxR6ca5w
52r44Tc+kEl9rR9pTYE/ivKx8IV+m5f1h7mczGx83+8afOkAc3qZv0Kfa3tM
0YF7ieNmcHbk0mdf7yM+i9fPc/DvR3oPz4I5HM3FePCrSZoCh74VF0ShtSf3
9jkAx3YUK1aFyqILEwPh1AXiwDd+34catj5wQaIoEKKQadeisy7wH9EuegF+
3qV9Fh1gI25AqNDgCU1PaMNcThpeUneK2dd7iM+ivNRChTokLjvyGJ4p0k0X
KVTp5dFGgfn4KbyxvP7h/TBvRy1WaKbvhjaB8GUxPV2C+ej5jCPecE4PUYAI
85GUPDMXWETfsUsx3951+YQ5rM0NTjG/NZrWURs2b9hAilmG6+OUG19yF/FZ
tI9fjuejXotuj2FuJwfX9G5/WYaX84QSn7/X37774d2i3NxKzMd2HUlfBXP6
Obxigv5Ib5iPo69SaMw6t+f94CKxPR2oUGvNEdPM4ZrcQBnf96M2XxvAorpK
8Gp8nwVJK0oygpJ75KT6267BfMrsv7qPYXdj0XFMocfhY3fL8FxesCpk33a0
6X5YVPfuGKRQ8E3jC6vgGNFeEl4593xfb/i6aDexTiHVSC+zH8zlJ9cr9PV8
jynmMJejgB/bWH1vABuI9JQNGC9DP28quYP4LI6rbMT8/vKSFo9hfn0FB8bd
jZfhafxCDNd/7Kd+++E1fIBSoYz4nNxVMH7YkkTY//S2+d6wnCgKtGL+17tB
PRc4U0PsEOJ6eY4+bA5/Fu1m4fzqmT21YW4/sw3Pp+HArJL0oGQzUY42GPPf
Pd/mPIaJv0DMVxZPr6/AnK4WgvVD7LGY/TAfX4O92p9xDoTDxOvs7Qolvlr9
yhuOE+EtFOPZ/ZZrXGCxWv0CZ79aZ9IBfnN77+U9O7Ae0peSteFqXRHhsJ4Z
fs7raxri85jS/oXw292LambB3H56J77fLM3jCjycN/QUul3Tc8AB2I8TQDD/
aLz2UyDM5ap2Yf5V5R/mA3P66m7EtwQzu/5wkjjOCh/pdDyvA8zbW3sU+m9S
yXodmKe7EQqZ29fqVHo7KLlhzt8ed+HFFwuys2ALngDi+0zZtFqFXfjAAOK/
588OkbAXJ5jh91lik70aXskFyXC/1Oq+dgocIdrTHVAo4mdNK1eYy9XDUYP2
PbeA74vydZEKRX/5uUUXLhbp7FFYPzxr0+PbLcRncbwdfvHXoDgb5u3uaMw3
xjzYlwg78IEkhX5mjnKLgsdwAqtCI2YerloDz+eCh3i+ddVzU+HgRNEgB/er
EjF1AHxSQ3QoQXwa36eZJZziKioeKtSk+Pz9hjC3q4TfTvi0viwV8Vm0rziq
UPnREocnsCG/wFKoXeLlskswl7eAx4YOj4uGOd3lOO7/FmenBcEzuKAqnr+R
WSbTYX4dBp8yT8kdCPPjcQLfT/jyPZ3gxNuZm6xO4vNtqhypD2fpigp7+PNK
J73vNxGfR4sPrNCCglH3n8L1/70gp0lWnUKuwO34QLVCLs/uDz4E9+UCHJjf
5djrrIe5vG2cQrHN/O7PgJdygz/Eq73TdrjB4SL97YxCnwaYj7KG+TjcWYX8
Wl1sYgDz63F4qm7t5z9SEJ9FuIzH9dFpcygX1uANOIzf+prTr8LcnQSepxtv
eQTuzgV+8Hl+tSnfAI/kgvC4/297XJkJ/2tnjfnenMkbhsD/2lsp9OBVh2Fd
4GNc7hrrB6MrzQzhZC5/pdDJWk3e/byB+MzpsAr9OGB3/gX873gsxsvs1oHX
YH3eLsP1O/bI7RhsydNnhX5VDWy+GXblhhMKhT/ZUuwHT+EGxfj9/gtLHAYH
aow8YJ+I+UD+5K1d4X2u1V4FcH7594lGMLe3v4TrP3mU1e/riM+i3d1lzDca
La3xEv4oyt/DEbWmZt+AuRzeFYUc2hvFxsBtuUChQjsXhK3eCvfihjZ4XnIz
R8+Befv8KuaL7s8tR8K8nE7Gv58Vq9kdDr2t7X4Lbj6ib14zOFY3sdmca/DV
aLnqGuLzaPHCCeshvZQdr2CRjZMEB/Y+65cK/3kjEtoxvjh4uZ6Cuf1lCu6n
6qemITBXG4E3LG9aYz48VJTHvIn1xvFWL93hmaJcRiq+r4Ufk+xhTp+BbfMC
o1rCfJzmFj7f46erNODL4vUa3HzIL8+3yYjP4nG7rVBu74I+abDo5uWWptDr
qBDTOFiHCywr5Dy5Rp0dsDk35FOo4VKHjwGw6FbudEehcXkOD8fC3A4X7rq+
puwALxftcTIUuugdGmkC7xblcu8qVDLr9bpaMJfPgf/s+u1XdBXxWaTT3cN8
OivXPQMuEsfr7itUbLKmdzzMr9vhylkfzcNhDr8PMN843bLxErhH4svD5g8x
38s20JgIu2uIjBLMZ18+/NQbnusqdqixXrk6KrctvHW7mGDhekyPTKsNx4j2
2LAfHuoPSYjPol3WY6zn3geeuA9z+ewshRrENd17Af4pymnBGrpLt+yBDbih
MO6vWlErlsN83DYH8WjNpjmeMG+/wQ1X2vk4wdPEdPwJrl8xVqLwGl7A4flK
LnKrD4vsqDPwpG9Ffb9cCUpWIkWCqEJ2S87YZ8KZb0RBQax/ne07y7Co/nIs
F+OL22bz/TC3z3uO339jVJtA2EyU04f7Fi1p4QOTKK/3Ap5q1KQ/zOn2eRhv
vq3Qt4D5+D38bONxHV04TGzH5yt0v8mu+t8uIz6L5flLjI8RrnVzYNH98g38
oyq59iX4TaxocKXQNqrSioarSz0lm1cKTRnxVysIbtZDdBjHfMr8Vu3pMOZW
fYJe4/NfGlF3EDycfyDm838O17eC/fgFNOabb2SdRjCX23yr0MGpO/R/XApK
PiLKb7xDfFhk1SQXThLpOHB6/bAWV2E+nlOoUOfmapsjML+uK1Lo5t6j5hvh
huLxha+vGNV5FmyhITpa4/dVb9sPhV3+DVhU6KzhZAN78wYX1i8GVW5N4JWc
EAG3vDqmMhHxWbTX/Yj5gLuzTz7M7Xbgg/HBc27A90X53U+IV2b7V8TAxaIc
D9zlhN+WrTCn533G992pxt45MB/X+4L4e2bCiZGwA0+IFKrRYqnSHeZwXoLx
d/b4tObwfE64wvO1u/pZtRqUHBIpCnRh/hQy49Nr+OQb0dBBoe8Ddv29BYtq
aY7fMH5eWW9wGuZ227BNvr15KFwp2m+VYTw7cq5XAGwoynGXY/2i8WnUWJjL
c8HvPnyY5QAP5gM6Cj0adybIBJ7BCZ2I/9T1QC2Yt/NgzfCVCUUK4rOY3lcg
Hg7ccj8DTowVDcYVMh4/vjgezirdu/YO/EH6pLkLLrEXVwTzj9HObZbC9deU
ajevxHqi06TeHnA7fqGD57FrT48+MLfj+63QlYm5y81gLs//B/PRyF7768JL
ucAoxvcPUy59khGfRfp+lUJWjkOeP4T5OH+1Qmkbfv1JgHl7H66d5GuyD34n
lvt/MV4+2e+0Ctbg/1R6nh463RtuwS+MVeqw1XWbC2zHB4xV2qZz41wHeCQX
pFDJa+DfHB3YnwsYq6TV9W9VqYT4LNpz1lLpRfL1/3LgY6JdB9zvXf+hl+Bk
Ub5TU6WDe7cviYa5nIeWSsMf7D0cBP8Q6T3wpcBpd6fD+rwhpVLfyPKKQTC/
/qujkptxfzNrmIcDuFfF+BEG8BQukK5SoEnn1RUJiM/cUFOlRdvSzjyHRXXR
LDi4s2leMiyqP6+sr1JHzT46x+CHol1vA5WSfrfqvRnm9j3wWe1rc2fDXM5X
WyVfS9Mjw+G2nCCl0vjhA7Jt4V5cUEulEn/res1gPv6nq1LE8qe9qi4iPnPD
XpVS/JwDXsGhYnoAv+o+71QqHFuaOcRHT6WpjzwLTsGp9qIiFH6fzg2bbodf
rRYLJJU8B60dvgD+c0scqMGfG0hbxsBG/xIwaUhQbEpPmNt5weu3eVe3gody
gxeVnprl9qgFz+SG4Cpdd268uOgC4rNI/zVUSc5reDED5uPATVTq8v7u13j4
stgehE+Pc7PeBfNywQjX02zbnKWwWM1QU5W29A0+6wHrcIK3Sm+PDS3pA5tz
QVCVrPpldv4PduYGUioVNjYKqAeL0zT58BZtY/nzecRn0d6vhUr7Wr/99Qjm
cv8tVdrVf3ZvGebyf3B1gLRuP3xXlAMwVmlcdHJ6IFwk0gNaqfTf5a16U2A+
LgB/TG4yzhXm1wcmKlkemXKoI9yDG9SpNG/s/OKGsPub4wduwr2yqWv5OcRn
i5Hes9uoWM89WPUU3ja/ul3jtiqFaZikX4FjVDEg4PnZZ214GOZ2n6Yq+T/U
8NkAc/sPM5XeH9gZPxP+KcqBwu1K31YNgQ24oLlKF1MrBtvAnC7UTiXjhhmR
TWA+PgSX3vD8XBmP+CxeJ7ZX6VrOhd4vYR5e4GZ9bu9IgTE5xYRDpZDyA29O
wMpqsUGN+7m4s10wnHlLJDSppGO4cds8+LOOKIClUp/ZBwrcYW7/21GlZ2/n
de8Bm3GDXZXmLqwdYgyTKA9sqdIePY+3NWAuF9QJ1/PsfMfCs0HJi0X6IPyj
n+vuO3CYOE5ohfEj7cWXszBvL1irdNnKZmA4zNMN+Ki/67El8JsQUWBPpfPL
W2p4wNVZoiEL7me38x594GbcwFslKVvrkhncbYo4ka7SO93mTevBw0U78K4q
nfv0efHnM4jPoj0YLE9dm/MI5nLhtirtnZ3VXYaPiPJh3VT6/qswYj+cJNKJ
4fk1E38Fwny8uLtKcSsGeUyBebvRTqXBEw8ku8INxfIDLt9z2tQSFtXRPexV
Gmi2YrMeLLpXaPbA9ftZ70t5HOLzfLGjolJ4/XHuz+CV/EIWz+fQaZeTYNGd
8zc8/XIX0yMwtwt0wP3jkrRtI3xftA9wVKnO2zrfZ8HFWdxQjuZu0588DOby
Ar1UutslN70r3FqkG/RW6c5d725NYQdx/AA2Gnny8J/TiM/8AKvkrZzRfQXz
r9dHpbHf5q9MhUNWixFBpdif5R9OwSdviYIyKtW71n3CdjhFRxQgV8m8t92d
BXC+u2hYqZLq+6PnWLhStA91xvPQbWGcA8ztRPqpVLnvXKvWMJcXhZsEnw7T
hAfzBEGlxTWmaRXHIj7zhrJKD0teLLsH83EkOG+wQcl5mF9Puqrkrlt32h44
UQxXAzAed7j8fDksTptdhWfsthw1GRangacPVGlpf48MZ7jBFNERV6V8m0H9
zOF2IpsOdh/+I0kb5nbCbrhfdnnZl55CfOYDKyrN/L75Yja8lBMcVdroO9f6
Ehwuyg8NUenMG4O4aJjTEeHDHos7rIPviOOJQ1Vqm77nxAz4ndiuGKZSWatF
7QbDPH2Bc0bpx3SGRbenA8Mx3kzya2cI2/ELDtwPXdad+HUS8fnfgTg6dGtc
h3zYnxOoVVqt/+n0DZjbi49SaWjdXtYn4GOi3Ricfcjt4jaYy4+7I34/NLKf
B3M5stEYH7cfTnKHf4j0ZHjn/ffOPWB9cVx5jEpPNn2+Ywzz9uVYldLj40fW
hHk5A9s6Wj8vPIH4zAUaVCpqO3tqBhzIBX1Vih8//Us8vE9HnJhSaVKO8bJd
sOQu3sAgPm3fqbkMfojfrulEfJ9Lb+6YBHP7Qbh0y0VjJ5jbEXio5KNOPt0O
bssbNCpl/krr0QDuxQf6cX/1K0kriUF85gIwKtUKyRyXBS/kguF43u8sKFbh
UPF6A7b99mB5FMwf1wvjdWWxdhAssmeqYZOn1w5Oh1/5uOjEeKv0c617Vzf4
zykR0DF/+nzstjVsxBvAKiXoXfBoDHM70im4Hq9WfPt5HPGZC0yp1H10zS15
MJcrhQf6uLS+AXP5kmkYD6r7qTHwIZHONF2l2SY1RmyDL4vjTbDD5WUf5sL8
unMG/r3bZ9e7wzz8+aqk9Dxk0gPW4QMmeF7rD71sDJtzQqJKHzqqY2vCzlzA
TqWC3fnlhceCkidzwxOVvva6vjMDXs4NslX628yryzmY2xXNxvhncvnhLpjL
F8OSS+a8ZfBdUc7IH/fT2uP6nnCRSG+cg3iTZnvRCebjjvALvTWj28O8/TEX
v8/wTT8bwD24QKZKowMHRX49ivjMDZVUqh+a3icbnqsjOrZh/F6qWZgIb3MX
FaBV0rT5vS0ajkE0Pwe3O3fGZh3M7coDMJ8sbpE7A+b2ZbD3Y5egwfBPUc58
oUoTp3bs2AXm8maLVLLYeTfLEOZ0Z/j6yA6rK48EJQ/ihm0qGUT2tXgJTxPb
oUtUajzVMCcF5uURfOnQsaCTsMg23bNUpV+uJdYhsOIjHhCMz8O+582HM0+J
DRWVTM/KwWNgUU0rZLlKVeO6OjrA9bhgC+bP/f0+mcBm/wp8k9FszyhNmNsb
rER8uqY9rPgw4rMod7gK36f94hr34cWi/AFckrE/4QIcJtIhAjHez13uGwHz
8YjVuL+bGRqvhPl1CeyaPCvTC34jvr41Kj0Yu2KzC1ytiIJQuN5P+5MF3Iwb
CKj0x+7eD124GzecVSnGTze+7BDic0jEnEbr8Pdn1vd9CnN7U9jS/HqbJJjb
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
jS78H7zEUmU=
      "]]}, {}}, {}, {}, {{}, {}}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{0, 0},
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  ImagePadding->All,
  ImageSize->{637., Automatic},
  Method->{"CoordinatesToolOptions" -> {"DisplayFunction" -> ({
        (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
         Part[#, 1]], 
        (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
         Part[#, 2]]}& ), "CopiedValueFunction" -> ({
        (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
         Part[#, 1]], 
        (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
         Part[#, 2]]}& )}},
  PlotRange->{{0, 0.2}, {-0.02693628920485869, 0}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.05], 
     Scaled[0.02]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{{3.742025585169056*^9, 3.742025627769464*^9}, 
   3.742025686245832*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Plot", "[", 
  RowBox[{
   RowBox[{"gImAnInter", "[", "x", "]"}], ",", 
   RowBox[{"{", 
    RowBox[{"x", ",", 
     SuperscriptBox["10", 
      RowBox[{"-", "10"}]], ",", "100"}], "}"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.74202554869128*^9, 3.742025560366516*^9}}],

Cell[BoxData[
 GraphicsBox[{{{}, {}, 
    TagBox[
     {RGBColor[0.368417, 0.506779, 0.709798], AbsoluteThickness[1.6], Opacity[
      1.], LineBox[CompressedData["
1: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
EAI=
       "]], LineBox[CompressedData["
1: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
+D/EumFu
       "]], LineBox[CompressedData["
1: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
       "]], 
      LineBox[{{86.59869593650055, 0.0003059655537530316}, {
       86.60604000198803, -2.9758016528358426`*^-7}, {
       86.63664187619878, -2.9684310771853296`*^-7}, {
       86.66724375040951, -2.9610777600698876`*^-7}, {
       86.69784562462026, -2.9537416574293725`*^-7}, {86.70432862200454, 
       0.0003059655537530316}}], 
      LineBox[{{32.40838383271121, -0.0004720096337872172}, {32.4122341975763,
        0.0003059655537530316}}], 
      LineBox[{{32.191906926014205`, 0.0003059655537530316}, {
       32.19475518119708, -0.0004720096337872172}}], 
      LineBox[{{85.99511207370264, 0.0003059655537530316}, {
       85.99799902349817, -0.0004720096337872172}}], 
      LineBox[{{87.00122591095, -0.0004720096337872172}, {87.0035733296568, 
       0.0003059655537530316}}], 
      LineBox[{{86.5056821654309, -0.0004720096337872172}, {86.50953770226478,
        0.0003059655537530316}}], 
      LineBox[{{86.7921286564627, 0.0003059655537530316}, {
       86.79501980281019, -0.0004720096337872172}}]},
     Annotation[#, "Charting`Private`Tag$119664#1"]& ]}, {}, {}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{0, 0},
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  ImagePadding->All,
  ImageSize->{978., Automatic},
  Method->{
   "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
    AbsolutePointSize[6], "ScalingFunctions" -> None, 
    "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
        (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
         Part[#, 1]], 
        (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
         Part[#, 2]]}& ), "CopiedValueFunction" -> ({
        (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
         Part[#, 1]], 
        (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
         Part[#, 2]]}& )}},
  PlotRange->NCache[{{
      Rational[1, 10000000000], 100}, {-0.0004720096337872172, 
     0.0003059655537530316}}, {{1.*^-10, 100}, {-0.0004720096337872172, 
     0.0003059655537530316}}],
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.05], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{3.742025561197652*^9}]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{"ImVsTab", "=", 
   RowBox[{"ParallelTable", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"r", ",", 
       RowBox[{"ImVs", "[", 
        RowBox[{"r", ",", 
         RowBox[{"15", "/", "100"}], ",", 
         RowBox[{"\[Alpha]cont", "[", 
          RowBox[{"[", "1", "]"}], "]"}], ",", 
         RowBox[{"\[Sigma]cont", "[", 
          RowBox[{"[", "1", "]"}], "]"}]}], "]"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"r", ",", 
       SuperscriptBox["10", 
        RowBox[{"-", "10"}]], ",", "100", ",", 
       RowBox[{"1", "/", "10"}]}], "}"}]}], "]"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.7416964672586317`*^9, 3.741696467466772*^9}, {
  3.7419314602330027`*^9, 3.7419314624812927`*^9}, {3.741942885678555*^9, 
  3.741942889890831*^9}, {3.741956288825604*^9, 3.7419562895455627`*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"ImVsInter", "=", 
   RowBox[{"Interpolation", "[", "ImVsTab", "]"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.7416936710416307`*^9, 3.741693680592991*^9}, {
  3.741931464061099*^9, 3.741931465691093*^9}, {3.7419562905373383`*^9, 
  3.741956291200775*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Plot", "[", 
  RowBox[{
   RowBox[{"ImVsInter", "[", "r", "]"}], ",", 
   RowBox[{"{", 
    RowBox[{"r", ",", 
     SuperscriptBox["10", 
      RowBox[{"-", "10"}]], ",", "100"}], "}"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.741934257260697*^9, 3.7419342779563217`*^9}, 
   3.741956291640793*^9}],

Cell[BoxData[
 GraphicsBox[{{{}, {}, 
    TagBox[
     {RGBColor[0.368417, 0.506779, 0.709798], AbsoluteThickness[1.6], Opacity[
      1.], LineBox[CompressedData["
1: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
k8OK5gkZjVD7Nq/cvgT+/+/9F/bjRrM=
       "]], LineBox[CompressedData["
1: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
TvnAWg==
       "]], LineBox[CompressedData["
1:eJwVlnk4VV8XxyVKpVIkM0kiKTLcwWUv96okyXTPOZVMUaEkpEhmSqYS0mhI
qNRPGozZQhKRKEXGQoQMDVLSe96/zrOetZ+z1/quz/qes8r5iLWroICAQNwc
AYH/P4naplrZ13wwYZ5rU1cvQ5u37C/vpuPjYr32YanF6GPoT8W3LXz4IZ/w
4ZLbQxT0JCq07i0fpO5XZ4ysykey05Kf8Ds+TCp/7Q1Kv4WKdHNMHrXxYf98
0YuNQVnI1ouRffsDH+oqnHkZG9PR+J3n89M7+ZCWpuc1dfsSivtMuiV38+FP
W+vmbaFJaN3qwbqzvXzIvu3ksw/OoRr7E+tDPvHBLSzRtghHo32XReKP9fNh
qDQt6PfZCCTQmjrm/pkPDsHJXZ57Q9DVZepWjkN8aB0Wm1w84Y9YO4oL+MN8
YFX67TMr8EXXrbOoY6N8WHRocH2VsRcSohJmk8b40LWnf4XmTjfkvjcg6+EE
Hzr6d110eL8PNTm7mr35xofHPruk5EwdkP5By/FvP/hQs1bP7FoIha4cNkgR
/8WH9t293ncdbZCAjypH5zcf/Fo2S1G9Fmj/iWUfrWf4YF56sU72lCl6eWrm
tPcsH2Icoj3rsnlIO/yzZqIAAaI3cz8M9iKUcqa55b4gAf8eSp6p6mahmbgn
/q+FCPCWCbeX36uHnC/kKk7MI2C9pkDnnRlt9Dz1wjOxBQRkj29c3YM3oPXX
gzy0FhEQpyIVUPB9HUq84bbMcjEBatuWVHxbrYZ+5doWHllKQOTCNu3MljVo
7z20N2EZATcOplqskVVBlQ/Wzf1PnACUPrzb6aUyUitecatxBQG/V4xcE3i0
CsWXC+z8upIA61sxQ+49Suhb1fD3xTIEHHlnP6faUAlRL1ova8oR8PBM0cIY
X0VU3vgUdigQoLPk63GH/xSQypu8gUNKBFx81tYhJaeAotsuxsYqEzAtZF6/
MVcefe0K25SnQt8XNbbqICmPbPsOv69XJWC7q1bTY2V5VDJEBQ2r0fXdHdQq
FpBHimM8lUUaBKRWOmp1/JJDEd831K3TJGCjo8rs7CJ59GVa2stsIwHvBdce
P2Egjyz/CUm6axPAS3ne+jhSHj0SGi+N1iGgpmnNMdWv8khm4QenW3oERGx8
Rj4IUUAhS2vmv2AQ8Fngko+9jCIakLh/d5BFgHGuuJRWjiLaLnPVRoRDwHPb
rZnnhZRQvuLp6bVGBBwz3iqkuk4JSa7xTtsKBBw6St3ZbqKEAtft3XyAS8Bt
L4HvNtZKqHej6XCUCQFNzv3yoYQS2qKncz57CwGH+34LUHQ+j63AqDElINTi
68kV25TQcljQ2W9GAHuzp0KhvhI6vvl7mPAOArrjNH71SCuhDrNutTU7CQjP
vcPDPYqIa1nXaGJFwIWFynOu+ymiXP4jXxcbAuaLtHS+mlRAi/eky0TwCSiV
ddjiZKKAvB1jKm6QBMi+6N0QkyCP3rv67a/aRYCuW3qH3YAcMvJwEv20h4CC
Q58uXz0kh254mRcI2hPQ218oxRGRQyJ+DErZkQDHhhnPS4WyyPOk8qyxMwGn
Vms8TwyXRW9CFmc5uRCgaTZvhGEti1hRv7aF7idA392+5JikLLoe82ks/SAB
OQMVLWVYBgmdb0yucCcgX3rzlzBTGeSeUmzQc4iARH+x0uQcafTqSlbvP08C
WO/J1OJOKaSbkXBa8SgB5Y93xkQ3rESXswM0kQ8BJ27+FLrgKoneCz4uZh8j
QM4geCj4tQRa6TCxWf843X98ztjT8uWIKF3frO1PAJi0rlMRFUNJKw/aa54k
4Lhb6pYNVQtQs8+NL2qnCCg2r397//gcJNbU5acSTECdPuOOgceQkcV6mblK
oQS4hJ68I3J8ojzuDD9BNpyAs7USPfYKovhl3znZlZEEtLeFyMm2SuOFxi9z
lp8mYAeIGy3apYJNr83XXRJN8yq+VdcwTBNHTXMrFsTQ/QT9cuk8rIOr+UHm
wnEEUPLyFYnPGHhuQfF7gQSa14pcx8MCBpi75IfLzDkCelQITku+IQ5x15qY
SiRAmu2R+rcT4fIaj1Pfkmi+LlxoKSgD/Fc5Z8FYCu03e7raWHxjzAn+mPwl
lYDN2uaJB54Z44AP8soDlwk486foSrEiFxcxdt3rvUqAzJV0szcHuHjqQhK7
8zoB/LS4aL/rXKw//qrmfTqd1x2a0arnYl/zRTZvMgmIKp3fNjjBxQW5W7pf
ZRHwYUYixXcpD08IhXnUZxMgoHhNX0iFh7WcnkzV5NL62CuVbNzIw55PfoVX
3iYA9+RGDevycJ60rlh5HgHukcYDlgwe/nLsyNXiewQsTTIMyzLgYbXm22qP
8gkwLSwxGzXi4QMbBh7mFxAw9LO1TcqYh7PPrjLOe0j7Z5eV8FIuD/cN2DXk
PCbAVcHdT4COlXmpu24UERB92K5Wlj7vmNbSf72EgFetmV3nEA9f/7PE+3IZ
Ac9siuUDDHm4kzSbTS4nIOSO4NxuNg/LPYw8e76CAKn5yfFddH27xZ5KxlUS
UNZpej6Zrj/10EzmmWoCGtSycge0ePhdLWNjRA0BW6OaHrSs52HJNT6lwbUE
DFCRN1PUeNg29N7Wk3UExK/eY1y6mocTO4da/F4S4GzH3rFMgYdfs9Y4ejfS
fq4meSlhJQ+LpTiOHG4iwMKo3+IVra/F5JUTbs0E7NGtKgqYx8OxFu+EXN8Q
IEg5hi//w8X1t5efd2ylvy/nW54eH+XihfMt5O3eE7B76tSl/E4uNt0XfYts
J8CpKFrfo46Lo3C1nk0HAen/pMtPPeDialmBSosu2g9/SBbeusrFgicMLMx6
6Pk9Xh8sd4aLjd/4tW/+SMBsi7neGn8uDtEq2G/cR9e7rPTfm8NcXB47OskZ
oPcj4qGiy34unhlUC2YOEqB8rLd6Zh8Xsze7LNL9QutxIX+FqysXn8hIu7hx
hOZ/669eKXcuLvzbvlrjK83HhiO/Lvtw8c9dkvmq47Sfhla8NgvmYt3HVhzl
SQKM1HH46rNcvIWt3yj+nQCNdSslus9xMVUu4yj8k77ftpQvncjF7tx/Ez+n
6Pl7Lix1jufiwJpP4YPTdD3feQXNEVwcb1a7ov0P/T2daU7/Td+X3piXU//3
//51ZOs/O5pv6/OsJ/8I0DvUdG0C0fq0Hqu/N4eEkxUuIwwpLm7dvXtv+lwS
QmPmHIsbMcaDXUZj54VJ2H4ha8VshTH+7bw6NHw+CQ/st7lbXTXGop/nix9b
QIKGeFfAeJAxVvAYydq/iM7XPZX+42qMtcaa9KnFJJhPrmRGWRljrs+j2m1L
SRio+uiXZmyMbacu7TZYRoKcYrJ3vq4x3n8yaGS9OAnBcxd2flI3xif+OQcp
rCCh/ofl8BVFY3x1/vrMOdIkHNIYLg9dbIzvxYjpfpMhYfe7yPB9wsa4YumP
Z31yJLw7YiMp/xdw84U2slWBhNzQvpDmb4D7VpYPPVciwf9u7C/LQcA/r2Se
LFYmYQUea59qAyyidHrxHRUS2j5/kEt+AVgmyyPtqioJ60oS0MfHgNerWWrH
q5GQhxXzf6cBNsrTrQpeR8KJeU4vZs4AttSS5h9dTwJEKeem+AB2fvh3wHkD
CetXZw2F7APsw/x4wlaLhPedmVK5JOCIspqFWzaRMHK4rKtqJ+AUuHOVoUtC
i9e8L+HmgHOrEzao65Ogo10T/3IH4BJT3woZJglrf28N7LAG/PIlZS3KJiHH
NHPtEjvAXZaGfX8NSDi39iFnjTvg8Ter/MYMSUgK8/0n4Q9YcNc8kV5EwjZr
xYyxKMASnV8uNRuTsGnM2XhuAmBVp1ca1TwS+gsSDl27AJjZ/+DJo820Xkqu
6+qSAJu5pe7M2UrC1itLWp4lArYbDexN3UaCRcaWQaE4wJ5HnXzObqfn9S2P
/yoMcMiPzcKBO0jwKsuWcKP1SPRfd/HwThKYoovPmNgDzvq7RN3BioRqQnTb
XR7gx6HfSixtSNix6fjWNasB1wq/N+fySXBqEMmLHUO4PbqsS4ckYXzbuJ1b
EsIjizO81uwiwSZKdb6/AcKz5yMFV+4hgVQ4YZLz3QiLSboniewlQTH/9b6n
JUZY+bKF6m97EuZe7u8xOWuEdRV0ioYdSeCctXRI22eEt2SuNOt0JuEDd4v1
h81GmFKd+dDoQkJE6c83vA1G2P12z+GK/SQ0lpjXfpIxwoEbnv27f5Cer8ln
f+4CIxxfcOv8DXcSPglHpo5OG+J0/fjVyYfo9+u0zF03YogLSrwfRXmSIO0y
4/GzyxDHiRTEZHqRUJT0pu9jkyE+SEw4lXuTsNKZqDxcaYh5WVrMdl8SGh6E
lrs9MMQKk0eW/PQjQfujVdXBTEM8jf7rW+ZP74tHe790vCF+E/e1RPMkCRuL
u8NDfQ3xvQ+a57edIuGRrYlEAt8QR6sfPuAaTMKqZE1ZVW1D7HI8zzA0lObX
y+R+5xxDbPRsWPxaOM13YEFjbgMHS4trfCmKJKFj68j55Vc4+Luje8Wb0yQc
6HM8O+3Nwa/u3UoZjyYhMNjAONyWg2/PDB4SjSUh5tWe976GHBxppsZTiydB
Ic7pxktNDnZMPSBtco72A+tAL981HGwwkD3mkEjCmcSMGUsVDpbUHXh2MomE
Df85nHZax8EToWuuXkwhoTJ3cDaAwcEvX7l4P0glwf5bd6Tzdg7Okc8yfXWZ
5l/j04JmNw4O8/ikMHyV1kO+8IBwAgfbFSv/mJdGwlfBOUdNHnAwY75zvXIG
CYuLv9ywaeTg5fyMDKMbJLTXZq5jd3HwSGbP8d03SejrIuzC+jn4+biihV8O
CWW7V13j9HFwppGDSuItEpxj909caePgU7HXf9+9Q89Xmlk8U8XBVHtn04u7
JPx68HS8MIODddTkc/r/IyGWWPjw21EOXuJnd2pOAe1/v8vMenU5eKjqio38
QxJ8KfnLyn0GuHrZB3XWYxKyfWtGk0MNcJqDjAC/iARNPdfB/+QNcMDdXa1e
JSSkG023fqxhY/6f1LzYMhK0VAICeyPYWGvb+7DcchLk1xvMzbBg44UXV+6q
rqD7uWIWaqvCxv19xMaeShIS5I9xKGE2rtiUIjxTTc+HqvCeGGXhyyFvP6x8
ToLn2lEdpQ8sfKxRokDnBe1XVW8t3OpY2FLO9szOehLEJx/fCC9jYQ33C/Ye
DfS+BS+ceyWfhecVNeuefkXvv6eo2sebLFxmY9Vb3kKC+8U72fKJLHwx41xh
+1ua59c59vWnWdh77FXcz3ck7Km0VsgKZGFzw6Uuy9tJ+CFr53jEi4XXxliw
N3SQcGmedr/0PhYWbIsTM+siwUew2jXfmoU7VBsGXHtIkCmRuvTSkIULfUWf
hH4kYTpMcUehMgsnVm6/cK2PhMgVTDFhQRY+LBbjVjxAwp8nS+O125nY1L4O
vR0kwayot6Ivm4lX5y2QnPhCwvBi9u1L3kw8O206IjpKwq5Jjns5l4nbtp6p
VBsjIUp1EWOnEhM/TH6eajJBgtDRE/akMBPHf5p3xPEbCY4mrm2PJhjYTXvL
5sAfJHzZZ+pr1s/Acq1v5/hO0Xzr3yxe0cPATQGu5R7TJKjnRTC+0nGE4o+A
fX9ov9sw2zH9mYGZ1RGMPX9J+CkTyij5zsAjByW+W/+j9X5BreqZx8Tpi7Py
zeZQ4O22zeKxMhPbFugc5s6lwPryj+1reEwsQlaps4Up2HOzVm6nExOX/bEe
0J5PgWiqdc0LPyb2Sv+Yqb6AgqPechVewUysstnbYdUiCrRGrVg5gUz8bmiO
nPRiCq4S/pL+h5j4bPz592JLKUg288lu2s7ERjqrkkWWUXD+q++JKTkmnnyX
byUgTkF13B3mbDcDZwfCkl8SFIRn4Vqhswy8e1VT3ZgkXQ9jQtNLg4GX1Dic
/ixFgXCZXY5Cgz6udB/jdctQsGHVw6EXwfr42NJggXdyFJw6o2t01lgfqz1c
8qRRgYItipe27xbVxx3Udf8aJQoq668anerRw+f+auqXK1Nw7Ii3svATPWyS
+WTykQoFg053/Wuv6eFfW3b8d1eVgvk9r7tYIXo4b7jD46YaBe8aNhklOelh
x3OH1K6to8BQgFmwEPSwuN5MX9J6Cp5V3Ldyl9bDNW0xGbEbKIgzX6A2OKqL
A4Jk7SO0KBBYdqq2slAXb1h9RyZwEwWW3zuS67118cfn7Hc+uhQsd+qc1VDS
xSmH6i546FNwP4A3M/tYB5st2225j0lBrLJlU5OGDp59NCS6h01B1RJOlHfI
Jnx/t/8Law5d/2//tJ152tjln0iUmREFZSbt1oantbBUViqXCxSY+wRKfB7W
xC9N1f6xuBQUHQ0+kJ+pjkNGC0u1TSjoPVhgutJUBesmbj2hvoWClJQ/KX7n
ZfGg/jvdVaYUOApyTJwj5uKrH/ZPSJlRMP4al2+QmIt2hvy8K2ZOgd3nWMnE
E3JIcE2Uu4gFBV7HT6/o7F2DHr9YsVbAkqL/j7JlvzdrIHfPm5+mrGg9w3L+
6JNaSEFcL33MhoKAALkhdYNNqLmw2u4znwLCc1nn0jQdFGVnK91NUpATmRAa
fVsXsef0vW3dRYFSsqe3Y4AeGr3pk9i4h4KQuYo7pAz1UbrZ3J01eyk463vG
yb9dH9mOJS4qd6D16F4dKkQykEiScu0jJwr+W/Sl/UARA5UxCyLu7qNA9ltS
xpE5TOTVaWx805UC9TijBal6TKQS9vrv1QMUyLy/8PvRbiZ6r+pUkuRGAU++
aOKgNxPF1I/7xXpQUOwkajEeyERGXiE6EYcpEB/b//wUHU9KiI2fPEJBNK/T
r5I+n12cludzlJ7HgQ2v/R2YaLf9RjcPHwpqfbK9srlMdGPfwdJrxygonfp2
tEqciUYOZixuOk7Pa/sNW+1eBtL3bHcQDKBAcp9Nj1sBAwX7iBfoBlLwnlFt
NXaOgWpPmAsdCKIg3/GZUJkfAy0PiiQuhdC8mE+zZFwYaE94eW59GAWFOG7h
jl0MlHVm6vffCAo6sr1CCvkM9DVOa4fWaQr6Pb25E7RejAtuac7RFMy9xDIo
cWCgkNTMiaQYCvavWvxC4ygD1V37wHseR4GcfoGmcAIDid+QSJlOoCA+tSpi
QSkD2eXuGNRIpOCGbLSC5w8Gyr4bxbZPovk3dn/zZCsTjRXg2HMpND9OLFx/
h4mYRb+6KlPp/ge1c2yWslDYE23tH5cpeNkr09O0l4XqK93D116j4PIX1+j9
F1lIovbG211ptB71XSP2VSxk39CxNjaDggfLlYK39bJQTvOKgPIbFCgzi2xU
v7PQ+DuLl+M3KdAIOBoA/1iI3XlaYXUuBVFVFbtE5rNR+McKL/5tCnKdJ738
FrHRy8/TlafzKFD4PXVyVJSNJEc3rSi5R8Fn8ciGDjp2mPQ4MJJPQUPseLcZ
fT53KqtY4QHNr/rRoHgRNpqc6Vxk9Yj2M7mwOjthNjIQXGkfXkiB54IvQRlz
2ChivmX+o2IK8mLuPY7+y0INotGCg6UUTL5z+bRjmoUkl1faypTT+5dj93jR
DxZyXPkn27yCAqGc+IKBcRa6Jac7HVRJ+4XTd5mfIyw0uerw9vvVFCQOOS+P
G2Ihztrsa59qaP+XZF9uG2ChyPXdYyteUGCV2DA6p5+FGrWluKb1FLjIvLS6
1sdCUgyrpIAGChimDa236LwT5+xA3it6Xxdp1ewbZKHbxlXM7tcU+JckvRUb
Y6HvW2bOLntD+/2xqamEPyxkaK7XyWul4ErJLLVmKRtFWXlu9HtPgXFVpNh5
dTZqInJCc9spKEny2+y6k42k7Xpa2jsoIHep3jwSxEbOTtKqi7sp6BQJkMnI
Y6O8/dYnUC8FutzbT2tesdEPj5i6o58oqFv1yPfsABsZHa2Wy+qnYEzBcSbx
Oxud8fvr2fqZ5s+449DwNBu9Pqn/VOQLBaNLlmT3/GQjmdAj4gYjFOg3f9vY
OMxGLlG5roe/UpC+tEM57AMb3Y3pLUwbp8BHpsuqoZKNfp6TWdg8SUF5jMjJ
wOtsBCk2dkI/KDjSwR82O8RG0Vdi7+lP0fsfWTH2je6vOf2ZgNs07dcCvLeb
3rKQXPas9ZU/tP88ezdY6cFCrncYNxv+UnDXwv+4wzAT3cv3mvr3jwKWhHJj
lRUT/Q8NOHRl
       "]]},
     Annotation[#, "Charting`Private`Tag$1818148#1"]& ]}, {}, {}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{0, 0},
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  ImagePadding->All,
  ImageSize->{856., Automatic},
  Method->{
   "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
    AbsolutePointSize[6], "ScalingFunctions" -> None, 
    "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
        (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
         Part[#, 1]], 
        (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
         Part[#, 2]]}& ), "CopiedValueFunction" -> ({
        (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
         Part[#, 1]], 
        (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
         Part[#, 2]]}& )}},
  PlotRange->NCache[{{
      Rational[1, 10000000000], 100}, {-0.0023741144955748534`, 
     0.1100031047974151}}, {{1.*^-10, 100}, {-0.0023741144955748534`, 
     0.1100031047974151}}],
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.05], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{{3.741934271826179*^9, 3.741934278513173*^9}, 
   3.741945469372963*^9, 3.7419592155191183`*^9}]
}, Open  ]]
}, Open  ]],

Cell["Check that ImVs[m -> 0] ->0", "Subsubsection",
 CellChangeTimes->{{3.741695975793347*^9, 3.741696017303967*^9}, 
   3.741696153835601*^9, 3.741945677396819*^9, {3.74194849076095*^9, 
   3.7419484930566177`*^9}, {3.741956858250393*^9, 3.7419568632187433`*^9}}],

Cell[CellGroupData[{

Cell["Check that ImVs[v -> 0] ->ImVsold", "Subsubsection",
 CellChangeTimes->{{3.741689248831089*^9, 3.741689294832055*^9}, {
   3.7416895052080507`*^9, 3.7416895302091312`*^9}, {3.741696054345454*^9, 
   3.741696056136693*^9}, 3.741696157811616*^9, {3.741945681556302*^9, 
   3.741945683876194*^9}, {3.7419568974270763`*^9, 3.74195690253111*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"ImVsold", "[", 
    RowBox[{"r_", ",", "mD_", ",", "\[Alpha]_", ",", "\[Sigma]_"}], "]"}], ":=", 
   RowBox[{
    RowBox[{
     RowBox[{"-", 
      RowBox[{"Re", "[", 
       RowBox[{"ParabolicCylinderD", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"-", "1"}], "/", "2"}], ",", 
         RowBox[{"\[ImaginaryI]", 
          SqrtBox["2"], 
          SuperscriptBox[
           RowBox[{"(", 
            RowBox[{
             SuperscriptBox["mD", "2"], 
             FractionBox["\[Sigma]", "\[Alpha]"]}], ")"}], 
           RowBox[{"1", "/", "4"}]], " ", "r"}]}], "]"}], "]"}]}], 
     RowBox[{"Quiet", "[", 
      RowBox[{"NIntegrate", "[", 
       RowBox[{
        FractionBox[
         RowBox[{
          RowBox[{"ParabolicCylinderD", "[", 
           RowBox[{
            RowBox[{
             RowBox[{"-", "1"}], "/", "2"}], ",", 
            RowBox[{
             SqrtBox["2"], 
             SuperscriptBox[
              RowBox[{"(", 
               RowBox[{
                SuperscriptBox["mD", "2"], 
                FractionBox["\[Sigma]", "\[Alpha]"]}], ")"}], 
              RowBox[{"1", "/", "4"}]], " ", "s"}]}], "]"}], 
          SuperscriptBox["s", "2"], 
          RowBox[{"gold", "[", "s", "]"}]}], 
         SuperscriptBox[
          RowBox[{"(", 
           RowBox[{
            SuperscriptBox["mD", "2"], 
            FractionBox["\[Sigma]", "\[Alpha]"]}], ")"}], 
          RowBox[{"1", "/", "4"}]]], ",", 
        RowBox[{"{", 
         RowBox[{"s", ",", "r", ",", 
          SuperscriptBox["10", "5"]}], "}"}], ",", 
        RowBox[{"MaxRecursion", "\[Rule]", "20"}], ",", 
        RowBox[{"WorkingPrecision", "\[Rule]", "10"}]}], "]"}], "]"}]}], "-", 
    
    RowBox[{
     RowBox[{"ParabolicCylinderD", "[", 
      RowBox[{
       RowBox[{
        RowBox[{"-", "1"}], "/", "2"}], ",", 
       RowBox[{
        SqrtBox["2"], 
        SuperscriptBox[
         RowBox[{"(", 
          RowBox[{
           SuperscriptBox["mD", "2"], 
           FractionBox["\[Sigma]", "\[Alpha]"]}], ")"}], 
         RowBox[{"1", "/", "4"}]], "r"}]}], "]"}], 
     RowBox[{"Quiet", "[", 
      RowBox[{"NIntegrate", "[", 
       RowBox[{
        FractionBox[
         RowBox[{
          RowBox[{"Re", "[", 
           RowBox[{"ParabolicCylinderD", "[", 
            RowBox[{
             RowBox[{
              RowBox[{"-", "1"}], "/", "2"}], ",", 
             RowBox[{"\[ImaginaryI]", 
              SqrtBox["2"], 
              SuperscriptBox[
               RowBox[{"(", 
                RowBox[{
                 SuperscriptBox["mD", "2"], 
                 FractionBox["\[Sigma]", "\[Alpha]"]}], ")"}], 
               RowBox[{"1", "/", "4"}]], " ", "s"}]}], "]"}], "]"}], 
          SuperscriptBox["s", "2"], 
          RowBox[{"gold", "[", "s", "]"}]}], 
         SuperscriptBox[
          RowBox[{"(", 
           RowBox[{
            SuperscriptBox["mD", "2"], 
            FractionBox["\[Sigma]", "\[Alpha]"]}], ")"}], 
          RowBox[{"1", "/", "4"}]]], ",", 
        RowBox[{"{", 
         RowBox[{"s", ",", "0", ",", "r"}], "}"}], ",", 
        RowBox[{"MaxRecursion", "\[Rule]", "20"}], ",", 
        RowBox[{"WorkingPrecision", "\[Rule]", "10"}]}], "]"}], "]"}]}]}]}], 
  ";"}]], "Input",
 CellChangeTimes->{{3.7419569279423103`*^9, 3.741956939302573*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Plot", "[", 
  RowBox[{
   RowBox[{"ImVsold", "[", 
    RowBox[{"r", ",", 
     RowBox[{"15", "/", "100"}], ",", 
     RowBox[{"\[Alpha]cont", "[", 
      RowBox[{"[", "1", "]"}], "]"}], ",", 
     RowBox[{"\[Sigma]cont", "[", 
      RowBox[{"[", "1", "]"}], "]"}]}], "]"}], ",", 
   RowBox[{"{", 
    RowBox[{"r", ",", "0", ",", "20"}], "}"}], ",", 
   RowBox[{"PlotRange", "\[Rule]", "All"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.741945713462986*^9, 3.741945749566683*^9}, {
  3.741945808210569*^9, 3.74194581204499*^9}, {3.741956941781652*^9, 
  3.741956942349783*^9}}],

Cell[BoxData[
 GraphicsBox[{{{}, {}, 
    TagBox[
     {RGBColor[0.368417, 0.506779, 0.709798], AbsoluteThickness[1.6], Opacity[
      1.], LineBox[CompressedData["
1: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
       "]]},
     Annotation[#, "Charting`Private`Tag$191260#1"]& ]}, {}, {}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{0, 0.8544488217438603},
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  ImagePadding->All,
  ImageSize->{636., Automatic},
  Method->{
   "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
    AbsolutePointSize[6], "ScalingFunctions" -> None, 
    "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
        (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
         Part[#, 1]], 
        (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
         Part[#, 2]]}& ), "CopiedValueFunction" -> ({
        (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
         Part[#, 1]], 
        (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
         Part[#, 2]]}& )}},
  PlotRange->{All, All},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.05], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{{3.741945743581353*^9, 3.741945750605032*^9}, {
  3.741945808929693*^9, 3.741945812903284*^9}, {3.741947521177753*^9, 
  3.741947535745904*^9}}]
}, Open  ]]
}, Open  ]]
}, Open  ]]
}, Open  ]]
}, Open  ]]
}, Open  ]]
},
WindowSize->{1920, 1019},
WindowMargins->{{0, Automatic}, {0, Automatic}},
CellContext->Notebook,
FrontEndVersion->"11.0 for Linux x86 (64-bit) (September 21, 2016)",
StyleDefinitions->"Default.nb"
]
(* End of Notebook Content *)

(* Internal cache information *)
(*CellTagsOutline
CellTagsIndex->{}
*)
(*CellTagsIndex
CellTagsIndex->{}
*)
(*NotebookFileOutline
Notebook[{
Cell[558, 20, 167, 4, 34, "Input"],
Cell[CellGroupData[{
Cell[750, 28, 103, 1, 44, "Subsection"],
Cell[856, 31, 1054, 28, 80, "Input"],
Cell[1913, 61, 6127, 172, 166, "Input"]
}, Open  ]],
Cell[CellGroupData[{
Cell[8077, 238, 145, 2, 66, "Chapter"],
Cell[CellGroupData[{
Cell[8247, 244, 199, 3, 64, "Subchapter"],
Cell[8449, 249, 1379, 35, 51, "Input"],
Cell[CellGroupData[{
Cell[9853, 288, 132, 1, 35, "Subsubsection"],
Cell[CellGroupData[{
Cell[10010, 293, 292, 7, 34, "Input"],
Cell[10305, 302, 164, 2, 32, "Output"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[10518, 310, 258, 5, 35, "Subsubsection"],
Cell[10779, 317, 1061, 28, 59, "Input"],
Cell[CellGroupData[{
Cell[11865, 349, 826, 20, 34, "Input"],
Cell[12694, 371, 2764, 60, 86, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[15495, 436, 770, 19, 34, "Input"],
Cell[16268, 457, 2620, 76, 64, "Output"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[18937, 539, 190, 2, 35, "Subsubsection"],
Cell[CellGroupData[{
Cell[19152, 545, 796, 24, 53, "Input"],
Cell[19951, 571, 240, 4, 32, "Output"]
}, Open  ]]
}, Closed]],
Cell[CellGroupData[{
Cell[20240, 581, 218, 3, 29, "Subsubsection"],
Cell[CellGroupData[{
Cell[20483, 588, 288, 7, 37, "Input"],
Cell[20774, 597, 157, 3, 32, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[20968, 605, 266, 6, 37, "Input"],
Cell[21237, 613, 161, 3, 32, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[21435, 621, 262, 7, 37, "Input"],
Cell[21700, 630, 207, 4, 32, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[21944, 639, 244, 6, 37, "Input"],
Cell[22191, 647, 393, 8, 23, "Message"],
Cell[22587, 657, 1055, 17, 59, "Message"],
Cell[23645, 676, 209, 4, 32, "Output"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[23903, 686, 98, 1, 35, "Subsubsection"],
Cell[CellGroupData[{
Cell[24026, 691, 1026, 25, 34, "Input"],
Cell[25055, 718, 24081, 416, 451, "Output"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[49185, 1140, 158, 2, 35, "Subsubsection"],
Cell[CellGroupData[{
Cell[49368, 1146, 611, 17, 34, "Input"],
Cell[49982, 1165, 233, 5, 32, "Output"]
}, Open  ]]
}, Closed]]
}, Open  ]],
Cell[CellGroupData[{
Cell[50276, 1177, 244, 3, 64, "Subchapter"],
Cell[50523, 1182, 3160, 80, 130, "Text"],
Cell[CellGroupData[{
Cell[53708, 1266, 171, 2, 45, "Subsection"],
Cell[53882, 1270, 126, 2, 32, "Input"],
Cell[54011, 1274, 2065, 57, 91, "Input"],
Cell[CellGroupData[{
Cell[56101, 1335, 204, 2, 35, "Subsubsection"],
Cell[CellGroupData[{
Cell[56330, 1341, 810, 19, 34, "Input"],
Cell[57143, 1362, 3846, 113, 118, "Output"]
}, Open  ]]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[61050, 1482, 466, 6, 65, "Section"],
Cell[CellGroupData[{
Cell[61541, 1492, 100, 1, 35, "Subsubsection"],
Cell[CellGroupData[{
Cell[61666, 1497, 897, 27, 52, "Input"],
Cell[62566, 1526, 287, 5, 32, "Output"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[62902, 1537, 193, 3, 44, "Subsection"],
Cell[63098, 1542, 3400, 97, 150, "Input"],
Cell[CellGroupData[{
Cell[66523, 1643, 216, 3, 35, "Subsubsection"],
Cell[66742, 1648, 287, 6, 32, "Input"],
Cell[67032, 1656, 2937, 78, 91, "Input"],
Cell[69972, 1736, 188, 4, 34, "Input"],
Cell[CellGroupData[{
Cell[70185, 1744, 297, 8, 37, "Input"],
Cell[70485, 1754, 6052, 114, 215, "Output"]
}, Open  ]],
Cell[76552, 1871, 793, 21, 37, "Input"],
Cell[77348, 1894, 239, 5, 34, "Input"],
Cell[CellGroupData[{
Cell[77612, 1903, 297, 8, 37, "Input"],
Cell[77912, 1913, 7454, 138, 531, "Output"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[85415, 2057, 225, 3, 35, "Subsubsection"],
Cell[85643, 2062, 2595, 73, 91, "Input"],
Cell[88241, 2137, 188, 4, 34, "Input"],
Cell[CellGroupData[{
Cell[88454, 2145, 399, 10, 37, "Input"],
Cell[88856, 2157, 4725, 92, 211, "Output"]
}, Open  ]],
Cell[93596, 2252, 793, 21, 37, "Input"],
Cell[94392, 2275, 239, 5, 34, "Input"],
Cell[CellGroupData[{
Cell[94656, 2284, 344, 9, 37, "Input"],
Cell[95003, 2295, 5984, 113, 520, "Output"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[101036, 2414, 300, 4, 35, "Subsubsection"],
Cell[101339, 2420, 1465, 47, 64, "Input"],
Cell[CellGroupData[{
Cell[102829, 2471, 551, 14, 34, "Input"],
Cell[103383, 2487, 10032, 179, 405, "Output"]
}, Open  ]]
}, Open  ]]
}, Open  ]]
}, Open  ]]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[113512, 2676, 199, 3, 66, "Chapter"],
Cell[CellGroupData[{
Cell[113736, 2683, 199, 3, 64, "Subchapter"],
Cell[113938, 2688, 6960, 147, 274, "Input"],
Cell[CellGroupData[{
Cell[120923, 2839, 173, 2, 35, "Subsubsection"],
Cell[CellGroupData[{
Cell[121121, 2845, 634, 17, 37, "Input"],
Cell[121758, 2864, 179, 3, 32, "Output"]
}, Open  ]],
Cell[121952, 2870, 440, 11, 32, "Input"]
}, Open  ]],
Cell[CellGroupData[{
Cell[122429, 2886, 258, 5, 35, "Subsubsection"],
Cell[122690, 2893, 1904, 56, 66, "Input"],
Cell[CellGroupData[{
Cell[124619, 2953, 996, 22, 34, "Input"],
Cell[125618, 2977, 416, 10, 23, "Message"],
Cell[126037, 2989, 77, 1, 32, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[126151, 2995, 353, 9, 37, "Input"],
Cell[126507, 3006, 208, 4, 32, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[126752, 3015, 961, 22, 34, "Input"],
Cell[127716, 3039, 2906, 89, 57, "Output"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[130671, 3134, 274, 3, 36, "Subsubsection"],
Cell[130948, 3139, 952, 25, 59, "Input"],
Cell[CellGroupData[{
Cell[131925, 3168, 1100, 26, 37, "Input"],
Cell[133028, 3196, 473, 8, 32, "Output"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[133550, 3210, 218, 3, 35, "Subsubsection"],
Cell[CellGroupData[{
Cell[133793, 3217, 445, 11, 37, "Input"],
Cell[134241, 3230, 202, 3, 32, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[134480, 3238, 427, 10, 37, "Input"],
Cell[134910, 3250, 146, 2, 32, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[135093, 3257, 422, 12, 37, "Input"],
Cell[135518, 3271, 177, 3, 32, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[135732, 3279, 405, 11, 37, "Input"],
Cell[136140, 3292, 117, 2, 32, "Output"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[136306, 3300, 98, 1, 35, "Subsubsection"],
Cell[CellGroupData[{
Cell[136429, 3305, 1633, 40, 57, "Input"],
Cell[138065, 3347, 35346, 600, 609, "Output"]
}, Open  ]]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[173472, 3954, 244, 3, 64, "Subchapter"],
Cell[173719, 3959, 819, 21, 35, "Text"],
Cell[CellGroupData[{
Cell[174563, 3984, 171, 2, 45, "Subsection"],
Cell[174737, 3988, 126, 2, 32, "Input"],
Cell[174866, 3992, 9500, 219, 460, "Input"],
Cell[184369, 4213, 10273, 234, 515, "Input"],
Cell[CellGroupData[{
Cell[194667, 4451, 248, 3, 36, "Subsubsection"],
Cell[194918, 4456, 871, 23, 54, "Input"],
Cell[CellGroupData[{
Cell[195814, 4483, 681, 18, 34, "Input"],
Cell[196498, 4503, 2667, 80, 64, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[199202, 4588, 655, 17, 34, "Input"],
Cell[199860, 4607, 4122, 115, 64, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[204019, 4727, 1732, 41, 56, "Input"],
Cell[205754, 4770, 4238, 83, 362, "Output"]
}, Open  ]]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[210053, 4860, 518, 7, 65, "Section"],
Cell[CellGroupData[{
Cell[210596, 4871, 100, 1, 35, "Subsubsection"],
Cell[CellGroupData[{
Cell[210721, 4876, 897, 27, 52, "Input"],
Cell[211621, 4905, 315, 6, 32, "Output"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[211985, 4917, 193, 3, 44, "Subsection"],
Cell[212181, 4922, 3449, 98, 150, "Input"],
Cell[CellGroupData[{
Cell[215655, 5024, 216, 3, 35, "Subsubsection"],
Cell[215874, 5029, 287, 6, 32, "Input"],
Cell[216164, 5037, 3162, 81, 91, "Input"],
Cell[219329, 5120, 190, 4, 34, "Input"],
Cell[CellGroupData[{
Cell[219544, 5128, 337, 8, 34, "Input"],
Cell[219884, 5138, 160563, 2645, 393, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[380484, 7788, 295, 8, 37, "Input"],
Cell[380782, 7798, 21300, 368, 605, "Output"]
}, Open  ]],
Cell[402097, 8169, 841, 21, 37, "Input"],
Cell[402941, 8192, 290, 6, 34, "Input"],
Cell[CellGroupData[{
Cell[403256, 8202, 323, 9, 37, "Input"],
Cell[403582, 8213, 23874, 409, 540, "Output"]
}, Open  ]]
}, Open  ]],
Cell[427483, 8626, 265, 3, 35, "Subsubsection"],
Cell[CellGroupData[{
Cell[427773, 8633, 347, 4, 29, "Subsubsection"],
Cell[428123, 8639, 3342, 96, 150, "Input"],
Cell[CellGroupData[{
Cell[431490, 8739, 600, 15, 34, "Input"],
Cell[432093, 8756, 10032, 179, 405, "Output"]
}, Open  ]]
}, Open  ]]
}, Open  ]]
}, Open  ]]
}, Open  ]]
}, Open  ]]
}
]
*)

