(* Content-type: application/vnd.wolfram.mathematica *)

(*** Wolfram Notebook File ***)
(* http://www.wolfram.com/nb *)

(* CreatedBy='Mathematica 11.0' *)

(*CacheID: 234*)
(* Internal cache information:
NotebookFileLineBreakTest
NotebookFileLineBreakTest
NotebookDataPosition[       158,          7]
NotebookDataLength[    165904,       3518]
NotebookOptionsPosition[    164080,       3454]
NotebookOutlinePosition[    164411,       3469]
CellTagsIndexPosition[    164368,       3466]
WindowFrame->Normal*)

(* Beginning of Notebook Content *)
Notebook[{
Cell[BoxData[
 RowBox[{
  RowBox[{"SetDirectory", "[", 
   RowBox[{"NotebookDirectory", "[", "]"}], "]"}], ";"}]], "Input",
 CellChangeTimes->{{3.7491538644493732`*^9, 3.749153865833027*^9}}],

Cell[CellGroupData[{

Cell["BW fit", "Section",
 CellChangeTimes->{{3.72535801930616*^9, 3.72535802431168*^9}, {
  3.7253585975521927`*^9, 3.725358607310637*^9}, {3.7277029251951323`*^9, 
  3.7277029467249603`*^9}, {3.749777690839362*^9, 3.749777691551268*^9}, {
  3.7497777528166*^9, 3.749777754416589*^9}}],

Cell[CellGroupData[{

Cell["Functions", "Subsection",
 CellChangeTimes->{{3.749777722850759*^9, 3.749777728466051*^9}}],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"BW", "[", 
    RowBox[{
    "w_", ",", "wr_", ",", "\[CapitalGamma]_", ",", "\[Delta]bg_", ",", 
     "const_", ",", "shift_", ",", "shift2_"}], "]"}], ":=", 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"const", 
     RowBox[{"(", 
      FractionBox[
       SuperscriptBox[
        RowBox[{"(", 
         RowBox[{"\[CapitalGamma]", "/", "2"}], ")"}], "2"], 
       RowBox[{
        SuperscriptBox[
         RowBox[{"(", 
          RowBox[{"w", "-", "wr"}], ")"}], "2"], "+", 
        SuperscriptBox[
         RowBox[{"(", 
          RowBox[{"\[CapitalGamma]", "/", "2"}], ")"}], "2"]}]], ")"}]}], "+",
     " ", 
    RowBox[{"\[Delta]bg", 
     FractionBox[
      RowBox[{
       RowBox[{"(", 
        RowBox[{"\[CapitalGamma]", "/", "2"}], ")"}], 
       RowBox[{"(", 
        RowBox[{"w", "-", "wr"}], ")"}]}], 
      RowBox[{
       SuperscriptBox[
        RowBox[{"(", 
         RowBox[{"w", "-", "wr"}], ")"}], "2"], "+", 
       SuperscriptBox[
        RowBox[{"(", 
         RowBox[{"\[CapitalGamma]", "/", "2"}], ")"}], "2"]}]]}], "+", 
    RowBox[{"0", " ", 
     FractionBox[
      RowBox[{
       RowBox[{"(", 
        RowBox[{
         RowBox[{"4", " ", 
          SuperscriptBox[
           RowBox[{"(", 
            RowBox[{"w", "-", "wr"}], ")"}], "2"]}], "-", " ", 
         SuperscriptBox["\[CapitalGamma]", "2"]}], ")"}], " ", 
       SuperscriptBox["deltabg", "2"]}], 
      RowBox[{
       RowBox[{"4", " ", 
        SuperscriptBox[
         RowBox[{"(", 
          RowBox[{"w", "-", "wr"}], ")"}], "2"]}], "+", 
       SuperscriptBox["\[CapitalGamma]", "2"]}]]}], "+", 
    RowBox[{"shift", " ", 
     RowBox[{"(", 
      RowBox[{"w", "-", "wr"}], ")"}]}], "+", "shift2"}]}], " ", 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"BWi", "[", 
     RowBox[{"w_", ",", "wr_", ",", "\[CapitalGamma]_", ",", "const_"}], 
     "]"}], ":=", 
    RowBox[{"const", 
     RowBox[{"(", 
      FractionBox[
       SuperscriptBox[
        RowBox[{"(", 
         RowBox[{"\[CapitalGamma]", "/", "2"}], ")"}], "2"], 
       RowBox[{
        SuperscriptBox[
         RowBox[{"(", 
          RowBox[{"w", "-", "wr"}], ")"}], "2"], "+", 
        SuperscriptBox[
         RowBox[{"(", 
          RowBox[{"\[CapitalGamma]", "/", "2"}], ")"}], "2"]}]], ")"}]}]}], 
   " ", ";"}], "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"fit", "[", 
     RowBox[{"input_", ",", "output_", ",", "Tscan_"}], "]"}], ":=", 
    RowBox[{"Module", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
        RowBox[{"temp", "=", 
         RowBox[{"Range", "[", 
          RowBox[{"1", ",", 
           RowBox[{"Length", "[", "Tscan", "]"}]}], "]"}]}], ",", "n", ",", 
        "maxx", ",", "minx", ",", "maxy", ",", "maxyx", ",", "maxyi", ",", 
        "maxxy", ",", "inter", ",", "maxxs", ",", "maxxis", ",", "maxys", ",",
         "mins", ",", "hwhmi", ",", "gammas", ",", "inputc", ",", "bad"}], 
       "}"}], ",", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"SetSharedVariable", "[", "temp", "]"}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{"ParallelDo", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"n", "=", 
           RowBox[{"temp", "[", 
            RowBox[{"[", "ii", "]"}], "]"}]}], ";", "\[IndentingNewLine]", 
          RowBox[{"maxx", "=", 
           RowBox[{"Max", "[", 
            RowBox[{
             RowBox[{"input", "[", "n", "]"}], "[", 
             RowBox[{"[", 
              RowBox[{"All", ",", "1"}], "]"}], "]"}], "]"}]}], ";", 
          "\[IndentingNewLine]", 
          RowBox[{"minx", "=", 
           RowBox[{"Min", "[", 
            RowBox[{
             RowBox[{"input", "[", "n", "]"}], "[", 
             RowBox[{"[", 
              RowBox[{"All", ",", "1"}], "]"}], "]"}], "]"}]}], ";", 
          "\[IndentingNewLine]", 
          RowBox[{"maxy", "=", 
           RowBox[{"Max", "[", 
            RowBox[{
             RowBox[{"input", "[", "n", "]"}], "[", 
             RowBox[{"[", 
              RowBox[{"All", ",", "2"}], "]"}], "]"}], "]"}]}], ";", 
          "\[IndentingNewLine]", 
          RowBox[{"maxyx", "=", 
           RowBox[{
            RowBox[{"input", "[", "n", "]"}], "[", 
            RowBox[{"[", 
             RowBox[{
              RowBox[{
               RowBox[{"Position", "[", 
                RowBox[{
                 RowBox[{"input", "[", "n", "]"}], ",", 
                 RowBox[{"Max", "[", 
                  RowBox[{
                   RowBox[{"input", "[", "n", "]"}], "[", 
                   RowBox[{"[", 
                    RowBox[{"All", ",", "2"}], "]"}], "]"}], "]"}]}], "]"}], 
               "[", 
               RowBox[{"[", 
                RowBox[{"1", ",", "1"}], "]"}], "]"}], ",", "1"}], "]"}], 
            "]"}]}], ";", "\[IndentingNewLine]", 
          RowBox[{"maxyi", "=", 
           RowBox[{
            RowBox[{"Position", "[", 
             RowBox[{
              RowBox[{
               RowBox[{"input", "[", "n", "]"}], "[", 
               RowBox[{"[", 
                RowBox[{"All", ",", "1"}], "]"}], "]"}], ",", "maxyx"}], 
             "]"}], "[", 
            RowBox[{"[", 
             RowBox[{"1", ",", "1"}], "]"}], "]"}]}], ";", 
          "\[IndentingNewLine]", 
          RowBox[{"maxxy", "=", 
           RowBox[{
            RowBox[{"input", "[", "n", "]"}], "[", 
            RowBox[{"[", 
             RowBox[{
              RowBox[{
               RowBox[{"Position", "[", 
                RowBox[{
                 RowBox[{"input", "[", "n", "]"}], ",", 
                 RowBox[{"Max", "[", 
                  RowBox[{
                   RowBox[{"input", "[", "n", "]"}], "[", 
                   RowBox[{"[", 
                    RowBox[{"All", ",", "1"}], "]"}], "]"}], "]"}]}], "]"}], 
               "[", 
               RowBox[{"[", 
                RowBox[{"1", ",", "1"}], "]"}], "]"}], ",", "2"}], "]"}], 
            "]"}]}], ";", "\[IndentingNewLine]", 
          RowBox[{"inter", "=", 
           RowBox[{"Interpolation", "[", 
            RowBox[{
             RowBox[{"input", "[", "n", "]"}], ",", 
             RowBox[{"InterpolationOrder", "\[Rule]", "1"}]}], "]"}]}], ";", 
          RowBox[{"(*", 
           RowBox[{
            RowBox[{"maxxs", "=", 
             RowBox[{"Sort", "[", 
              RowBox[{"Quiet", "[", 
               RowBox[{
                RowBox[{"DeleteDuplicatesBy", "[", 
                 RowBox[{
                  RowBox[{"Table", "[", 
                   RowBox[{
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"Round", "[", 
                    RowBox[{
                    RowBox[{"FindMaxValue", "[", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"inter", "[", "x", "]"}], ",", 
                    RowBox[{
                    RowBox[{"minx", "+", "a"}], "\[LessEqual]", "x", 
                    "\[LessEqual]", 
                    RowBox[{"minx", "+", 
                    RowBox[{"2", " ", "a"}]}]}]}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"x", ",", 
                    RowBox[{"minx", "+", "a"}]}], "}"}]}], "]"}], ",", 
                    RowBox[{"maxxy", "/", "30"}]}], "]"}], ",", 
                    RowBox[{
                    RowBox[{"FindArgMax", "[", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"inter", "[", "x", "]"}], ",", 
                    RowBox[{
                    RowBox[{"minx", "+", "a"}], "\[LessEqual]", "x", 
                    "\[LessEqual]", 
                    RowBox[{"minx", "+", 
                    RowBox[{"2", " ", "a"}]}]}]}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"x", ",", 
                    RowBox[{"minx", "+", "a"}]}], "}"}]}], "]"}], "[", 
                    RowBox[{"[", "1", "]"}], "]"}]}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"a", ",", "0", ",", 
                    RowBox[{
                    FractionBox["1", "2"], 
                    RowBox[{"(", 
                    RowBox[{"maxx", "-", "minx"}], ")"}]}], ",", 
                    RowBox[{"1", "/", "20"}]}], "}"}]}], "]"}], ",", 
                  "First"}], "]"}], "[", 
                RowBox[{"[", 
                 RowBox[{"All", ",", "2"}], "]"}], "]"}], "]"}], "]"}]}], 
            ";"}], "*)"}], "\[IndentingNewLine]", 
          RowBox[{"maxxs", "=", 
           RowBox[{"Sort", "[", 
            RowBox[{"Quiet", "[", 
             RowBox[{
              RowBox[{"DeleteDuplicatesBy", "[", 
               RowBox[{
                RowBox[{"Table", "[", 
                 RowBox[{
                  RowBox[{"{", 
                   RowBox[{
                    RowBox[{"Round", "[", 
                    RowBox[{
                    RowBox[{"FindMaxValue", "[", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"inter", "[", "x", "]"}], ",", 
                    RowBox[{
                    "maxyx", "\[LessEqual]", "x", "\[LessEqual]", "maxx"}]}], 
                    "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"x", ",", "a"}], "}"}]}], "]"}], ",", "maxxy"}], 
                    "]"}], ",", 
                    RowBox[{
                    RowBox[{"FindArgMax", "[", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"inter", "[", "x", "]"}], ",", 
                    RowBox[{
                    "maxyx", "\[LessEqual]", "x", "\[LessEqual]", "maxx"}]}], 
                    "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"x", ",", "a"}], "}"}]}], "]"}], "[", 
                    RowBox[{"[", "1", "]"}], "]"}]}], "}"}], ",", 
                  RowBox[{"{", 
                   RowBox[{"a", ",", "maxyx", ",", "maxx", ",", 
                    FractionBox[
                    RowBox[{"maxx", "-", "maxyx"}], "50"]}], "}"}]}], "]"}], 
                ",", "First"}], "]"}], "[", 
              RowBox[{"[", 
               RowBox[{"All", ",", "2"}], "]"}], "]"}], "]"}], "]"}]}], ";", 
          "\n", 
          RowBox[{"bad", "=", 
           RowBox[{"{", "}"}]}], ";", "\[IndentingNewLine]", 
          RowBox[{"If", "[", 
           RowBox[{
            RowBox[{
             RowBox[{"Length", "[", "maxxs", "]"}], ">", "1"}], ",", 
            RowBox[{"Do", "[", 
             RowBox[{
              RowBox[{"If", "[", 
               RowBox[{
                RowBox[{
                 RowBox[{
                  RowBox[{"maxxs", "[", 
                   RowBox[{"[", 
                    RowBox[{"i", "+", "1"}], "]"}], "]"}], "/", 
                  RowBox[{"maxxs", "[", 
                   RowBox[{"[", "i", "]"}], "]"}]}], "\[LessEqual]", 
                 "1.001"}], ",", 
                RowBox[{"bad", "=", 
                 RowBox[{"Append", "[", 
                  RowBox[{"bad", ",", 
                   RowBox[{"{", "i", "}"}]}], "]"}]}]}], "]"}], ",", 
              RowBox[{"{", 
               RowBox[{"i", ",", 
                RowBox[{
                 RowBox[{"Length", "[", "maxxs", "]"}], "-", "1"}]}], "}"}]}],
              "]"}]}], "]"}], ";", "\[IndentingNewLine]", 
          RowBox[{"maxxs", "=", 
           RowBox[{"Delete", "[", 
            RowBox[{"maxxs", ",", "bad"}], "]"}]}], ";", 
          RowBox[{"maxxis", "=", 
           RowBox[{"Sort", "[", 
            RowBox[{"Table", "[", 
             RowBox[{
              RowBox[{
               RowBox[{"Position", "[", 
                RowBox[{
                 RowBox[{
                  RowBox[{"input", "[", "n", "]"}], "[", 
                  RowBox[{"[", 
                   RowBox[{"All", ",", "1"}], "]"}], "]"}], ",", 
                 RowBox[{
                  RowBox[{"Nearest", "[", 
                   RowBox[{
                    RowBox[{
                    RowBox[{"input", "[", "n", "]"}], "[", 
                    RowBox[{"[", 
                    RowBox[{"All", ",", "1"}], "]"}], "]"}], ",", 
                    RowBox[{"maxxs", "[", 
                    RowBox[{"[", "i", "]"}], "]"}]}], "]"}], "[", 
                  RowBox[{"[", "1", "]"}], "]"}]}], "]"}], "[", 
               RowBox[{"[", 
                RowBox[{"1", ",", "1"}], "]"}], "]"}], ",", 
              RowBox[{"{", 
               RowBox[{"i", ",", 
                RowBox[{"Length", "[", "maxxs", "]"}]}], "}"}]}], "]"}], 
            "]"}]}], ";", "\[IndentingNewLine]", 
          RowBox[{"bad", "=", 
           RowBox[{"{", "}"}]}], ";", "\[IndentingNewLine]", 
          RowBox[{"Do", "[", 
           RowBox[{
            RowBox[{"If", "[", 
             RowBox[{
              RowBox[{"Or", "[", 
               RowBox[{
                RowBox[{
                 RowBox[{
                  RowBox[{"input", "[", "n", "]"}], "[", 
                  RowBox[{"[", 
                   RowBox[{
                    RowBox[{
                    RowBox[{"maxxis", "[", 
                    RowBox[{"[", "i", "]"}], "]"}], "-", "30"}], ",", "2"}], 
                   "]"}], "]"}], ">", 
                 RowBox[{
                  RowBox[{"input", "[", "n", "]"}], "[", 
                  RowBox[{"[", 
                   RowBox[{
                    RowBox[{"maxxis", "[", 
                    RowBox[{"[", "i", "]"}], "]"}], ",", "2"}], "]"}], 
                  "]"}]}], ",", 
                RowBox[{
                 RowBox[{
                  RowBox[{"input", "[", "n", "]"}], "[", 
                  RowBox[{"[", 
                   RowBox[{
                    RowBox[{
                    RowBox[{"maxxis", "[", 
                    RowBox[{"[", "i", "]"}], "]"}], "+", "30"}], ",", "2"}], 
                   "]"}], "]"}], ">", 
                 RowBox[{
                  RowBox[{"input", "[", "n", "]"}], "[", 
                  RowBox[{"[", 
                   RowBox[{
                    RowBox[{"maxxis", "[", 
                    RowBox[{"[", "i", "]"}], "]"}], ",", "2"}], "]"}], 
                  "]"}]}]}], "]"}], ",", 
              RowBox[{"bad", "=", 
               RowBox[{"Append", "[", 
                RowBox[{"bad", ",", 
                 RowBox[{"{", "i", "}"}]}], "]"}]}]}], "]"}], ",", 
            RowBox[{"{", 
             RowBox[{"i", ",", 
              RowBox[{"Length", "[", "maxxis", "]"}]}], "}"}]}], "]"}], ";", 
          RowBox[{"maxxs", "=", 
           RowBox[{"Delete", "[", 
            RowBox[{"maxxs", ",", "bad"}], "]"}]}], ";", 
          RowBox[{"maxxis", "=", 
           RowBox[{"Delete", "[", 
            RowBox[{"maxxis", ",", "bad"}], "]"}]}], ";", 
          "\[IndentingNewLine]", 
          RowBox[{"maxys", "=", 
           RowBox[{"Table", "[", 
            RowBox[{
             RowBox[{
              RowBox[{"input", "[", "n", "]"}], "[", 
              RowBox[{"[", 
               RowBox[{
                RowBox[{"maxxis", "[", 
                 RowBox[{"[", "i", "]"}], "]"}], ",", "2"}], "]"}], "]"}], 
             ",", 
             RowBox[{"{", 
              RowBox[{"i", ",", 
               RowBox[{"Length", "[", "maxxs", "]"}]}], "}"}]}], "]"}]}], ";",
           "\[IndentingNewLine]", 
          RowBox[{"If", "[", 
           RowBox[{
            RowBox[{
             RowBox[{"Length", "[", "maxxs", "]"}], ">", "1"}], ",", 
            "\[IndentingNewLine]", 
            RowBox[{
             RowBox[{"mins", "=", 
              RowBox[{"Range", "[", 
               RowBox[{
                RowBox[{"Length", "[", "maxxs", "]"}], "-", "1"}], "]"}]}], 
             ";", "\[IndentingNewLine]", 
             RowBox[{"Do", "[", 
              RowBox[{
               RowBox[{
                RowBox[{"mins", "[", 
                 RowBox[{"[", "i", "]"}], "]"}], "=", 
                RowBox[{
                 RowBox[{"Position", "[", 
                  RowBox[{
                   RowBox[{
                    RowBox[{"input", "[", "n", "]"}], "[", 
                    RowBox[{"[", 
                    RowBox[{"All", ",", "2"}], "]"}], "]"}], ",", 
                   RowBox[{"Min", "[", 
                    RowBox[{
                    RowBox[{"input", "[", "n", "]"}], "[", 
                    RowBox[{"[", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"maxxis", "[", 
                    RowBox[{"[", "i", "]"}], "]"}], ";;", 
                    RowBox[{"maxxis", "[", 
                    RowBox[{"[", 
                    RowBox[{"i", "+", "1"}], "]"}], "]"}]}], ",", "2"}], 
                    "]"}], "]"}], "]"}]}], "]"}], "[", 
                 RowBox[{"[", 
                  RowBox[{"1", ",", "1"}], "]"}], "]"}]}], ",", 
               RowBox[{"{", 
                RowBox[{"i", ",", 
                 RowBox[{
                  RowBox[{"Length", "[", "maxxs", "]"}], "-", "1"}]}], 
                "}"}]}], "]"}], ";", 
             RowBox[{"mins", "=", 
              RowBox[{"Append", "[", 
               RowBox[{
                RowBox[{"Prepend", "[", 
                 RowBox[{"mins", ",", 
                  RowBox[{
                   RowBox[{"maxxis", "[", 
                    RowBox[{"[", "1", "]"}], "]"}], "-", 
                   RowBox[{"(", 
                    RowBox[{
                    RowBox[{"mins", "[", 
                    RowBox[{"[", "1", "]"}], "]"}], "-", 
                    RowBox[{"maxxis", "[", 
                    RowBox[{"[", "1", "]"}], "]"}]}], ")"}]}]}], "]"}], ",", 
                RowBox[{"If", "[", 
                 RowBox[{
                  RowBox[{
                   RowBox[{
                    RowBox[{"maxxis", "[", 
                    RowBox[{"[", 
                    RowBox[{"-", "1"}], "]"}], "]"}], "+", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"maxxis", "[", 
                    RowBox[{"[", 
                    RowBox[{"-", "1"}], "]"}], "]"}], "-", 
                    RowBox[{"mins", "[", 
                    RowBox[{"[", 
                    RowBox[{"-", "1"}], "]"}], "]"}]}], ")"}]}], 
                   "\[LessEqual]", " ", 
                   RowBox[{"Length", "[", 
                    RowBox[{"input", "[", "n", "]"}], "]"}]}], ",", 
                  RowBox[{
                   RowBox[{"maxxis", "[", 
                    RowBox[{"[", 
                    RowBox[{"-", "1"}], "]"}], "]"}], "+", 
                   RowBox[{"(", 
                    RowBox[{
                    RowBox[{"maxxis", "[", 
                    RowBox[{"[", 
                    RowBox[{"-", "1"}], "]"}], "]"}], "-", 
                    RowBox[{"mins", "[", 
                    RowBox[{"[", 
                    RowBox[{"-", "1"}], "]"}], "]"}]}], ")"}]}], ",", 
                  RowBox[{"Length", "[", 
                   RowBox[{"input", "[", "n", "]"}], "]"}]}], "]"}]}], 
               "]"}]}], ";"}], ",", "\[IndentingNewLine]", 
            RowBox[{
             RowBox[{"hwhmi", "=", 
              RowBox[{
               RowBox[{"Position", "[", 
                RowBox[{
                 RowBox[{"input", "[", "n", "]"}], ",", 
                 RowBox[{
                  RowBox[{"Nearest", "[", 
                   RowBox[{
                    RowBox[{
                    RowBox[{"input", "[", "n", "]"}], "[", 
                    RowBox[{"[", 
                    RowBox[{
                    RowBox[{";;", "maxyi"}], ",", "2"}], "]"}], "]"}], ",", 
                    RowBox[{"maxy", "/", "2"}]}], "]"}], "[", 
                  RowBox[{"[", "1", "]"}], "]"}]}], "]"}], "[", 
               RowBox[{"[", 
                RowBox[{"1", ",", "1"}], "]"}], "]"}]}], ";", 
             "\[IndentingNewLine]", 
             RowBox[{"mins", "=", 
              RowBox[{"{", 
               RowBox[{
                RowBox[{"maxyi", "-", 
                 RowBox[{"3", 
                  RowBox[{"(", 
                   RowBox[{"maxyi", "-", "hwhmi"}], ")"}]}]}], ",", 
                RowBox[{"If", "[", 
                 RowBox[{
                  RowBox[{
                   RowBox[{"maxyi", "+", 
                    RowBox[{"3", 
                    RowBox[{"(", 
                    RowBox[{"maxyi", "-", "hwhmi"}], ")"}]}]}], 
                   "\[LessEqual]", 
                   RowBox[{"Length", "[", 
                    RowBox[{"input", "[", "n", "]"}], "]"}]}], ",", 
                  RowBox[{"maxyi", "+", 
                   RowBox[{"3", 
                    RowBox[{"(", 
                    RowBox[{"maxyi", "-", "hwhmi"}], ")"}]}]}], ",", 
                  RowBox[{"Length", "[", 
                   RowBox[{"input", "[", "n", "]"}], "]"}]}], "]"}]}], 
               "}"}]}], ";"}]}], "]"}], ";", "\[IndentingNewLine]", 
          RowBox[{"If", "[", 
           RowBox[{
            RowBox[{
             RowBox[{"mins", "[", 
              RowBox[{"[", "1", "]"}], "]"}], "\[LessEqual]", "0"}], ",", 
            RowBox[{
             RowBox[{"mins", "[", 
              RowBox[{"[", "1", "]"}], "]"}], "=", "1"}]}], "]"}], ";", "\n", 
          
          RowBox[{"hwhmi", "=", 
           RowBox[{"Range", "[", 
            RowBox[{"Length", "[", "maxxs", "]"}], "]"}]}], ";", "\n", 
          RowBox[{"Do", "[", 
           RowBox[{
            RowBox[{
             RowBox[{"hwhmi", "[", 
              RowBox[{"[", "i", "]"}], "]"}], "=", 
             RowBox[{
              RowBox[{"Position", "[", 
               RowBox[{
                RowBox[{"input", "[", "n", "]"}], ",", 
                RowBox[{
                 RowBox[{"Nearest", "[", 
                  RowBox[{
                   RowBox[{
                    RowBox[{"input", "[", "n", "]"}], "[", 
                    RowBox[{"[", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"mins", "[", 
                    RowBox[{"[", "i", "]"}], "]"}], ";;", 
                    RowBox[{"maxxis", "[", 
                    RowBox[{"[", "i", "]"}], "]"}]}], ",", "2"}], "]"}], 
                    "]"}], ",", 
                   RowBox[{
                    RowBox[{"inter", "[", 
                    RowBox[{"maxxs", "[", 
                    RowBox[{"[", "i", "]"}], "]"}], "]"}], "/", "2"}]}], 
                  "]"}], "[", 
                 RowBox[{"[", "1", "]"}], "]"}]}], "]"}], "[", 
              RowBox[{"[", 
               RowBox[{"1", ",", "1"}], "]"}], "]"}]}], ",", 
            RowBox[{"{", 
             RowBox[{"i", ",", 
              RowBox[{"Length", "[", "maxxs", "]"}]}], "}"}]}], "]"}], ";", 
          "\[IndentingNewLine]", 
          RowBox[{"gammas", "=", 
           RowBox[{"Range", "[", 
            RowBox[{"Length", "[", "hwhmi", "]"}], "]"}]}], ";", 
          "\[IndentingNewLine]", 
          RowBox[{"Do", "[", 
           RowBox[{
            RowBox[{
             RowBox[{"gammas", "[", 
              RowBox[{"[", "i", "]"}], "]"}], "=", 
             RowBox[{"2", 
              RowBox[{"(", 
               RowBox[{
                RowBox[{"maxxs", "[", 
                 RowBox[{"[", "i", "]"}], "]"}], "-", 
                RowBox[{
                 RowBox[{"input", "[", "n", "]"}], "[", 
                 RowBox[{"[", 
                  RowBox[{
                   RowBox[{"hwhmi", "[", 
                    RowBox[{"[", "i", "]"}], "]"}], ",", "1"}], "]"}], 
                 "]"}]}], ")"}]}]}], ",", 
            RowBox[{"{", 
             RowBox[{"i", ",", 
              RowBox[{"Length", "[", "hwhmi", "]"}]}], "}"}]}], "]"}], ";", 
          "\[IndentingNewLine]", 
          RowBox[{"inputc", "=", 
           RowBox[{"Range", "[", 
            RowBox[{"Length", "[", "maxxs", "]"}], "]"}]}], ";", 
          "\[IndentingNewLine]", 
          RowBox[{"Do", "[", 
           RowBox[{
            RowBox[{
             RowBox[{"inputc", "[", 
              RowBox[{"[", "i", "]"}], "]"}], "=", 
             RowBox[{
              RowBox[{"input", "[", "n", "]"}], "[", 
              RowBox[{"[", 
               RowBox[{
                RowBox[{"If", "[", 
                 RowBox[{
                  RowBox[{"i", "\[GreaterEqual]", "2"}], ",", 
                  RowBox[{"If", "[", 
                   RowBox[{
                    RowBox[{
                    RowBox[{
                    RowBox[{"maxxis", "[", 
                    RowBox[{"[", "i", "]"}], "]"}], "-", 
                    RowBox[{"3", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"maxxis", "[", 
                    RowBox[{"[", "i", "]"}], "]"}], "-", 
                    RowBox[{"hwhmi", "[", 
                    RowBox[{"[", "i", "]"}], "]"}]}], ")"}]}]}], "<", 
                    RowBox[{"mins", "[", 
                    RowBox[{"[", "i", "]"}], "]"}]}], ",", 
                    RowBox[{"mins", "[", 
                    RowBox[{"[", "i", "]"}], "]"}], ",", 
                    RowBox[{
                    RowBox[{"maxxis", "[", 
                    RowBox[{"[", "i", "]"}], "]"}], "-", 
                    RowBox[{"3", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"maxxis", "[", 
                    RowBox[{"[", "i", "]"}], "]"}], "-", 
                    RowBox[{"hwhmi", "[", 
                    RowBox[{"[", "i", "]"}], "]"}]}], ")"}]}]}]}], "]"}], ",", 
                  RowBox[{"If", "[", 
                   RowBox[{
                    RowBox[{
                    RowBox[{
                    RowBox[{"maxxis", "[", 
                    RowBox[{"[", "i", "]"}], "]"}], "-", 
                    RowBox[{"3", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"maxxis", "[", 
                    RowBox[{"[", "i", "]"}], "]"}], "-", 
                    RowBox[{"hwhmi", "[", 
                    RowBox[{"[", "i", "]"}], "]"}]}], ")"}]}]}], ">", "0"}], 
                    ",", 
                    RowBox[{
                    RowBox[{"maxxis", "[", 
                    RowBox[{"[", "i", "]"}], "]"}], "-", 
                    RowBox[{"3", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"maxxis", "[", 
                    RowBox[{"[", "i", "]"}], "]"}], "-", 
                    RowBox[{"hwhmi", "[", 
                    RowBox[{"[", "i", "]"}], "]"}]}], ")"}]}]}], ",", "1"}], 
                   "]"}]}], "]"}], ";;", 
                RowBox[{"If", "[", 
                 RowBox[{
                  RowBox[{
                   RowBox[{
                    RowBox[{"maxxis", "[", 
                    RowBox[{"[", "i", "]"}], "]"}], "+", 
                    RowBox[{"3", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"maxxis", "[", 
                    RowBox[{"[", "i", "]"}], "]"}], "-", 
                    RowBox[{"hwhmi", "[", 
                    RowBox[{"[", "i", "]"}], "]"}]}], ")"}]}]}], "<", 
                   RowBox[{"mins", "[", 
                    RowBox[{"[", 
                    RowBox[{"i", "+", "1"}], "]"}], "]"}]}], ",", 
                  RowBox[{
                   RowBox[{"maxxis", "[", 
                    RowBox[{"[", "i", "]"}], "]"}], "+", 
                   RowBox[{"3", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"maxxis", "[", 
                    RowBox[{"[", "i", "]"}], "]"}], "-", 
                    RowBox[{"hwhmi", "[", 
                    RowBox[{"[", "i", "]"}], "]"}]}], ")"}]}]}], ",", 
                  RowBox[{"mins", "[", 
                   RowBox[{"[", 
                    RowBox[{"i", "+", "1"}], "]"}], "]"}]}], "]"}]}], "]"}], 
              "]"}]}], ",", 
            RowBox[{"{", 
             RowBox[{"i", ",", 
              RowBox[{"Length", "[", "maxxs", "]"}]}], "}"}]}], "]"}], ";", 
          "\[IndentingNewLine]", 
          RowBox[{
           RowBox[{"temp", "[", 
            RowBox[{"[", "ii", "]"}], "]"}], "=", 
           RowBox[{"Range", "[", 
            RowBox[{"Length", "[", "hwhmi", "]"}], "]"}]}], ";", 
          "\[IndentingNewLine]", 
          RowBox[{"Do", "[", 
           RowBox[{
            RowBox[{
             RowBox[{"temp", "[", 
              RowBox[{"[", 
               RowBox[{"ii", ",", "i"}], "]"}], "]"}], "=", 
             RowBox[{"NonlinearModelFit", "[", 
              RowBox[{
               RowBox[{"inputc", "[", 
                RowBox[{"[", "i", "]"}], "]"}], ",", 
               RowBox[{"{", 
                RowBox[{
                 RowBox[{"BW", "[", 
                  RowBox[{
                  "w", ",", "wr", ",", "\[CapitalGamma]", ",", "\[Delta]bg", 
                   ",", "const", ",", "shift", ",", "shift2"}], "]"}], ",", 
                 RowBox[{"const", ">", "0"}], ",", 
                 RowBox[{"\[CapitalGamma]", ">", "0"}]}], "}"}], ",", 
               RowBox[{"{", 
                RowBox[{
                 RowBox[{"{", 
                  RowBox[{"wr", ",", 
                   RowBox[{"maxxs", "[", 
                    RowBox[{"[", "i", "]"}], "]"}]}], "}"}], ",", 
                 RowBox[{"{", 
                  RowBox[{"\[CapitalGamma]", ",", 
                   RowBox[{"gammas", "[", 
                    RowBox[{"[", "i", "]"}], "]"}]}], "}"}], ",", 
                 RowBox[{"{", 
                  RowBox[{"const", ",", 
                   RowBox[{"maxys", "[", 
                    RowBox[{"[", "i", "]"}], "]"}]}], "}"}], ",", 
                 RowBox[{"{", 
                  RowBox[{"\[Delta]bg", ",", "0.0"}], "}"}], ",", 
                 RowBox[{"{", 
                  RowBox[{"shift", ",", "0.0"}], "}"}], ",", 
                 RowBox[{"{", 
                  RowBox[{"shift2", ",", "0.0"}], "}"}]}], "}"}], ",", "w", 
               ",", 
               RowBox[{"MaxIterations", "\[Rule]", "1000"}]}], "]"}]}], ",", 
            RowBox[{"{", 
             RowBox[{"i", ",", 
              RowBox[{"Length", "[", "hwhmi", "]"}]}], "}"}]}], "]"}], ";"}], 
         ",", 
         RowBox[{"{", 
          RowBox[{"ii", ",", 
           RowBox[{"Length", "[", "Tscan", "]"}]}], "}"}]}], "]"}], ";", 
       RowBox[{"output", "=", "temp"}], ";"}]}], "]"}]}], ";"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"store", "[", 
     RowBox[{"param_", ",", "res_", ",", "model_"}], "]"}], ":=", 
    RowBox[{"Module", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"temp", "=", 
        RowBox[{"ToString", "[", "res", "]"}]}], "}"}], ",", 
      RowBox[{
       RowBox[{"res", "=", 
        RowBox[{"Range", "[", 
         RowBox[{"Length", "[", "model", "]"}], "]"}]}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{"Do", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"res", "[", 
           RowBox[{"[", "i", "]"}], "]"}], "=", 
          RowBox[{"Range", "[", 
           RowBox[{"Length", "[", 
            RowBox[{"model", "[", 
             RowBox[{"[", "i", "]"}], "]"}], "]"}], "]"}]}], ",", 
         RowBox[{"{", 
          RowBox[{"i", ",", 
           RowBox[{"Length", "[", "model", "]"}]}], "}"}]}], "]"}], ";", 
       RowBox[{"Do", "[", 
        RowBox[{
         RowBox[{"Do", "[", 
          RowBox[{
           RowBox[{
            RowBox[{"res", "[", 
             RowBox[{"[", 
              RowBox[{"i", ",", "ii"}], "]"}], "]"}], "=", 
            RowBox[{"param", "/.", 
             RowBox[{
              RowBox[{"model", "[", 
               RowBox[{"[", 
                RowBox[{"i", ",", "ii"}], "]"}], "]"}], "[", 
              "\"\<BestFitParameters\>\"", "]"}]}]}], ",", 
           RowBox[{"{", 
            RowBox[{"ii", ",", 
             RowBox[{"Length", "[", 
              RowBox[{"res", "[", 
               RowBox[{"[", "i", "]"}], "]"}], "]"}]}], "}"}]}], "]"}], ",", 
         RowBox[{"{", 
          RowBox[{"i", ",", 
           RowBox[{"Length", "[", "res", "]"}]}], "}"}]}], "]"}], ";"}]}], 
     "]"}]}], ";"}], "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"storearea", "[", 
    RowBox[{"res_", ",", "model_"}], "]"}], ":=", 
   RowBox[{"Module", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"temp", "=", 
       RowBox[{"ToString", "[", "res", "]"}]}], "}"}], ",", 
     RowBox[{
      RowBox[{"res", "=", 
       RowBox[{"Range", "[", 
        RowBox[{"Length", "[", "model", "]"}], "]"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"Do", "[", 
       RowBox[{
        RowBox[{
         RowBox[{"res", "[", 
          RowBox[{"[", "i", "]"}], "]"}], "=", 
         RowBox[{"Range", "[", 
          RowBox[{"Length", "[", 
           RowBox[{"model", "[", 
            RowBox[{"[", "i", "]"}], "]"}], "]"}], "]"}]}], ",", 
        RowBox[{"{", 
         RowBox[{"i", ",", 
          RowBox[{"Length", "[", "model", "]"}]}], "}"}]}], "]"}], ";", 
      RowBox[{"Do", "[", 
       RowBox[{
        RowBox[{"Do", "[", 
         RowBox[{
          RowBox[{
           RowBox[{"res", "[", 
            RowBox[{"[", 
             RowBox[{"i", ",", "ii"}], "]"}], "]"}], "=", 
           RowBox[{
            FractionBox["\[Pi]", "2"], 
            RowBox[{"(", 
             RowBox[{"\[CapitalGamma]", "/.", 
              RowBox[{
               RowBox[{"model", "[", 
                RowBox[{"[", 
                 RowBox[{"i", ",", "ii"}], "]"}], "]"}], "[", 
               "\"\<BestFitParameters\>\"", "]"}]}], ")"}], 
            RowBox[{"(", " ", 
             RowBox[{"const", "/.", 
              RowBox[{
               RowBox[{"model", "[", 
                RowBox[{"[", 
                 RowBox[{"i", ",", "ii"}], "]"}], "]"}], "[", 
               "\"\<BestFitParameters\>\"", "]"}]}], ")"}]}]}], ",", 
          RowBox[{"{", 
           RowBox[{"ii", ",", 
            RowBox[{"Length", "[", 
             RowBox[{"res", "[", 
              RowBox[{"[", "i", "]"}], "]"}], "]"}]}], "}"}]}], "]"}], ",", 
        RowBox[{"{", 
         RowBox[{"i", ",", 
          RowBox[{"Length", "[", "res", "]"}]}], "}"}]}], "]"}], ";"}]}], 
    "]"}]}], ";"}]}], "Input",
 CellChangeTimes->{{3.725011819995084*^9, 3.725011822739936*^9}, {
   3.7277029516093273`*^9, 3.7277029707983103`*^9}, {3.72770377220212*^9, 
   3.727703774851506*^9}, {3.727704183456113*^9, 3.727704235986051*^9}, {
   3.727704293099452*^9, 3.7277043013170643`*^9}, {3.727704650937663*^9, 
   3.7277046563118553`*^9}, {3.7277047089071817`*^9, 3.727704722605954*^9}, {
   3.7277593468476477`*^9, 3.72775937353994*^9}, {3.727767951399776*^9, 
   3.7277679609665327`*^9}, {3.727786365837351*^9, 3.7277863661113586`*^9}, {
   3.7277876777187643`*^9, 3.727787689465622*^9}, {3.72784572190436*^9, 
   3.7278457561920156`*^9}, {3.727845811991851*^9, 3.727845812747995*^9}, {
   3.727845884529807*^9, 3.7278459276116*^9}, 3.727942661840372*^9, 
   3.727943172599392*^9, 3.727943318747197*^9, 3.727943484079109*^9, {
   3.727943910169404*^9, 3.727943913531708*^9}, {3.727944406421103*^9, 
   3.727944434023428*^9}, {3.727944642717669*^9, 3.727944652632021*^9}, {
   3.727944696805109*^9, 3.727944714237059*^9}, {3.727944857864943*^9, 
   3.727944943236537*^9}, {3.727945112002225*^9, 3.727945153556973*^9}, {
   3.7279465536173477`*^9, 3.727946576509602*^9}, {3.7279466219931993`*^9, 
   3.727946641020568*^9}, {3.727946745022765*^9, 3.7279467510016947`*^9}, {
   3.727948915813862*^9, 3.7279489220518103`*^9}, {3.727950853888091*^9, 
   3.727950855689782*^9}, {3.7279510545527267`*^9, 3.72795105953828*^9}, {
   3.727951246850439*^9, 3.727951258187858*^9}, {3.727951425412133*^9, 
   3.7279514307077436`*^9}, {3.727953623055787*^9, 3.727953626390915*^9}, 
   3.72795366203069*^9, {3.7279537225963783`*^9, 3.727953726617856*^9}, {
   3.727971101664791*^9, 3.727971105199127*^9}, {3.728011848410287*^9, 
   3.728011850788999*^9}, {3.728029731549341*^9, 3.728029761112349*^9}, {
   3.728052836065872*^9, 3.728052836664957*^9}, {3.728052982785912*^9, 
   3.7280529955647783`*^9}, {3.7280569478616657`*^9, 
   3.7280569604976397`*^9}, {3.7281028074097033`*^9, 
   3.7281028134452477`*^9}, {3.728114140884417*^9, 3.728114141976523*^9}, {
   3.728114191643759*^9, 3.7281142098598423`*^9}, {3.7281196714668207`*^9, 
   3.728119673841776*^9}, {3.728119709731044*^9, 3.728119744682604*^9}, 
   3.7281200289127502`*^9, {3.728120100939199*^9, 3.728120213460887*^9}, {
   3.728120354706056*^9, 3.7281204271928177`*^9}, {3.728120767910965*^9, 
   3.728120773809227*^9}, {3.728121918899763*^9, 3.728121922795506*^9}, {
   3.7281258608721027`*^9, 3.728125884184536*^9}, 3.728125981202344*^9, {
   3.7281314407612658`*^9, 3.728131447169196*^9}, {3.728131583460206*^9, 
   3.7281315859399033`*^9}, 3.728136871222497*^9, {3.733459139386346*^9, 
   3.733459155029248*^9}, {3.73346459483843*^9, 3.7334646067769947`*^9}, {
   3.7334868496050873`*^9, 3.733486889958604*^9}, {3.733486943411476*^9, 
   3.733487037439073*^9}, {3.7334871192296743`*^9, 3.733487145953403*^9}, {
   3.733487269727168*^9, 3.733487280512094*^9}, {3.7335018236648417`*^9, 
   3.7335018524927063`*^9}, {3.733552694388733*^9, 3.733552729104753*^9}, {
   3.7355563168374643`*^9, 3.7355563204796867`*^9}, {3.73555635800609*^9, 
   3.7355563582228107`*^9}, {3.735557657193557*^9, 3.7355576811097918`*^9}, {
   3.742293769293354*^9, 3.742293822978169*^9}, {3.747628940453154*^9, 
   3.747628947024304*^9}, {3.747708043161745*^9, 3.747708044399467*^9}, {
   3.7478870499655657`*^9, 3.747887051936778*^9}, {3.74806966112512*^9, 
   3.748069670554016*^9}, {3.74806978252568*^9, 3.74806978575263*^9}, {
   3.748077028421492*^9, 3.748077029876586*^9}, {3.748079480889368*^9, 
   3.748079481898695*^9}, {3.748081296213442*^9, 3.748081409781248*^9}, {
   3.748090385196088*^9, 3.748090385549308*^9}, {3.748243472708687*^9, 
   3.748243494756359*^9}, {3.748250123899392*^9, 3.748250124146721*^9}, {
   3.749545476986315*^9, 3.749545477352648*^9}, 3.749546264148706*^9, {
   3.7495475671593533`*^9, 3.749547567654051*^9}, {3.749548110620698*^9, 
   3.74954812334009*^9}, {3.749548359848227*^9, 3.7495483599868298`*^9}, {
   3.749778286685729*^9, 3.7497782907226763`*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"fitONE", "[", "input_", "]"}], ":=", 
   RowBox[{"Module", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
      "maxx", ",", "minx", ",", "maxy", ",", "maxyx", ",", "maxyi", ",", 
       "maxxy", ",", "inter", ",", "maxxis", ",", "mins", ",", "hwhmi", ",", 
       "bad"}], "}"}], ",", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"maxx", "=", 
       RowBox[{"Max", "[", 
        RowBox[{"input", "[", 
         RowBox[{"[", 
          RowBox[{"All", ",", "1"}], "]"}], "]"}], "]"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"minx", "=", 
       RowBox[{"Min", "[", 
        RowBox[{"input", "[", 
         RowBox[{"[", 
          RowBox[{"All", ",", "1"}], "]"}], "]"}], "]"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"maxy", "=", 
       RowBox[{"Max", "[", 
        RowBox[{"input", "[", 
         RowBox[{"[", 
          RowBox[{"All", ",", "2"}], "]"}], "]"}], "]"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"maxyx", "=", 
       RowBox[{"input", "[", 
        RowBox[{"[", 
         RowBox[{
          RowBox[{
           RowBox[{"Position", "[", 
            RowBox[{"input", ",", 
             RowBox[{"Max", "[", 
              RowBox[{"input", "[", 
               RowBox[{"[", 
                RowBox[{"All", ",", "2"}], "]"}], "]"}], "]"}]}], "]"}], "[", 
           
           RowBox[{"[", 
            RowBox[{"1", ",", "1"}], "]"}], "]"}], ",", "1"}], "]"}], "]"}]}],
       ";", "\[IndentingNewLine]", 
      RowBox[{"maxyi", "=", 
       RowBox[{
        RowBox[{"Position", "[", 
         RowBox[{
          RowBox[{"input", "[", 
           RowBox[{"[", 
            RowBox[{"All", ",", "1"}], "]"}], "]"}], ",", "maxyx"}], "]"}], 
        "[", 
        RowBox[{"[", 
         RowBox[{"1", ",", "1"}], "]"}], "]"}]}], ";", "\[IndentingNewLine]", 
      
      RowBox[{"maxxy", "=", 
       RowBox[{"input", "[", 
        RowBox[{"[", 
         RowBox[{
          RowBox[{
           RowBox[{"Position", "[", 
            RowBox[{"input", ",", 
             RowBox[{"Max", "[", 
              RowBox[{"input", "[", 
               RowBox[{"[", 
                RowBox[{"All", ",", "1"}], "]"}], "]"}], "]"}]}], "]"}], "[", 
           
           RowBox[{"[", 
            RowBox[{"1", ",", "1"}], "]"}], "]"}], ",", "2"}], "]"}], "]"}]}],
       ";", "\[IndentingNewLine]", 
      RowBox[{"inter", "=", 
       RowBox[{"Interpolation", "[", 
        RowBox[{"input", ",", 
         RowBox[{"InterpolationOrder", "\[Rule]", "1"}]}], "]"}]}], ";", 
      RowBox[{"maxxs", "=", 
       RowBox[{"Sort", "[", 
        RowBox[{"Quiet", "[", 
         RowBox[{
          RowBox[{"DeleteDuplicatesBy", "[", 
           RowBox[{
            RowBox[{"Table", "[", 
             RowBox[{
              RowBox[{"{", 
               RowBox[{
                RowBox[{"Round", "[", 
                 RowBox[{
                  RowBox[{"FindMaxValue", "[", 
                   RowBox[{
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"inter", "[", "x", "]"}], ",", 
                    RowBox[{
                    RowBox[{"minx", "+", "a"}], "\[LessEqual]", "x", 
                    "\[LessEqual]", 
                    RowBox[{"minx", "+", 
                    RowBox[{"2", " ", "a"}]}]}]}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"x", ",", 
                    RowBox[{"minx", "+", "a"}]}], "}"}]}], "]"}], ",", 
                  RowBox[{"maxxy", "/", "30"}]}], "]"}], ",", 
                RowBox[{
                 RowBox[{"FindArgMax", "[", 
                  RowBox[{
                   RowBox[{"{", 
                    RowBox[{
                    RowBox[{"inter", "[", "x", "]"}], ",", 
                    RowBox[{
                    RowBox[{"minx", "+", "a"}], "\[LessEqual]", "x", 
                    "\[LessEqual]", 
                    RowBox[{"minx", "+", 
                    RowBox[{"2", " ", "a"}]}]}]}], "}"}], ",", 
                   RowBox[{"{", 
                    RowBox[{"x", ",", 
                    RowBox[{"minx", "+", "a"}]}], "}"}]}], "]"}], "[", 
                 RowBox[{"[", "1", "]"}], "]"}]}], "}"}], ",", 
              RowBox[{"{", 
               RowBox[{"a", ",", "1", ",", 
                RowBox[{
                 FractionBox["1", "2"], 
                 RowBox[{"(", 
                  RowBox[{"maxx", "-", "minx"}], ")"}]}], ",", 
                RowBox[{"1", "/", "20"}]}], "}"}]}], "]"}], ",", "First"}], 
           "]"}], "[", 
          RowBox[{"[", 
           RowBox[{"All", ",", "2"}], "]"}], "]"}], "]"}], "]"}]}], ";", 
      RowBox[{"bad", "=", 
       RowBox[{"{", "}"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"If", "[", 
       RowBox[{
        RowBox[{
         RowBox[{"Length", "[", "maxxs", "]"}], ">", "1"}], ",", 
        RowBox[{"Do", "[", 
         RowBox[{
          RowBox[{"If", "[", 
           RowBox[{
            RowBox[{
             RowBox[{
              RowBox[{"maxxs", "[", 
               RowBox[{"[", 
                RowBox[{"i", "+", "1"}], "]"}], "]"}], "/", 
              RowBox[{"maxxs", "[", 
               RowBox[{"[", "i", "]"}], "]"}]}], "\[LessEqual]", "1.001"}], 
            ",", 
            RowBox[{"bad", "=", 
             RowBox[{"Append", "[", 
              RowBox[{"bad", ",", 
               RowBox[{"{", "i", "}"}]}], "]"}]}]}], "]"}], ",", 
          RowBox[{"{", 
           RowBox[{"i", ",", 
            RowBox[{
             RowBox[{"Length", "[", "maxxs", "]"}], "-", "1"}]}], "}"}]}], 
         "]"}]}], "]"}], ";", "\[IndentingNewLine]", 
      RowBox[{"maxxs", "=", 
       RowBox[{"Delete", "[", 
        RowBox[{"maxxs", ",", "bad"}], "]"}]}], ";", 
      RowBox[{"maxxis", "=", 
       RowBox[{"Sort", "[", 
        RowBox[{"Table", "[", 
         RowBox[{
          RowBox[{
           RowBox[{"Position", "[", 
            RowBox[{
             RowBox[{"input", "[", 
              RowBox[{"[", 
               RowBox[{"All", ",", "1"}], "]"}], "]"}], ",", 
             RowBox[{
              RowBox[{"Nearest", "[", 
               RowBox[{
                RowBox[{"input", "[", 
                 RowBox[{"[", 
                  RowBox[{"All", ",", "1"}], "]"}], "]"}], ",", 
                RowBox[{"maxxs", "[", 
                 RowBox[{"[", "i", "]"}], "]"}]}], "]"}], "[", 
              RowBox[{"[", "1", "]"}], "]"}]}], "]"}], "[", 
           RowBox[{"[", 
            RowBox[{"1", ",", "1"}], "]"}], "]"}], ",", 
          RowBox[{"{", 
           RowBox[{"i", ",", 
            RowBox[{"Length", "[", "maxxs", "]"}]}], "}"}]}], "]"}], "]"}]}], 
      ";", "\[IndentingNewLine]", 
      RowBox[{"bad", "=", 
       RowBox[{"{", "}"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"Do", "[", 
       RowBox[{
        RowBox[{"If", "[", 
         RowBox[{
          RowBox[{"Or", "[", 
           RowBox[{
            RowBox[{
             RowBox[{"input", "[", 
              RowBox[{"[", 
               RowBox[{
                RowBox[{
                 RowBox[{"maxxis", "[", 
                  RowBox[{"[", "i", "]"}], "]"}], "-", "30"}], ",", "2"}], 
               "]"}], "]"}], ">", 
             RowBox[{"input", "[", 
              RowBox[{"[", 
               RowBox[{
                RowBox[{"maxxis", "[", 
                 RowBox[{"[", "i", "]"}], "]"}], ",", "2"}], "]"}], "]"}]}], 
            ",", 
            RowBox[{
             RowBox[{"input", "[", 
              RowBox[{"[", 
               RowBox[{
                RowBox[{
                 RowBox[{"maxxis", "[", 
                  RowBox[{"[", "i", "]"}], "]"}], "+", "30"}], ",", "2"}], 
               "]"}], "]"}], ">", 
             RowBox[{"input", "[", 
              RowBox[{"[", 
               RowBox[{
                RowBox[{"maxxis", "[", 
                 RowBox[{"[", "i", "]"}], "]"}], ",", "2"}], "]"}], "]"}]}]}],
            "]"}], ",", 
          RowBox[{"bad", "=", 
           RowBox[{"Append", "[", 
            RowBox[{"bad", ",", 
             RowBox[{"{", "i", "}"}]}], "]"}]}]}], "]"}], ",", 
        RowBox[{"{", 
         RowBox[{"i", ",", 
          RowBox[{"Length", "[", "maxxis", "]"}]}], "}"}]}], "]"}], ";", 
      RowBox[{"maxxs", "=", 
       RowBox[{"Delete", "[", 
        RowBox[{"maxxs", ",", "bad"}], "]"}]}], ";", 
      RowBox[{"maxxis", "=", 
       RowBox[{"Delete", "[", 
        RowBox[{"maxxis", ",", "bad"}], "]"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"maxys", "=", 
       RowBox[{"Table", "[", 
        RowBox[{
         RowBox[{"input", "[", 
          RowBox[{"[", 
           RowBox[{
            RowBox[{"maxxis", "[", 
             RowBox[{"[", "i", "]"}], "]"}], ",", "2"}], "]"}], "]"}], ",", 
         RowBox[{"{", 
          RowBox[{"i", ",", 
           RowBox[{"Length", "[", "maxxs", "]"}]}], "}"}]}], "]"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"If", "[", 
       RowBox[{
        RowBox[{
         RowBox[{"Length", "[", "maxxs", "]"}], ">", "1"}], ",", 
        "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{"mins", "=", 
          RowBox[{"Range", "[", 
           RowBox[{
            RowBox[{"Length", "[", "maxxs", "]"}], "-", "1"}], "]"}]}], ";", 
         "\[IndentingNewLine]", 
         RowBox[{"Do", "[", 
          RowBox[{
           RowBox[{
            RowBox[{"mins", "[", 
             RowBox[{"[", "i", "]"}], "]"}], "=", 
            RowBox[{
             RowBox[{"Position", "[", 
              RowBox[{
               RowBox[{"input", "[", 
                RowBox[{"[", 
                 RowBox[{"All", ",", "2"}], "]"}], "]"}], ",", 
               RowBox[{"Min", "[", 
                RowBox[{"input", "[", 
                 RowBox[{"[", 
                  RowBox[{
                   RowBox[{
                    RowBox[{"maxxis", "[", 
                    RowBox[{"[", "i", "]"}], "]"}], ";;", 
                    RowBox[{"maxxis", "[", 
                    RowBox[{"[", 
                    RowBox[{"i", "+", "1"}], "]"}], "]"}]}], ",", "2"}], 
                  "]"}], "]"}], "]"}]}], "]"}], "[", 
             RowBox[{"[", 
              RowBox[{"1", ",", "1"}], "]"}], "]"}]}], ",", 
           RowBox[{"{", 
            RowBox[{"i", ",", 
             RowBox[{
              RowBox[{"Length", "[", "maxxs", "]"}], "-", "1"}]}], "}"}]}], 
          "]"}], ";", 
         RowBox[{"mins", "=", 
          RowBox[{"Append", "[", 
           RowBox[{
            RowBox[{"Prepend", "[", 
             RowBox[{"mins", ",", 
              RowBox[{
               RowBox[{"maxxis", "[", 
                RowBox[{"[", "1", "]"}], "]"}], "-", 
               RowBox[{"(", 
                RowBox[{
                 RowBox[{"mins", "[", 
                  RowBox[{"[", "1", "]"}], "]"}], "-", 
                 RowBox[{"maxxis", "[", 
                  RowBox[{"[", "1", "]"}], "]"}]}], ")"}]}]}], "]"}], ",", 
            RowBox[{"If", "[", 
             RowBox[{
              RowBox[{
               RowBox[{
                RowBox[{"maxxis", "[", 
                 RowBox[{"[", 
                  RowBox[{"-", "1"}], "]"}], "]"}], "+", 
                RowBox[{"(", 
                 RowBox[{
                  RowBox[{"maxxis", "[", 
                   RowBox[{"[", 
                    RowBox[{"-", "1"}], "]"}], "]"}], "-", 
                  RowBox[{"mins", "[", 
                   RowBox[{"[", 
                    RowBox[{"-", "1"}], "]"}], "]"}]}], ")"}]}], 
               "\[LessEqual]", " ", 
               RowBox[{"Length", "[", "input", "]"}]}], ",", 
              RowBox[{
               RowBox[{"maxxis", "[", 
                RowBox[{"[", 
                 RowBox[{"-", "1"}], "]"}], "]"}], "+", 
               RowBox[{"(", 
                RowBox[{
                 RowBox[{"maxxis", "[", 
                  RowBox[{"[", 
                   RowBox[{"-", "1"}], "]"}], "]"}], "-", 
                 RowBox[{"mins", "[", 
                  RowBox[{"[", 
                   RowBox[{"-", "1"}], "]"}], "]"}]}], ")"}]}], ",", 
              RowBox[{"Length", "[", "input", "]"}]}], "]"}]}], "]"}]}], 
         ";"}], ",", "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{"hwhmi", "=", 
          RowBox[{
           RowBox[{"Position", "[", 
            RowBox[{"input", ",", 
             RowBox[{
              RowBox[{"Nearest", "[", 
               RowBox[{
                RowBox[{"input", "[", 
                 RowBox[{"[", 
                  RowBox[{
                   RowBox[{";;", "maxyi"}], ",", "2"}], "]"}], "]"}], ",", 
                RowBox[{"maxy", "/", "2"}]}], "]"}], "[", 
              RowBox[{"[", "1", "]"}], "]"}]}], "]"}], "[", 
           RowBox[{"[", 
            RowBox[{"1", ",", "1"}], "]"}], "]"}]}], ";", 
         "\[IndentingNewLine]", 
         RowBox[{"mins", "=", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"maxyi", "-", 
             RowBox[{"3", 
              RowBox[{"(", 
               RowBox[{"maxyi", "-", "hwhmi"}], ")"}]}]}], ",", 
            RowBox[{"If", "[", 
             RowBox[{
              RowBox[{
               RowBox[{"maxyi", "+", 
                RowBox[{"3", 
                 RowBox[{"(", 
                  RowBox[{"maxyi", "-", "hwhmi"}], ")"}]}]}], "\[LessEqual]", 
               
               RowBox[{"Length", "[", "input", "]"}]}], ",", 
              RowBox[{"maxyi", "+", 
               RowBox[{"3", 
                RowBox[{"(", 
                 RowBox[{"maxyi", "-", "hwhmi"}], ")"}]}]}], ",", 
              RowBox[{"Length", "[", "input", "]"}]}], "]"}]}], "}"}]}], 
         ";"}]}], "]"}], ";", "\[IndentingNewLine]", 
      RowBox[{"If", "[", 
       RowBox[{
        RowBox[{
         RowBox[{"mins", "[", 
          RowBox[{"[", "1", "]"}], "]"}], "\[LessEqual]", "0"}], ",", 
        RowBox[{
         RowBox[{"mins", "[", 
          RowBox[{"[", "1", "]"}], "]"}], "=", "1"}]}], "]"}], ";", "\n", 
      RowBox[{"hwhmi", "=", 
       RowBox[{"Range", "[", 
        RowBox[{"Length", "[", "maxxs", "]"}], "]"}]}], ";", "\n", 
      RowBox[{"Do", "[", 
       RowBox[{
        RowBox[{
         RowBox[{"hwhmi", "[", 
          RowBox[{"[", "i", "]"}], "]"}], "=", 
         RowBox[{
          RowBox[{"Position", "[", 
           RowBox[{"input", ",", 
            RowBox[{
             RowBox[{"Nearest", "[", 
              RowBox[{
               RowBox[{"input", "[", 
                RowBox[{"[", 
                 RowBox[{
                  RowBox[{
                   RowBox[{"mins", "[", 
                    RowBox[{"[", "i", "]"}], "]"}], ";;", 
                   RowBox[{"maxxis", "[", 
                    RowBox[{"[", "i", "]"}], "]"}]}], ",", "2"}], "]"}], 
                "]"}], ",", 
               RowBox[{
                RowBox[{"inter", "[", 
                 RowBox[{"maxxs", "[", 
                  RowBox[{"[", "i", "]"}], "]"}], "]"}], "/", "2"}]}], "]"}], 
             "[", 
             RowBox[{"[", "1", "]"}], "]"}]}], "]"}], "[", 
          RowBox[{"[", 
           RowBox[{"1", ",", "1"}], "]"}], "]"}]}], ",", 
        RowBox[{"{", 
         RowBox[{"i", ",", 
          RowBox[{"Length", "[", "maxxs", "]"}]}], "}"}]}], "]"}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"gammas", "=", 
       RowBox[{"Range", "[", 
        RowBox[{"Length", "[", "hwhmi", "]"}], "]"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"Do", "[", 
       RowBox[{
        RowBox[{
         RowBox[{"gammas", "[", 
          RowBox[{"[", "i", "]"}], "]"}], "=", 
         RowBox[{"2", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"maxxs", "[", 
             RowBox[{"[", "i", "]"}], "]"}], "-", 
            RowBox[{"input", "[", 
             RowBox[{"[", 
              RowBox[{
               RowBox[{"hwhmi", "[", 
                RowBox[{"[", "i", "]"}], "]"}], ",", "1"}], "]"}], "]"}]}], 
           ")"}]}]}], ",", 
        RowBox[{"{", 
         RowBox[{"i", ",", 
          RowBox[{"Length", "[", "hwhmi", "]"}]}], "}"}]}], "]"}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"inputc", "=", 
       RowBox[{"Range", "[", 
        RowBox[{"Length", "[", "maxxs", "]"}], "]"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"Do", "[", 
       RowBox[{
        RowBox[{
         RowBox[{"inputc", "[", 
          RowBox[{"[", "i", "]"}], "]"}], "=", 
         RowBox[{"input", "[", 
          RowBox[{"[", 
           RowBox[{
            RowBox[{"If", "[", 
             RowBox[{
              RowBox[{"i", "\[GreaterEqual]", "2"}], ",", 
              RowBox[{"If", "[", 
               RowBox[{
                RowBox[{
                 RowBox[{
                  RowBox[{"maxxis", "[", 
                   RowBox[{"[", "i", "]"}], "]"}], "-", 
                  RowBox[{"3", 
                   RowBox[{"(", 
                    RowBox[{
                    RowBox[{"maxxis", "[", 
                    RowBox[{"[", "i", "]"}], "]"}], "-", 
                    RowBox[{"hwhmi", "[", 
                    RowBox[{"[", "i", "]"}], "]"}]}], ")"}]}]}], "<", 
                 RowBox[{"mins", "[", 
                  RowBox[{"[", "i", "]"}], "]"}]}], ",", 
                RowBox[{"mins", "[", 
                 RowBox[{"[", "i", "]"}], "]"}], ",", 
                RowBox[{
                 RowBox[{"maxxis", "[", 
                  RowBox[{"[", "i", "]"}], "]"}], "-", 
                 RowBox[{"3", 
                  RowBox[{"(", 
                   RowBox[{
                    RowBox[{"maxxis", "[", 
                    RowBox[{"[", "i", "]"}], "]"}], "-", 
                    RowBox[{"hwhmi", "[", 
                    RowBox[{"[", "i", "]"}], "]"}]}], ")"}]}]}]}], "]"}], ",", 
              RowBox[{"If", "[", 
               RowBox[{
                RowBox[{
                 RowBox[{
                  RowBox[{"maxxis", "[", 
                   RowBox[{"[", "i", "]"}], "]"}], "-", 
                  RowBox[{"3", 
                   RowBox[{"(", 
                    RowBox[{
                    RowBox[{"maxxis", "[", 
                    RowBox[{"[", "i", "]"}], "]"}], "-", 
                    RowBox[{"hwhmi", "[", 
                    RowBox[{"[", "i", "]"}], "]"}]}], ")"}]}]}], ">", "0"}], 
                ",", 
                RowBox[{
                 RowBox[{"maxxis", "[", 
                  RowBox[{"[", "i", "]"}], "]"}], "-", 
                 RowBox[{"3", 
                  RowBox[{"(", 
                   RowBox[{
                    RowBox[{"maxxis", "[", 
                    RowBox[{"[", "i", "]"}], "]"}], "-", 
                    RowBox[{"hwhmi", "[", 
                    RowBox[{"[", "i", "]"}], "]"}]}], ")"}]}]}], ",", "1"}], 
               "]"}]}], "]"}], ";;", 
            RowBox[{"If", "[", 
             RowBox[{
              RowBox[{
               RowBox[{
                RowBox[{"maxxis", "[", 
                 RowBox[{"[", "i", "]"}], "]"}], "+", 
                RowBox[{"3", 
                 RowBox[{"(", 
                  RowBox[{
                   RowBox[{"maxxis", "[", 
                    RowBox[{"[", "i", "]"}], "]"}], "-", 
                   RowBox[{"hwhmi", "[", 
                    RowBox[{"[", "i", "]"}], "]"}]}], ")"}]}]}], "<", 
               RowBox[{"mins", "[", 
                RowBox[{"[", 
                 RowBox[{"i", "+", "1"}], "]"}], "]"}]}], ",", 
              RowBox[{
               RowBox[{"maxxis", "[", 
                RowBox[{"[", "i", "]"}], "]"}], "+", 
               RowBox[{"3", 
                RowBox[{"(", 
                 RowBox[{
                  RowBox[{"maxxis", "[", 
                   RowBox[{"[", "i", "]"}], "]"}], "-", 
                  RowBox[{"hwhmi", "[", 
                   RowBox[{"[", "i", "]"}], "]"}]}], ")"}]}]}], ",", 
              RowBox[{"mins", "[", 
               RowBox[{"[", 
                RowBox[{"i", "+", "1"}], "]"}], "]"}]}], "]"}]}], "]"}], 
          "]"}]}], ",", 
        RowBox[{"{", 
         RowBox[{"i", ",", 
          RowBox[{"Length", "[", "maxxs", "]"}]}], "}"}]}], "]"}], ";"}]}], 
    "]"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.748081510572938*^9, 3.748081561586007*^9}, {
   3.748082081712475*^9, 3.748082090165246*^9}, 3.748082232707541*^9, 
   3.748082922887702*^9, {3.7480830427294903`*^9, 3.748083042873774*^9}, {
   3.748083101587571*^9, 3.748083102163207*^9}, {3.748083231077661*^9, 
   3.748083236683316*^9}, {3.7480834118009253`*^9, 3.748083413065654*^9}, {
   3.748084393684103*^9, 3.7480844239363003`*^9}, {3.748084693244123*^9, 
   3.7480846977326612`*^9}, {3.749128629712927*^9, 3.7491286300158377`*^9}, {
   3.749547386799555*^9, 3.7495473885934477`*^9}, {3.749548350340035*^9, 
   3.749548350470517*^9}}]
}, Closed]],

Cell[CellGroupData[{

Cell["Fitting", "Subsection",
 CellChangeTimes->{{3.749777736606145*^9, 3.749777748621222*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"uscanI", "=", 
   RowBox[{"{", 
    RowBox[{
     FractionBox["1", "10"], ",", 
     FractionBox["1", "5"], ",", 
     FractionBox["3", "10"], ",", 
     FractionBox["2", "5"], ",", 
     FractionBox["1", "2"], ",", 
     FractionBox["3", "5"], ",", 
     FractionBox["7", "10"], ",", 
     FractionBox["4", "5"], ",", 
     FractionBox["9", "10"], ",", "1"}], "}"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.749777757893485*^9, 3.749777768762898*^9}, {
   3.749777850924502*^9, 3.7497778565161*^9}, 3.7497779094532137`*^9}],

Cell[BoxData[
 RowBox[{
  RowBox[{"uscanI1", "=", 
   RowBox[{"{", 
    RowBox[{
     FractionBox["1", "10"], ",", 
     FractionBox["1", "5"], ",", 
     FractionBox["3", "10"], ",", 
     FractionBox["2", "5"], ",", 
     FractionBox["1", "2"], ",", 
     FractionBox["3", "5"], ",", 
     FractionBox["7", "10"], ",", 
     FractionBox["4", "5"], ",", 
     FractionBox["9", "10"]}], "}"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.7512736550642977`*^9, 3.751273657315632*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"uscan", "=", 
   RowBox[{"{", 
    RowBox[{
     FractionBox["1", "10"], ",", 
     FractionBox["1", "5"], ",", 
     FractionBox["3", "10"], ",", 
     FractionBox["2", "5"], ",", 
     FractionBox["1", "2"], ",", 
     FractionBox["3", "5"], ",", 
     FractionBox["7", "10"], ",", 
     FractionBox["4", "5"], ",", 
     FractionBox["9", "10"], ",", 
     FractionBox["99", "100"]}], "}"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.751271348001799*^9, 3.7512713516737328`*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"uscan1", "=", 
   RowBox[{"{", 
    RowBox[{
     FractionBox["1", "10"], ",", 
     FractionBox["1", "5"], ",", 
     FractionBox["3", "10"], ",", 
     FractionBox["2", "5"], ",", 
     FractionBox["1", "2"], ",", 
     FractionBox["3", "5"], ",", 
     FractionBox["7", "10"], ",", 
     FractionBox["4", "5"], ",", 
     FractionBox["9", "10"]}], "}"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.7512736619842567`*^9, 3.7512736652711563`*^9}}],

Cell[CellGroupData[{

Cell["Bottomonium 250 MeV Perpendicular", "Subsubsection",
 CellChangeTimes->{{3.749778062272131*^9, 3.749778068114171*^9}, {
   3.749778385307662*^9, 3.749778388043805*^9}, {3.7497802506058083`*^9, 
   3.749780256173894*^9}, {3.751271905642434*^9, 3.751271909686173*^9}, 
   3.751273541540352*^9}],

Cell[BoxData[
 RowBox[{
  RowBox[{"Do", "[", 
   RowBox[{
    RowBox[{
     RowBox[{
      RowBox[{"bbdata2", "[", "n", "]"}], "=", 
      RowBox[{"Import", "[", 
       RowBox[{"\"\<bb_perp/swbbu\>\"", "<>", 
        RowBox[{"ToString", "[", 
         RowBox[{"Round", "[", 
          RowBox[{"100", 
           RowBox[{"uscanI", "[", 
            RowBox[{"[", "n", "]"}], "]"}]}], "]"}], "]"}], "<>", 
        "\"\<spectraT250.dat\>\""}], "]"}]}], ";"}], ",", 
    RowBox[{"{", 
     RowBox[{"n", ",", 
      RowBox[{"Length", "[", "uscan", "]"}]}], "}"}]}], "]"}], ";"}]], "Input",\

 CellChangeTimes->{{3.725358141297976*^9, 3.725358229741619*^9}, {
   3.726381203252303*^9, 3.72638122981116*^9}, {3.726817443686364*^9, 
   3.726817450558557*^9}, {3.7268175034474773`*^9, 3.7268175195436897`*^9}, {
   3.726817549624247*^9, 3.726817584073985*^9}, {3.726817645844924*^9, 
   3.726817661849916*^9}, {3.7268178518132267`*^9, 3.726817853316984*^9}, {
   3.726818220884605*^9, 3.726818248043754*^9}, {3.726818395112039*^9, 
   3.726818405030871*^9}, {3.728025717628559*^9, 3.728025721870681*^9}, {
   3.733391838438321*^9, 3.733391841005725*^9}, {3.7334871561228333`*^9, 
   3.733487157714797*^9}, {3.735556380537409*^9, 3.735556411016716*^9}, 
   3.7372657097716618`*^9, {3.742293713448082*^9, 3.742293717495942*^9}, {
   3.7422939293644867`*^9, 3.742293945276787*^9}, {3.742296619671309*^9, 
   3.742296641070937*^9}, {3.742300589833056*^9, 3.7423005960644703`*^9}, {
   3.7437407848579473`*^9, 3.743740815085075*^9}, {3.747628979621812*^9, 
   3.747629025049182*^9}, {3.7478867814997873`*^9, 3.747886798086385*^9}, {
   3.7478868952250566`*^9, 3.747886953528987*^9}, {3.7480790364079447`*^9, 
   3.748079037230782*^9}, {3.749543852008215*^9, 3.749543882112545*^9}, {
   3.749777782698434*^9, 3.749777821213667*^9}, 3.7497779139182*^9, {
   3.749778399293709*^9, 3.7497784004814253`*^9}, {3.749780262424721*^9, 
   3.74978026354718*^9}, {3.751273790748599*^9, 3.7512738089268827`*^9}, 
   3.751709060864586*^9, 3.7517093329601727`*^9}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Block", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"n", "=", "9"}], "}"}], ",", 
   RowBox[{"ListPlot", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"bbdata2", "[", "n", "]"}], "}"}], ",", 
     RowBox[{"Joined", "\[Rule]", "True"}], ",", 
     RowBox[{"PlotStyle", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{"Thick", ",", 
        RowBox[{"{", 
         RowBox[{"Dashed", ",", "Orange"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"Dashed", ",", "Orange"}], "}"}]}], "}"}]}]}], "]"}]}], 
  "]"}]], "Input",
 CellChangeTimes->{{3.7495438642907267`*^9, 3.749544031124817*^9}, {
  3.749777943702449*^9, 3.749777959765777*^9}, {3.749780266081059*^9, 
  3.749780266519639*^9}, {3.751273821208933*^9, 3.751273899028784*^9}, {
  3.7512847123032913`*^9, 3.7512847162267513`*^9}, {3.75170904724199*^9, 
  3.751709050406616*^9}, {3.751709347826261*^9, 3.7517093600165052`*^9}, {
  3.7517094410331182`*^9, 3.7517094648772497`*^9}}],

Cell[BoxData[
 GraphicsBox[{{}, {{}, {}, 
    {RGBColor[0.368417, 0.506779, 0.709798], PointSize[0.003666666666666667], 
     Thickness[Large], LineBox[CompressedData["
1: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
      "]], 
     LineBox[CompressedData["
1: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
r8Xn2yI/YtbOJgr+aXMn4eJ0v6D3bWzSnrqRy78O68Hf6qlP/9jk1uvZdyzF
/i1xq/QYbPJbc8ivnkbZO9bsPPaXTUTnVfVMwDWcgIKsP2zy4b/j7X5f8PHH
VjHDW9nk3P5/vyfgs3/WiIjA6k7uP/2+0qiojiGl+b/ZZPgSV8ME7PdFqfjI
LzZ5lB/12a+BRkUb9ahatrCJVb1E5QTs6HzAK6+ZTdaMZ3L8vtEoryNFDDH4
y0qFsgm4Lt7chb+JTS6Rl6/8vmN+dL+9i/xkEx0LnWcTsItdUu3eH2zCc672
iV8jjUp43Gzn1cgmz++efDQBCyzL1379nU3cyruy/H5gnile87DiG5vIdPlk
TMBRzO3SivDvRXypfj9plOcer1TPBja5oXg5aQK+c+7g/gdf0evhVfF+TZjv
rxbpFn5hEyHv+9ET8MtesTNaMDN5ywW/Zpwf1N0H1erZJOjlm9AJeJHYtqMO
ddiCm/QC/Frw9y3uFMfUoleeb14T8A1Wk2rzZ/RKs3L1+4X9bdXyQ8vhk3sG
7Cfgl7vefZD/xCbL7YKs/H7j/HfsqahfDXqNXmgxAXfnjoTfrGaTizlXj/u1
oscN0+YtVWyy65OU0QTcmJ/6fhU8OfT4gN8fGiV/bvCFaSV6ldi+fwKOvuVo
HlOBXtXYu/3+4n5RPleY8JFN6CcOaUzAJ9UTp3s+oNfgJjW/fzSqf7InbAd8
NcN+ywR8gild5/aeTQyYo/J+bejHcOJIazl6bTu7cQLWNljJV8tBrwuF6X7t
NKqgxjOrho1e5W6smYBHxh3maMOzbwfv14H9YEkocWWhV7enSyfgosCdxo+Y
bDL74+J+nejtbK7uxDs2Of7s44IJ2OW35e2N8Ox/J/t10ahj693HdpahVxwv
x2GuCv5wnbfoda3ruG83jbreML087Q2b7Ng1PTgOm0w07ql+jV4tI3t8e7De
NJ9ZIgQ/jhBrH4dZu4+zzUrZxDr71m/fXhqlHkPaL5Wg10q5n+PwwzqfNS9e
scnXvudffftolKpO0oaul+hVVPvzOOyg5JIpA+9V+VTh24/rF5LMSxWj12Nm
nHFY/JTkPv8XbPLCv+Ot7wDmy+D48RfP2cQ9zevVOPyBKP9sf4Ze3/A+8x1E
r3Hu60Xg379jn4zD30+k7NctQq/zVj7yHcJ5Ikjx0aVCNjmyIStrHC5ce9km
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
+P7B4Vz0eur2HOsfFK2jIqIcCu9JV5tVAwuZCTLi8OLinOnWP3F+EZOvCH3J
kIYfm4RqYPtNq47IwbGSZROtByj6cPKs98Yv0KsWb6wa/rvPzGYnLGTTM2Q1
SNGrSnWv8nIYkhfk218NP/63onMS7HtjSo/VEPb7z2UlC7IZov7mfEc1LHsg
oeHGc4Z8aZdutvqF9UP0pKcMfGtqam01/N+o+b83z9Cr0ooKq2GKPtnkeaXq
KXrd/rq4Gta8/OvLdvjj/m0frEYoetrUgw9Ln6DXi9VsNbyg/+cTT3jdE9c8
q1GKnim3Rz/1MXqt6s+uhj/W6AqPZKHX30GPrX5j/2l2n38VdpMVzqiGLbbu
TJ4Hy+nG3rMao+jz7PuGvEcMqXJWuFMNm6yNpuXg8yceXLf6g+vpu2h28H8M
MUhdfbka3ln7/fdEeNJHfozVX/x7Qcr4VwZDsr8bn6uGA48WyCfCPjMbT1r9
o+j5q5dvXwkraXqGV8PqyR6HNzxkSJv5r2CrCVzaSFIxpeoBevU75lcND5ck
Fh6Fza6KH7SayKXFAi9JzIBFX13xqoafzyuatTYdvTZzdllN4tLa2UbZn+8z
JGRKlnM1fJeyD6xIY8gqDm1vNZlLC+aWX8+H+ww+WlbD8+22K+XfQ697LE2s
pnBprzNnfJfCjufatlXDz2rE+2JTGTL/v/2brQS4tJ7L651acGnZ2Ppq2FpU
3SjiLnr9FbnOSpBLPz2WsVUP1psvqVUNx9Vm712RwpCxtTc1rIS4tFpjX4ET
nOWgolIN5xa/jLqczJC9Yc85VlO59NvjaqKf7qDXOxsUquHl0RbTDOGGtyXS
VtO4dGLmW58fSej1i92calidqeIQ2Gj8Ahbm0ttVv8bH32bI1GWHp1fDm3P1
UubBecaThKxEuHRBpKm76y2G+B2KmlgN87TDI0pvotf4+WOW07m0+3Q7gQD4
S3byUBU85CA5VHcDvdZr9FuKcmnxwLsV/rDNhFdfq+BJt4YvpFxnyOxFhh2W
Ylz60KbSID3444bKpiq452NMhGciQ457ONdainPpWQZttvXXGKJzure8Cq70
/CNyEh5KDyi2nMGlpwyfXfTlKnotFvpQBT9JWWkvA7uPfyDuTPRRJH6j8QpD
5KXk86rgCPVjl3XhKq372ZazuPQt7hONI5cZcsFG63EVfDN830hDAnoNZh5a
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
3RF1I/PRa0baO5MTXFr3zqYNZ+D/AfpPpi0=
      "]]}}, {}, {}, {{}, {}}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{8.70152565625, 0},
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  ImagePadding->All,
  Method->{"CoordinatesToolOptions" -> {"DisplayFunction" -> ({
        (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
         Part[#, 1]], 
        (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
         Part[#, 2]]}& ), "CopiedValueFunction" -> ({
        (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
         Part[#, 1]], 
        (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
         Part[#, 2]]}& )}},
  PlotRange->{{8.764, 12.762357999999999`}, {0, 0.3776315180450748}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.02], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{{3.7495438729255466`*^9, 3.7495439641317472`*^9}, {
   3.7495440052175283`*^9, 3.749544032106246*^9}, 3.749548372301848*^9, 
   3.7495499979761457`*^9, {3.749777937077979*^9, 3.749777960997555*^9}, 
   3.749779841480816*^9, 3.749780301259684*^9, {3.7512738220060596`*^9, 
   3.751273899365597*^9}, {3.7512847090117493`*^9, 3.751284717259996*^9}, {
   3.751709041508992*^9, 3.7517090510457573`*^9}, {3.751709343521899*^9, 
   3.7517093610339127`*^9}, {3.75170944587105*^9, 3.751709465462236*^9}, 
   3.751711482198946*^9, 
   3.751881461680372*^9},ImageCache->GraphicsData["CompressedBitmap", "\<\
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
+R6XqlBzYqrBnFVfmbEbSn7uoTa/IkBt/rV41lov2XtmoIatmVWR9+K9Eqry
wz5VkYrjZj1VoXSprGNpURxVfohIp4oUDWyQqniKsHBNaU9VcZ/CpKiq0btI
SlV8sw5W1UNVPvGkKiaryHmoihStoPg0VaU9LOv6q1I1NTVm0qRJeggye/Zs
vMEQWd0lSl4pg11GoeQ7/bxMKSmSO6CbvrzL8rpQpj4DC2voJ06c0L97VFxc
jLdN0qLzKRHR5c5lSaHVoXvxjR2ujej4ghyKkl3ook64KLm9vV2r4uFvd4fK
z4FCVH38AKAC3A1iyYkkde8CFXVi5fKNffv0WMWByvbvAseDkuPSCzgGfPkv
otxwOKIOnfgKJo5E8Ae/Bg4caIqKiu521chTrja3O1DeRV8VUOER2y5QUWdK
ZD+wI0zQ5MmT09oRrsSFSdshh8gvChCRl0SoAB75wbt0IUp3SoQTFSACMpwW
5ebmpkXmZ03pkJGx4yIXvty1uoLjHrJ05z5nz54106ZNUwvHZ5WVlXeNjC/G
gBYSmXcvVwXwVh14tkWWzk12U6NFtT+wwskCccKALxxt4HdUYmMI9zPt7sLx
6rXl0+qFSXox73cpnAbZ4R2C/aGdeDIKmjcyhbaeifeLVhTPSIkraWSx91E8
xeKyDrnSfRTP+MN/4Ey++ARe52o0b+5yQq95r91QKI9U8Q9nvjDXGJj9ahPF
+wW1r9g2HGehTWhm0H7/xMLz2j/80lOx/pGXPv3lzHKicmVfdlw5/pDut5zq
M10Xk+5Fjm+VceWwshOeXfdcjm/9lEPfiT3bTU6C6Uf19l3nvaD4LOX4dXDK
4akJSqyZ5OjfclKvzt4++/jl6u1z8Vi9pQ3nLeiDkzHeyvIzj7hyfM5xv+WA
36EN9dJuclRMut5+znsvKD5LOThGRx+8NHMvcnxqTzm8Z+pecO6hHL8q88sq
By+PoA+qe/cix8+AKce/st1NToIVoyaBG7nXWztcb3h6tOGOdCYU+v0X9Mdh
P++f68/2L4kHD/w/bNpBDw==\
\>"]]
}, Open  ]],

Cell[BoxData[{
 RowBox[{"Clear", "[", 
  RowBox[{"bbmodelu", ",", "bbmodell", ",", "bbmodel"}], "]"}], "\n", 
 RowBox[{
  RowBox[{"Quiet", "[", 
   RowBox[{"fit", "[", 
    RowBox[{"bbdata2", ",", "bbmodel", ",", "uscanI"}], "]"}], "]"}], 
  ";"}]}], "Input",
 CellChangeTimes->{{3.7280570534985743`*^9, 3.7280570631809893`*^9}, {
   3.728121934261742*^9, 3.7281219354934072`*^9}, {3.72812372592522*^9, 
   3.7281237317770023`*^9}, 3.7334591932446957`*^9, 3.733459902726426*^9, {
   3.733487184500811*^9, 3.733487215580393*^9}, {3.7335018797792892`*^9, 
   3.733501901955977*^9}, {3.73555663577351*^9, 3.735556645781885*^9}, {
   3.742293733800462*^9, 3.742293739544044*^9}, 3.742293972994076*^9, {
   3.743740997247134*^9, 3.743741004339218*^9}, {3.7476492498345833`*^9, 
   3.747649255066978*^9}, {3.747657194129693*^9, 3.747657206609686*^9}, 
   3.747708085315654*^9, 3.747887037871442*^9, {3.747887080715015*^9, 
   3.747887082461557*^9}, {3.74977801892173*^9, 3.749778020661161*^9}, {
   3.7497802668245163`*^9, 3.7497802685060673`*^9}, {3.7517090562884703`*^9, 
   3.7517090648822193`*^9}, {3.7517094692823973`*^9, 3.751709469433837*^9}, 
   3.7517095677724733`*^9}],

Cell[BoxData[{
 RowBox[{
  RowBox[{"Clear", "[", 
   RowBox[{
   "wrfitbb", ",", "wrfitbbl", ",", "wrfitbbu", ",", "gfitbb", ",", "gfitbbl",
     ",", "gfitbbu", ",", "areafitbb", ",", "areafitbbu", ",", "areafitbbl", 
    ",", "cfitbb", ",", "cfitbbl", ",", "cfitbbu", ",", "dfitbb", ",", 
    "dfitbbl", ",", "dfitbbu", ",", "sfitbb", ",", "sfitbbl", ",", "sfitbbu", 
    ",", "s2fitbb", ",", "s2fitbbl", ",", "s2fitbbu"}], "]"}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"store", "[", 
   RowBox[{"wr", ",", "wrfitbb", ",", "bbmodel"}], "]"}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"store", "[", 
   RowBox[{"\[CapitalGamma]", ",", "gfitbb", ",", "bbmodel"}], "]"}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"store", "[", 
   RowBox[{"const", ",", "cfitbb", ",", "bbmodel"}], "]"}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"store", "[", 
   RowBox[{"\[Delta]bg", ",", "dfitbb", ",", "bbmodel"}], "]"}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"store", "[", 
   RowBox[{"shift", ",", "sfitbb", ",", "bbmodel"}], "]"}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"store", "[", 
   RowBox[{"shift2", ",", "s2fitbb", ",", "bbmodel"}], "]"}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"storearea", "[", 
   RowBox[{"areafitbb", ",", "bbmodel"}], "]"}], ";"}]}], "Input",
 CellChangeTimes->{{3.749550023828817*^9, 3.7495500243041553`*^9}, {
  3.7497802686790953`*^9, 3.7497802798182507`*^9}, {3.7517094775662203`*^9, 
  3.751709495164206*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Transpose", "[", 
  RowBox[{"{", 
   RowBox[{"uscan", ",", 
    RowBox[{"wrfitbb", "[", 
     RowBox[{"[", 
      RowBox[{"All", ",", "1"}], "]"}], "]"}]}], "}"}], "]"}]], "Input",
 CellChangeTimes->{{3.749779664888598*^9, 3.749779668547843*^9}, {
  3.7497815830971737`*^9, 3.7497815941767607`*^9}, {3.751707675820529*^9, 
  3.7517076810615463`*^9}, {3.7517077240489283`*^9, 3.751707753719046*^9}, {
  3.751709521284608*^9, 3.751709538693125*^9}, {3.751881440438262*^9, 
  3.751881440895233*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     FractionBox["1", "10"], ",", "9.392685471099584`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     FractionBox["1", "5"], ",", "9.392842886396108`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     FractionBox["3", "10"], ",", "9.393071518005254`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     FractionBox["2", "5"], ",", "9.393302669173524`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     FractionBox["1", "2"], ",", "9.39341188299078`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     FractionBox["3", "5"], ",", "9.393145512074506`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     FractionBox["7", "10"], ",", "9.391943315941214`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     FractionBox["4", "5"], ",", "9.388330242761127`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     FractionBox["9", "10"], ",", "9.37680237084617`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     FractionBox["99", "100"], ",", "9.310611547159205`"}], "}"}]}], 
  "}"}]], "Output",
 CellChangeTimes->{3.751711579929141*^9, 3.751881638302719*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Transpose", "[", 
  RowBox[{"{", 
   RowBox[{"uscan", ",", 
    RowBox[{"gfitbb", "[", 
     RowBox[{"[", 
      RowBox[{"All", ",", "1"}], "]"}], "]"}]}], "}"}], "]"}]], "Input",
 CellChangeTimes->{{3.749779664888598*^9, 3.749779668547843*^9}, {
  3.7497815830971737`*^9, 3.7497815941767607`*^9}, {3.751707675820529*^9, 
  3.7517076810615463`*^9}, {3.7517077240489283`*^9, 3.751707753719046*^9}, {
  3.751708942369945*^9, 3.751708945778976*^9}, {3.751709532477524*^9, 
  3.75170954106715*^9}, {3.751881442777938*^9, 3.751881443318735*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     FractionBox["1", "10"], ",", "0.02664381334670465`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     FractionBox["1", "5"], ",", "0.026908807567830234`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     FractionBox["3", "10"], ",", "0.0274208531339508`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     FractionBox["2", "5"], ",", "0.027997750929785126`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     FractionBox["1", "2"], ",", "0.02878629648651309`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     FractionBox["3", "5"], ",", "0.029734538749995727`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     FractionBox["7", "10"], ",", "0.030780995886430226`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     FractionBox["4", "5"], ",", "0.03175249251875423`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     FractionBox["9", "10"], ",", "0.031803786096425486`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     FractionBox["99", "100"], ",", "0.04251507746217825`"}], "}"}]}], 
  "}"}]], "Output",
 CellChangeTimes->{3.751711580028945*^9, 3.751881638484989*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Transpose", "[", 
  RowBox[{"{", 
   RowBox[{"uscan", ",", 
    RowBox[{"wrfitbb", "[", 
     RowBox[{"[", 
      RowBox[{"All", ",", "2"}], "]"}], "]"}]}], "}"}], "]"}]], "Input",
 CellChangeTimes->{
  3.7517118986523733`*^9, {3.751881445303008*^9, 3.7518814457560263`*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     FractionBox["1", "10"], ",", "9.819177740135894`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     FractionBox["1", "5"], ",", "9.818651546231067`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     FractionBox["3", "10"], ",", "9.818092499055895`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     FractionBox["2", "5"], ",", "9.817165714602249`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     FractionBox["1", "2"], ",", "9.815693729550063`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     FractionBox["3", "5"], ",", "9.813458111102882`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     FractionBox["7", "10"], ",", "9.810519323765075`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     FractionBox["4", "5"], ",", "9.805908769304665`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     FractionBox["9", "10"], ",", "9.797771358345173`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     FractionBox["99", "100"], ",", "9.776415230754393`"}], "}"}]}], 
  "}"}]], "Output",
 CellChangeTimes->{3.7517118994918118`*^9, 3.7518816386650467`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Transpose", "[", 
  RowBox[{"{", 
   RowBox[{"uscan", ",", 
    RowBox[{"gfitbb", "[", 
     RowBox[{"[", 
      RowBox[{"All", ",", "2"}], "]"}], "]"}]}], "}"}], "]"}]], "Input",
 CellChangeTimes->{{3.751711907409787*^9, 3.751711918228842*^9}, {
  3.751881447527133*^9, 3.7518814479001627`*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     FractionBox["1", "10"], ",", "0.13588818350839127`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     FractionBox["1", "5"], ",", "0.13724272506508595`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     FractionBox["3", "10"], ",", "0.1391567492566719`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     FractionBox["2", "5"], ",", "0.14102686134660566`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     FractionBox["1", "2"], ",", "0.1446122031160789`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     FractionBox["3", "5"], ",", "0.14859879601898762`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     FractionBox["7", "10"], ",", "0.15211151601542774`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     FractionBox["4", "5"], ",", "0.1545273577698845`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     FractionBox["9", "10"], ",", "0.14985378404965607`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     FractionBox["99", "100"], ",", "0.13102547615763804`"}], "}"}]}], 
  "}"}]], "Output",
 CellChangeTimes->{{3.7517119081807528`*^9, 3.751711918839368*^9}, 
   3.751881638848185*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Transpose", "[", 
  RowBox[{"{", 
   RowBox[{"uscan", ",", 
    RowBox[{"wrfitbb", "[", 
     RowBox[{"[", 
      RowBox[{"All", ",", "3"}], "]"}], "]"}]}], "}"}], "]"}]], "Input",
 CellChangeTimes->{
  3.7517118986523733`*^9, {3.751881445303008*^9, 3.7518814457560263`*^9}, {
   3.751881747598653*^9, 3.7518817485745277`*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     FractionBox["1", "10"], ",", "10.047646266779473`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     FractionBox["1", "5"], ",", "10.048156282310275`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     FractionBox["3", "10"], ",", "10.05059930152414`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     FractionBox["2", "5"], ",", "10.027664904705004`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     FractionBox["1", "2"], ",", "10.058690029361586`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     FractionBox["3", "5"], ",", "10.144460108037192`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     FractionBox["7", "10"], ",", "10.060958941270666`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     FractionBox["4", "5"], ",", "10.057155155654714`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     FractionBox["9", "10"], ",", "10.045046317575036`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     FractionBox["99", "100"], ",", "10.056261971440225`"}], "}"}]}], 
  "}"}]], "Output",
 CellChangeTimes->{3.7517118994918118`*^9, 3.7518816386650467`*^9, 
  3.751881748917552*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Transpose", "[", 
  RowBox[{"{", 
   RowBox[{"uscan", ",", 
    RowBox[{"gfitbb", "[", 
     RowBox[{"[", 
      RowBox[{"All", ",", "3"}], "]"}], "]"}]}], "}"}], "]"}]], "Input",
 CellChangeTimes->{{3.751711907409787*^9, 3.751711918228842*^9}, {
  3.751881447527133*^9, 3.7518814479001627`*^9}, {3.751881751359106*^9, 
  3.751881751514688*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     FractionBox["1", "10"], ",", "0.2011489444869667`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     FractionBox["1", "5"], ",", "0.20116371698313346`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     FractionBox["3", "10"], ",", "0.2038084948944107`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     FractionBox["2", "5"], ",", "1.630759873936893`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     FractionBox["1", "2"], ",", "0.21488140691158333`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     FractionBox["3", "5"], ",", "1.34567240302741`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     FractionBox["7", "10"], ",", "0.21728932169760415`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     FractionBox["4", "5"], ",", "1.6569254822909947`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     FractionBox["9", "10"], ",", "0.20892568311459989`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     FractionBox["99", "100"], ",", "0.19337072803034244`"}], "}"}]}], 
  "}"}]], "Output",
 CellChangeTimes->{{3.7517119081807528`*^9, 3.751711918839368*^9}, 
   3.751881638848185*^9, 3.7518817521465197`*^9}]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{"NotebookSave", "[", "]"}], ";"}]], "Input",
 CellChangeTimes->{{3.751709576268229*^9, 3.751709583002582*^9}}]
}, Open  ]]
}, Open  ]]
}, Open  ]]
},
WindowSize->{1280, 694},
WindowMargins->{{0, Automatic}, {0, 20}},
FrontEndVersion->"11.0 for Linux x86 (64-bit) (September 21, 2016)",
StyleDefinitions->"Default.nb"
]
(* End of Notebook Content *)

(* Internal cache information *)
(*CellTagsOutline
CellTagsIndex->{}
*)
(*CellTagsIndex
CellTagsIndex->{}
*)
(*NotebookFileOutline
Notebook[{
Cell[558, 20, 191, 4, 31, "Input"],
Cell[CellGroupData[{
Cell[774, 28, 286, 4, 64, "Section"],
Cell[CellGroupData[{
Cell[1085, 36, 97, 1, 43, "Subsection"],
Cell[1185, 39, 38300, 923, 1577, "Input"],
Cell[39488, 964, 20703, 542, 902, "Input"]
}, Closed]],
Cell[CellGroupData[{
Cell[60228, 1511, 95, 1, 35, "Subsection"],
Cell[60326, 1514, 559, 15, 50, "Input"],
Cell[60888, 1531, 480, 14, 50, "Input"],
Cell[61371, 1547, 515, 15, 50, "Input"],
Cell[61889, 1564, 481, 14, 50, "Input"],
Cell[CellGroupData[{
Cell[62395, 1582, 298, 4, 34, "Subsubsection"],
Cell[62696, 1588, 2036, 38, 33, "Input"],
Cell[CellGroupData[{
Cell[64757, 1630, 969, 23, 31, "Input"],
Cell[65729, 1655, 85839, 1420, 238, 76834, 1272, "CachedBoxData", "BoxData", \
"Output"]
}, Open  ]],
Cell[151583, 3078, 1172, 20, 52, "Input"],
Cell[152758, 3100, 1533, 39, 192, "Input"],
Cell[CellGroupData[{
Cell[154316, 3143, 520, 11, 31, "Input"],
Cell[154839, 3156, 1125, 34, 79, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[156001, 3195, 564, 11, 31, "Input"],
Cell[156568, 3208, 1151, 34, 79, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[157756, 3247, 299, 8, 31, "Input"],
Cell[158058, 3257, 1131, 34, 79, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[159226, 3296, 320, 8, 31, "Input"],
Cell[159549, 3306, 1174, 35, 79, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[160760, 3346, 351, 9, 31, "Input"],
Cell[161114, 3357, 1165, 35, 79, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[162316, 3397, 369, 9, 31, "Input"],
Cell[162688, 3408, 1193, 35, 79, "Output"]
}, Open  ]],
Cell[163896, 3446, 144, 3, 31, "Input"]
}, Open  ]]
}, Open  ]]
}, Open  ]]
}
]
*)

