(* Content-type: application/vnd.wolfram.mathematica *)

(*** Wolfram Notebook File ***)
(* http://www.wolfram.com/nb *)

(* CreatedBy='Mathematica 11.0' *)

(*CacheID: 234*)
(* Internal cache information:
NotebookFileLineBreakTest
NotebookFileLineBreakTest
NotebookDataPosition[       158,          7]
NotebookDataLength[    933894,      17775]
NotebookOptionsPosition[    929785,      17640]
NotebookOutlinePosition[    930124,      17655]
CellTagsIndexPosition[    930081,      17652]
WindowFrame->Normal*)

(* Beginning of Notebook Content *)
Notebook[{
Cell[BoxData[
 RowBox[{
  RowBox[{"SetDirectory", "[", 
   RowBox[{"NotebookDirectory", "[", "]"}], "]"}], ";"}]], "Input",
 CellChangeTimes->{{3.7491538644493732`*^9, 3.749153865833027*^9}}],

Cell[CellGroupData[{

Cell["4 loop running coupling", "Section",
 CellChangeTimes->{{3.733038025331724*^9, 3.733038035264956*^9}, {
  3.7330493983743973`*^9, 3.733049402685856*^9}, {3.73312956042422*^9, 
  3.733129564816101*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", " ", 
   RowBox[{
    RowBox[{
     RowBox[{"form", " ", "hep"}], "-", 
     RowBox[{"ph", " ", "9703284"}]}], ",", " ", "vermaseren", ",", " ", 
    "larin", ",", " ", "Ritbergen"}], " ", "*)"}], "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{"\[CapitalLambda]QCD", "=", "0.2145"}], ";"}], " ", 
   "\[IndentingNewLine]", 
   RowBox[{"(*", " ", 
    RowBox[{
     RowBox[{"so", " ", "that", " ", "for", " ", "nF"}], "=", 
     RowBox[{
      RowBox[{"5", " ", "we", " ", "get", " ", "alpha_s", 
       RowBox[{"(", 
        RowBox[{"mz", "=", "91.188"}], ")"}]}], "=", 
      RowBox[{
       RowBox[{"0.1185", " ", 
        RowBox[{"(", 
         RowBox[{"PDG", " ", "value"}], ")"}], " ", "\[IndentingNewLine]", 
        "note", " ", "that", " ", "pdg", " ", "also", " ", "quotes", " ", 
        "\[Lambda]qcd"}], "=", 
       RowBox[{
        RowBox[{"0.214", " ", "for", " ", "nf"}], "=", 
        RowBox[{
        "5", " ", "everything", " ", "seems", " ", "consistent"}]}]}]}]}], 
    "*)"}], "\[IndentingNewLine]", "\[IndentingNewLine]", 
   RowBox[{"(*", "QCD", "*)"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"Nc", "=", "3."}], ";", 
    RowBox[{"CA", "=", "Nc"}], ";", " ", 
    RowBox[{"nF", "=", "3"}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"CF", "=", 
     RowBox[{
      RowBox[{"(", 
       RowBox[{
        SuperscriptBox["Nc", "2"], "-", "1"}], ")"}], "/", 
      RowBox[{"(", 
       RowBox[{"2", " ", "Nc"}], ")"}]}]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{"(*", 
    RowBox[{
    "coeft", " ", "of", " ", "the", " ", "renormalization", " ", "group", " ",
      "equations"}], "*)"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"\[Beta]0", "[", "Nf_", "]"}], "=", 
     RowBox[{
      RowBox[{"(", 
       RowBox[{
        RowBox[{
         RowBox[{"-", "11"}], "Nc"}], "+", 
        RowBox[{"2", "Nf"}]}], ")"}], "/", "12"}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"\[Beta]1", "[", "Nf_", "]"}], "=", 
     RowBox[{
      RowBox[{"(", 
       RowBox[{
        RowBox[{
         RowBox[{"-", "68"}], 
         SuperscriptBox["Nc", "2"]}], "+", 
        RowBox[{"20", "Nc", " ", "Nf"}], "+", 
        RowBox[{"12", "CF", " ", "Nf"}]}], ")"}], "/", 
      RowBox[{"(", 
       RowBox[{"3", " ", "32"}], ")"}]}]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"\[Beta]2", "[", "Nf_", "]"}], "=", 
     RowBox[{"-", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{"(", 
         RowBox[{"2857", "-", 
          RowBox[{
           RowBox[{"(", 
            RowBox[{"5033", "/", "9"}], ")"}], "Nf"}], "+", 
          RowBox[{
           RowBox[{"(", 
            RowBox[{"325", "/", "27"}], ")"}], " ", 
           SuperscriptBox["Nf", "2"]}]}], ")"}], "/", "128"}], ")"}]}]}], 
    ";"}], " ", 
   RowBox[{"(*", 
    RowBox[{
     RowBox[{"for", " ", "Nc"}], "=", 
     RowBox[{"3", " ", "only"}]}], "*)"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"\[Beta]3", "[", "Nf_", "]"}], "=", 
     RowBox[{
      RowBox[{"(", 
       RowBox[{
        RowBox[{"(", 
         RowBox[{"-", "1"}], ")"}], "/", "256"}], ")"}], 
      RowBox[{"(", 
       RowBox[{
        RowBox[{"(", 
         RowBox[{
          RowBox[{"149753", "/", "6"}], "+", 
          RowBox[{"3564", " ", 
           RowBox[{"Zeta", "[", "3", "]"}]}]}], ")"}], "-", 
        RowBox[{
         RowBox[{"(", 
          RowBox[{
           RowBox[{"1078361", "/", "162"}], "+", 
           RowBox[{
            RowBox[{"(", 
             RowBox[{"6508", "/", "27"}], ")"}], " ", 
            RowBox[{"Zeta", "[", "3", "]"}]}]}], ")"}], "Nf"}], "+", 
        RowBox[{
         RowBox[{"(", 
          RowBox[{
           RowBox[{"50065", "/", "162"}], "+", 
           RowBox[{
            RowBox[{"(", 
             RowBox[{"6472", "/", "81"}], ")"}], 
            RowBox[{"Zeta", "[", "3", "]"}]}]}], ")"}], 
         SuperscriptBox["Nf", "2"]}], "+", 
        RowBox[{
         RowBox[{"(", 
          RowBox[{"1093", "/", "729"}], ")"}], " ", 
         SuperscriptBox["Nf", "3"]}]}], ")"}]}]}], ";"}], 
   RowBox[{"(*", 
    RowBox[{
     RowBox[{"for", " ", "Nc"}], "=", 
     RowBox[{"3", " ", "only"}]}], "*)"}], "\[IndentingNewLine]", 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"\[Gamma]0", "[", "Nf_", "]"}], "=", 
     RowBox[{
      FractionBox["3", "4"], " ", "CF"}]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"\[Gamma]1", "[", "Nf_", "]"}], "=", 
     RowBox[{
      RowBox[{"(", 
       RowBox[{"1", "/", "16"}], ")"}], 
      RowBox[{"(", 
       RowBox[{
        RowBox[{"202", "/", "3"}], "-", 
        RowBox[{
         RowBox[{"(", 
          RowBox[{"20", "/", "9"}], ")"}], "Nf"}]}], ")"}]}]}], ";"}], 
   RowBox[{"(*", 
    RowBox[{
     RowBox[{"for", " ", "Nc"}], "=", 
     RowBox[{"3", " ", "only"}]}], "*)"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"\[Gamma]2", "[", "Nf_", "]"}], "=", 
     RowBox[{
      RowBox[{"(", 
       RowBox[{"1", "/", "64"}], ")"}], 
      RowBox[{"(", 
       RowBox[{"1249", "+", 
        RowBox[{
         RowBox[{"(", 
          RowBox[{
           RowBox[{"-", 
            RowBox[{"(", 
             RowBox[{"2216", "/", "27"}], ")"}]}], "-", 
           RowBox[{
            RowBox[{"(", 
             RowBox[{"160", "/", "3"}], ")"}], " ", 
            RowBox[{"Zeta", "[", "3", "]"}]}]}], ")"}], "Nf"}], "-", 
        RowBox[{
         RowBox[{"(", 
          RowBox[{"140", "/", "81"}], ")"}], " ", 
         SuperscriptBox["Nf", "2"]}]}], ")"}]}]}], ";"}], 
   RowBox[{"(*", 
    RowBox[{
     RowBox[{"for", " ", "Nc"}], "=", 
     RowBox[{"3", " ", "only"}]}], "*)"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"\[Gamma]3", "[", "Nf_", "]"}], "=", 
     RowBox[{
      RowBox[{"(", 
       RowBox[{"1", "/", "256"}], ")"}], 
      RowBox[{"(", 
       RowBox[{
        RowBox[{"4603055", "/", "162"}], "+", 
        RowBox[{
         RowBox[{"(", 
          RowBox[{"135680", "/", "27"}], ")"}], " ", 
         RowBox[{"Zeta", "[", "3", "]"}]}], "-", 
        RowBox[{"8800", 
         RowBox[{"Zeta", "[", "5", "]"}]}], "+", 
        RowBox[{
         RowBox[{"(", 
          RowBox[{
           RowBox[{"-", 
            RowBox[{"(", 
             RowBox[{"91723", "/", "27"}], ")"}]}], "-", 
           RowBox[{
            RowBox[{"(", 
             RowBox[{"34192", "/", "9"}], ")"}], " ", 
            RowBox[{"Zeta", "[", "3", "]"}]}], "+", 
           RowBox[{"880", " ", 
            RowBox[{"Zeta", "[", "4", "]"}]}], "+", 
           RowBox[{
            RowBox[{"(", 
             RowBox[{"18400", "/", "9"}], ")"}], 
            RowBox[{"Zeta", "[", "5", "]"}]}]}], ")"}], "Nf"}], "+", 
        RowBox[{
         RowBox[{"(", 
          RowBox[{
           RowBox[{"5242", "/", "243"}], "+", 
           RowBox[{
            RowBox[{"(", 
             RowBox[{"800", "/", "9"}], ")"}], " ", 
            RowBox[{"Zeta", "[", "3", "]"}]}], "-", 
           RowBox[{
            RowBox[{"(", 
             RowBox[{"160", "/", "3"}], ")"}], 
            RowBox[{"Zeta", "[", "4", "]"}]}]}], ")"}], 
         SuperscriptBox["Nf", "2"]}], "+", 
        RowBox[{
         RowBox[{"(", 
          RowBox[{
           RowBox[{"-", 
            RowBox[{"(", 
             RowBox[{"332", "/", "243"}], ")"}]}], "+", 
           RowBox[{
            RowBox[{"(", 
             RowBox[{"64", "/", "27"}], ")"}], " ", 
            RowBox[{"Zeta", "[", "3", "]"}]}]}], ")"}], 
         SuperscriptBox["Nf", "3"]}]}], ")"}]}]}], ";"}], 
   "\[IndentingNewLine]", "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"b0", "[", "Nf_", "]"}], "=", 
     RowBox[{"-", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{"(", 
         RowBox[{"8", 
          RowBox[{"\[Beta]0", "[", "Nf", "]"}]}], ")"}], "/", 
        RowBox[{"(", 
         RowBox[{"2", 
          SuperscriptBox[
           RowBox[{"(", 
            RowBox[{"4", "\[Pi]"}], ")"}], "2"]}], ")"}]}], ")"}]}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"b1", "[", "Nf_", "]"}], "=", 
     RowBox[{"-", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{"(", 
         RowBox[{"32", " ", 
          RowBox[{"\[Beta]1", "[", "Nf", "]"}]}], ")"}], "/", 
        RowBox[{"(", 
         RowBox[{"2", 
          SuperscriptBox[
           RowBox[{"(", 
            RowBox[{"4", "\[Pi]"}], ")"}], "2"]}], ")"}]}], ")"}]}]}], ";"}], 
   "\[IndentingNewLine]", "\[IndentingNewLine]", 
   RowBox[{"(*", " ", 
    RowBox[{
     RowBox[{
     "Initial", " ", "conditions", " ", "of", " ", "the", " ", "RG", " ", 
      "equations"}], ",", " ", 
     RowBox[{
     "\[Mu]", " ", "in", " ", "units", " ", "of", " ", 
      "\[CapitalLambda]_MSbar"}]}], " ", "*)"}], "\[IndentingNewLine]", 
   "\[IndentingNewLine]", 
   RowBox[{"(*", 
    RowBox[{
     RowBox[{
      RowBox[{"gf", "[", "\[Mu]_", "]"}], "=", 
      RowBox[{"1", "/", 
       RowBox[{"\[Sqrt]", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"2", " ", "b0", " ", 
           RowBox[{"Log", "[", "\[Mu]", "]"}]}], "+", 
          RowBox[{"b1", " ", 
           RowBox[{
            RowBox[{"Log", "[", 
             RowBox[{"2", " ", 
              RowBox[{"Log", "[", "\[Mu]", "]"}]}], "]"}], "/", "b0"}]}]}], 
         ")"}]}]}]}], ";"}], "*)"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"gf", "[", "t_", "]"}], "=", 
     RowBox[{"1", "/", 
      RowBox[{"(", 
       RowBox[{"\[Sqrt]", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{
           RowBox[{"b0", "[", "Nf", "]"}], " ", "t"}], "+", 
          RowBox[{
           RowBox[{"b1", "[", "Nf", "]"}], " ", 
           RowBox[{
            RowBox[{"Log", "[", "t", "]"}], "/", 
            RowBox[{"b0", "[", "Nf", "]"}]}]}]}], ")"}]}], ")"}]}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"asf", "[", 
      RowBox[{"t_", ",", "Nf_"}], "]"}], "=", 
     RowBox[{
      RowBox[{
       RowBox[{"(", 
        RowBox[{"-", "1"}], ")"}], "/", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"\[Beta]0", "[", "Nf", "]"}], " ", "t"}], ")"}]}], "-", 
      RowBox[{
       RowBox[{"(", 
        RowBox[{
         RowBox[{"\[Beta]1", "[", "Nf", "]"}], " ", 
         RowBox[{"Log", "[", "t", "]"}]}], ")"}], "/", 
       RowBox[{"(", 
        RowBox[{
         SuperscriptBox[
          RowBox[{"\[Beta]0", "[", "Nf", "]"}], "3"], " ", 
         SuperscriptBox["t", "2"]}], ")"}]}], "-", 
      RowBox[{
       RowBox[{"(", " ", 
        RowBox[{
         RowBox[{
          SuperscriptBox[
           RowBox[{"\[Beta]1", "[", "Nf", "]"}], "2"], 
          RowBox[{"(", 
           RowBox[{
            SuperscriptBox[
             RowBox[{"Log", "[", "t", "]"}], "2"], "-", 
            RowBox[{"Log", "[", "t", "]"}], "-", "1"}], ")"}]}], "+", 
         RowBox[{
          RowBox[{"\[Beta]2", "[", "Nf", "]"}], " ", 
          RowBox[{"\[Beta]0", "[", "Nf", "]"}]}]}], ")"}], "/", 
       RowBox[{"(", 
        RowBox[{
         SuperscriptBox[
          RowBox[{"\[Beta]0", "[", "Nf", "]"}], "5"], 
         SuperscriptBox["t", "3"]}], ")"}]}], "+", 
      RowBox[{
       RowBox[{"(", 
        RowBox[{"1", "/", 
         RowBox[{"(", 
          RowBox[{
           SuperscriptBox[
            RowBox[{"\[Beta]0", "[", "Nf", "]"}], "7"], 
           SuperscriptBox["t", "4"]}], ")"}]}], ")"}], 
       RowBox[{"(", " ", 
        RowBox[{
         RowBox[{
          SuperscriptBox[
           RowBox[{"\[Beta]1", "[", "Nf", "]"}], "3"], 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"-", 
             SuperscriptBox[
              RowBox[{"Log", "[", "t", "]"}], "3"]}], "+", 
            RowBox[{
             FractionBox["5", "2"], 
             SuperscriptBox[
              RowBox[{"Log", "[", "t", "]"}], "2"]}], "+", 
            RowBox[{"2", 
             RowBox[{"Log", "[", "t", "]"}]}], "-", 
            FractionBox["1", "2"]}], ")"}]}], "-", 
         RowBox[{"3", " ", 
          RowBox[{"\[Beta]1", "[", "Nf", "]"}], " ", 
          RowBox[{"\[Beta]2", "[", "Nf", "]"}], " ", 
          RowBox[{"\[Beta]0", "[", "Nf", "]"}], " ", 
          RowBox[{"Log", "[", "t", "]"}]}], "+", 
         RowBox[{
          FractionBox["1", "2"], 
          RowBox[{"\[Beta]3", "[", "Nf", "]"}], " ", 
          SuperscriptBox[
           RowBox[{"\[Beta]0", "[", "Nf", "]"}], "2"]}]}], ")"}]}]}]}], ";"}],
    "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"\[Mu]0", "=", "2"}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"t0", "=", 
     RowBox[{"Log", "[", 
      SuperscriptBox["\[Mu]0", "2"], "]"}]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"tf", "=", 
     RowBox[{"10000", " ", "t0"}]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{"(*", 
    RowBox[{
    "solution", " ", "of", " ", "the", " ", "RG", " ", "equation", " ", "to", 
     " ", "3", " ", "loop"}], "*)"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"mcharm", "=", "1.275"}], ";"}], 
   RowBox[{"(*", 
    RowBox[{"m", 
     RowBox[{"(", "m", ")"}], " ", "in", " ", "msbar"}], "*)"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"mbottom", "=", "4.18"}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"nf", "[", "t_", "]"}], "=", 
     RowBox[{"If", "[", 
      RowBox[{
       RowBox[{"t", "<", 
        RowBox[{"Log", "[", 
         RowBox[{
          SuperscriptBox["mcharm", "2"], "/", 
          SuperscriptBox["\[CapitalLambda]QCD", "2"]}], "]"}]}], ",", "3", 
       ",", 
       RowBox[{"If", "[", 
        RowBox[{
         RowBox[{"t", "<", 
          RowBox[{"Log", "[", 
           RowBox[{
            SuperscriptBox["mbottom", "2"], "/", 
            SuperscriptBox["\[CapitalLambda]QCD", "2"]}], "]"}]}], ",", "4", 
         ",", "5"}], "]"}]}], "]"}]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"sg4", "=", 
     RowBox[{"Quiet", "[", 
      RowBox[{"NDSolve", "[", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{
          RowBox[{
           RowBox[{"D", "[", 
            RowBox[{
             RowBox[{"as", "[", "t", "]"}], ",", "t"}], "]"}], "\[Equal]", 
           RowBox[{
            RowBox[{
             RowBox[{"+", 
              RowBox[{"\[Beta]0", "[", 
               RowBox[{"nf", "[", "t", "]"}], "]"}]}], " ", 
             SuperscriptBox[
              RowBox[{"as", "[", "t", "]"}], "2"]}], "+", 
            RowBox[{
             RowBox[{"\[Beta]1", "[", 
              RowBox[{"nf", "[", "t", "]"}], "]"}], " ", 
             SuperscriptBox[
              RowBox[{"as", "[", "t", "]"}], "3"]}], "+", " ", 
            RowBox[{
             RowBox[{"\[Beta]2", "[", 
              RowBox[{"nf", "[", "t", "]"}], "]"}], " ", 
             SuperscriptBox[
              RowBox[{"as", "[", "t", "]"}], "4"]}], "+", " ", 
            RowBox[{
             RowBox[{"\[Beta]3", "[", 
              RowBox[{"nf", "[", "t", "]"}], "]"}], " ", 
             SuperscriptBox[
              RowBox[{"as", "[", "t", "]"}], "5"]}]}]}], ",", 
          RowBox[{
           RowBox[{"as", "[", "tf", "]"}], "\[Equal]", 
           RowBox[{"asf", "[", 
            RowBox[{"tf", ",", 
             RowBox[{"nf", "[", "tf", "]"}]}], "]"}]}]}], "}"}], ",", "as", 
        ",", 
        RowBox[{"{", 
         RowBox[{"t", ",", "t0", ",", "tf"}], "}"}], ",", 
        RowBox[{"AccuracyGoal", "\[Rule]", "14"}], ",", 
        RowBox[{"WorkingPrecision", "\[Rule]", "32"}], ",", 
        RowBox[{"MaxSteps", "\[Rule]", "10000000"}]}], "]"}], "]"}]}], ";"}], 
   "\[IndentingNewLine]", "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"a4t", "[", "t_", "]"}], "=", " ", 
     RowBox[{"Part", "[", 
      RowBox[{
       RowBox[{"Evaluate", "[", 
        RowBox[{
         RowBox[{"as", "[", "t", "]"}], "/.", "sg4"}], "]"}], ",", "1"}], 
      "]"}]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"g4", "[", "\[Mu]_", "]"}], "=", 
     RowBox[{"2", " ", "\[Pi]", " ", 
      RowBox[{"\[Sqrt]", 
       RowBox[{"Part", "[", 
        RowBox[{
         RowBox[{"Evaluate", "[", 
          RowBox[{
           RowBox[{"as", "[", 
            RowBox[{"Log", "[", 
             RowBox[{
              SuperscriptBox["\[Mu]", "2"], "/", 
              SuperscriptBox["\[CapitalLambda]QCD", "2"]}], "]"}], "]"}], "/.",
            "sg4"}], "]"}], ",", "1"}], "]"}]}]}]}], ";"}], " "}]}]], "Input",\

 CellChangeTimes->{{3.722603722510141*^9, 3.72260372344028*^9}, {
   3.722604106111541*^9, 3.722604106838868*^9}, {3.722758514249189*^9, 
   3.72275851575694*^9}, {3.722759338268147*^9, 3.7227593794887047`*^9}, 
   3.722941350741787*^9, 3.725272685733177*^9, {3.7257977704878893`*^9, 
   3.725797773117529*^9}, {3.728106253645876*^9, 3.728106267238208*^9}, {
   3.728106981843108*^9, 3.72810698836581*^9}, {3.728107035483563*^9, 
   3.728107083980345*^9}, {3.728107191150432*^9, 3.7281072205275097`*^9}, {
   3.7289260533327723`*^9, 3.728926057125319*^9}, {3.728926987957735*^9, 
   3.728927012966138*^9}, {3.733038068527727*^9, 3.733038137498209*^9}, {
   3.733038320612577*^9, 3.7330383210148697`*^9}, {3.7330540354197693`*^9, 
   3.7330540356914186`*^9}, {3.733129571506283*^9, 3.73312957588968*^9}}]
}, Closed]],

Cell[CellGroupData[{

Cell["Functions", "Section",
 CellChangeTimes->{{3.721037028308626*^9, 3.72103703898452*^9}, {
   3.725797990517199*^9, 3.725797994993998*^9}, {3.746174948979287*^9, 
   3.746174951979061*^9}, 3.7461750131323338`*^9, {3.748450442925918*^9, 
   3.748450454117791*^9}}],

Cell[BoxData[{
 RowBox[{
  RowBox[{"R", "=", "20000"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Mc", "=", "1.4691897661033038`"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Mb", "=", "4.882"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"kfinal", "=", 
    RowBox[{"{", 
     RowBox[{"0.6856700331366409`", ",", 
      RowBox[{"-", "0.31661256911352553`"}]}], "}"}]}], ";"}], 
  RowBox[{"(*", 
   RowBox[{"100", "k", " ", "run"}], "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"kfinalu", "=", 
   RowBox[{"{", 
    RowBox[{"0.9065399936425322`", ",", 
     RowBox[{"-", "0.36858869824209667`"}]}], "}"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"kfinall", "=", 
   RowBox[{"{", 
    RowBox[{"0.4648000726307495`", ",", 
     RowBox[{"-", "0.2646364399849544`"}]}], "}"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"\[Alpha]cont", "=", 
    RowBox[{"{", 
     RowBox[{"0.5129548374487685`", ",", "0.002435119807500435`"}], "}"}]}], 
   ";"}], 
  RowBox[{"(*", 
   RowBox[{"10", "k", " ", "run"}], "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"\[Sigma]cont", "=", 
   RowBox[{"{", 
    RowBox[{"0.16999653850906107`", ",", "0.000838106749908169`"}], "}"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"ccont", "=", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"-", "0.1611740456186636`"}], ",", "0.002474788649682089`"}], 
    "}"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"conv", "=", "0.197327"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"ReVsbVac", "=", 
   RowBox[{"8", "/", "10"}]}], ";"}]}], "Input"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"ReV", "[", 
    RowBox[{"r_", ",", "mD_", ",", "\[Alpha]_", ",", "\[Sigma]_", ",", "c_"}],
     "]"}], ":=", 
   RowBox[{"c", "-", 
    RowBox[{"\[Alpha]", " ", "mD"}], "-", 
    RowBox[{"\[Alpha]", 
     FractionBox[
      RowBox[{"Exp", "[", 
       RowBox[{
        RowBox[{"-", "mD"}], " ", "r"}], "]"}], "r"]}], "+", 
    FractionBox[
     RowBox[{"2", " ", "\[Sigma]"}], "mD"], "-", 
    FractionBox[
     RowBox[{
      SuperscriptBox["\[ExponentialE]", 
       RowBox[{
        RowBox[{"-", "mD"}], " ", "r"}]], " ", 
      RowBox[{"(", 
       RowBox[{"2", "+", 
        RowBox[{"mD", " ", "r"}]}], ")"}], " ", "\[Sigma]"}], "mD"]}]}], 
  ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"ImVc", "[", 
    RowBox[{"r_", ",", "mD_", ",", "\[Alpha]_", ",", "T_"}], "]"}], ":=", 
   RowBox[{"T", " ", "\[Alpha]", " ", 
    RowBox[{"Quiet", "[", 
     RowBox[{"2", 
      RowBox[{"NIntegrate", "[", 
       RowBox[{
        RowBox[{
         FractionBox["z", 
          SuperscriptBox[
           RowBox[{"(", 
            RowBox[{
             SuperscriptBox["z", "2"], "+", "1"}], ")"}], "2"]], 
         RowBox[{"(", 
          RowBox[{"1", "-", 
           RowBox[{"Sinc", "[", 
            RowBox[{"mD", " ", "r", " ", "z"}], "]"}]}], ")"}]}], ",", 
        RowBox[{"{", 
         RowBox[{"z", ",", "0", ",", "\[Infinity]"}], "}"}], ",", 
        RowBox[{"MaxRecursion", "\[Rule]", "20"}]}], "]"}]}], "]"}]}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"ImVs", "[", 
    RowBox[{"r_", ",", "mD_", ",", "\[Sigma]_", ",", "T_"}], "]"}], ":=", 
   RowBox[{
    FractionBox["1", "4"], " ", "mD", " ", 
    SqrtBox["\[Pi]"], " ", 
    SuperscriptBox["r", "3"], " ", "T", " ", "\[Sigma]", " ", 
    RowBox[{"MeijerG", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{
          RowBox[{"-", 
           FractionBox["1", "2"]}], ",", 
          RowBox[{"-", 
           FractionBox["1", "2"]}]}], "}"}], ",", 
        RowBox[{"{", "}"}]}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{
          FractionBox["1", "2"], ",", 
          FractionBox["1", "2"]}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"-", 
           FractionBox["3", "2"]}], ",", 
          RowBox[{"-", "1"}]}], "}"}]}], "}"}], ",", 
      FractionBox[
       RowBox[{
        SuperscriptBox["mD", "2"], " ", 
        SuperscriptBox["r", "2"]}], "4"]}], "]"}]}]}], ";"}]}], "Input",
 CellChangeTimes->{3.749707359552266*^9}],

Cell[CellGroupData[{

Cell["Self energies", "Subsection",
 CellChangeTimes->{{3.748450427476173*^9, 3.748450462407011*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"mDcalmu", "[", 
    RowBox[{"T_", ",", "\[Mu]_", ",", "c_", ",", "d_"}], "]"}], ":=", 
   RowBox[{"SetPrecision", "[", 
    RowBox[{
     RowBox[{"Re", "[", 
      RowBox[{
       RowBox[{
        RowBox[{"Sqrt", "[", 
         RowBox[{
          FractionBox["Nc", "3"], "+", 
          FractionBox["nF", "6"], "+", 
          RowBox[{
           FractionBox["nF", 
            RowBox[{"2", 
             SuperscriptBox["\[Pi]", "2"]}]], 
           FractionBox[
            SuperscriptBox[
             RowBox[{"(", 
              RowBox[{"\[Mu]", "/", "3"}], ")"}], "2"], 
            SuperscriptBox["T", "2"]]}]}], "]"}], 
        RowBox[{"g4", "[", 
         RowBox[{"2", "\[Pi]", 
          SqrtBox[
           RowBox[{
            SuperscriptBox["T", "2"], "+", 
            FractionBox[
             SuperscriptBox["\[Mu]", "2"], 
             SuperscriptBox["\[Pi]", "2"]]}]]}], "]"}], "T"}], "+", 
       RowBox[{
        FractionBox["1", 
         RowBox[{"4", "\[Pi]"}]], "Nc", " ", 
        SuperscriptBox[
         RowBox[{"g4", "[", 
          RowBox[{"2", "\[Pi]", 
           SqrtBox[
            RowBox[{
             SuperscriptBox["T", "2"], "+", 
             FractionBox[
              SuperscriptBox["\[Mu]", "2"], 
              SuperscriptBox["\[Pi]", "2"]]}]]}], "]"}], "2"], " ", "T", " ", 
        
        RowBox[{"Log", "[", 
         FractionBox[
          RowBox[{"Sqrt", "[", 
           RowBox[{
            FractionBox["Nc", "3"], "+", 
            FractionBox["nF", "6"]}], "]"}], 
          RowBox[{"g4", "[", 
           RowBox[{"2", "\[Pi]", 
            SqrtBox[
             RowBox[{
              SuperscriptBox["T", "2"], "+", 
              FractionBox[
               SuperscriptBox["\[Mu]", "2"], 
               SuperscriptBox["\[Pi]", "2"]]}]]}], "]"}]], "]"}]}], "+", 
       RowBox[{"c", " ", 
        SuperscriptBox[
         RowBox[{"g4", "[", 
          RowBox[{"2", "\[Pi]", 
           SqrtBox[
            RowBox[{
             SuperscriptBox["T", "2"], "+", 
             FractionBox[
              SuperscriptBox["\[Mu]", "2"], 
              SuperscriptBox["\[Pi]", "2"]]}]]}], "]"}], "2"], " ", "T"}], 
       "+", 
       RowBox[{"d", " ", 
        SuperscriptBox[
         RowBox[{"g4", "[", 
          RowBox[{"2", "\[Pi]", 
           SqrtBox[
            RowBox[{
             SuperscriptBox["T", "2"], "+", 
             FractionBox[
              SuperscriptBox["\[Mu]", "2"], 
              SuperscriptBox["\[Pi]", "2"]]}]]}], "]"}], "3"], "T"}]}], " ", 
      "]"}], ",", "30"}], "]"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.74845188564533*^9, 3.7484518857590313`*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"\[CapitalPi]par", "[", 
    RowBox[{"\[Theta]_", ",", "mD_", ",", "u_"}], "]"}], ":=", 
   RowBox[{"SetPrecision", "[", 
    RowBox[{
     RowBox[{
      FractionBox[
       SuperscriptBox["mD", "2"], "2"], 
      RowBox[{"(", 
       RowBox[{
        FractionBox[
         RowBox[{"2", "-", 
          RowBox[{"2", 
           SuperscriptBox["u", "2"]}], "-", 
          RowBox[{
           SuperscriptBox["u", "4"], 
           SuperscriptBox[
            RowBox[{"Cos", "[", "\[Theta]", "]"}], "2"], 
           SuperscriptBox[
            RowBox[{"Sin", "[", "\[Theta]", "]"}], "2"]}]}], 
         SuperscriptBox[
          RowBox[{"(", 
           RowBox[{"1", "-", 
            RowBox[{
             SuperscriptBox["u", "2"], 
             SuperscriptBox[
              RowBox[{"Sin", "[", "\[Theta]", "]"}], "2"]}]}], ")"}], "2"]], 
        "-", 
        RowBox[{
         FractionBox[
          RowBox[{
           RowBox[{"(", 
            RowBox[{"2", "+", 
             RowBox[{
              SuperscriptBox["u", "2"], 
              SuperscriptBox[
               RowBox[{"Sin", "[", "\[Theta]", "]"}], "2"]}]}], ")"}], 
           RowBox[{"(", 
            RowBox[{"1", "-", 
             SuperscriptBox["u", "2"]}], ")"}], "u", " ", 
           RowBox[{"Cos", "[", "\[Theta]", "]"}]}], 
          RowBox[{"2", 
           SuperscriptBox[
            RowBox[{"(", 
             RowBox[{"1", "-", 
              RowBox[{
               SuperscriptBox["u", "2"], 
               SuperscriptBox[
                RowBox[{"Sin", "[", "\[Theta]", "]"}], "2"]}]}], ")"}], 
            RowBox[{"5", "/", "2"}]]}]], 
         RowBox[{"Log", "[", 
          FractionBox[
           RowBox[{
            RowBox[{"u", " ", 
             RowBox[{"Cos", "[", "\[Theta]", "]"}]}], "+", 
            SqrtBox[
             RowBox[{"1", "-", 
              RowBox[{
               SuperscriptBox["u", "2"], 
               SuperscriptBox[
                RowBox[{"Sin", "[", "\[Theta]", "]"}], "2"]}]}]]}], 
           RowBox[{
            RowBox[{"u", " ", 
             RowBox[{"Cos", "[", "\[Theta]", "]"}]}], "-", 
            SqrtBox[
             RowBox[{"1", "-", 
              RowBox[{
               SuperscriptBox["u", "2"], 
               SuperscriptBox[
                RowBox[{"Sin", "[", "\[Theta]", "]"}], "2"]}]}]]}]], 
          "]"}]}]}], ")"}]}], ",", "30"}], "]"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.7453831005455914`*^9, 3.745383138661728*^9}, {
   3.745383312376183*^9, 3.74538334437337*^9}, {3.7453836903426113`*^9, 
   3.745383700509996*^9}, {3.745383888049996*^9, 3.7453838920497932`*^9}, {
   3.745384456942053*^9, 3.745384462717682*^9}, {3.745385041376384*^9, 
   3.7453850447607927`*^9}, {3.745385110730214*^9, 3.745385155644156*^9}, {
   3.745385388111433*^9, 3.745385411593401*^9}, {3.7453875595914288`*^9, 
   3.745387568075132*^9}, 3.745389177212406*^9, {3.7453901984733753`*^9, 
   3.745390202887982*^9}, {3.745390355427387*^9, 3.745390388219348*^9}, {
   3.7453977096680326`*^9, 3.745397725914731*^9}, {3.745397755948641*^9, 
   3.745397756084126*^9}, {3.7453980995991077`*^9, 3.745398113870977*^9}, {
   3.745399156102378*^9, 3.745399178169222*^9}, {3.745399342881937*^9, 
   3.745399361912752*^9}, {3.745401796965457*^9, 3.7454018195641527`*^9}, {
   3.745401971762494*^9, 3.745401971914714*^9}, {3.745404041771303*^9, 
   3.745404151470154*^9}, {3.745404384229478*^9, 3.745404389436048*^9}, {
   3.7454045122009163`*^9, 3.7454045237036552`*^9}, {3.745404614275045*^9, 
   3.7454046169752293`*^9}, {3.745404890358831*^9, 3.745404914872879*^9}, {
   3.7454740207870693`*^9, 3.745474024498345*^9}, {3.745477052572796*^9, 
   3.745477084925427*^9}, {3.745583208377653*^9, 3.74558321316575*^9}, {
   3.7461777044683733`*^9, 3.746177794182501*^9}, {3.746360152439383*^9, 
   3.746360194120142*^9}, 3.747138517796213*^9, {3.747139364508655*^9, 
   3.7471393719485703`*^9}, {3.747462249636409*^9, 3.747462256108732*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"\[CapitalPi]per", "[", 
    RowBox[{
    "\[Theta]_", ",", "\[Phi]_", ",", "\[Beta]_", ",", "mD_", ",", "u_"}], 
    "]"}], ":=", 
   RowBox[{"SetPrecision", "[", 
    RowBox[{
     RowBox[{
      FractionBox[
       SuperscriptBox["mD", "2"], "2"], 
      RowBox[{"(", 
       RowBox[{
        FractionBox[
         RowBox[{"2", "-", 
          RowBox[{"2", 
           SuperscriptBox["u", "2"]}], "-", 
          RowBox[{
           SuperscriptBox["u", "4"], 
           SuperscriptBox[
            RowBox[{"Sin", "[", "\[Theta]", "]"}], "2"], 
           SuperscriptBox[
            RowBox[{"Cos", "[", 
             RowBox[{"\[Phi]", "-", "\[Beta]"}], "]"}], "2"], 
           RowBox[{"(", 
            RowBox[{"1", "-", 
             RowBox[{
              SuperscriptBox[
               RowBox[{"Cos", "[", 
                RowBox[{"\[Phi]", "-", "\[Beta]"}], "]"}], "2"], 
              SuperscriptBox[
               RowBox[{"Sin", "[", "\[Theta]", "]"}], "2"]}]}], ")"}]}]}], 
         SuperscriptBox[
          RowBox[{"(", 
           RowBox[{"1", "-", 
            SuperscriptBox["u", "2"], "+", 
            RowBox[{
             SuperscriptBox["u", "2"], 
             SuperscriptBox[
              RowBox[{"Cos", "[", 
               RowBox[{"\[Phi]", "-", "\[Beta]"}], "]"}], "2"], 
             SuperscriptBox[
              RowBox[{"Sin", "[", "\[Theta]", "]"}], "2"]}]}], ")"}], "2"]], 
        "-", 
        RowBox[{
         FractionBox[
          RowBox[{
           RowBox[{"(", 
            RowBox[{"2", "+", 
             SuperscriptBox["u", "2"], "-", 
             RowBox[{
              SuperscriptBox["u", "2"], 
              SuperscriptBox[
               RowBox[{"Sin", "[", "\[Theta]", "]"}], "2"], 
              SuperscriptBox[
               RowBox[{"Cos", "[", 
                RowBox[{"\[Phi]", "-", "\[Beta]"}], "]"}], "2"]}]}], ")"}], 
           RowBox[{"(", 
            RowBox[{"1", "-", 
             SuperscriptBox["u", "2"]}], ")"}], "u", " ", 
           RowBox[{"Cos", "[", 
            RowBox[{"\[Phi]", "-", "\[Beta]"}], "]"}], 
           RowBox[{"Sin", "[", "\[Theta]", "]"}]}], 
          RowBox[{"2", 
           SuperscriptBox[
            RowBox[{"(", 
             RowBox[{"1", "-", 
              SuperscriptBox["u", "2"], "+", 
              RowBox[{
               SuperscriptBox["u", "2"], 
               SuperscriptBox[
                RowBox[{"Cos", "[", 
                 RowBox[{"\[Phi]", "-", "\[Beta]"}], "]"}], "2"], 
               SuperscriptBox[
                RowBox[{"Sin", "[", "\[Theta]", "]"}], "2"]}]}], ")"}], 
            RowBox[{"5", "/", "2"}]]}]], 
         RowBox[{"Log", "[", 
          FractionBox[
           RowBox[{
            RowBox[{"u", " ", 
             RowBox[{"Cos", "[", 
              RowBox[{"\[Phi]", "-", "\[Beta]"}], "]"}], " ", 
             RowBox[{"Sin", "[", "\[Theta]", "]"}]}], "+", 
            SqrtBox[
             RowBox[{"1", "-", 
              SuperscriptBox["u", "2"], "+", 
              RowBox[{
               SuperscriptBox["u", "2"], 
               SuperscriptBox[
                RowBox[{"Cos", "[", 
                 RowBox[{"\[Phi]", "-", "\[Beta]"}], "]"}], "2"], 
               SuperscriptBox[
                RowBox[{"Sin", "[", "\[Theta]", "]"}], "2"]}]}]]}], 
           RowBox[{
            RowBox[{"u", " ", 
             RowBox[{"Cos", "[", 
              RowBox[{"\[Phi]", "-", "\[Beta]"}], "]"}], 
             RowBox[{"Sin", "[", "\[Theta]", "]"}]}], "-", 
            SqrtBox[
             RowBox[{"1", "-", 
              SuperscriptBox["u", "2"], "+", 
              RowBox[{
               SuperscriptBox["u", "2"], 
               SuperscriptBox[
                RowBox[{"Cos", "[", 
                 RowBox[{"\[Phi]", "-", "\[Beta]"}], "]"}], "2"], 
               SuperscriptBox[
                RowBox[{"Sin", "[", "\[Theta]", "]"}], "2"]}]}]]}]], 
          "]"}]}]}], ")"}]}], ",", "30"}], "]"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.749707366461025*^9, 3.749707369202869*^9}, {
  3.749707435716299*^9, 3.749707644142868*^9}, {3.74970771591074*^9, 
  3.749707722806602*^9}, {3.7497083379937363`*^9, 3.7497083380887413`*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell["IIT paper", "Subsection",
 CellChangeTimes->{{3.7484504686955633`*^9, 3.7484504994467287`*^9}, {
   3.748450538599163*^9, 3.748450542903339*^9}, 3.7484506025366297`*^9}],

Cell[CellGroupData[{

Cell["Potentials", "Subsubsection",
 CellChangeTimes->{{3.748450854391089*^9, 3.748450864793952*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"ReVcp", "[", 
    RowBox[{"r_", ",", "mD_", ",", "u_", ",", "\[Alpha]_", ",", "c_"}], "]"}],
    ":=", 
   RowBox[{"c", "-", 
    RowBox[{"\[Alpha]", " ", "mD"}], "-", 
    FractionBox["\[Alpha]", "r"], "+", 
    RowBox[{
     FractionBox["\[Alpha]", 
      RowBox[{"2", "\[Pi]"}]], " ", 
     RowBox[{"NIntegrate", "[", 
      RowBox[{
       RowBox[{
        RowBox[{"Sin", "[", "\[Theta]", "]"}], 
        RowBox[{"Re", "[", 
         SqrtBox[
          RowBox[{"\[CapitalPi]per", "[", 
           RowBox[{"\[Theta]", ",", "\[Phi]", ",", "0", ",", "mD", ",", "u"}],
            "]"}]], "]"}], 
        RowBox[{"Exp", "[", 
         RowBox[{
          RowBox[{"-", 
           RowBox[{"Re", "[", 
            SqrtBox[
             RowBox[{"\[CapitalPi]per", "[", 
              RowBox[{
              "\[Theta]", ",", "\[Phi]", ",", "0", ",", "mD", ",", "u"}], 
              "]"}]], "]"}]}], "r", " ", 
          RowBox[{"Cos", "[", "\[Theta]", "]"}]}], "]"}]}], ",", 
       RowBox[{"{", 
        RowBox[{"\[Theta]", ",", "0", ",", 
         RowBox[{"\[Pi]", "/", "2"}]}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"\[Phi]", ",", "0", ",", 
         RowBox[{"2", "\[Pi]"}]}], "}"}]}], "]"}]}]}]}], ";", 
  RowBox[{"(*", 
   RowBox[{"WE", " ", "USE", " ", "THIS", " ", "ONE"}], "*)"}]}]], "Input",
 CellChangeTimes->{{3.7484505453298197`*^9, 3.748450550153339*^9}, {
  3.748450609967485*^9, 3.748450634795309*^9}, {3.748941399694872*^9, 
  3.748941419583263*^9}, {3.7489414699950314`*^9, 3.748941476587145*^9}, {
  3.7497083234570007`*^9, 3.749708344328598*^9}, {3.749708515261862*^9, 
  3.749708558156905*^9}, {3.7497085904942837`*^9, 3.7497086747441874`*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"ReVcp", "[", 
   RowBox[{"100", ",", 
    RowBox[{"2", "/", "10"}], ",", 
    RowBox[{"99", "/", "100"}], ",", 
    RowBox[{"\[Alpha]cont", "[", 
     RowBox[{"[", "1", "]"}], "]"}], ",", 
    RowBox[{"ccont", "[", 
     RowBox[{"[", "1", "]"}], "]"}]}], "]"}], "//", 
  "AbsoluteTiming"}]], "Input",
 CellChangeTimes->{{3.749710297356175*^9, 3.7497103217481833`*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"1.235111`", ",", 
   RowBox[{"-", "0.2648502344250968`"}]}], "}"}]], "Output",
 CellChangeTimes->{{3.74971031331816*^9, 3.7497103236242323`*^9}}]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"ImVcp", "[", 
    RowBox[{"r_", ",", "mD_", ",", "u_", ",", "\[Alpha]_", ",", "T_"}], "]"}],
    ":=", 
   RowBox[{
    FractionBox[
     RowBox[{"2", " ", "\[Alpha]", " ", "T", " "}], 
     RowBox[{"2", "\[Pi]"}]], 
    RowBox[{"Quiet", "[", 
     RowBox[{"NIntegrate", "[", 
      RowBox[{
       RowBox[{
        RowBox[{"Sin", "[", "\[Theta]", "]"}], 
        FractionBox[
         RowBox[{
          RowBox[{"(", 
           RowBox[{"2", "+", 
            SuperscriptBox["u", "2"], "-", 
            RowBox[{
             SuperscriptBox["u", "2"], 
             SuperscriptBox[
              RowBox[{"Sin", "[", "\[Theta]", "]"}], "2"], 
             SuperscriptBox[
              RowBox[{"Cos", "[", 
               RowBox[{"\[Phi]", "-", "0"}], "]"}], "2"]}]}], ")"}], 
          SuperscriptBox[
           RowBox[{"(", 
            RowBox[{"1", "-", 
             SuperscriptBox["u", "2"]}], ")"}], 
           RowBox[{"3", "/", "2"}]]}], 
         RowBox[{"2", 
          SuperscriptBox[
           RowBox[{"(", 
            RowBox[{"1", "-", 
             SuperscriptBox["u", "2"], "+", 
             RowBox[{
              SuperscriptBox["u", "2"], 
              SuperscriptBox[
               RowBox[{"Sin", "[", "\[Theta]", "]"}], "2"], 
              SuperscriptBox[
               RowBox[{"Cos", "[", 
                RowBox[{"\[Phi]", "-", "0"}], "]"}], "2"]}]}], ")"}], 
           RowBox[{"5", "/", "2"}]]}]], 
        FractionBox[
         SuperscriptBox["mD", "2"], 
         RowBox[{"(", 
          RowBox[{
           RowBox[{"\[CapitalPi]per", "[", 
            RowBox[{
            "\[Theta]", ",", "\[Phi]", ",", "0", ",", "mD", ",", "u"}], "]"}],
            "-", 
           RowBox[{"Conjugate", "[", 
            RowBox[{"\[CapitalPi]per", "[", 
             RowBox[{
             "\[Theta]", ",", "\[Phi]", ",", "0", ",", "mD", ",", "u"}], 
             "]"}], "]"}]}], ")"}]], 
        RowBox[{"(", 
         RowBox[{
          RowBox[{
           RowBox[{"Sinh", "[", 
            RowBox[{
             SqrtBox[
              RowBox[{"\[CapitalPi]per", "[", 
               RowBox[{
               "\[Theta]", ",", "\[Phi]", ",", "0", ",", "mD", ",", "u"}], 
               "]"}]], "r", " ", 
             RowBox[{"Cos", "[", "\[Theta]", "]"}]}], "]"}], 
           RowBox[{"SinhIntegral", "[", 
            RowBox[{
             SqrtBox[
              RowBox[{"\[CapitalPi]per", "[", 
               RowBox[{
               "\[Theta]", ",", "\[Phi]", ",", "0", ",", "mD", ",", "u"}], 
               "]"}]], "r", " ", 
             RowBox[{"Cos", "[", "\[Theta]", "]"}]}], "]"}]}], "-", 
          RowBox[{
           RowBox[{"Cosh", "[", 
            RowBox[{
             SqrtBox[
              RowBox[{"\[CapitalPi]per", "[", 
               RowBox[{
               "\[Theta]", ",", "\[Phi]", ",", "0", ",", "mD", ",", "u"}], 
               "]"}]], "r", " ", 
             RowBox[{"Cos", "[", "\[Theta]", "]"}]}], "]"}], 
           RowBox[{"CoshIntegral", "[", 
            RowBox[{
             SqrtBox[
              RowBox[{"\[CapitalPi]per", "[", 
               RowBox[{
               "\[Theta]", ",", "\[Phi]", ",", "0", ",", "mD", ",", "u"}], 
               "]"}]], "r", " ", 
             RowBox[{"Cos", "[", "\[Theta]", "]"}]}], "]"}]}], "-", 
          RowBox[{
           RowBox[{"Sinh", "[", 
            RowBox[{
             SqrtBox[
              RowBox[{"Conjugate", "[", 
               RowBox[{"\[CapitalPi]per", "[", 
                RowBox[{
                "\[Theta]", ",", "\[Phi]", ",", "0", ",", "mD", ",", "u"}], 
                "]"}], "]"}]], "r", " ", 
             RowBox[{"Cos", "[", "\[Theta]", "]"}]}], "]"}], 
           RowBox[{"SinhIntegral", "[", 
            RowBox[{
             SqrtBox[
              RowBox[{"Conjugate", "[", 
               RowBox[{"\[CapitalPi]per", "[", 
                RowBox[{
                "\[Theta]", ",", "\[Phi]", ",", "0", ",", "mD", ",", "u"}], 
                "]"}], "]"}]], "r", " ", 
             RowBox[{"Cos", "[", "\[Theta]", "]"}]}], "]"}]}], "+", 
          RowBox[{
           RowBox[{"Cosh", "[", 
            RowBox[{
             SqrtBox[
              RowBox[{"Conjugate", "[", 
               RowBox[{"\[CapitalPi]per", "[", 
                RowBox[{
                "\[Theta]", ",", "\[Phi]", ",", "0", ",", "mD", ",", "u"}], 
                "]"}], "]"}]], "r", " ", 
             RowBox[{"Cos", "[", "\[Theta]", "]"}]}], "]"}], 
           RowBox[{"CoshIntegral", "[", 
            RowBox[{
             SqrtBox[
              RowBox[{"Conjugate", "[", 
               RowBox[{"\[CapitalPi]per", "[", 
                RowBox[{
                "\[Theta]", ",", "\[Phi]", ",", "0", ",", "mD", ",", "u"}], 
                "]"}], "]"}]], "r", " ", 
             RowBox[{"Cos", "[", "\[Theta]", "]"}]}], "]"}]}]}], ")"}]}], ",", 
       RowBox[{"{", 
        RowBox[{"\[Theta]", ",", "0", ",", 
         RowBox[{"\[Pi]", "/", "2"}]}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"\[Phi]", ",", "0", ",", 
         RowBox[{"2", "\[Pi]"}]}], "}"}], ",", 
       RowBox[{"WorkingPrecision", "\[Rule]", "15"}], ",", 
       RowBox[{"PrecisionGoal", "\[Rule]", "2"}]}], "]"}], "]"}]}]}], ";", 
  RowBox[{"(*", 
   RowBox[{"WE", " ", "USE", " ", "THIS", " ", "ONE"}], "*)"}]}]], "Input",
 CellChangeTimes->{
  3.749153483191208*^9, {3.749612550086121*^9, 3.749612557069746*^9}, {
   3.749708810867077*^9, 3.7497089080758543`*^9}, {3.7497089383333263`*^9, 
   3.749708970402935*^9}, {3.749709013518128*^9, 3.7497090199344177`*^9}, {
   3.749709066144251*^9, 3.749709091611389*^9}, {3.749710218085025*^9, 
   3.749710221136423*^9}, {3.749719545851318*^9, 3.7497195494914207`*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"ImVcp", "[", 
   RowBox[{"60", ",", 
    RowBox[{"2", "/", "10"}], ",", 
    RowBox[{"99", "/", "100"}], ",", 
    RowBox[{"\[Alpha]cont", "[", 
     RowBox[{"[", "1", "]"}], "]"}], ",", 
    RowBox[{"155", "/", "1000"}]}], "]"}], "//", "AbsoluteTiming"}]], "Input",\

 CellChangeTimes->{{3.749710227266777*^9, 3.7497102776439133`*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"8.293815`", ",", 
   RowBox[{"-", "0.0008786288074302227`"}]}], "}"}]], "Output",
 CellChangeTimes->{{3.749710267075328*^9, 3.7497102864853783`*^9}}]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Permittivities", "Subsubsection",
 CellChangeTimes->{{3.748450869220883*^9, 3.748450881592766*^9}, {
  3.748450915542739*^9, 3.7484509164068193`*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"\[Epsilon]Imp", "[", 
    RowBox[{"r_", ",", "mD_", ",", "u_", ",", "T_"}], "]"}], ":=", 
   "\[IndentingNewLine]", 
   RowBox[{
    FractionBox["1", 
     SuperscriptBox[
      RowBox[{"(", 
       RowBox[{"2", "\[Pi]"}], ")"}], "2"]], 
    RowBox[{"Re", "[", 
     RowBox[{"T", " ", 
      RowBox[{"NIntegrate", "[", 
       RowBox[{
        RowBox[{
         RowBox[{"Sin", "[", "\[Theta]", "]"}], 
         FractionBox[
          RowBox[{
           RowBox[{"(", 
            RowBox[{"2", "+", 
             SuperscriptBox["u", "2"], "-", 
             RowBox[{
              SuperscriptBox["u", "2"], 
              SuperscriptBox[
               RowBox[{"Sin", "[", "\[Theta]", "]"}], "2"], 
              SuperscriptBox[
               RowBox[{"Cos", "[", 
                RowBox[{"\[Phi]", "-", "0"}], "]"}], "2"]}]}], ")"}], 
           SuperscriptBox[
            RowBox[{"(", 
             RowBox[{"1", "-", 
              SuperscriptBox["u", "2"]}], ")"}], 
            RowBox[{"3", "/", "2"}]]}], 
          RowBox[{"2", 
           SuperscriptBox[
            RowBox[{"(", 
             RowBox[{"1", "-", 
              SuperscriptBox["u", "2"], "+", 
              RowBox[{
               SuperscriptBox["u", "2"], 
               SuperscriptBox[
                RowBox[{"Sin", "[", "\[Theta]", "]"}], "2"], 
               SuperscriptBox[
                RowBox[{"Cos", "[", 
                 RowBox[{"\[Phi]", "-", "0"}], "]"}], "2"]}]}], ")"}], 
            RowBox[{"5", "/", "2"}]]}]], 
         FractionBox[
          SuperscriptBox["mD", "2"], 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"\[CapitalPi]per", "[", 
             RowBox[{
             "\[Theta]", ",", "\[Phi]", ",", "0", ",", "mD", ",", "u"}], 
             "]"}], "-", 
            RowBox[{"Conjugate", "[", 
             RowBox[{"\[CapitalPi]per", "[", 
              RowBox[{
              "\[Theta]", ",", "\[Phi]", ",", "0", ",", "mD", ",", "u"}], 
              "]"}], "]"}]}], ")"}]], 
         FractionBox["1", "r"], 
         RowBox[{"Cos", "[", "\[Theta]", "]"}], " ", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{"2", " ", 
            SqrtBox[
             RowBox[{"Conjugate", "[", 
              RowBox[{"\[CapitalPi]per", "[", 
               RowBox[{
               "\[Theta]", ",", "\[Phi]", ",", "0", ",", "mD", ",", "u"}], 
               "]"}], "]"}]], " ", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{
               RowBox[{"CoshIntegral", "[", 
                RowBox[{"r", " ", 
                 SqrtBox[
                  RowBox[{"Conjugate", "[", 
                   RowBox[{"\[CapitalPi]per", "[", 
                    RowBox[{
                    "\[Theta]", ",", "\[Phi]", ",", "0", ",", "mD", ",", 
                    "u"}], "]"}], "]"}]], " ", 
                 RowBox[{"Cos", "[", "\[Theta]", "]"}]}], "]"}], " ", 
               RowBox[{"Sinh", "[", 
                RowBox[{"r", " ", 
                 SqrtBox[
                  RowBox[{"Conjugate", "[", 
                   RowBox[{"\[CapitalPi]per", "[", 
                    RowBox[{
                    "\[Theta]", ",", "\[Phi]", ",", "0", ",", "mD", ",", 
                    "u"}], "]"}], "]"}]], " ", 
                 RowBox[{"Cos", "[", "\[Theta]", "]"}]}], "]"}]}], "-", 
              RowBox[{
               RowBox[{"Cosh", "[", 
                RowBox[{"r", " ", 
                 SqrtBox[
                  RowBox[{"Conjugate", "[", 
                   RowBox[{"\[CapitalPi]per", "[", 
                    RowBox[{
                    "\[Theta]", ",", "\[Phi]", ",", "0", ",", "mD", ",", 
                    "u"}], "]"}], "]"}]], " ", 
                 RowBox[{"Cos", "[", "\[Theta]", "]"}]}], "]"}], " ", 
               RowBox[{"SinhIntegral", "[", 
                RowBox[{"r", " ", 
                 SqrtBox[
                  RowBox[{"Conjugate", "[", 
                   RowBox[{"\[CapitalPi]per", "[", 
                    RowBox[{
                    "\[Theta]", ",", "\[Phi]", ",", "0", ",", "mD", ",", 
                    "u"}], "]"}], "]"}]], " ", 
                 RowBox[{"Cos", "[", "\[Theta]", "]"}]}], "]"}]}]}], ")"}]}], 
           "+", 
           RowBox[{"r", " ", 
            RowBox[{"Conjugate", "[", 
             RowBox[{"\[CapitalPi]per", "[", 
              RowBox[{
              "\[Theta]", ",", "\[Phi]", ",", "0", ",", "mD", ",", "u"}], 
              "]"}], "]"}], " ", 
            RowBox[{"Cos", "[", "\[Theta]", "]"}], " ", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{
               RowBox[{"Cosh", "[", 
                RowBox[{"r", " ", 
                 SqrtBox[
                  RowBox[{"Conjugate", "[", 
                   RowBox[{"\[CapitalPi]per", "[", 
                    RowBox[{
                    "\[Theta]", ",", "\[Phi]", ",", "0", ",", "mD", ",", 
                    "u"}], "]"}], "]"}]], " ", 
                 RowBox[{"Cos", "[", "\[Theta]", "]"}]}], "]"}], " ", 
               RowBox[{"CoshIntegral", "[", 
                RowBox[{"r", " ", 
                 SqrtBox[
                  RowBox[{"Conjugate", "[", 
                   RowBox[{"\[CapitalPi]per", "[", 
                    RowBox[{
                    "\[Theta]", ",", "\[Phi]", ",", "0", ",", "mD", ",", 
                    "u"}], "]"}], "]"}]], " ", 
                 RowBox[{"Cos", "[", "\[Theta]", "]"}]}], "]"}]}], "-", 
              RowBox[{
               RowBox[{"Sinh", "[", 
                RowBox[{"r", " ", 
                 SqrtBox[
                  RowBox[{"Conjugate", "[", 
                   RowBox[{"\[CapitalPi]per", "[", 
                    RowBox[{
                    "\[Theta]", ",", "\[Phi]", ",", "0", ",", "mD", ",", 
                    "u"}], "]"}], "]"}]], " ", 
                 RowBox[{"Cos", "[", "\[Theta]", "]"}]}], "]"}], " ", 
               RowBox[{"SinhIntegral", "[", 
                RowBox[{"r", " ", 
                 SqrtBox[
                  RowBox[{"Conjugate", "[", 
                   RowBox[{"\[CapitalPi]per", "[", 
                    RowBox[{
                    "\[Theta]", ",", "\[Phi]", ",", "0", ",", "mD", ",", 
                    "u"}], "]"}], "]"}]], " ", 
                 RowBox[{"Cos", "[", "\[Theta]", "]"}]}], "]"}]}]}], ")"}]}], 
           "+", 
           RowBox[{
            SqrtBox[
             RowBox[{"\[CapitalPi]per", "[", 
              RowBox[{
              "\[Theta]", ",", "\[Phi]", ",", "0", ",", "mD", ",", "u"}], 
              "]"}]], " ", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{
               RowBox[{"-", 
                RowBox[{"CoshIntegral", "[", 
                 RowBox[{"r", " ", 
                  RowBox[{"Cos", "[", "\[Theta]", "]"}], " ", 
                  SqrtBox[
                   RowBox[{"\[CapitalPi]per", "[", 
                    RowBox[{
                    "\[Theta]", ",", "\[Phi]", ",", "0", ",", "mD", ",", 
                    "u"}], "]"}]]}], "]"}]}], " ", 
               RowBox[{"(", 
                RowBox[{
                 RowBox[{"r", " ", 
                  RowBox[{"Cos", "[", "\[Theta]", "]"}], " ", 
                  RowBox[{"Cosh", "[", 
                   RowBox[{"r", " ", 
                    RowBox[{"Cos", "[", "\[Theta]", "]"}], " ", 
                    SqrtBox[
                    RowBox[{"\[CapitalPi]per", "[", 
                    RowBox[{
                    "\[Theta]", ",", "\[Phi]", ",", "0", ",", "mD", ",", 
                    "u"}], "]"}]]}], "]"}], " ", 
                  SqrtBox[
                   RowBox[{"\[CapitalPi]per", "[", 
                    RowBox[{
                    "\[Theta]", ",", "\[Phi]", ",", "0", ",", "mD", ",", 
                    "u"}], "]"}]]}], "+", 
                 RowBox[{"2", " ", 
                  RowBox[{"Sinh", "[", 
                   RowBox[{"r", " ", 
                    RowBox[{"Cos", "[", "\[Theta]", "]"}], " ", 
                    SqrtBox[
                    RowBox[{"\[CapitalPi]per", "[", 
                    RowBox[{
                    "\[Theta]", ",", "\[Phi]", ",", "0", ",", "mD", ",", 
                    "u"}], "]"}]]}], "]"}]}]}], ")"}]}], "+", 
              RowBox[{
               RowBox[{"(", 
                RowBox[{
                 RowBox[{"2", " ", 
                  RowBox[{"Cosh", "[", 
                   RowBox[{"r", " ", 
                    RowBox[{"Cos", "[", "\[Theta]", "]"}], " ", 
                    SqrtBox[
                    RowBox[{"\[CapitalPi]per", "[", 
                    RowBox[{
                    "\[Theta]", ",", "\[Phi]", ",", "0", ",", "mD", ",", 
                    "u"}], "]"}]]}], "]"}]}], "+", 
                 RowBox[{"r", " ", 
                  RowBox[{"Cos", "[", "\[Theta]", "]"}], " ", 
                  SqrtBox[
                   RowBox[{"\[CapitalPi]per", "[", 
                    RowBox[{
                    "\[Theta]", ",", "\[Phi]", ",", "0", ",", "mD", ",", 
                    "u"}], "]"}]], " ", 
                  RowBox[{"Sinh", "[", 
                   RowBox[{"r", " ", 
                    RowBox[{"Cos", "[", "\[Theta]", "]"}], " ", 
                    SqrtBox[
                    RowBox[{"\[CapitalPi]per", "[", 
                    RowBox[{
                    "\[Theta]", ",", "\[Phi]", ",", "0", ",", "mD", ",", 
                    "u"}], "]"}]]}], "]"}]}]}], ")"}], " ", 
               RowBox[{"SinhIntegral", "[", 
                RowBox[{"r", " ", 
                 RowBox[{"Cos", "[", "\[Theta]", "]"}], " ", 
                 SqrtBox[
                  RowBox[{"\[CapitalPi]per", "[", 
                   RowBox[{
                   "\[Theta]", ",", "\[Phi]", ",", "0", ",", "mD", ",", "u"}],
                    "]"}]]}], "]"}]}]}], ")"}]}]}], ")"}]}], ",", 
        RowBox[{"{", 
         RowBox[{"\[Theta]", ",", "0", ",", 
          RowBox[{"\[Pi]", "/", "2"}]}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"\[Phi]", ",", "0", ",", 
          RowBox[{"2", "\[Pi]"}]}], "}"}], ",", 
        RowBox[{"WorkingPrecision", "\[Rule]", "20"}], ",", 
        RowBox[{"PrecisionGoal", "\[Rule]", "1"}]}], "]"}]}], "]"}]}]}], ";", 
  
  RowBox[{"(*", "UNREGULATED", "*)"}]}]], "Input",
 CellChangeTimes->{{3.74845092703507*^9, 3.748450937685601*^9}, {
   3.7489433167977753`*^9, 3.748943332355961*^9}, {3.7489433646776752`*^9, 
   3.7489433741412687`*^9}, {3.748943423038916*^9, 3.748943440837915*^9}, 
   3.749188428401885*^9, {3.7497089098283443`*^9, 3.749708923236423*^9}, {
   3.7497091774322777`*^9, 3.749709212211916*^9}, {3.7497092493751917`*^9, 
   3.749709257229188*^9}, {3.749709316478237*^9, 3.749709316685458*^9}, {
   3.7497093806393633`*^9, 3.7497093807583437`*^9}, {3.749709480016882*^9, 
   3.749709480118947*^9}, {3.749709892472438*^9, 3.7497098951298313`*^9}, {
   3.7497099353614264`*^9, 3.749710025988022*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"\[Epsilon]Imp", "[", 
   RowBox[{"50", ",", 
    RowBox[{"2", "/", "10"}], ",", 
    RowBox[{"99", "/", "100"}], ",", 
    RowBox[{"250", "/", "1000"}]}], "]"}], "//", "AbsoluteTiming"}]], "Input",\

 CellChangeTimes->{{3.749710091584497*^9, 3.749710095808035*^9}, {
  3.749710156714964*^9, 3.749710177721519*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
  "16.173081`", ",", 
   "1.76220294913398727849175603569627`20.150514899769536*^-6"}], 
  "}"}]], "Output",
 CellChangeTimes->{{3.749710080931025*^9, 3.749710087157942*^9}, {
  3.749710154552318*^9, 3.749710194442861*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"D", "[", 
    RowBox[{
     RowBox[{
      RowBox[{"Sin", "[", "\[Theta]", "]"}], 
      RowBox[{"f", "[", 
       RowBox[{"\[Theta]", ",", "mD", ",", "u"}], "]"}], 
      RowBox[{"Exp", "[", 
       RowBox[{
        RowBox[{"-", 
         RowBox[{"f", "[", 
          RowBox[{"\[Theta]", ",", "mD", ",", "u"}], "]"}]}], "r", " ", 
        RowBox[{"Cos", "[", "\[Theta]", "]"}]}], "]"}]}], ",", 
     RowBox[{"{", 
      RowBox[{"r", ",", "2"}], "}"}]}], "]"}], "+", 
   RowBox[{
    FractionBox["2", "r"], 
    RowBox[{"D", "[", 
     RowBox[{
      RowBox[{
       RowBox[{"Sin", "[", "\[Theta]", "]"}], 
       RowBox[{"f", "[", 
        RowBox[{"\[Theta]", ",", "mD", ",", "u"}], "]"}], 
       RowBox[{"Exp", "[", 
        RowBox[{
         RowBox[{"-", 
          RowBox[{"f", "[", 
           RowBox[{"\[Theta]", ",", "mD", ",", "u"}], "]"}]}], "r", " ", 
         RowBox[{"Cos", "[", "\[Theta]", "]"}]}], "]"}]}], ",", "r"}], 
     "]"}]}]}], "//", "FullSimplify"}]], "Input",
 CellChangeTimes->{{3.7491887080606737`*^9, 3.7491887791180353`*^9}, {
   3.749188853108238*^9, 3.749188865319393*^9}, 3.749202545203722*^9, {
   3.749202631773013*^9, 3.749202663257951*^9}, {3.749202717614155*^9, 
   3.7492027221255093`*^9}, {3.7492027977213593`*^9, 3.749202798502303*^9}, {
   3.749218162223762*^9, 3.749218182439782*^9}}],

Cell[BoxData[
 FractionBox[
  RowBox[{
   SuperscriptBox["\[ExponentialE]", 
    RowBox[{
     RowBox[{"-", "r"}], " ", 
     RowBox[{"Cos", "[", "\[Theta]", "]"}], " ", 
     RowBox[{"f", "[", 
      RowBox[{"\[Theta]", ",", "mD", ",", "u"}], "]"}]}]], " ", 
   RowBox[{"Cos", "[", "\[Theta]", "]"}], " ", 
   SuperscriptBox[
    RowBox[{"f", "[", 
     RowBox[{"\[Theta]", ",", "mD", ",", "u"}], "]"}], "2"], " ", 
   RowBox[{"(", 
    RowBox[{
     RowBox[{"-", "2"}], "+", 
     RowBox[{"r", " ", 
      RowBox[{"Cos", "[", "\[Theta]", "]"}], " ", 
      RowBox[{"f", "[", 
       RowBox[{"\[Theta]", ",", "mD", ",", "u"}], "]"}]}]}], ")"}], " ", 
   RowBox[{"Sin", "[", "\[Theta]", "]"}]}], "r"]], "Output",
 CellChangeTimes->{{3.7491887385473623`*^9, 3.7491887599064903`*^9}, {
   3.749188854699538*^9, 3.7491888664680147`*^9}, 3.749202481958252*^9, 
   3.749202545885826*^9, {3.749202639706296*^9, 3.749202664022654*^9}, {
   3.7492027187612143`*^9, 3.749202722771459*^9}, 3.7492027997176743`*^9, {
   3.7492181797414083`*^9, 3.749218183624193*^9}, 3.74932748207344*^9, 
   3.749368546098016*^9}]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"\[Epsilon]Rep1", "[", 
    RowBox[{"r_", ",", "mD_", ",", "u_"}], "]"}], ":=", 
   RowBox[{"Quiet", "[", 
    RowBox[{
     FractionBox["1", 
      RowBox[{"2", "\[Pi]", " ", "r"}]], 
     RowBox[{"NIntegrate", "[", 
      RowBox[{
       RowBox[{
        RowBox[{"Exp", "[", 
         RowBox[{
          RowBox[{"-", "r"}], " ", 
          RowBox[{"Cos", "[", "\[Theta]", "]"}], " ", 
          RowBox[{"Re", "[", 
           SqrtBox[
            RowBox[{"\[CapitalPi]per", "[", 
             RowBox[{
             "\[Theta]", ",", "\[Phi]", ",", "0", ",", "mD", ",", "u"}], 
             "]"}]], "]"}]}], "]"}], " ", 
        RowBox[{"Cos", "[", "\[Theta]", "]"}], " ", 
        SuperscriptBox[
         RowBox[{"Re", "[", 
          SqrtBox[
           RowBox[{"\[CapitalPi]per", "[", 
            RowBox[{
            "\[Theta]", ",", "\[Phi]", ",", "0", ",", "mD", ",", "u"}], 
            "]"}]], "]"}], "2"], " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"-", "2"}], "+", 
          RowBox[{"r", " ", 
           RowBox[{"Cos", "[", "\[Theta]", "]"}], " ", 
           RowBox[{"Re", "[", 
            SqrtBox[
             RowBox[{"\[CapitalPi]per", "[", 
              RowBox[{
              "\[Theta]", ",", "\[Phi]", ",", "0", ",", "mD", ",", "u"}], 
              "]"}]], "]"}]}]}], ")"}], " ", 
        RowBox[{"Sin", "[", "\[Theta]", "]"}]}], ",", 
       RowBox[{"{", 
        RowBox[{"\[Theta]", ",", "0", ",", 
         RowBox[{"\[Pi]", "/", "2"}]}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"\[Phi]", ",", "0", ",", 
         RowBox[{"2", "\[Pi]"}]}], "}"}]}], "]"}]}], "]"}]}], ";", 
  RowBox[{"(*", 
   RowBox[{"WE", " ", "USE", " ", "THIS", " ", "ONE"}], "*)"}]}]], "Input",
 CellChangeTimes->{{3.749327484051489*^9, 3.7493275713487663`*^9}, {
   3.749485052704666*^9, 3.7494850595025578`*^9}, 3.749485216747398*^9, {
   3.749612579357493*^9, 3.749612589237705*^9}, {3.749709506317957*^9, 
   3.7497095711675253`*^9}, {3.749709606999859*^9, 3.749709607975741*^9}, {
   3.749709644177043*^9, 3.749709644360722*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"\[Epsilon]Rep1", "[", 
   RowBox[{"100", ",", 
    RowBox[{"2", "/", "10"}], ",", 
    RowBox[{"10", "/", "100"}]}], "]"}], "//", "AbsoluteTiming"}]], "Input",
 CellChangeTimes->{{3.749709616015356*^9, 3.749709672512045*^9}, {
  3.7497097310341043`*^9, 3.7497097325914297`*^9}, {3.7497103339894323`*^9, 
  3.749710334973011*^9}, {3.749710376223117*^9, 3.749710410550479*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"4.606936`", ",", 
   RowBox[{"-", "3.6069401662848523`*^-10"}]}], "}"}]], "Output",
 CellChangeTimes->{{3.74970962205926*^9, 3.749709637143757*^9}, {
   3.749709668130107*^9, 3.74970967607475*^9}, 3.74970973652833*^9, 
   3.7497103392227592`*^9, {3.749710381171281*^9, 3.749710415395289*^9}}]
}, Open  ]]
}, Open  ]]
}, Closed]],

Cell[CellGroupData[{

Cell["Tabs", "Subsection",
 CellChangeTimes->{{3.74845078759194*^9, 3.748450827213127*^9}, 
   3.748451123843587*^9, 3.748941360059739*^9}],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"ReVsTab", "[", 
    RowBox[{"mD1_", ",", "u1_", ",", "\[Sigma]1_"}], "]"}], ":=", 
   RowBox[{"Block", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{"u", "=", "u1"}], ",", 
       RowBox[{"mD", "=", "mD1"}], ",", 
       RowBox[{"\[Sigma]", "=", "\[Sigma]1"}], ",", "inter0", ",", "inter1", 
       ",", "tab", ",", "inter2", ",", "inter3", ",", "tab1", ",", "tab0"}], 
      "}"}], ",", 
     RowBox[{
      RowBox[{"tab0", "=", 
       RowBox[{"ParallelTable", "[", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"r", ",", 
           RowBox[{"\[Sigma]", " ", 
            SuperscriptBox["r", "2"], 
            RowBox[{"\[Epsilon]Rep1", "[", 
             RowBox[{"r", ",", "mD", ",", "u"}], "]"}]}]}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"r", ",", 
           SuperscriptBox["10", 
            RowBox[{"-", "10"}]], ",", "100", ",", 
           RowBox[{"1", "/", "10"}]}], "}"}]}], "]"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"inter0", "=", 
       RowBox[{"Interpolation", "[", "tab0", "]"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"inter1", "[", "r_", "]"}], ":=", 
       RowBox[{"Quiet", "[", 
        RowBox[{"NIntegrate", "[", 
         RowBox[{
          RowBox[{"inter0", "[", "r1", "]"}], ",", 
          RowBox[{"{", 
           RowBox[{"r1", ",", "0", ",", "r"}], "}"}]}], "]"}], "]"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"tab", "=", 
       RowBox[{"ParallelTable", "[", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"r", ",", 
           RowBox[{
            RowBox[{"inter1", "[", "r", "]"}], "+", "\[Sigma]"}]}], "}"}], 
         ",", 
         RowBox[{"{", 
          RowBox[{"r", ",", "0", ",", "100", ",", 
           RowBox[{"1", "/", "10"}]}], "}"}]}], "]"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"inter2", "=", 
       RowBox[{"Interpolation", "[", "tab", "]"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"inter3", "[", "r_", "]"}], ":=", 
       RowBox[{"Quiet", "[", 
        RowBox[{"NIntegrate", "[", 
         RowBox[{
          RowBox[{"inter2", "[", "r1", "]"}], ",", 
          RowBox[{"{", 
           RowBox[{"r1", ",", "0", ",", "r"}], "}"}]}], "]"}], "]"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"tab1", "=", 
       RowBox[{"ParallelTable", "[", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"r", ",", 
           RowBox[{"inter3", "[", "r", "]"}]}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"r", ",", "0", ",", "100", ",", 
           RowBox[{"1", "/", "10"}]}], "}"}]}], "]"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"Export", "[", 
       RowBox[{
        RowBox[{"\"\<vel_pot_perp/ReVsu\>\"", "<>", 
         RowBox[{"ToString", "[", 
          RowBox[{"Round", "[", 
           RowBox[{"100", " ", "u"}], "]"}], "]"}], "<>", "\"\<u.dat\>\""}], 
        ",", "tab1"}], "]"}], ";"}]}], "]"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.7453831005455914`*^9, 3.745383138661728*^9}, {
   3.745383312376183*^9, 3.74538334437337*^9}, {3.7453836903426113`*^9, 
   3.745383700509996*^9}, {3.745383888049996*^9, 3.7453838920497932`*^9}, {
   3.745384456942053*^9, 3.745384462717682*^9}, {3.745385041376384*^9, 
   3.7453850447607927`*^9}, {3.745385110730214*^9, 3.745385155644156*^9}, {
   3.745385388111433*^9, 3.745385411593401*^9}, {3.7453875595914288`*^9, 
   3.745387568075132*^9}, 3.745389177212406*^9, {3.7453901984733753`*^9, 
   3.745390202887982*^9}, {3.745390355427387*^9, 3.745390388219348*^9}, {
   3.7453977096680326`*^9, 3.745397725914731*^9}, {3.745397755948641*^9, 
   3.745397756084126*^9}, {3.7453980995991077`*^9, 3.745398113870977*^9}, {
   3.745399156102378*^9, 3.745399178169222*^9}, {3.745399342881937*^9, 
   3.745399361912752*^9}, {3.745401796965457*^9, 3.7454018195641527`*^9}, {
   3.745401971762494*^9, 3.745401971914714*^9}, {3.745404041771303*^9, 
   3.745404151470154*^9}, {3.745404384229478*^9, 3.745404389436048*^9}, {
   3.7454045122009163`*^9, 3.7454045237036552`*^9}, {3.745404614275045*^9, 
   3.7454046169752293`*^9}, {3.745404890358831*^9, 3.745404914872879*^9}, {
   3.7454740207870693`*^9, 3.745474024498345*^9}, {3.745477052572796*^9, 
   3.745477084925427*^9}, {3.745583208377653*^9, 3.74558321316575*^9}, {
   3.7461777044683733`*^9, 3.746177794182501*^9}, {3.746360152439383*^9, 
   3.746360194120142*^9}, 3.747138517796213*^9, {3.74714032667677*^9, 
   3.747140489547065*^9}, {3.747141354076187*^9, 3.747141359156494*^9}, {
   3.747141522823501*^9, 3.7471415310553417`*^9}, {3.749153891123*^9, 
   3.749153917106997*^9}, {3.749188604635096*^9, 3.749188604733561*^9}, {
   3.749203474410091*^9, 3.74920347448274*^9}, {3.749327310427429*^9, 
   3.74932731652871*^9}, {3.749327586006402*^9, 3.749327601454776*^9}, {
   3.7493277640253353`*^9, 3.749327852961533*^9}, {3.7493685883698683`*^9, 
   3.749368662570149*^9}, {3.749485109282816*^9, 3.749485111617383*^9}, {
   3.749485235084844*^9, 3.749485244893777*^9}, {3.749485546554497*^9, 
   3.749485566713616*^9}, {3.749485957914177*^9, 3.749485962777535*^9}, {
   3.749486298776033*^9, 3.7494863062313766`*^9}, 3.74948637708932*^9, {
   3.749486433762805*^9, 3.749486436801955*^9}, {3.7494871232714567`*^9, 
   3.749487132335362*^9}, 3.749487430829056*^9, 3.7494874656849194`*^9, 
   3.749487748002528*^9, {3.749489632672646*^9, 3.749489655684531*^9}, {
   3.749556105432901*^9, 3.74955611540036*^9}, {3.749556147985692*^9, 
   3.74955614880967*^9}, {3.74958184621616*^9, 3.749581854013291*^9}, {
   3.749612596013793*^9, 3.749612623366857*^9}, {3.749659261553111*^9, 
   3.749659261874166*^9}, 3.7496593149860153`*^9, {3.749709676738171*^9, 
   3.7497096899299917`*^9}, {3.749709725242612*^9, 3.749709725641431*^9}, 
   3.749709807924766*^9, {3.74971942153563*^9, 3.7497194229036818`*^9}, 
   3.7497195133932333`*^9}],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"ImVsTab", "[", 
    RowBox[{"mD1_", ",", "u1_", ",", "\[Sigma]1_", ",", "T1_"}], "]"}], ":=", 
   
   RowBox[{"Block", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{"u", "=", "u1"}], ",", 
       RowBox[{"mD", "=", "mD1"}], ",", 
       RowBox[{"\[Sigma]", "=", "\[Sigma]1"}], ",", 
       RowBox[{"T", "=", "T1"}], ",", "tab0", ",", "tab1", ",", "inter0", ",",
        "inter1", ",", "inter2", ",", "temp", ",", "tab2"}], "}"}], ",", 
     RowBox[{
      RowBox[{"tab0", "=", 
       RowBox[{"Table", "[", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"r", ",", 
           RowBox[{"4", "\[Pi]", " ", "\[Sigma]", " ", 
            SuperscriptBox["r", "2"], 
            RowBox[{"\[Epsilon]Imp", "[", 
             RowBox[{"r", ",", "mD", ",", "u", ",", "T"}], "]"}]}]}], "}"}], 
         ",", 
         RowBox[{"{", 
          RowBox[{"r", ",", 
           SuperscriptBox["10", 
            RowBox[{"-", "10"}]], ",", "50", ",", 
           RowBox[{"1", "/", "10"}]}], "}"}]}], "]"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"inter0", "=", 
       RowBox[{"Interpolation", "[", "tab0", "]"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"inter1", "[", "r_", "]"}], ":=", 
       RowBox[{"Quiet", "[", 
        RowBox[{"NIntegrate", "[", 
         RowBox[{
          RowBox[{"inter0", "[", "r1", "]"}], ",", 
          RowBox[{"{", 
           RowBox[{"r1", ",", 
            SuperscriptBox["10", 
             RowBox[{"-", "10"}]], ",", "r"}], "}"}]}], "]"}], "]"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"temp", "=", 
       RowBox[{"inter1", "[", 
        SuperscriptBox["10", 
         RowBox[{"-", "10"}]], "]"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"tab1", "=", 
       RowBox[{"ParallelTable", "[", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"r", ",", 
           RowBox[{
            RowBox[{"inter1", "[", "r", "]"}], "-", "temp"}]}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"r", ",", 
           SuperscriptBox["10", 
            RowBox[{"-", "10"}]], ",", "50", ",", 
           RowBox[{"1", "/", "10"}]}], "}"}]}], "]"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"inter1", "=", 
       RowBox[{"Interpolation", "[", "tab1", "]"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"inter2", "[", "r_", "]"}], ":=", 
       RowBox[{"Quiet", "[", 
        RowBox[{"NIntegrate", "[", 
         RowBox[{
          RowBox[{"inter1", "[", "r1", "]"}], ",", 
          RowBox[{"{", 
           RowBox[{"r1", ",", 
            SuperscriptBox["10", 
             RowBox[{"-", "10"}]], ",", "r"}], "}"}]}], "]"}], "]"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"tab2", "=", 
       RowBox[{"ParallelTable", "[", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"r", ",", 
           RowBox[{"inter2", "[", "r", "]"}]}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"r", ",", 
           SuperscriptBox["10", 
            RowBox[{"-", "10"}]], ",", "50", ",", 
           RowBox[{"1", "/", "10"}]}], "}"}]}], "]"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"Export", "[", 
       RowBox[{
        RowBox[{"\"\<vel_pot_perp/ImVsu\>\"", "<>", 
         RowBox[{"ToString", "[", 
          RowBox[{"Round", "[", 
           RowBox[{"100", " ", "u"}], "]"}], "]"}], "<>", "\"\<u.dat\>\""}], 
        ",", "tab2"}], "]"}], ";"}]}], "]"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.7453831005455914`*^9, 3.745383138661728*^9}, {
   3.745383312376183*^9, 3.74538334437337*^9}, {3.7453836903426113`*^9, 
   3.745383700509996*^9}, {3.745383888049996*^9, 3.7453838920497932`*^9}, {
   3.745384456942053*^9, 3.745384462717682*^9}, {3.745385041376384*^9, 
   3.7453850447607927`*^9}, {3.745385110730214*^9, 3.745385155644156*^9}, {
   3.745385388111433*^9, 3.745385411593401*^9}, {3.7453875595914288`*^9, 
   3.745387568075132*^9}, 3.745389177212406*^9, {3.7453901984733753`*^9, 
   3.745390202887982*^9}, {3.745390355427387*^9, 3.745390388219348*^9}, {
   3.7453977096680326`*^9, 3.745397725914731*^9}, {3.745397755948641*^9, 
   3.745397756084126*^9}, {3.7453980995991077`*^9, 3.745398113870977*^9}, {
   3.745399156102378*^9, 3.745399178169222*^9}, {3.745399342881937*^9, 
   3.745399361912752*^9}, {3.745401796965457*^9, 3.7454018195641527`*^9}, {
   3.745401971762494*^9, 3.745401971914714*^9}, {3.745404041771303*^9, 
   3.745404151470154*^9}, {3.745404384229478*^9, 3.745404389436048*^9}, {
   3.7454045122009163`*^9, 3.7454045237036552`*^9}, {3.745404614275045*^9, 
   3.7454046169752293`*^9}, {3.745404890358831*^9, 3.745404914872879*^9}, {
   3.7454740207870693`*^9, 3.745474024498345*^9}, {3.745477052572796*^9, 
   3.745477084925427*^9}, {3.745583208377653*^9, 3.74558321316575*^9}, {
   3.7461777044683733`*^9, 3.746177794182501*^9}, {3.746360152439383*^9, 
   3.746360194120142*^9}, 3.747138517796213*^9, {3.74714032667677*^9, 
   3.747140456145793*^9}, {3.747142006921813*^9, 3.7471420095970497`*^9}, {
   3.7471420459327374`*^9, 3.747142070011909*^9}, {3.747142963611829*^9, 
   3.7471429679068823`*^9}, {3.747329490809226*^9, 3.7473294977769136`*^9}, {
   3.747458708309948*^9, 3.747458716523738*^9}, {3.747458783591525*^9, 
   3.747458787423175*^9}, {3.747458847768239*^9, 3.747458887920331*^9}, {
   3.747458940561996*^9, 3.747458944633296*^9}, {3.7474592066074753`*^9, 
   3.74745921250218*^9}, {3.747459387579301*^9, 3.747459391009719*^9}, {
   3.748450903768133*^9, 3.748450907542585*^9}, {3.7484510000627728`*^9, 
   3.748451033580184*^9}, {3.748456282411323*^9, 3.7484562828912697`*^9}, {
   3.748456340716448*^9, 3.748456344192161*^9}, {3.748456392965889*^9, 
   3.748456393348927*^9}, {3.748456492880068*^9, 3.748456541864429*^9}, {
   3.748456593905673*^9, 3.748456610377811*^9}, {3.749153597093884*^9, 
   3.749153621958075*^9}, {3.749153935907349*^9, 3.749153941020252*^9}, {
   3.749187135207795*^9, 3.74918713553677*^9}, {3.749581856519682*^9, 
   3.749581857664353*^9}, {3.749612630887063*^9, 3.7496126481429253`*^9}, {
   3.749659264625359*^9, 3.749659265160788*^9}, {3.749709838636956*^9, 
   3.74970984278293*^9}, {3.7497144410793867`*^9, 3.7497144462364817`*^9}}]
}, Closed]],

Cell[CellGroupData[{

Cell["Make potentials", "Subsection",
 CellChangeTimes->{{3.745471833598156*^9, 3.745471838992208*^9}, {
  3.747482702323744*^9, 3.747482702739996*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"uscan", "=", 
  RowBox[{"Join", "[", 
   RowBox[{
    RowBox[{"Table", "[", 
     RowBox[{"i", ",", 
      RowBox[{"{", 
       RowBox[{"i", ",", 
        RowBox[{"1", "/", "10"}], ",", 
        RowBox[{"9", "/", "10"}], ",", 
        RowBox[{"1", "/", "10"}]}], "}"}]}], "]"}], ",", 
    RowBox[{"{", 
     RowBox[{"99", "/", "100"}], "}"}]}], "]"}]}]], "Input",
 CellChangeTimes->{{3.749612678485621*^9, 3.7496126878892603`*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   FractionBox["1", "10"], ",", 
   FractionBox["1", "5"], ",", 
   FractionBox["3", "10"], ",", 
   FractionBox["2", "5"], ",", 
   FractionBox["1", "2"], ",", 
   FractionBox["3", "5"], ",", 
   FractionBox["7", "10"], ",", 
   FractionBox["4", "5"], ",", 
   FractionBox["9", "10"], ",", 
   FractionBox["99", "100"]}], "}"}]], "Output",
 CellChangeTimes->{3.749612689354959*^9, 3.749646562747159*^9, 
  3.7496557274840384`*^9, 3.7496592468425207`*^9, 3.7496593187475977`*^9, 
  3.749710347675283*^9}]
}, Open  ]],

Cell[BoxData[
 RowBox[{"Do", "[", 
  RowBox[{
   RowBox[{
    RowBox[{"ReVsTab", "[", 
     RowBox[{
      RowBox[{"mDcalmu", "[", 
       RowBox[{"0.155", ",", "0", ",", 
        RowBox[{"kfinalu", "[", 
         RowBox[{"[", "1", "]"}], "]"}], ",", 
        RowBox[{"kfinalu", "[", 
         RowBox[{"[", "2", "]"}], "]"}]}], "]"}], ",", 
      RowBox[{"uscan", "[", 
       RowBox[{"[", "i", "]"}], "]"}], ",", 
      RowBox[{"\[Sigma]cont", "[", 
       RowBox[{"[", "1", "]"}], "]"}]}], "]"}], ";"}], ",", 
   RowBox[{"{", 
    RowBox[{"i", ",", "1", ",", 
     RowBox[{"Length", "[", "uscan", "]"}]}], "}"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.749612692629347*^9, 3.749612721727373*^9}, {
  3.749659252879689*^9, 3.749659253183105*^9}, {3.749710353205751*^9, 
  3.749710355485579*^9}, {3.749719505680402*^9, 3.749719508136232*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Do", "[", 
  RowBox[{
   RowBox[{
    RowBox[{"Quiet", "[", 
     RowBox[{"ImVsTab", "[", 
      RowBox[{
       RowBox[{"SetPrecision", "[", 
        RowBox[{
         RowBox[{"mDcalmu", "[", 
          RowBox[{"0.155", ",", "0", ",", 
           RowBox[{"kfinalu", "[", 
            RowBox[{"[", "1", "]"}], "]"}], ",", 
           RowBox[{"kfinalu", "[", 
            RowBox[{"[", "2", "]"}], "]"}]}], "]"}], ",", "30"}], "]"}], ",", 
       
       RowBox[{"uscan", "[", 
        RowBox[{"[", "i", "]"}], "]"}], ",", 
       RowBox[{"SetPrecision", "[", 
        RowBox[{
         RowBox[{"\[Sigma]cont", "[", 
          RowBox[{"[", "1", "]"}], "]"}], ",", "30"}], "]"}], ",", 
       RowBox[{"155", "/", "1000"}]}], "]"}], "]"}], ";"}], ",", 
   RowBox[{"{", 
    RowBox[{"i", ",", "1", ",", 
     RowBox[{"Length", "[", "uscan", "]"}]}], "}"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.749612738696021*^9, 3.7496127656281013`*^9}, 
   3.7496129013080177`*^9, {3.749659277776729*^9, 3.7496592783881273`*^9}}],

Cell[BoxData["$Aborted"], "Output",
 CellChangeTimes->{3.749725763106456*^9}]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{"ImVcTab", "[", "n_", "]"}], ":=", 
  RowBox[{"Block", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"temp", ",", "temp1"}], "}"}], ",", 
    RowBox[{
     RowBox[{"temp", "=", 
      RowBox[{"ImVcp", "[", 
       RowBox[{
        SuperscriptBox["10", 
         RowBox[{"-", "10"}]], ",", 
        RowBox[{"SetPrecision", "[", 
         RowBox[{
          RowBox[{"mDcalmu", "[", 
           RowBox[{"0.155", ",", "0", ",", 
            RowBox[{"kfinalu", "[", 
             RowBox[{"[", "1", "]"}], "]"}], ",", 
            RowBox[{"kfinalu", "[", 
             RowBox[{"[", "2", "]"}], "]"}]}], "]"}], ",", "30"}], "]"}], ",", 
        RowBox[{"uscan", "[", 
         RowBox[{"[", "n", "]"}], "]"}], ",", 
        RowBox[{"SetPrecision", "[", 
         RowBox[{
          RowBox[{"\[Alpha]cont", "[", 
           RowBox[{"[", "1", "]"}], "]"}], ",", "30"}], "]"}], ",", 
        RowBox[{"155", "/", "1000"}]}], "]"}]}], ";", 
     RowBox[{"temp1", "=", 
      RowBox[{"ParallelTable", "[", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"r", ",", 
          RowBox[{
           RowBox[{"ImVcp", "[", 
            RowBox[{"r", ",", 
             RowBox[{"SetPrecision", "[", 
              RowBox[{
               RowBox[{"mDcalmu", "[", 
                RowBox[{"0.155", ",", "0", ",", 
                 RowBox[{"kfinalu", "[", 
                  RowBox[{"[", "1", "]"}], "]"}], ",", 
                 RowBox[{"kfinalu", "[", 
                  RowBox[{"[", "2", "]"}], "]"}]}], "]"}], ",", "30"}], "]"}],
              ",", 
             RowBox[{"uscan", "[", 
              RowBox[{"[", "n", "]"}], "]"}], ",", 
             RowBox[{"SetPrecision", "[", 
              RowBox[{
               RowBox[{"\[Alpha]cont", "[", 
                RowBox[{"[", "1", "]"}], "]"}], ",", "30"}], "]"}], ",", 
             RowBox[{"155", "/", "1000"}]}], "]"}], "-", "temp"}]}], "}"}], 
        ",", 
        RowBox[{"{", 
         RowBox[{"r", ",", 
          RowBox[{"1", "/", "1000"}], ",", "60", ",", 
          RowBox[{"1", "/", "100"}]}], "}"}]}], "]"}]}], ";", "\n", 
     RowBox[{"Export", "[", 
      RowBox[{
       RowBox[{"\"\<vel_pot_perp/ImVcu\>\"", "<>", 
        RowBox[{"ToString", "[", 
         RowBox[{"Round", "[", 
          RowBox[{"100", " ", 
           RowBox[{"uscan", "[", 
            RowBox[{"[", "n", "]"}], "]"}]}], "]"}], "]"}], "<>", 
        "\"\<u.dat\>\""}], ",", "temp1"}], "]"}], ";"}]}], "]"}]}]], "Input",
 CellChangeTimes->{{3.749612777504025*^9, 3.749612885682765*^9}, {
   3.749613092055283*^9, 3.749613094167004*^9}, {3.749659333672391*^9, 
   3.7496593429443293`*^9}, 3.749659381104273*^9, {3.749710463871516*^9, 
   3.749710488848255*^9}, {3.749719602274764*^9, 3.749719607946183*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Do", "[", 
  RowBox[{
   RowBox[{"ImVcTab", "[", "i", "]"}], ",", 
   RowBox[{"{", 
    RowBox[{"i", ",", "1", ",", 
     RowBox[{"Length", "[", "uscan", "]"}]}], "}"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.74961292228799*^9, 3.749612942099901*^9}, 
   3.749710492439336*^9, {3.7497257776801453`*^9, 3.749725779721375*^9}}],

Cell[BoxData["$Aborted"], "Output",
 CellChangeTimes->{3.749736703901561*^9}]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{"ReVcTab", "[", "n_", "]"}], ":=", 
  RowBox[{"Block", "[", 
   RowBox[{
    RowBox[{"{", "temp", "}"}], ",", 
    RowBox[{
     RowBox[{"temp", "=", 
      RowBox[{"Join", "[", 
       RowBox[{
        RowBox[{"ParallelTable", "[", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{"r", ",", 
            RowBox[{"ReVcp", "[", 
             RowBox[{"r", ",", 
              RowBox[{"mDcalmu", "[", 
               RowBox[{"0.155", ",", "0", ",", 
                RowBox[{"kfinalu", "[", 
                 RowBox[{"[", "1", "]"}], "]"}], ",", 
                RowBox[{"kfinalu", "[", 
                 RowBox[{"[", "2", "]"}], "]"}]}], "]"}], ",", 
              RowBox[{"uscan", "[", 
               RowBox[{"[", "n", "]"}], "]"}], ",", 
              RowBox[{"\[Alpha]cont", "[", 
               RowBox[{"[", "1", "]"}], "]"}], ",", 
              RowBox[{"ccont", "[", 
               RowBox[{"[", "1", "]"}], "]"}]}], "]"}]}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{"r", ",", 
            RowBox[{"1", "/", "1000"}], ",", "100", ",", 
            RowBox[{"1", "/", "100"}]}], "}"}]}], "]"}], ",", 
        RowBox[{"{", 
         RowBox[{"{", 
          RowBox[{"500", ",", 
           RowBox[{"ReVcp", "[", 
            RowBox[{"500", ",", 
             RowBox[{"mDcalmu", "[", 
              RowBox[{"0.155", ",", "0", ",", 
               RowBox[{"kfinalu", "[", 
                RowBox[{"[", "1", "]"}], "]"}], ",", 
               RowBox[{"kfinalu", "[", 
                RowBox[{"[", "2", "]"}], "]"}]}], "]"}], ",", 
             RowBox[{"uscan", "[", 
              RowBox[{"[", "n", "]"}], "]"}], ",", 
             RowBox[{"\[Alpha]cont", "[", 
              RowBox[{"[", "1", "]"}], "]"}], ",", 
             RowBox[{"ccont", "[", 
              RowBox[{"[", "1", "]"}], "]"}]}], "]"}]}], "}"}], "}"}]}], 
       "]"}]}], ";", 
     RowBox[{"Export", "[", 
      RowBox[{
       RowBox[{"\"\<vel_pot_perp/ReVcu\>\"", "<>", 
        RowBox[{"ToString", "[", 
         RowBox[{"Round", "[", 
          RowBox[{"100", " ", 
           RowBox[{"uscan", "[", 
            RowBox[{"[", "n", "]"}], "]"}]}], "]"}], "]"}], "<>", 
        "\"\<u.dat\>\""}], ",", "temp"}], "]"}], ";"}]}], "]"}]}]], "Input",
 CellChangeTimes->{{3.7496129670279913`*^9, 3.749613117007798*^9}, {
   3.749659400628265*^9, 3.749659413224476*^9}, {3.749710497744438*^9, 
   3.749710509951561*^9}, 3.749719618522403*^9, 3.74971969655626*^9}],

Cell[BoxData[
 RowBox[{"Do", "[", 
  RowBox[{
   RowBox[{"ReVcTab", "[", "i", "]"}], ",", 
   RowBox[{"{", 
    RowBox[{"i", ",", "1", ",", 
     RowBox[{"Length", "[", "uscan", "]"}]}], "}"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.7496131304871473`*^9, 3.749613130558526*^9}, 
   3.74971051385854*^9}]
}, Closed]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Plot potentials", "Section",
 CellChangeTimes->{{3.745472165420155*^9, 3.745472170532083*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"uscan", "=", 
  RowBox[{"Join", "[", 
   RowBox[{
    RowBox[{"Table", "[", 
     RowBox[{"i", ",", 
      RowBox[{"{", 
       RowBox[{"i", ",", 
        RowBox[{"1", "/", "10"}], ",", 
        RowBox[{"9", "/", "10"}], ",", 
        RowBox[{"1", "/", "10"}]}], "}"}]}], "]"}], ",", 
    RowBox[{"{", 
     RowBox[{"99", "/", "100"}], "}"}]}], "]"}]}]], "Input",
 CellChangeTimes->{{3.74955562012106*^9, 3.74955562143828*^9}, {
  3.7495556587431097`*^9, 3.749555729736457*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   FractionBox["1", "10"], ",", 
   FractionBox["1", "5"], ",", 
   FractionBox["3", "10"], ",", 
   FractionBox["2", "5"], ",", 
   FractionBox["1", "2"], ",", 
   FractionBox["3", "5"], ",", 
   FractionBox["7", "10"], ",", 
   FractionBox["4", "5"], ",", 
   FractionBox["9", "10"], ",", 
   FractionBox["99", "100"]}], "}"}]], "Output",
 CellChangeTimes->{{3.7495556859234333`*^9, 3.749555730368223*^9}, 
   3.749563185873513*^9, 3.7495637804611483`*^9, 3.749599384105893*^9, 
   3.749612378535961*^9, 3.749655731264439*^9, 3.749676646572256*^9, 
   3.7497433080972633`*^9}]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{"Block", "[", 
   RowBox[{
    RowBox[{"{", "data", "}"}], ",", 
    RowBox[{"Do", "[", 
     RowBox[{
      RowBox[{
       RowBox[{"data", "=", 
        RowBox[{"ToExpression", "[", 
         RowBox[{"Import", "[", 
          RowBox[{"\"\<vel_pot_perp/ReVsu\>\"", "<>", 
           RowBox[{"ToString", "[", 
            RowBox[{"Round", "[", 
             RowBox[{"100", 
              RowBox[{"uscan", "[", 
               RowBox[{"[", "n", "]"}], "]"}]}], "]"}], "]"}], "<>", 
           "\"\<.dat\>\""}], "]"}], "]"}]}], ";", 
       RowBox[{"data", "=", 
        RowBox[{"Append", "[", 
         RowBox[{"data", ",", 
          RowBox[{"{", 
           RowBox[{"20000", ",", 
            RowBox[{"data", "[", 
             RowBox[{"[", 
              RowBox[{
               RowBox[{"-", "1"}], ",", "2"}], "]"}], "]"}]}], "}"}]}], 
         "]"}]}], ";", 
       RowBox[{
        RowBox[{"ReVsu", "[", "n", "]"}], "=", 
        RowBox[{"Interpolation", "[", 
         RowBox[{"data", ",", 
          RowBox[{"InterpolationOrder", "\[Rule]", "1"}]}], "]"}]}]}], ",", 
      RowBox[{"{", 
       RowBox[{"n", ",", 
        RowBox[{"Length", "[", "uscan", "]"}]}], "}"}]}], "]"}]}], "]"}], 
  ";"}]], "Input",
 CellChangeTimes->{{3.746273043134018*^9, 3.7462731014710627`*^9}, {
   3.746273301287758*^9, 3.746273304882516*^9}, {3.746273761020192*^9, 
   3.746273876685227*^9}, {3.7462744640649643`*^9, 3.746274465417224*^9}, {
   3.746349735495809*^9, 3.746349736436407*^9}, 3.746349774584558*^9, {
   3.747480794219287*^9, 3.747480812144912*^9}, {3.747546497327075*^9, 
   3.747546502341762*^9}, {3.7477311702504187`*^9, 3.747731172776266*^9}, {
   3.747933590766211*^9, 3.7479335908605967`*^9}, {3.747933831643701*^9, 
   3.7479338321885357`*^9}, {3.747935743003852*^9, 3.747935745435129*^9}, {
   3.747980226650998*^9, 3.747980227430276*^9}, {3.74819373389242*^9, 
   3.748193736020507*^9}, {3.74955561414298*^9, 3.749555616431025*^9}, {
   3.749555735339233*^9, 3.749555770441473*^9}, {3.749563199290225*^9, 
   3.7495632002283087`*^9}, {3.749582016224145*^9, 3.7495820173360643`*^9}, 
   3.7496465801174393`*^9, 3.749655737246266*^9, {3.749676660140545*^9, 
   3.7496766705804367`*^9}, 3.749743316120388*^9, {3.7497433971085033`*^9, 
   3.749743397703014*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"Block", "[", 
   RowBox[{
    RowBox[{"{", "data", "}"}], ",", 
    RowBox[{"Do", "[", 
     RowBox[{
      RowBox[{
       RowBox[{"data", "=", 
        RowBox[{"ToExpression", "[", 
         RowBox[{"Import", "[", 
          RowBox[{"\"\<vel_pot_perp/ReVcu\>\"", "<>", 
           RowBox[{"ToString", "[", 
            RowBox[{"Round", "[", 
             RowBox[{"100", 
              RowBox[{"uscan", "[", 
               RowBox[{"[", "n", "]"}], "]"}]}], "]"}], "]"}], "<>", 
           "\"\<.dat\>\""}], "]"}], "]"}]}], ";", 
       RowBox[{"data", "=", 
        RowBox[{"Append", "[", 
         RowBox[{"data", ",", 
          RowBox[{"{", 
           RowBox[{"20000", ",", 
            RowBox[{"data", "[", 
             RowBox[{"[", 
              RowBox[{
               RowBox[{"-", "1"}], ",", "2"}], "]"}], "]"}]}], "}"}]}], 
         "]"}]}], ";", 
       RowBox[{
        RowBox[{"ReVcu", "[", "n", "]"}], "=", 
        RowBox[{"Interpolation", "[", 
         RowBox[{"data", ",", 
          RowBox[{"InterpolationOrder", "\[Rule]", "1"}]}], "]"}]}]}], ",", 
      RowBox[{"{", 
       RowBox[{"n", ",", 
        RowBox[{"Length", "[", "uscan", "]"}]}], "}"}]}], "]"}]}], "]"}], 
  ";"}]], "Input",
 CellChangeTimes->{{3.7495557941302347`*^9, 3.749555811247836*^9}, 
   3.7495820219055367`*^9, 3.749646581533305*^9, 3.749655740219005*^9, {
   3.749676660636319*^9, 3.749676674035551*^9}, 3.7497433164883823`*^9, {
   3.749743425569934*^9, 3.7497434295459146`*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"Block", "[", 
   RowBox[{
    RowBox[{"{", "data", "}"}], ",", 
    RowBox[{"Do", "[", 
     RowBox[{
      RowBox[{
       RowBox[{"data", "=", 
        RowBox[{"ToExpression", "[", 
         RowBox[{"Import", "[", 
          RowBox[{"\"\<vel_pot_perp/ImVcu\>\"", "<>", 
           RowBox[{"ToString", "[", 
            RowBox[{"Round", "[", 
             RowBox[{"100", 
              RowBox[{"uscan", "[", 
               RowBox[{"[", "n", "]"}], "]"}]}], "]"}], "]"}], "<>", 
           "\"\<.dat\>\""}], "]"}], "]"}]}], ";", 
       RowBox[{"data", "=", 
        RowBox[{"Append", "[", 
         RowBox[{"data", ",", 
          RowBox[{"{", 
           RowBox[{"20000", ",", 
            RowBox[{"data", "[", 
             RowBox[{"[", 
              RowBox[{
               RowBox[{"-", "1"}], ",", "2"}], "]"}], "]"}]}], "}"}]}], 
         "]"}]}], ";", "\[IndentingNewLine]", 
       RowBox[{"data", "=", 
        RowBox[{"Transpose", "[", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"data", "[", 
            RowBox[{"[", 
             RowBox[{"All", ",", "1"}], "]"}], "]"}], ",", 
           RowBox[{"EstimatedBackground", "[", 
            RowBox[{"data", "[", 
             RowBox[{"[", 
              RowBox[{"All", ",", "2"}], "]"}], "]"}], "]"}]}], "}"}], 
         "]"}]}], ";", 
       RowBox[{
        RowBox[{"ImVcu", "[", "n", "]"}], "=", 
        RowBox[{"Interpolation", "[", 
         RowBox[{"data", ",", 
          RowBox[{"InterpolationOrder", "\[Rule]", "1"}]}], "]"}]}]}], ",", 
      RowBox[{"{", 
       RowBox[{"n", ",", 
        RowBox[{
         RowBox[{"Length", "[", "uscan", "]"}], "-", "1"}]}], "}"}]}], 
     "]"}]}], "]"}], ";"}]], "Input",
 CellChangeTimes->{{3.7495558152765102`*^9, 3.7495558195866003`*^9}, 
   3.749582023609495*^9, {3.749646582701208*^9, 3.749646598976852*^9}, {
   3.749655742690496*^9, 3.749655747784471*^9}, {3.749676661036727*^9, 
   3.749676683227923*^9}, 3.749743316936303*^9, {3.749743438114112*^9, 
   3.749743456739443*^9}, {3.7497435463561974`*^9, 3.74974356037245*^9}, {
   3.74974393843543*^9, 3.749743978027979*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"Block", "[", 
   RowBox[{
    RowBox[{"{", "data", "}"}], ",", 
    RowBox[{"Do", "[", 
     RowBox[{
      RowBox[{
       RowBox[{"data", "=", 
        RowBox[{"ToExpression", "[", 
         RowBox[{"Import", "[", 
          RowBox[{"\"\<vel_pot/ImVsu\>\"", "<>", 
           RowBox[{"ToString", "[", 
            RowBox[{"Round", "[", 
             RowBox[{"100", 
              RowBox[{"uscan", "[", 
               RowBox[{"[", "n", "]"}], "]"}]}], "]"}], "]"}], "<>", 
           "\"\<.dat\>\""}], "]"}], "]"}]}], ";", 
       RowBox[{"data", "=", 
        RowBox[{"Append", "[", 
         RowBox[{"data", ",", 
          RowBox[{"{", 
           RowBox[{"20000", ",", 
            RowBox[{"data", "[", 
             RowBox[{"[", 
              RowBox[{
               RowBox[{"-", "1"}], ",", "2"}], "]"}], "]"}]}], "}"}]}], 
         "]"}]}], ";", 
       RowBox[{
        RowBox[{"ImVsu", "[", "n", "]"}], "=", 
        RowBox[{"Interpolation", "[", 
         RowBox[{"data", ",", 
          RowBox[{"InterpolationOrder", "\[Rule]", "1"}]}], "]"}]}]}], ",", 
      RowBox[{"{", 
       RowBox[{"n", ",", 
        RowBox[{
         RowBox[{"Length", "[", "uscan", "]"}], "-", "1"}]}], "}"}]}], 
     "]"}]}], "]"}], ";"}]], "Input",
 CellChangeTimes->{{3.7495558363015127`*^9, 3.749555839098715*^9}, 
   3.749582025032279*^9, 3.7496465838217773`*^9, 3.7496557568878717`*^9, 
   3.7496766627164516`*^9, 3.749676708628805*^9, 3.749743317592126*^9, {
   3.749743462706509*^9, 3.7497434628024797`*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"Block", "[", 
   RowBox[{
    RowBox[{"{", "data", "}"}], ",", 
    RowBox[{
     RowBox[{"data", "=", 
      RowBox[{
       RowBox[{"ToExpression", "[", 
        RowBox[{"Import", "[", 
         RowBox[{"\"\<vel_pot/ImVsu\>\"", "<>", 
          RowBox[{"ToString", "[", 
           RowBox[{"Round", "[", 
            RowBox[{"100", " ", 
             RowBox[{"uscan", "[", 
              RowBox[{"[", "8", "]"}], "]"}]}], "]"}], "]"}], "<>", 
          "\"\<T250l.dat\>\""}], "]"}], "]"}], "[", 
       RowBox[{"[", 
        RowBox[{";;", "535"}], "]"}], "]"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"data", "=", 
      RowBox[{"Append", "[", 
       RowBox[{"data", ",", 
        RowBox[{"{", 
         RowBox[{"20000", ",", 
          RowBox[{"data", "[", 
           RowBox[{"[", 
            RowBox[{
             RowBox[{"-", "1"}], ",", "2"}], "]"}], "]"}]}], "}"}]}], "]"}]}],
      ";", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"ImVsu", "[", "8", "]"}], "=", 
      RowBox[{"Interpolation", "[", 
       RowBox[{"data", ",", 
        RowBox[{"InterpolationOrder", "\[Rule]", "1"}]}], "]"}]}]}]}], "]"}], 
  ";"}]], "Input",
 CellChangeTimes->{{3.749664293252993*^9, 3.749664293253655*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"uSetS", "=", 
   RowBox[{"{", 
    RowBox[{
    "\"\<1/10\>\"", ",", "\"\<2/10\>\"", ",", "\"\<3/10\>\"", ",", 
     "\"\<4/10\>\"", ",", "\"\<5/10\>\"", ",", "\"\<6/10\>\"", ",", 
     "\"\<7/10\>\"", ",", "\"\<8/10\>\"", ",", "\"\<9/10\>\"", ",", 
     "\"\<99/100\>\"", ",", "\"\<Vac\>\""}], "}"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.747460586427538*^9, 3.747460630758932*^9}, {
  3.7491874531012497`*^9, 3.749187460443824*^9}, {3.749484272737988*^9, 
  3.749484274601769*^9}, {3.749554539914287*^9, 3.7495545400515347`*^9}, {
  3.749646611718093*^9, 3.749646619031501*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"mD1", "=", 
  RowBox[{"mDcalmu", "[", 
   RowBox[{
    RowBox[{"155", "/", "1000"}], ",", "0", ",", 
    RowBox[{"kfinal", "[", 
     RowBox[{"[", "1", "]"}], "]"}], ",", 
    RowBox[{"kfinal", "[", 
     RowBox[{"[", "2", "]"}], "]"}]}], "]"}]}]], "Input",
 CellChangeTimes->{{3.749484623048715*^9, 3.74948462382381*^9}, {
  3.7496466270234203`*^9, 3.749646628846162*^9}, {3.749655763303743*^9, 
  3.7496557636785927`*^9}, {3.749676731589353*^9, 3.749676757077078*^9}, {
  3.74974347129004*^9, 3.749743474890346*^9}}],

Cell[BoxData["0.20741125620493783276998556175385601818561553955078125`30."], \
"Output",
 CellChangeTimes->{{3.749484617406342*^9, 3.7494846245177097`*^9}, 
   3.749554544082851*^9, 3.749555845771331*^9, 3.749555978307867*^9, 
   3.749563212347022*^9, 3.7495637886553392`*^9, 3.749612388119795*^9, {
   3.749646622076098*^9, 3.74964663046338*^9}, 3.7496557642449703`*^9, {
   3.749676729288987*^9, 3.7496767573764753`*^9}, 3.749743475257365*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Plot", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{
      RowBox[{"ReVcu", "[", "1", "]"}], "[", 
      FractionBox["r", "0.197"], "]"}], ",", 
     RowBox[{
      RowBox[{"ReVcu", "[", "2", "]"}], "[", 
      FractionBox["r", "0.197"], "]"}], ",", 
     RowBox[{
      RowBox[{"ReVcu", "[", "3", "]"}], "[", 
      FractionBox["r", "0.197"], "]"}], ",", 
     RowBox[{
      RowBox[{"ReVcu", "[", "4", "]"}], "[", 
      FractionBox["r", "0.197"], "]"}], ",", 
     RowBox[{
      RowBox[{"ReVcu", "[", "5", "]"}], "[", 
      FractionBox["r", "0.197"], "]"}], ",", 
     RowBox[{
      RowBox[{"ReVcu", "[", "6", "]"}], "[", 
      FractionBox["r", "0.197"], "]"}], ",", 
     RowBox[{
      RowBox[{"ReVcu", "[", "7", "]"}], "[", 
      FractionBox["r", "0.197"], "]"}], ",", 
     RowBox[{
      RowBox[{"ReVcu", "[", "8", "]"}], "[", 
      FractionBox["r", "0.197"], "]"}], ",", 
     RowBox[{
      RowBox[{"ReVcu", "[", "9", "]"}], "[", 
      FractionBox["r", "0.197"], "]"}], ",", 
     RowBox[{
      RowBox[{"ReVcu", "[", "9", "]"}], "[", 
      FractionBox["r", "0.197"], "]"}], ",", 
     RowBox[{"ReV", "[", 
      RowBox[{
       FractionBox["r", "0.197"], ",", "mD1", ",", 
       RowBox[{"\[Alpha]cont", "[", 
        RowBox[{"[", "1", "]"}], "]"}], ",", "0", ",", 
       RowBox[{"ccont", "[", 
        RowBox[{"[", "1", "]"}], "]"}]}], "]"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"r", ",", "0", ",", "20"}], "}"}], ",", 
   RowBox[{"AxesStyle", "\[Rule]", 
    RowBox[{"Directive", "[", 
     RowBox[{
      RowBox[{"FontSize", "\[Rule]", "25"}], ",", 
      RowBox[{"Thickness", "\[Rule]", "0.004"}], ",", 
      RowBox[{"FontFamily", "\[Rule]", "\"\<Helvetica\>\""}], ",", "Black"}], 
     "]"}]}], ",", 
   RowBox[{"BaseStyle", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"FontSize", "\[Rule]", "14"}], "}"}]}], ",", 
   RowBox[{"AspectRatio", "\[Rule]", "0.85"}], ",", 
   RowBox[{"AxesLabel", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"\"\<r [fm]\>\"", ",", "\"\<ReVc [GeV]\>\""}], "}"}]}], ",", 
   RowBox[{"ImageSize", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"1000", ",", "1000"}], "}"}]}], ",", 
   RowBox[{"PlotLegends", "\[Rule]", 
    RowBox[{"Placed", "[", 
     RowBox[{
      RowBox[{"PointLegend", "[", 
       RowBox[{"uSetS", ",", " ", 
        RowBox[{"LegendMarkerSize", "\[Rule]", "25"}], ",", 
        RowBox[{"LegendLayout", "\[Rule]", 
         RowBox[{"{", 
          RowBox[{"\"\<Row\>\"", ",", "3"}], "}"}]}]}], "]"}], ",", 
      RowBox[{"{", 
       RowBox[{"0.7", ",", "0.2"}], "}"}]}], "]"}]}], ",", 
   RowBox[{"BaseStyle", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"FontSize", "\[Rule]", "14"}], "}"}]}]}], "]"}]], "Input",
 CellChangeTimes->{{3.7454725848134317`*^9, 3.7454727471218147`*^9}, {
   3.747460775433139*^9, 3.747460838555262*^9}, {3.749187660129362*^9, 
   3.749187672920968*^9}, {3.7492017108775377`*^9, 3.749201710979155*^9}, {
   3.749202049323238*^9, 3.749202085355199*^9}, {3.7494842775471573`*^9, 
   3.749484293146789*^9}, 3.749484356213463*^9, {3.749484408934713*^9, 
   3.749484424990065*^9}, {3.749484474407545*^9, 3.749484496664237*^9}, {
   3.749484628282395*^9, 3.749484628761776*^9}, {3.749554548691867*^9, 
   3.749554553333022*^9}, {3.7495558591404657`*^9, 3.7495558916291924`*^9}, {
   3.7495632216343718`*^9, 3.749563234189979*^9}, {3.749572934934967*^9, 
   3.749572947686421*^9}, {3.7496124162127743`*^9, 3.7496124163708153`*^9}}],

Cell[BoxData[
 TagBox[
  GraphicsBox[{{{{}, {}, 
      TagBox[
       {RGBColor[0.368417, 0.506779, 0.709798], AbsoluteThickness[1.6], 
        Opacity[1.], LineBox[CompressedData["
1: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
/x9vzVRq
         "]]},
       Annotation[#, "Charting`Private`Tag$3232#1"]& ], 
      TagBox[
       {RGBColor[0.880722, 0.611041, 0.142051], AbsoluteThickness[1.6], 
        Opacity[1.], LineBox[CompressedData["
1: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
         "]]},
       Annotation[#, "Charting`Private`Tag$3232#2"]& ], 
      TagBox[
       {RGBColor[0.560181, 0.691569, 0.194885], AbsoluteThickness[1.6], 
        Opacity[1.], LineBox[CompressedData["
1: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
05zG0uoqA8SDBY9S/h8wfS1R
         "]]},
       Annotation[#, "Charting`Private`Tag$3232#3"]& ], 
      TagBox[
       {RGBColor[0.922526, 0.385626, 0.209179], AbsoluteThickness[1.6], 
        Opacity[1.], LineBox[CompressedData["
1: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
         "]]},
       Annotation[#, "Charting`Private`Tag$3232#4"]& ], 
      TagBox[
       {RGBColor[0.528488, 0.470624, 0.701351], AbsoluteThickness[1.6], 
        Opacity[1.], LineBox[CompressedData["
1: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
mQDbugRXlv8PczgEEA==
         "]]},
       Annotation[#, "Charting`Private`Tag$3232#5"]& ], 
      TagBox[
       {RGBColor[0.772079, 0.431554, 0.102387], AbsoluteThickness[1.6], 
        Opacity[1.], LineBox[CompressedData["
1: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
         "]]},
       Annotation[#, "Charting`Private`Tag$3232#6"]& ], 
      TagBox[
       {RGBColor[0.363898, 0.618501, 0.782349], AbsoluteThickness[1.6], 
        Opacity[1.], LineBox[CompressedData["
1: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
KxsbGGC61T2k/wdlRpVT
         "]]},
       Annotation[#, "Charting`Private`Tag$3232#7"]& ], 
      TagBox[
       {RGBColor[1, 0.75, 0], AbsoluteThickness[1.6], Opacity[1.], 
        LineBox[CompressedData["
1:eJwV1Xk01N0bAHBN9iXNMEyWIdvUGOv3lVA8diH1WhIhplJUJAlljxAiaxRe
S1pEsvSL4itJifCVSpJIeJu8RSKqU7/7/eOeez7nnnPvc59z7/Os5wY7H6Dw
8fHdQ4OcQyMajlr0CMBTB/3bAXEEXnNIX05zXgCa+TLd18YSOPeNK766VxA0
OrrvzIQTuOiliaMhrwVhV1VSczRyvWeQwrtpQfiv2zxcGnn1SHJkyyohEDo+
89vyJIFXDrdgIYZC8Dtrzrn6BIFPv1C+NlYuBBrVV+MLQwg8cGA2qzlSGDIi
NeJ5hwmclhVpxkoWBvNBda9c5JYdgp9zc4UhxXbikSmyWL+Sw7FbwmD1cZqT
F0jgN585C7CmhMG69ZiFXQCBf356NzJ3pwgkq4uc6fIn8JBHidxglijwgvNi
FLgEzvxgI7iEiYJH0XmXET8C76GI3IgCUbjueTXxIrI6ZMyneojCWczsBx35
dUteXGWaKESFj6rSfQncvK6q5PUXUXgcr/VC1YfAqZeejFjeFYMle/O4GE8C
b2s+F/O0UwzWbMr/nw3y4WFHlb8JMZCdjzGVRH5EJwJ8eGJg2qeqUuZB4JFZ
r5cjFMRhxn9y25PdBD6RxJOpjROHZ2nud1TdCfz2MXEXxjYJEEj41C/mSuC9
RVKRNbskwLKO4j/sgvLZKVdqsV8CSgqtza8gy63b+OlIrAQEfd/YZYac+MD6
zIMmCciSkBGOcCbwXbTYhkCVNaDnp7bwbSeB/2iYl2r9uQYKHw0HKzoRuPTY
spGziCS8PZo3O7+dwLWF+XxnZCQhmNpc2oW8z2vNTaq+JLDqsmqPIffya1r5
H5KE7IZq38eOBF7itv+E5AtJsOZ71RXjQOBlpw/zdN3XQtiKlb3UNgLXbRdZ
TvZeC8EHTUvm7Ai8nf+awLt9ayFhiwujD3k844NyxrG1UFBkejYVmfmPt/vH
1LUgZR9mREEu6tzRWXZ/LaxOC237YUPg2RJ/ldBUqJCmGD4qaE3gKs6D1QEb
qGBzfe7hv1Yof/nHmtu1qVA2uLnnKfKAUs1QkAkVjlSvbM1EXqOvIdbjSoUs
98rr65DP7WJEnEmmwt4d8yf+siTwhNJff3+bpcJyWeWNOHMC36l7N0RzgQpj
eYbT/sjMB6EXuCtUoDAcTLcjt7znDQwI0ID+ImWLHPJX9dc7apg0cMp1C2sC
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
/wMhFpF3
         "]]},
       Annotation[#, "Charting`Private`Tag$3232#8"]& ], 
      TagBox[
       {RGBColor[0.647624, 0.37816, 0.614037], AbsoluteThickness[1.6], 
        Opacity[1.], LineBox[CompressedData["
1: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
UZv/+ZOCpIHVg7T/D+YUbUY=
         "]]},
       Annotation[#, "Charting`Private`Tag$3232#9"]& ], 
      TagBox[
       {RGBColor[0.571589, 0.586483, 0.], AbsoluteThickness[1.6], Opacity[1.],
         LineBox[CompressedData["
1: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
UZv/+ZOCpIHVg7T/D+YUbUY=
         "]]},
       Annotation[#, "Charting`Private`Tag$3232#10"]& ], 
      TagBox[
       {RGBColor[0.915, 0.3325, 0.2125], AbsoluteThickness[1.6], Opacity[1.], 
        LineBox[CompressedData["
1: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
gssb/u+aKbXfi4tGUMvxf/8P3j+b1w==
         "]]},
       Annotation[#, "Charting`Private`Tag$3232#11"]& ]}, {}, {}}, InsetBox[
     TemplateBox[{
      "\"1/10\"","\"2/10\"","\"3/10\"","\"4/10\"","\"5/10\"","\"6/10\"",
       "\"7/10\"","\"8/10\"","\"9/10\"","\"99/100\"","\"Vac\""},
      "PointLegend",
      DisplayFunction->(FormBox[
        StyleBox[
         StyleBox[
          PaneBox[
           TagBox[
            GridBox[{{
               TagBox[
                GridBox[{{
                   GraphicsBox[{{}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], FontSize -> 14, 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], FontSize -> 14, 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], 
                    PointBox[
                    NCache[{
                    Scaled[{
                    Rational[1, 2], 
                    Rational[1, 2]}]}, {
                    Scaled[{0.5, 0.5}]}]]}}}, AspectRatio -> Full, 
                    ImageSize -> {25, 25}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.33999999999999997`] -> 
                    Baseline)], #, 
                   GraphicsBox[{{}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], FontSize -> 14, 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], FontSize -> 14, 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], 
                    PointBox[
                    NCache[{
                    Scaled[{
                    Rational[1, 2], 
                    Rational[1, 2]}]}, {
                    Scaled[{0.5, 0.5}]}]]}}}, AspectRatio -> Full, 
                    ImageSize -> {25, 25}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.33999999999999997`] -> 
                    Baseline)], #2, 
                   GraphicsBox[{{}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], FontSize -> 14, 
                    Opacity[1.], 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6]], {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], FontSize -> 14, 
                    Opacity[1.], 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6]], 
                    PointBox[
                    NCache[{
                    Scaled[{
                    Rational[1, 2], 
                    Rational[1, 2]}]}, {
                    Scaled[{0.5, 0.5}]}]]}}}, AspectRatio -> Full, 
                    ImageSize -> {25, 25}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.33999999999999997`] -> 
                    Baseline)], #3, 
                   GraphicsBox[{{}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], FontSize -> 14, 
                    Opacity[1.], 
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    AbsoluteThickness[1.6]], {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], FontSize -> 14, 
                    Opacity[1.], 
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    AbsoluteThickness[1.6]], 
                    PointBox[
                    NCache[{
                    Scaled[{
                    Rational[1, 2], 
                    Rational[1, 2]}]}, {
                    Scaled[{0.5, 0.5}]}]]}}}, AspectRatio -> Full, 
                    ImageSize -> {25, 25}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.33999999999999997`] -> 
                    Baseline)], #4}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                 AutoDelete -> False, 
                 GridBoxDividers -> {
                  "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                 GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}},
                  GridBoxSpacings -> {"Columns" -> {{0.8, 0.5}}}], "Grid"]}, {
              
               TagBox[
                GridBox[{{
                   GraphicsBox[{{}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], FontSize -> 14, 
                    Opacity[1.], 
                    RGBColor[0.528488, 0.470624, 0.701351], 
                    AbsoluteThickness[1.6]], {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], FontSize -> 14, 
                    Opacity[1.], 
                    RGBColor[0.528488, 0.470624, 0.701351], 
                    AbsoluteThickness[1.6]], 
                    PointBox[
                    NCache[{
                    Scaled[{
                    Rational[1, 2], 
                    Rational[1, 2]}]}, {
                    Scaled[{0.5, 0.5}]}]]}}}, AspectRatio -> Full, 
                    ImageSize -> {25, 25}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.33999999999999997`] -> 
                    Baseline)], #5, 
                   GraphicsBox[{{}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], FontSize -> 14, 
                    Opacity[1.], 
                    RGBColor[0.772079, 0.431554, 0.102387], 
                    AbsoluteThickness[1.6]], {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], FontSize -> 14, 
                    Opacity[1.], 
                    RGBColor[0.772079, 0.431554, 0.102387], 
                    AbsoluteThickness[1.6]], 
                    PointBox[
                    NCache[{
                    Scaled[{
                    Rational[1, 2], 
                    Rational[1, 2]}]}, {
                    Scaled[{0.5, 0.5}]}]]}}}, AspectRatio -> Full, 
                    ImageSize -> {25, 25}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.33999999999999997`] -> 
                    Baseline)], #6, 
                   GraphicsBox[{{}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], FontSize -> 14, 
                    Opacity[1.], 
                    RGBColor[0.363898, 0.618501, 0.782349], 
                    AbsoluteThickness[1.6]], {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], FontSize -> 14, 
                    Opacity[1.], 
                    RGBColor[0.363898, 0.618501, 0.782349], 
                    AbsoluteThickness[1.6]], 
                    PointBox[
                    NCache[{
                    Scaled[{
                    Rational[1, 2], 
                    Rational[1, 2]}]}, {
                    Scaled[{0.5, 0.5}]}]]}}}, AspectRatio -> Full, 
                    ImageSize -> {25, 25}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.33999999999999997`] -> 
                    Baseline)], #7, 
                   GraphicsBox[{{}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], FontSize -> 14, 
                    Opacity[1.], 
                    RGBColor[1, 0.75, 0], 
                    AbsoluteThickness[1.6]], {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], FontSize -> 14, 
                    Opacity[1.], 
                    RGBColor[1, 0.75, 0], 
                    AbsoluteThickness[1.6]], 
                    PointBox[
                    NCache[{
                    Scaled[{
                    Rational[1, 2], 
                    Rational[1, 2]}]}, {
                    Scaled[{0.5, 0.5}]}]]}}}, AspectRatio -> Full, 
                    ImageSize -> {25, 25}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.33999999999999997`] -> 
                    Baseline)], #8}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                 AutoDelete -> False, 
                 GridBoxDividers -> {
                  "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                 GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}},
                  GridBoxSpacings -> {"Columns" -> {{0.8, 0.5}}}], "Grid"]}, {
              
               TagBox[
                GridBox[{{
                   GraphicsBox[{{}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], FontSize -> 14, 
                    Opacity[1.], 
                    RGBColor[0.647624, 0.37816, 0.614037], 
                    AbsoluteThickness[1.6]], {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], FontSize -> 14, 
                    Opacity[1.], 
                    RGBColor[0.647624, 0.37816, 0.614037], 
                    AbsoluteThickness[1.6]], 
                    PointBox[
                    NCache[{
                    Scaled[{
                    Rational[1, 2], 
                    Rational[1, 2]}]}, {
                    Scaled[{0.5, 0.5}]}]]}}}, AspectRatio -> Full, 
                    ImageSize -> {25, 25}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.33999999999999997`] -> 
                    Baseline)], #9, 
                   GraphicsBox[{{}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], FontSize -> 14, 
                    Opacity[1.], 
                    RGBColor[0.571589, 0.586483, 0.], 
                    AbsoluteThickness[1.6]], {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], FontSize -> 14, 
                    Opacity[1.], 
                    RGBColor[0.571589, 0.586483, 0.], 
                    AbsoluteThickness[1.6]], 
                    PointBox[
                    NCache[{
                    Scaled[{
                    Rational[1, 2], 
                    Rational[1, 2]}]}, {
                    Scaled[{0.5, 0.5}]}]]}}}, AspectRatio -> Full, 
                    ImageSize -> {25, 25}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.33999999999999997`] -> 
                    Baseline)], #10, 
                   GraphicsBox[{{}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], FontSize -> 14, 
                    Opacity[1.], 
                    RGBColor[0.915, 0.3325, 0.2125], 
                    AbsoluteThickness[1.6]], {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], FontSize -> 14, 
                    Opacity[1.], 
                    RGBColor[0.915, 0.3325, 0.2125], 
                    AbsoluteThickness[1.6]], 
                    PointBox[
                    NCache[{
                    Scaled[{
                    Rational[1, 2], 
                    Rational[1, 2]}]}, {
                    Scaled[{0.5, 0.5}]}]]}}}, AspectRatio -> Full, 
                    ImageSize -> {25, 25}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.33999999999999997`] -> 
                    Baseline)], #11}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                 AutoDelete -> False, 
                 GridBoxDividers -> {
                  "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                 GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}},
                  GridBoxSpacings -> {"Columns" -> {{0.8, 0.5}}}], "Grid"]}}, 
             GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
             AutoDelete -> False, 
             GridBoxDividers -> {"Columns" -> {{None}}, "Rows" -> {{None}}}, 
             GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}}, 
             GridBoxSpacings -> {"Columns" -> {{0}}, "Rows" -> {{1}}}], 
            "Grid"], Alignment -> Left, AppearanceElements -> None, 
           ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
           "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
         FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
         False], TraditionalForm]& ),
      Editable->True,
      InterpretationFunction:>(RowBox[{"PointLegend", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"FontSize", "\[Rule]", "14"}], ",", 
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.24561133333333335`, 0.3378526666666667, 
                    0.4731986666666667], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.368417, 0.506779, 0.709798]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.368417, 0.506779, 0.709798]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.368417, 0.506779, 0.709798], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"FontSize", "\[Rule]", "14"}], ",", 
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.587148, 0.40736066666666665`, 0.09470066666666668], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.880722, 0.611041, 0.142051]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.880722, 0.611041, 0.142051]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.880722, 0.611041, 0.142051], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"FontSize", "\[Rule]", "14"}], ",", 
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.37345400000000006`, 0.461046, 0.12992333333333334`], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.560181, 0.691569, 0.194885]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.560181, 0.691569, 0.194885]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.560181, 0.691569, 0.194885], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"FontSize", "\[Rule]", "14"}], ",", 
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.6150173333333333, 0.25708400000000003`, 
                    0.13945266666666667`], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.922526, 0.385626, 0.209179]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.922526, 0.385626, 0.209179]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.922526, 0.385626, 0.209179], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"FontSize", "\[Rule]", "14"}], ",", 
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.528488, 0.470624, 0.701351], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.3523253333333333, 0.3137493333333333, 
                    0.46756733333333333`], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.528488, 0.470624, 0.701351]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.528488, 0.470624, 0.701351]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.528488, 0.470624, 0.701351], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"FontSize", "\[Rule]", "14"}], ",", 
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.772079, 0.431554, 0.102387], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.5147193333333333, 0.28770266666666666`, 
                    0.06825800000000001], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.772079, 0.431554, 0.102387]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.772079, 0.431554, 0.102387]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.772079, 0.431554, 0.102387], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"FontSize", "\[Rule]", "14"}], ",", 
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.363898, 0.618501, 0.782349], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[0.24259866666666668`, 0.412334, 0.521566], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.363898, 0.618501, 0.782349]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.363898, 0.618501, 0.782349]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.363898, 0.618501, 0.782349], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"FontSize", "\[Rule]", "14"}], ",", 
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[1, 0.75, 0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> RGBColor[0.6666666666666666, 0.5, 0.],
                     FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[1, 0.75, 0]"], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[1, 0.75, 0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[1, 0.75, 0], Editable -> False, Selectable -> 
                    False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"FontSize", "\[Rule]", "14"}], ",", 
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.647624, 0.37816, 0.614037], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.4317493333333333, 0.2521066666666667, 
                    0.40935800000000006`], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.647624, 0.37816, 0.614037]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.647624, 0.37816, 0.614037]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.647624, 0.37816, 0.614037], Editable -> False, 
                    Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"FontSize", "\[Rule]", "14"}], ",", 
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.571589, 0.586483, 0.], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[0.38105933333333336`, 0.39098866666666665`, 0.], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.571589, 0.586483, 0.]"], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.571589, 0.586483, 0.]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.571589, 0.586483, 0.], Editable -> False, 
                    Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"FontSize", "\[Rule]", "14"}], ",", 
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.915, 0.3325, 0.2125], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.6100000000000001, 0.22166666666666668`, 
                    0.14166666666666666`], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.915, 0.3325, 0.2125]"], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.915, 0.3325, 0.2125]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.915, 0.3325, 0.2125], Editable -> False, 
                    Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}]}],
              "}"}], ",", 
           RowBox[{"{", 
             
             RowBox[{#, ",", #2, ",", #3, ",", #4, ",", #5, ",", #6, ",", #7, 
               ",", #8, ",", #9, ",", #10, ",", #11}], "}"}], ",", 
           RowBox[{"LegendMarkers", "\[Rule]", "None"}], ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
             RowBox[{"{", "}"}]}], ",", 
           RowBox[{"LegendLayout", "\[Rule]", 
             RowBox[{"{", 
               RowBox[{"\"Row\"", ",", "3"}], "}"}]}], ",", 
           RowBox[{"LegendMarkerSize", "\[Rule]", "25"}]}], "]"}]& )], 
     Scaled[{0.7, 0.2}], ImageScaled[{0.5, 0.5}],
     BaseStyle->{FontSize -> Larger},
     FormatType->StandardForm]},
   AspectRatio->0.85,
   Axes->{True, True},
   AxesLabel->{
     FormBox["\"r [fm]\"", TraditionalForm], 
     FormBox["\"ReVc [GeV]\"", TraditionalForm]},
   AxesOrigin->{0, -0.27346269897787734`},
   AxesStyle->Directive[
    FontSize -> 25, Thickness -> 0.004, FontFamily -> "Helvetica", 
     GrayLevel[0]],
   BaseStyle->{FontSize -> 14},
   DisplayFunction->Identity,
   Frame->{{False, False}, {False, False}},
   FrameLabel->{{None, None}, {None, None}},
   FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
   GridLines->{None, None},
   GridLinesStyle->Directive[
     GrayLevel[0.5, 0.4]],
   ImagePadding->All,
   ImageSize->{1000, 1000},
   Method->{
    "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
     AbsolutePointSize[6], "ScalingFunctions" -> None, 
     "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
         (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
          Part[#, 1]], 
         (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
          Part[#, 2]]}& ), "CopiedValueFunction" -> ({
         (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
          Part[#, 1]], 
         (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
          Part[#, 2]]}& )}},
   PlotRange->{{0, 20}, {-0.27346269897787734`, -0.26756665283393133`}},
   PlotRangeClipping->True,
   PlotRangePadding->{{
      Scaled[0.02], 
      Scaled[0.02]}, {
      Scaled[0.05], 
      Scaled[0.05]}},
   Ticks->{Automatic, Automatic}],
  InterpretTemplate[Legended[
    Graphics[{{{{}, {}, 
        Annotation[{
          Directive[
           Opacity[1.], 
           RGBColor[0.368417, 0.506779, 0.709798], 
           AbsoluteThickness[1.6]], 
          Line[CompressedData["
1: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
/x9vzVRq
           "]]}, "Charting`Private`Tag$3232#1"], 
        Annotation[{
          Directive[
           Opacity[1.], 
           RGBColor[0.880722, 0.611041, 0.142051], 
           AbsoluteThickness[1.6]], 
          Line[CompressedData["
1:eJwV1nc8Vu8bB3A7mY8t45n2yHgk0riMpKzMiIwnWUmo/BrSUF+jzB6UmaKU
lEQhORHJCKeEzBIqUqHMyu8+f53X+3XO677P9TnXdb8OjXXY8QAXBweHGicH
B3EtabfoTnHhgFZr/YdBZ3GMK6Vqh8dBDriw8eSzkWgcW/73LaA3lwOiOylC
B0/h2NSgS3EnFyf8HM+InzqKY3cXWWWhopxgdQD/p4QcKBlWJazACSnKyud9
juDYmHXCK+sNnOCQGB42FI5jgzV1X5oDOKFuU3z691Aca7+qqv68nRMWxvkm
AoNwLKHCQM/7PSd0K73kex6IY1Zdpsb/xjlBHPveJ4vcuMZz5+ZVTjhAiT7c
6Y9jtZEpQVV6XDDeYUja7Ydjpc5Ld8oyuCA77tJgljeOJZHaNAp8uIF3gNt5
0x4cq96oWGkXyg2pz7hfVbii9/M6vO3PKW6QfWnG1kU2KZVw3pPJDe6Wz1la
Ljj2ZafnaeEObni9izzOdMIx85jpzhMmPJDhoPbfGXscC727ba/qTh7wMIoM
FEHOwlPHul15YMO8WlCeHY79pBgu6UTwgFhGw0C9LY7l1UbTJ4p54NRSk7i0
DY4t/hY95ijNCz+rkzlnrHCMochaXWXwwtOiv1MpyHYWFfGlerzQIJPfpIdc
lOaWx2/LC4Mkd8fIHTjmqFPQXBfDCw6SL9MELFH9gfpymjO8cO1emes+cxxj
DThj3O18sGyiKZyzFccEsj8eCn/PB7vP3wjcg1y+N1RhZIIPTE8qeEkgc/fH
nqjhXAMhbee2J27BscK+Gmb4xjUQ8CS8J24zjk28oxYP31gDAr2CvTmbUL7p
pa42ZWugNC5uxhfZ0GUTb82zNaDXnMZWRY7tdmKl962BP38q4iqMcUzt7X8K
NiL8cEv5S3e3EY4Fd31LqT7BD5G3Qxa0N+KYeMqJbaqx/HBvpG3XiiGO1djz
fWez+SEwMFK+BVmwk2Id9oAfelYZZH/ke68deVXH+WFED3KKNuDY99aqE+zd
a2GpcW+AsQGOhTddYB1WFYB5Uvi3e3o4Rh6z5JtnCoDFx8D6eOQ2rrV3o0AA
3M8Zj/ojK0PiTLy7AOj6GPPRkd/XpJ8tvCQALmEnX2br4php2a289z8E4Ccz
LT5HB+3XEWjm80cAMlOd8dPI2dMaExP8gpC9c623N/JvjQfav2iCUHQu0piB
fKfoSa2IsyDsu3ZxsnQ9jollv+o3rxIEEbf9LR3aOFZXnRDd2igIMyeMph4h
H+yzoTvggqBdFrrrGnKTFB7kNSkIw63mpX7IJ1LeLx5XEIJwb0f+f1o49vHi
pPT9s0LQUMpfugn5YZiQk+xOYfjSLRzTp4HmLUviRKmrMPT4v1BpQJ5olMs3
8xMGWjTlTwmy3Dr1qZAzwtAnf2bTWeQL9dtj6iuF4X7oPk5NZFfxM4+C6SJw
4ZDAjnh1HAvb/N/7VR0REI5p6T+GnOCfuMreIgK0FqurLGSsJtsacxOBuUvr
r2xGVttf9UkiWQQGL3aemVVD58ujGYlnKyJQD+z3B5AlhxeNHdeKwmcrhTln
5PX8HD6fpUXRfLJ1LZD3e4rcE9MXhZWlaDkGcjuPpoV/oCh8nWbljaqi+XLx
Oyr6ThR09C0VA5ELTh2c1N1Dgoke2nCCCo7pPl+7GLuPBOy0s0PRyM95inlH
9pOA49D3uQjkD4lj1MQwElimGQR7IJOv79vzNZ4EKzUtYdrIWY32jQW1JMBl
EyrfKeOYxtrv+GIDCWbMWqhtyNW2l0fsW0hQocXOf47c1/Nq+e87EmiONw6V
IEt/NdXb+4MEqh129jHIacIGeeJ0MViIUhjdgEx3fFMSpCYG1Q/TErSQH2aE
VT9fLwa3HpdaMJC7KKXdoSZiEJBq+5OELKKvItjmLAajWZOK00oof1fZ4zGx
YvCsOflRMfL5/D8Ov76JQdftwh5N5N26VeGac2LAVf6/EiVkcv2RVNaSGIwE
1ycpIteMTnZ18YoD34bOKFHkWeX39qVkceiftl+YY6Dz5F6lrf9uccizUbHH
kE2rQ3f2PRIHL9KxQS9kkV0aQaI14hC+lY/pjjzYPx5n+Vwc9lW6sZ2Qj//x
fFXRLg5cmZyRVshl26x3pI6Lg6wVX4U+MvWl6vZdMhJQE+khsBaZ4+0HqD0p
AWz29oxaOurHr3UFJ89JgEL9zOMnyGs5crmM4yQg6d/Ih3JkcW33xsp0CUg1
PuxwB1k5Ft/xoEwCRAPib2Qg7zJpsLsxIQHeeb1zEcgdDtcf+ExLgOTAamEo
slNgNInySwJ+RIBXMLJn+qY32ZySsK7/2qQvcuiPcpd0BUn4ceSQnwPylZs3
PeMcJcGvFsP1kGVrzj2zdJcEm6vmnOuRc7q8ybw+khDKOmSkgXzrr/yHc4ck
4dpm91o6ctUe9v5TcZKQW6YoJ4k8KHgxOLROEnpEjCiLNBxTOep/3FlDCv6V
RnxvRNbeNOKUrysFMnOnaA3IBhxuOpOGUjAqKuKOIZtd3jlxxlwKnpx06a1G
9irUci7xlAJbLlvhB8gZ3bM6XMlSUJNc5pqFzLvhzOcHc1KQslZG5Siy0MpC
w/KSFPQJJYyHI4vXh+Vt55CGRvW84sPIVFuWy4CQNORIpGw9iLz5wPYXfCrS
MJ3XfImFfDRdMH+fmzQcjfAZdEAe+53pKvhMGpweDfIzkW+YMo8MvZCGqg+N
onrI3okdyQ9apaHpGV1OB7lfibfFqU8a7PzbjTWRcacIk5w5aRg7EXuDgVz3
0IaqrSED11q7JKWQMw9xTtplykDST2f7ZSqOOVfn8NHyZODCnVdPF5HFeY0Y
c4UykB83pbGAnJQT6plZju7HJoj9Qr7QNtAx8loGIENudRo5TP3xozAeWXg7
K7NnFHnXePDptHBZsLkp09eObHmacc/iuCxcZIdea0M2kxrsn4+WhQbbJs9W
5E3bbY08LsvCWM6jr83IGkU6c4zbshCRPCT/AlnwwK/AykFZuLeNNVyN3D52
2rlvxzowT8htKEZ+FWUYk2C3DpxTY7HbyI2SPx5udlkHrluE6m4h11r4iBaw
1sEv+gxWiHyv0Kw16PQ6UJb93nMdOdFvDayUrwM3f5L9NWS7sRRNMlkO3jn5
OV8i9tMc6/ZUkoNzwglJCcjWRzZGZ2vIgdZEW0s8shXXcJfsRjkYp5eZxxH1
UTUjJXbLwRZ4aHEReYNn03P+83Kwo1b95Blkhe4ll7lxOfBMyik6ipwlb7uq
900OLIP8OAiv23+9OGwWPf9I2vMIsvSs5cr0PzlIpOhKRyCTSOzrX2TkQXBB
Lv0wMrfN+qmhnfJgqeZXG4w8+YJ19lWpPNTFfrvli0xJ7QtOqpCHuGh/EmFn
LzsX56fyIGH96qQPct2iscaHV/JQ3jLu4I2cpi3WvfBJHtqLKwT2IZtkYqqq
cgqgzc6/6YZ8OVih8+J/CiBgMhW8G7l+Y1q1daICqCcdmbZHnufhLxRjK0Dx
pdthhH3y547nFijAmyOME3bIBt2t9MpaBbDcZpZmgzy05UTk2KwC5M27j1oh
rxfrUTT3VgTN9pt/TJEnEifOpx9QBFrM1izCuQILnz8fVIQLCnuMCAvxyJZf
Pq4IW7DlY0DUP+9u2ZOqCIPmPAtbkYsGh0KDGhWhKtpNdDORf/E4lqxOhpxU
MtsQuVtpXmlUhwzKXvPbCF8q4EswMCTDRK7Otw3Iy1mqzu/NyHDTamA74b7E
oC90TzKcrZ/8y0S+cmSa9DiJDFfDXM7qIQts++07OEeG9l7TLi3k46Zq/I+X
yTC/v+kc4Qlzj/vJnBRQ0c9iEm6wql82E6VA0v2Qq5rIJx0Tr9zRoMCcspmv
BvLUAeWmSF8K4GN/RNWIfrzsoibWSQGHy60PGMT8JMd1TL6jQLJoegjh4tSn
RxsHKbCo8Vid8IUMWv3/JilwpXC0kI5M7prX+sFFhfrc5Twacs/7hiYXMhVk
btwqoCDvmN67QHehwvUvVUPyyHmSMW/PuFGhoa27kPAvk5IHgx5U4P6sE0L4
esJKQAaLCkoT2StyRF6qOX1rw6gQMH1ekfA91lD1zwQq9Mn1h8gS/dvnHVX3
nAq+Q6YbpZD9V2Pd5BupEBpSxEu4VqXM4HgzFSj6e7olkYOOcUzrdVBhXNkj
gnCDeMG+ogEqqH3qLZNAPmo7uvXyPBXGcgM2ihPfp8GPc68WDaSvTAaKIv80
7Zc7rUODJqcjQHhNvb3BdX0aeN9VkiVsiG0KmDCigX3zUrMIMvsp6XXEdhoI
t4eqE7avqL16yYsGbl0ec0LIL4skdZ+l0OCv6EKBAHJlXKMX9TcNMtO7fPiI
/He1ycYu0uBaC89WwllCb95Mr9AgwshdnvDZlBHLp1x04FUL6OFFtrm6vN6V
RIdseUNvwqO3dVcvadKhx97ZnAdZpDknf8GXDit2LRZcRF68xz50dNBBzE49
+x8F/X9SWnpXcDp4bXA7R7jDSLFT7R0douuzAwgbhjQ9Oz9Ah6krLAPCfG+l
sg2/0MHj2lTHX+Si649d8jgZECzRtYbwmMli6yEDBvhyHYhbQd4fcapSKIsB
HOQIbJFYT3+4Uj2XAdrZJXcJC8zCY8vrDAj5+zudcFk435Oztxiw7P0khPCf
sNSqX+UMyK34KUc44/Dtp4NtDKjW0Tm5gNwS8rb+3l8GhDpGmc8j6wRodtj4
KkGbiea/OeThIMrhUj8lEP+yZ4rw5RAJkkigEkSeutJH+Gv4ikNnqBLoxjAf
Eb4Z1fbOIUoJpFwUggjLpB0ccs1Ugiv/O907i7xaW/LN57US7PVSqZtB7hTX
EjxmrAzfbIzKfiA/vX8+W4tbBTL8ybbfkE9xauxuH1KBPb3rtb8S9Q6etAqt
UIXHZ7MSJ5DHb9HY+VFq8Gz3x9AxZLbaOp5qF3Wgny8/NIqckuXf7EvVAJuj
tNYPyHvZ+zqEPmsATU3IawR50aJoKb9OEw75h3AMI38aNzveEKsFv2V4hgeR
b2zRk3/tqw35M4+bBpBLLx4TC9BeDyFjUQP9yLEu+625f6+HjCsfhAhvGCy4
E/taB/xfUM3fI19Vzy59ba0LsVu3XOtDPvM88ap1tS5MjL2Y7UW2lXcpalXS
A8mNwt6ETUObPcTi9cBg9tHHHuR8BZZS+289MA94dYCw0ovbGXYe+hCSKf3n
HVGfdoPGmzp9eCjKyCXsP8eDt2gwoTC3cCthV98LbT+0mRCVwrWZsGUn90sp
PSbomLCMCauUcD313cgE/acqBoTHWRxFS+ZMmJh5oU7Y783KcfV9TNDa6ihF
2BlOHbH3YUKqaJs4YYv7y4eO7WfC2pjtJMJKCUus+iAm3N29TZDwJ9MFG/dI
JvhK7uQkzHo4S41PZsJX1o3pbuRjThW9QleYoHzp2yThuN/HklIymHDqrtEX
wveNl1Yyc9H6JT2jhOsHasrlC5hw2FLzA+Hu01FB+YVMqJE8M0R4grKVyihm
Am99dz/hpfrVnlslTLD31OojbLGLr7yymglfbtS9IZzyRiixsZkJTx4P44RV
P60zH/3EBOdhchfhujmVpdVVJszyencQ/j+YmdOk
           "]]}, 
         "Charting`Private`Tag$3232#2"], 
        Annotation[{
          Directive[
           Opacity[1.], 
           RGBColor[0.560181, 0.691569, 0.194885], 
           AbsoluteThickness[1.6]], 
          Line[CompressedData["
1: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
05zG0uoqA8SDBY9S/h8wfS1R
           "]]}, "Charting`Private`Tag$3232#3"], 
        Annotation[{
          Directive[
           Opacity[1.], 
           RGBColor[0.922526, 0.385626, 0.209179], 
           AbsoluteThickness[1.6]], 
          Line[CompressedData["
1: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
           "]]}, 
         "Charting`Private`Tag$3232#4"], 
        Annotation[{
          Directive[
           Opacity[1.], 
           RGBColor[0.528488, 0.470624, 0.701351], 
           AbsoluteThickness[1.6]], 
          Line[CompressedData["
1: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
mQDbugRXlv8PczgEEA==
           "]]}, "Charting`Private`Tag$3232#5"], 
        Annotation[{
          Directive[
           Opacity[1.], 
           RGBColor[0.772079, 0.431554, 0.102387], 
           AbsoluteThickness[1.6]], 
          Line[CompressedData["
1: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
           "]]}, 
         "Charting`Private`Tag$3232#6"], 
        Annotation[{
          Directive[
           Opacity[1.], 
           RGBColor[0.363898, 0.618501, 0.782349], 
           AbsoluteThickness[1.6]], 
          Line[CompressedData["
1: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
KxsbGGC61T2k/wdlRpVT
           "]]}, "Charting`Private`Tag$3232#7"], 
        Annotation[{
          Directive[
           Opacity[1.], 
           RGBColor[1, 0.75, 0], 
           AbsoluteThickness[1.6]], 
          Line[CompressedData["
1:eJwV1Xk01N0bAHBN9iXNMEyWIdvUGOv3lVA8diH1WhIhplJUJAlljxAiaxRe
S1pEsvSL4itJifCVSpJIeJu8RSKqU7/7/eOeez7nnnPvc59z7/Os5wY7H6Dw
8fHdQ4OcQyMajlr0CMBTB/3bAXEEXnNIX05zXgCa+TLd18YSOPeNK766VxA0
OrrvzIQTuOiliaMhrwVhV1VSczRyvWeQwrtpQfiv2zxcGnn1SHJkyyohEDo+
89vyJIFXDrdgIYZC8Dtrzrn6BIFPv1C+NlYuBBrVV+MLQwg8cGA2qzlSGDIi
NeJ5hwmclhVpxkoWBvNBda9c5JYdgp9zc4UhxXbikSmyWL+Sw7FbwmD1cZqT
F0jgN585C7CmhMG69ZiFXQCBf356NzJ3pwgkq4uc6fIn8JBHidxglijwgvNi
FLgEzvxgI7iEiYJH0XmXET8C76GI3IgCUbjueTXxIrI6ZMyneojCWczsBx35
dUteXGWaKESFj6rSfQncvK6q5PUXUXgcr/VC1YfAqZeejFjeFYMle/O4GE8C
b2s+F/O0UwzWbMr/nw3y4WFHlb8JMZCdjzGVRH5EJwJ8eGJg2qeqUuZB4JFZ
r5cjFMRhxn9y25PdBD6RxJOpjROHZ2nud1TdCfz2MXEXxjYJEEj41C/mSuC9
RVKRNbskwLKO4j/sgvLZKVdqsV8CSgqtza8gy63b+OlIrAQEfd/YZYac+MD6
zIMmCciSkBGOcCbwXbTYhkCVNaDnp7bwbSeB/2iYl2r9uQYKHw0HKzoRuPTY
spGziCS8PZo3O7+dwLWF+XxnZCQhmNpc2oW8z2vNTaq+JLDqsmqPIffya1r5
H5KE7IZq38eOBF7itv+E5AtJsOZ71RXjQOBlpw/zdN3XQtiKlb3UNgLXbRdZ
TvZeC8EHTUvm7Ai8nf+awLt9ayFhiwujD3k844NyxrG1UFBkejYVmfmPt/vH
1LUgZR9mREEu6tzRWXZ/LaxOC237YUPg2RJ/ldBUqJCmGD4qaE3gKs6D1QEb
qGBzfe7hv1Yof/nHmtu1qVA2uLnnKfKAUs1QkAkVjlSvbM1EXqOvIdbjSoUs
98rr65DP7WJEnEmmwt4d8yf+siTwhNJff3+bpcJyWeWNOHMC36l7N0RzgQpj
eYbT/sjMB6EXuCtUoDAcTLcjt7znDQwI0ID+ImWLHPJX9dc7apg0cMp1C2sC
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
/wMhFpF3
           "]]}, "Charting`Private`Tag$3232#8"], 
        Annotation[{
          Directive[
           Opacity[1.], 
           RGBColor[0.647624, 0.37816, 0.614037], 
           AbsoluteThickness[1.6]], 
          Line[CompressedData["
1:eJwV03k81ekXB3CJpixZ7lxZImTJtV2+lUg6thDZ92TfkxTKksgkpRRKNZZk
qVFCV/Qr24M0RG49hUwjKW6iZkoy2arf8/3jvM7r/Xr+Oefzeo5S4H7nEH4+
Pr48UnR/46nXlRshDD22+pyINIwkCrtfmt8ThrBwAd/woxi13s862tMpDN87
WgZliPcO2Sk7YWE4Mi55pzcFo4dMHOE7RUwdPcwmTsz5ay5hrQgYz2pu+5GM
0ZuMKamaNBHo29ltczMRI06MiIu0jSi84sa0QzxGjwsYidXuopDscoLxLQ6j
d52yJWbBojCzWai1mlhWRuNDVKooGG1dJ7eW+Hi75W/tDaJwctuB2aWDGLlL
pt6JVF4NCs5QxI3BaOHONKNlcTVsPsYzrYnC6NeROUPnVWJg9k9HVzSxzko+
/wkpMeDdrLygSxzks/qWhL4YtF1vEqrbS+YR0LQIDReDYj19j8ZIjK64BceJ
DRC375IcCseoNHnvFNtDHGxbvjhahmDEbls1l7lHHK485PAkiNsEKgVfB4nD
6G3N6pFgjEazxxWzY8Qh2MN1JIFY4eoej8lT4tBnklVfG4RRQadDZ2mzOPTv
XZhQC8QoT3TjFUllCTD+3FJn6IdResmS09ePEmDw9GLhmBdGjux7BzRnJMBs
zS9OzcQK7bG5gfMSkFleqZ1P3Ph26ulTQUkwKPZ2tiL+ovqXQ7WCJPjtE7ev
9sQo8FbDrlBHSXjrfON9qgdGpvejbYbuSILRPPesiRtGfM9HoTmJAfxFK9Vk
nEjek62lSccYkBHL0/3miNEqvmJ+w5MM0GC0eQ4QS2p7dTbkM+CG4JJQHrFq
Jraqvc2AnGuWH0SId27tsC97x4ANwV1JKx0wOl9e7nPS+VcQSlzTz9yFkVpc
aIIriwmFOtKr020w0jZ67VLCZgLHXXkknHgjn6fu1GYmvBr1aHcgNjtj8y7V
nAm5scLd8sS+FVquVT5M2MRQ7W20xuhi/xdd/nNM0O8cz5+zwkhwU+pE7QwT
znx/wEnfgdH47CV34RYpqHr7y8PH5hiVmVKxrx5IQao0/4G7xH7Z3HO1PVLg
7Gyge5X4pYrgI5chKXgbtZ0XS4xdDm4tmpECySVJ3bXErRw7RW3WGhj79l4r
xgyjS/uWTdlfWgN7EsN2qpqS/XmRKXkHpOH9vBWrzQSjHSnrb1kkSMPZqEnH
GmIz5vDL/45KQ4rr++NFxEaWu7bsPiMNxl08qURi1jXdmfV/SIOBbdprfWLh
kK/hDcPSUOQvvlC5jfzX8RTXISsZeMPumb5ijJH9eI6mgoIsZJzh2tQakXfN
8X4fFVmo2y6RWUpsG2twtJAlCxznG33nia35R55KG8iCUtfk4QRiM0XNQwxH
WYjreLnVjHiTz8O2lemycOhy6dEXhhit7Z93m+HJwvjk58aVxFMPAtO6q+Ug
xUY+/LgBuS+JQXlzP3lg9+S1lWzESGj7bMDwjAKM2voOuuljZPWP9zdlN0Uo
rnqls4WN0VBH8DJvLSW4/uNJwwEdjBpOdvoqziqBxg6nfn5tjEIF40e5XGUo
3zIxV6lJ7vVgcoNIwXr4tD9I8RwLI90wTa5dgAqgIJODhRoYPZHUEo43VAXO
zIBp3QaMmmrSC7WWq8HnT59aptUxSl7Gcnz8Sg2YfuY5W4iFhpOso+vVYflg
P1xSw4h3XelCyZENcMj9R4U48YUNMgL33TRAoEf7f9mqGOUUhHYFKLJgcsHq
9Tpi7wt7uCITLCj/OBfUqoLRnMW1+ZJWTVB/J83xJR7jmSV0ZGoB29KnW5S4
bJueXF+ANui58dRa12NUnREvEaatA/5p2aeTiDPdgmyXz+rAjN/CxDbiTcOl
NzL7dGG5z8nuZcSXNQqr+2zZkMHO3sdVxii1Lfuy7X02iFG6UYXEu+TcrvWo
6EHTx+LcfcSm0V27JU7pwZt1U+wdxCVrA1Uez+pB6fa2AQVilQd/XLTfrQ+R
1us/LymR/bQ7WM9a9SFII1VxhDh0RgA/YlHwPHlaAxH73rTg+mhR0Hjs38ZW
YveA472ftClAVcJ2tHc8Wf4nU48CIe7u6BZitSr+pgADCgZzgxqaiHmBfNfm
zSm4IjdifY84+NligsYeChaUszM5xD6nth5q9qXAM/3YWtqukBzr4E/BPZ98
zm1ii5qFffFBFCSbygzXEqtkzQe2R1AgGnJBv4Z4zPSbndchCkaybHg3iQM5
XxRPnaPAnxsWUEEcle6ytDOXgqxb6v+WE8e71L8QOU/BTY5wMu2Ts/Fncy5S
8LuDZX4ZcY3h/OKlYgoq0vb3XiW+J+T9wquEgkVzNy/a7X831smVUvCj2Xei
hLg/5UhESQUFefpjy2nPt/8cvF5Fwd2GQpNiYv7z/nXh1SSf5nJuEbFIcHs2
q5aCCLuCANrMTcoRH29TwPd86nMhscKK3yxq6ihIM1bJp73hxdi6mHoKHgsu
ZtHWq7RY1LtLwZonOI22xc4VdQ33KagJSI2ibS8Xln24ieTLcg+k7fGxK9yw
hQLLr1qetCPPnlrX0kbB8ImX5rRznolkd3aR+W5tkqNdUL4v/MQjCtzjRSRo
l8dxza17KSg1GVtB+65UzkIvl4ItOOdLAfGwNyP8+QAFof99eERbfUzG/O0Y
BR1QlkCbXZ+kUMGjYLVQYjRto4y/50MmKPB67hBM2069+PbkFAWfQ7470D64
V1FhepoChdOe6rSPGB+br5uhINJVV552hujb/rhZChrkVzBoX64tPz03R4Hd
7Ts/ficuSxMIa1yg4HJi1lfaVU4hZkeWKBgzC5iiXa/8p7zJDwp0RbaM0m6d
UZv/+ZOCpIHVg7T/D+YUbUY=
           "]]}, "Charting`Private`Tag$3232#9"], 
        Annotation[{
          Directive[
           Opacity[1.], 
           RGBColor[0.571589, 0.586483, 0.], 
           AbsoluteThickness[1.6]], 
          Line[CompressedData["
1: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
UZv/+ZOCpIHVg7T/D+YUbUY=
           "]]}, "Charting`Private`Tag$3232#10"], 
        Annotation[{
          Directive[
           Opacity[1.], 
           RGBColor[0.915, 0.3325, 0.2125], 
           AbsoluteThickness[1.6]], 
          Line[CompressedData["
1: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
gssb/u+aKbXfi4tGUMvxf/8P3j+b1w==
           "]]}, 
         "Charting`Private`Tag$3232#11"]}}, {}, {}}, {
     DisplayFunction -> Identity, Ticks -> {Automatic, Automatic}, 
      AxesOrigin -> {0, -0.27346269897787734`}, 
      FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
      GridLines -> {None, None}, DisplayFunction -> Identity, 
      PlotRangePadding -> {{
         Scaled[0.02], 
         Scaled[0.02]}, {
         Scaled[0.05], 
         Scaled[0.05]}}, PlotRangeClipping -> True, ImagePadding -> All, 
      DisplayFunction -> Identity, AspectRatio -> 0.85, Axes -> {True, True}, 
      AxesLabel -> {"r [fm]", "ReVc [GeV]"}, 
      AxesOrigin -> {0, -0.27346269897787734`}, AxesStyle -> 
      Directive[FontSize -> 25, Thickness -> 0.004, FontFamily -> "Helvetica", 
        GrayLevel[0]], BaseStyle -> {FontSize -> 14}, DisplayFunction :> 
      Identity, Frame -> {{False, False}, {False, False}}, 
      FrameLabel -> {{None, None}, {None, None}}, 
      FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
      GridLines -> {None, None}, GridLinesStyle -> Directive[
        GrayLevel[0.5, 0.4]], ImageSize -> {1000, 1000}, 
      Method -> {
       "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
        AbsolutePointSize[6], "ScalingFunctions" -> None, 
        "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
            (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
             Part[#, 1]], 
            (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
             Part[#, 2]]}& ), "CopiedValueFunction" -> ({
            (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
             Part[#, 1]], 
            (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
             Part[#, 2]]}& )}}, 
      PlotRange -> {{0, 20}, {-0.27346269897787734`, -0.26756665283393133`}}, 
      PlotRangeClipping -> True, PlotRangePadding -> {{
         Scaled[0.02], 
         Scaled[0.02]}, {
         Scaled[0.02], 
         Scaled[0.02]}}, Ticks -> {Automatic, Automatic}}], 
    Placed[
     Unevaluated[
      PointLegend[{
        Directive[FontSize -> 14, 
         Opacity[1.], 
         RGBColor[0.368417, 0.506779, 0.709798], 
         AbsoluteThickness[1.6]], 
        Directive[FontSize -> 14, 
         Opacity[1.], 
         RGBColor[0.880722, 0.611041, 0.142051], 
         AbsoluteThickness[1.6]], 
        Directive[FontSize -> 14, 
         Opacity[1.], 
         RGBColor[0.560181, 0.691569, 0.194885], 
         AbsoluteThickness[1.6]], 
        Directive[FontSize -> 14, 
         Opacity[1.], 
         RGBColor[0.922526, 0.385626, 0.209179], 
         AbsoluteThickness[1.6]], 
        Directive[FontSize -> 14, 
         Opacity[1.], 
         RGBColor[0.528488, 0.470624, 0.701351], 
         AbsoluteThickness[1.6]], 
        Directive[FontSize -> 14, 
         Opacity[1.], 
         RGBColor[0.772079, 0.431554, 0.102387], 
         AbsoluteThickness[1.6]], 
        Directive[FontSize -> 14, 
         Opacity[1.], 
         RGBColor[0.363898, 0.618501, 0.782349], 
         AbsoluteThickness[1.6]], 
        Directive[FontSize -> 14, 
         Opacity[1.], 
         RGBColor[1, 0.75, 0], 
         AbsoluteThickness[1.6]], 
        Directive[FontSize -> 14, 
         Opacity[1.], 
         RGBColor[0.647624, 0.37816, 0.614037], 
         AbsoluteThickness[1.6]], 
        Directive[FontSize -> 14, 
         Opacity[1.], 
         RGBColor[0.571589, 0.586483, 0.], 
         AbsoluteThickness[1.6]], 
        Directive[FontSize -> 14, 
         Opacity[1.], 
         RGBColor[0.915, 0.3325, 0.2125], 
         AbsoluteThickness[1.6]]}, {
       "1/10", "2/10", "3/10", "4/10", "5/10", "6/10", "7/10", "8/10", "9/10",
         "99/100", "Vac"}, LegendMarkers -> None, LabelStyle -> {}, 
       LegendLayout -> {"Row", 3}, LegendMarkerSize -> 25]], {0.7, 0.2}, 
     Identity]]& ],
  AutoDelete->True,
  Editable->True,
  SelectWithContents->False,
  Selectable->True]], "Output",
 CellChangeTimes->{
  3.749555893268949*^9, 3.7495559806849327`*^9, {3.749563213774973*^9, 
   3.749563234991503*^9}, 3.749563789755579*^9, 3.749572948713822*^9, {
   3.749612389769314*^9, 3.749612417346323*^9}, 3.74964663380285*^9, 
   3.749655767715438*^9, {3.749676735741089*^9, 3.749676759362461*^9}, 
   3.749743478889866*^9},ImageCache->GraphicsData["CompressedBitmap", "\<\
eJzsvQd4VEUXN55GCr2KL6iAoqiI9CZdULEXrKgoKkUBqSpKU1CK9BR67y2h
pBAILUAKSSAhIb333nvZ/f2n3Dv3bnY3LL7hff7f97nPw5K99Tdnzsycc+aU
tycvmD5l1uQF3387uetr8ybPmf79t/O7vjp7HjlkaW5mZplF/3U1o3/DzEz+
qvfJpV96h/89+u/Rf4/+e/Tfo/8e/ffov0f/Pfp/6dGP6H+W0BcMHf5vO+/H
DtiRLw1Kwl2wesb7GPpMJ7Rp2gTWzdqhS9/x+PYvZ9wr0Zh5s2utgKJrGN2a
CM6tR+NaEWzZYfJdnYHLm2fhnf7d0KG5DWyad0C3/u/gR4eryKzBRcN32zwA
AHd2rSWqY9fghaZccrdj35by46QrTEL0Tn1i+Mp3a0pwZ/0b6GxtbtaEPd+K
fJvDtttn2BldAS1wtaHWNIW2NARrXm4PK3MzdqelbXM0a2IBpnSYN0GHV9Yj
rEx7wfBTrE3H4Spdqsk5gxGtzI2SxOLBgL1dnzQ+7EAL8lWHHNdP0akJv/6R
0bOwxfM2YtNzkBEXjGun1uCL3i1haU5gPj0L14s0ZkZoxVvZHNAWw+eHJ2FD
b+n6ETZcTkK5hr6pBLEX1mJCV1uYm9ug+yw/FGvhafhpTf4LgJyI5AmVkVj2
rC1pbxN0muAEZ1dXMxu4ku/WcPX0RV6taig9GOq3DBOUvLMqBqt60i6zQKsh
fyO0XEsbx89VRGLTyDYEa3P035yAanL0SkPEtEJN8nYMaWkOixb9sSaiwko6
XBGxFgNbWMCi5VDsSK5pkIYPjumcfA6ViFz6HOwIc9k+sxC3y7RmzR4ImFEy
1WWexDvPd0WXJwfgB58iyvpmTaRnlNz6Dk+Q7m7WdwuSamCEQqJxqEXy9v5o
bm6Jjh9cRL4WSuO0+fD68FEyOkjjtiWjhhw93/DjHgCYzGZ1uR746glrwh52
eGryYSRU8Qnwn6B7sz7BgqV3a3POYlgrM1j+51PcKr0vUbR5OD+mDcwt2mKc
Wy5rhXgt+ZXrPg5tLczRZsx55GmNEqWV4ZfzhtuwJ1VEbcU7HZuQxluh3dCZ
OBBaQmZ+fvafIDFKAE22M4a2NINF+zdwo7hhAlixob+0Bxn6ts/i96hKeThV
Ri7Fs7aEm3ssQkQl7tPseq90Y4dtGezy6KOYM6IDmpChYW79KIZPc8S19Cra
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
l0pGu8pZ0v07V86S/mFJTC/+D2H0lXTRuFfE+THPoqRzs7bzsBf4NC8bB63d
LGmaCpcUU8iS7nXYsawoe/t4lvSeeJWzb+roNiQt9T8NASZJd7Q2SD/scuge
6CvpHw+56SX/IRLD6VXCvlIUTHtf5IxQHlpZ+lY12y7PG5fdumU+VnEIRw9Z
W8D+B+MnQvzSjBmoK5/jEUWkQ5KKGriwnOUNpTFAo532itu/9Hf7Nr+CnQXW
CVl+Znn/WDlQL/7P0PXdguIlM0X50AdwCxqS11oSlB1+m3VyqoKOPJCB7N8W
x2cKviOajZ5Ow0+m5NTu+CJDjae9oqKSjg4+8pSjPLx9ZN8t+KGoUi8e4O81
IpAkzcpNqimqxOtGUR89D6OPEIWEDxCM6ekWJE2gnvJaHmqRJvHCN+fFsgIB
Cot5uh2OD3Tldq6bpwO92eNWzJ9ZR/ccVdL8AXlULxnYrzZi5iTPJj9Fh1bo
fqeoCRlniZnbc3j8G+EIPpqG5Av27h6WZ2txshqhF76J5UkUfV12hyHP7ho1
WzfrfZZnpP8KNaDu+Nd95flmH7RdOtmfvfxRUXnkRcyeewYMxh9yNOpGmUOe
hJbqJ6sqmhmto7sL0zxAUERoaWYYxED4LgEjI8xS7nXwXeq2dUqT6Kdio/v1
A0Frz8tQBtz8IaJ0991IoYSjHextGM9FmrSNswltflY10dey8oUZo1TpS5ew
uqWTaz4YbclK9i1Itn66EyUt9qAJ7RFXaCm2nyytHdBVSTnbmDMUPkgOs2g0
oaXsSURIFqPN3TNZpdC6O1m2UPFLo4oME15T2OR/zmjrKvNx5Kj3+gcGghbj
4cMeFOc+VmizcvdwZwJ8YJR7w2dP8/2R3uzKuQHAJcFoKyK2qibJonOMFhpO
oXlXGsmGbCGPHq8I0wjtng3PYPTR+rAddkY7QaMtGfuitHmeQ6Sl2T5qUFuB
mn8CA3ox6NHVQWih3tvZy2wpSFRRpaidjJZGCQMVOaMlspj2LEabdz4cT4K1
wc8l2qJpo0WuNhrq072Z/gs+HUG7qQuRq2r2nsOB6r0Ow5kDTomYz/6I9bSE
tqKpg+tpGW1zHNOA3am/g8lyYKS1NFab0B5yKdulM0XlW/djBVhj0mpkNaZk
KtOBpUQS2qjQHDy3DbVtfBIgQ02TfAktlCstCciwnls4RtASf+5BRptwarMm
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
cet3eGX3NBU7Z+Z15mN+h+mF5WrWUN90MCUv2CH0qobpV2zldWFUyMvuPgkl
UYyJhMVloqQfey7499Uv3mHLBo+p3xRJM8Yz46cVbzbrWEhj63ThnhfU262p
rfQH6dEWSueNdAdp6ZWiJ4RsUWG5b8VMXt5fd5qydngAlQuUKNKVcPq2Uxk/
99vM3WglLFbOxQ+pDQy2mZF6yg4DNFskULF0+jM6kST4d+uXbbMuJ8M59J1k
8bbTUlNyxYqe3d0DYvUt9XTs+SIu9Q7b/ZZRqcEeqVuhpZ6+t/r6+gA0xXAw
lagO7Oxbbj+E2IkJ4vwuOHBRR0peRbQMnoBoId7ysyGvuL0av8k4ihbzGKW5
evarVyOp3tx0r5+5vRYM6yyXXv6T9Bi9RbPMgNvjK9aWZQdHSjx37q5nNEVv
7AJ/pLWZaVozVTS6c1CbGrXDxt1j9pwLKBfDFSefvaZHzfZ7pamMJCN7Hbfz
DIXebq8tLBo1Q+lpCSWbxUQ5qffbBWTMK08ywusXdLjatbrxy7ZbsXeTLb7v
+YnG4SszDvtB6sHRJqSuc/g4a4Oj9cOJGMXljxYYNexY7LxLKXkBOEJ5sYoh
fKzsw6v8dutonjlgi6yY9geoWkDGxKMO/8IeLQC5Fakhr7q9Uvum3R5mr4Dk
In+vqnW9/ov32grNIDmvPyyxbV+SUQt0ZBjFPYpfWV9X7U+XwlFcyTk7n+ak
A3yPsmI13Onwqq+p8pumBAN+ZaREWWmV37RxlXVmDTLYbPou9zLxNwwjqrHO
ZZX83B8vSX6KMWBbQotXGCla77cMbhYFsfZ4WzLnVTNkwb9rm255rDve4qkj
1QTs+cEiyTIObem51S5yujo43vgLy4J+EX+83mgo3zA76A1BzXwyYKMsnh7D
UQe9kIWZEjfid013ijZF0yCH953L+YU/WRrzaDDkZGklL092J2stnLi981WL
6laNkFo4+S/M7Wlkzbf5sr36BO3Szr1k2c4kw2YVcmnh/dSihPhWcMZUgEk3
f/dzjc+WX9aASMffM6rNM69PmoG4dVuw3QwNPl613TCdikdBCtS8+FCqTiC4
6nQvDLQWBO41IYT6mtfcfTOWiG2yXd/ap+WQV5VBtGy67XHu4/kD3pKLrzwi
3UdvVYHVWAf5I/ZzZ7Hyg/YfwM/bPUCRZHDEeKLMAcL+TTx+pWHPmTqVrsme
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
sjhJzy0NaUxbpefXS8aaf1qFNu+Xkh873Hg6KY62WiuEe3LGXtl0uK9WvqnJ
u/EBNX1Opa1TKXWbN2YrytSLJbJb+NHbjQgsTAmMiAU5lZpzx8mvuAkMLdTv
wfaJNaKAsfXTxuwm927lVUv1cglhEE2MNrqGCAeoldjDAbXV1hiH6Kzkxm/U
umyC+AiuA31/aKjEUhvmEInKc4t6KpYpwX6CyGAd/sKxEs4RHg+xKHIw+LjE
M4AANPrOExxVeCA98ScKsRByECjJZJr1GTjwN6fvtXoX9UXZEOos9WNLcMyz
IWpMXn/PVwKaQ4gxGBgtmPi6DU1eGm9R9gqjKLvAxbbgcNfpTCMA7HGTgVoh
sEEFJzM0Qduk5oKwlrrM6lCFhljCu94pxBsN8X1TA88k3yA+PCtimLtWD5GY
rRMVrZEwKFZ6aWFufFPa2+FoBUybklmj1apmHf6gr3Qbslwb82asPQ5sfgNu
Eq3/aXsCjxovK2vrWxrqNKfpyY8aGqAtNx7uo6V3kB8WN97XkXNz1bAKYHkr
DfmdOqhuVtEn70hepz868muhUDlMeqOEDEVqjaw6T4EMfMPIiotJkS3GpKEj
xKjJUEeBjBPDziKuRoVZ0sl0bRypra1raOwsylK1mbl/gQ6KwxhnLA5uuaXA
VlrkiatOL3jKmmGaFWRkKq58XU3Vz/1zRH8bnkjKKAbwX8UZxSLYX4i51+cQ
arOUSMANtHzA2Dwl8hlPiVUBJZI1qWHurx3glmtc4vTpNo8LUhslg/jxmO2R
LZ0IvMZ2rDFbl2oUKBbznpT75XCbDoGqS09pD8sUR5PADmCcYUwxQJNYzJal
vTVjBU2CPUCwjvoIUvATI1qHKCZsyA3atEw8xwrEH6gupmiOz/F5iugI5xIS
IrQLhiZ0iYUf2ZQwd7kHCg544cc9VSAy23ffoMHSZfAKJUwqWlIzilwdcUup
zkuUvH0fKFyaKtzFD0nBoU+luvBCMJ4DTHxCPtuPDaEU2FpuzRV4dmf8CMUT
L6vM83Wg5F9qUs8oSgShePL6uW1/40mTBuOiUR20EKkyZrPi9JqP3OU+XWg8
73PG9YLuyPrPmhCJc2hJs5V2HlAAQOpl54YEiTOeGrKUjwVGXSvF9gIzBmst
Y988xSknhI/2PdjvR5ZAW2sxDZVMwJmfXdBNw7/Zh1ZI4dn9io9pvEdn5LXR
DCjYUShnxCUob7iRNDAMMXfiEO4tobYJCJWIA84EmOC4lEz+4iuyjVtZXVv3
mKdV8PJKE2yyGjWNv0gsCWx86nIQkUjOvc0crV5rAw7YhFStEVxGfBJoxi1N
n2XVdmG0FaHVORaK6wbNFIBRiqNIcpVkKfEoogpkAhhoRFIc9U1LFqkeFaUR
YY5sb9I4s9XjtytZ46siTvExqC7BKaUSBTOR9i4qTSi2JzxJsSc6fW1T8t3j
nnR1UrzxTd+x5AsU8KD3pdfgparTmb5y4lx2AyRZKKahFJ+az0AWI/8MDZvX
Mtb+y7w2j6CGo+JrNPeXWZCguQaClz6SQdEWfTAUbqH6K6tLQjxULqNbqk8d
UAcWdZ7f9ynz7Y6QHbh0yYzBmqxg2nddftZdgUFYT4utoqJQNYFngv04fsQ2
wzuWmsn7UjINwiDuyTFDT8lnsiXffK6utv5uR824KCVpxzWPSATsvDHeCXSo
vO35rTBHzWB2M4cgcfqbWhqG0qdur+j8AfV1yQ43pmYqYc5kWmomWcWYJFDu
oGZALt+Yc7BFI2rG96WhG2QeunhgAFKQCcZlJoFcXFHzmLMMNYFMXWXpCevJ
ZC604TCUOxguREqpBIi5E+nbUgn6egskij1AsSvRNdpEaQK68L7NaFIbS4ak
KJYJqpZp6mstNNWNmtjIz0hRIsMmVftg81htHUW/AwyBw0xVB/PDqfpA7uq0
uYgwxWQPudmJZEfbxvXBnMBOhScItxOBI3ZLBRX5GFoTMRnoTqUkDt6qLCuZ
3ZS8Iz15JxyRwuFdLXkbs+Fkv3dl+MBZSt59Ju6RTfuTGWHX3B1+Ve4pTWfT
2q+Ww6wfSubGl41rPUtqitP8yALmoZ5L361lznN3/cvK6BZK5NT8IKdPpa2X
vGJM6frbnbRV+k46ooEYZHXhkJexHSyJt1RACIL4JbNHKIlXxUdpPIeErKdz
+sJA2WY4BkEbjAbofMKH2x2dt9bADePJCPnCB4R/CeBggwAkg2HxfW8NUBZm
HGzKfaFeqBhqZsgueMVE/CzFt7Hye+Av1UFPnPG2XFg1SDPqOFbI8LKMM9Rp
/zyQAKL12ESEmU6ICUvGh0Q7fhZANJi5bY2vZSn/WjV9YQZ8MMxfqB+xv858
bq9hVQpezmWVKIJRRXXtY84mME6FRYWFVCHZjLmWhMkQUd6N/cGYYwJA0bep
X9/Ks8G+G0Riv2M5hF6mUy8aC7qzjQUoG8xxsn2ftUXgtLpK2wN5kwaYKZyB
FqFJ0kKYD7hnmMoUPdHY9DlWmPB1heqeGNHKPCt44VbNFDOWHl4AUwd9gClD
IQ6ms8r6uW9pTAk2gx+IT/GbNGgSGsBcp/fC6J1Pm/LEPncyNSlnFPma5mf4
IuXdV2TOwM/k7aHr1GoJXx4n8ea08GwDXEQjzyvSD2hN7uVFD1jR31y9O5pa
CF2at/hyf1oBQC/bfeJjHapnGMOFoMI0fElB3P5EI1szdktxeYYremup6CpY
z5SFENsunvq+5ZJ3HnKaoJUFHh34gjbcgz+N5YPWYLqIuYW7HCeXl1UpFDWd
BaQutxqSot6aejpjcltmaaNl2BNH7lAsPNzDXcYMPmz8Muq3rqQVgLSEcvH8
UlddoYEH6B3bBcBeFAQRUDKextwh/2n45Rotwzs8+NeWXww/UbdKsALDPDd+
k7aPMBSgrqo8xDMNwS2qTLDOCXBRjkdggnYRjBtafkmpEKBoqUxznRa5YrkT
BMNSx5oHS3WdcTGBDSBVTuiUNAvtKMYQclb79eopKUgIYEBQOF081KoAtY8i
oLPn1PPGKnrE+pOk1Pdd31qZ50YbVaWqjHQrmXX8St5OhBX1gzsKaD3VZhR2
kqGHiQCVqy21cBy3aFwBosXWphOIgAT6BP8QowbjhgAsKVrKbWEIGIOgBgPX
YBgYB/9Tp7qE3Kb+p1csMBMTMWA+mBDDCZsf5YKuglF3O+OJOBtxO5iZMnZK
fVEy5Hn7NOWo/U4F1+VmSumCcG30hKMyX/+LxPbrJUM+mKmaptvYXbJw6ylJ
Ss27Ct/VMFVl5hEpOPgxNYqeqcDpJCkI3HRtaUbQ1lFTqrXvh87O0gjJ9G1/
NUxhNQ89g5R4RJ8O10RRbvE5oisBXxkxT75I+WrDbKt9RrZlUB5gEMpXlAYU
DHhWy+dLF4yyKsi8v+ZiIiUi33Z8VWIYgjIBmqPgq23rTsqKuYd0povxasOU
r65RJUSOEWcXg4sSEVJMVHJRKsKg6VJjEjXkHa/RvCNxliLj6eYcWa0RYGDs
cBYo3wIiQXvku9/pmOxajRgT+Tsx7ik1xehRSd3wsda+wqB4wCWp8ZrKMsx7
jzswkJKwyAjHkK9GOW04cUVNLZQOePxUg+FnvDX3YCtlteu1IAygev6EfgL9
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
ttWL6k5Rqeb9At+xreBVGpnBpUq32rG5hU7RII5mxRoU5ErnXC1zCrJ5QwJc
18ehqiOb23wZOpJ16gWrJpvbfhfvE8U9GOo1JZ0Dgaa8o8HpahY4Xbf7OFZF
arCLzxWSpPuYT26WVWRbliusY+GH3YzQ+w998CFWm31Xsp7/rVx87a9y4u1/
S2S712R1x64yr2t/mdjjI/m493h5f8As6T5wsXQeuUknu300N1brmUlvr9x9
RrYfNHbyySva1sKI1pzCcimvqDSazfx2XqKqo9Jza7UWjGg43VpUoWRufEl7
7enYSpvzszaq5W7T4Pnlxb9T5Zex7t8aisrZ2VmVIkk4mruoj+brSpKWSdmF
zdq2T/YNL6kq9zR9BVbzVRaq9mvpzpp6z5KKLA0t0UqDGkId0QGGekJV4fmg
BXfED1ePiFHRqgkjX5Z5u58NtKFRgTe5FB6djrwEfAR/5m28fWnU66oVV8d0
NmRivqwZitFQJ3hDhMoOnpmhv3ksGdPX3IERsgmpa9TjYl3MivGqshm6MuTr
WgGAtvQas6I4UyryUqU6M1W9L/QOszCJW6GX1AszeooR1+qJrZ1m1eWCUUG4
DFWnam9UR6sGh77aDL3YDCVJlXhbB3thFOeteg21szbx0noSKtU3m48ykMGl
C3R91rUZ386EDuP58Xu6Fo5uxk2AobR2ut6WqtRti0K5V5pGDpoDPbhTivbv
kMKDkZJzMEayD8TIpX0xcvmwEU7no48aa+ZU1HE5FZ0gR3cdl7idx+Xg7kSJ
2XFKoreelD3r41VhbllzQhUZuUp8rpXOfTNKz+s/GpjRiZM+3klN/bCt5jWG
QIPVZSNzFtmJ19ChzrUL5UPm5TnhUap+WfOnRIfy9eZl+p/5QdaGZcdCuQvz
8u7N1tfTtTWxGdrUOG+xu5Pk4K54ObovQeJ2xZoVI/G7IuXk7l1yctdOObll
rZzesU6Sdqwy95i4ZbG5x4R10+XsxulyZsNUXls1xpBP4vKP5MzyobpOz+8l
p+f1ksS53ZrJqRntGJw0+TU5MfF5VZonxv7DOmstJG7E76wDp1mNn1jd2O9H
3/V+XiN1yTK+oPl5dGZzzbWqzrQrVNVm2FVqk3V2fldMBKM7w7QMyutO1Z8b
PjF/Q4G2UhjkjOiFkrJvka7kqMWSdGCjnDmwWU4f2NxM4mO2GH4+ejhKDh7Y
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\
\>"]]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Plot", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{
      RowBox[{"ReVsu", "[", "1", "]"}], "[", 
      FractionBox["r", "0.197"], "]"}], ",", 
     RowBox[{
      RowBox[{"ReVsu", "[", "2", "]"}], "[", 
      FractionBox["r", "0.197"], "]"}], ",", 
     RowBox[{
      RowBox[{"ReVsu", "[", "3", "]"}], "[", 
      FractionBox["r", "0.197"], "]"}], ",", 
     RowBox[{
      RowBox[{"ReVsu", "[", "4", "]"}], "[", 
      FractionBox["r", "0.197"], "]"}], ",", 
     RowBox[{
      RowBox[{"ReVsu", "[", "5", "]"}], "[", 
      FractionBox["r", "0.197"], "]"}], ",", 
     RowBox[{
      RowBox[{"ReVsu", "[", "6", "]"}], "[", 
      FractionBox["r", "0.197"], "]"}], ",", 
     RowBox[{
      RowBox[{"ReVsu", "[", "7", "]"}], "[", 
      FractionBox["r", "0.197"], "]"}], ",", 
     RowBox[{
      RowBox[{"ReVsu", "[", "8", "]"}], "[", 
      FractionBox["r", "0.197"], "]"}], ",", 
     RowBox[{
      RowBox[{"ReVsu", "[", "9", "]"}], "[", 
      FractionBox["r", "0.197"], "]"}], ",", 
     RowBox[{
      RowBox[{"ReVsu", "[", "10", "]"}], "[", 
      FractionBox["r", "0.197"], "]"}], ",", 
     RowBox[{"ReV", "[", 
      RowBox[{
       FractionBox["r", "0.197"], ",", "mD1", ",", "0", ",", 
       RowBox[{"\[Sigma]cont", "[", 
        RowBox[{"[", "1", "]"}], "]"}], ",", "0"}], "]"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"r", ",", "0", ",", "20"}], "}"}], ",", 
   RowBox[{"AxesStyle", "\[Rule]", 
    RowBox[{"Directive", "[", 
     RowBox[{
      RowBox[{"FontSize", "\[Rule]", "25"}], ",", 
      RowBox[{"Thickness", "\[Rule]", "0.004"}], ",", 
      RowBox[{"FontFamily", "\[Rule]", "\"\<Helvetica\>\""}], ",", "Black"}], 
     "]"}]}], ",", 
   RowBox[{"BaseStyle", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"FontSize", "\[Rule]", "14"}], "}"}]}], ",", 
   RowBox[{"AspectRatio", "\[Rule]", "0.85"}], ",", 
   RowBox[{"AxesLabel", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"\"\<r [fm]\>\"", ",", "\"\<ReVc [GeV]\>\""}], "}"}]}], ",", 
   RowBox[{"ImageSize", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"1000", ",", "1000"}], "}"}]}], ",", 
   RowBox[{"PlotLegends", "\[Rule]", 
    RowBox[{"Placed", "[", 
     RowBox[{
      RowBox[{"PointLegend", "[", 
       RowBox[{"uSetS", ",", " ", 
        RowBox[{"LegendMarkerSize", "\[Rule]", "25"}], ",", 
        RowBox[{"LegendLayout", "\[Rule]", 
         RowBox[{"{", 
          RowBox[{"\"\<Row\>\"", ",", "3"}], "}"}]}]}], "]"}], ",", 
      RowBox[{"{", 
       RowBox[{"0.7", ",", "0.2"}], "}"}]}], "]"}]}], ",", 
   RowBox[{"BaseStyle", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"FontSize", "\[Rule]", "14"}], "}"}]}], ",", 
   RowBox[{"PlotRange", "\[Rule]", "All"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.7454725848134317`*^9, 3.7454727471218147`*^9}, {
   3.747460775433139*^9, 3.747460838555262*^9}, {3.749187660129362*^9, 
   3.749187672920968*^9}, {3.7492017108775377`*^9, 3.749201710979155*^9}, {
   3.749202049323238*^9, 3.749202085355199*^9}, {3.7494842775471573`*^9, 
   3.749484293146789*^9}, 3.749484356213463*^9, {3.749484408934713*^9, 
   3.749484424990065*^9}, {3.749484474407545*^9, 3.749484496664237*^9}, {
   3.749484628282395*^9, 3.749484628761776*^9}, {3.749554548691867*^9, 
   3.749554553333022*^9}, {3.749563253635675*^9, 3.7495633603113813`*^9}, {
   3.749572963823163*^9, 3.749572985934012*^9}}],

Cell[BoxData[
 TagBox[
  GraphicsBox[{{{{}, {}, 
      TagBox[
       {RGBColor[0.368417, 0.506779, 0.709798], AbsoluteThickness[1.6], 
        Opacity[1.], LineBox[CompressedData["
1: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
jWz2ptxOFvKMa6JF7Wg45NSzKp7LQpNc1vy9xO012wQ2LtDAmX6fjdj2NIxY
fFCONNJAwxtSVquIZ3BcTK4t1kB1sTWr7YiXPjEPHDDTwD/XaMvNxCmPpBsP
2Ghg/Xffa3HELqWVl8/6aqDg9syD3cTPc+csepyogeFUyomTDjSUxdT6siY1
UCsqgHnHkfRvX68YzdfAM8ccL98nTpd8/frnlAZejMv/W0l8IrHb9pGgJn4d
28VpJna8TC/0lNbEmr75dRPEPbcWTZ810ETFRZNmK51okHpxNYvnp4kMfdeS
F8TbRUI+NzVpYqOG8u1nzjQoM1++n2rVxJGbljcbiJvM1Jp12zRRdsGuG2+I
l+5+9vhUpyae26MZ/oVY9I38laXfNPGfUN2J38S51x54ZApo4Xxz5beLXWjo
W85/tcdEC+kTMrnpxFsPRJRJpmuhv2NDg/dacr/Fn8r0MrTQweDRfj9i8TF8
YHtNC1OsdsgEEhfvF/33xE0t1J0jY3GA+HdwUvlECRlvSTkSQ3xp361HXfVa
OGtrq1op8cvdbzj5f7RQWWg6V8yVBqNAgyZHP21cPy9uxy3iZtkFEiHL5uHx
J/Xi7W40PCo8dWWB0HysEzyxq3EdDREC+msbPs7HL1OZav+6kzxd4Wv2lupg
op6QfpQHDf03NVKyjuriGkbvISNPsr66SsIVHnqoNiBj/4E4MX37Cz+WPmae
nW2yx4uGjSmbmiS/6qN6+ZDpODHfOpfKqjLAtmO84fD1NPT2W4bWRC/Atp4l
SaPE11caqzT6GeKymM7gnRtoKDgTIhNouBC7Ku82vCWO9tjqIDS5EL95qMab
biTfg67s29GNRrhIS0Q0g/iy3pWCRodFuPqc9Rcu8fHqhMsOFYuQOXYiYJ03
DU4qHrmvtI1xJOxe8W1ii70vvGVijXH/ygXBXOIsVX/thkljfCbP7rTxoUH7
6a1Lzt6L8QdnPD+eONGwRv911WJcezxlUTPx9nHh1pf6bPyc5uo0ZxMNvnes
m3wWsDFhJMBOntjT73T9sCEbD6UF2CgQ2zYLPZc3ZmOjgfRKReL5dwUf+Zmy
UV0U9VWJ+/0ZuZQVG9M45n+0iLe9ngrV28RGKUmv02xin9jlhyt92fgszTPC
hNgdIw66bGHjc4+VB5YQWxfSe0K2snHM//FmU2LtOMqfE8TGT2o5ZsuJey14
jhsOs9GPb9NrSex/b4wVe56NLvdvKLsR7z617rd9EhuT9nforiMOWVf6XjKZ
jX+Oji11J46ZDDmXeImNt5fkuHkSFy6jplIz2GhoWR29kbhcfOP7DVlsvHL4
Too3MafzYYlKNhujxbSzfYjfRh4Nysph48VvPyp8iSnO9Lubd0l+sbZv/sSC
yVtKdhSw8d3ORRNbiSW3cRL0i9joJntsehux/BLNoKFiNkqe44hvJ1YXjbIu
LCF9zBRRCCTWfd/LDC5l47zRv9v+b+M86ynjB//ZPCz33fi//9naXrSkrOI/
7zwXy3xc/Z8TX0sm1L74zzq9SlY9vf+5anw+NT39n/8HP5F7eg==
         "]]},
       Annotation[#, "Charting`Private`Tag$3451#1"]& ], 
      TagBox[
       {RGBColor[0.880722, 0.611041, 0.142051], AbsoluteThickness[1.6], 
        Opacity[1.], LineBox[CompressedData["
1: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
VhmQNPw28M8VU6uIxcV//h8wO1YM
         "]]},
       Annotation[#, "Charting`Private`Tag$3451#2"]& ], 
      TagBox[
       {RGBColor[0.560181, 0.691569, 0.194885], AbsoluteThickness[1.6], 
        Opacity[1.], LineBox[CompressedData["
1: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
ob+uoa8gFhb++n9O+O6r
         "]]},
       Annotation[#, "Charting`Private`Tag$3451#3"]& ], 
      TagBox[
       {RGBColor[0.922526, 0.385626, 0.209179], AbsoluteThickness[1.6], 
        Opacity[1.], LineBox[CompressedData["
1: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
N9t+mfxlCk2Ttb7+y/8HwOc7+Q==
         "]]},
       Annotation[#, "Charting`Private`Tag$3451#4"]& ], 
      TagBox[
       {RGBColor[0.528488, 0.470624, 0.701351], AbsoluteThickness[1.6], 
        Opacity[1.], LineBox[CompressedData["
1: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
iqXLn5mZ9f8AZxBXWg==
         "]]},
       Annotation[#, "Charting`Private`Tag$3451#5"]& ], 
      TagBox[
       {RGBColor[0.772079, 0.431554, 0.102387], AbsoluteThickness[1.6], 
        Opacity[1.], LineBox[CompressedData["
1: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
JWMbXy1bdUjO5PPQsmtZKjw+f9n/AwCqkj8=
         "]]},
       Annotation[#, "Charting`Private`Tag$3451#6"]& ], 
      TagBox[
       {RGBColor[0.363898, 0.618501, 0.782349], AbsoluteThickness[1.6], 
        Opacity[1.], LineBox[CompressedData["
1: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
z+rnzORp2A3x5lwjNJDMzs75X3bEq5s=
         "]]},
       Annotation[#, "Charting`Private`Tag$3451#7"]& ], 
      TagBox[
       {RGBColor[1, 0.75, 0], AbsoluteThickness[1.6], Opacity[1.], 
        LineBox[CompressedData["
1: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
M/HGnW/Fa66TmspXV9f8P0oaFLI=
         "]]},
       Annotation[#, "Charting`Private`Tag$3451#8"]& ], 
      TagBox[
       {RGBColor[0.647624, 0.37816, 0.614037], AbsoluteThickness[1.6], 
        Opacity[1.], LineBox[CompressedData["
1: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
jc3zZsmWbxmUzbtu0kQ5Ozvv/wAi4bfq
         "]]},
       Annotation[#, "Charting`Private`Tag$3451#9"]& ], 
      TagBox[
       {RGBColor[0.571589, 0.586483, 0.], AbsoluteThickness[1.6], Opacity[1.],
         LineBox[CompressedData["
1:eJxFx3k41HkAx/FBKLkmKUeY+SbHOMJvRbX8Pq0pCpX7cZZJihBKkVSPtFJI
slTSpJaSnI2kQ+ToxCLJgyJmax1LTZq1au3uX/54P+/nxebtdd0pyWAwPP/r
/+cd4cmYB+XaMhjXrflXcmwbO1lOXqw4Okipj7fvVgw921x7nMVKoRdfzmNz
b52g8+rSdKRZF+izkU9VO4t+ocNsYsLFOkW05MF05Y4rBXTnzO6sSZ0a2rot
dMQlqYqW7X2vP67zjO6+lNnRa9ZE5z/nR43q9NALJk3DLx19RZeWpfSGmY7Q
nxqS+gPXDtO76PYLY9EienhmqWa7/DgdITQcEpRO05GDFx8dL/9My7GT9N9Z
M+CizBSsVxbT6covOPnbpVC6TiK9THaG5vW6P5J6KYPfKsjBAqtZOqopibdX
Xw5JFlt+Z+ZJoCJS3k1towKUrEozbaKkkB+/Z8TMSxkffhQn2/Kkkcj/5vJl
jImruxv6Bg1kwegcwINDKlBdmz7o/XY+9PYHx7pzVHF9/xN753I5DE/leC58
uASWRl8Xu/rKY5MwNCEzSg3X9JeL9IgiNg9nGGlrayC8Qcle+EYJIw28Y09L
NBFbfGh+dZUyTJmvtey2aSE3Ht3JqUzI0VOBfSJt3LkVdmDIZRHsx33ExIMF
omSxc6+uCt48DpLwMWYj6yMzdXRCBVUnGwNYU2xY1bDZX28uRrB0zEBrK0GK
RqVta7QqdkTHV8lfXI5rzV5vBZwlWLnLqNUpUBeu4o7s1L4laFtkvDBm9QqE
1bKV2i8uxf3SxFxjKT0sUBz4MrFRDfESnK0v+/XgiX5LPWl1yPUdcogQ6EP3
hUxy0D11CAvZWfzDBvijX8/fOlADWQbq82o8DOF8xtO7SUUTGReDnwSyOMh2
7f6w/q4mfLL8W+U/cMCVUc847bUMf3ELpvm1RkifPV1hJqmFIeFPsY+TjdEu
UDwYzNfCVRtzzZZAE1z1q3Ars9dGyYkY5i4TU4z3Ny3vfa+NZI8djlJTplgl
bBowjtOBZV9+UXLLSsiJcp9rK7Bw3jC3pMXRDJGjl6f9vVg4Wpd23rHGDAnn
byv0FLLgrOlR8FzXHGLDzdc+ilhYF/HEl5lijpVqEo6f1rDBX8bTfTlljt72
5iiFZDZ0G65nb/a1wOCW+hBuCxsZJo85HbUW4ARdOOHGJAgWzWt/xqGQ9YOW
3VYfgoCb3FY/Ywr1PMb3AF8Cz8CkFxMmFFTd2svD/Qg2tEk1q5pTeNCVOHsq
gECvWPJ+oBWFeSrsmUYegZDHKJi2o/AzET1etYcgqGMm1tCfQrOQt4J5mMAv
Ze2BBwEUdOsEftoJBO6I37dlO4VqTmaq0RECbunf4TE7KAj5/7xaf4xA99Q0
rz6EgpvN54a4JIKhdWIn7wMUotsmD7xLJeBVfGalnKHQdW1BY34eQVii27dN
ZymE8nLyXl4miHETdMufozBq4R4h5hOcnIpJz8im8FXF4aPTVYLS1dMzOXkU
InO2GYgLCe7K+XR78yncuPswl32DoL73XqVmPoU/EzaMORYRvEo4HML/lUKR
xsTRK8UE0/WzrwuLKXxv6+pxKCeQPLe9cncJhTNKKl3RFQTyQfVpnDIKmbOd
1ZcqCVQtSchYOQXnJVEnm28TaMsc55ZWUpA1UfSeFBAYdA/pRAoojPeo+ThU
EZjf4M6Y35nzmriC16LqOXM3yVRW1cw5ND1F52HdnDM65NMan8xZf0jd7v3Q
nGtFetOzs3P+F0ElWgo=
         "]]},
       Annotation[#, "Charting`Private`Tag$3451#10"]& ], 
      TagBox[
       {RGBColor[0.915, 0.3325, 0.2125], AbsoluteThickness[1.6], Opacity[1.], 
        LineBox[CompressedData["
1:eJwd13cgld8bAHAjkpEt27WudW2VUc7TUBKRUiqpjCgjI6VCopAipEiZUXyF
iIwyIysZSVZJtsjm3iv5nff31/t+/jjP85znnPMOabtLlo5MDAwM/xgZGIhr
YoAdq6bDU0N8m834PM6w9gvJ9DjpGmLIT7r1JNcHrX+sCCaR7iKGpZcdprl3
UGJVhBQL6QmqSklzr8p5hFx3+ritSGWhQJcND8ezM9CXVefYWalS1HY+amw8
vQht7PulMC3ViEoyDrIkhteh1KZkz99SPUiuZO9hbdWvaDG+SHngfg8ynlf3
ZLjzFe1zah7qoPWg99k2HMn9X9EU84pV2ZdepHiJeeLQvS6ku/OQ/t3QfnT0
vc0pt9FvqC3vL5PCzAB6pZHmbfqwF91sophonhlC8VIlRtp1Ayg3726fq9ok
EnBx4thcMYwm+Sbvm5ybRI37FpVDfw4jhSsmhoqxk+hhr3HICNMIStnBkTpE
m0Tyc4pdh/ePoJjG++dP1v1GltPVuuOfR9CVoQdz+22mEfegPJmtZxQlczQH
8xrNIlGfmlnWnnHkhNqfTHktoCLbz+2BYVOIIW25rO/eAqJ6weP3z6dQ/Abx
/qb0BRSe17d7oGIKNTSel8zqWkASh9Ku9SxOIcWjf9Mc9ReRhdeic9qZaTTu
rPDqB+MSkj+1T/yBxh90Mca/oi1qGQkLnM0jVc0gpqW0gcqsZdR37Ge/WfcM
SjjewJBXs4yquiyO28/OoCZx/j0Ri8soxQneyPLMIpWXmfUHrFfQaFlMznU0
i6befWmrkaKizaxqsvSns8h9RGmoMJeGbj/y8L9kOod+2vawVTfSULo6a8u/
43PoSHeYWsswDQUat2resp9Dus1j10ZE6UiX3HX2zPU5xJyfwSMUSkdb2dXP
BL2cQ/F+0oZXz6yi+I86Ri7rc6iaX+SJHs8a6uup+cf5Yh7pRDRUGKmsoZDB
fYW8r+fRC1bf4cP71lCERkgxe9k8uk/rUr/ot4bezku09rTMo2MDsR8TxteQ
raXpyenFeTT5H8/iatU/9CJWM2UeFhC79G2FAV0G8K/PGn/XtoAadkSrBxgx
QNrbsvtN3QsoxDppu4QlA4wa+gq1/VxATFEl+0+5MEDne43VytkFRP835fQt
kQGqm0smtXkW0e9+q8xWJkawv5/j4G22iD7FKyhVfWKEwp6c02HViyi8UEfz
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
f3no6NOw/9Hu/SIQkl3n3iZARw1+24LDD4lAYYV9ErsgHdUKzOTvsBKBG9li
Pnux3+89y51qJwIz3r9FirFfpe9uuuAvAuZJ58zjhegowmEjrBaIwGLjco+J
MB0dGo5SkZQUhSM3F5u8xXA+leFOGzlR+Nk0+DgF+6D39oCnyqKQL/NGpgXb
mOlHm/B2UWCvd74hL47nR1K5wm8hCldWOvW/YG+1qatiCxKFWZb2nbKSdCTe
SbNaGBGF8MnoxDgSHSWIma1rTonCs1sSHOXYIvYpmR7zomB6YHT3L2yh+X2r
0/9EQbLxNB9Fmo54eGJTxreIAYrk0yvHZjZV+/39gBhEwtuRrzJ0NPnBLrAh
RwyaTL5m/pKjI6no7ouRhWKwyWLi3gZ5vN62h6yOvhMDfXNWfTJ2BVVP+WeD
GGwvSqY6Y8eo8nauDImBxUZBtilsg7hKBQVRcXArzS4cJ9PR/YvirXdCxOED
k6hlhSIdVW+PKT0YIY7P4w/lXuzlDWzpvLHicPj60rcl7LPJC76JqeJQmyv/
mqJERzqdTTJF78XhKvvXM/HY33deuzI8Lw76EiZLTsp0pMbbJbHnjASIcrZk
T6jQ0WjEaNAjRwk4WLmyYR07kX1lbMxFAhjsaw0FKHTEuUG44L6vBNwJpR41
xJ5cPrGvK1oCpjPyeaKxM/q/u1+olYDGd7W/NVRx/zNHKh8oScKXY9PHTqnR
UafcstwvdUkw9vTb4oZ9L5U1XGebJJyQ+1UegE1PUDjas1sSvCYa3qdid0dc
GJexkYRyY4nQUeyH3tM8byMl4cXWdTcXdTpiR0vn+hckQddV5oa9Bh357lJk
e0uXBOHrDVe8sUf3nMp9wCgF1yK+WQdj1xhX03dzS8HXpfa2NOzrlhEPs5Sl
IC86JvYn9m9H+bor56RAwPRwxHFNvB/vWynytkpB4weKsY4WPj8Pwj5PfpWC
4+Skk7uwM6PfXa7tl4KWGV7rQ9i3H0tXX52UgmT3OwLO2JJty5QZJhKwDWnG
JWB39dTUWUmSQCk2a2AVe//0yRUZKxIs/3A88lqbjpIEgr/ctCbBzSBSexn2
okF2Xv8pEtis7DWsw04JX3V6bEeCc/9pjfVg0xWedW/yIEHEpMsVJh183uy+
l86Gk2AtgJJigc3TfcavoooEkc0L9YPY59dDrcVqSTAPinaT2O/Jr3V860kw
MVb6Zx77gg/DtOZnEuxkMRlg3or7xZd6OqOPBHwLF0ny2JfNfhneXyaBnkSB
jiN2d40D40mKNKwo8av3Y8/u6hX1V5eG7WryH35hb6w210nRkoZliStmE9jb
KvWdRnWl4Xs7l9Eyduw7nhYvI2nYFpFczb2NjswL38ffs5WGPnO7v4D9MUNA
ozxKGqJPbfn6DPuHXPiBnw+l4UDZ1oNp2EvP1+2Y46Qh6+K20pfYcmmTjw4k
SgOT7Wb/AuygpKrVr1nS8FTCLqMe2zDOtf5PjTS8kcsNmsUuCqu1JS1Jg4iF
cvmO7Xg9TZqFQ6nSYMLT+mIXdgJnR8f0qjS05t0J24cdGDWw7x2TDPSKndKx
wDaNp6sd45GBKoMN6vbYv15qrN9TkQHNa3/LQrE31z9LXjknA/kGgjebsRnv
Pj9h6ygD/wQ4glqxF03+469zlgGZO8EBX7B7PheHxlySAdoLeYc+7PSujkuq
/jJQ3WQ2NImtP8oG9vEy8GN4ppRNF68ni8/Pz59loJzLEX/E0pGoVOO31XYZ
4DuhKroH+7OuRKviVxkoDDkqtw97m2tdeVCfDMwZ9imbYrN+EXy6bVwGFgbv
MlpjZ6S8tUpilIUnTAf63LGHDahNbjqycJ/fwO0JdryVaU3CdlnQ+xa9+BTb
9FJKab2+LETn8/kmYRemGWdK75IF/5ws7+fYtzc9ufPVTBZa/zbvzMGW+6YH
O51kocO5SqYK297rRhFngiz09RQeHSLq0/pRpJQoC1lFtudGsNnn4e2+FBx/
lH5xDPu1J2tx4AtZoO0X9/mN/dcjumSxAMd/dtNxAfvxpZfv+ptlQUkkvoxJ
j44aXb9Uv1qTBW7W/UeksJ9RttU0MsiB6RU/Vmlsj6n4mlFmOfjjoFgsgy3k
avuBxC4HXmXzPGRsO5eJ2lghOTBgKH1Bwf57Yb3eT10O6lV1bfWw1Z1UPpue
k4NPK5aCh7F/XJC6lOMgB1tqy59ZYt935efZ7CwHDIs50kexJzxXD7e6y0GA
s5rcceznfs1fD/vJATlTgvM09pYYl+/H4uSAx5bXxRl7/X321NkWOfhgvhjg
j51bmRxR3SYHg2cPVQRg29Q8VJPplAOhhtTVm9il9Tc8hnrlgJK6yyMI27vj
4KLjuByguMpdodhjY79XLzLLw6HSy2FR2K18FA4fPXlwLa8tTcU2dHObeLpD
Hn4H/3qVRuSrz62vwX9dntIPkp5jR/pp3ubZJw/FkYn+Gdimo9vWsi3lIV+v
WTkLu6l018wvF3k4/grteY1dd/b4F4skeZB9/PR6ObbOu/j8q6ny4OgasacC
O12w90FSujzI5JpxVGLfbrIxnfpPHuYyIK4Ke7eOXV1osTz8VZVJ/YBdtdGt
uKJNHqJ0TwQ0Yr/LDXpKYSZDcbvhxU5sVlMr0ThWMrC9VJT8in14QuEJIzsZ
NBIm2giPybY87uIhA58HVesbNv+TLTGBkmToMA6Y6MF2CX4V1qlHhm7jWukB
bDHrLh8/DzKkprs3j2OfX8pcHPUmg8mu/NMT2PkxN7wPX8X5FJhmCO9vIXmS
A8hQuda5+TfR/90urm33yFDy9MKeaexmCoO93EsyPMh8dmsO+wajssWn7zj+
LUkbGvboXo5u8iAZ/u7vaCNsETZ15tYwHu/asJeOLcedd2nbbzIExwUqr2J/
Etd5kEIlw1bvXdN/sSV1DT9f5leAZJWNhxn08fPb3dJU4oAC+L0+8oQVm1Kg
3XnVVAFelARSCT9eErDpMFcA1SG+4xuxXfy+uYQeUwDO0It8bNgC4Tb35uwV
YIWNKWgT9vmM8011AQqgN5FuxInN3n/d2L1QAdJDNjjyYm+7msX1oFgBzhhd
yCF8jq+7I69MAWZoZ5YIlxhvPT1XpQCn+1lu8xHximY8L7coAPWK0TN+7OpI
h6fXRxUg8AKpVFCfeJ8f+hMirAizp3wzRbDT+/3evBRThLKqg8OEW69m+zZI
KsI3kVopUWxyLhszu7wicLZmPCL8RfTDlghNRbgks8NfDFttcfuuhyaK4Fep
uEMCe+SFdGyynyIkX/fzI2FP3R6kMQcqQrE9fwHhebvUM87BitD+8fAYYQYp
aRXNcEV4gOotpLFF40g1NXGKoP4yXUoG2yJUanakQBEySp/nyGK/d5IwpUwo
gvI760gy9gej7/lRU4rQcXaslHCTbOKWpRlF8P6rOkL424D4UPmyIhT8GdZX
IPIfF79uvkEJkm6zDhFWNBbL9JJSgp/b/chK2LGKIhtKrZSgIVXZXwXbxpb8
cshaCQZfb0siLBerbbLZRgmsM7krCReum0XZ2ymBaLgSAwW7sytIfPMlJfgb
wxJImP/OlI59mBL4sadeUcWOGax05HqnBKozZ3epY5/c0sKmW6EECyFPbAjL
mPVm21UrwaW1l1cJF5QszhXXK0HM3f05hDseKAXYdSoBl2S8kAY2r+HDx8XT
SjC7XDRIOCrhfP05kjLko9BTWthXrwR5+8kqg4v3LU/CtpZJUnFkZXhidDKU
MIW96+onijJURWYWEG68ZqS4XU8ZRuTLN2pjM52Qu8tpqQzWTHPZhH22/DIp
DlaGhf8av+sQ/VlYW24PUYbWkYUZwntbRZ5P3VWGO0FMTFux+UIPr0pHKcOp
sBZ5wrnLVdn3nynDRmMpV8LjX5M57YpwvJ+dC4RPxp7+zDmG68t4PLsNW/wN
u5jLpDIIXxlg2I490F7s1DitDGIOXLyEHbj5GEMWlYHngIgmYffwj9rrjCpQ
QFu6RDgoUP3JnLgK6CuMjxPOcmV06LJUgU0OzQ262K73cl/rHFOBKMTWRVjt
v1NrMSdU4Jm++hDhgrGix+ZnVWBWcsca4fd2Fxsb3FQg8ZaVhh52m/UXtXdh
KnBzNT2GMHVvBi25QgVsuxON9bH93iUH11argIRypiVhBq0ErolaFRhaTbMh
vFHqgbRWswq8DLjoQViI5nug9psKrMXsiSOsnWP6ZHxWBbbwaf0i7C64qKsp
S4FowwQ3A2I/3/tTY0WmQCDfTx/CPkwTpteVKCAkKRJA2G/m+9kP6hSoUnaM
JHyvsT7MagcFtPWccgln+j/tvmZFgcgPslOEh0Z2+9aEUuBf2JrtDuzdyZ/T
lO9RIN/p7HnCKdYnW2IiKaA58taNsG2zp4z9IwoIciM/wr2vUz4xP6fAVeuK
eMIdN/6RjCoocEguvJVwDW9ZY/0iBe5L9+nsxJZuNlpUp1Ig3PGbPuHA2+2S
8asUYEluBMKGK+Pezkyq4LY1ypRwWf8WyU08qtBf8dKecMFLHy8TFVUoOLc5
inDaTk2xlnOqcOy6/C/CNYfYg1cdVKFv/tUo4V9nhiaVnFWB77Dqb8KyQY/K
QtxVYWhSeJFw+kfaCbihCt4fn7EYYmeY18S/iVUF/mtnFQhnnjsilFCvCles
pc4TbvCiBDQ0qYJW3bcLhMeDWUaXW1RB8lS4G2HFF8VFRzpVYZH84zLhrEkx
K65BVSjR3xVM+D/v4YeBdFWYZFlLIpxzx4fXSVUNxDaFdBCe2nE66I6GGpTT
bn8lTFncu/BcWw32mN3s/v94O4GvP/Ww9c7/+H996E38yX1qED2+NkE4nTYr
deiMGswnnmRA2Alurmpbo9XgteiKEuFeuaPJR2LVIMLqEoWwSL8Bj1ecGrDV
DKkRjjfhmM9NVAP1/dXahB8p/Fek+J8a5D4330k4anBsh/gHNbCMrTAnHGpl
f5B5SQ2M+Di8CKeZ99s4UtXggQpcJvz+gJV7/aoaFD30vEJ4fuf+6HtM6kC+
0HidsA1Z5Rs/jzqc6DALJqy1Mm8np6IOV5tzHxL+ER903eicOrR+puYTpsWs
3nvpoA4b52veEBaIuJy4yVkdnITCiwgfuHW+qsVdHR5d4S4lXHjBhPWYnzoE
SK5UEg7X54s5H6cOLWDYQnhrf2pWaAvO39s8QphHzZma16YODCHkMcJTN9X2
d39Rhyj+m+OE02XfDSv2qkPsoNLv/+d36ZRqGlUH6/Tzs4TpfswHWRk04ErE
TTrhHo5t1cYiGrC+bS8XEPWc/svtKa4BD638uAlH5dXYPpHCDs3hJWx8xPzv
hLwG5N9YFSRckuC8/Z6WBjDP7JckHK/0NKfloAZUhxSqEjavmH+mZ64Bb3Ry
1QmzHjG5n2GpAU91UjUJ+/jRLvqf0ADu295bCVu2HldUddKAoLrmHYQ5fQSe
3w/SgNyNp00If9jkGkO9owFctUsHCV9P+nDL4a4GGIjcNSM8Ue91dkeUBhR0
JVsQ/ijaLjGVqAFOEQ+OEb5ZFRF/sFQDhl+EnCNM2XbyLnOVBnyS5nAg3J1N
vv7uowb40gPOE9aKqzyl0qkBYb7bXAiPus1JcsxogPbyjDfhh0Pl3B+WNCCw
hu5DGE6EM9z4qwHGm6lXCSfslf01uUkT1u403yBsJmaV0SSnCfvkB4II+8F7
Hm4VTaBwuNwm/MpR1u+Ipibk2k/fIcz+es6yf6cmOB/rCiNcvzeS4c8xTRg8
iSIJkx/YfLtirwljJTVRhG/3KOeuX9KEBkeFh4R3udef4r2rCV6eCXH/72dt
b2HmY034vNT15P/zFfnDBem4vrGlp4Q96gSq3Cs14Y7IYDLhHWKKIqwtuB6l
16mE2TwNvBJ7NeHAQafnhJPF7eQ+LWlCaWrMi//PP2ShisKtBTUKhlmEf83c
Ph2hqAWsilnZhINPCNGnd2lBX1FPDmG5Dy8fHzqlBZGWX/MIV57OvaF+WQt8
z8bnEz5JLTzLE6EFwU813xBeinlnNJehBaK/0gv/vz9Va5Q7KrRgf/FSEeEb
UUNrLYtasEx3LiF8fmFDe6OyNhgXOZQRduhY9VU6rQ0PGkbfEbbLnyfdfaAN
9GzZ8v/H6+CMqK3XhndNuysIVyyQaevr2lC+WamS8P8AK5fXRA==
         "]]},
       Annotation[#, "Charting`Private`Tag$3451#11"]& ]}, {}, {}}, InsetBox[
     TemplateBox[{
      "\"1/10\"","\"2/10\"","\"3/10\"","\"4/10\"","\"5/10\"","\"6/10\"",
       "\"7/10\"","\"8/10\"","\"9/10\"","\"99/100\"","\"Vac\""},
      "PointLegend",
      DisplayFunction->(FormBox[
        StyleBox[
         StyleBox[
          PaneBox[
           TagBox[
            GridBox[{{
               TagBox[
                GridBox[{{
                   GraphicsBox[{{}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], FontSize -> 14, 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], FontSize -> 14, 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], 
                    PointBox[
                    NCache[{
                    Scaled[{
                    Rational[1, 2], 
                    Rational[1, 2]}]}, {
                    Scaled[{0.5, 0.5}]}]]}}}, AspectRatio -> Full, 
                    ImageSize -> {25, 25}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.33999999999999997`] -> 
                    Baseline)], #, 
                   GraphicsBox[{{}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], FontSize -> 14, 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], FontSize -> 14, 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], 
                    PointBox[
                    NCache[{
                    Scaled[{
                    Rational[1, 2], 
                    Rational[1, 2]}]}, {
                    Scaled[{0.5, 0.5}]}]]}}}, AspectRatio -> Full, 
                    ImageSize -> {25, 25}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.33999999999999997`] -> 
                    Baseline)], #2, 
                   GraphicsBox[{{}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], FontSize -> 14, 
                    Opacity[1.], 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6]], {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], FontSize -> 14, 
                    Opacity[1.], 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6]], 
                    PointBox[
                    NCache[{
                    Scaled[{
                    Rational[1, 2], 
                    Rational[1, 2]}]}, {
                    Scaled[{0.5, 0.5}]}]]}}}, AspectRatio -> Full, 
                    ImageSize -> {25, 25}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.33999999999999997`] -> 
                    Baseline)], #3, 
                   GraphicsBox[{{}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], FontSize -> 14, 
                    Opacity[1.], 
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    AbsoluteThickness[1.6]], {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], FontSize -> 14, 
                    Opacity[1.], 
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    AbsoluteThickness[1.6]], 
                    PointBox[
                    NCache[{
                    Scaled[{
                    Rational[1, 2], 
                    Rational[1, 2]}]}, {
                    Scaled[{0.5, 0.5}]}]]}}}, AspectRatio -> Full, 
                    ImageSize -> {25, 25}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.33999999999999997`] -> 
                    Baseline)], #4}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                 AutoDelete -> False, 
                 GridBoxDividers -> {
                  "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                 GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}},
                  GridBoxSpacings -> {"Columns" -> {{0.8, 0.5}}}], "Grid"]}, {
              
               TagBox[
                GridBox[{{
                   GraphicsBox[{{}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], FontSize -> 14, 
                    Opacity[1.], 
                    RGBColor[0.528488, 0.470624, 0.701351], 
                    AbsoluteThickness[1.6]], {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], FontSize -> 14, 
                    Opacity[1.], 
                    RGBColor[0.528488, 0.470624, 0.701351], 
                    AbsoluteThickness[1.6]], 
                    PointBox[
                    NCache[{
                    Scaled[{
                    Rational[1, 2], 
                    Rational[1, 2]}]}, {
                    Scaled[{0.5, 0.5}]}]]}}}, AspectRatio -> Full, 
                    ImageSize -> {25, 25}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.33999999999999997`] -> 
                    Baseline)], #5, 
                   GraphicsBox[{{}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], FontSize -> 14, 
                    Opacity[1.], 
                    RGBColor[0.772079, 0.431554, 0.102387], 
                    AbsoluteThickness[1.6]], {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], FontSize -> 14, 
                    Opacity[1.], 
                    RGBColor[0.772079, 0.431554, 0.102387], 
                    AbsoluteThickness[1.6]], 
                    PointBox[
                    NCache[{
                    Scaled[{
                    Rational[1, 2], 
                    Rational[1, 2]}]}, {
                    Scaled[{0.5, 0.5}]}]]}}}, AspectRatio -> Full, 
                    ImageSize -> {25, 25}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.33999999999999997`] -> 
                    Baseline)], #6, 
                   GraphicsBox[{{}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], FontSize -> 14, 
                    Opacity[1.], 
                    RGBColor[0.363898, 0.618501, 0.782349], 
                    AbsoluteThickness[1.6]], {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], FontSize -> 14, 
                    Opacity[1.], 
                    RGBColor[0.363898, 0.618501, 0.782349], 
                    AbsoluteThickness[1.6]], 
                    PointBox[
                    NCache[{
                    Scaled[{
                    Rational[1, 2], 
                    Rational[1, 2]}]}, {
                    Scaled[{0.5, 0.5}]}]]}}}, AspectRatio -> Full, 
                    ImageSize -> {25, 25}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.33999999999999997`] -> 
                    Baseline)], #7, 
                   GraphicsBox[{{}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], FontSize -> 14, 
                    Opacity[1.], 
                    RGBColor[1, 0.75, 0], 
                    AbsoluteThickness[1.6]], {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], FontSize -> 14, 
                    Opacity[1.], 
                    RGBColor[1, 0.75, 0], 
                    AbsoluteThickness[1.6]], 
                    PointBox[
                    NCache[{
                    Scaled[{
                    Rational[1, 2], 
                    Rational[1, 2]}]}, {
                    Scaled[{0.5, 0.5}]}]]}}}, AspectRatio -> Full, 
                    ImageSize -> {25, 25}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.33999999999999997`] -> 
                    Baseline)], #8}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                 AutoDelete -> False, 
                 GridBoxDividers -> {
                  "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                 GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}},
                  GridBoxSpacings -> {"Columns" -> {{0.8, 0.5}}}], "Grid"]}, {
              
               TagBox[
                GridBox[{{
                   GraphicsBox[{{}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], FontSize -> 14, 
                    Opacity[1.], 
                    RGBColor[0.647624, 0.37816, 0.614037], 
                    AbsoluteThickness[1.6]], {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], FontSize -> 14, 
                    Opacity[1.], 
                    RGBColor[0.647624, 0.37816, 0.614037], 
                    AbsoluteThickness[1.6]], 
                    PointBox[
                    NCache[{
                    Scaled[{
                    Rational[1, 2], 
                    Rational[1, 2]}]}, {
                    Scaled[{0.5, 0.5}]}]]}}}, AspectRatio -> Full, 
                    ImageSize -> {25, 25}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.33999999999999997`] -> 
                    Baseline)], #9, 
                   GraphicsBox[{{}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], FontSize -> 14, 
                    Opacity[1.], 
                    RGBColor[0.571589, 0.586483, 0.], 
                    AbsoluteThickness[1.6]], {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], FontSize -> 14, 
                    Opacity[1.], 
                    RGBColor[0.571589, 0.586483, 0.], 
                    AbsoluteThickness[1.6]], 
                    PointBox[
                    NCache[{
                    Scaled[{
                    Rational[1, 2], 
                    Rational[1, 2]}]}, {
                    Scaled[{0.5, 0.5}]}]]}}}, AspectRatio -> Full, 
                    ImageSize -> {25, 25}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.33999999999999997`] -> 
                    Baseline)], #10, 
                   GraphicsBox[{{}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], FontSize -> 14, 
                    Opacity[1.], 
                    RGBColor[0.915, 0.3325, 0.2125], 
                    AbsoluteThickness[1.6]], {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], FontSize -> 14, 
                    Opacity[1.], 
                    RGBColor[0.915, 0.3325, 0.2125], 
                    AbsoluteThickness[1.6]], 
                    PointBox[
                    NCache[{
                    Scaled[{
                    Rational[1, 2], 
                    Rational[1, 2]}]}, {
                    Scaled[{0.5, 0.5}]}]]}}}, AspectRatio -> Full, 
                    ImageSize -> {25, 25}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.33999999999999997`] -> 
                    Baseline)], #11}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                 AutoDelete -> False, 
                 GridBoxDividers -> {
                  "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                 GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}},
                  GridBoxSpacings -> {"Columns" -> {{0.8, 0.5}}}], "Grid"]}}, 
             GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
             AutoDelete -> False, 
             GridBoxDividers -> {"Columns" -> {{None}}, "Rows" -> {{None}}}, 
             GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}}, 
             GridBoxSpacings -> {"Columns" -> {{0}}, "Rows" -> {{1}}}], 
            "Grid"], Alignment -> Left, AppearanceElements -> None, 
           ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
           "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
         FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
         False], TraditionalForm]& ),
      Editable->True,
      InterpretationFunction:>(RowBox[{"PointLegend", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"FontSize", "\[Rule]", "14"}], ",", 
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.24561133333333335`, 0.3378526666666667, 
                    0.4731986666666667], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.368417, 0.506779, 0.709798]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.368417, 0.506779, 0.709798]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.368417, 0.506779, 0.709798], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"FontSize", "\[Rule]", "14"}], ",", 
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.587148, 0.40736066666666665`, 0.09470066666666668], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.880722, 0.611041, 0.142051]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.880722, 0.611041, 0.142051]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.880722, 0.611041, 0.142051], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"FontSize", "\[Rule]", "14"}], ",", 
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.37345400000000006`, 0.461046, 0.12992333333333334`], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.560181, 0.691569, 0.194885]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.560181, 0.691569, 0.194885]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.560181, 0.691569, 0.194885], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"FontSize", "\[Rule]", "14"}], ",", 
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.6150173333333333, 0.25708400000000003`, 
                    0.13945266666666667`], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.922526, 0.385626, 0.209179]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.922526, 0.385626, 0.209179]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.922526, 0.385626, 0.209179], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"FontSize", "\[Rule]", "14"}], ",", 
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.528488, 0.470624, 0.701351], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.3523253333333333, 0.3137493333333333, 
                    0.46756733333333333`], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.528488, 0.470624, 0.701351]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.528488, 0.470624, 0.701351]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.528488, 0.470624, 0.701351], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"FontSize", "\[Rule]", "14"}], ",", 
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.772079, 0.431554, 0.102387], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.5147193333333333, 0.28770266666666666`, 
                    0.06825800000000001], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.772079, 0.431554, 0.102387]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.772079, 0.431554, 0.102387]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.772079, 0.431554, 0.102387], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"FontSize", "\[Rule]", "14"}], ",", 
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.363898, 0.618501, 0.782349], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[0.24259866666666668`, 0.412334, 0.521566], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.363898, 0.618501, 0.782349]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.363898, 0.618501, 0.782349]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.363898, 0.618501, 0.782349], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"FontSize", "\[Rule]", "14"}], ",", 
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[1, 0.75, 0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> RGBColor[0.6666666666666666, 0.5, 0.],
                     FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[1, 0.75, 0]"], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[1, 0.75, 0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[1, 0.75, 0], Editable -> False, Selectable -> 
                    False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"FontSize", "\[Rule]", "14"}], ",", 
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.647624, 0.37816, 0.614037], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.4317493333333333, 0.2521066666666667, 
                    0.40935800000000006`], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.647624, 0.37816, 0.614037]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.647624, 0.37816, 0.614037]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.647624, 0.37816, 0.614037], Editable -> False, 
                    Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"FontSize", "\[Rule]", "14"}], ",", 
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.571589, 0.586483, 0.], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[0.38105933333333336`, 0.39098866666666665`, 0.], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.571589, 0.586483, 0.]"], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.571589, 0.586483, 0.]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.571589, 0.586483, 0.], Editable -> False, 
                    Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"FontSize", "\[Rule]", "14"}], ",", 
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.915, 0.3325, 0.2125], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.6100000000000001, 0.22166666666666668`, 
                    0.14166666666666666`], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.915, 0.3325, 0.2125]"], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.915, 0.3325, 0.2125]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.915, 0.3325, 0.2125], Editable -> False, 
                    Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}]}],
              "}"}], ",", 
           RowBox[{"{", 
             
             RowBox[{#, ",", #2, ",", #3, ",", #4, ",", #5, ",", #6, ",", #7, 
               ",", #8, ",", #9, ",", #10, ",", #11}], "}"}], ",", 
           RowBox[{"LegendMarkers", "\[Rule]", "None"}], ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
             RowBox[{"{", "}"}]}], ",", 
           RowBox[{"LegendLayout", "\[Rule]", 
             RowBox[{"{", 
               RowBox[{"\"Row\"", ",", "3"}], "}"}]}], ",", 
           RowBox[{"LegendMarkerSize", "\[Rule]", "25"}]}], "]"}]& )], 
     Scaled[{0.7, 0.2}], ImageScaled[{0.5, 0.5}],
     BaseStyle->{FontSize -> Larger},
     FormatType->StandardForm]},
   AspectRatio->0.85,
   Axes->{True, True},
   AxesLabel->{
     FormBox["\"r [fm]\"", TraditionalForm], 
     FormBox["\"ReVc [GeV]\"", TraditionalForm]},
   AxesOrigin->{0, 0},
   AxesStyle->Directive[
    FontSize -> 25, Thickness -> 0.004, FontFamily -> "Helvetica", 
     GrayLevel[0]],
   BaseStyle->{FontSize -> 14},
   DisplayFunction->Identity,
   Frame->{{False, False}, {False, False}},
   FrameLabel->{{None, None}, {None, None}},
   FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
   GridLines->{None, None},
   GridLinesStyle->Directive[
     GrayLevel[0.5, 0.4]],
   ImagePadding->All,
   ImageSize->{1000, 1000},
   Method->{
    "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
     AbsolutePointSize[6], "ScalingFunctions" -> None, 
     "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
         (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
          Part[#, 1]], 
         (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
          Part[#, 2]]}& ), "CopiedValueFunction" -> ({
         (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
          Part[#, 1]], 
         (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
          Part[#, 2]]}& )}},
   PlotRange->{All, All},
   PlotRangeClipping->True,
   PlotRangePadding->{{
      Scaled[0.02], 
      Scaled[0.02]}, {
      Scaled[0.05], 
      Scaled[0.05]}},
   Ticks->{Automatic, Automatic}],
  InterpretTemplate[Legended[
    Graphics[{{{{}, {}, 
        Annotation[{
          Directive[
           Opacity[1.], 
           RGBColor[0.368417, 0.506779, 0.709798], 
           AbsoluteThickness[1.6]], 
          Line[CompressedData["
1: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
jWz2ptxOFvKMa6JF7Wg45NSzKp7LQpNc1vy9xO012wQ2LtDAmX6fjdj2NIxY
fFCONNJAwxtSVquIZ3BcTK4t1kB1sTWr7YiXPjEPHDDTwD/XaMvNxCmPpBsP
2Ghg/Xffa3HELqWVl8/6aqDg9syD3cTPc+csepyogeFUyomTDjSUxdT6siY1
UCsqgHnHkfRvX68YzdfAM8ccL98nTpd8/frnlAZejMv/W0l8IrHb9pGgJn4d
28VpJna8TC/0lNbEmr75dRPEPbcWTZ810ETFRZNmK51okHpxNYvnp4kMfdeS
F8TbRUI+NzVpYqOG8u1nzjQoM1++n2rVxJGbljcbiJvM1Jp12zRRdsGuG2+I
l+5+9vhUpyae26MZ/oVY9I38laXfNPGfUN2J38S51x54ZApo4Xxz5beLXWjo
W85/tcdEC+kTMrnpxFsPRJRJpmuhv2NDg/dacr/Fn8r0MrTQweDRfj9i8TF8
YHtNC1OsdsgEEhfvF/33xE0t1J0jY3GA+HdwUvlECRlvSTkSQ3xp361HXfVa
OGtrq1op8cvdbzj5f7RQWWg6V8yVBqNAgyZHP21cPy9uxy3iZtkFEiHL5uHx
J/Xi7W40PCo8dWWB0HysEzyxq3EdDREC+msbPs7HL1OZav+6kzxd4Wv2lupg
op6QfpQHDf03NVKyjuriGkbvISNPsr66SsIVHnqoNiBj/4E4MX37Cz+WPmae
nW2yx4uGjSmbmiS/6qN6+ZDpODHfOpfKqjLAtmO84fD1NPT2W4bWRC/Atp4l
SaPE11caqzT6GeKymM7gnRtoKDgTIhNouBC7Ku82vCWO9tjqIDS5EL95qMab
biTfg67s29GNRrhIS0Q0g/iy3pWCRodFuPqc9Rcu8fHqhMsOFYuQOXYiYJ03
DU4qHrmvtI1xJOxe8W1ii70vvGVijXH/ygXBXOIsVX/thkljfCbP7rTxoUH7
6a1Lzt6L8QdnPD+eONGwRv911WJcezxlUTPx9nHh1pf6bPyc5uo0ZxMNvnes
m3wWsDFhJMBOntjT73T9sCEbD6UF2CgQ2zYLPZc3ZmOjgfRKReL5dwUf+Zmy
UV0U9VWJ+/0ZuZQVG9M45n+0iLe9ngrV28RGKUmv02xin9jlhyt92fgszTPC
hNgdIw66bGHjc4+VB5YQWxfSe0K2snHM//FmU2LtOMqfE8TGT2o5ZsuJey14
jhsOs9GPb9NrSex/b4wVe56NLvdvKLsR7z617rd9EhuT9nforiMOWVf6XjKZ
jX+Oji11J46ZDDmXeImNt5fkuHkSFy6jplIz2GhoWR29kbhcfOP7DVlsvHL4
Too3MafzYYlKNhujxbSzfYjfRh4Nysph48VvPyp8iSnO9Lubd0l+sbZv/sSC
yVtKdhSw8d3ORRNbiSW3cRL0i9joJntsehux/BLNoKFiNkqe44hvJ1YXjbIu
LCF9zBRRCCTWfd/LDC5l47zRv9v+b+M86ynjB//ZPCz33fi//9naXrSkrOI/
7zwXy3xc/Z8TX0sm1L74zzq9SlY9vf+5anw+NT39n/8HP5F7eg==
           "]]}, 
         "Charting`Private`Tag$3451#1"], 
        Annotation[{
          Directive[
           Opacity[1.], 
           RGBColor[0.880722, 0.611041, 0.142051], 
           AbsoluteThickness[1.6]], 
          Line[CompressedData["
1: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
VhmQNPw28M8VU6uIxcV//h8wO1YM
           "]]}, "Charting`Private`Tag$3451#2"], 
        
        Annotation[{
          Directive[
           Opacity[1.], 
           RGBColor[0.560181, 0.691569, 0.194885], 
           AbsoluteThickness[1.6]], 
          Line[CompressedData["
1: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
ob+uoa8gFhb++n9O+O6r
           "]]}, "Charting`Private`Tag$3451#3"], 
        Annotation[{
          Directive[
           Opacity[1.], 
           RGBColor[0.922526, 0.385626, 0.209179], 
           AbsoluteThickness[1.6]], 
          Line[CompressedData["
1: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
N9t+mfxlCk2Ttb7+y/8HwOc7+Q==
           "]]}, "Charting`Private`Tag$3451#4"], 
        
        Annotation[{
          Directive[
           Opacity[1.], 
           RGBColor[0.528488, 0.470624, 0.701351], 
           AbsoluteThickness[1.6]], 
          Line[CompressedData["
1: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
iqXLn5mZ9f8AZxBXWg==
           "]]}, "Charting`Private`Tag$3451#5"], 
        Annotation[{
          Directive[
           Opacity[1.], 
           RGBColor[0.772079, 0.431554, 0.102387], 
           AbsoluteThickness[1.6]], 
          Line[CompressedData["
1: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
JWMbXy1bdUjO5PPQsmtZKjw+f9n/AwCqkj8=
           "]]}, 
         "Charting`Private`Tag$3451#6"], 
        Annotation[{
          Directive[
           Opacity[1.], 
           RGBColor[0.363898, 0.618501, 0.782349], 
           AbsoluteThickness[1.6]], 
          Line[CompressedData["
1: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
z+rnzORp2A3x5lwjNJDMzs75X3bEq5s=
           "]]}, 
         "Charting`Private`Tag$3451#7"], 
        Annotation[{
          Directive[
           Opacity[1.], 
           RGBColor[1, 0.75, 0], 
           AbsoluteThickness[1.6]], 
          Line[CompressedData["
1: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
M/HGnW/Fa66TmspXV9f8P0oaFLI=
           "]]}, "Charting`Private`Tag$3451#8"], 
        
        Annotation[{
          Directive[
           Opacity[1.], 
           RGBColor[0.647624, 0.37816, 0.614037], 
           AbsoluteThickness[1.6]], 
          Line[CompressedData["
1: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
jc3zZsmWbxmUzbtu0kQ5Ozvv/wAi4bfq
           "]]}, 
         "Charting`Private`Tag$3451#9"], 
        Annotation[{
          Directive[
           Opacity[1.], 
           RGBColor[0.571589, 0.586483, 0.], 
           AbsoluteThickness[1.6]], 
          Line[CompressedData["
1:eJxFx3k41HkAx/FBKLkmKUeY+SbHOMJvRbX8Pq0pCpX7cZZJihBKkVSPtFJI
slTSpJaSnI2kQ+ToxCLJgyJmax1LTZq1au3uX/54P+/nxebtdd0pyWAwPP/r
/+cd4cmYB+XaMhjXrflXcmwbO1lOXqw4Okipj7fvVgw921x7nMVKoRdfzmNz
b52g8+rSdKRZF+izkU9VO4t+ocNsYsLFOkW05MF05Y4rBXTnzO6sSZ0a2rot
dMQlqYqW7X2vP67zjO6+lNnRa9ZE5z/nR43q9NALJk3DLx19RZeWpfSGmY7Q
nxqS+gPXDtO76PYLY9EienhmqWa7/DgdITQcEpRO05GDFx8dL/9My7GT9N9Z
M+CizBSsVxbT6covOPnbpVC6TiK9THaG5vW6P5J6KYPfKsjBAqtZOqopibdX
Xw5JFlt+Z+ZJoCJS3k1towKUrEozbaKkkB+/Z8TMSxkffhQn2/Kkkcj/5vJl
jImruxv6Bg1kwegcwINDKlBdmz7o/XY+9PYHx7pzVHF9/xN753I5DE/leC58
uASWRl8Xu/rKY5MwNCEzSg3X9JeL9IgiNg9nGGlrayC8Qcle+EYJIw28Y09L
NBFbfGh+dZUyTJmvtey2aSE3Ht3JqUzI0VOBfSJt3LkVdmDIZRHsx33ExIMF
omSxc6+uCt48DpLwMWYj6yMzdXRCBVUnGwNYU2xY1bDZX28uRrB0zEBrK0GK
RqVta7QqdkTHV8lfXI5rzV5vBZwlWLnLqNUpUBeu4o7s1L4laFtkvDBm9QqE
1bKV2i8uxf3SxFxjKT0sUBz4MrFRDfESnK0v+/XgiX5LPWl1yPUdcogQ6EP3
hUxy0D11CAvZWfzDBvijX8/fOlADWQbq82o8DOF8xtO7SUUTGReDnwSyOMh2
7f6w/q4mfLL8W+U/cMCVUc847bUMf3ELpvm1RkifPV1hJqmFIeFPsY+TjdEu
UDwYzNfCVRtzzZZAE1z1q3Ars9dGyYkY5i4TU4z3Ny3vfa+NZI8djlJTplgl
bBowjtOBZV9+UXLLSsiJcp9rK7Bw3jC3pMXRDJGjl6f9vVg4Wpd23rHGDAnn
byv0FLLgrOlR8FzXHGLDzdc+ilhYF/HEl5lijpVqEo6f1rDBX8bTfTlljt72
5iiFZDZ0G65nb/a1wOCW+hBuCxsZJo85HbUW4ARdOOHGJAgWzWt/xqGQ9YOW
3VYfgoCb3FY/Ywr1PMb3AF8Cz8CkFxMmFFTd2svD/Qg2tEk1q5pTeNCVOHsq
gECvWPJ+oBWFeSrsmUYegZDHKJi2o/AzET1etYcgqGMm1tCfQrOQt4J5mMAv
Ze2BBwEUdOsEftoJBO6I37dlO4VqTmaq0RECbunf4TE7KAj5/7xaf4xA99Q0
rz6EgpvN54a4JIKhdWIn7wMUotsmD7xLJeBVfGalnKHQdW1BY34eQVii27dN
ZymE8nLyXl4miHETdMufozBq4R4h5hOcnIpJz8im8FXF4aPTVYLS1dMzOXkU
InO2GYgLCe7K+XR78yncuPswl32DoL73XqVmPoU/EzaMORYRvEo4HML/lUKR
xsTRK8UE0/WzrwuLKXxv6+pxKCeQPLe9cncJhTNKKl3RFQTyQfVpnDIKmbOd
1ZcqCVQtSchYOQXnJVEnm28TaMsc55ZWUpA1UfSeFBAYdA/pRAoojPeo+ThU
EZjf4M6Y35nzmriC16LqOXM3yVRW1cw5ND1F52HdnDM65NMan8xZf0jd7v3Q
nGtFetOzs3P+F0ElWgo=
           "]]}, "Charting`Private`Tag$3451#10"], 
        Annotation[{
          Directive[
           Opacity[1.], 
           RGBColor[0.915, 0.3325, 0.2125], 
           AbsoluteThickness[1.6]], 
          Line[CompressedData["
1:eJwd13cgld8bAHAjkpEt27WudW2VUc7TUBKRUiqpjCgjI6VCopAipEiZUXyF
iIwyIysZSVZJtsjm3iv5nff31/t+/jjP85znnPMOabtLlo5MDAwM/xgZGIhr
YoAdq6bDU0N8m834PM6w9gvJ9DjpGmLIT7r1JNcHrX+sCCaR7iKGpZcdprl3
UGJVhBQL6QmqSklzr8p5hFx3+ritSGWhQJcND8ezM9CXVefYWalS1HY+amw8
vQht7PulMC3ViEoyDrIkhteh1KZkz99SPUiuZO9hbdWvaDG+SHngfg8ynlf3
ZLjzFe1zah7qoPWg99k2HMn9X9EU84pV2ZdepHiJeeLQvS6ku/OQ/t3QfnT0
vc0pt9FvqC3vL5PCzAB6pZHmbfqwF91sophonhlC8VIlRtp1Ayg3726fq9ok
EnBx4thcMYwm+Sbvm5ybRI37FpVDfw4jhSsmhoqxk+hhr3HICNMIStnBkTpE
m0Tyc4pdh/ePoJjG++dP1v1GltPVuuOfR9CVoQdz+22mEfegPJmtZxQlczQH
8xrNIlGfmlnWnnHkhNqfTHktoCLbz+2BYVOIIW25rO/eAqJ6weP3z6dQ/Abx
/qb0BRSe17d7oGIKNTSel8zqWkASh9Ku9SxOIcWjf9Mc9ReRhdeic9qZaTTu
rPDqB+MSkj+1T/yBxh90Mca/oi1qGQkLnM0jVc0gpqW0gcqsZdR37Ge/WfcM
SjjewJBXs4yquiyO28/OoCZx/j0Ri8soxQneyPLMIpWXmfUHrFfQaFlMznU0
i6befWmrkaKizaxqsvSns8h9RGmoMJeGbj/y8L9kOod+2vawVTfSULo6a8u/
43PoSHeYWsswDQUat2resp9Dus1j10ZE6UiX3HX2zPU5xJyfwSMUSkdb2dXP
BL2cQ/F+0oZXz6yi+I86Ri7rc6iaX+SJHs8a6uup+cf5Yh7pRDRUGKmsoZDB
fYW8r+fRC1bf4cP71lCERkgxe9k8uk/rUr/ot4bezku09rTMo2MDsR8TxteQ
raXpyenFeTT5H8/iatU/9CJWM2UeFhC79G2FAV0G8K/PGn/XtoAadkSrBxgx
QNrbsvtN3QsoxDppu4QlA4wa+gq1/VxATFEl+0+5MEDne43VytkFRP835fQt
kQGqm0smtXkW0e9+q8xWJkawv5/j4G22iD7FKyhVfWKEwp6c02HViyi8UEfz
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
f3no6NOw/9Hu/SIQkl3n3iZARw1+24LDD4lAYYV9ErsgHdUKzOTvsBKBG9li
Pnux3+89y51qJwIz3r9FirFfpe9uuuAvAuZJ58zjhegowmEjrBaIwGLjco+J
MB0dGo5SkZQUhSM3F5u8xXA+leFOGzlR+Nk0+DgF+6D39oCnyqKQL/NGpgXb
mOlHm/B2UWCvd74hL47nR1K5wm8hCldWOvW/YG+1qatiCxKFWZb2nbKSdCTe
SbNaGBGF8MnoxDgSHSWIma1rTonCs1sSHOXYIvYpmR7zomB6YHT3L2yh+X2r
0/9EQbLxNB9Fmo54eGJTxreIAYrk0yvHZjZV+/39gBhEwtuRrzJ0NPnBLrAh
RwyaTL5m/pKjI6no7ouRhWKwyWLi3gZ5vN62h6yOvhMDfXNWfTJ2BVVP+WeD
GGwvSqY6Y8eo8nauDImBxUZBtilsg7hKBQVRcXArzS4cJ9PR/YvirXdCxOED
k6hlhSIdVW+PKT0YIY7P4w/lXuzlDWzpvLHicPj60rcl7LPJC76JqeJQmyv/
mqJERzqdTTJF78XhKvvXM/HY33deuzI8Lw76EiZLTsp0pMbbJbHnjASIcrZk
T6jQ0WjEaNAjRwk4WLmyYR07kX1lbMxFAhjsaw0FKHTEuUG44L6vBNwJpR41
xJ5cPrGvK1oCpjPyeaKxM/q/u1+olYDGd7W/NVRx/zNHKh8oScKXY9PHTqnR
UafcstwvdUkw9vTb4oZ9L5U1XGebJJyQ+1UegE1PUDjas1sSvCYa3qdid0dc
GJexkYRyY4nQUeyH3tM8byMl4cXWdTcXdTpiR0vn+hckQddV5oa9Bh357lJk
e0uXBOHrDVe8sUf3nMp9wCgF1yK+WQdj1xhX03dzS8HXpfa2NOzrlhEPs5Sl
IC86JvYn9m9H+bor56RAwPRwxHFNvB/vWynytkpB4weKsY4WPj8Pwj5PfpWC
4+Skk7uwM6PfXa7tl4KWGV7rQ9i3H0tXX52UgmT3OwLO2JJty5QZJhKwDWnG
JWB39dTUWUmSQCk2a2AVe//0yRUZKxIs/3A88lqbjpIEgr/ctCbBzSBSexn2
okF2Xv8pEtis7DWsw04JX3V6bEeCc/9pjfVg0xWedW/yIEHEpMsVJh183uy+
l86Gk2AtgJJigc3TfcavoooEkc0L9YPY59dDrcVqSTAPinaT2O/Jr3V860kw
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
           "]]}, 
         "Charting`Private`Tag$3451#11"]}}, {}, {}}, {
     DisplayFunction -> Identity, Ticks -> {Automatic, Automatic}, 
      AxesOrigin -> {0, 0}, 
      FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
      GridLines -> {None, None}, DisplayFunction -> Identity, 
      PlotRangePadding -> {{
         Scaled[0.02], 
         Scaled[0.02]}, {
         Scaled[0.05], 
         Scaled[0.05]}}, PlotRangeClipping -> True, ImagePadding -> All, 
      DisplayFunction -> Identity, AspectRatio -> 0.85, Axes -> {True, True}, 
      AxesLabel -> {"r [fm]", "ReVc [GeV]"}, AxesOrigin -> {0, 0}, AxesStyle -> 
      Directive[FontSize -> 25, Thickness -> 0.004, FontFamily -> "Helvetica", 
        GrayLevel[0]], BaseStyle -> {FontSize -> 14}, DisplayFunction :> 
      Identity, Frame -> {{False, False}, {False, False}}, 
      FrameLabel -> {{None, None}, {None, None}}, 
      FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
      GridLines -> {None, None}, GridLinesStyle -> Directive[
        GrayLevel[0.5, 0.4]], ImageSize -> {1000, 1000}, 
      Method -> {
       "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
        AbsolutePointSize[6], "ScalingFunctions" -> None, 
        "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
            (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
             Part[#, 1]], 
            (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
             Part[#, 2]]}& ), "CopiedValueFunction" -> ({
            (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
             Part[#, 1]], 
            (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
             Part[#, 2]]}& )}}, PlotRange -> {All, All}, PlotRangeClipping -> 
      True, PlotRangePadding -> {{Automatic, Automatic}, {
        Automatic, Automatic}}, Ticks -> {Automatic, Automatic}}], 
    Placed[
     Unevaluated[
      PointLegend[{
        Directive[FontSize -> 14, 
         Opacity[1.], 
         RGBColor[0.368417, 0.506779, 0.709798], 
         AbsoluteThickness[1.6]], 
        Directive[FontSize -> 14, 
         Opacity[1.], 
         RGBColor[0.880722, 0.611041, 0.142051], 
         AbsoluteThickness[1.6]], 
        Directive[FontSize -> 14, 
         Opacity[1.], 
         RGBColor[0.560181, 0.691569, 0.194885], 
         AbsoluteThickness[1.6]], 
        Directive[FontSize -> 14, 
         Opacity[1.], 
         RGBColor[0.922526, 0.385626, 0.209179], 
         AbsoluteThickness[1.6]], 
        Directive[FontSize -> 14, 
         Opacity[1.], 
         RGBColor[0.528488, 0.470624, 0.701351], 
         AbsoluteThickness[1.6]], 
        Directive[FontSize -> 14, 
         Opacity[1.], 
         RGBColor[0.772079, 0.431554, 0.102387], 
         AbsoluteThickness[1.6]], 
        Directive[FontSize -> 14, 
         Opacity[1.], 
         RGBColor[0.363898, 0.618501, 0.782349], 
         AbsoluteThickness[1.6]], 
        Directive[FontSize -> 14, 
         Opacity[1.], 
         RGBColor[1, 0.75, 0], 
         AbsoluteThickness[1.6]], 
        Directive[FontSize -> 14, 
         Opacity[1.], 
         RGBColor[0.647624, 0.37816, 0.614037], 
         AbsoluteThickness[1.6]], 
        Directive[FontSize -> 14, 
         Opacity[1.], 
         RGBColor[0.571589, 0.586483, 0.], 
         AbsoluteThickness[1.6]], 
        Directive[FontSize -> 14, 
         Opacity[1.], 
         RGBColor[0.915, 0.3325, 0.2125], 
         AbsoluteThickness[1.6]]}, {
       "1/10", "2/10", "3/10", "4/10", "5/10", "6/10", "7/10", "8/10", "9/10",
         "99/100", "Vac"}, LegendMarkers -> None, LabelStyle -> {}, 
       LegendLayout -> {"Row", 3}, LegendMarkerSize -> 25]], {0.7, 0.2}, 
     Identity]]& ],
  AutoDelete->True,
  Editable->True,
  SelectWithContents->False,
  Selectable->True]], "Output",
 CellChangeTimes->{
  3.74547259269133*^9, {3.745472632754223*^9, 3.7454726903995523`*^9}, {
   3.74547273240971*^9, 3.745472747648964*^9}, {3.747460787107811*^9, 
   3.747460839179865*^9}, 3.74918762526363*^9, {3.749187664480536*^9, 
   3.749187673584354*^9}, 3.74920171202057*^9, {3.749202021798378*^9, 
   3.7492020861684933`*^9}, 3.749484294971424*^9, {3.749484353160563*^9, 
   3.749484367898938*^9}, {3.7494844106179256`*^9, 3.749484425790181*^9}, {
   3.749484481700986*^9, 3.749484497426057*^9}, 3.7494846294689493`*^9, {
   3.749554549851713*^9, 3.749554554295527*^9}, 3.7495558490146914`*^9, {
   3.7495632990114813`*^9, 3.749563360838481*^9}, 3.749563794425291*^9, {
   3.7495729728743258`*^9, 3.7495729869095583`*^9}, 3.7496124249095488`*^9, 
   3.749646640770048*^9, 3.749655773247616*^9, {3.749676738775556*^9, 
   3.749676762426146*^9}, 3.749743494796297*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Plot", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{"Re", "[", 
      RowBox[{
       RowBox[{"ImVcu", "[", "1", "]"}], "[", 
       FractionBox["r", "0.197"], "]"}], "]"}], ",", 
     RowBox[{"Re", "[", 
      RowBox[{
       RowBox[{"ImVcu", "[", "2", "]"}], "[", 
       FractionBox["r", "0.197"], "]"}], "]"}], ",", 
     RowBox[{"Re", "[", 
      RowBox[{
       RowBox[{"ImVcu", "[", "3", "]"}], "[", 
       FractionBox["r", "0.197"], "]"}], "]"}], ",", 
     RowBox[{"Re", "[", 
      RowBox[{
       RowBox[{"ImVcu", "[", "4", "]"}], "[", 
       FractionBox["r", "0.197"], "]"}], "]"}], ",", 
     RowBox[{"Re", "[", 
      RowBox[{
       RowBox[{"ImVcu", "[", "5", "]"}], "[", 
       FractionBox["r", "0.197"], "]"}], "]"}], ",", 
     RowBox[{"Re", "[", 
      RowBox[{
       RowBox[{"ImVcu", "[", "6", "]"}], "[", 
       FractionBox["r", "0.197"], "]"}], "]"}], ",", 
     RowBox[{"Re", "[", 
      RowBox[{
       RowBox[{"ImVcu", "[", "7", "]"}], "[", 
       FractionBox["r", "0.197"], "]"}], "]"}], ",", 
     RowBox[{"Re", "[", 
      RowBox[{
       RowBox[{"ImVcu", "[", "8", "]"}], "[", 
       FractionBox["r", "0.197"], "]"}], "]"}], ",", 
     RowBox[{"Re", "[", 
      RowBox[{
       RowBox[{"ImVcu", "[", "9", "]"}], "[", 
       FractionBox["r", "0.197"], "]"}], "]"}], ",", 
     RowBox[{"0", 
      RowBox[{"Re", "[", 
       RowBox[{
        RowBox[{"ImVcu", "[", "10", "]"}], "[", 
        FractionBox["r", "0.197"], "]"}], "]"}]}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"r", ",", 
     RowBox[{"1", "/", "1000"}], ",", "12"}], "}"}], ",", 
   RowBox[{"AxesStyle", "\[Rule]", 
    RowBox[{"Directive", "[", 
     RowBox[{
      RowBox[{"FontSize", "\[Rule]", "25"}], ",", 
      RowBox[{"Thickness", "\[Rule]", "0.004"}], ",", 
      RowBox[{"FontFamily", "\[Rule]", "\"\<Helvetica\>\""}], ",", "Black"}], 
     "]"}]}], ",", 
   RowBox[{"BaseStyle", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"FontSize", "\[Rule]", "14"}], "}"}]}], ",", 
   RowBox[{"AspectRatio", "\[Rule]", "0.85"}], ",", 
   RowBox[{"AxesLabel", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"\"\<r [fm]\>\"", ",", "\"\<ImVc [GeV]\>\""}], "}"}]}], ",", 
   RowBox[{"ImageSize", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"1000", ",", "1000"}], "}"}]}], ",", 
   RowBox[{"PlotLegends", "\[Rule]", 
    RowBox[{"Placed", "[", 
     RowBox[{
      RowBox[{"PointLegend", "[", 
       RowBox[{"uSetS", ",", " ", 
        RowBox[{"LegendMarkerSize", "\[Rule]", "25"}], ",", 
        RowBox[{"LegendLayout", "\[Rule]", 
         RowBox[{"{", 
          RowBox[{"\"\<Row\>\"", ",", "3"}], "}"}]}]}], "]"}], ",", 
      RowBox[{"{", 
       RowBox[{"0.8", ",", "0.3"}], "}"}]}], "]"}]}], ",", 
   RowBox[{"BaseStyle", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"FontSize", "\[Rule]", "14"}], "}"}]}], ",", 
   RowBox[{"PlotRange", "\[Rule]", "All"}]}], "]"}]], "Input"],

Cell[BoxData[
 TagBox[
  GraphicsBox[{{{{}, {}, 
      TagBox[
       {RGBColor[0.368417, 0.506779, 0.709798], AbsoluteThickness[1.6], 
        Opacity[1.], LineBox[CompressedData["
1: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
I7wi
         "]]},
       Annotation[#, "Charting`Private`Tag$6190#1"]& ], 
      TagBox[
       {RGBColor[0.880722, 0.611041, 0.142051], AbsoluteThickness[1.6], 
        Opacity[1.], LineBox[CompressedData["
1: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
/nFqbOfcr18kcuoe+uP/AW2/8Ls=
         "]]},
       Annotation[#, "Charting`Private`Tag$6190#2"]& ], 
      TagBox[
       {RGBColor[0.560181, 0.691569, 0.194885], AbsoluteThickness[1.6], 
        Opacity[1.], LineBox[CompressedData["
1:eJwd0Xk41PsXB3BGIiVbishgzPdbKlqUfc5HtiyXuFlSJJksJUNEylDZSvxk
i5ClREzEfDGaLCURhRT9lFS4UqTIzVJxv/XHec7z+uf9vM9zVDz87ZkUAQGB
C+T83nLeBx/sPbwHWG4ZnQNjTQxhTztu8cYToMYZfqd5Z4xBCRFWYFDPgn3e
5FJi2xxD0MCjv6g4DiyDeSuLzSgQGfm2Q1Q+CXzXzsp//yYCAkMJ5XVvUiC+
QZtuki8OEaYGSYEFVyCnTSJgiCILC0WfWLhXFgTWjCVo8hWALZZp178xF9S6
D/fU6aoAu5qWuTs0HxJanw0NpalB/YewZdddrsN8PUwtm8JhQa771C+DQmjd
KlezXGITMCw3fHKiFsEIk937b8AWYJ+OdKkUvAWjlaxnzP5tUM952bZiuAQ+
LXo86THbAQtvNPS9HnFg3NqhxbRCGwwlYkrvF5eBcYhnxkUtPWDkTYgnmt4B
66i5HR76hjCgs9aMv7MCOLtbPiqqIFDyDaiWledCtcOB2GncGOopORO7xAgw
6Mcc3UtNwC2rFWP9IMDEzXb6racZXHtCvdL2phqsT52rnZ20AAbTqnOmowa6
lioqRvOsYODXSRF6Iw/2plaxpSL+AnZ6AdhX1IKz22MH66u2oKTZERJRcBfS
RWT2UVbaQX3LXDknhQ8C7kaxAzb24OZOH+2LugfHeP5Vd//3N+RcPuOs5VUP
fj46daekHMFAvTjpkHMDGCiYr8u0d4Lj7308W9QaYcVTh3BeijOsDEvLnpa9
D2VbThjOyO4Hm9LxFbazDyDBbj5aT8gdOsSzPgvVPYJW2002B1Yx4Wn3TJmf
WQf0P9PL+r8eCzgLht/XP+6AhOhLQaxCFlxUjzIctuoEO3ndTHnJAKAZiR65
vb4L3qDkwaP/BMC7jNRpmsYzoPX4a8PVE+Cy+7aUlO5zUJuQSxuihoBN0YDV
mM1LOJJS8yM6ng07mEaNuWFvoYohbZHbFwNdRr47vdw+gJsW2+paUDLEldsS
Gn0T4Cet5Du5ORNWxecEKp/+Bsb1ea5bJPJgedHSny4mM2Bm9DzeSeo6nGyY
Grjr9gOSi+g8c5GboNrC6ZliLsIV8f6jN7OKga9wW2kiRRC5uE55FdeWANXe
NCI4Rwhtr5QT06/lQK+BU4ZDlDAaKfgyQjiUgQZ1Dz//kAgqdlwbXskth8YI
sfhIr2Uo56a0OiX8DhSmMmR4lsvRyYsFuX6Ld+AhrrX7nKM4IoqLKJ6hFRBV
KRnLc5ZAG9JZlMQ3FdAeur2Bli2J+mZL9VI1KiHACS5r5Umh8Bud+XhYJRhJ
xjVMJkuj2M2XBT9XV4JG3FaT2UwZpPNPO73pSyWMne54qpW9CiWGuUk3U7nQ
bVHMXZcgi2TceWsKzbjQ2zv4xTZ5Ndr2qlXY6igXljBc4jRi1qD5TRUO1Atc
oKg0042D5ZC36+zHgQIurGtKks8PlUfRaazuM3wueECmT6nvWtR83RNv6+TC
wzCK5CJLAfXf9uVYDXHh+9aD/LhARUQopuKm01ywb5p9UO+xDnUGCLV6Uwho
l/mmzPBSQhkK5aFqkgQcZ6i/9nGhoo6eB8wiBQICAtWfMtWUkUlzXNoAnQA9
+lcnfqEy0o7H/Uc1CVhj+kLSS0kFBeUxtHx0CDj/cDRIO18FTUScHXmCCFhS
oSDipqCKOk4Jmk2ZE+C3vzWLmqKKLv/cvP2QDQGezMLXwrI0FFjRe+XxXgJY
/XkWuxJpaHV2Vq2FCwHLuU88rkupoXbO/piWgwQkmgeyc5PV0Hn5dq86TwIw
i52tk2J0RGOWjgv4EGBdol7nnUBH52ut4rT9CIgNNXy3QwRDJ5raRrksAngl
zyNllmHozOOk8EbSo/0+KpNiGIrudJR+StrSKN2DsxJDGa8H9UdIrxD7Mqy6
GkPMwNc2cgEEJGXlfZSgY6jm7lxdGOmMeqFvH3dhKFJ+6IxuIAGtXzNTWkww
1Huua9aE9JzqFq1CMwydPp4btIe0S+yBYHdLDDWbGh7zIq24p2qm1w5DdamZ
1DTS+e+P/Gxyx1BMxjx3gnTJkjbha2wMvbcKEMg6QcC+2RW6NyIxVBDwy+Im
adFx22Ml5zCUtP2efwVp5vOe7uoYDB2r0eW3kFYueJ/bmYghqiNfYpp0Oszp
CuZiaFP5I2fLIPJfYeuPezZgyPXvrh0TpLcdP5rvex9DyTQ0PUP63aGyF6wm
DLV8K68UDCaAYaGlH96CIdsXn5VkSc+vQaLpnRgKwhr4+qRZVU4FLW8xdOP+
xpJo0ge+xvSqC+Do0sXoVMmTBDS4nvNYScHRvVlNaznSqu3hE5NCOBKaoX+n
kh4tDFpaK4IjmY1qSJN08H6PneYSOEqI5Bv/RTrxkWH6YSUc9XgOT8eQbsye
dsg2wNHmRuHcSdI0sa/vIxg40kmNHJshHRMy5ncY4chWVGDLAmlr+8FodRMc
3VqYqRALIaBPpKuKZ4Wj9p2tVBrpqcBS2R4XHHl3lrDtSNMsPHrET+HorfJJ
70LSkoNjORtO42jhisPLEtILYcFHTMNxhLJi9e+QfsWJmzlzFkeDq7wX7pJO
kiyXH7+Ao+aXtKRO0uxbOoMil3CU/5ER+oL0sV0PSmiJOAr/sc+9j7R5UI/+
/mQcravlyQyR1hI/uCQkFUdpog7DH0ir3hx9kpyOI3HnSWL8dx8ITCvLwFF0
UUL05O8+L3+4tl0l79ed3zb9Oz93d0FxKY6yKoW3//arI2kjMffI/hul/rj6
Xw1/4wEcPVRa/8fJUa0zi4s4uigFf/wfyzDubg==
         "]]},
       Annotation[#, "Charting`Private`Tag$6190#3"]& ], 
      TagBox[
       {RGBColor[0.922526, 0.385626, 0.209179], AbsoluteThickness[1.6], 
        Opacity[1.], LineBox[CompressedData["
1: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
         "]]},
       Annotation[#, "Charting`Private`Tag$6190#4"]& ], 
      TagBox[
       {RGBColor[0.528488, 0.470624, 0.701351], AbsoluteThickness[1.6], 
        Opacity[1.], LineBox[CompressedData["
1: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
         "]]},
       Annotation[#, "Charting`Private`Tag$6190#5"]& ], 
      TagBox[
       {RGBColor[0.772079, 0.431554, 0.102387], AbsoluteThickness[1.6], 
        Opacity[1.], LineBox[CompressedData["
1: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
66f/BRtMwac=
         "]]},
       Annotation[#, "Charting`Private`Tag$6190#6"]& ], 
      TagBox[
       {RGBColor[0.363898, 0.618501, 0.782349], AbsoluteThickness[1.6], 
        Opacity[1.], LineBox[CompressedData["
1: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
f+3C+CQ=
         "]]},
       Annotation[#, "Charting`Private`Tag$6190#7"]& ], 
      TagBox[
       {RGBColor[1, 0.75, 0], AbsoluteThickness[1.6], Opacity[1.], 
        LineBox[CompressedData["
1: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
         "]]},
       Annotation[#, "Charting`Private`Tag$6190#8"]& ], 
      TagBox[
       {RGBColor[0.647624, 0.37816, 0.614037], AbsoluteThickness[1.6], 
        Opacity[1.], LineBox[CompressedData["
1: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
R/E=
         "]]},
       Annotation[#, "Charting`Private`Tag$6190#9"]& ], 
      TagBox[
       {RGBColor[0.571589, 0.586483, 0.], AbsoluteThickness[1.6], Opacity[1.],
         LineBox[CompressedData["
1:eJxNzwlI02EYBvB/y6Up4rzStdzhSRMW0lSInHlVi0IdeVZKyzkVTFuZ5syj
ZC7Esc0CLedV0lBTchXWcpoaDWsSkkYpKiMsMDzJGVaroN53H3x8/OCB73lY
wgKBiEQQxIk/9+/rnZM5fPJcQiTx75CzEnXa4ItgUjGZxmNUgSsr58YdqEpw
uWNj4kxwCzjCRdb1QtsD1qjKUrliA9g0YenJPzwODhVFDbWUzoHfRuWFiTM+
g+W98Y84H5bAHrUaCVO6Dna6v+NHeqwFfHlwbfZZxhbY91X35JrICtbTHtCX
6rcd+m+GIK6iSLMdPHUwpSGpmgzmMBL0bWftwUMVjrWV4p3gjps89/5jTuDR
IO7Ra8nO4Oo+Sk1/qgv4dcn+Qb8mCvhCSqSK2+oKjqLIB1fVbvi/PCR2s9Ed
vCgdN3GbPMATfK3Op84T+0+Zl+PVu8B2vHQ5R+YFJrFeBsQUeYN9RpTUthIq
WBjZmNuVtxv3lJIo1kIaeCMkUy+X7AELRjaHDUIf3Oe+zuSJ6eDzPPZ0bjoD
90rYJpE/E3wgYCVF34H2intHEdNZ4OujXy6Ft6HtHtLsM2i+4PxTxjuMenSW
qGOa7OkHLpxp5Ucr0E66N8K7rv5gxRFJeYsaHcgPM646BoCPd7IHcurQNSUR
86H2geBOuzFyczn69Ipsik0Egf34wknnK2iKeVGzV4r+VVqUHXcV/bFbbimr
QispvdSvN2zy77fOjN22yWffWpA9Rxut9N52A/pJg7bYMIRWjekdNkbRRzlm
tshkk//GKYiZRd9T9IdnzqPVQdGE1IzOT0tS9S2g/QekOtYy2i2ZXBaxiiaW
FbFp6+hpZvuk0mLT/2lwc/d3mz6Cx9nGLZs+i7x9n37a9Kk2WqxW9G/PsAqY

         "]]},
       Annotation[#, "Charting`Private`Tag$6190#10"]& ]}, {}, {}}, InsetBox[
     TemplateBox[{
      "\"1/10\"","\"2/10\"","\"3/10\"","\"4/10\"","\"5/10\"","\"6/10\"",
       "\"7/10\"","\"8/10\"","\"9/10\"","\"99/100\"","\"Vac\""},
      "PointLegend",
      DisplayFunction->(FormBox[
        StyleBox[
         StyleBox[
          PaneBox[
           TagBox[
            GridBox[{{
               TagBox[
                GridBox[{{
                   GraphicsBox[{{}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], FontSize -> 14, 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], FontSize -> 14, 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], 
                    PointBox[
                    NCache[{
                    Scaled[{
                    Rational[1, 2], 
                    Rational[1, 2]}]}, {
                    Scaled[{0.5, 0.5}]}]]}}}, AspectRatio -> Full, 
                    ImageSize -> {25, 25}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.33999999999999997`] -> 
                    Baseline)], #, 
                   GraphicsBox[{{}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], FontSize -> 14, 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], FontSize -> 14, 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], 
                    PointBox[
                    NCache[{
                    Scaled[{
                    Rational[1, 2], 
                    Rational[1, 2]}]}, {
                    Scaled[{0.5, 0.5}]}]]}}}, AspectRatio -> Full, 
                    ImageSize -> {25, 25}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.33999999999999997`] -> 
                    Baseline)], #2, 
                   GraphicsBox[{{}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], FontSize -> 14, 
                    Opacity[1.], 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6]], {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], FontSize -> 14, 
                    Opacity[1.], 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6]], 
                    PointBox[
                    NCache[{
                    Scaled[{
                    Rational[1, 2], 
                    Rational[1, 2]}]}, {
                    Scaled[{0.5, 0.5}]}]]}}}, AspectRatio -> Full, 
                    ImageSize -> {25, 25}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.33999999999999997`] -> 
                    Baseline)], #3, 
                   GraphicsBox[{{}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], FontSize -> 14, 
                    Opacity[1.], 
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    AbsoluteThickness[1.6]], {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], FontSize -> 14, 
                    Opacity[1.], 
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    AbsoluteThickness[1.6]], 
                    PointBox[
                    NCache[{
                    Scaled[{
                    Rational[1, 2], 
                    Rational[1, 2]}]}, {
                    Scaled[{0.5, 0.5}]}]]}}}, AspectRatio -> Full, 
                    ImageSize -> {25, 25}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.33999999999999997`] -> 
                    Baseline)], #4}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                 AutoDelete -> False, 
                 GridBoxDividers -> {
                  "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                 GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}},
                  GridBoxSpacings -> {"Columns" -> {{0.8, 0.5}}}], "Grid"]}, {
              
               TagBox[
                GridBox[{{
                   GraphicsBox[{{}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], FontSize -> 14, 
                    Opacity[1.], 
                    RGBColor[0.528488, 0.470624, 0.701351], 
                    AbsoluteThickness[1.6]], {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], FontSize -> 14, 
                    Opacity[1.], 
                    RGBColor[0.528488, 0.470624, 0.701351], 
                    AbsoluteThickness[1.6]], 
                    PointBox[
                    NCache[{
                    Scaled[{
                    Rational[1, 2], 
                    Rational[1, 2]}]}, {
                    Scaled[{0.5, 0.5}]}]]}}}, AspectRatio -> Full, 
                    ImageSize -> {25, 25}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.33999999999999997`] -> 
                    Baseline)], #5, 
                   GraphicsBox[{{}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], FontSize -> 14, 
                    Opacity[1.], 
                    RGBColor[0.772079, 0.431554, 0.102387], 
                    AbsoluteThickness[1.6]], {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], FontSize -> 14, 
                    Opacity[1.], 
                    RGBColor[0.772079, 0.431554, 0.102387], 
                    AbsoluteThickness[1.6]], 
                    PointBox[
                    NCache[{
                    Scaled[{
                    Rational[1, 2], 
                    Rational[1, 2]}]}, {
                    Scaled[{0.5, 0.5}]}]]}}}, AspectRatio -> Full, 
                    ImageSize -> {25, 25}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.33999999999999997`] -> 
                    Baseline)], #6, 
                   GraphicsBox[{{}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], FontSize -> 14, 
                    Opacity[1.], 
                    RGBColor[0.363898, 0.618501, 0.782349], 
                    AbsoluteThickness[1.6]], {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], FontSize -> 14, 
                    Opacity[1.], 
                    RGBColor[0.363898, 0.618501, 0.782349], 
                    AbsoluteThickness[1.6]], 
                    PointBox[
                    NCache[{
                    Scaled[{
                    Rational[1, 2], 
                    Rational[1, 2]}]}, {
                    Scaled[{0.5, 0.5}]}]]}}}, AspectRatio -> Full, 
                    ImageSize -> {25, 25}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.33999999999999997`] -> 
                    Baseline)], #7, 
                   GraphicsBox[{{}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], FontSize -> 14, 
                    Opacity[1.], 
                    RGBColor[1, 0.75, 0], 
                    AbsoluteThickness[1.6]], {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], FontSize -> 14, 
                    Opacity[1.], 
                    RGBColor[1, 0.75, 0], 
                    AbsoluteThickness[1.6]], 
                    PointBox[
                    NCache[{
                    Scaled[{
                    Rational[1, 2], 
                    Rational[1, 2]}]}, {
                    Scaled[{0.5, 0.5}]}]]}}}, AspectRatio -> Full, 
                    ImageSize -> {25, 25}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.33999999999999997`] -> 
                    Baseline)], #8}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                 AutoDelete -> False, 
                 GridBoxDividers -> {
                  "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                 GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}},
                  GridBoxSpacings -> {"Columns" -> {{0.8, 0.5}}}], "Grid"]}, {
              
               TagBox[
                GridBox[{{
                   GraphicsBox[{{}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], FontSize -> 14, 
                    Opacity[1.], 
                    RGBColor[0.647624, 0.37816, 0.614037], 
                    AbsoluteThickness[1.6]], {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], FontSize -> 14, 
                    Opacity[1.], 
                    RGBColor[0.647624, 0.37816, 0.614037], 
                    AbsoluteThickness[1.6]], 
                    PointBox[
                    NCache[{
                    Scaled[{
                    Rational[1, 2], 
                    Rational[1, 2]}]}, {
                    Scaled[{0.5, 0.5}]}]]}}}, AspectRatio -> Full, 
                    ImageSize -> {25, 25}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.33999999999999997`] -> 
                    Baseline)], #9, 
                   GraphicsBox[{{}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], FontSize -> 14, 
                    Opacity[1.], 
                    RGBColor[0.571589, 0.586483, 0.], 
                    AbsoluteThickness[1.6]], {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], FontSize -> 14, 
                    Opacity[1.], 
                    RGBColor[0.571589, 0.586483, 0.], 
                    AbsoluteThickness[1.6]], 
                    PointBox[
                    NCache[{
                    Scaled[{
                    Rational[1, 2], 
                    Rational[1, 2]}]}, {
                    Scaled[{0.5, 0.5}]}]]}}}, AspectRatio -> Full, 
                    ImageSize -> {25, 25}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.33999999999999997`] -> 
                    Baseline)], #10}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                 AutoDelete -> False, 
                 GridBoxDividers -> {
                  "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                 GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}},
                  GridBoxSpacings -> {"Columns" -> {{0.8, 0.5}}}], "Grid"]}}, 
             GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
             AutoDelete -> False, 
             GridBoxDividers -> {"Columns" -> {{None}}, "Rows" -> {{None}}}, 
             GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}}, 
             GridBoxSpacings -> {"Columns" -> {{0}}, "Rows" -> {{1}}}], 
            "Grid"], Alignment -> Left, AppearanceElements -> None, 
           ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
           "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
         FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
         False], TraditionalForm]& ),
      Editable->True,
      InterpretationFunction:>(RowBox[{"PointLegend", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"FontSize", "\[Rule]", "14"}], ",", 
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.24561133333333335`, 0.3378526666666667, 
                    0.4731986666666667], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.368417, 0.506779, 0.709798]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.368417, 0.506779, 0.709798]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.368417, 0.506779, 0.709798], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"FontSize", "\[Rule]", "14"}], ",", 
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.587148, 0.40736066666666665`, 0.09470066666666668], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.880722, 0.611041, 0.142051]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.880722, 0.611041, 0.142051]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.880722, 0.611041, 0.142051], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"FontSize", "\[Rule]", "14"}], ",", 
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.37345400000000006`, 0.461046, 0.12992333333333334`], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.560181, 0.691569, 0.194885]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.560181, 0.691569, 0.194885]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.560181, 0.691569, 0.194885], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"FontSize", "\[Rule]", "14"}], ",", 
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.6150173333333333, 0.25708400000000003`, 
                    0.13945266666666667`], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.922526, 0.385626, 0.209179]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.922526, 0.385626, 0.209179]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.922526, 0.385626, 0.209179], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"FontSize", "\[Rule]", "14"}], ",", 
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.528488, 0.470624, 0.701351], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.3523253333333333, 0.3137493333333333, 
                    0.46756733333333333`], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.528488, 0.470624, 0.701351]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.528488, 0.470624, 0.701351]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.528488, 0.470624, 0.701351], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"FontSize", "\[Rule]", "14"}], ",", 
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.772079, 0.431554, 0.102387], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.5147193333333333, 0.28770266666666666`, 
                    0.06825800000000001], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.772079, 0.431554, 0.102387]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.772079, 0.431554, 0.102387]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.772079, 0.431554, 0.102387], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"FontSize", "\[Rule]", "14"}], ",", 
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.363898, 0.618501, 0.782349], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[0.24259866666666668`, 0.412334, 0.521566], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.363898, 0.618501, 0.782349]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.363898, 0.618501, 0.782349]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.363898, 0.618501, 0.782349], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"FontSize", "\[Rule]", "14"}], ",", 
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[1, 0.75, 0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> RGBColor[0.6666666666666666, 0.5, 0.],
                     FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[1, 0.75, 0]"], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[1, 0.75, 0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[1, 0.75, 0], Editable -> False, Selectable -> 
                    False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"FontSize", "\[Rule]", "14"}], ",", 
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.647624, 0.37816, 0.614037], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.4317493333333333, 0.2521066666666667, 
                    0.40935800000000006`], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.647624, 0.37816, 0.614037]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.647624, 0.37816, 0.614037]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.647624, 0.37816, 0.614037], Editable -> False, 
                    Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"FontSize", "\[Rule]", "14"}], ",", 
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.571589, 0.586483, 0.], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[0.38105933333333336`, 0.39098866666666665`, 0.], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.571589, 0.586483, 0.]"], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.571589, 0.586483, 0.]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.571589, 0.586483, 0.], Editable -> False, 
                    Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}]}],
              "}"}], ",", 
           RowBox[{"{", 
             
             RowBox[{#, ",", #2, ",", #3, ",", #4, ",", #5, ",", #6, ",", #7, 
               ",", #8, ",", #9, ",", #10, ",", #11}], "}"}], ",", 
           RowBox[{"LegendMarkers", "\[Rule]", "None"}], ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
             RowBox[{"{", "}"}]}], ",", 
           RowBox[{"LegendLayout", "\[Rule]", 
             RowBox[{"{", 
               RowBox[{"\"Row\"", ",", "3"}], "}"}]}], ",", 
           RowBox[{"LegendMarkerSize", "\[Rule]", "25"}]}], "]"}]& )], 
     Scaled[{0.8, 0.3}], ImageScaled[{0.5, 0.5}],
     BaseStyle->{FontSize -> Larger},
     FormatType->StandardForm]},
   AspectRatio->0.85,
   Axes->{True, True},
   AxesLabel->{
     FormBox["\"r [fm]\"", TraditionalForm], 
     FormBox["\"ImVc [GeV]\"", TraditionalForm]},
   AxesOrigin->{0, 0},
   AxesStyle->Directive[
    FontSize -> 25, Thickness -> 0.004, FontFamily -> "Helvetica", 
     GrayLevel[0]],
   BaseStyle->{FontSize -> 14},
   DisplayFunction->Identity,
   Frame->{{False, False}, {False, False}},
   FrameLabel->{{None, None}, {None, None}},
   FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
   GridLines->{None, None},
   GridLinesStyle->Directive[
     GrayLevel[0.5, 0.4]],
   ImagePadding->All,
   ImageSize->{1000, 1000},
   Method->{
    "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
     AbsolutePointSize[6], "ScalingFunctions" -> None, 
     "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
         (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
          Part[#, 1]], 
         (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
          Part[#, 2]]}& ), "CopiedValueFunction" -> ({
         (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
          Part[#, 1]], 
         (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
          Part[#, 2]]}& )}},
   PlotRange->{All, All},
   PlotRangeClipping->True,
   PlotRangePadding->{{
      Scaled[0.02], 
      Scaled[0.02]}, {
      Scaled[0.05], 
      Scaled[0.05]}},
   Ticks->{Automatic, Automatic}],
  InterpretTemplate[Legended[
    Graphics[{{{{}, {}, 
        Annotation[{
          Directive[
           Opacity[1.], 
           RGBColor[0.368417, 0.506779, 0.709798], 
           AbsoluteThickness[1.6]], 
          Line[CompressedData["
1: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
I7wi
           "]]}, "Charting`Private`Tag$6190#1"], 
        Annotation[{
          Directive[
           Opacity[1.], 
           RGBColor[0.880722, 0.611041, 0.142051], 
           AbsoluteThickness[1.6]], 
          Line[CompressedData["
1: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
/nFqbOfcr18kcuoe+uP/AW2/8Ls=
           "]]}, "Charting`Private`Tag$6190#2"], 
        
        Annotation[{
          Directive[
           Opacity[1.], 
           RGBColor[0.560181, 0.691569, 0.194885], 
           AbsoluteThickness[1.6]], 
          Line[CompressedData["
1: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
Xw1/4wEcPVRa/8fJUa0zi4s4uigFf/wfyzDubg==
           "]]}, 
         "Charting`Private`Tag$6190#3"], 
        Annotation[{
          Directive[
           Opacity[1.], 
           RGBColor[0.922526, 0.385626, 0.209179], 
           AbsoluteThickness[1.6]], 
          Line[CompressedData["
1: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
           "]]}, 
         "Charting`Private`Tag$6190#4"], 
        Annotation[{
          Directive[
           Opacity[1.], 
           RGBColor[0.528488, 0.470624, 0.701351], 
           AbsoluteThickness[1.6]], 
          Line[CompressedData["
1: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
           "]]}, 
         "Charting`Private`Tag$6190#5"], 
        Annotation[{
          Directive[
           Opacity[1.], 
           RGBColor[0.772079, 0.431554, 0.102387], 
           AbsoluteThickness[1.6]], 
          Line[CompressedData["
1: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
66f/BRtMwac=
           "]]}, "Charting`Private`Tag$6190#6"], 
        Annotation[{
          Directive[
           Opacity[1.], 
           RGBColor[0.363898, 0.618501, 0.782349], 
           AbsoluteThickness[1.6]], 
          Line[CompressedData["
1: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
f+3C+CQ=
           "]]}, "Charting`Private`Tag$6190#7"], 
        Annotation[{
          Directive[
           Opacity[1.], 
           RGBColor[1, 0.75, 0], 
           AbsoluteThickness[1.6]], 
          Line[CompressedData["
1:eJwd0nk01WsXB3DzmDrKkCGz8wuluLh14+ytSCLiFjeizClzqJDpIkNmJWUW
jjHnHD8lGUpRQkW4KYm8ctNEylje0/1jr70+61nPXt+91lZ09rV24+Lg4GCy
61ffeOLYvUMuByFNe7Dxqk4fjdfVikXXOA1nmYIueeaLNK4zvDI0+ShQ+tAr
LMTHD5z6zq/K6fEQG7GGNc6kQGTkaK+AVBosxmsdbxsXB463yTeaRzLBO8NG
JH+9DEQY66cFFGdDnkz8NS5JZfhZ/t6P8LgG5m2pHaPSahAulGP1SqMAllyz
Z+7IbYPwBuWcfWeLoD/Gcu2BdG1oeRciWGJXAlts+0t2ZerCz419537ol8K0
vO9Sz46dQNuv9t5Wvhz0fKv1XUIMIDw00o7JWQEwGggrIwgt1UNdayYqYSIu
803Hz93wc0Rzl0dHNSRqMqPS5Y3BYF1c1V16LdhVvshvP2QCtMJPIinGdaBG
lhlv+G4Kr3dI723SY8BS6+kPztnmIHfSv0FcigW97/k2cX48CPnd8tldIw2g
FybnWffABvLSw/7S8WiBrzecU6YXnEBfnZ7m9FcrfH+adlh00hl8xjxdO1Xa
YHGmRfb3fhdYG3Ipd078LnDoyFRF17iBRdWHNZYL9+CpiddXwTRP6BW59pG7
uQM6xtGlc9IPevrma7339gLvWPqi2so5qP5p8H3zo17YU2tvzcoPgUT1GIMJ
syeg5cn3zMAwFJQNBdxrNj8Fyqh9r3VcGLy5kjWnrPkMOndYajRTIsBuX42o
6M5+mCx5FGNDiQaL8tdm0xZDUCY3N2GteAF03QzbCkJG4fQBg2sTOWnw1PCk
nofjO8jKHrrb35ED8Tcs6zVffILjGqOnuBSKQCwpL0Ah9CuMvDY/K3OgFITL
+VbsjOahoCuBfv42HbxsM0LvH5oHkwavmwEP6dDLL7e81W0eNK1yzq0ZpEPG
Cd0ljrh5WImb/QEzdNio7rpQ1jkPCYsJkrVEBVBr7s7N7l+AsY+W430ZFYCs
sI+JVouwZSj2TbNzJQS3zr6+7bgM8rbm/sHvquBSeU/LkM8yDMYOWfXNVkF9
Kj1/LnwZVqTPGW7/WQUzxxwdNQuWwdT4jsIHsWrw4ugaKRpdBptNq5o3DavB
ybDoVfzxFVAb6dWTuVoN5u2WwzbOP+CFdpf32J4aUOqsHph1W4XGxh2pfFG1
MBFmFroUuApMfX+LfxNqoVT7vQJXzCrUtFaIdGfUwuZ8wku0eBWaWpgDItdr
YWtQMdf216vwh8KmzZEdtZAr2p2tp8GBWd7Qlit0A8pa794/XcKBxJPDrxRT
bkCTTI3cp0xOXDvq+qzQsA6ywrbpi+VyouxeN8ds9t36jDCO/HGdE9Vr3KaT
TetAqaAhK66eE+WGeEgXqzqIV2oTkh/gRL/1173njtfBIbX+75YSXPghQPCJ
R0QdfNRb7GVc4cK6XnLbaGMdyFsbRwTlcWPy1t6ko1QGdOVUrFJKuXGde4+K
ixoDAsdEIquruTE1v7vZcwv73W8w8m0TN7793kY4aDMgONUj2mqYG0PR5uVG
GgO6uxNit0ryoF6UYtqhwwwIMelN+l8aD96+rhBDiWbAoL7tlcMxvHiAWr58
bIABxxXePuxK4kWPH0ap/UMM+JfbdxEyeTHq+biSyTADVrri7NSLedFkqIdf
bJQBikcaZFdbeZFLM0E+e4oBXkHiRfRlXtxPV1U5tcwArtr+iuUAPvw745hs
vTwTNOUPNhU58WP97inNABcm1Amk6jV68mOhfb9dmRsTtGd7GE/9+fFiYEvc
sAcTfn9gRl+N4keqdiZFz4sJeMrkkkMxP6YUmT67F8gE65s0X6m3/OhUpUuv
jWXCGcutyumuAjjSUZ9lVMaEtgihpEgPQYw/tM/80TgTxA5qeIr4CuKkjsAr
/wkmeCiYm1wNFkQj8YenpCeZsPZuMnd9rCCuDpgknfqXCUe5RMPelQjicPVt
9bVfmLAYI+lt8UYQS8yuKnH/YOdNVLGUPSKEShccf1OTYEFpFm3Drf3C2HHC
TGuTMQtmT67Xf2ctjBKdzYV5e1lAM5x0lbAXRnfV7RS5fSwY/JjcEHhKGHnH
xT7LmbFAwGTkiNZFYbwpobqkYMUCr8XQwsoeYQzlnhEcOsoCHcfGrXkH1yCN
95/xsNMsuE/o7Iu2EUHutrQEZh4LPudsU0xyFMHwB5PBn/NZIL1GYynTXQQX
u/RdtxSywO+LYnVpsAh+HpiilRWzQLZxHeXRZRHcvRqSf7acBYH7p4fWDYlg
c1vrsiCDBSrexR55tmvRV7kuO6KdBTFMyoVbf61Dr25HfcokCx6f/a1VOZeC
3e3PNnyRqwd/W0jXKRTFQw4X1+75sx4MKfGtMxnrsbLvn7LPYfWgGa9ltJCz
AfucLs3dLKmH6dDeHp1cMQy4+OT++fv10GdKZ21KFseexLlItdF6GBwc/2yZ
IYE+T3VpsQv1wEOzi9eMk8QnuxIeO4iQwKX4QHVP0EbMuCbx6oI8CZva06SK
zkrhBZftC8JaJDhDjmfVSWkMEPvJmw8k3A/hoqz6yWALhWvx9gESvmsda4oP
kEWjHZMOYnYkWLcv3Gtx3oQ1Zg8eO7iS8HjDVwWahxw+895iYuJDgg9N/aWn
nTy6a5wsDQomwT9AvcdNRQF91KNrLp0n4Q/VL7ZNpQpYnO41eCaGBEnj5xQP
OUWU0omahUQS/r4/Ffh7kSLOrKStLKaSwMOQ4XeUUUL/bUaDn7NI8LZ/eE0+
Uwktro66/51Dgqtb6UtecWWUzczq0s0nwe9VoenuFGU8NssRcKyYBGFWt3OJ
qAp+p/SrV5SRkGISEF6QoYL7rQobyitJoJrqPZwRUsXRiOHT2rUkmFeqN59I
VkXN1sX6YQYJF84avNHlp6K6S98nGZKESp4u3vxwKl6+HspyukXCkYU1O69H
UlHtetg3H7YFPlh6VUZT8WLiNckwtt36B/oa4qh4yPaF/WW2FYrHCp6kUPFo
lOtEF9uXYXEnZwEVpRVUmVqN7P1DNvu4tlLxHUptW2Bb2+dU0cm7VHQpbP/C
fZuEN061z/3aqTi66s1cxzbNVGfX+U4qpqh16BJsL0miwOUn7P8t0fo2bPuR
tsWdo1S0sMwzY7B99EvcoDoHgcH5id6OTSS0OkQ7r+UiMCP8ueQJtpUen/80
w02g9ZTCPX+2p0oD+Rr5CTyX0SQRy3aQvbOeyToChb+NLlayndJhcNlFjsB7
hfdffmW7LXfucK4+gS+8JizD7pCgLPRlLIJGoBp9zjaG7bgz094uSGB7Et/x
i2ybW4/HqhsRGPNQwy+X7Rf8T8lbZgRG2tPGmtieDagSH7AjsE1oUmLh1zxT
5wGRcwS6yGU4uzWTQBmfzlMLJfB/qZNnvNj+GRLkbnyewP4/9ZNPsz1cHT8f
FkWgf+LUzSi20yg3pD4kEDizkN6Vy3Z4xY5x/osEbnkfBCVse+2+V6mcQqDH
yyP1FWybBA7sss8gUN5POb+BbR2RYzxnsgiUbRfY0My2UtlUd8ZlAqUlPl1o
/5UHAi7VXiFQ0rN/5dGvPEPLDl1XCXzX+i2z59f8gn3F9CoC8SpP1i8Pu1+a
jLtDYE7ghv/c8E3Td89rAs3UtP5zRszD+dVVAn+MWPzn/wORFTU7
           "]]}, 
         "Charting`Private`Tag$6190#8"], 
        Annotation[{
          Directive[
           Opacity[1.], 
           RGBColor[0.647624, 0.37816, 0.614037], 
           AbsoluteThickness[1.6]], 
          Line[CompressedData["
1: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
R/E=
           "]]}, "Charting`Private`Tag$6190#9"], 
        Annotation[{
          Directive[
           Opacity[1.], 
           RGBColor[0.571589, 0.586483, 0.], 
           AbsoluteThickness[1.6]], 
          Line[CompressedData["
1:eJxNzwlI02EYBvB/y6Up4rzStdzhSRMW0lSInHlVi0IdeVZKyzkVTFuZ5syj
ZC7Esc0CLedV0lBTchXWcpoaDWsSkkYpKiMsMDzJGVaroN53H3x8/OCB73lY
wgKBiEQQxIk/9+/rnZM5fPJcQiTx75CzEnXa4ItgUjGZxmNUgSsr58YdqEpw
uWNj4kxwCzjCRdb1QtsD1qjKUrliA9g0YenJPzwODhVFDbWUzoHfRuWFiTM+
g+W98Y84H5bAHrUaCVO6Dna6v+NHeqwFfHlwbfZZxhbY91X35JrICtbTHtCX
6rcd+m+GIK6iSLMdPHUwpSGpmgzmMBL0bWftwUMVjrWV4p3gjps89/5jTuDR
IO7Ra8nO4Oo+Sk1/qgv4dcn+Qb8mCvhCSqSK2+oKjqLIB1fVbvi/PCR2s9Ed
vCgdN3GbPMATfK3Op84T+0+Zl+PVu8B2vHQ5R+YFJrFeBsQUeYN9RpTUthIq
WBjZmNuVtxv3lJIo1kIaeCMkUy+X7AELRjaHDUIf3Oe+zuSJ6eDzPPZ0bjoD
90rYJpE/E3wgYCVF34H2intHEdNZ4OujXy6Ft6HtHtLsM2i+4PxTxjuMenSW
qGOa7OkHLpxp5Ucr0E66N8K7rv5gxRFJeYsaHcgPM646BoCPd7IHcurQNSUR
86H2geBOuzFyczn69Ipsik0Egf34wknnK2iKeVGzV4r+VVqUHXcV/bFbbimr
QispvdSvN2zy77fOjN22yWffWpA9Rxut9N52A/pJg7bYMIRWjekdNkbRRzlm
tshkk//GKYiZRd9T9IdnzqPVQdGE1IzOT0tS9S2g/QekOtYy2i2ZXBaxiiaW
FbFp6+hpZvuk0mLT/2lwc/d3mz6Cx9nGLZs+i7x9n37a9Kk2WqxW9G/PsAqY

           "]]}, "Charting`Private`Tag$6190#10"]}}, {}, {}}, {
     DisplayFunction -> Identity, Ticks -> {Automatic, Automatic}, 
      AxesOrigin -> {0, 0}, 
      FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
      GridLines -> {None, None}, DisplayFunction -> Identity, 
      PlotRangePadding -> {{
         Scaled[0.02], 
         Scaled[0.02]}, {
         Scaled[0.05], 
         Scaled[0.05]}}, PlotRangeClipping -> True, ImagePadding -> All, 
      DisplayFunction -> Identity, AspectRatio -> 0.85, Axes -> {True, True}, 
      AxesLabel -> {"r [fm]", "ImVc [GeV]"}, AxesOrigin -> {0, 0}, AxesStyle -> 
      Directive[FontSize -> 25, Thickness -> 0.004, FontFamily -> "Helvetica", 
        GrayLevel[0]], BaseStyle -> {FontSize -> 14}, DisplayFunction :> 
      Identity, Frame -> {{False, False}, {False, False}}, 
      FrameLabel -> {{None, None}, {None, None}}, 
      FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
      GridLines -> {None, None}, GridLinesStyle -> Directive[
        GrayLevel[0.5, 0.4]], ImageSize -> {1000, 1000}, 
      Method -> {
       "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
        AbsolutePointSize[6], "ScalingFunctions" -> None, 
        "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
            (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
             Part[#, 1]], 
            (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
             Part[#, 2]]}& ), "CopiedValueFunction" -> ({
            (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
             Part[#, 1]], 
            (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
             Part[#, 2]]}& )}}, PlotRange -> {All, All}, PlotRangeClipping -> 
      True, 
      PlotRangePadding -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
      Ticks -> {Automatic, Automatic}}], 
    Placed[
     Unevaluated[
      PointLegend[{
        Directive[FontSize -> 14, 
         Opacity[1.], 
         RGBColor[0.368417, 0.506779, 0.709798], 
         AbsoluteThickness[1.6]], 
        Directive[FontSize -> 14, 
         Opacity[1.], 
         RGBColor[0.880722, 0.611041, 0.142051], 
         AbsoluteThickness[1.6]], 
        Directive[FontSize -> 14, 
         Opacity[1.], 
         RGBColor[0.560181, 0.691569, 0.194885], 
         AbsoluteThickness[1.6]], 
        Directive[FontSize -> 14, 
         Opacity[1.], 
         RGBColor[0.922526, 0.385626, 0.209179], 
         AbsoluteThickness[1.6]], 
        Directive[FontSize -> 14, 
         Opacity[1.], 
         RGBColor[0.528488, 0.470624, 0.701351], 
         AbsoluteThickness[1.6]], 
        Directive[FontSize -> 14, 
         Opacity[1.], 
         RGBColor[0.772079, 0.431554, 0.102387], 
         AbsoluteThickness[1.6]], 
        Directive[FontSize -> 14, 
         Opacity[1.], 
         RGBColor[0.363898, 0.618501, 0.782349], 
         AbsoluteThickness[1.6]], 
        Directive[FontSize -> 14, 
         Opacity[1.], 
         RGBColor[1, 0.75, 0], 
         AbsoluteThickness[1.6]], 
        Directive[FontSize -> 14, 
         Opacity[1.], 
         RGBColor[0.647624, 0.37816, 0.614037], 
         AbsoluteThickness[1.6]], 
        Directive[FontSize -> 14, 
         Opacity[1.], 
         RGBColor[0.571589, 0.586483, 0.], 
         AbsoluteThickness[1.6]]}, {
       "1/10", "2/10", "3/10", "4/10", "5/10", "6/10", "7/10", "8/10", "9/10",
         "99/100", "Vac"}, LegendMarkers -> None, LabelStyle -> {}, 
       LegendLayout -> {"Row", 3}, LegendMarkerSize -> 25]], {0.8, 0.3}, 
     Identity]]& ],
  AutoDelete->True,
  Editable->True,
  SelectWithContents->False,
  Selectable->True]], "Output",
 CellChangeTimes->{3.74974399224685*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Plot", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{"Re", "[", 
      RowBox[{
       RowBox[{"ImVsu", "[", "1", "]"}], "[", 
       FractionBox["r", "0.197"], "]"}], "]"}], ",", 
     RowBox[{"Re", "[", 
      RowBox[{
       RowBox[{"ImVsu", "[", "2", "]"}], "[", 
       FractionBox["r", "0.197"], "]"}], "]"}], ",", 
     RowBox[{"Re", "[", 
      RowBox[{
       RowBox[{"ImVsu", "[", "3", "]"}], "[", 
       FractionBox["r", "0.197"], "]"}], "]"}], ",", 
     RowBox[{"Re", "[", 
      RowBox[{
       RowBox[{"ImVsu", "[", "4", "]"}], "[", 
       FractionBox["r", "0.197"], "]"}], "]"}], ",", 
     RowBox[{"Re", "[", 
      RowBox[{
       RowBox[{"ImVsu", "[", "5", "]"}], "[", 
       FractionBox["r", "0.197"], "]"}], "]"}], ",", 
     RowBox[{"Re", "[", 
      RowBox[{
       RowBox[{"ImVsu", "[", "6", "]"}], "[", 
       FractionBox["r", "0.197"], "]"}], "]"}], ",", 
     RowBox[{"Re", "[", 
      RowBox[{
       RowBox[{"ImVsu", "[", "7", "]"}], "[", 
       FractionBox["r", "0.197"], "]"}], "]"}], ",", 
     RowBox[{"Re", "[", 
      RowBox[{
       RowBox[{"ImVsu", "[", "8", "]"}], "[", 
       FractionBox["r", "0.197"], "]"}], "]"}], ",", 
     RowBox[{"Re", "[", 
      RowBox[{
       RowBox[{"ImVsu", "[", "9", "]"}], "[", 
       FractionBox["r", "0.197"], "]"}], "]"}], ",", 
     RowBox[{"Re", "[", 
      RowBox[{
       RowBox[{"ImVsu", "[", "10", "]"}], "[", 
       FractionBox["r", "0.197"], "]"}], "]"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"r", ",", 
     RowBox[{"1", "/", "1000"}], ",", "20"}], "}"}], ",", 
   RowBox[{"AxesStyle", "\[Rule]", 
    RowBox[{"Directive", "[", 
     RowBox[{
      RowBox[{"FontSize", "\[Rule]", "25"}], ",", 
      RowBox[{"Thickness", "\[Rule]", "0.004"}], ",", 
      RowBox[{"FontFamily", "\[Rule]", "\"\<Helvetica\>\""}], ",", "Black"}], 
     "]"}]}], ",", 
   RowBox[{"BaseStyle", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"FontSize", "\[Rule]", "14"}], "}"}]}], ",", 
   RowBox[{"AspectRatio", "\[Rule]", "0.85"}], ",", 
   RowBox[{"AxesLabel", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"\"\<r [fm]\>\"", ",", "\"\<ImVs [GeV]\>\""}], "}"}]}], ",", 
   RowBox[{"ImageSize", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"1000", ",", "1000"}], "}"}]}], ",", 
   RowBox[{"PlotLegends", "\[Rule]", 
    RowBox[{"Placed", "[", 
     RowBox[{
      RowBox[{"PointLegend", "[", 
       RowBox[{"uSetS", ",", " ", 
        RowBox[{"LegendMarkerSize", "\[Rule]", "25"}], ",", 
        RowBox[{"LegendLayout", "\[Rule]", 
         RowBox[{"{", 
          RowBox[{"\"\<Row\>\"", ",", "3"}], "}"}]}]}], "]"}], ",", 
      RowBox[{"{", 
       RowBox[{"0.8", ",", "0.3"}], "}"}]}], "]"}]}], ",", 
   RowBox[{"BaseStyle", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"FontSize", "\[Rule]", "14"}], "}"}]}]}], "]"}]], "Input",
 CellChangeTimes->{{3.7495634358622637`*^9, 3.749563504325479*^9}, {
  3.749573057497179*^9, 3.749573062919709*^9}, {3.749612475813087*^9, 
  3.749612476005508*^9}, {3.749646719186616*^9, 3.74964671949988*^9}}],

Cell[BoxData[
 TagBox[
  GraphicsBox[{{{{}, {}, 
      TagBox[
       {RGBColor[0.368417, 0.506779, 0.709798], AbsoluteThickness[1.6], 
        Opacity[1.], LineBox[CompressedData["
1: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
q3DIb+zu/vX/AHFiovs=
         "]]},
       Annotation[#, "Charting`Private`Tag$6300#1"]& ], 
      TagBox[
       {RGBColor[0.880722, 0.611041, 0.142051], AbsoluteThickness[1.6], 
        Opacity[1.], LineBox[CompressedData["
1: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
9++//h/gZq7m
         "]]},
       Annotation[#, "Charting`Private`Tag$6300#2"]& ], 
      TagBox[
       {RGBColor[0.560181, 0.691569, 0.194885], AbsoluteThickness[1.6], 
        Opacity[1.], LineBox[CompressedData["
1:eJxFz3c41ov7B3Aroez1kX1Q2eWxy3PfdIpS5jGKb1aSiDii4uDYWVnHSGZl
ZGRLQzbHsXqQjMwQeqRkRPHr91d/3Nf7el33H/f7Frd3N3Gko6Ghaf05/59W
G44cDJeMwHY90DUaj5LDQi+6pKr/BevVvnuaGi+S09uMF/jlokAuZcmnLM2V
rCF1u+fzu0QoKYxehwUvspSTfsGQ1D1g2M1KMKKkkSP+YGscV82Gp4PhbVie
T/ZfWy95feEBbAxO5BQfLyd7JU/ca/HPA1GZeY6tzgbyVbWO8NrcQthd148u
nu0k274t83rcVgxUu7fBioEUsvmtNLuMxScQF9aSbGg5Sj7Iqn1IL7wcFvnO
nc7onCHn/K86Q1ugEiIW1dq5FhbIQqXSPMeKqmC3vobTZnGFnLKTEamsVQMN
h/T17/Svk7kMuWgVemshKG4ipPLFd3JMVpjPIbs6aGq47kONoAWmlS2q2Ooz
qKD4ujCFMEIQul86EPoC8t+H2UgE7IMfcTMj3Pz1YLDdIS2qxQE3pyyMWQtf
wXiX+CoXlRu2iDmH4IyGn/9qB+008oOatpho4OVGYJ6w41xMFgQv5wsjfopN
YD4nuWx5Wgwq4pP+ubXZBN1NXCEe+yVgpa7HyLuxGbSzaA5E9kqB/DTT/j8j
W2BMcEnFhE0arrKcaHc3bYXpdJtm3WE5KFD6K8hVqA3WWa8WiJgcgbkLtVrO
s22Qmv1hq9NGCSSCP286lrbD5aXB9+VTymBbJFtl79MBJNXmnlQHNcjsd3S3
wX9hgjL9voKqAWPbWTLWzJ3gdV65XlZKCwQkR2YtKZ1Au9Kkb6KAYH6WJ8cs
/T/Qq3R5ytapDUleBtYml7ogSnVoSPTFCaDcj+A3lO+GuMhtJq9XJ4G9tYmi
v94N8eOimh1NuhDJq3b6ZEQvUG6R3K+HnYX3mep0OYf7IG+iTdVkxwDoKgdt
RGP6YGZt0jt/0AhwlF1QyPw1mLjshIj3moLNp+Kb9569BhZrvlc/zpuBP/2Z
N4QoBUL5DZrZRCzguWxIPO8HCtyIffnfkbwLMALinxLP9oPt+/y9jLXWsGla
f5arvB9CRPM8lzsugqrf5l722wNwld6VeU+KHZjF/eMYMz4AvaJq9uKd9uD1
UKl534lBUDpO91zrhwOUd7n6M+1/AzTHOCwsH1+GvknmsbDrb+DAbK7ha5Yr
sPw1T2PP4BuoMtMwMPJzBjnhqa+0mUOwzao8bJjpCvnXzFy2FYchlUZVT6XJ
AxZznV5R7w+DIJ3IRc1+T1B4e4t7knkEylYkObTm/oQancznLTMjcJD9aH66
jDds+ZSx1xqNgvlBxrRZax/QKmlyKHw5ChgnL3z97k1o4Z/fF5syBq4W8eoN
Kr7AdO6bTSDDO2C/IOl1I9IP9IP2VXl6vAPRmAR/Jhp/oHxUtLbQH4cO2d9T
uHwCYbLxZrHY7gToPbrlRP8qGBJ8TwYyq05Cs2DI1I3MEFBONngc5DoJUjl3
utYCQ8HnP9sdr+FJ6FHJkSu6HA47KqF55yunwENxK0DAJwqyjWL7KAtToMxg
FN+TEA06Lilb+mLTsP72UW5waQyEZRcakGOmYXeKlzaaJg5Y9/Ws/+Y0A96X
RTQP+iVAqdSQ2P2MGaj23MxJk0gEI5w8wzswAzm5pYe9KYmQdONL5l7t98BZ
5KiVrvwPCE3y6X48MAtbcdujqoqpUL8l6uFoPAuX9DMWgtdSwZZXOn08fBZk
bX8Ps2xMgwdnjn3q+zoLx006lOQup4NMtU1Kdc8cnMxJ/FE2lQldvVcaFfbM
g2XrFQPW7ixwW/RYyj82D9VfM3uVrbOhXDQE7hXMg8LUe50M4xxQjyyY9w/6
AL+VpJUtmjwAXZvPanqqi6BpbvROujUf+k491JFyXoSnan+kjxoXgKWCxTm6
+4swka8rODBdAFd+vLB/QbsE7c+jOJmYH0NEekTMke4lKNWreCXrVgydQ6Iz
xCUqvMhZDhPoLQOTVxTqWjIVOPsC6tqlymEkL3ST8i8V7KoX9Q4GlMPSjSXW
GMVlGC9tpSiTKmA/T6067fYyHBZPiBMorIRDhw+1f9VbgQE2TUpSRw18TA88
62C/AjkP8J3ikVooYx95/dp3BezIwht06bWgvhE9Vlq6Ak+3knx4PJ6CXtuX
z1d4PsNj2Uf5ynLPwPlSvdC7ic+wJyvE4PvgSyjKNvNs9V6Fk99huPl7E8i0
tWlX3V2F3KWL043YDAVLapwPClbhsoMv+4GwZshTPVAWOLIKayZVzp0cLZDd
NU49Rv4KTiXhpTvyrZC86eRcsWcNzvQff6kf2A6BRrdts5LW4aR8hBs1tAt2
bywpxpasQ8jvHg77RrrAP916169tHWKLVQZ8FbvBd46ceWFzHTLFonTnRrrB
249+jNd6A/zDBS9uqPWCS0G0RbTEJlDPb1r0MbwGc5osg1sV30D/oa8OQT8A
Im4lgqHd32CTSF2k1RiAudHnH+I+fAMmU7dTdu4D4F37NqhAZAsuJqiYto4N
wD9uXLVDkVtwlbR6su/ZIAyMhYqqOmyDuOlK7FzQEJjWua584f4ByKdZwqIz
Coc1hE/XaNIgdQ93yHjVFEQ1hK9ds6dHoYzIaXadReAzTjdr7WZEuXOTWrtK
X+AL8WhTSpoFv4eGOfxtuQEqT/TzWs6woubRVL0qwe9glN8dTGvJgYmRzN1a
UTSoPt5c94rKiXe7u8RSXtLhv0dU4oN8uXFSqHN5fyMDLu/11eGV5cWZF8+2
dNoY8dQp9m9tL/nwwwpP/tbfTKjEfPOOnieB/PSGpE+aLNg2b/W8R+QABhge
0Spp24ex8rFf/iwVxKPuFT6LAqy4sJFEv2AjjF3xrGMrrmx4U3pR4K+vIthx
7c9Gp3h27PnEHHrdTAwNtWJXa6w4sMpyrPuhnDiOT//3gzrFgcprZmlX1sSx
PNZ3QN2CE3f664x5en9D0u1T2709nGg31xJteE8CK+xmQhTUuTAtLIaIsZNE
bq3GWrjHhYLOGF+hIYXCH53bnXa5UDXgXrQT/UE8NZrI4HieG9OHxr0Yxg/i
MI+xS1oNNw68nCx5UHUIV9tkXSTYeDB/6I4zxe8wPjgxGhtnzYMtJGGuBTNp
pO5tS3Us5UHfZgutu2Iy2Cxg4EuzyYOMU4Z1avMyaD6y9qReixdHUem3jnpZ
1PVP/7YQxotnBp6zfgiXQ3q92t7vHbxI91hx7pOdPMYyBTHYs/HhH5VntMPl
FfDdtT5F9XN86HtGgiq2poBeNr/bEnf4cEliLjS3WxFt74hnq3f83BMFfcP6
R/C+7N3dUFp+lETKH+Z1R9Avl21oTYsfnypY0Q5IHkVGzXN7q334UaBWzV3g
zlF0zViwPlbMj5m2d/opa0fRqnzdsHOGH1ceKHwztVLC74GUvVZ8BMqVKum+
qVfCw9lRNTWnCIwZLorqkiGhY/O5zoVbBObubw62kSMhU9lrq7zbBNbAiO8X
eRIqMie9t/clcPIRkytxlITOrdJ9o34EKnk6nr2kRsKgsrGqrgAC37KIsn4/
QcJ3LqZaRaEESh5PiJX9HwnLSlliLsQTqOFeGFZ/kYQupztGeBIINMht8De2
JaFf/n3h3p/2Yfrk5uNAQvu/pwNOJBHYOaBv2OxMQt2mcCPZFAKvX9vDYeVN
wozu6cKN+wQ+z7wZH3mXhI+uFVUGFRB4xZLf6Ww8CfP6r0oZFRLIx1VznC2R
hLHXaSKFHxPoGbo6H59Mwh0eEf6nRQTKuLqR0zJISNC7in8s/dlfipXHKouE
T6SjN58+ITBsomhBKIeEog3k9NAyAqdMFpKyH5JwXFSnS6SCwNj9EVft80io
avVQYemnj7cdRMmCn/eSGeNrKwlcDGjlnSsk4cxOyZvgKgJTNS4t5ReRcDay
ZdOwmsBTq3SNziUknOcbPSBUQ+DX4pxk2ScktHDzCPT86dzL6Eot+2VDsQnt
JxW//DhRiKpU88uMey+k1tT9cj11YPllwy/fGDA82dr+yybux7KmZ35ZkeXQ
t93dX/4/S2DFHA==
         "]]},
       Annotation[#, "Charting`Private`Tag$6300#3"]& ], 
      TagBox[
       {RGBColor[0.922526, 0.385626, 0.209179], AbsoluteThickness[1.6], 
        Opacity[1.], LineBox[CompressedData["
1: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
WIld6sf+/h//D7wa40Q=
         "]]},
       Annotation[#, "Charting`Private`Tag$6300#4"]& ], 
      TagBox[
       {RGBColor[0.528488, 0.470624, 0.701351], AbsoluteThickness[1.6], 
        Opacity[1.], LineBox[CompressedData["
1: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
X/8P2Prmiw==
         "]]},
       Annotation[#, "Charting`Private`Tag$6300#5"]& ], 
      TagBox[
       {RGBColor[0.772079, 0.431554, 0.102387], AbsoluteThickness[1.6], 
        Opacity[1.], LineBox[CompressedData["
1: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
3Qc=
         "]]},
       Annotation[#, "Charting`Private`Tag$6300#6"]& ], 
      TagBox[
       {RGBColor[0.363898, 0.618501, 0.782349], AbsoluteThickness[1.6], 
        Opacity[1.], LineBox[CompressedData["
1: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

         "]]},
       Annotation[#, "Charting`Private`Tag$6300#7"]& ], 
      TagBox[
       {RGBColor[1, 0.75, 0], AbsoluteThickness[1.6], Opacity[1.], 
        LineBox[CompressedData["
1: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
95//BxDVjPg=
         "]]},
       Annotation[#, "Charting`Private`Tag$6300#8"]& ], 
      TagBox[
       {RGBColor[0.647624, 0.37816, 0.614037], AbsoluteThickness[1.6], 
        Opacity[1.], LineBox[CompressedData["
1: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
i//+/cf/AyCkWds=
         "]]},
       Annotation[#, "Charting`Private`Tag$6300#9"]& ]}, {}, {}}, InsetBox[
     TemplateBox[{
      "\"1/10\"","\"2/10\"","\"3/10\"","\"4/10\"","\"5/10\"","\"6/10\"",
       "\"7/10\"","\"8/10\"","\"9/10\"","\"99/100\"","\"Vac\""},
      "PointLegend",
      DisplayFunction->(FormBox[
        StyleBox[
         StyleBox[
          PaneBox[
           TagBox[
            GridBox[{{
               TagBox[
                GridBox[{{
                   GraphicsBox[{{}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], FontSize -> 14, 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], FontSize -> 14, 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], 
                    PointBox[
                    NCache[{
                    Scaled[{
                    Rational[1, 2], 
                    Rational[1, 2]}]}, {
                    Scaled[{0.5, 0.5}]}]]}}}, AspectRatio -> Full, 
                    ImageSize -> {25, 25}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.33999999999999997`] -> 
                    Baseline)], #, 
                   GraphicsBox[{{}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], FontSize -> 14, 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], FontSize -> 14, 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], 
                    PointBox[
                    NCache[{
                    Scaled[{
                    Rational[1, 2], 
                    Rational[1, 2]}]}, {
                    Scaled[{0.5, 0.5}]}]]}}}, AspectRatio -> Full, 
                    ImageSize -> {25, 25}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.33999999999999997`] -> 
                    Baseline)], #2, 
                   GraphicsBox[{{}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], FontSize -> 14, 
                    Opacity[1.], 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6]], {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], FontSize -> 14, 
                    Opacity[1.], 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6]], 
                    PointBox[
                    NCache[{
                    Scaled[{
                    Rational[1, 2], 
                    Rational[1, 2]}]}, {
                    Scaled[{0.5, 0.5}]}]]}}}, AspectRatio -> Full, 
                    ImageSize -> {25, 25}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.33999999999999997`] -> 
                    Baseline)], #3, 
                   GraphicsBox[{{}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], FontSize -> 14, 
                    Opacity[1.], 
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    AbsoluteThickness[1.6]], {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], FontSize -> 14, 
                    Opacity[1.], 
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    AbsoluteThickness[1.6]], 
                    PointBox[
                    NCache[{
                    Scaled[{
                    Rational[1, 2], 
                    Rational[1, 2]}]}, {
                    Scaled[{0.5, 0.5}]}]]}}}, AspectRatio -> Full, 
                    ImageSize -> {25, 25}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.33999999999999997`] -> 
                    Baseline)], #4}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                 AutoDelete -> False, 
                 GridBoxDividers -> {
                  "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                 GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}},
                  GridBoxSpacings -> {"Columns" -> {{0.8, 0.5}}}], "Grid"]}, {
              
               TagBox[
                GridBox[{{
                   GraphicsBox[{{}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], FontSize -> 14, 
                    Opacity[1.], 
                    RGBColor[0.528488, 0.470624, 0.701351], 
                    AbsoluteThickness[1.6]], {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], FontSize -> 14, 
                    Opacity[1.], 
                    RGBColor[0.528488, 0.470624, 0.701351], 
                    AbsoluteThickness[1.6]], 
                    PointBox[
                    NCache[{
                    Scaled[{
                    Rational[1, 2], 
                    Rational[1, 2]}]}, {
                    Scaled[{0.5, 0.5}]}]]}}}, AspectRatio -> Full, 
                    ImageSize -> {25, 25}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.33999999999999997`] -> 
                    Baseline)], #5, 
                   GraphicsBox[{{}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], FontSize -> 14, 
                    Opacity[1.], 
                    RGBColor[0.772079, 0.431554, 0.102387], 
                    AbsoluteThickness[1.6]], {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], FontSize -> 14, 
                    Opacity[1.], 
                    RGBColor[0.772079, 0.431554, 0.102387], 
                    AbsoluteThickness[1.6]], 
                    PointBox[
                    NCache[{
                    Scaled[{
                    Rational[1, 2], 
                    Rational[1, 2]}]}, {
                    Scaled[{0.5, 0.5}]}]]}}}, AspectRatio -> Full, 
                    ImageSize -> {25, 25}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.33999999999999997`] -> 
                    Baseline)], #6, 
                   GraphicsBox[{{}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], FontSize -> 14, 
                    Opacity[1.], 
                    RGBColor[0.363898, 0.618501, 0.782349], 
                    AbsoluteThickness[1.6]], {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], FontSize -> 14, 
                    Opacity[1.], 
                    RGBColor[0.363898, 0.618501, 0.782349], 
                    AbsoluteThickness[1.6]], 
                    PointBox[
                    NCache[{
                    Scaled[{
                    Rational[1, 2], 
                    Rational[1, 2]}]}, {
                    Scaled[{0.5, 0.5}]}]]}}}, AspectRatio -> Full, 
                    ImageSize -> {25, 25}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.33999999999999997`] -> 
                    Baseline)], #7, 
                   GraphicsBox[{{}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], FontSize -> 14, 
                    Opacity[1.], 
                    RGBColor[1, 0.75, 0], 
                    AbsoluteThickness[1.6]], {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], FontSize -> 14, 
                    Opacity[1.], 
                    RGBColor[1, 0.75, 0], 
                    AbsoluteThickness[1.6]], 
                    PointBox[
                    NCache[{
                    Scaled[{
                    Rational[1, 2], 
                    Rational[1, 2]}]}, {
                    Scaled[{0.5, 0.5}]}]]}}}, AspectRatio -> Full, 
                    ImageSize -> {25, 25}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.33999999999999997`] -> 
                    Baseline)], #8}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                 AutoDelete -> False, 
                 GridBoxDividers -> {
                  "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                 GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}},
                  GridBoxSpacings -> {"Columns" -> {{0.8, 0.5}}}], "Grid"]}, {
              
               TagBox[
                GridBox[{{
                   GraphicsBox[{{}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], FontSize -> 14, 
                    Opacity[1.], 
                    RGBColor[0.647624, 0.37816, 0.614037], 
                    AbsoluteThickness[1.6]], {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], FontSize -> 14, 
                    Opacity[1.], 
                    RGBColor[0.647624, 0.37816, 0.614037], 
                    AbsoluteThickness[1.6]], 
                    PointBox[
                    NCache[{
                    Scaled[{
                    Rational[1, 2], 
                    Rational[1, 2]}]}, {
                    Scaled[{0.5, 0.5}]}]]}}}, AspectRatio -> Full, 
                    ImageSize -> {25, 25}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.33999999999999997`] -> 
                    Baseline)], #9, 
                   GraphicsBox[{{}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], FontSize -> 14, 
                    Opacity[1.], 
                    RGBColor[0.571589, 0.586483, 0.], 
                    AbsoluteThickness[1.6]], {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], FontSize -> 14, 
                    Opacity[1.], 
                    RGBColor[0.571589, 0.586483, 0.], 
                    AbsoluteThickness[1.6]], 
                    PointBox[
                    NCache[{
                    Scaled[{
                    Rational[1, 2], 
                    Rational[1, 2]}]}, {
                    Scaled[{0.5, 0.5}]}]]}}}, AspectRatio -> Full, 
                    ImageSize -> {25, 25}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.33999999999999997`] -> 
                    Baseline)], #10}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                 AutoDelete -> False, 
                 GridBoxDividers -> {
                  "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                 GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}},
                  GridBoxSpacings -> {"Columns" -> {{0.8, 0.5}}}], "Grid"]}}, 
             GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
             AutoDelete -> False, 
             GridBoxDividers -> {"Columns" -> {{None}}, "Rows" -> {{None}}}, 
             GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}}, 
             GridBoxSpacings -> {"Columns" -> {{0}}, "Rows" -> {{1}}}], 
            "Grid"], Alignment -> Left, AppearanceElements -> None, 
           ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
           "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
         FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
         False], TraditionalForm]& ),
      Editable->True,
      InterpretationFunction:>(RowBox[{"PointLegend", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"FontSize", "\[Rule]", "14"}], ",", 
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.24561133333333335`, 0.3378526666666667, 
                    0.4731986666666667], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.368417, 0.506779, 0.709798]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.368417, 0.506779, 0.709798]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.368417, 0.506779, 0.709798], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"FontSize", "\[Rule]", "14"}], ",", 
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.587148, 0.40736066666666665`, 0.09470066666666668], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.880722, 0.611041, 0.142051]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.880722, 0.611041, 0.142051]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.880722, 0.611041, 0.142051], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"FontSize", "\[Rule]", "14"}], ",", 
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.37345400000000006`, 0.461046, 0.12992333333333334`], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.560181, 0.691569, 0.194885]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.560181, 0.691569, 0.194885]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.560181, 0.691569, 0.194885], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"FontSize", "\[Rule]", "14"}], ",", 
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.6150173333333333, 0.25708400000000003`, 
                    0.13945266666666667`], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.922526, 0.385626, 0.209179]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.922526, 0.385626, 0.209179]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.922526, 0.385626, 0.209179], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"FontSize", "\[Rule]", "14"}], ",", 
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.528488, 0.470624, 0.701351], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.3523253333333333, 0.3137493333333333, 
                    0.46756733333333333`], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.528488, 0.470624, 0.701351]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.528488, 0.470624, 0.701351]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.528488, 0.470624, 0.701351], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"FontSize", "\[Rule]", "14"}], ",", 
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.772079, 0.431554, 0.102387], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.5147193333333333, 0.28770266666666666`, 
                    0.06825800000000001], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.772079, 0.431554, 0.102387]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.772079, 0.431554, 0.102387]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.772079, 0.431554, 0.102387], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"FontSize", "\[Rule]", "14"}], ",", 
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.363898, 0.618501, 0.782349], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[0.24259866666666668`, 0.412334, 0.521566], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.363898, 0.618501, 0.782349]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.363898, 0.618501, 0.782349]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.363898, 0.618501, 0.782349], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"FontSize", "\[Rule]", "14"}], ",", 
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[1, 0.75, 0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> RGBColor[0.6666666666666666, 0.5, 0.],
                     FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[1, 0.75, 0]"], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[1, 0.75, 0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[1, 0.75, 0], Editable -> False, Selectable -> 
                    False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"FontSize", "\[Rule]", "14"}], ",", 
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.647624, 0.37816, 0.614037], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.4317493333333333, 0.2521066666666667, 
                    0.40935800000000006`], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.647624, 0.37816, 0.614037]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.647624, 0.37816, 0.614037]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.647624, 0.37816, 0.614037], Editable -> False, 
                    Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"FontSize", "\[Rule]", "14"}], ",", 
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.571589, 0.586483, 0.], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[0.38105933333333336`, 0.39098866666666665`, 0.], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.571589, 0.586483, 0.]"], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.571589, 0.586483, 0.]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.571589, 0.586483, 0.], Editable -> False, 
                    Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}]}],
              "}"}], ",", 
           RowBox[{"{", 
             
             RowBox[{#, ",", #2, ",", #3, ",", #4, ",", #5, ",", #6, ",", #7, 
               ",", #8, ",", #9, ",", #10, ",", #11}], "}"}], ",", 
           RowBox[{"LegendMarkers", "\[Rule]", "None"}], ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
             RowBox[{"{", "}"}]}], ",", 
           RowBox[{"LegendLayout", "\[Rule]", 
             RowBox[{"{", 
               RowBox[{"\"Row\"", ",", "3"}], "}"}]}], ",", 
           RowBox[{"LegendMarkerSize", "\[Rule]", "25"}]}], "]"}]& )], 
     Scaled[{0.8, 0.3}], ImageScaled[{0.5, 0.5}],
     BaseStyle->{FontSize -> Larger},
     FormatType->StandardForm]},
   AspectRatio->0.85,
   Axes->{True, True},
   AxesLabel->{
     FormBox["\"r [fm]\"", TraditionalForm], 
     FormBox["\"ImVs [GeV]\"", TraditionalForm]},
   AxesOrigin->{0, 0},
   AxesStyle->Directive[
    FontSize -> 25, Thickness -> 0.004, FontFamily -> "Helvetica", 
     GrayLevel[0]],
   BaseStyle->{FontSize -> 14},
   DisplayFunction->Identity,
   Frame->{{False, False}, {False, False}},
   FrameLabel->{{None, None}, {None, None}},
   FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
   GridLines->{None, None},
   GridLinesStyle->Directive[
     GrayLevel[0.5, 0.4]],
   ImagePadding->All,
   ImageSize->{1000, 1000},
   Method->{
    "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
     AbsolutePointSize[6], "ScalingFunctions" -> None, 
     "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
         (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
          Part[#, 1]], 
         (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
          Part[#, 2]]}& ), "CopiedValueFunction" -> ({
         (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
          Part[#, 1]], 
         (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
          Part[#, 2]]}& )}},
   PlotRange->NCache[{{
       Rational[1, 1000], 20}, {0., 6.348495851396602}}, {{0.001, 20}, {0., 
      6.348495851396602}}],
   PlotRangeClipping->True,
   PlotRangePadding->{{
      Scaled[0.02], 
      Scaled[0.02]}, {
      Scaled[0.05], 
      Scaled[0.05]}},
   Ticks->{Automatic, Automatic}],
  InterpretTemplate[Legended[
    Graphics[{{{{}, {}, 
        Annotation[{
          Directive[
           Opacity[1.], 
           RGBColor[0.368417, 0.506779, 0.709798], 
           AbsoluteThickness[1.6]], 
          Line[CompressedData["
1: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
q3DIb+zu/vX/AHFiovs=
           "]]}, "Charting`Private`Tag$6300#1"], 
        Annotation[{
          Directive[
           Opacity[1.], 
           RGBColor[0.880722, 0.611041, 0.142051], 
           AbsoluteThickness[1.6]], 
          Line[CompressedData["
1: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
9++//h/gZq7m
           "]]}, "Charting`Private`Tag$6300#2"], 
        Annotation[{
          Directive[
           Opacity[1.], 
           RGBColor[0.560181, 0.691569, 0.194885], 
           AbsoluteThickness[1.6]], 
          Line[CompressedData["
1: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
t93dX/4/S2DFHA==
           "]]}, "Charting`Private`Tag$6300#3"], 
        Annotation[{
          Directive[
           Opacity[1.], 
           RGBColor[0.922526, 0.385626, 0.209179], 
           AbsoluteThickness[1.6]], 
          Line[CompressedData["
1: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
WIld6sf+/h//D7wa40Q=
           "]]}, "Charting`Private`Tag$6300#4"], 
        Annotation[{
          Directive[
           Opacity[1.], 
           RGBColor[0.528488, 0.470624, 0.701351], 
           AbsoluteThickness[1.6]], 
          Line[CompressedData["
1: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
X/8P2Prmiw==
           "]]}, "Charting`Private`Tag$6300#5"], 
        Annotation[{
          Directive[
           Opacity[1.], 
           RGBColor[0.772079, 0.431554, 0.102387], 
           AbsoluteThickness[1.6]], 
          Line[CompressedData["
1:eJxF0mc8FfofB3CyQzjnKJGRkbI5Np3vT65yqewRXUSyuWRG5Zol1JHsLRwz
SkaysiojDtn7hJBsofX3f9SDz+vzej/7PPictPUwtD9ERUXVeZD/t+U3e3ba
6/rQ21+CYWCQIUSEW7kkKd8Gi54rmn1xVwmp7QaLxyQewCye9toa0ZmgInKr
Z33iMeg0SbKru90kiDjokoZEUoCbsLe9zZ1EuGd8pHlSMQsMgN7G8mQ+4c72
TmmfRS50rkbOpnOXE7wTplJa7+TDNBHjcvNWI8FZ6W1kdU4hFKnPaQvBO4LN
cLl3UXsJyCQJuEfY9BFMA5KvpS89g6BmiazzdSOEU6waotqRFSC2N/LhdsEs
Ifufl+kax19APDFdz9zzM+FE2RmcWnElYDQnieTNVULir/Qo+bNVQKK7+pds
0jYBo4ehlvpQDe2LbyFA8TshJjPCT/RaLXSdPCuqkUEFjGv7KwKbr0Dh90bA
E2s6CEEe17nDX0PuOKlrUeAw/HxEGcUeawD2V1b8hNkj4D9jZsBa2Ai2t9u2
6vcwsM81bxea3gTN7/tYMPlHQUlDgD/4RjNwc00K3zDkBm8ni9Eg6TeQ5mpl
+uMEPzwnxj8J2H0Dqzu8x/cUBWGttkfft7kFYqpZGLynhEFylpHlZlQrfFlg
HUuiOg3OhzU7PIzawALz6MqdInEgyd0OcT3RDp3qmGE7Y2mYt6g+6zTXDsVk
OsmofFkQCl3ftS/rgB+hlb96cPJgUyxeaev3Fi4q2PViQxUho9/ewxq9A+8t
zRSXPWUY/54pdpXpPTxOTNYO4FaH48Kjc+bk91CiuroToQZgehGXbZLaCbPu
OYY6UhoQ7335quH1Lti8LT+Hx2kCOe3eMT3JbsgL6ReVYdYCtrY3ZN2dbjCM
9HKWOHQBojiV/ta69wHw2l3RlGJd+JShfCj7dC9c5qXXLzh6GQ69+GjNH9ML
HWZbpXKW+oDG2HhOmPZB50YkE1wwAuvVEv+UV33wk8arz7nTGO7Q6Axy8ZMh
KEHTaO6eKdSJhxE5P5PBp27edJTGAkbh5Orji/0w7HCrPvrIVdg1ariIqegH
+bjOdSNuK1AM2mVguzUA4wSGmkWVa2Dy6Il9zOQAGLfrD9g424L3U7kWZs2P
8O5SytpQih1UdLneYWQZBB2eB755mjegd5ppPOLfQQi4+cKCJ8cBvm7lq9B9
HATTMW+3OQ4nkOCd2aLOGAKP6akbabKuUOBm4vJdegS+KLuQzB94wlKOQ+NK
2giohhlZYdK9QGo4ADvNNAoDjRq9g+U3oepcRl0rZRQEcWdXM775wL5fOVu1
/hhsJ3i9TBT3g7Olb+wK68cgPjZKsd/aH1qPLTDHJo5D9n364BfMgcB4ac86
mHYCgjltU8AuCHRDmCu9PCdgk2MpfXb8NpC/SF81050ET7GdM5lOwTDd7F8i
8HsKUiv0GYj1oRAXqBXMpDgN5j2JHelZYSCfcLkoxHUaRBwSOyYiwsGv0+aX
98g0tBSoeZF8IuGXQnj+lRczIKHVYT6R+gCy9GN7yYszwHPbtky/IRrOuSTu
6wrMAvPLnzSt0zEQkVV4mRAzC74D71OUTz4CVuaeHUEHCgwEN4R5lsVBmciQ
QFo6BWKJzK9HLB6DPprW4RyggOKbKI4zbPEQ77ORwaDxCX7M066FBD2BE9NH
L3zhnoP+qokaO2ISNOzze9obzEGTl+BEn1Uy2HCeSZ2MnIPAS25u8nIpkKuj
ttq7NQfrLU4KogupIPbSOvFlzzy0eqq+Xo/IhK4Pjs1SdAvQhtim5QlZ4L7k
uVygtgAkberZtZosqOAPgxTSAjz62S9nUpsNylGkhTshn6HawyYvg5wLF6zX
lbQVl0C6oL7J/S4Jes8/PSfitASiC4MO9dhCMJcyu3QobQmo982MWksKwfHn
a9vX1MtgO+NFiKAUwb3UezEy3cvQeSzV39W1FN4P8VO4rq/ADNrlLPGrAMNG
8sp2wgrwvU5W3+6vgNH88F3yuxWobDKm1cA/h2WfZdYY6a+Qy0FraLj5HFhw
1crU37+C9Hw/4WtIJYieFu3Y0l4D7lPSgW7j1fAlNfiine0afHuzRG7RrYFy
ttG+vsA1KCsPEmhuqAHlb9HjZWVrYNYtGKCQVwva7Rvrjrh1aHZR9JMIrQOn
6w0nJqbW4XyrwbntgEYozjLxavPdBHHeU2ftxFtBrL1do/LhJtDa68S89GkF
0rISRy5pE14I2QqlNLdCviJ3efDoJnBnE/XsrrRBVtfkihphC6YrI2lwce2Q
sOvg9JxuGx44feK0438Hwfq3bDLjd6BMZ3cYW9IDv32WpWNLd6CCp1negOkD
3Em9+juofQccfX994nf8AIHzhAyL3R14/51DVgbbC75BNOOcV7/Bq835FuGP
veBCijaLFtoFNcrL0+wOZDClyrwc8HwPiNbcU+ebPgKfeylPePceZPtRWTf+
+AjzY3WfH33eg8NX6uPaVAbBt3o4hMS3D6WirXTJlYPwxB1TPRS1D6blmTek
yoZgYDycX9HuO6y37doMPRsBo1rXtQ3sT5icDwxj+TIBp1V4/65SpUJmY0pv
5JIpcJ7SI2pygQpJY3U1OuspYBcTTL9lRIXcw5i9nGYpkDFDaZF1o0IveRT4
psU/AS6qiFCaSYVUW8R8jjR9AuoxJfmntNSI8/rspaovczAaZMgf10ONsmeE
ONZMP8ODpshtN1sahCqMGYMPfnXUINWkrZseKR/bK+f/bws2uPJ2Rc4cRh3z
T3UvmuyDwjPd/FYdVuQY0WBYmvob9Au6Q6nN2dHMFf9C8D+ElCdbahtXOFAc
89kjcdW06J2MAjEkEIvyHkUQrYrp0VeGwHOc4pyIIqpU4/wfIzp/nm2vvf4o
4uOETPldJiTH5H9f24sL/SdaLm6mz4zaFyzrevi4UTI9gUXTlQXFSsZu3Czj
QRx+Pmm8l1jR4rd4mkVrXmR0wb+FzHsE+Z9ZOn57iw8leLyaCmw/gnpWmcL/
NRFAhS4b0joObKjSfLz7qcRJZCX+1dRwiw3Jb5skO26fRB2q/3zSUWRHv/pr
DXAfBFGqfih+0osdXZtvjdZLEUK+hue0BEnsKDkihivmmjCi9jdd2B1hRzxO
iPhcRQTprFu+WmLlQIp3U6IdaE4hldxRqQZ1DpQ6NOlNO3kKKZyjDtpw40AD
9dOluZWiiBpzIXc4jQMVDN13IgedRsvfLt1w6eBArXhezKLJGeQhu+RltcWB
AlvMzj4UEENmDz3ylHgxiH5Gr1ZpQQyFU40kEP7CoDEkJ/i2QRzNqKncvOWG
QToDdayfIyVQAk9s0EocBh0qkp5fvSaJBg0Drf59hUHGL3Q0IiWl0M5N5V2z
SQwK1BFaEdiWQjYPqjzzqLBoWWg+PKdbGr3ru1I4K4xFgVyk3hFdGSQqkyH9
UQuLhBHZ2LRWBl3jY4rJdMSiGilL6gFhWSSlXCk/dx+LjlcreRy/L4uuhFQ9
kyRhUYbN/X7ytizCgmmM6lssWsuV2jOylEO5RRlSXnNYJFEmd2GwQQ6NG5MF
fKhxKGak+EGXGB45e9JpS/DjUA5LS6i1BB5ZNBZPJR+4CkYDNyTxaG52xItB
AIem8xhduWTx6NbOcPjsgeW87C9eV8Kjieft0kmCODR8mJ/1hyYeyRi9H6Q+
hUPC6nGx4v/g0V8zTYI9Ejik4lEY0WCFR9YU3GNVSRy6nNN0x8AGj1aT53/m
H9iPcdXdzw6PMFo1zXelcOj9gK5eixMeebd29cjI4NC/bnTslr54lCCnqkXE
41Bdhj8x6iEe3TV1NNNVxSFH82MOF4l4tPIzTKDlwEcxVepHHuORuR8DRVUN
h7zCNxeICXjEl5ipLaaOQ2Ku7oTkdDyKvv93GCPhYL8IK84yE4/imrl+3D1w
xFTx4olsPErTEzD/duAZw8X4rKd4xOSvSTcPOBTLcs/ZNh+PtjMGCP8gHFJv
P4WESXg002bvP3DgpbttnPOFeER7XDpHVwOHklSuLxcU41GJmUfNmwOf3zzU
7FSKR8YJz3pUzuHQVkl2gvgzPNr8nabgeuCcG8h1pfyP9QSmNJ49/+OixydW
5Kr+mJ7BIqmq9o8bVga+1jf9sc+AnlZbxx8beqhlzlL+WPqw6N7v33/8P5Ck
3Qc=
           "]]}, "Charting`Private`Tag$6300#6"], 
        Annotation[{
          Directive[
           Opacity[1.], 
           RGBColor[0.363898, 0.618501, 0.782349], 
           AbsoluteThickness[1.6]], 
          Line[CompressedData["
1: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

           "]]}, "Charting`Private`Tag$6300#7"], 
        Annotation[{
          Directive[
           Opacity[1.], 
           RGBColor[1, 0.75, 0], 
           AbsoluteThickness[1.6]], 
          Line[CompressedData["
1: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
95//BxDVjPg=
           "]]}, "Charting`Private`Tag$6300#8"], 
        Annotation[{
          Directive[
           Opacity[1.], 
           RGBColor[0.647624, 0.37816, 0.614037], 
           AbsoluteThickness[1.6]], 
          Line[CompressedData["
1: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
i//+/cf/AyCkWds=
           "]]}, "Charting`Private`Tag$6300#9"]}}, {}, {}}, {
     DisplayFunction -> Identity, Ticks -> {Automatic, Automatic}, 
      AxesOrigin -> {0, 0}, 
      FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
      GridLines -> {None, None}, DisplayFunction -> Identity, 
      PlotRangePadding -> {{
         Scaled[0.02], 
         Scaled[0.02]}, {
         Scaled[0.05], 
         Scaled[0.05]}}, PlotRangeClipping -> True, ImagePadding -> All, 
      DisplayFunction -> Identity, AspectRatio -> 0.85, Axes -> {True, True}, 
      AxesLabel -> {"r [fm]", "ImVs [GeV]"}, AxesOrigin -> {0, 0}, AxesStyle -> 
      Directive[FontSize -> 25, Thickness -> 0.004, FontFamily -> "Helvetica", 
        GrayLevel[0]], BaseStyle -> {FontSize -> 14}, DisplayFunction :> 
      Identity, Frame -> {{False, False}, {False, False}}, 
      FrameLabel -> {{None, None}, {None, None}}, 
      FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
      GridLines -> {None, None}, GridLinesStyle -> Directive[
        GrayLevel[0.5, 0.4]], ImageSize -> {1000, 1000}, 
      Method -> {
       "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
        AbsolutePointSize[6], "ScalingFunctions" -> None, 
        "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
            (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
             Part[#, 1]], 
            (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
             Part[#, 2]]}& ), "CopiedValueFunction" -> ({
            (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
             Part[#, 1]], 
            (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
             Part[#, 2]]}& )}}, PlotRange -> {{
         Rational[1, 1000], 20}, {0., 6.348495851396602}}, PlotRangeClipping -> 
      True, PlotRangePadding -> {{
         Scaled[0.02], 
         Scaled[0.02]}, {
         Scaled[0.02], 
         Scaled[0.02]}}, Ticks -> {Automatic, Automatic}}], 
    Placed[
     Unevaluated[
      PointLegend[{
        Directive[FontSize -> 14, 
         Opacity[1.], 
         RGBColor[0.368417, 0.506779, 0.709798], 
         AbsoluteThickness[1.6]], 
        Directive[FontSize -> 14, 
         Opacity[1.], 
         RGBColor[0.880722, 0.611041, 0.142051], 
         AbsoluteThickness[1.6]], 
        Directive[FontSize -> 14, 
         Opacity[1.], 
         RGBColor[0.560181, 0.691569, 0.194885], 
         AbsoluteThickness[1.6]], 
        Directive[FontSize -> 14, 
         Opacity[1.], 
         RGBColor[0.922526, 0.385626, 0.209179], 
         AbsoluteThickness[1.6]], 
        Directive[FontSize -> 14, 
         Opacity[1.], 
         RGBColor[0.528488, 0.470624, 0.701351], 
         AbsoluteThickness[1.6]], 
        Directive[FontSize -> 14, 
         Opacity[1.], 
         RGBColor[0.772079, 0.431554, 0.102387], 
         AbsoluteThickness[1.6]], 
        Directive[FontSize -> 14, 
         Opacity[1.], 
         RGBColor[0.363898, 0.618501, 0.782349], 
         AbsoluteThickness[1.6]], 
        Directive[FontSize -> 14, 
         Opacity[1.], 
         RGBColor[1, 0.75, 0], 
         AbsoluteThickness[1.6]], 
        Directive[FontSize -> 14, 
         Opacity[1.], 
         RGBColor[0.647624, 0.37816, 0.614037], 
         AbsoluteThickness[1.6]], 
        Directive[FontSize -> 14, 
         Opacity[1.], 
         RGBColor[0.571589, 0.586483, 0.], 
         AbsoluteThickness[1.6]]}, {
       "1/10", "2/10", "3/10", "4/10", "5/10", "6/10", "7/10", "8/10", "9/10",
         "99/100", "Vac"}, LegendMarkers -> None, LabelStyle -> {}, 
       LegendLayout -> {"Row", 3}, LegendMarkerSize -> 25]], {0.8, 0.3}, 
     Identity]]& ],
  AutoDelete->True,
  Editable->True,
  SelectWithContents->False,
  Selectable->True]], "Output",
 CellChangeTimes->{{3.749563452374757*^9, 3.7495635084492483`*^9}, 
   3.749563800873476*^9, 3.749573064389326*^9, {3.749612452736169*^9, 
   3.7496124767412558`*^9}, {3.749646712401917*^9, 3.749646720367263*^9}, 
   3.749655783540344*^9, 
   3.749744022040094*^9},ImageCache->GraphicsData["CompressedBitmap", "\<\
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
tZ0vdrH6IsYb6Tk2P2Q2x+ZWMHkcjs61woYqIFGRGmDIA6F9pNnQfSa5tN3s
LsS8lYv5PnJTbuJqKjj0FmW5PEwj57mTx9lUc7H2qSXFmgCEBlu25wJ9Puek
OCf+3YtW7ouA0OZP/FDPd2t9MRV5Y1DRXeK7+HcvKvYZJmxIOZTzlz/w3drG
UjoSOhpnFt/Fv4VrH/YN1TdV/MfnIsALz0gQlvgu/i2QsmYcu7vdPXdid4jS
k8ywbN4gyjgAu8x7M4XW0wl4zQEtdRUUNvluil/5tuEAH2EtQ0vmZ8utJ83J
cq9e7d7lTHVIwrOWzDzOHOC7fSgNni8cgPI6M81LrzO94BZsEAUOWLornFHU
z4Yo9VIVRf3tFXHydfUbqYu8vmBs97PhXB/DamuNoZG397WlOPvISGzp1V+p
dihkJFNQPxsddTwP0tpFdHbRx/Tkb6+nvn0H0i8ffpe+O5RFDY5XdFV68TFn
CpTZz0af+kymdOXHQZXDiENN6jqkH7IlwCL1Lhy+6ByZ9j8ak2fJpJNLZLQ7
ydeqP6mWXSV7t+rxYtdQ1YoxPPIQcyWL1CwRz/DxEMgc1v9u0WY4fZrSL+y0
hjRqSg+IyQV9M433V5QeEp9vru/m7q7vqndN16QdYB4FmfdXxF6bccycRBa0
4tpaqfTsVHr54U9pe1o9mxUmVnvVT5WYfZRFPYi9vyL5lNyT5lRWL3c9Jc97
iu76YCtFXqmjltYGKrt4mha++SgNOVkizny1T6bbSEHy/RXhN4Z6mZN1K6Ou
2kkcZqfqXAN0H8JYmAzVve8vsx8IeHy1JxKJayPpVfYDjeVa0vuphsIs1bHQ
mpfBpI85fnidiZUbKzOzT1KOy/0Ut/Nt4/7rIan2sZ/a1lm1P9KB/mHrdKT/
Xl22E/wYfdLFPiMcuKDk7GhzHt2l0SRsp7kff0LLw3kYeK8f8UjHwsc6sADK
PTqygHhObTSNuPshmptqrTZDD/4jT67gvRE/Qpd79doJDjxQvX5KJx748bHX
LSfo/dRZ4ZctTrAFg/R7kVlSCxyPyzdaIMdrpZwykuBjDo3IFyJgbhvOq/eu
pdqdi2Q8JDGMLT0kAXf5/ZPKI1U6afUCmqKiQXpstDD3jf+lWeGbFWcdWGHs
KmtT4w+xwtXum87b+7QDG+Tte67TWdBjkU/HJgyiVXG19izc1T4O5m52ZoGt
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
AEYPvuYxT8PkthEDTOZsZUr6G8KrEtIOeEFbllEsvWWdvrCKZfi6RWtKBPiw
FRkbEbFdVaKnndOrMMUwqgCm/r7Af7NkrhD8D6Py8p4XafDco7TzVKLTe+o0
AiumjMgCaHF3AJmQz9lkCyAYlZi1Gfe6ee+YmmsDV1JjR4c/CwNdDHZyLpcx
drwOxRnsoNkGzj2a4vAqrkxl2xjqEkU6HI7aOYkGyWqLdw3zEnMMFHlrU+t/
AQxwiK5G8S2rWjf9WzPzWWMH3iQGCcCjbGppM2VVwsePnv8811C11ldrkLAo
eLEw94vMlL2BVHdIdtRjFQFe2sfPKFTmpct9NG2pG83cch7+6jv6xtRIASHa
bMhZ0hkevbkgxiPCTKAyyGkqkEZZ7GvmvVC1a/BQtNUkWJZwWq45PzbPIKei
tI6bxvdtCzWQ8HZlRMOEBYBoGEbSYdkIRmFI+/JeSt77AbeG+IRnakh0QAyM
8F9AUqUa6zES0BEzwQYzEI5Cx9CQnReorLZJA5Po/KH0XUqtNaO+altKulmw
OJCa4s7buhnJtJ1K81IW97tuXkIjFnPg4m/qp4TiN0MuLWCWdgZG71o5s+gk
j89CgNKgBUORgZa4v5j3MoSfiOFBGwMyDFpqcxN4eFCaywgn7S/DOIZw3iCE
c3NTq9Y0aOTFXBaMoMEL/ah26zJ755P01dwD5Hwg2klDEshzjVzYNvkvINFx
SmFlOqKlKtRAIiBgSLDBRkOSvmccz1jBDAaNk5T4Amkkn0o2OMFwIA68sMnf
RpW1ubzY0m5ehuwZpWMWb6mfEvYxW1kY8GdBsqw7SOBTQlBgmoSBxODkDTPM
H1MHQFzoGLcJZoxYCJt4F8Wv+Cskr4bH3SWcJ5YWF1YbeOq9d5nlVHiZzves
w9x3BLW5YNVmHbbQLd267KXjxAUHeDapj2vWxzBaCzPfKMxYPpq2MBGz0JjJ
8VphyhC0AYARoNihsmtjsGWCoId/5sdUNubPXJSBimiE+OwmZsbev9CXwsTc
55Nsus6FS8lEhhlhFijLuwOltqTGTH1yQE38WwY18JEhkREMFxLaeDFN9Zzz
wFzNtuZGjRo9Ai/WLNceKNzjWOn0K0tTR5SkpbmDSc3TbTYrmvTc8r+Yu5b1
UiXpRT8Ej944JsNJshbWwHPxa4WacIManTE8FpdvUFMU5i4Hy55ZZ9gffvKW
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
eEO9UN/BN+R91EpFY6gsFxPtlMaqDvegnhgREK5Bc3+TRiw4xrMQ6xtbVBWD
arJH7Rf6xEyT/cuymcVu4izsfEuR6qBgldyoLB7xeejbvb0BrzgoQkCooxIU
5CTfu4/jJShDBavwklKu0n7aKvVD14QKNCF0ipIFhBR2BF/mEgYpFNrp8oHp
8m42fYY1bur9DkaC+Wz1xmkdWkd0eCgi3dWIzdSDX/BelFX7IxHKuE7fDWQI
GnzgIuu6M/TQIQhiF6EOQwJj+Y1ruZIFkRQ0ygJwuBdB689xQBCxB+QK82Jz
UJCk7IS7pFGtpRbsQzRbCnsRSwicBWC4kEVeyXxB5kIOzeALSdr4Ke/8xKuT
8SA/KqykytmfKkM4ysSSYPCj6rwifDFfSOiBaSxQ9/mkyIzqAOnVYAAAZgTp
CIR/T9mEVORujUjjl8Occq5wR4Uf1FHiB1Y/avi91J61gLwjz3NUBdZRYVWD
gUx3zyZt+IT3E+HVwTq4JMcgtJVhjqqwegXftpUWWPEj4bRV1GRSsc8IhuzI
ruUMWWBMbl8NGVig5KgM9iCGr9kAeSt0gjfm2yBb2RmyfMWZTLiIAIbdZYYq
1QU/QMePDqHlHtsoKV9l2fpS5tG5CqiPje/CU2yF3nf6FVsAeGGVot2+RR3x
+pPPsQqoq0Uy7q/M286bt7D4T82WA+E4hQsqgoeM+aL+vRW6eklthd4Yu823
pjNMVzRM6LJBMtjA9GtqPDdA+PnPyFBF8UHKPzGeQr79Fe+L08BoZQ4saWUO
BmSrdf0UxiyKZUB3WFLSWHmZCvf/kYo8/kDeuz+hsIOvU0vo/SAwM58KQSBg
CBMTmsuswzt3PjyXy+IbwvuovbyOks68RuVnb+mlm/b9egqJ2ZtqT/yM2hM/
YoIuvTCR/IV3FbX/K2q9LLvmmo68QXWrb6WW039mo6lGnKfStx+1+fdy6qUG
5bWc60353n+glpSvZC643r7iZlPnk5UpioMsQzvFtzuPkcvx9VSdNp9ha/S9
nRpO9KI2395qxgBm6/TnIQaVwXdSss/NQpy8SY0JU6nA7TZK9/iQ5dZK4a9i
RI316M2dH80pb6db6XxGCQcNYJX4p8kynRyvlUyOiWvfpdbaLL64MG8f2jhn
KwV4nuL/bytLo4rJf2VTDH4XTDH0MECUouBA+5UX3L9RkiP5h47Dw2uF+wD7
AMoPQm3tuYuY5GVK7hPWvMd92V1J9ta8DMPuKL1uaW1gQkIgCoKs1G88H+fY
rgV6090P4KVKXQ7Cu9A1OA3clVRhfuedWSdPs/rvXB5mF6tYX8H8Ji4EF4ON
aHDA0d4CZwx2WnF5IhUe+4DjCxs3O0tGzSqzXc7Gzsdhj1vIAYQDMDAG+SAU
Omaf3cBHiV/9LnKuRg6C08BxeLG1NPQpKTPqa1hm4BiQhZXlKTzZCL7h7JWu
bC1dKauzTrKh80lqFcEiRopJVrgYrCSMOi3Nt/hV72DzDSSWk5ReNxjpxV6q
stsgvRBYQuIS5Tv1pfGU6/YwZe15kb5eeMBYJdZR1nc+Sp26FFgBSBwNFUQM
t9L1sCcFjZUlajiK8SOW+JqNdXq3dfXaCexKJeUcY8IFAddlnWHcpLv/nQYL
K3fFXuYl6yQO8oWVkNMvqLi6kaee4FLG7wqkQ9+9SnEr3uJTXBKshZJv1ICh
pxUv1Hrba77PJ681rQK6HD5631DenCMcuB84QaM6AU4JJsamNSjPecsXUdiK
D3htFDLxUJCo4+S98oj1YS2kqahqN5PEsF++LGg6n+DUzhk6dGudYF3nE/DE
GqHOK+qaaYO/NEqGbvGlXeu+p+baSm55w9NBntjxBsMdrY060oj2GPegL1kB
ZAhPjhvA0Ie/ZRVzCEI11uMdhlyze+T0M+z+ool7AvnxE7YcoaT0DHak8OjN
y89RjXg0uIBtHsEV4A4wJzQofIj8olDK93iFsl0epAWrtjlyhINmlONyruc5
Eh6nTtOQrb70+fZQWukZRsGRufLJK/y4jBYum3ZfocsranN6wiARFkB5cSQ7
Llm7n6Gxi/bRpHV+aOm0Hry684P5XadbqCAtgpauWkxf7AimQcJlWH0iiRbM
PMVDjBDjRTICwT/4jfCZ88timO1QZliZ48sGQ8betzhGMmdbMCddrMeu6vKx
PdSzG8vzyHf5JzRj1Vq+cvDfuBXnaMOqAKoTz265nCT9VSUHU3JPsq+OkurK
ZLkHOtnjc/pS8NmyPRe4Pt96toNlxe/2VM+GJkjZOpgOTXuZZmw/yM//Ylso
fb/xPLYA8toTNpa+/4gvHqvcQNve0TOoImJZB+7aeDiG47vWsx32afC70hf7
KTsCXET17a10YtlgmrYvjJ8/aHsYuZ2/TEWBp1nUIcYMUXc6eqZaJ7ddmEoz
+Nl+eyYwX3mcTf1Pj5XRo59QccQh7qJFO5LnEW/6SqgdvnbhHW/2OEtJo//G
Iq21pZGvGFednONpbN2Tbt+b3lHrmQ57avjdvuqZ1ZlRXHeIluWo/eto5lxv
Gr8lhL1TiJgFK1wodMdGamisZpICA6fnnzYMvHvbUo61hibm/5A7wO/2U89E
JAxNINAoFzaOo8XTPGmDcyBtDcigITvOM8wTXf3peNwl2uLzEZNzdqEf278Q
3Rs2rGahgep865kOoyr43f7qma1NdZS6fSg/M2zx+7RsqgdPeSmvrKOjmzbT
2PUn+LlD3MJp4v5NtODwF5RXEGSkxcLVmzk5i4Eh1jMdHEF+d4B6JkRw9onF
TEahM56m1VN38BSghqoaqpg/mM5PHESrDwbRIFdJXkNdvcjNP5iid71N2ait
X76Dxq7ypbKqBtszF3f5TFk1fC2VRB5hGgqZeA9tnLycdm44T/UlJdzMD4lY
EuJDByLj6atdh4UGF08VVu2UHR60x20afbPEnaY4+3OvufU8h12H/K4MCt2M
AjqKmPFHCh77G3KdNIl7n+pLS5gt8bzG8NPcWbHk6Ps0/cAK+mZPMMP6+Y4Q
GrQxgMYJls4rt0lgh7gDvytd9BuYdOKWvcFoPDDhM9olDIkG2+OwCAQttyAZ
l7N/p/CoE+S8Yz6NdDmjwO3NWW5s+Ewvqumo+R2iY/yujAHexL5O6o7h/OgT
416lnWtOUXVBEY+b4UdHnOUZZuCQ3X4fUVnCDsraJvybXV/TF2vP0Yid4eYI
yMpiZ1qwsM6hUs1rVpdHkGH3nzJB5ZxazgR17tv7add8ZyrNyudSEZSZ4whJ
QiBAMCCfVxa9Rrr3O79kOejqnUxeiYV6SKk+DcpsMaQF9icWU5rX9C5PI0NJ
P+OZPKFTHqTz39xKh6cOpbykDHmSYU9TU6QvxVzay1LxUMhIKlaJ4rMuI7SI
4t/CPAEk/PB4GJpC5OhTwU3AcEoUuZoIAV5TujzVzfzujVxNFLPmU0bTmXFP
UZrfmQ6n0uvYjl8YR8V+Y2W7z7ZpLMSiU6/o3i44JshkoIAUe62+cAk3/ILR
JpiTfzg6lz9TWmvnl/FdHu+nioAzvLZS0Le3U9A3t1GU60LedgU1hih/QOIK
OQEv6nslX+8S/DuLGwLTc8tVXr8P99bF51XyTudl4hziPMJDxdn6cpML0IvF
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
XuYYM8+UOea25+0coaqOS24mrvLiEH3n3CYb9g2T8ooSRxmXFuYP/t6LsBOb
6/q+lO1Ye5GlLDO9QINABr37lFHev3H1QfyRwEj/kJVr8ySDX/SQ4TC2/muo
3mCkkSrDXUvUjQ9fn7zWknXwaI58P3i1fNepp2wedKeK4dGpxpk9qr+hV647
vDFo/v0Sa/CvwVGujJNbv9AXJMy8VOvzHuQ1kMPNrzAmShYYU9XTVpIgktQS
0MpgIO/oUP1xNM7TH8anUp34efOIkMCdWjAD8ymVLck6EtgdlrR1+umJajaX
bDwk7/88T/p1/cLI4hVKXvrC96Q8N0GT87sSZ8mQhQ9ZOPWEqkous3f0EZAk
pJr1yQOeETM+ZfGiCUAtS19DxYloEhoPXDkreBEdScbQHMfAWEsk+pZMfvrm
mRrqJi+1rs0lEVYyiXTzUcLMjvorWqNcVbU9LJ0b7BYqBJ6+Td5rP1Gm9HpV
fWRufcte95NUluZqpzjFCE5Rjl/xEibAVWsaBKUIhLlzXoDpHjVplblZgYst
iQxg56oGEp4OgfD39LGb9HPz88AEa9eIvoKb2CjyiISQHX0kQYldsr/E/Ijk
mMMafl72Jksf19x+M2CltO44RFYMfCxoBHaN1pNHa8aa3f0VhHhu2QeSlrvH
0acme+NiyWn/ikffO7fqlYwVaUcCrjWLGciYMxxmB/XZSlxPGkapXJ1k6QPv
A6Hwkjlrm364wacPWIxxoCaPKBTpRmPkwlcnb7Zyiv9Mjzs3v7T/uavEDvGc
s6OTH5DiRDWFer3xUg2sXaeAC+CVW5hk60VJI230wpxYBKM48/p+ieJ0XVvk
wMBZ5Cx+thaB4zhv+nZ1sSk8m+J0cFGuWjAiNVTHaMizurFjBkY1NZObujIs
iVstiRp8nr1DXm8/S/p1/0r2D/PCBKnzXpOybK+Ilm4shychc1lsF2KHwZLY
xH2SP+hbvcjJy268K2WxazTT5OjkhlRg1pgBMX66jPspcNmSjBqiumOabyTK
jJHYLqlrxmneTOM7Tt/U08guKW89igam4eEYFWXLkK+1LzQCaCzAVOn0/uNy
4wV/lGaNoqRe45PlvKsekNd/nCI78iq9mGGQJ9stT44Yb6WjAQBvtZ8sU/u+
a8zkhXLIOA2K2oq9EjQjxirOWuk/+xa9vAqM7XjCzdcFY7t5Rfa2ahOPD6/o
MmtamDKAdzfCN5qRWk68OMiTGaHaKT3B006Gbug3fHAsoXsCkEB1sUq3kRIj
LZ7LaodmRVD9KJuNt3hWvTqGdEbAQXsdafDn52TQniIgQkR1juywHNmwK1k+
6bFEp1CvHPysd9CNieWy1KpKry0qMWOjKjDPr79LNu4fQe+czxHmThbNHOw7
9ijuough5C4Cl9sVAtDp0xjeu1aOzHLnKj9DoxH0shEuI2ER0/JcxxE6XchM
UslMGAbmmaXaOmavBY0yX4a2PCt/jApIoE6UnHbHh9J33ibZl5QmR/dvkWWT
f5YXrmgqEXUMl87/UFbk2PxqkEXeGJg/aDx0+vJ98saP89Rk7xjuJdW466ow
QX1sYf2YbaC++jHz7tG72MorS30ulZVqptlV+5JvKxjREZQSuOLf59IcyyW6
IKsdJaPi131xoa/1PztfI6WATErYSJRUlORPCeWSOSQle+WnSxoKg6ZOvKGz
bC+sCrjb2KQoTnrc1sxw6AS5umc8o7m8cqkgh+IshzJyiqTP5M16313fHj/I
geHXBWMMGTt9Du07ulhGLvmnB2wWPKCXWhtLeYKTYnMUynauldzuH5k3GbVq
PjP/Xz9D4/wHXJpvucQ4D5ALPjg5I8CaH3eo7ytWfkTBJA6vJ09VgXHVWVWR
PEkeufhPct5frpH3VufoaC8vMxEpeevekHONoDW+qq8klEkNLu2xXIo7mKE2
9c12U2XqgJaSMPQSH6dXFHrXhIOPyKYNt1kDbri28M+VrlMyitxovtaG0ZAr
9M+V/z6HFloOcck1VZfUkCAsCM3azy4IRQ8AXhLQQTkq8LBx4FbLgKq0GXLz
iQGJONNAq/yaDPB645ppZMMZ3Q87jJbVI15WSH94xOWSs6mHOSHerA8aDHYd
jpahtnBg6KKH9d8EBfwC/vxs1TE+SDS6p3D6QEVQVx2HC/hkNPobC7zYfp3T
wggAskLhJE1iwTR2UFiIfPA7jOP2wGJlYHB1flSmTpEbmwak7il/l5W5Nfmx
3/KDUZVY6Ffbz5HvOveXHaO9aA93vAG0XNScuQzUgJC5d7U4CEk1fhhEiRVy
PWnkj9VFTdwXaBHCDwoBh/Va4fMDH5VZKsS6DOJa5qSitFADpxSw4PPgGIRq
l9Z/01AktTtgFkJgZXnp/apzIXfVS3K2ORb1/9ZKYotqciHeciExNU9tMldU
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
v7BTZ/gvyZcNb52ncYSIUx8yrldlwC2ORk0cbtXCoz0t7FpPavO6K9Ik+tk/
mq+rK01atNXwoh/lM1+QMf9NOY8wUsTp8sR8bcP+w/9xJf6B+a+xIneVvIgF
M1992mMLJLNK/AVI6X7pdlkjDWA2vWGY4oVaWOFu7C5PGiuPnh6p7z3h0ldl
0PoMWh3cj9ndpLmt5WpNT9SRxpd/JzuK7BXB//li/mvcON1fH+2oT8kZ+N0R
Z8hTSxS3+mtwnawBB3fdzb0hWRqDniccLpTi4mIpKa1QUOi99Q/69flbusn9
p3jJtToRJ8gF970mX/UcI7MWr5aNWzfJ6oXTZUy/dvLqbedKw7qeoo48+R75
Ja6o2b+zyibhVqks0DuszaqKc7bLt+D8/zdu0R2ZIXP+capEsMQ/PicrclxN
mhHe/V3kUhVe47L1VpfN7zo+XtrMf62hqnD3OPn0jjOkHnE+G08n4Hjd2zIs
rhCymx13NfXDrOb/kpA7DjsqU6fKPSfVVQR79ksxVHD77JDSfdL5Uk96G13e
nZCCz47C2M/luj+dJWeddZZ5BX9GyN/u6iMHvfH4Vv0xd6RQElaMkPbvPi33
XP03+ePJTaVhvQbS7Kzm0uLWB+Sp15hdEivZ5WLnmhxrTfXDrKlQtre6Vs4L
WcdZZ50v9w49fAym1Pj0fygX/Punv3/6+6e/f/r7p79/+vunv3/6+6fH+zRQ
5/8Dt9IT2A==\
\>"]]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Spectra", "Section",
 CellChangeTimes->{{3.745472165420155*^9, 3.745472170532083*^9}, {
  3.749554829941771*^9, 3.749554831005995*^9}}],

Cell[CellGroupData[{

Cell["Modules", "Subsection",
 CellChangeTimes->{{3.726381335500948*^9, 3.726381343557601*^9}}],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"ParallelSow", "[", "expr_", "]"}], ":=", 
   RowBox[{"Sow", "[", "expr", "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"SetSharedFunction", "[", "ParallelSow", "]"}], ";"}]}], "Input"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"\[Delta]", "=", 
    FractionBox["1", "100"]}], ";"}], " "}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"d\[Omega]", "=", "0.0002"}], ";"}]}], "Input",
 CellChangeTimes->{{3.74228955582731*^9, 3.742289558498271*^9}, {
  3.742298662461986*^9, 3.742298684870023*^9}, {3.742298729927827*^9, 
  3.7422987328788557`*^9}, {3.742299426624055*^9, 3.742299459795083*^9}}],

Cell[CellGroupData[{

Cell["Charmonium s-wave ", "Subsubsection",
 CellChangeTimes->{{3.727415296394449*^9, 3.727415310980733*^9}, {
   3.727438974368733*^9, 3.7274389775611553`*^9}, {3.7274415699177094`*^9, 
   3.727441571125741*^9}, {3.745577449918088*^9, 3.745577465526945*^9}, {
   3.745642366824078*^9, 3.7456423814326763`*^9}, {3.7462676346228123`*^9, 
   3.746267638615415*^9}, 3.747887409622841*^9}],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"swaveccspectra", "[", "u_", "]"}], ":=", 
   RowBox[{"Block", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{"\[Alpha]", "=", 
        RowBox[{"\[Alpha]cont", "[", 
         RowBox[{"[", "1", "]"}], "]"}]}], ",", 
       RowBox[{"c", "=", 
        RowBox[{"ccont", "[", 
         RowBox[{"[", "1", "]"}], "]"}]}], ",", 
       RowBox[{"M", "=", "Mc"}], ",", 
       RowBox[{"l", "=", "0"}], ",", 
       RowBox[{"\[Omega]min", "=", 
        RowBox[{"-", "1"}]}], ",", 
       RowBox[{"\[Omega]max", "=", "2"}], ",", "ccss", ",", "inf", ",", 
       "\[Rho]table", ",", "\[Omega]", ",", "rhow", ",", "gr0", ",", "s1", 
       ",", "V"}], "}"}], ",", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{
       RowBox[{"V", "[", "r_", "]"}], ":=", 
       RowBox[{
        RowBox[{
         RowBox[{"ReVsu", "[", "u", "]"}], "[", "r", "]"}], "+", 
        RowBox[{
         RowBox[{"ReVcu", "[", "u", "]"}], "[", "r", "]"}], "+", 
        RowBox[{"\[ImaginaryI]", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{
            RowBox[{"ImVsu", "[", "u", "]"}], "[", "r", "]"}], "+", 
           RowBox[{
            RowBox[{"ImVcu", "[", "u", "]"}], "[", "r", "]"}]}], ")"}]}]}]}], 
      ";", "\[IndentingNewLine]", 
      RowBox[{"\[Rho]table", "=", 
       RowBox[{
        RowBox[{
         RowBox[{
          RowBox[{"ParallelDo", "[", 
           RowBox[{
            RowBox[{
             RowBox[{"\[Omega]", "=", 
              RowBox[{"\[Omega]min", "+", 
               RowBox[{
                RowBox[{"(", 
                 RowBox[{"it", "-", "1"}], ")"}], " ", "d\[Omega]", " ", 
                "M"}]}]}], ";", 
             RowBox[{"inf", "=", 
              RowBox[{"40", "+", 
               RowBox[{"500", "*", "it", "*", "d\[Omega]"}]}]}], ";", 
             "\[IndentingNewLine]", 
             RowBox[{"(*", 
              RowBox[{
               RowBox[{"s0", "=", 
                RowBox[{"NDSolve", "[", 
                 RowBox[{
                  RowBox[{"{", 
                   RowBox[{
                    RowBox[{
                    RowBox[{
                    RowBox[{
                    RowBox[{"(", 
                    RowBox[{"\[Omega]", "-", 
                    FractionBox[
                    RowBox[{"l", 
                    RowBox[{"(", 
                    RowBox[{"l", "+", "1"}], ")"}]}], 
                    RowBox[{"M", " ", 
                    SuperscriptBox["r", "2"]}]], "-", 
                    RowBox[{"Re", "[", 
                    RowBox[{"V", "[", "r", "]"}], "]"}], "+", 
                    RowBox[{"\[ImaginaryI]", " ", 
                    RowBox[{"Abs", "[", 
                    RowBox[{"Im", "[", 
                    RowBox[{"V", "[", "r", "]"}], "]"}], "]"}]}]}], ")"}], 
                    RowBox[{"gr", "[", "r", "]"}]}], "+", 
                    RowBox[{
                    FractionBox["1", "M"], 
                    RowBox[{
                    RowBox[{"gr", "''"}], "[", "r", "]"}]}]}], "\[Equal]", 
                    "0"}], ",", " ", "\[IndentingNewLine]", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"gr", "'"}], "[", "\[Delta]", "]"}], "\[Equal]", 
                    RowBox[{
                    RowBox[{"2", " ", "\[Delta]", 
                    SuperscriptBox[
                    RowBox[{"(", 
                    RowBox[{"\[Alpha]", " ", "M"}], ")"}], "2"]}], "-", 
                    RowBox[{
                    FractionBox["3", "4"], 
                    SuperscriptBox["\[Delta]", "2"], 
                    SuperscriptBox[
                    RowBox[{"(", 
                    RowBox[{"M", " ", "\[Alpha]"}], ")"}], "3"]}]}]}], ",", 
                    "\[IndentingNewLine]", " ", 
                    RowBox[{
                    RowBox[{"gr", "[", "\[Delta]", "]"}], "==", " ", 
                    RowBox[{
                    RowBox[{
                    SuperscriptBox["\[Delta]", "2"], 
                    SuperscriptBox[
                    RowBox[{"(", 
                    RowBox[{"\[Alpha]", " ", "M"}], ")"}], "2"]}], "-", 
                    RowBox[{
                    FractionBox["1", "4"], 
                    SuperscriptBox["\[Delta]", "3"], 
                    SuperscriptBox[
                    RowBox[{"(", 
                    RowBox[{"M", " ", "\[Alpha]"}], ")"}], "3"]}]}]}]}], 
                   "}"}], ",", "gr", ",", 
                  RowBox[{"{", 
                   RowBox[{"r", ",", "\[Delta]", ",", "inf"}], "}"}], ",", 
                  RowBox[{"PrecisionGoal", "\[Rule]", "10"}], ",", 
                  RowBox[{"MaxSteps", "\[Rule]", "1000000"}]}], "]"}]}], ";", 
               "\[IndentingNewLine]", 
               RowBox[{
                RowBox[{"gr1", "[", "r_", "]"}], "=", 
                SubscriptBox[
                 RowBox[{"(", 
                  RowBox[{
                   RowBox[{"gr", "[", "r", "]"}], "/.", "s0"}], ")"}], 
                 RowBox[{
                 "\[LeftDoubleBracket]", "1", "\[RightDoubleBracket]"}]]}], 
               ";"}], "*)"}], "\[IndentingNewLine]", 
             RowBox[{"s01", "=", 
              RowBox[{"NDSolve", "[", 
               RowBox[{
                RowBox[{"{", 
                 RowBox[{
                  RowBox[{
                   RowBox[{
                    RowBox[{
                    RowBox[{"(", 
                    RowBox[{"\[Omega]", "-", 
                    FractionBox[
                    RowBox[{"l", 
                    RowBox[{"(", 
                    RowBox[{"l", "+", "1"}], ")"}]}], 
                    RowBox[{"M", " ", 
                    SuperscriptBox["r", "2"]}]], "-", 
                    RowBox[{"Re", "[", 
                    RowBox[{"V", "[", "r", "]"}], "]"}], "+", 
                    RowBox[{"\[ImaginaryI]", " ", 
                    RowBox[{"Abs", "[", 
                    RowBox[{"Im", "[", 
                    RowBox[{"V", "[", "r", "]"}], "]"}], "]"}]}]}], ")"}], 
                    RowBox[{"gr", "[", "r", "]"}]}], "+", 
                    RowBox[{
                    FractionBox["1", "M"], 
                    RowBox[{
                    RowBox[{"gr", "''"}], "[", "r", "]"}]}]}], "\[Equal]", 
                   "0"}], ",", " ", "\[IndentingNewLine]", 
                  RowBox[{
                   RowBox[{
                    RowBox[{"gr", "'"}], "[", "\[Delta]", "]"}], "\[Equal]", 
                   RowBox[{
                    RowBox[{"(", 
                    RowBox[{"\[Alpha]", " ", "M"}], ")"}], "-", 
                    RowBox[{"\[Delta]", 
                    SuperscriptBox[
                    RowBox[{"(", 
                    RowBox[{"M", " ", "\[Alpha]"}], ")"}], "2"]}]}]}], ",", 
                  "\[IndentingNewLine]", " ", 
                  RowBox[{
                   RowBox[{"gr", "[", "\[Delta]", "]"}], "\[Equal]", 
                   RowBox[{
                    RowBox[{"\[Delta]", 
                    RowBox[{"(", 
                    RowBox[{"\[Alpha]", " ", "M"}], ")"}]}], "-", " ", 
                    RowBox[{
                    FractionBox["1", "2"], 
                    SuperscriptBox["\[Delta]", "2"], 
                    SuperscriptBox[
                    RowBox[{"(", 
                    RowBox[{"\[Alpha]", " ", "M"}], ")"}], "2"]}]}]}]}], 
                 "}"}], ",", "gr", ",", 
                RowBox[{"{", 
                 RowBox[{"r", ",", "\[Delta]", ",", "inf"}], "}"}]}], "]"}]}],
              ";", "\[IndentingNewLine]", 
             RowBox[{
              RowBox[{"gr0", "[", "r_", "]"}], "=", 
              SubscriptBox[
               RowBox[{"(", 
                RowBox[{
                 RowBox[{"gr", "[", "r", "]"}], "/.", "s01"}], ")"}], 
               RowBox[{
               "\[LeftDoubleBracket]", "1", "\[RightDoubleBracket]"}]]}], ";",
              "\[IndentingNewLine]", 
             RowBox[{"s1", "=", 
              RowBox[{"NDSolve", "[", 
               RowBox[{
                RowBox[{"{", 
                 RowBox[{
                  RowBox[{
                   RowBox[{
                    RowBox[{"rho", "'"}], "[", "x", "]"}], "\[Equal]", 
                   RowBox[{
                    RowBox[{"-", 
                    FractionBox[
                    RowBox[{" ", 
                    RowBox[{"6", " ", "Nc", " ", 
                    SuperscriptBox["M", "2"], " ", "\[Alpha]"}]}], 
                    RowBox[{"4", "\[Pi]"}]]}], 
                    RowBox[{"Im", "[", 
                    FractionBox["1", 
                    SuperscriptBox[
                    RowBox[{"(", 
                    RowBox[{"gr0", "[", "x", "]"}], ")"}], "2"]], 
                    RowBox[{"(*", 
                    RowBox[{"+", 
                    FractionBox["36", 
                    SuperscriptBox[
                    RowBox[{"(", 
                    RowBox[{"gr1", "[", "x", "]"}], ")"}], "2"]]}], "*)"}], 
                    "]"}]}]}], ",", 
                  RowBox[{
                   RowBox[{"rho", "[", "\[Delta]", "]"}], "\[Equal]", "0"}]}],
                  "}"}], ",", "rho", ",", 
                RowBox[{"{", 
                 RowBox[{"x", ",", "\[Delta]", ",", "inf"}], "}"}]}], "]"}]}],
              ";", "\[IndentingNewLine]", 
             RowBox[{
              RowBox[{"rhow", "[", "r_", "]"}], "=", 
              SubscriptBox[
               RowBox[{"(", 
                RowBox[{
                 RowBox[{"rho", "[", "r", "]"}], "/.", "s1"}], ")"}], 
               RowBox[{
               "\[LeftDoubleBracket]", "1", "\[RightDoubleBracket]"}]]}], ";",
              "\[IndentingNewLine]", 
             RowBox[{"ParallelSow", "[", 
              RowBox[{"{", 
               RowBox[{
                RowBox[{"\[Omega]", "+", 
                 RowBox[{"2", "M"}]}], ",", 
                RowBox[{"rhow", "[", "inf", "]"}]}], "}"}], "]"}]}], ",", 
            RowBox[{"{", 
             RowBox[{"it", ",", "1", ",", 
              FractionBox[
               RowBox[{"\[Omega]max", "-", "\[Omega]min"}], 
               RowBox[{"d\[Omega]", " ", "M"}]]}], "}"}]}], "]"}], "//", 
          "Reap"}], "//", "Last"}], "//", "First"}]}], ";", 
      "\[IndentingNewLine]", "\[IndentingNewLine]", 
      RowBox[{"ccss", "=", 
       RowBox[{"ParallelTable", "[", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{
           RowBox[{"\[Rho]table", "[", 
            RowBox[{"[", 
             RowBox[{"i", ",", "1"}], "]"}], "]"}], ",", 
           FractionBox[
            RowBox[{"-", 
             RowBox[{"\[Rho]table", "[", 
              RowBox[{"[", 
               RowBox[{"i", ",", "2"}], "]"}], "]"}]}], 
            SuperscriptBox[
             RowBox[{"\[Rho]table", "[", 
              RowBox[{"[", 
               RowBox[{"i", ",", "1"}], "]"}], "]"}], "2"]]}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"i", ",", "1", ",", 
           RowBox[{"Length", "[", "\[Rho]table", "]"}]}], "}"}]}], "]"}]}], 
      ";", "\[IndentingNewLine]", 
      RowBox[{"Export", "[", 
       RowBox[{
        RowBox[{"\"\<cc_perp/swccu\>\"", "<>", 
         RowBox[{"ToString", "[", 
          RowBox[{"Round", "[", 
           RowBox[{"10", "u"}], "]"}], "]"}], "<>", "\"\<spectra.dat\>\""}], 
        ",", 
        RowBox[{"Sort", "[", "ccss", "]"}]}], "]"}], ";"}]}], 
    "\[IndentingNewLine]", "]"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.724397604460712*^9, 3.724397621092863*^9}, {
   3.724398705481254*^9, 3.724398705798315*^9}, {3.72440624506767*^9, 
   3.7244062457361317`*^9}, {3.7244423136168756`*^9, 3.724442340980721*^9}, {
   3.7244423712224417`*^9, 3.724442377050403*^9}, {3.724442465925974*^9, 
   3.724442518695669*^9}, {3.7244426255599117`*^9, 3.724442639076613*^9}, {
   3.724443729204352*^9, 3.724443729749022*^9}, {3.724443881656342*^9, 
   3.7244438842850027`*^9}, 3.725261621115453*^9, 3.72526166634648*^9, {
   3.725271550289123*^9, 3.7252715504130163`*^9}, {3.725271609402791*^9, 
   3.7252716095188437`*^9}, {3.7252717762497*^9, 3.725271782362536*^9}, {
   3.725271824500347*^9, 3.725271826035269*^9}, {3.725271857701564*^9, 
   3.725271858192912*^9}, {3.725271928114049*^9, 3.7252719496618757`*^9}, {
   3.725271981807578*^9, 3.725271987122878*^9}, {3.725273718896678*^9, 
   3.72527377251343*^9}, {3.725273963159111*^9, 3.725273966198284*^9}, {
   3.725364382855975*^9, 3.725364384697238*^9}, {3.725364432753635*^9, 
   3.725364433681274*^9}, {3.725364595553596*^9, 3.725364595868292*^9}, {
   3.725364661141473*^9, 3.725364661301785*^9}, {3.725365068510941*^9, 
   3.7253650691073112`*^9}, {3.7256202924505177`*^9, 
   3.7256202938854313`*^9}, {3.7256265502253428`*^9, 3.725626559021003*^9}, {
   3.725798091627001*^9, 3.725798108963685*^9}, {3.725798150844287*^9, 
   3.725798156038417*^9}, {3.726312422974263*^9, 3.726312439922279*^9}, {
   3.726313778060986*^9, 3.726313794010726*^9}, {3.726313854887352*^9, 
   3.726313855417986*^9}, {3.726377533478507*^9, 3.726377535012369*^9}, {
   3.726379310729051*^9, 3.726379315935656*^9}, {3.726379351066524*^9, 
   3.7263793563685627`*^9}, 3.7263814533362722`*^9, {3.726468979312665*^9, 
   3.726469044993416*^9}, {3.726564279540083*^9, 3.726564288774165*^9}, {
   3.726564330005303*^9, 3.726564342424973*^9}, {3.7265645007454853`*^9, 
   3.7265645054085903`*^9}, 3.726565145221386*^9, {3.726836923420138*^9, 
   3.726836925204391*^9}, {3.7268417497448387`*^9, 3.726841749854889*^9}, {
   3.727357927216405*^9, 3.7273579306359463`*^9}, 3.72735811608375*^9, {
   3.7273582875862513`*^9, 3.727358296888235*^9}, {3.727520051444908*^9, 
   3.7275200665503483`*^9}, {3.727539483513708*^9, 3.72753949210455*^9}, {
   3.7275398377710333`*^9, 3.727539869000495*^9}, {3.7275879806550293`*^9, 
   3.727587984698921*^9}, {3.727606150288821*^9, 3.727606150994812*^9}, {
   3.728932814314426*^9, 3.728932860160056*^9}, 3.7289333254815903`*^9, 
   3.7299208725344887`*^9, {3.730007040539275*^9, 3.7300070509717903`*^9}, {
   3.730007357183831*^9, 3.7300073662633142`*^9}, {3.7331192829046183`*^9, 
   3.733119300197537*^9}, {3.733120717385792*^9, 3.733120717697629*^9}, {
   3.7331222711038847`*^9, 3.733122272703622*^9}, {3.733211538849382*^9, 
   3.7332115515038567`*^9}, {3.7332289443370447`*^9, 
   3.7332289447842827`*^9}, {3.742215948846467*^9, 3.742215959437643*^9}, {
   3.742216025305929*^9, 3.742216093257207*^9}, {3.7422172078868933`*^9, 
   3.7422172275906973`*^9}, 3.74221727383118*^9, {3.742217585069265*^9, 
   3.742217591716959*^9}, {3.7422176229823923`*^9, 3.742217653035615*^9}, {
   3.742269341112874*^9, 3.742269371527761*^9}, 3.742275694936644*^9, {
   3.742289467062118*^9, 3.742289486771803*^9}, {3.742289520463562*^9, 
   3.7422896027136*^9}, {3.7422896364561243`*^9, 3.74228964347093*^9}, {
   3.742289678232355*^9, 3.742289708137301*^9}, {3.7422897506101*^9, 
   3.7422897587096577`*^9}, {3.7422920316457787`*^9, 3.742292034487727*^9}, 
   3.742292186682322*^9, {3.742292303240778*^9, 3.742292303483521*^9}, {
   3.742292362481593*^9, 3.742292372544711*^9}, {3.742292408813004*^9, 
   3.742292447857381*^9}, {3.7422968206130743`*^9, 3.742296843480155*^9}, {
   3.7422970160890417`*^9, 3.742297024417719*^9}, {3.742297074890059*^9, 
   3.74229711910509*^9}, {3.7422973083294992`*^9, 3.742297309298213*^9}, {
   3.742297354168077*^9, 3.742297359897736*^9}, {3.742297415918168*^9, 
   3.7422974232482452`*^9}, {3.742297467739311*^9, 3.742297612963316*^9}, {
   3.7422977860232887`*^9, 3.7422977903561068`*^9}, {3.74229798181938*^9, 
   3.742298023677857*^9}, {3.7422980561712513`*^9, 3.74229805925661*^9}, 
   3.742298106308654*^9, {3.742300221204397*^9, 3.742300269720365*^9}, {
   3.742300416216001*^9, 3.742300416917211*^9}, {3.742300536315893*^9, 
   3.742300546756034*^9}, {3.742300626604027*^9, 3.742300638323701*^9}, {
   3.7423006769018583`*^9, 3.7423007163572683`*^9}, {3.7435037431402884`*^9, 
   3.743503799356997*^9}, {3.7435038425347443`*^9, 3.743503908279688*^9}, {
   3.7435046316079397`*^9, 3.743504651390107*^9}, 3.745326235801956*^9, {
   3.745577559422867*^9, 3.745577586968154*^9}, {3.745580528080043*^9, 
   3.74558059234057*^9}, {3.745580690187639*^9, 3.745580708875317*^9}, {
   3.745642437900836*^9, 3.745642442612089*^9}, {3.745642493682754*^9, 
   3.7456425382868767`*^9}, {3.74627352599397*^9, 3.7462735295622587`*^9}, {
   3.7462736076039886`*^9, 3.7462736659082212`*^9}, {3.746273697621533*^9, 
   3.746273736166617*^9}, {3.7462741385800743`*^9, 3.746274142868767*^9}, {
   3.746274228830742*^9, 3.746274248310967*^9}, {3.7462743303367853`*^9, 
   3.7462743498486643`*^9}, {3.746274405954569*^9, 3.746274407722952*^9}, {
   3.74627803681008*^9, 3.746278037153131*^9}, {3.747887414650214*^9, 
   3.747887423938949*^9}, {3.7481674233164043`*^9, 3.7481674506752663`*^9}, {
   3.749554891486802*^9, 3.749554922961441*^9}, {3.749555089233777*^9, 
   3.749555119969118*^9}, {3.749563528737471*^9, 3.7495636549318132`*^9}, {
   3.749582048761517*^9, 3.749582052529887*^9}, 3.749646995985099*^9, 
   3.749655798300173*^9, 3.74970789643521*^9, {3.749744066808496*^9, 
   3.749744072526161*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"swavebbspectra", "[", "u_", "]"}], ":=", 
   RowBox[{"Block", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{"\[Alpha]", "=", 
        RowBox[{"\[Alpha]cont", "[", 
         RowBox[{"[", "1", "]"}], "]"}]}], ",", 
       RowBox[{"c", "=", 
        RowBox[{"ccont", "[", 
         RowBox[{"[", "1", "]"}], "]"}]}], ",", 
       RowBox[{"M", "=", "Mb"}], ",", 
       RowBox[{"l", "=", "0"}], ",", 
       RowBox[{"\[Omega]min", "=", 
        RowBox[{"-", "1"}]}], ",", 
       RowBox[{"\[Omega]max", "=", "3"}], ",", "ccss", ",", "inf", ",", 
       "\[Rho]table", ",", "\[Omega]", ",", "rhow", ",", "gr0", ",", "s1", 
       ",", "V"}], "}"}], ",", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{
       RowBox[{"V", "[", "r_", "]"}], ":=", 
       RowBox[{
        RowBox[{
         RowBox[{"ReVsu", "[", "u", "]"}], "[", "r", "]"}], "+", 
        RowBox[{
         RowBox[{"ReVcu", "[", "u", "]"}], "[", "r", "]"}], "+", 
        RowBox[{"\[ImaginaryI]", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{
            RowBox[{"ImVsu", "[", "u", "]"}], "[", "r", "]"}], "+", 
           RowBox[{
            RowBox[{"ImVcu", "[", "u", "]"}], "[", "r", "]"}]}], ")"}]}]}]}], 
      ";", "\[IndentingNewLine]", 
      RowBox[{"\[Rho]table", "=", 
       RowBox[{
        RowBox[{
         RowBox[{
          RowBox[{"ParallelDo", "[", 
           RowBox[{
            RowBox[{
             RowBox[{"\[Omega]", "=", 
              RowBox[{"\[Omega]min", "+", 
               RowBox[{
                RowBox[{"(", 
                 RowBox[{"it", "-", "1"}], ")"}], " ", "d\[Omega]", " ", 
                "M"}]}]}], ";", 
             RowBox[{"inf", "=", 
              RowBox[{"40", "+", 
               RowBox[{"500", "*", "it", "*", "d\[Omega]"}]}]}], ";", 
             "\[IndentingNewLine]", 
             RowBox[{"(*", 
              RowBox[{
               RowBox[{"s0", "=", 
                RowBox[{"NDSolve", "[", 
                 RowBox[{
                  RowBox[{"{", 
                   RowBox[{
                    RowBox[{
                    RowBox[{
                    RowBox[{
                    RowBox[{"(", 
                    RowBox[{"\[Omega]", "-", 
                    FractionBox[
                    RowBox[{"l", 
                    RowBox[{"(", 
                    RowBox[{"l", "+", "1"}], ")"}]}], 
                    RowBox[{"M", " ", 
                    SuperscriptBox["r", "2"]}]], "-", 
                    RowBox[{"Re", "[", 
                    RowBox[{"V", "[", "r", "]"}], "]"}], "+", 
                    RowBox[{"\[ImaginaryI]", " ", 
                    RowBox[{"Abs", "[", 
                    RowBox[{"Im", "[", 
                    RowBox[{"V", "[", "r", "]"}], "]"}], "]"}]}]}], ")"}], 
                    RowBox[{"gr", "[", "r", "]"}]}], "+", 
                    RowBox[{
                    FractionBox["1", "M"], 
                    RowBox[{
                    RowBox[{"gr", "''"}], "[", "r", "]"}]}]}], "\[Equal]", 
                    "0"}], ",", " ", "\[IndentingNewLine]", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"gr", "'"}], "[", "\[Delta]", "]"}], "\[Equal]", 
                    RowBox[{
                    RowBox[{"2", " ", "\[Delta]", 
                    SuperscriptBox[
                    RowBox[{"(", 
                    RowBox[{"\[Alpha]", " ", "M"}], ")"}], "2"]}], "-", 
                    RowBox[{
                    FractionBox["3", "4"], 
                    SuperscriptBox["\[Delta]", "2"], 
                    SuperscriptBox[
                    RowBox[{"(", 
                    RowBox[{"M", " ", "\[Alpha]"}], ")"}], "3"]}]}]}], ",", 
                    "\[IndentingNewLine]", " ", 
                    RowBox[{
                    RowBox[{"gr", "[", "\[Delta]", "]"}], "==", " ", 
                    RowBox[{
                    RowBox[{
                    SuperscriptBox["\[Delta]", "2"], 
                    SuperscriptBox[
                    RowBox[{"(", 
                    RowBox[{"\[Alpha]", " ", "M"}], ")"}], "2"]}], "-", 
                    RowBox[{
                    FractionBox["1", "4"], 
                    SuperscriptBox["\[Delta]", "3"], 
                    SuperscriptBox[
                    RowBox[{"(", 
                    RowBox[{"M", " ", "\[Alpha]"}], ")"}], "3"]}]}]}]}], 
                   "}"}], ",", "gr", ",", 
                  RowBox[{"{", 
                   RowBox[{"r", ",", "\[Delta]", ",", "inf"}], "}"}], ",", 
                  RowBox[{"PrecisionGoal", "\[Rule]", "10"}], ",", 
                  RowBox[{"MaxSteps", "\[Rule]", "1000000"}]}], "]"}]}], ";", 
               "\[IndentingNewLine]", 
               RowBox[{
                RowBox[{"gr1", "[", "r_", "]"}], "=", 
                SubscriptBox[
                 RowBox[{"(", 
                  RowBox[{
                   RowBox[{"gr", "[", "r", "]"}], "/.", "s0"}], ")"}], 
                 RowBox[{
                 "\[LeftDoubleBracket]", "1", "\[RightDoubleBracket]"}]]}], 
               ";"}], "*)"}], "\[IndentingNewLine]", 
             RowBox[{"s01", "=", 
              RowBox[{"NDSolve", "[", 
               RowBox[{
                RowBox[{"{", 
                 RowBox[{
                  RowBox[{
                   RowBox[{
                    RowBox[{
                    RowBox[{"(", 
                    RowBox[{"\[Omega]", "-", 
                    FractionBox[
                    RowBox[{"l", 
                    RowBox[{"(", 
                    RowBox[{"l", "+", "1"}], ")"}]}], 
                    RowBox[{"M", " ", 
                    SuperscriptBox["r", "2"]}]], "-", 
                    RowBox[{"Re", "[", 
                    RowBox[{"V", "[", "r", "]"}], "]"}], "+", 
                    RowBox[{"\[ImaginaryI]", " ", 
                    RowBox[{"Abs", "[", 
                    RowBox[{"Im", "[", 
                    RowBox[{"V", "[", "r", "]"}], "]"}], "]"}]}]}], ")"}], 
                    RowBox[{"gr", "[", "r", "]"}]}], "+", 
                    RowBox[{
                    FractionBox["1", "M"], 
                    RowBox[{
                    RowBox[{"gr", "''"}], "[", "r", "]"}]}]}], "\[Equal]", 
                   "0"}], ",", " ", "\[IndentingNewLine]", 
                  RowBox[{
                   RowBox[{
                    RowBox[{"gr", "'"}], "[", "\[Delta]", "]"}], "\[Equal]", 
                   RowBox[{
                    RowBox[{"(", 
                    RowBox[{"\[Alpha]", " ", "M"}], ")"}], "-", 
                    RowBox[{"\[Delta]", 
                    SuperscriptBox[
                    RowBox[{"(", 
                    RowBox[{"M", " ", "\[Alpha]"}], ")"}], "2"]}]}]}], ",", 
                  "\[IndentingNewLine]", " ", 
                  RowBox[{
                   RowBox[{"gr", "[", "\[Delta]", "]"}], "\[Equal]", 
                   RowBox[{
                    RowBox[{"\[Delta]", 
                    RowBox[{"(", 
                    RowBox[{"\[Alpha]", " ", "M"}], ")"}]}], "-", " ", 
                    RowBox[{
                    FractionBox["1", "2"], 
                    SuperscriptBox["\[Delta]", "2"], 
                    SuperscriptBox[
                    RowBox[{"(", 
                    RowBox[{"\[Alpha]", " ", "M"}], ")"}], "2"]}]}]}]}], 
                 "}"}], ",", "gr", ",", 
                RowBox[{"{", 
                 RowBox[{"r", ",", "\[Delta]", ",", "inf"}], "}"}]}], "]"}]}],
              ";", "\[IndentingNewLine]", 
             RowBox[{
              RowBox[{"gr0", "[", "r_", "]"}], "=", 
              SubscriptBox[
               RowBox[{"(", 
                RowBox[{
                 RowBox[{"gr", "[", "r", "]"}], "/.", "s01"}], ")"}], 
               RowBox[{
               "\[LeftDoubleBracket]", "1", "\[RightDoubleBracket]"}]]}], ";",
              "\[IndentingNewLine]", 
             RowBox[{"s1", "=", 
              RowBox[{"NDSolve", "[", 
               RowBox[{
                RowBox[{"{", 
                 RowBox[{
                  RowBox[{
                   RowBox[{
                    RowBox[{"rho", "'"}], "[", "x", "]"}], "\[Equal]", 
                   RowBox[{
                    RowBox[{"-", 
                    FractionBox[
                    RowBox[{" ", 
                    RowBox[{"6", " ", "Nc", " ", 
                    SuperscriptBox["M", "2"], " ", "\[Alpha]"}]}], 
                    RowBox[{"4", "\[Pi]"}]]}], 
                    RowBox[{"Im", "[", 
                    FractionBox["1", 
                    SuperscriptBox[
                    RowBox[{"(", 
                    RowBox[{"gr0", "[", "x", "]"}], ")"}], "2"]], 
                    RowBox[{"(*", 
                    RowBox[{"+", 
                    FractionBox["36", 
                    SuperscriptBox[
                    RowBox[{"(", 
                    RowBox[{"gr1", "[", "x", "]"}], ")"}], "2"]]}], "*)"}], 
                    "]"}]}]}], ",", 
                  RowBox[{
                   RowBox[{"rho", "[", "\[Delta]", "]"}], "\[Equal]", "0"}]}],
                  "}"}], ",", "rho", ",", 
                RowBox[{"{", 
                 RowBox[{"x", ",", "\[Delta]", ",", "inf"}], "}"}]}], "]"}]}],
              ";", "\[IndentingNewLine]", 
             RowBox[{
              RowBox[{"rhow", "[", "r_", "]"}], "=", 
              SubscriptBox[
               RowBox[{"(", 
                RowBox[{
                 RowBox[{"rho", "[", "r", "]"}], "/.", "s1"}], ")"}], 
               RowBox[{
               "\[LeftDoubleBracket]", "1", "\[RightDoubleBracket]"}]]}], ";",
              "\[IndentingNewLine]", 
             RowBox[{"ParallelSow", "[", 
              RowBox[{"{", 
               RowBox[{
                RowBox[{"\[Omega]", "+", 
                 RowBox[{"2", "M"}]}], ",", 
                RowBox[{"rhow", "[", "inf", "]"}]}], "}"}], "]"}]}], ",", 
            RowBox[{"{", 
             RowBox[{"it", ",", "1", ",", 
              FractionBox[
               RowBox[{"\[Omega]max", "-", "\[Omega]min"}], 
               RowBox[{"d\[Omega]", " ", "M"}]]}], "}"}]}], "]"}], "//", 
          "Reap"}], "//", "Last"}], "//", "First"}]}], ";", 
      "\[IndentingNewLine]", "\[IndentingNewLine]", 
      RowBox[{"ccss", "=", 
       RowBox[{"ParallelTable", "[", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{
           RowBox[{"\[Rho]table", "[", 
            RowBox[{"[", 
             RowBox[{"i", ",", "1"}], "]"}], "]"}], ",", 
           FractionBox[
            RowBox[{"-", 
             RowBox[{"\[Rho]table", "[", 
              RowBox[{"[", 
               RowBox[{"i", ",", "2"}], "]"}], "]"}]}], 
            SuperscriptBox[
             RowBox[{"\[Rho]table", "[", 
              RowBox[{"[", 
               RowBox[{"i", ",", "1"}], "]"}], "]"}], "2"]]}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"i", ",", "1", ",", 
           RowBox[{"Length", "[", "\[Rho]table", "]"}]}], "}"}]}], "]"}]}], 
      ";", "\[IndentingNewLine]", 
      RowBox[{"Export", "[", 
       RowBox[{
        RowBox[{"\"\<bb_perp/swbbu\>\"", "<>", 
         RowBox[{"ToString", "[", 
          RowBox[{"Round", "[", 
           RowBox[{"10", "u"}], "]"}], "]"}], "<>", "\"\<spectra.dat\>\""}], 
        ",", 
        RowBox[{"Sort", "[", "ccss", "]"}]}], "]"}], ";"}]}], 
    "\[IndentingNewLine]", "]"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.724397604460712*^9, 3.724397621092863*^9}, {
   3.724398705481254*^9, 3.724398705798315*^9}, {3.72440624506767*^9, 
   3.7244062457361317`*^9}, {3.7244423136168756`*^9, 3.724442340980721*^9}, {
   3.7244423712224417`*^9, 3.724442377050403*^9}, {3.724442465925974*^9, 
   3.724442518695669*^9}, {3.7244426255599117`*^9, 3.724442639076613*^9}, {
   3.724443729204352*^9, 3.724443729749022*^9}, {3.724443881656342*^9, 
   3.7244438842850027`*^9}, 3.725261621115453*^9, 3.72526166634648*^9, {
   3.725271550289123*^9, 3.7252715504130163`*^9}, {3.725271609402791*^9, 
   3.7252716095188437`*^9}, {3.7252717762497*^9, 3.725271782362536*^9}, {
   3.725271824500347*^9, 3.725271826035269*^9}, {3.725271857701564*^9, 
   3.725271858192912*^9}, {3.725271928114049*^9, 3.7252719496618757`*^9}, {
   3.725271981807578*^9, 3.725271987122878*^9}, {3.725273718896678*^9, 
   3.72527377251343*^9}, {3.725273963159111*^9, 3.725273966198284*^9}, {
   3.725364382855975*^9, 3.725364384697238*^9}, {3.725364432753635*^9, 
   3.725364433681274*^9}, {3.725364595553596*^9, 3.725364595868292*^9}, {
   3.725364661141473*^9, 3.725364661301785*^9}, {3.725365068510941*^9, 
   3.7253650691073112`*^9}, {3.7256202924505177`*^9, 
   3.7256202938854313`*^9}, {3.7256265502253428`*^9, 3.725626559021003*^9}, {
   3.725798091627001*^9, 3.725798108963685*^9}, {3.725798150844287*^9, 
   3.725798156038417*^9}, {3.726312422974263*^9, 3.726312439922279*^9}, {
   3.726313778060986*^9, 3.726313794010726*^9}, {3.726313854887352*^9, 
   3.726313855417986*^9}, {3.726377533478507*^9, 3.726377535012369*^9}, {
   3.726379310729051*^9, 3.726379315935656*^9}, {3.726379351066524*^9, 
   3.7263793563685627`*^9}, 3.7263814533362722`*^9, {3.726468979312665*^9, 
   3.726469044993416*^9}, {3.726564279540083*^9, 3.726564288774165*^9}, {
   3.726564330005303*^9, 3.726564342424973*^9}, {3.7265645007454853`*^9, 
   3.7265645054085903`*^9}, 3.726565145221386*^9, {3.726836923420138*^9, 
   3.726836925204391*^9}, {3.7268417497448387`*^9, 3.726841749854889*^9}, {
   3.727357927216405*^9, 3.7273579306359463`*^9}, 3.72735811608375*^9, {
   3.7273582875862513`*^9, 3.727358296888235*^9}, {3.727520051444908*^9, 
   3.7275200665503483`*^9}, {3.727539483513708*^9, 3.72753949210455*^9}, {
   3.7275398377710333`*^9, 3.727539869000495*^9}, {3.7275879806550293`*^9, 
   3.727587984698921*^9}, {3.727606150288821*^9, 3.727606150994812*^9}, {
   3.728932814314426*^9, 3.728932860160056*^9}, 3.7289333254815903`*^9, 
   3.7299208725344887`*^9, {3.730007040539275*^9, 3.7300070509717903`*^9}, {
   3.730007357183831*^9, 3.7300073662633142`*^9}, {3.7331192829046183`*^9, 
   3.733119300197537*^9}, {3.733120717385792*^9, 3.733120717697629*^9}, {
   3.7331222711038847`*^9, 3.733122272703622*^9}, {3.733211538849382*^9, 
   3.7332115515038567`*^9}, {3.7332289443370447`*^9, 
   3.7332289447842827`*^9}, {3.742215948846467*^9, 3.742215959437643*^9}, {
   3.742216025305929*^9, 3.742216093257207*^9}, {3.7422172078868933`*^9, 
   3.7422172275906973`*^9}, 3.74221727383118*^9, {3.742217585069265*^9, 
   3.742217591716959*^9}, {3.7422176229823923`*^9, 3.742217653035615*^9}, {
   3.742269341112874*^9, 3.742269371527761*^9}, 3.742275694936644*^9, {
   3.742289467062118*^9, 3.742289486771803*^9}, {3.742289520463562*^9, 
   3.7422896027136*^9}, {3.7422896364561243`*^9, 3.74228964347093*^9}, {
   3.742289678232355*^9, 3.742289708137301*^9}, {3.7422897506101*^9, 
   3.7422897587096577`*^9}, {3.7422920316457787`*^9, 3.742292034487727*^9}, 
   3.742292186682322*^9, {3.742292303240778*^9, 3.742292303483521*^9}, {
   3.742292362481593*^9, 3.742292372544711*^9}, {3.742292408813004*^9, 
   3.742292447857381*^9}, {3.7422968206130743`*^9, 3.742296843480155*^9}, {
   3.7422970160890417`*^9, 3.742297024417719*^9}, {3.742297074890059*^9, 
   3.74229711910509*^9}, {3.7422973083294992`*^9, 3.742297309298213*^9}, {
   3.742297354168077*^9, 3.742297359897736*^9}, {3.742297415918168*^9, 
   3.7422974232482452`*^9}, {3.742297467739311*^9, 3.742297612963316*^9}, {
   3.7422977860232887`*^9, 3.7422977903561068`*^9}, {3.74229798181938*^9, 
   3.742298023677857*^9}, {3.7422980561712513`*^9, 3.74229805925661*^9}, 
   3.742298106308654*^9, {3.742300221204397*^9, 3.742300269720365*^9}, {
   3.742300416216001*^9, 3.742300416917211*^9}, {3.742300536315893*^9, 
   3.742300546756034*^9}, {3.742300626604027*^9, 3.742300638323701*^9}, {
   3.7423006769018583`*^9, 3.7423007163572683`*^9}, {3.7435037431402884`*^9, 
   3.743503799356997*^9}, {3.7435038425347443`*^9, 3.743503908279688*^9}, {
   3.7435046316079397`*^9, 3.743504651390107*^9}, 3.745326235801956*^9, {
   3.745577559422867*^9, 3.745577586968154*^9}, {3.745580528080043*^9, 
   3.74558059234057*^9}, {3.745580690187639*^9, 3.745580708875317*^9}, {
   3.745642437900836*^9, 3.745642442612089*^9}, {3.745642493682754*^9, 
   3.7456425382868767`*^9}, {3.74627352599397*^9, 3.7462735295622587`*^9}, {
   3.7462736076039886`*^9, 3.7462736659082212`*^9}, {3.746273697621533*^9, 
   3.746273736166617*^9}, {3.7462741385800743`*^9, 3.746274142868767*^9}, {
   3.746274228830742*^9, 3.746274248310967*^9}, {3.7462743303367853`*^9, 
   3.7462743498486643`*^9}, {3.746274405954569*^9, 3.746274407722952*^9}, {
   3.74627803681008*^9, 3.746278037153131*^9}, {3.747887414650214*^9, 
   3.747887423938949*^9}, {3.7481674233164043`*^9, 3.7481674506752663`*^9}, {
   3.749554891486802*^9, 3.749554922961441*^9}, {3.749555089233777*^9, 
   3.749555119969118*^9}, {3.749563528737471*^9, 3.749563698164156*^9}, {
   3.7495820574614897`*^9, 3.7495820644251413`*^9}, 3.749647000976673*^9, 
   3.749655814196288*^9, 3.749707901411079*^9, {3.7497440800646772`*^9, 
   3.749744085812707*^9}}],

Cell[BoxData[
 RowBox[{"Do", "[", 
  RowBox[{
   RowBox[{"swaveccspectra", "[", "i", "]"}], ",", 
   RowBox[{"{", 
    RowBox[{"i", ",", "1", ",", "10"}], "}"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.7495637296427507`*^9, 3.749563746945018*^9}, {
   3.749582085731986*^9, 3.749582087572069*^9}, 3.749707913288418*^9, 
   3.7497440934213963`*^9}],

Cell[BoxData[
 RowBox[{"Do", "[", 
  RowBox[{
   RowBox[{"swavebbspectra", "[", "i", "]"}], ",", 
   RowBox[{"{", 
    RowBox[{"i", ",", "1", ",", "10"}], "}"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.749563819049761*^9, 3.749563825209613*^9}, {
  3.749582089723975*^9, 3.749582090091939*^9}}]
}, Open  ]]
}, Open  ]]
}, Open  ]]
},
WindowSize->{1115, 1012},
WindowMargins->{{2, Automatic}, {4, Automatic}},
FrontEndVersion->"11.0 for Linux x86 (64-bit) (September 21, 2016)",
StyleDefinitions->"Default.nb"
]
(* End of Notebook Content *)

(* Internal cache information *)
(*CellTagsOutline
CellTagsIndex->{}
*)
(*CellTagsIndex
CellTagsIndex->{}
*)
(*NotebookFileOutline
Notebook[{
Cell[558, 20, 191, 4, 34, "Input"],
Cell[CellGroupData[{
Cell[774, 28, 207, 3, 65, "Section"],
Cell[984, 33, 17342, 501, 1007, "Input"]
}, Closed]],
Cell[CellGroupData[{
Cell[18363, 539, 267, 4, 51, "Section"],
Cell[18633, 545, 1641, 50, 264, "Input"],
Cell[20277, 597, 2585, 81, 154, "Input"],
Cell[CellGroupData[{
Cell[22887, 682, 101, 1, 45, "Subsection"],
Cell[22991, 685, 2687, 80, 252, "Input"],
Cell[25681, 767, 4000, 93, 145, "Input"],
Cell[29684, 862, 4224, 112, 286, "Input"]
}, Open  ]],
Cell[CellGroupData[{
Cell[33945, 979, 175, 2, 45, "Subsection"],
Cell[CellGroupData[{
Cell[34145, 985, 101, 1, 35, "Subsubsection"],
Cell[34249, 988, 1719, 43, 134, "Input"],
Cell[CellGroupData[{
Cell[35993, 1035, 403, 11, 34, "Input"],
Cell[36399, 1048, 185, 4, 34, "Output"]
}, Open  ]],
Cell[36599, 1055, 5751, 147, 415, "Input"],
Cell[CellGroupData[{
Cell[42375, 1206, 371, 10, 34, "Input"],
Cell[42749, 1218, 189, 4, 34, "Output"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[42987, 1228, 156, 2, 35, "Subsubsection"],
Cell[43146, 1232, 10908, 257, 854, "Input"],
Cell[CellGroupData[{
Cell[54079, 1493, 349, 9, 34, "Input"],
Cell[54431, 1504, 263, 7, 37, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[54731, 1516, 1373, 36, 75, "Input"],
Cell[56107, 1554, 1103, 26, 53, "Output"]
}, Open  ]],
Cell[57225, 1583, 2108, 54, 176, "Input"],
Cell[CellGroupData[{
Cell[59358, 1641, 410, 8, 34, "Input"],
Cell[59771, 1651, 332, 6, 37, "Output"]
}, Open  ]]
}, Open  ]]
}, Closed]],
Cell[CellGroupData[{
Cell[60164, 1664, 139, 2, 36, "Subsection"],
Cell[60306, 1668, 5912, 122, 228, "Input"],
Cell[66221, 1792, 6229, 132, 270, "Input"]
}, Closed]],
Cell[CellGroupData[{
Cell[72487, 1929, 152, 2, 37, "Subsection"],
Cell[CellGroupData[{
Cell[72664, 1935, 455, 13, 34, "Input"],
Cell[73122, 1950, 544, 15, 48, "Output"]
}, Open  ]],
Cell[73681, 1968, 843, 21, 34, "Input"],
Cell[CellGroupData[{
Cell[74549, 1993, 1038, 27, 79, "Input"],
Cell[75590, 2022, 77, 1, 32, "Output"]
}, Open  ]],
Cell[75682, 2026, 2769, 69, 230, "Input"],
Cell[CellGroupData[{
Cell[78476, 2099, 351, 8, 34, "Input"],
Cell[78830, 2109, 77, 1, 32, "Output"]
}, Open  ]],
Cell[78922, 2113, 2486, 61, 171, "Input"],
Cell[81411, 2176, 305, 8, 34, "Input"]
}, Closed]]
}, Open  ]],
Cell[CellGroupData[{
Cell[81765, 2190, 100, 1, 65, "Section"],
Cell[CellGroupData[{
Cell[81890, 2195, 502, 14, 34, "Input"],
Cell[82395, 2211, 618, 16, 48, "Output"]
}, Open  ]],
Cell[83028, 2230, 2303, 51, 80, "Input"],
Cell[85334, 2283, 1513, 40, 80, "Input"],
Cell[86850, 2325, 2143, 55, 103, "Input"],
Cell[88996, 2382, 1541, 41, 80, "Input"],
Cell[90540, 2425, 1251, 35, 80, "Input"],
Cell[91794, 2462, 618, 12, 34, "Input"],
Cell[CellGroupData[{
Cell[92437, 2478, 542, 12, 34, "Input"],
Cell[92982, 2492, 445, 6, 32, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[93464, 2503, 3466, 84, 192, "Input"],
Cell[96933, 2589, 266192, 4653, 1015, 160713, 2923, "CachedBoxData", \
"BoxData", "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[363162, 7247, 3347, 82, 192, "Input"],
Cell[366512, 7331, 147350, 2703, 1015, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[513899, 10039, 2910, 80, 192, "Input"],
Cell[516812, 10121, 112332, 2108, 1015, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[629181, 12234, 3046, 81, 192, "Input"],
Cell[632230, 12317, 261255, 4546, 1015, 161368, 2907, "CachedBoxData", \
"BoxData", "Output"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[893534, 16869, 141, 2, 65, "Section"],
Cell[CellGroupData[{
Cell[893700, 16875, 95, 1, 44, "Subsection"],
Cell[893798, 16878, 246, 6, 57, "Input"],
Cell[894047, 16886, 412, 9, 76, "Input"],
Cell[CellGroupData[{
Cell[894484, 16899, 385, 5, 35, "Subsubsection"],
Cell[894872, 16906, 17108, 354, 625, "Input"],
Cell[911983, 17262, 17113, 354, 625, "Input"],
Cell[929099, 17618, 348, 8, 34, "Input"],
Cell[929450, 17628, 295, 7, 34, "Input"]
}, Open  ]]
}, Open  ]]
}, Open  ]]
}
]
*)

